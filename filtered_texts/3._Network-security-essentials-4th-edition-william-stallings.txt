NETWORK SECURITY
ESSENTIALS:
APPLICATIONS AND STANDARDS
FOURTH EDITION
[Word Count: 8]

Prentice Hall
Boston
Columbus
Indianapolis
New York
San Francisco
Upper Saddle River
Amsterdam
Cape Town
Dubai
London
Madrid
Milan
Munich
Paris
Montreal
Toronto
Delhi
Mexico City
Sao Paulo
Sydney
Hong Kong
Seoul
Singapore
Taipei
Tokyo
[Word Count: 35]

Vice President and Editorial Director, ECS:
Marcia J. Horton
Editor in Chief, Computer Science: Michael 
Hirsch
Executive Editor: Tracy Dunkelberger
Assistant Editor: Melinda Haggerty
Editorial Assistant: Allison Michael
[Word Count: 28]

Managing Editor: Scott Disanno
Production Manager: Wanda Rockwell
Art Director: Jayne Conte
Cover Designer: Bruce Kenselaar
Cover Art: Shutterstock 
Art Editor: Greg Dulles
[Word Count: 23]

Copyright © 2011 Pearson Education, Inc., publishing as [Prentice Hall, 1 Lake Street, Upper Saddle
River, NJ 07458].All rights reserved. Manufactured in the United States of America.This publication is protected
by Copyright, and permission should be obtained from the publisher prior to any prohibited reproduction, storage
in a retrieval system, or transmission in any form or by any means, electronic, mechanical, photocopying,
recording, or likewise.To obtain permission(s) to use material from this work, please submit a written request to
Pearson Education, Inc., Permissions Department, [imprint permissions address].
[Word Count: 87]

Many of the designations by manufacturers and seller to distinguish their products are claimed as trademarks.
Where those designations appear in this book, and the publisher was aware of a trademark claim, the
designations have been printed in initial caps or all caps.
[Word Count: 43]

Library of Congress Cataloging-in-Publication Data
[Word Count: 5]

ISBN 10:
0-13-610805-9
ISBN 13: 978-0-13-610805-4
[Word Count: 6]

To Antigone 
never dull 
never boring 
always a Sage
[Word Count: 9]

1.1
Computer Security Concepts 3
1.2
The OSI Security Architecture 8
1.3
Security Attacks 9
1.4
Security Services 13
1.5
Security Mechanisms 16
1.6
A Model for Network Security 19
1.7
Standards 21
1.8
Outline of This Book 21
1.9
Recommended Reading 22
1.10
Internet and Web Resources 23
1.11
Key Terms, Review Questions, and Problems 25
[Word Count: 57]

Chapter 2
Symmetric Encryption and Message Confidentiality 27
[Word Count: 8]

2.1
Symmetric Encryption Principles 28
2.2
Symmetric Block Encryption Algorithms 34
2.3
Random and Pseudorandom Numbers 42
2.4
Stream Ciphers and RC4 45
2.5
Cipher Block Modes of Operation 50
2.6
Recommended Reading and Web Sites 55
2.7
Key Terms, Review Questions, and Problems 56
Chapter 3
Public-Key Cryptography and Message Authentication 61
[Word Count: 53]

3.1
Approaches to Message Authentication 62
3.2
Secure Hash Functions 67
3.3
Message Authentication Codes 73
3.4
Public-Key Cryptography Principles 79
3.5
Public-Key Cryptography Algorithms 83
3.6
Digital Signatures 90
3.7
Recommended Reading and Web Sites 90
3.8
Key Terms, Review Questions, and Problems 91
[Word Count: 45]

PART TWO NETWORK SECURITY APPLICATIONS 97
[Word Count: 6]

Chapter 4
Key Distribution and User Authentication 97
[Word Count: 8]

4.1
Symmetric Key Distribution Using Symmetric Encryption 98
4.2
Kerberos 99
4.3
Key Distribution Using Asymmetric Encryption 114
4.4
X.509 Certificates 116
4.5
Public-Key Infrastructure 124
v
[Word Count: 27]

4.6
Federated Identity Management 126
4.7
Recommended Reading and Web Sites 132
4.8
Key Terms, Review Questions, and Problems 133
[Word Count: 20]

5.1
Web Security Considerations 140
5.2
Secure Socket Layer and Transport Layer Security 143
5.3
Transport Layer Security 156
5.4
HTTPS 160
5.5
Secure Shell (SSH) 162
5.6
Recommended Reading and Web Sites 173
5.7
Key Terms, Review Questions, and Problems 173
[Word Count: 42]

6.1
IEEE 802.11 Wireless LAN Overview 177
6.2
IEEE 802.11i Wireless LAN Security 183
6.3
Wireless Application Protocol Overview 197
6.4
Wireless Transport Layer Security 204
6.5
WAP End-to-End Security 214
6.6
Recommended Reading and Web Sites 217
6.7
Key Terms, Review Questions, and Problems 218
[Word Count: 46]

7.1
Pretty Good Privacy 222
7.2
S/MIME 241
7.3
DomainKeys Identified Mail 257
7.4
Recommended Reading and Web Sites 264
7.5
Key Terms, Review Questions, and Problems 265
Appendix 7A Radix-64 Conversion 266
[Word Count: 33]

8.1
IP Security Overview 270
8.2
IP Security Policy 276
8.3
Encapsulating Security Payload 281
8.4
Combining Security Associations 288
8.5
Internet Key Exchange 292
8.6
Cryptographic Suites 301
8.7
Recommended Reading and Web Sites 302
8.8
Key Terms, Review Questions, and Problems 303
[Word Count: 44]

9.1
Intruders 307
9.2
Intrusion Detection 312
9.3
Password Management 323
9.4
Recommended Reading and Web Sites 333
9.5
Key Terms, Review Questions, and Problems 334
Appendix 9A The Base-Rate Fallacy 337
[Word Count: 32]

10.1
Types of Malicious Software 341
10.2
Viruses 346
10.3
Virus Countermeasures 351
10.4
Worms 356
10.5
Distributed Denial of Service Attacks 365
10.6
Recommended Reading and Web Sites 370
10.7
Key Terms, Review Questions, and Problems 371
[Word Count: 38]

11.1
The Need for Firewalls 375
11.2
Firewall Characteristics 376
11.3
Types of Firewalls 378
11.4
Firewall Basing 385
11.5
Firewall Location and Configurations 388
11.6
Recommended Reading and Web Site 393
11.7
Key Terms, Review Questions, and Problems 394
[Word Count: 40]

Appendix A
Some Aspects of Number Theory 398
[Word Count: 8]

A.1
Prime and Relatively Prime Numbers 399
A.2
Modular Arithmetic 401
[Word Count: 11]

Appendix B
Projects for Teaching Network Security 403
[Word Count: 8]

B.1
Research Projects 404
B.2
Hacking Project 405
B.3
Programming Projects 405
B.4
Laboratory Exercises 406
B.5
Practical Security Assessments 406
B.6
Writing Assignments 406
B.7
Reading/Report Assignments 407
[Word Count: 29]

ONLINE CHAPTERS
Chapter 12 Network Management Security
[Word Count: 7]

12.1
Basic Concepts of SNMP
12.2
SNMPv1 Community Facility
12.3
SNMPv3
12.4
Recommended Reading and Web Sites
12.5
Key Terms, Review Questions, and Problems
[Word Count: 24]

Chapter 13 Legal and Ethical Aspects
13.1
Cybercrime and Computer Crime
13.2
Intellectual Property
13.3
Privacy
13.4
Ethical Issues
13.5
Recommended Reading and Web Sites
[Word Count: 25]

13.6
Key Terms, Review Questions, and Problems
[Word Count: 7]

Appendix C
Standards and Standards-Setting Organizations
[Word Count: 6]

C.1
The Importance of Standards
C.2
Internet Standards and the Internet Society
C.3
National Institute of Standards and Technology
[Word Count: 19]

D.1
Protocols and Protocol Architectures
D.2
The TCP/IP Protocol Architecture
D.3
The Role of an Internet Protocol
D.4
IPv4
D.5
IPv6
D.6
The OSI Protocol Architecture
[Word Count: 26]

Appendix E
Pseudorandom Number Generation
[Word Count: 5]

E.1
PRNG Requirements
E.2
PRNG Using a Block Cipher
E.3
PRNG Using a Hash Function or Message Authentication Code
[Word Count: 19]

Appendix F
Kerberos Encryption Techniques
[Word Count: 5]

F.1
Password-to-Key Transformation
F.2
Propagating Cipher Block Chaining Mode
[Word Count: 9]

G.1
Compression Algorithm
G.2
Decompression Algorithm
[Word Count: 6]

H.1
True Random Numbers
H.2
Pseudorandom Numbers
[Word Count: 7]

Appendix I
The International Reference Alphabet
[Word Count: 6]

“The tie, if I might suggest it, sir, a shade more tightly knotted. One
aims at the perfect butterfly effect. If you will permit me _”
[Word Count: 26]

“What does it matter, Jeeves, at a time like this? Do you realize that
Mr. Little’s domestic happiness is hanging in the scale?”
[Word Count: 23]

“There is no time, sir, at which ties do not matter.”
[Word Count: 11]

It is the purpose of this book to provide a practical survey of network security applications and
standards.The emphasis is on applications that are widely used on the Internet and for corpo-
rate networks,and on standards (especially Internet standards) that have been widely deployed.
[Word Count: 44]

This book is intended for both an academic and a professional audience. As a textbook, it is
intended as a one-semester undergraduate course on network security for computer science,
computer engineering, and electrical engineering majors. It covers the material in IAS2
Security Mechanisms, a core area in the Information Technology body of knowledge; and
NET4 Security, another core area in the Information Technology body of knowledge. These
subject areas are part of the Draft ACM/IEEE Computer Society Computing Curricula 2005.
The book also serves as a basic reference volume and is suitable for self-study.
[Word Count: 94]

Part One. Cryptography: A concise survey of the cryptographic algorithms and protocols
underlying network security applications, including encryption, hash functions, digital
signatures, and key exchange.
ix
[Word Count: 26]

Part Two. Network Security Applications: Covers important network security tools and
applications, including Kerberos, X.509v3 certificates, PGP, S/MIME, IP Security,
SSL/TLS, SET, and SNMPv3.
Part Three. System Security: Looks at system-level security issues, including the threat of
and countermeasures for intruders and viruses and the use of firewalls and trusted systems.
[Word Count: 51]

In addition, this book includes an extensive glossary, a list of frequently used acronyms,
and a bibliography. Each chapter includes homework problems, review questions, a list of
key words, suggestions for further reading, and recommended Web sites. In addition, a test
bank is available to instructors.
[Word Count: 46]

For this new edition, a tremendous amount of original supporting material has been made
available online in the following categories.
[Word Count: 20]

To support instructors, the following materials are provided.
[Word Count: 8]

local Prentice Hall sales representative via pearsonhighered.com/educator/replocator/
requestSalesRep.page or call Prentice Hall Faculty Services at 1-800-526-0485.
[Word Count: 16]

INTERNET SERVICES FOR INSTRUCTORS AND STUDENTS
[Word Count: 6]

For many instructors, an important component of a network security course is a project or
set of projects by which the student gets hands-on experience to reinforce concepts from the
text. This book provides an unparalleled degree of support for including a projects compo-
nent in the course. The IRC not only includes guidance on how to assign and structure the
projects, but also includes a set of suggested projects that covers a broad range of topics from
the text:
[Word Count: 80]

The changes for this new edition of Network Security Essentials are more substantial and
comprehensive than those for any previous revision.
In the four years since the third edition of this book was published, the field has seen
continued innovations and improvements. In this fourth edition, I try to capture these
[Word Count: 51]

changes while maintaining a broad and comprehensive coverage of the entire field.To begin
this process of revision, the third edition was extensively reviewed by a number of professors
who teach the subject. In addition, a number of professionals working in the field reviewed
individual chapters. The result is that, in many places, the narrative has been clarified and
tightened, and illustrations have been improved. Also, a large number of new “field-tested”
problems have been added.
Beyond these refinements to improve pedagogy and user friendliness, there have been
major substantive changes throughout the book. Highlights include:
[Word Count: 95]

With each new edition, it is a struggle to maintain a reasonable page count while adding
new material. In part, this objective is realized by eliminating obsolete material and tightening
the narrative. For this edition, chapters and appendices that are of less general interest have
[Word Count: 45]

been moved online as individual PDF files. This has allowed an expansion of material without
the corresponding increase in size and price.
[Word Count: 22]

RELATIONSHIP TO CRYPTOGRAPHY AND NETWORK SECURITY
[Word Count: 6]

A Definition of Computer Security
Examples
The Challenges of Computer Security
[Word Count: 11]

Authentication
Access Control
Data Confidentiality
Data Integrity
Nonrepudiation
Availability Service
[Word Count: 10]

Web Sites for This Book
Other Web Sites
USENET Newsgroups
[Word Count: 10]

1.11 Key Terms, Review Questions, and Problems
[Word Count: 7]

The combination of space, time, and strength that must be considered as the basic
elements of this theory of defense makes this a fairly complicated matter. Conse-
quently, it is not easy to find a fixed point of departure.
[Word Count: 39]

The art of war teaches us to rely not on the likelihood of the enemy’s not coming,
but on our own readiness to receive him; not on the chance of his not attacking,
but rather on the fact that we have made our position unassailable.
[Word Count: 45]

1We use the term internet with a lowercase “i” to refer to any interconnected collection of network. A
corporate intranet is an example of an internet.The Internet with a capital “I” may be one of the facilities
used by an organization to construct its internet.
[Word Count: 45]

1. User A transmits a file to user B. The file contains sensitive information (e.g.,
payroll records) that is to be protected from disclosure. User C, who is not
authorized to read the file, is able to monitor the transmission and capture a
copy of the file during its transmission.
[Word Count: 50]

2. A network manager, D, transmits a message to a computer, E, under its
management.The message instructs computer E to update an authorization file
to include the identities of a number of new users who are to be given access to
that computer. User F intercepts the message, alters its contents to add or
delete entries, and then forwards the message to E, which accepts the message
as coming from manager D and updates its authorization file accordingly.
[Word Count: 78]

3. Rather than intercept a message, user F constructs its own message with the
desired entries and transmits that message to E as if it had come from manager
D. Computer E accepts the message as coming from manager D and updates its
authorization file accordingly.
[Word Count: 46]

4. An employee is fired without warning.The personnel manager sends a message
to a server system to invalidate the employee’s account.When the invalidation is
accomplished, the server is to post a notice to the employee’s file as confirma-
tion of the action. The employee is able to intercept the message and delay it
long enough to make a final access to the server to retrieve sensitive informa-
tion. The message is then forwarded, the action taken, and the confirmation
posted.The employee’s action may go unnoticed for some considerable time.
[Word Count: 89]

5. A message is sent from a customer to a stockbroker with instructions for various
transactions. Subsequently, the investments lose value and the customer denies
sending the message.
[Word Count: 28]

Although this list by no means exhausts the possible types of security violations,it illus-
trates the range of concerns of network security.
This chapter provides a general overview of the subject matter that structures
the material in the remainder of the book. We begin with a general discussion of
network security services and mechanisms and of the types of attacks they are
designed for. Then we develop a general overall model within which the security
services and mechanisms can be viewed.
[Word Count: 81]

The NIST Computer Security Handbook [NIST95] defines the term computer security as
[Word Count: 12]

The protection afforded to an automated information system in order to attain the
applicable objectives of preserving the integrity, availability, and confidentiality of
information system resources (includes hardware, software, firmware, information/
data, and telecommunications).
[Word Count: 34]

This definition introduces three key objectives that are at the heart of com-
puter security.
[Word Count: 15]

• Confidentiality: This term covers two related concepts:
[Word Count: 8]

Data2 confidentiality: Assures that private or confidential information is not
made available or disclosed to unauthorized individuals.
[Word Count: 17]

Privacy: Assures that individuals control or influence what information
related to them may be collected and stored and by whom and to whom that
information may be disclosed.
[Word Count: 28]

• Integrity: This term covers two related concepts:
[Word Count: 8]

Data integrity: Assures that information and programs are changed only in
a specified and authorized manner.
[Word Count: 16]

System integrity: Assures that a system performs its intended function in an
unimpaired manner, free from deliberate or inadvertent unauthorized
manipulation of the system.
[Word Count: 24]

• Availability: Assures that systems work promptly and service is not denied to
authorized users.
[Word Count: 15]

These three concepts form what is often referred to as the CIA triad (Figure 1.1).
The three concepts embody the fundamental security objectives for both data and
for information and computing services. For example, the NIST Standards for Security
Categorization of Federal Information and Information Systems
(FIPS 199) lists
confidentiality, integrity, and availability as the three security objectives for informa-
tion and for information systems. FIPS 199 provides a useful characterization of these
three objectives in terms of requirements and the definition of a loss of security in each
category.
[Word Count: 90]

2RFC 2828 defines information as “facts and ideas, which can be represented (encoded) as various forms
of data,” and data as “information in a specific physical representation, usually a sequence of symbols
that have meaning; especially a representation of information that can be processed or produced by a
computer.” Security literature typically does not make much of a distinction, nor does this book.
[Word Count: 63]

Figure 1.1
The Security Requirements
Triad
[Word Count: 6]

• Confidentiality: Preserving authorized restrictions on information access
and disclosure, including means for protecting personal privacy and propri-
etary information. A loss of confidentiality is the unauthorized disclosure of
information.
[Word Count: 30]

• Integrity: Guarding against improper information modification or des-
truction, including ensuring information nonrepudiation and authenticity.
A loss of integrity is the unauthorized modification or destruction of
information.
[Word Count: 28]

• Availability: Ensuring timely and reliable access to and use of information.A loss
of availability is the disruption of access to or use of information or an informa-
tion system.
[Word Count: 30]

Although the use of the CIA triad to define security objectives is well estab-
lished, some in the security field feel that additional concepts are needed to present
a complete picture.Two of the most commonly mentioned are
[Word Count: 37]

• Authenticity: The property of being genuine and being able to be verified and
trusted; confidence in the validity of a transmission, a message, or message
originator. This means verifying that users are who they say they are and that
each input arriving at the system came from a trusted source.
[Word Count: 51]

• Accountability: The security goal that generates the requirement for actions
of an entity to be traced uniquely to that entity.This supports nonrepudiation,
deterrence, fault isolation, intrusion detection and prevention, and after-action
recovery and legal action. Because truly secure systems are not yet an achiev-
able goal, we must be able to trace a security breach to a responsible party.
Systems must keep records of their activities to permit later forensic analysis
to trace security breaches or to aid in transaction disputes.
[Word Count: 82]

We now provide some examples of applications that illustrate the requirements just
enumerated.3 For these examples, we use three levels of impact on organizations or
individuals should there be a breach of security (i.e., a loss of confidentiality,
integrity, or availability).These levels are defined in FIPS 199:
[Word Count: 47]

• Low: The loss could be expected to have a limited adverse effect on organiza-
tional operations, organizational assets, or individuals.A limited adverse effect
means that, for example, the loss of confidentiality, integrity, or availability
might (i) cause a degradation in mission capability to an extent and duration
that the organization is able to perform its primary functions, but the effec-
tiveness of the functions is noticeably reduced; (ii) result in minor damage to
organizational assets; (iii) result in minor financial loss; or (iv) result in minor
harm to individuals.
[Word Count: 90]

3These examples are taken from a security policy document published by the Information Technology
Security and Privacy Office at Purdue University.
[Word Count: 21]

• Moderate: The loss could be expected to have a serious adverse effect on
organizational operations, organizational assets, or individuals. A serious
adverse effect means that, for example, the loss might (i) cause a significant
degradation in mission capability to an extent and duration that the organi-
zation is able to perform its primary functions, but the effectiveness of the
functions is significantly reduced; (ii) result in significant damage to organi-
zational assets; (iii) result in significant financial loss; or (iv) result in signifi-
cant harm to individuals that does not involve loss of life or serious,
life-threatening injuries.
[Word Count: 99]

• High: The loss could be expected to have a severe or catastrophic adverse
effect on organizational operations, organizational assets, or individuals. A
severe or catastrophic adverse effect means that, for example, the loss might
(i) cause a severe degradation in or loss of mission capability to an extent and
duration that the organization is not able to perform one or more of its pri-
mary functions; (ii) result in major damage to organizational assets; (iii) result
in major financial loss; or (iv) result in severe or catastrophic harm to individ-
uals involving loss of life or serious, life-threatening injuries.
[Word Count: 100]

An example of a low-integrity requirement is an anonymous online poll. Many
Web sites, such as news organizations, offer these polls to their users with very few
safeguards. However, the inaccuracy and unscientific nature of such polls is well
understood.
[Word Count: 40]

Computer and network security is both fascinating and complex. Some of the reasons
include:
[Word Count: 14]

1. Security is not as simple as it might first appear to the novice. The require-
ments seem to be straightforward; indeed, most of the major requirements for
security services can be given self-explanatory, one-word labels: confidential-
ity, authentication, nonrepudiation, integrity. But the mechanisms used to
meet those requirements can be quite complex, and understanding them may
involve rather subtle reasoning.
[Word Count: 61]

2. In developing a particular security mechanism or algorithm, one must always
consider potential attacks on those security features. In many cases, successful
attacks are designed by looking at the problem in a completely different way,
therefore exploiting an unexpected weakness in the mechanism.
[Word Count: 44]

3. Because of point 2, the procedures used to provide particular services are often
counterintuitive.Typically, a security mechanism is complex, and it is not obvious
from the statement of a particular requirement that such elaborate measures are
needed. It is only when the various aspects of the threat are considered that elab-
orate security mechanisms make sense.
[Word Count: 57]

4. Having designed various security mechanisms, it is necessary to decide where to
use them.This is true both in terms of physical placement (e.g., at what points in
a network are certain security mechanisms needed) and in a logical sense [e.g., at
what layer or layers of an architecture such as TCP/IP (Transmission Control
Protocol/Internet Protocol) should mechanisms be placed].
[Word Count: 60]

6. Computer and network security is essentially a battle of wits between a perpetra-
tor who tries to find holes and the designer or administrator who tries to close
them.The great advantage that the attacker has is that he or she need only find a
single weakness, while the designer must find and eliminate all weaknesses to
achieve perfect security.
[Word Count: 60]

7. There is a natural tendency on the part of users and system managers to perceive
little benefit from security investment until a security failure occurs.
[Word Count: 26]

8. Security requires regular,even constant,monitoring,and this is difficult in today’s
short-term, overloaded environment.
[Word Count: 13]

9. Security is still too often an afterthought to be incorporated into a system
after the design is complete rather than being an integral part of the design
process.
[Word Count: 29]

10. Many users (and even security administrators) view strong security as an
impediment to efficient and user-friendly operation of an information system
or use of information.
[Word Count: 26]

The difficulties just enumerated will be encountered in numerous ways as we
examine the various security threats and mechanisms throughout this book.
[Word Count: 22]

To assess effectively the security needs of an organization and to evaluate and
choose various security products and policies, the manager responsible for com-
puter and network security needs some systematic way of defining the requirements
for security and characterizing the approaches to satisfying those requirements.This
is difficult enough in a centralized data processing environment; with the use of
local and wide area networks, the problems are compounded.
ITU-T4 Recommendation X.800, Security Architecture for OSI, defines such a
systematic approach.5 The OSI security architecture is useful to managers as a way
[Word Count: 91]

4The International Telecommunication Union (ITU) Telecommunication Standardization Sector (ITU-T)
is a United Nations-sponsored agency that develops standards, called Recommendations, relating to
telecommunications and to open systems interconnection (OSI).
5The OSI security architecture was developed in the context of the OSI protocol architecture, which is
described in Appendix D. However, for our purposes in this chapter, an understanding of the OSI protocol
architecture is not required.
[Word Count: 65]

of organizing the task of providing security. Furthermore, because this architecture
was developed as an international standard, computer and communications vendors
have developed security features for their products and services that relate to this
structured definition of services and mechanisms.
For our purposes, the OSI security architecture provides a useful, if abstract,
overview of many of the concepts that this book deals with.The OSI security archi-
tecture focuses on security attacks, mechanisms, and services. These can be defined
briefly as
[Word Count: 80]

• Security attack: Any action that compromises the security of information
owned by an organization.
[Word Count: 15]

• Security mechanism: A process (or a device incorporating such a process) that
is designed to detect, prevent, or recover from a security attack.
[Word Count: 24]

• Security service: A processing or communication service that enhances the
security of the data processing systems and the information transfers of an
organization. The services are intended to counter security attacks, and they
make use of one or more security mechanisms to provide the service.
[Word Count: 46]

In the literature, the terms threat and attack are commonly used to mean more
or less the same thing. Table 1.1 provides definitions taken from RFC 2828, Internet
Security Glossary.
[Word Count: 30]

A useful means of classifying security attacks, used both in X.800 and RFC 2828, is
in terms of passive attacks and active attacks. A passive attack attempts to learn or
make use of information from the system but does not affect system resources. An
active attack attempts to alter system resources or affect their operation.
[Word Count: 55]

Passive attacks are in the nature of eavesdropping on, or monitoring of, transmissions.
The goal of the opponent is to obtain information that is being transmitted.Two types
of passive attacks are the release of message contents and traffic analysis.
[Word Count: 39]

Table 1.1
Threats and Attacks (RFC 2828)
[Word Count: 7]

Threat
A potential for violation of security, which exists when there is a circumstance, capability, action,
or event that could breach security and cause harm.That is, a threat is a possible danger that might
exploit a vulnerability.
[Word Count: 37]

Attack
An assault on system security that derives from an intelligent threat.That is, an intelligent act that is 
a deliberate attempt (especially in the sense of a method or technique) to evade security services and
violate the security policy of a system.
[Word Count: 42]

The release of message contents is easily understood (Figure 1.2a). A tele-
phone conversation, an electronic mail message, and a transferred file may contain
sensitive or confidential information. We would like to prevent an opponent from
learning the contents of these transmissions.
[Word Count: 42]

Read contents of
message from Bob
to Alice
[Word Count: 8]

Observe pattern of
messages from Bob
to Alice
[Word Count: 8]

Figure 1.2
Passive Network Security Attacks
[Word Count: 6]

prevent their success. On the other hand, it is quite difficult to prevent active attacks
absolutely because of the wide variety of potential physical, software, and network
vulnerabilities. Instead, the goal is to detect active attacks and to recover from any dis-
ruption or delays caused by them. If the detection has a deterrent effect, it also may
contribute to prevention.
[Word Count: 61]

Message from Darth
that appears to be
from Bob
[Word Count: 9]

Darth
Capture message from
Bob to Alice; later
replay message to Alice
[Word Count: 12]

Darth modifies
message from Bob
to Alice
[Word Count: 7]

Darth disrupts service
provided by server
[Word Count: 6]

X.800 defines a security service as a service that is provided by a protocol layer of
communicating open systems and that ensures adequate security of the systems or
of data transfers. Perhaps a clearer definition is found in RFC 2828, which provides
the following definition:A processing or communication service that is provided by
[Word Count: 53]

a system to give a specific kind of protection to system resources; security services
implement security policies and are implemented by security mechanisms.
X.800 divides these services into five categories and fourteen specific services
(Table 1.2).We look at each category in turn.6
[Word Count: 42]

6There is no universal agreement about many of the terms used in the security literature. For example,
the term integrity is sometimes used to refer to all aspects of information security.The term authentication
is sometimes used to refer both to verification of identity and to the various functions listed under
integrity in this chapter. Our usage here agrees with both X.800 and RFC 2828.
[Word Count: 64]

The assurance that the communicating entity is the
one that it claims to be.
[Word Count: 14]

Peer Entity Authentication
Used in association with a logical connection to
provide confidence in the identity of the entities
connected.
[Word Count: 20]

Data-Origin Authentication
In a connectionless transfer, provides assurance that
the source of received data is as claimed.
[Word Count: 17]

The prevention of unauthorized use of a resource
(i.e., this service controls who can have access to a
resource, under what conditions access can occur,
and what those accessing the resource are allowed
to do).
[Word Count: 35]

The protection of data from unauthorized
disclosure.
[Word Count: 7]

Connection Confidentiality
The protection of all user data on a connection.
[Word Count: 11]

Connectionless Confidentiality
The protection of all user data in a single data block.
[Word Count: 13]

Selective-Field Confidentiality
The confidentiality of selected fields within the user
data on a connection or in a single data block.
[Word Count: 20]

Traffic-Flow Confidentiality
The protection of the information that might be
derived from observation of traffic flows.
[Word Count: 16]

The assurance that data received are exactly as
sent by an authorized entity (i.e., contain no
modification, insertion, deletion, or replay).
[Word Count: 21]

Connection Integrity with Recovery
Provides for the integrity of all user data on a
connection and detects any modification, insertion,
deletion, or replay of any data within an entire data
sequence, with recovery attempted.
[Word Count: 34]

Connection Integrity without Recovery
As above, but provides only detection without recovery.
[Word Count: 12]

Selective-Field Connection Integrity
Provides for the integrity of selected fields within the
user data of a data block transferred over a connec-
tion and takes the form of determination of whether
the selected fields have been modified, inserted,
deleted, or replayed.
[Word Count: 41]

Connectionless Integrity
Provides for the integrity of a single connectionless
data block and may take the form of detection of
data modification.Additionally, a limited form of
replay detection may be provided.
[Word Count: 31]

Selective-Field Connectionless Integrity
Provides for the integrity of selected fields within a single
connectionless data block;takes the form of determina-
tion of whether the selected fields have been modified.
[Word Count: 29]

Provides protection against denial by one of the
entities involved in a communication of having
participated in all or part of the communication.
[Word Count: 23]

Nonrepudiation, Origin
Proof that the message was sent by the specified party.
[Word Count: 12]

Nonrepudiation, Destination
Proof that the message was received by the specified
party.
[Word Count: 12]

• Peer entity authentication: Provides for the corroboration of the identity of a
peer entity in an association. Two entities are considered peers if they imple-
ment the same protocol in different systems (e.g., two TCP modules in two
communicating systems). Peer entity authentication is provided for use at the
establishment of or during the data transfer phase of a connection. It attempts
to provide confidence that an entity is not performing either a masquerade or
an unauthorized replay of a previous connection.
[Word Count: 83]

• Data origin authentication: Provides for the corroboration of the source of a
data unit. It does not provide protection against the duplication or modification
of data units. This type of service supports applications like electronic mail,
where there are no prior interactions between the communicating entities.
[Word Count: 47]

In the context of network security, access control is the ability to limit and control
the access to host systems and applications via communications links. To achieve
this, each entity trying to gain access must first be identified, or authenticated, so
that access rights can be tailored to the individual.
[Word Count: 50]

Nonrepudiation prevents either sender or receiver from denying a transmitted mes-
sage.Thus, when a message is sent, the receiver can prove that the alleged sender in
fact sent the message. Similarly, when a message is received, the sender can prove
that the alleged receiver in fact received the message.
[Word Count: 49]

Table 1.3 lists the security mechanisms defined in X.800.The mechanisms are divided into
those that are implemented in a specific protocol layer, such as TCP or an application-
layer protocol, and those that are not specific to any particular protocol layer or security
[Word Count: 43]

May be incorporated into the appropriate protocol
layer in order to provide some of the OSI security
services.
[Word Count: 18]

Encipherment
The use of mathematical algorithms to transform
data into a form that is not readily intelligible. The
transformation and subsequent recovery of the
data depend on an algorithm and zero or more
encryption keys.
[Word Count: 35]

Digital Signature
Data appended to, or a cryptographic transformation
of, a data unit that allows a recipient of the data unit
to prove the source and integrity of the data unit and
protect against forgery (e.g., by the recipient).
[Word Count: 39]

Access Control
A variety of mechanisms that enforce access rights to
resources.
[Word Count: 12]

Data Integrity
A variety of mechanisms used to assure the integrity
of a data unit or stream of data units.
[Word Count: 20]

Authentication Exchange
A mechanism intended to ensure the identity of an
entity by means of information exchange.
[Word Count: 17]

Traffic Padding
The insertion of bits into gaps in a data stream to
frustrate traffic analysis attempts.
[Word Count: 17]

Routing Control
Enables selection of particular physically secure
routes for certain data and allows routing changes,
especially when a breach of security is suspected.
[Word Count: 24]

Notarization
The use of a trusted third party to assure certain
properties of a data exchange.
[Word Count: 16]

Mechanisms that are not specific to any particular
OSI security service or protocol layer.
[Word Count: 14]

Trusted Functionality
That which is perceived to be correct with respect to
some criteria (e.g., as established by a security policy).
[Word Count: 21]

Security Label
The marking bound to a resource (which may be a
data unit) that names or designates the security
attributes of that resource.
[Word Count: 24]

Event Detection
Detection of security-relevant events.
[Word Count: 6]

Security Audit Trail
Data collected and potentially used to facilitate a
security audit, which is an independent review and
examination of system records and activities.
[Word Count: 25]

Security Recovery
Deals with requests from mechanisms, such as event
handling and management functions, and takes
recovery actions.
[Word Count: 18]

service.These mechanisms will be covered in the appropriate places in the book,so we do
not elaborate now except to comment on the definition of encipherment. X.800 distin-
guishes between reversible encipherment mechanisms and irreversible encipherment
mechanisms. A reversible encipherment mechanism is simply an encryption algorithm
that allows data to be encrypted and subsequently decrypted. Irreversible encipherment
mechanisms include hash algorithms and message authentication codes,which are used in
digital signature and message authentication applications.
Table 1.4, based on one in X.800, indicates the relationship between security
services and security mechanisms.
[Word Count: 89]

Table 1.4
Relationship Between Security Services and Mechanisms
[Word Count: 8]

Service
Encipherment
Digital
Signature
Access
Control
Data
Integrity
Authentication
Exchange
Traffic
Padding
Routing
Control
Notarization
[Word Count: 15]

1. A security-related transformation on the information to be sent. Examples
include the encryption of the message, which scrambles the message so that
it is unreadable by the opponent, and the addition of a code based on the
contents of the message, which can be used to verify the identity of the
sender.
[Word Count: 53]

2. Some secret information shared by the two principals and, it is hoped, unknown
to the opponent.An example is an encryption key used in conjunction with the
transformation to scramble the message before transmission and unscramble it
on reception.7
[Word Count: 39]

Information
channel
Security-related
transformation
[Word Count: 4]

Trusted third party
(e.g., arbiter, distributer
of secret information)
[Word Count: 9]

7Chapter 3 discusses a form of encryption, known as asymmetric encryption, in which only one of the two
principals needs to have the secret information.
[Word Count: 25]

A trusted third party may be needed to achieve secure transmission. For
example, a third party may be responsible for distributing the secret information to
the two principals while keeping it from any opponent. Or a third party may be
needed to arbitrate disputes between the two principals concerning the authenticity
of a message transmission.
This general model shows that there are four basic tasks in designing a particular
security service:
[Word Count: 71]

1. Design an algorithm for performing the security-related transformation. The
algorithm should be such that an opponent cannot defeat its purpose.
[Word Count: 21]

2. Generate the secret information to be used with the algorithm.
[Word Count: 11]

3. Develop methods for the distribution and sharing of the secret information.
[Word Count: 12]

4. Specify a protocol to be used by the two principals that makes use of the security
algorithm and the secret information to achieve a particular security service.
[Word Count: 28]

1. Information access threats: Intercept or modify data on behalf of users who
should not have access to that data.
2. Service threats: Exploit service flaws in computers to inhibit use by legitimate
users.
[Word Count: 34]

Computing resources
 
(processor, memory, I/O)
[Word Count: 5]

Figure 1.5
Network Access Security Model
[Word Count: 6]

Many of the security techniques and applications described in this book have been
specified as standards. Additionally, standards have been developed to cover man-
agement practices and the overall architecture of security mechanisms and services.
Throughout this book, we describe the most important standards in use or being
developed for various aspects of cryptography and network security.Various organi-
zations have been involved in the development or promotion of these standards.
The most important (in the current context) of these organizations are as follows.
[Word Count: 83]

• National Institute of Standards and Technology: NIST is a U.S. federal agency
that deals with measurement science, standards, and technology related to
U.S. government use and to the promotion of U.S. private-sector innovation.
Despite its national scope, NIST Federal Information Processing Standards
(FIPS) and Special Publications (SP) have a worldwide impact.
[Word Count: 52]

• Internet Society: ISOC is a professional membership society with worldwide
organizational and individual membership. It provides leadership in address-
ing issues that confront the future of the Internet and is the organization home
for the groups responsible for Internet infrastructure standards, including the
Internet Engineering Task Force (IETF) and the Internet Architecture Board
(IAB). These organizations develop Internet standards and related specifica-
tions, all of which are published as Requests for Comments (RFCs).
[Word Count: 74]

A more detailed discussion of these organizations is contained in Appendix C.
[Word Count: 12]

This chapter serves as an introduction to the entire book.The remainder of the book
is organized into three parts.
[Word Count: 19]

Part One:
Provides a concise survey of the cryptographic algorithms and proto-
cols underlying network security applications, including encryption,
hash functions, and digital signatures.
[Word Count: 24]

Part Two: Examines the use of cryptographic algorithms and security proto-
cols to provide security over networks and the Internet.Topics cov-
ered include key management, user authentication, transport-level
security, wireless network security, e-mail security, and IP security.
[Word Count: 37]

Part Three: Deals with security facilities designed to protect a computer sys-
tem from security threats, including intruders, viruses, and worms.
This part also looks at firewall technology.
[Word Count: 28]

In addition, two online chapters cover network management security and legal
and ethical issues.
[Word Count: 14]

There are a number of resources available on the Internet and the Web to support this book
and to help one keep up with developments in this field.
[Word Count: 28]

There is a Web page for this book at WilliamStallings.com/NetSec/NetSec4e.html. The site
includes the following:
[Word Count: 15]

• Useful Web sites: There are links to other relevant Web sites organized by chapter,
including the sites listed in this section and throughout this book.
[Word Count: 26]

• Online documents: Link to the Companion Website at Pearson that includes supple-
mental online chapters and appendices, homework problems and solutions, impor-
tant papers from the literature, and other supporting documents. See Preface for
details.
[Word Count: 36]

• Errata sheet: An errata list for this book will be maintained and updated as needed.
Please e-mail any errors that you spot to me. Errata sheets for my other books are at
WilliamStallings.com.
[Word Count: 34]

• Internet mailing list: The site includes sign-up information for the book’s Internet mail-
ing list.
[Word Count: 16]

• Network security courses: There are links to home pages for courses based on this
book; these pages may be useful to instructors in providing ideas about how to struc-
ture their course.
[Word Count: 33]

I also maintain the Computer Science Student Resource Site at WilliamStallings.com/
StudentSupport.html.The purpose of this site is to provide documents, information, and links
for computer science students and professionals. Links and documents are organized into six
categories:
[Word Count: 37]

• Math: Includes a basic math refresher, a queuing analysis primer, a number system
primer, and links to numerous math sites.
[Word Count: 21]

• How-to: Advice and guidance for solving homework problems, writing technical
reports, and preparing technical presentations.
[Word Count: 16]

• Research resources: Links to important collections of papers, technical reports, and
bibliographies.
[Word Count: 13]

• Computer science careers: Useful links and documents for those considering a career
in computer science.
[Word Count: 16]

• Miscellaneous: A variety of other interesting documents and links.
[Word Count: 10]

• Humor and other diversions: You have to take your mind off your work once in a
while.
[Word Count: 18]

There are numerous Web sites that provide information related to the topics of this
book. In subsequent chapters, pointers to specific Web sites can be found in the
Recommended Reading and Web Sites section. Because the addresses for Web sites tend
to change frequently, I have not included URLs in the book. For all of the Web sites
listed in the book, the appropriate link can be found at this book’s Web site. Other links
not mentioned in this book will be added to the Web site over time.
[Word Count: 89]

The following Web sites are of general interest related to cryptography and network security.
[Word Count: 14]

• IETF Security Area: Material related to Internet security standardization efforts.
[Word Count: 11]

• Computer and Network Security Reference Index: A good index to vendor and
commercial products, frequently asked questions (FAQs), newsgroup archives,
papers, and other Web sites.
[Word Count: 26]

• The Cryptography FAQ: Lengthy and worthwhile FAQ covering all aspects of
cryptography.
[Word Count: 13]

• Tom Dunigan’s Security Page: An excellent list of pointers to cryptography and
network security Web sites.
[Word Count: 17]

• Helger Lipmaa’s Cryptology Pointers: Another excellent list of pointers to cryptography
and network security Web sites.
[Word Count: 17]

• IEEE Technical Committee on Security and Privacy: Copies of their newsletter and
information on IEEE-related activities.
[Word Count: 17]

• Computer Security Resource Center: Maintained by the National Institute of
Standards and Technology (NIST); contains a broad range of information on security
threats, technology, and standards.
[Word Count: 27]

• Security Focus: A wide variety of security information with an emphasis on vendor
products and end-user concerns.
[Word Count: 18]

• SANS Institute: Similar to Security Focus. Extensive collection of white papers.
[Word Count: 12]

• Center for Internet Security: Provides freeware benchmark and scoring tools for eval-
uating security of operating systems, network devices, and applications. Includes case
studies and technical papers.
[Word Count: 28]

• Institute for Security and Open Methodologies: An open, collaborative security
research community. Lots of interesting information.
[Word Count: 17]

A number of USENET newsgroups are devoted to some aspect of network security or cryp-
tography.As with virtually all USENET groups, there is a high noise-to-signal ratio, but it is
worth experimenting to see if any meet your needs.The most relevant are the following:
[Word Count: 44]

• sci.crypt.research: The best group to follow. This is a moderated newsgroup that deals
with research topics; postings must have some relationship to the technical aspects of
cryptology.
[Word Count: 28]

1.11 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 25
[Word Count: 9]

• sci.crypt: A general discussion of cryptology and related topics.
[Word Count: 10]

• sci.crypt.random-numbers: A discussion of cryptographic strength randomness.
[Word Count: 8]

• alt.security: A general discussion of security topics.
[Word Count: 8]

• comp.security.misc: A general discussion of computer security topics.
[Word Count: 9]

• comp.security.firewalls: A discussion of firewall products and technology.
[Word Count: 9]

• comp.security.announce: News and announcements from CERT.
[Word Count: 7]

• comp.risks: A discussion of risks to the public from computers and users.
[Word Count: 13]

• comp.virus: A moderated discussion of computer viruses.
[Word Count: 8]

In addition, there are a number of forums dealing with cryptography available on the
Internet.Among the most worthwhile are
[Word Count: 19]

• Security and Cryptography forum: Sponsored by DevShed.Discusses issues related to cod-
ing, server applications, network protection, data protection, firewalls, ciphers, and the like.
[Word Count: 24]

• Cryptography forum: On Topix. Fairly good focus on technical issues.
[Word Count: 11]

• Security forums: On WindowsSecurity.com. Broad range of forums, including crypto-
graphic theory, cryptographic software, firewalls, and malware.
[Word Count: 18]

Links to these forums are provided at this book’s Web site.
[Word Count: 11]

1.11 KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

access control
active threat
authentication
authenticity
availability
data confidentiality
data integrity
[Word Count: 11]

denial of service
encryption
integrity
intruder
masquerade
nonrepudiation
OSI security architecture
[Word Count: 11]

passive threat
replay
security attacks
security mechanisms
security services
traffic analysis
[Word Count: 11]

1.1
What is the OSI security architecture?
1.2
What is the difference between passive and active security threats?
1.3
List and briefly define categories of passive and active security attacks.
1.4
List and briefly define categories of security services.
1.5
List and briefly define categories of security mechanisms.
[Word Count: 48]

1.1
Consider an automated teller machine (ATM) in which users provide a personal
identification number (PIN) and a card for account access. Give examples of confi-
dentiality, integrity, and availability requirements associated with the system. In each
case, indicate the degree of importance of the requirement.
[Word Count: 46]

Cryptography
Cryptanalysis
Feistel Cipher Structure
[Word Count: 5]

2.2
Symmetric Block Encryption Algorithms
[Word Count: 5]

Data Encryption Standard
Triple DES
Advanced Encryption Standard
[Word Count: 8]

The Use of Random Numbers
TRNGs, PRNGs, and PRFs
Algorithm Design
[Word Count: 11]

Stream Cipher Structure
The RC4 Algorithm
[Word Count: 6]

Electronic Codebook Mode
Cipher Block Chaining Mode
Cipher Feedback Mode
Counter Mode
[Word Count: 12]

2.7
Key Terms, Review Questions, and Problems
[Word Count: 7]

SYMMETRIC ENCRYPTION AND
MESSAGE CONFIDENTIALITY
[Word Count: 5]

28
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

All the afternoon Mungo had been working on Stern’s code, principally with the
aid of the latest messages which he had copied down at the Nevin Square drop.
Stern was very confident. He must be well aware London Central knew about that
drop. It was obvious that they didn’t care how often Mungo read their messages, so
confident were they in the impenetrability of the code.
[Word Count: 66]

—The Golden Bough, Sir James George Frazer
[Word Count: 7]

A symmetric encryption scheme has five ingredients (Figure 2.1):
[Word Count: 9]

• Plaintext: This is the original message or data that is fed into the algorithm as
input.
[Word Count: 17]

• Encryption algorithm:The encryption algorithm performs various substitutions
and transformations on the plaintext.
[Word Count: 13]

• Secret key: The secret key is also input to the algorithm.The exact substitutions
and transformations performed by the algorithm depend on the key.
[Word Count: 24]

1Public-key encryption was first described in the open literature in 1976; the National Security Agency
(NSA) claims to have discovered it some years earlier.
[Word Count: 24]

2.1 / SYMMETRIC ENCRYPTION PRINCIPLES 29
[Word Count: 6]

Secret key shared by
sender and recipient
Secret key shared by
sender and recipient
[Word Count: 14]

Encryption algorithm
(e.g., AES)
Decryption algorithm
(reverse of encryption
algorithm)
[Word Count: 10]

Figure 2.1
Simplified Model of Symmetric Encryption
[Word Count: 7]

• Ciphertext: This is the scrambled message produced as output. It depends on
the plaintext and the secret key. For a given message, two different keys will
produce two different ciphertexts.
[Word Count: 31]

• Decryption algorithm: This is essentially the encryption algorithm run in
reverse. It takes the ciphertext and the same secret key and produces the orig-
inal plaintext.
[Word Count: 27]

There are two requirements for secure use of symmetric encryption:
[Word Count: 10]

30
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

Cryptographic systems are generically classified along three independent dimensions:
[Word Count: 9]

1. The type of operations used for transforming plaintext to ciphertext. All
encryption algorithms are based on two general principles: substitution, in
which each element in the plaintext (bit, letter, group of bits or letters) is
mapped into another element, and transposition, in which elements in the
plaintext are rearranged.The fundamental requirement is that no information
be lost (that is, that all operations be reversible). Most systems, referred to as
product systems, involve multiple stages of substitutions and transpositions.
[Word Count: 79]

2. The number of keys used. If both sender and receiver use the same key, the system
is referred to as symmetric, single-key, secret-key, or conventional encryption. If the
sender and receiver each use a different key,the system is referred to as asymmetric,
two-key,or public-key encryption.
[Word Count: 46]

3. The way in which the plaintext is processed. A block cipher processes the input
one block of elements at a time, producing an output block for each input
block. A stream cipher processes the input elements continuously, producing
output one element at a time, as it goes along.
[Word Count: 49]

Table 2.1
Types of Attacks on Encrypted Messages
[Word Count: 8]

• One or more plaintext–ciphertext pairs formed with the secret key
[Word Count: 11]

• Plaintext message chosen by cryptanalyst, together with its corresponding ciphertext
generated with the secret key
[Word Count: 16]

Chosen ciphertext
• Encryption algorithm
[Word Count: 5]

• Purported ciphertext chosen by cryptanalyst, together with its corresponding
decrypted plaintext generated with the secret key
[Word Count: 17]

• Plaintext message chosen by cryptanalyst, together with its corresponding
ciphertext generated with the secret key
[Word Count: 16]

• Purported ciphertext chosen by cryptanalyst, together with its corresponding
decrypted plaintext generated with the secret key
[Word Count: 17]

2.1 / SYMMETRIC ENCRYPTION PRINCIPLES 31
[Word Count: 6]

• The cost of breaking the cipher exceeds the value of the encrypted information.
• The time required to break the cipher exceeds the useful lifetime of the
information.
[Word Count: 29]

32
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

Table 2.2
Average Time Required for Exhaustive Key Search
[Word Count: 9]

Key Size (bits)
Number of 
Alternative Keys
Time Required at 1 
Decryption/µs
Time Required at 
106 Decryptions/µs
[Word Count: 17]

32
232 = 4.3 * 109
231ms = 35.8 minutes
2.15 milliseconds
[Word Count: 12]

56
256 = 7.2 * 1016
255ms = 1142  years
10.01 hours
[Word Count: 12]

128
2128 = 3.4 * 1038
2127ms = 5.4 * 1024  years
5.4 * 1018 years
[Word Count: 16]

168
2168 = 3.7 * 1050
2167ms = 5.9 * 1036 years
5.9 * 1030 years
[Word Count: 16]

26 characters 
(permutation)
26! = 4 * 1026
2 * 1026ms = 6.4 * 1012 years
6.4 * 106 years
[Word Count: 20]

2.1 / SYMMETRIC ENCRYPTION PRINCIPLES 33
[Word Count: 6]

Figure 2.2
Feistel Encryption and Decryption (16 rounds)
[Word Count: 8]

parameterized by the round subkey Ki. Following this substitution, a permutation is
performed that consists of the interchange of the two halves of the data.
The Feistel structure is a particular example of the more general structure
used by all symmetric block ciphers. In general, a symmetric block cipher consists of
a sequence of rounds, with each round performing substitutions and permutations
conditioned by a secret key value.The exact realization of a symmetric block cipher
depends on the choice of the following parameters and design features.
[Word Count: 86]

34
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

• Block size: Larger block sizes mean greater security (all other things being
equal) but reduced encryption/decryption speed. A block size of 128 bits is
a reasonable tradeoff and is nearly universal among recent block cipher
designs.
[Word Count: 37]

• Key size: Larger key size means greater security but may decrease encryption/
decryption speed.The most common key length in modern algorithms is 128 bits.
[Word Count: 25]

• Number of rounds: The essence of a symmetric block cipher is that a single
round offers inadequate security but that multiple rounds offer increasing
security.A typical size is 16 rounds.
[Word Count: 31]

• Subkey generation algorithm: Greater complexity in this algorithm should
lead to greater difficulty of cryptanalysis.
[Word Count: 16]

• Round function: Again, greater complexity generally means greater resistance
to cryptanalysis.
[Word Count: 12]

There are two other considerations in the design of a symmetric block cipher:
[Word Count: 13]

• Fast software encryption/decryption: In many cases, encryption is embedded
in applications or utility functions in such a way as to preclude a hardware
implementation. Accordingly, the speed of execution of the algorithm
becomes a concern.
[Word Count: 36]

• Ease of analysis: Although we would like to make our algorithm as difficult as
possible to cryptanalyze, there is great benefit in making the algorithm easy to
analyze. That is, if the algorithm can be concisely and clearly explained, it is
easier to analyze that algorithm for cryptanalytic vulnerabilities and therefore
develop a higher level of assurance as to its strength. DES, for example, does
not have an easily analyzed functionality.
[Word Count: 72]

Decryption with a symmetric block cipher is essentially the same as the encryp-
tion process. The rule is as follows: Use the ciphertext as input to the algorithm,
but use the subkeys Ki in reverse order.That is, use Kn in the first round, Kn 1 in the
second round, and so on until K1 is used in the last round. This is a nice feature,
because it means we need not implement two different algorithms—one for encryp-
tion and one for decryption.
[Word Count: 82]

2.2
SYMMETRIC BLOCK ENCRYPTION ALGORITHMS
[Word Count: 5]

The most commonly used symmetric encryption algorithms are block ciphers.
A block cipher processes the plaintext input in fixed-sized blocks and produces a
block of ciphertext of equal size for each plaintext block.This section focuses on the
three most important symmetric block ciphers: the Data Encryption Standard
(DES), triple DES (3DES), and the Advanced Encryption Standard (AES).
[Word Count: 57]

The most widely used encryption scheme is based on the Data Encryption Standard
(DES) issued in 1977, as Federal Information Processing Standard 46 (FIPS 46) by
the National Bureau of Standards, now known as the National Institute of Standards
[Word Count: 39]

2.2 / SYMMETRIC BLOCK ENCRYPTION ALGORITHMS 35
[Word Count: 7]

and Technology (NIST). The algorithm itself is referred to as the Data Encryption
Algorithm (DEA).2
[Word Count: 15]

THE STRENGTH
OF DES Concerns about the strength of DES fall into two
categories: concerns about the algorithm itself and concerns about the use of a 
56-bit key.The first concern refers to the possibility that cryptanalysis is possible by
exploiting the characteristics of the DES algorithm. Over the years, there have been
numerous attempts to find and exploit weaknesses in the algorithm, making DES
the most-studied encryption algorithm in existence. Despite numerous approaches,
no one has so far succeeded in discovering a fatal weakness in DES.3
[Word Count: 86]

A more serious concern is key length.With a key length of 56 bits, there are 256
[Word Count: 16]

2The terminology is a bit confusing. Until recently, the terms DES and DEA could be used interchange-
ably. However, the most recent edition of the DES document includes a specification of the DEA
described here plus the triple DEA (3DES) described subsequently. Both DEA and 3DES are part of the
Data Encryption Standard. Furthermore, until the recent adoption of the official term 3DES, the triple
DEA algorithm was typically referred to as triple DES and written as 3DES. For the sake of convenience,
we will use 3DES.
3At least, no one has publicly acknowledged such a discovery.
[Word Count: 97]

36
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

Triple DES (3DES) was first standardized for use in financial applications in ANSI
standard X9.17 in 1985. 3DES was incorporated as part of the Data Encryption
Standard in 1999 with the publication of FIPS 46-3.
[Word Count: 35]

50
100
150
128
168
200
Key Length (bits)
[Word Count: 9]

Figure 2.3
Time to Break a Code (assuming 106 decryptions/ s)
m
[Word Count: 12]

2.2 / SYMMETRIC BLOCK ENCRYPTION ALGORITHMS 37
[Word Count: 7]

3DES uses three keys and three executions of the DES algorithm.The function
follows an encrypt-decrypt-encrypt (EDE) sequence (Figure 2.4a):
[Word Count: 19]

C
ciphertext
P
plaintext
E[K, X] 
encryption of X using key K
D[K, Y ] 
decryption of Y using key K
[Word Count: 21]

Decryption is simply the same operation with the keys reversed (Figure 2.4b):
[Word Count: 12]

There is no cryptographic significance to the use of decryption for the second
stage of 3DES encryption. Its only advantage is that it allows users of 3DES to
decrypt data encrypted by users of the older single DES:
[Word Count: 38]

With three distinct keys, 3DES has an effective key length of 168 bits. FIPS 46-3
also allows for the use of two keys, with K1
K3; this provides for a key length of 112
bits. FIPS 46-3 includes the following guidelines for 3DES.
[Word Count: 43]

• 3DES is the FIPS approved symmetric encryption algorithm of choice.
[Word Count: 11]

• The original DES,which uses a single 56-bit key,is permitted under the standard
for legacy systems only. New procurements should support 3DES.
[Word Count: 22]

• Government organizations with legacy DES systems are encouraged to
transition to 3DES.
[Word Count: 13]

• It is anticipated that 3DES and the Advanced Encryption Standard (AES) will
coexist as FIPS-approved algorithms, allowing for a gradual transition to AES.
[Word Count: 24]

It is easy to see that 3DES is a formidable algorithm. Because the underlying
cryptographic algorithm is DEA, 3DES can claim the same resistance to cryptanalysis
[Word Count: 26]

38
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

based on the algorithm as is claimed for DEA.Furthermore,with a 168-bit key length,
brute-force attacks are effectively impossible.
Ultimately,AES is intended to replace 3DES, but this process will take a number
of years. NIST anticipates that 3DES will remain an approved algorithm (for U.S.
government use) for the foreseeable future.
[Word Count: 50]

2.2 / SYMMETRIC BLOCK ENCRYPTION ALGORITHMS 39
[Word Count: 7]

Plaintext
(16 bytes)
Plaintext
(16 bytes)
[Word Count: 6]

Figure 2.5
AES Encryption and Decryption
[Word Count: 6]

matrix is by column. So, for example, the first four bytes of a 128-bit plaintext input to
the encryption cipher occupy the first column of the in matrix, the second four bytes
occupy the second column, and so on. Similarly, the first four bytes of the expanded
key, which form a word, occupy the first column of the w matrix.
The following comments give some insight into AES.
[Word Count: 68]

1. One noteworthy feature of this structure is that it is not a Feistel structure.Recall
that in the classic Feistel structure, half of the data block is used to modify the
other half of the data block, and then the halves are swapped.AES does not use
[Word Count: 46]

40
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

a Feistel structure but processes the entire data block in parallel during each
round using substitutions and permutation.
[Word Count: 18]

2. The key that is provided as input is expanded into an array of forty-four 32-bit
words, w[i]. Four distinct words (128 bits) serve as a round key for each round.
[Word Count: 31]

3. Four different stages are used, one of permutation and three of substitution:
[Word Count: 13]

• Substitute bytes: Uses a table, referred to as an S-box,4 to perform a byte-by-
byte substitution of the block.
[Word Count: 20]

• Shift rows: A simple permutation that is performed row by row.
[Word Count: 12]

• Mix columns: A substitution that alters each byte in a column as a function
of all of the bytes in the column.
[Word Count: 23]

• Add round key: A simple bitwise XOR of the current block with a portion
of the expanded key.
[Word Count: 19]

4. The structure is quite simple. For both encryption and decryption, the cipher
begins with an Add Round Key stage,followed by nine rounds that each includes
all four stages, followed by a tenth round of three stages. Figure 2.6 depicts the
structure of a full encryption round.
[Word Count: 47]

5. Only the Add Round Key stage makes use of the key. For this reason, the cipher
begins and ends with an Add Round Key stage. Any other stage, applied at the
beginning or end, is reversible without knowledge of the key and so would add
no security.
[Word Count: 48]

6. The Add Round Key stage by itself would not be formidable. The other three
stages together scramble the bits, but by themselves, they would provide no secu-
rity because they do not use the key.We can view the cipher as alternating oper-
ations of XOR encryption (Add Round Key) of a block, followed by scrambling
of the block (the other three stages), followed by XOR encryption, and so on.
This scheme is both efficient and highly secure.
[Word Count: 78]

7. Each stage is easily reversible. For the Substitute Byte, Shift Row, and Mix
Columns stages, an inverse function is used in the decryption algorithm. For the
Add Round Key stage,the inverse is achieved by XORing the same round key to
the block, using the result that A
B
B 
A.
[Word Count: 51]

8. As with most block ciphers, the decryption algorithm makes use of the expanded
key in reverse order. However, the decryption algorithm is not identical to the
encryption algorithm. This is a consequence of the particular structure of AES.
9. Once it is established that all four stages are reversible, it is easy to verify that
decryption does recover the plaintext. Figure 2.5 lays out encryption and decryp-
tion going in opposite vertical directions. At each horizontal point (e.g., the
dashed line in the figure), State is the same for both encryption and decryption.
[Word Count: 94]

10. The final round of both encryption and decryption consists of only three
stages. Again, this is a consequence of the particular structure of AES and is
required to make the cipher reversible.
[Word Count: 33]

4The term S-box, or substitution box, is commonly used in the description of symmetric ciphers to refer to
a table used for a table-lookup type of substitution mechanism.
[Word Count: 28]

S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
S
SubBytes
[Word Count: 17]

r0
r1
r2
r3
r4
r5
r6
r7
r8
r9
r10
r11
r12
r13
r14
r15
[Word Count: 16]

42
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

Random numbers play an important role in the use of encryption for various network
security applications.We provide an overview in this section.The topic is examined in
more detail in Appendix E.
[Word Count: 31]

A number of network security algorithms based on cryptography make use of random
numbers. For example,
[Word Count: 16]

• Generation of keys for the RSA public-key encryption algorithm (described
in Chapter 3) and other public-key algorithms.
[Word Count: 18]

• Generation of a stream key for symmetric stream cipher (discussed in the
following section).
[Word Count: 15]

• Generation of a symmetric key for use as a temporary session key.This function
is used in a number of networking applications,such as Transport Layer Security
(Chapter 5), Wi-Fi (Chapter 6), e-mail security (Chapter 7), and IP security
(Chapter 8).
[Word Count: 40]

• In a number of key distribution scenarios, such as Kerberos (Chapter 4),
random numbers are used for handshaking to prevent replay attacks.
[Word Count: 23]

These applications give rise to two distinct and not necessarily compatible
requirements for a sequence of random numbers: randomness and unpredictability.
[Word Count: 21]

RANDOMNESS Traditionally, the concern in the generation of a sequence of allegedly
random numbers has been that the sequence of numbers be random in some well-
defined statistical sense. The following criteria are used to validate that a sequence
of numbers is random.
[Word Count: 43]

• Uniform distribution: The distribution of bits in the sequence should be uniform;
that is, the frequency of occurrence of ones and zeros should be approximately
the same.
[Word Count: 28]

• Independence: No one subsequence in the sequence can be inferred from the
others.
[Word Count: 14]

2.3 / RANDOM AND PSEUDORANDOM NUMBERS 43
[Word Count: 7]

Cryptographic applications typically make use of algorithmic techniques for random
number generation. These algorithms are deterministic and therefore produce
sequences of numbers that are not statistically random. However, if the algorithm is
good, the resulting sequences will pass many reasonable tests of randomness. Such
numbers are referred to as pseudorandom numbers.
You may be somewhat uneasy about the concept of using numbers generated
by a deterministic algorithm as if they were random numbers. Despite what might
be called “philosophical” objections to such a practice, it generally works. As one
expert on probability theory puts it [HAMM91],
[Word Count: 96]

For practical purposes we are forced to accept the awkward concept
of “relatively random” meaning that with regard to the proposed use
we can see no reason why they will not perform as if they were
random (as the theory usually requires).This is highly subjective and
is not very palatable to purists, but it is what statisticians regularly
appeal to when they take “a random sample”—they hope that any
results they use will have approximately the same properties as a
complete counting of the whole sample space that occurs in their
theory.
[Word Count: 92]

Figure 2.7 contrasts a true random number generator (TRNG) with two
forms of pseudorandom number generators. A TRNG takes as input a source that
is effectively random; the source is often referred to as an entropy source. In
essence, the entropy source is drawn from the physical environment of the com-
puter and could include things such as keystroke timing patterns, disk electrical
activity, mouse movements, and instantaneous values of the system clock. The
source, or combination of sources, serves as input to an algorithm that produces
[Word Count: 87]

44
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

• Pseudorandom number generator: An algorithm that is used to produce an
open-ended sequence of bits is referred to as a PRNG.A common application
for an open-ended sequence of bits is as input to a symmetric stream cipher, as
discussed in the following section.
[Word Count: 44]

• Pseudorandom function (PRF): A PRF is used to produce a pseudorandom
string of bits of some fixed length. Examples are symmetric encryption keys
and nonces.Typically, the PRF takes as input a seed plus some context specific
values, such as a user ID or an application ID.A number of examples of PRFs
will be seen throughout this book.
[Word Count: 58]

Other than the number of bits produced, there is no difference between a
PRNG and a PRF. The same algorithms can be used in both applications. Both
require a seed and both must exhibit randomness and unpredictability. Furthermore,
a PRNG application may also employ context-specific input.
[Word Count: 46]

TRNG = true random number generator
PRNG = pseudorandom number generator
PRF = pseudorandom function
[Word Count: 15]

Figure 2.7
Random and Pseudorandom Number Generators
[Word Count: 7]

Cryptographic PRNGs have been the subject of much research over the years, and a
wide variety of algorithms have been developed.These fall roughly into two categories:
[Word Count: 26]

• Purpose-built algorithms: These are algorithms designed specifically and solely
for the purpose of generating pseudorandom bit streams. Some of these algo-
rithms are used for a variety of PRNG applications;several of these are described
in the next section. Others are designed specifically for use in a stream cipher.
The most important example of the latter is RC4, described in the next section.
[Word Count: 63]

• Algorithms based on existing cryptographic algorithms: Cryptographic algo-
rithms have the effect of randomizing input. Indeed, this is a requirement of
such algorithms. For example, if a symmetric block cipher produced ciphertext
that had certain regular patterns in it,it would aid in the process of cryptanalysis.
Thus, cryptographic algorithms can serve as the core of PRNGs. Three broad
categories of cryptographic algorithms are commonly used to create PRNGs:
[Word Count: 69]

—Hash functions and message authentication codes
[Word Count: 6]

Any of these approaches can yield a cryptographically strong PRNG. A
purpose-built algorithm may be provided by an operating system for general use.
For applications that already use certain cryptographic algorithms for encryption or
authentication, it makes sense to re-use the same code for the PRNG. Thus, all of
these approaches are in common use.
[Word Count: 55]

A block cipher processes the input one block of elements at a time, producing an
output block for each input block. A stream cipher processes the input elements
continuously, producing output one element at a time as it goes along. Although
block ciphers are far more common, there are certain applications in which a stream
cipher is more appropriate. Examples are given subsequently in this book. In this
section, we look at perhaps the most popular symmetric stream cipher, RC4.
We begin with an overview of stream cipher structure, and then examine RC4.
[Word Count: 93]

46
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

operation. For example, if the next byte generated by the generator is 01101100
and the next plaintext byte is 11001100, then the resulting ciphertext byte is
[Word Count: 26]

11001100
plaintext
01101100
key stream
10100000
ciphertext
[Word Count: 7]

Decryption requires the use of the same pseudorandom sequence:
[Word Count: 9]

10100000
ciphertext
01101100
key stream
11001100
plaintext
[Word Count: 7]

[KUMA97] lists the following important design considerations for a stream
cipher.
[Word Count: 11]

3. Note from Figure 2.8 that the output of the pseudorandom number generator
is conditioned on the value of the input key. To guard against brute-force
attacks, the key needs to be sufficiently long.The same considerations as apply
for block ciphers are valid here. Thus, with current technology, a key length of
at least 128 bits is desirable.
[Word Count: 58]

Pseudorandom byte
generator
(key stream generator)
[Word Count: 6]

Pseudorandom byte
generator
(key stream generator)
[Word Count: 6]

Table 2.3
Speed Comparisons of Symmetric Ciphers on a Pentium II
[Word Count: 11]

48
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

INITIALIZATION OF S To begin, the entries of S are set equal to the values from 0
through 255 in ascending order; that is, S[0] 
0, S[1] 
1, . . ., S[255] 
255. A
temporary vector,T, is also created. If the length of the key K is 256 bytes, then K is
transferred to T. Otherwise, for a key of length keylen bytes, the first keylen elements
of T are copied from K, and then K is repeated as many times as necessary to fill out
T.These preliminary operations can be summarized as:
[Word Count: 93]

/* Initialization */
for i 
0 to 255 do
S[i] 
i;
T[i] 
K[i mod keylen];
[Word Count: 15]

Next we use T to produce the initial permutation of S. This involves starting
with S[0] and going through to S[255] and, for each S[i], swapping S[i] with another
byte in S according to a scheme dictated by T[i]:
[Word Count: 39]

/* Initial Permutation of S */
j 
0;
for i 
0 to 255 do
j 
(j 
S[i] 
T[i]) mod 256;
Swap (S[i], S[j]);
[Word Count: 23]

Because the only operation on S is a swap, the only effect is a permutation. S
still contains all the numbers from 0 through 255.
[Word Count: 25]

STREAM GENERATION Once the S vector is initialized, the input key is no longer
used. Stream generation involves cycling through all the elements of S[i] and, for
each S[i], swapping S[i] with another byte in S according to a scheme dictated by the
current configuration of S. After S[255] is reached, the process continues, starting
over again at S[0]:
[Word Count: 59]

/* Stream Generation */
i, j 
0;
while (true)
i 
(i 
1) mod 256;
j 
(j 
S[i]) mod 256;
Swap (S[i], S[j]);
t 
(S[i] 
S[j]) mod 256;
k 
S[t];
[Word Count: 29]

To encrypt, XOR the value k with the next byte of plaintext.To decrypt, XOR
the value k with the next byte of ciphertext.
Figure 2.9 illustrates the RC4 logic.
[Word Count: 29]

STRENGTH OF RC4 A number of papers have been published analyzing methods of
attacking RC4 (e.g., [KNUD98], [MIST98], [FLUH00], [MANT01], [PUDO02],
[PAUL03], [PAUL04]). None of these approaches is practical against RC4 with a
reasonable key length, such as 128 bits. A more serious problem is reported in
[Word Count: 47]

50
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

[FLUH01]. The authors demonstrate that the WEP protocol, intended to provide
confidentiality on 802.11 wireless LAN networks, is vulnerable to a particular attack
approach. In essence, the problem is not with RC4 itself but the way in which keys
are generated for use as input to RC4.This particular problem does not appear to be
relevant to other applications using RC4 and can be remedied in WEP by changing
the way in which keys are generated. This problem points out the difficulty in
designing a secure system that involves both cryptographic functions and protocols
that make use of them.
[Word Count: 98]

In the cipher block chaining (CBC) mode (Figure 2.10), the input to the encryption
algorithm is the XOR of the current plaintext block and the preceding ciphertext
block; the same key is used for each block. In effect, we have chained together the
processing of the sequence of plaintext blocks.The input to the encryption function
[Word Count: 55]

2.5 / CIPHER BLOCK MODES OF OPERATION 51
[Word Count: 8]

for each plaintext block bears no fixed relationship to the plaintext block.
Therefore, repeating patterns of b bits are not exposed.
For decryption, each cipher block is passed through the decryption algorithm.
The result is XORed with the preceding ciphertext block to produce the plaintext
block.To see that this works, we can write
[Word Count: 53]

where E[K, X] is the encryption of plaintext X using key K, and
is the exclusive-
OR operation.Then
[Word Count: 18]

D(K, Cj) 
Cj 1
Pj
Cj 1
D(K, Cj) 
Cj 1
Cj 1
Pj
Pj
[Word Count: 15]

which verifies Figure 2.10b.
To produce the first block of ciphertext, an initialization vector (IV) is XORed
with the first block of plaintext. On decryption, the IV is XORed with the output of
the decryption algorithm to recover the first block of plaintext.
The IV must be known to both the sender and receiver. For maximum security,
the IV should be protected as well as the key. This could be done by sending the IV
[Word Count: 75]

Figure 2.10
Cipher Block Chaining (CBC) Mode
[Word Count: 7]

52
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

using ECB encryption. One reason for protecting the IV is as follows: If an opponent
is able to fool the receiver into using a different value for IV,then the opponent is able
to invert selected bits in the first block of plaintext.To see this, consider the following:
[Word Count: 47]

Now use the notation that X[j] denotes the jth bit of the b-bit quantity X.Then
[Word Count: 15]

Then, using the properties of XOR, we can state
[Word Count: 9]

where the prime notation denotes bit complementation.This means that if an oppo-
nent can predictably change bits in IV, the corresponding bits of the received value
of P1 can be changed.
[Word Count: 31]

The same reasoning holds for subsequent steps in the process.
[Word Count: 10]

2.5 / CIPHER BLOCK MODES OF OPERATION 53
[Word Count: 8]

Although interest in the counter mode (CTR) has increased recently, with applica-
tions to ATM (asynchronous transfer mode) network security and IPSec (IP secu-
rity), this mode was proposed early on (e.g., [DIFF79]).
Figure 2.12 depicts the CTR mode.A counter equal to the plaintext block size
is used.The only requirement stated in SP 800-38A is that the counter value must be
different for each plaintext block that is encrypted. Typically, the counter is initial-
ized to some value and then incremented by 1 for each subsequent block (modulo
[Word Count: 88]

Figure 2.11
s-bit Cipher Feedback (CFB) Mode
[Word Count: 7]

54
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

2b, where b is the block size). For encryption, the counter is encrypted and then
XORed with the plaintext block to produce the ciphertext block; there is no chain-
ing. For decryption, the same sequence of counter values is used, with each
encrypted counter XORed with a ciphertext block to recover the corresponding
plaintext block.
[LIPM00] lists the following advantages of CTR mode.
[Word Count: 63]

• Hardware efficiency: Unlike the chaining modes, encryption (or decryption) in
CTR mode can be done in parallel on multiple blocks of plaintext or ciphertext.
For the chaining modes, the algorithm must complete the computation on one
block before beginning on the next block.This limits the maximum throughput of
[Word Count: 49]

2.6 / RECOMMENDED READING AND WEB SITES 55
[Word Count: 8]

the algorithm to the reciprocal of the time for one execution of block encryption
or decryption. In CTR mode, the throughput is only limited by the amount of
parallelism that is achieved.
[Word Count: 32]

• Software efficiency: Similarly, because of the opportunities for parallel exe-
cution in CTR mode, processors that support parallel features (such
as aggressive pipelining, multiple instruction dispatch per clock cycle, a
large number of registers, and SIMD instructions) can be effectively
utilized.
[Word Count: 42]

• Preprocessing: The execution of the underlying encryption algorithm does
not depend on input of the plaintext or ciphertext. Therefore, if sufficient
memory is available and security is maintained, preprocessing can be used to
prepare the output of the encryption boxes that feed into the XOR functions
in Figure 2.12. When the plaintext or ciphertext input is presented, then the
only computation is a series of XORs. Such a strategy greatly enhances
throughput.
[Word Count: 73]

• Random access: The ith block of plaintext or ciphertext can be processed in
random-access fashion. With the chaining modes, block Ci cannot be com-
puted until the i
1 prior block are computed. There may be applications in
which a ciphertext is stored, and it is desired to decrypt just one block; for such
applications, the random access feature is attractive.
[Word Count: 62]

• Provable security: It can be shown that CTR is at least as secure as the other
modes discussed in this section.
[Word Count: 22]

• Simplicity: Unlike ECB and CBC modes, CTR mode requires only the imple-
mentation of the encryption algorithm and not the decryption algorithm. This
matters most when the decryption algorithm differs substantially from the
encryption algorithm, as it does for AES. In addition, the decryption key
scheduling need not be implemented.
[Word Count: 51]

The topics in this chapter are covered in greater detail in [STAL11]. For coverage of crypto-
graphic algorithms, [SCHN96] is an essential reference work; it contains descriptions of virtu-
ally every cryptographic algorithm and protocol published up to the time of the writing of the
book. Another worthwhile and detailed survey is [MENE97]. A more in-depth treatment,
with rigorous mathematical discussion, is [STIN06].
[Word Count: 63]

MENE97
Menezes, A.; van Oorschot, P.; and Vanstone, S. Handbook of Applied
Cryptography. Boca Raton, FL: CRC Press, 1997.
SCHN96
Schneier, B. Applied Cryptography. New York:Wiley, 1996.
STAL11
Stallings, W. Cryptography and Network Security: Principles and Practice, Fifth
Edition. Upper Saddle River, NJ: Prentice Hall, 2011.
STIN06
Stinson, D. Cryptography:Theory and Practice. Boca Raton, FL: Chapman&Hall/
CRC Press, 2006.
[Word Count: 59]

56
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

• AES home page: NIST’s page on AES. Contains the standard plus a number of other
relevant documents.
[Word Count: 18]

• AES Lounge: Contains a comprehensive bibliography of documents and papers on
AES with access to electronic copies.
[Word Count: 18]

• Block Cipher Modes of Operation: NIST page with full information on NIST-approved
modes of operation.
[Word Count: 16]

2.7
KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

Advanced Encryption
Standard (AES)
block cipher
brute-force attack
cipher block chaining (CBC)
mode
cipher feedback (CFB) mode
ciphertext
counter mode (CTR)
cryptanalysis
[Word Count: 22]

Cryptography
Data Encryption Standard
(DES)
decryption
electronic codebook (ECB)
mode
encryption
end-to-end encryption
Feistel cipher
key distribution
[Word Count: 17]

keystream
link encryption
plaintext
session key
stream cipher
subkey
symmetric encryption
triple DES (3DES)
[Word Count: 14]

2.1
What are the essential ingredients of a symmetric cipher?
2.2
What are the two basic functions used in encryption algorithms?
2.3
How many keys are required for two people to communicate via a symmetric
cipher?
2.4
What is the difference between a block cipher and a stream cipher?
2.5
What are the two general approaches to attacking a cipher?
2.6
Why do some block cipher modes of operation only use encryption while others use
both encryption and decryption?
2.7
What is triple encryption?
2.8
Why is the middle portion of 3DES a decryption rather than an encryption?
[Word Count: 98]

2.1
This problem uses a real-world example of a symmetric cipher, from an old U.S.
Special Forces manual (public domain).The document, filename SpecialForces.pdf, is
available at this book’s Web site.
[Word Count: 30]

2.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 57
[Word Count: 9]

where C
ciphertext, K
secret key, K0
leftmost 64 bits of K, K1
rightmost
64 bits of K,
bitwise exclusive OR, and 
is addition mod 264.
a.
Show the decryption equation.That is, show the equation for P as a function of C,
K0, and K1.
b. Suppose and adversary has access to two sets of plaintexts and their correspond-
ing ciphertexts and wishes to determine K.We have the two equations:
[Word Count: 70]

First, derive an equation in one unknown (e.g., K0). Is it possible to proceed fur-
ther to solve for K0?
2.3
Perhaps the simplest “serious” symmetric block encryption algorithm is the Tiny
Encryption Algorithm (TEA). TEA operates on 64-bit blocks of plaintext using a
128-bit key. The plaintext is divided into two 32-bit blocks (L0, R0), and the key is
divided into four 32-bit blocks (K0, K1, K2, K3). Encryption involves repeated applica-
tion of a pair of rounds, defined as follows for rounds i and i
1:
[Word Count: 88]

where F is defined as
F(M, Kj, Kk, δi) 
((M 
4) 
Kj)
((M 
5) 
Kk)
(M 
δi)
[Word Count: 17]

k9
k8, k10
k7, k11
k6, . . ., k16
k1
=
=
=
=
[Word Count: 15]

58
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

2.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 59
[Word Count: 9]

2.12
With the ECB mode, if there is an error in a block of the transmitted ciphertext, only
the corresponding plaintext block is affected. However, in the CBC mode, this error
propagates. For example, an error in the transmitted C1 (Figure 2.10) obviously cor-
rupts P1 and P2.
a.
Are any blocks beyond P2 affected?
b. Suppose that there is a bit error in the source version of P1. Through how
many ciphertext blocks is this error propagated? What is the effect at the
receiver?
[Word Count: 85]

60
CHAPTER 2 / SYMMETRIC ENCRYPTION AND MESSAGE CONFIDENTIALITY
[Word Count: 9]

Figure 2.13
Block Cipher Modes for Plaintext not a Multiple of Block Size
[Word Count: 13]

PUBLIC-KEY CRYPTOGRAPHY
AND MESSAGE AUTHENTICATION
[Word Count: 5]

3.1
Approaches to Message Authentication
[Word Count: 5]

Authentication Using Conventional Encryption
Message Authentication without Message Encryption
[Word Count: 9]

Hash Function Requirements
Security of Hash Functions
Simple Hash Functions
The SHA Secure Hash Function
[Word Count: 15]

Public-Key Encryption Structure
Applications for Public-Key Cryptosystems
Requirements for Public-Key Cryptography
[Word Count: 11]

The RSA Public-Key Encryption Algorithm
Diffie-Hellman Key Exchange
Other Public-Key Cryptography Algorithms
[Word Count: 12]

3.8
Key Terms, Review Questions, and Problems
[Word Count: 7]

62
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Every Egyptian received two names, which were known respectively as the true
name and the good name, or the great name and the little name; and while the
good or little name was made public, the true or great name appears to have been
carefully concealed.
[Word Count: 46]

—The Golden Bough, Sir James George Frazer
[Word Count: 7]

To guard against the baneful influence exerted by strangers is therefore an ele-
mentary dictate of savage prudence. Hence before strangers are allowed to enter a
district, or at least before they are permitted to mingle freely with the inhabitants,
certain ceremonies are often performed by the natives of the country for the pur-
pose of disarming the strangers of their magical powers, or of disinfecting, so to
speak, the tainted atmosphere by which they are supposed to be surrounded.
[Word Count: 80]

—The Golden Bough, Sir James George Frazer
[Word Count: 7]

In addition to message confidentiality, message authentication is an important
network security function. This chapter examines three aspects of message
authentication. First, we look at the use of message authentication codes and hash
functions to provide message authentication. Then we look at public-key encryp-
tion principles and two specific public-key algorithms.These algorithms are useful
in the exchange of conventional encryption keys. Then we look at the use of
public-key encryption to produce digital signatures, which provides an enhanced
form of message authentication.
[Word Count: 82]

3.1
APPROACHES TO MESSAGE AUTHENTICATION
[Word Count: 5]

Authentication Using Conventional Encryption
[Word Count: 4]

It would seem possible to perform authentication simply by the use of symmetric
encryption. If we assume that only the sender and receiver share a key (which is as
it should be), then only the genuine sender would be able to encrypt a message
[Word Count: 44]

1For simplicity, for the remainder of this chapter, we refer to message authentication. By this we mean
both authentication of transmitted messages and of stored data (data authentication).
[Word Count: 28]

3.1 / APPROACHES TO MESSAGE AUTHENTICATION 63
[Word Count: 7]

Message Authentication without Message Encryption
[Word Count: 5]

3. Authentication of a computer program in plaintext is an attractive service.The
computer program can be executed without having to decrypt it every time,
which would be wasteful of processor resources. However, if a message
authentication tag were attached to the program, it could be checked when-
ever assurance is required of the integrity of the program.
[Word Count: 57]

Thus, there is a place for both authentication and encryption in meeting security
requirements.
[Word Count: 14]

64
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Figure 3.1
Message Authentication Using a Message Authentication Code (MAC)
[Word Count: 10]

1. The receiver is assured that the message has not been altered. If an attacker
alters the message but does not alter the code, then the receiver’s calculation
of the code will differ from the received code. Because the attacker is assumed
not to know the secret key, the attacker cannot alter the code to correspond to
the alterations in the message.
[Word Count: 62]

2. The receiver is assured that the message is from the alleged sender.Because no one
else knows the secret key,no one else could prepare a message with a proper code.
[Word Count: 30]

3. If the message includes a sequence number (such as is used with HDLC and
TCP), then the receiver can be assured of the proper sequence, because an
attacker cannot successfully alter the sequence number.
[Word Count: 35]

3.1 / APPROACHES TO MESSAGE AUTHENTICATION 65
[Word Count: 7]

A number of algorithms could be used to generate the code.The NIST specifi-
cation, FIPS PUB 113, recommends the use of DES. DES is used to generate an
encrypted version of the message, and the last number of bits of ciphertext are used
as the code.A 16- or 32-bit code is typical.
The process just described is similar to encryption. One difference is that the
authentication algorithm need not be reversible, as it must for decryption. Because
of the mathematical properties of the authentication function, it is less vulnerable to
being broken than encryption.
[Word Count: 94]

• Encryption software is quite slow. Even though the amount of data to be
encrypted per message is small, there may be a steady stream of messages into
and out of a system.
[Word Count: 33]

• Encryption hardware costs are nonnegligible. Low-cost chip implementations
of DES are available, but the cost adds up if all nodes in a network must have
this capability.
• Encryption hardware is optimized toward large data sizes. For small blocks of
data, a high proportion of the time is spent in initialization/invocation overhead.
[Word Count: 53]

• An encryption algorithm may be protected by a patent.
[Word Count: 10]

Figure 3.2c shows a technique that uses a hash function but no encryption for
message authentication. This technique assumes that two communicating parties,
say A and B, share a common secret value SAB. When A has a message to send to B,
it calculates the hash function over the concatenation of the secret value and the
message: MDM
H(SAB7M).2 It then sends [M7MDM] to B. Because B possesses
SAB, it can recompute H(SAB7M) and verify MDM. Because the secret value itself is
=
[Word Count: 83]

66
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Figure 3.2
Message Authentication Using a One-Way Hash Function
[Word Count: 9]

not sent, it is not possible for an attacker to modify an intercepted message.As long
as the secret value remains secret, it is also not possible for an attacker to generate a
false message.
A variation on the third technique, called HMAC, is the one adopted for IP
security (described in Chapter 8); it also has been specified for SNMPv3 (Chapter 12).
[Word Count: 62]

The one-way hash function, or secure hash function, is important not only in mes-
sage authentication but in digital signatures. In this section, we begin with a discus-
sion of requirements for a secure hash function.Then we look at the most important
hash function, SHA.
[Word Count: 45]

The purpose of a hash function is to produce a “fingerprint” of a file, message, or
other block of data.To be useful for message authentication, a hash function H must
have the following properties:
[Word Count: 34]

1. H can be applied to a block of data of any size.
[Word Count: 13]

3. H(x) is relatively easy to compute for any given x, making both hardware and
software implementations practical.
[Word Count: 18]

4. For any given code h,it is computationally infeasible to find x such that H(x) 
h.
A hash function with this property is referred to as one-way or preimage
resistant.3
[Word Count: 30]

5. For any given block x, it is computationally infeasible to find y
x with H(y) 
H(x).A hash function with this property is referred to as second preimage resis-
tant. This is sometimes referred to as weak collision resistant.
[Word Count: 39]

6. It is computationally infeasible to find any pair (x, y) such that H(x) 
H(y).
A hash function with this property is referred to as collision resistant. This is
sometimes referred to as strong collision resistant.
[Word Count: 36]

3For f(x) 
y, x is said to be a preimage of y. Unless f is one-to-one, there may be multiple preimage
values for a given y.
=
[Word Count: 27]

68
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

As with symmetric encryption, there are two approaches to attacking a secure hash
function:cryptanalysis and brute-force attack.As with symmetric encryption algorithms,
cryptanalysis of a hash function involves exploiting logical weaknesses in the algorithm.
The strength of a hash function against brute-force attacks depends solely on
the length of the hash code produced by the algorithm. For a hash code of length n,
the level of effort required is proportional to the following:
[Word Count: 72]

All hash functions operate using the following general principles. The input (mes-
sage, file, etc.) is viewed as a sequence of n-bit blocks. The input is processed one
block at a time in an iterative fashion to produce an n-bit hash function.
One of the simplest hash functions is the bit-by-bit exclusive-OR (XOR) of
every block.This can be expressed as
[Word Count: 60]

Ci
ith bit of the hash code, 1 ≤i ≤n
m
number of n-bit blocks in the input
bij
ith bit in jth block
XOR operation
=

[Word Count: 28]

1. Initially set the n-bit hash value to zero.
[Word Count: 9]

2. Process each successive n-bit block of data:
[Word Count: 8]

a. Rotate the current hash value to the left by one bit.
[Word Count: 12]

Figure 3.3
Simple Hash Function Using Bitwise XOR
[Word Count: 8]

70
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Next, encrypt the entire message plus hash code using CBC mode to produce the
encrypted message Y1, Y2, . . ., YN 1. [JUEN85] points out several ways in which
the ciphertext of this message can be manipulated in such a way that it is not
detectable by the hash code. For example, by the definition of CBC (Figure 2.10),
we have
[Word Count: 62]

XN 1
X1
X2
. . .
XN
[IV
D(K, Y1)]
[Y1
D(K, Y2)]
. . .
[YN 1
D(K, YN)]
[Word Count: 21]

Because the terms in the preceding equation can be XORed in any order, it follows
that the hash code would not change if the ciphertext blocks were permuted.
[Word Count: 28]

Message Size
< 264
< 264
< 264
< 2128
< 2128
[Word Count: 12]

Notes: 1. All sizes are measured in bits.
2. Security refers to the fact that a birthday attack on a message digest of size n produces a
collision with a workfactor of approximately 2n/2.
[Word Count: 34]

The algorithm takes as input a message with a maximum length of less than
2128 bits and produces as output a 512-bit message digest. The input is processed in
1024-bit blocks. Figure 3.4 depicts the overall processing of a message to produce a
digest.The processing consists of the following steps.
[Word Count: 50]

Step 1 Append padding bits: The message is padded so that its length is congruent
to 896 modulo 1024 [length
896 (mod 1024)]. Padding is always added,
even if the message is already of the desired length. Thus, the number of
padding bits is in the range of 1 to 1024.The padding consists of a single 1 bit
followed by the necessary number of 0 bits.
[Word Count: 66]

a
6A09E667F3BCC908
e
510E527FADE682D1
b
BB67AE8584CAA73B
f
9B05688C2B3E6C1F
[Word Count: 8]

These values are stored in big-endian format, which is the most significant
byte of a word in the low-address (leftmost) byte position.These words were
obtained by taking the first sixty-four bits of the fractional parts of the square
roots of the first eight prime numbers.
[Word Count: 45]

72
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Figure 3.4
Message Digest Generation Using SHA-512
[Word Count: 7]

Step 5 Output: After all N 1024-bit blocks have been processed, the output from
the Nth stage is the 512-bit message digest.
[Word Count: 22]

In recent years, there has been increased interest in developing a MAC derived
from a cryptographic hash code, such as SHA-1.The motivations for this interest are
[Word Count: 26]

• Cryptographic hash functions generally execute faster in software than con-
ventional encryption algorithms such as DES.
[Word Count: 17]

• Library code for cryptographic hash functions is widely available.
[Word Count: 10]

Figure 3.5
SHA-512 Processing of a Single 1024-Bit Block
[Word Count: 9]

74
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

A hash function such as SHA-1 was not designed for use as a MAC and
cannot be used directly for that purpose because it does not rely on a secret key.
There have been a number of proposals for the incorporation of a secret key into
an existing hash algorithm. The approach that has received the most support is
HMAC [BELL96a, BELL96b]. HMAC has been issued as RFC 2104, has been
chosen as the mandatory-to-implement MAC for IP Security, and is used in other
Internet protocols, such as Transport Layer Security (TLS) and Secure Electronic
Transaction (SET).
[Word Count: 97]

HMAC DESIGN OBJECTIVES RFC 2104 lists the following design objectives for
HMAC.
[Word Count: 12]

• To use, without modifications, available hash functions. In particular, hash
functions that perform well in software, and for which code is freely and
widely available
[Word Count: 26]

• To allow for easy replaceability of the embedded hash function in case faster
or more secure hash functions are found or required
[Word Count: 23]

• To preserve the original performance of the hash function without incurring a
significant degradation
[Word Count: 15]

• To use and handle keys in a simple way
[Word Count: 10]

• To have a well-understood cryptographic analysis of the strength of the
authentication mechanism based on reasonable assumptions on the embedded
hash function
[Word Count: 23]

HMAC ALGORITHM Figure 3.6 illustrates the overall operation of HMAC. The
following terms are defined:
[Word Count: 15]

M
message input to HMAC (including the padding specified in the embed-
ded hash function)
[Word Count: 15]

b
number of bits in a block
n
length of hash code produced by embedded hash function
K
secret key; if key length is greater than b, the key is input to the hash
function to produce an n-bit key; recommended length is > n
K
K padded with zeros on the left so that the result is b bits in length
ipad
00110110 (36 in hexadecimal) repeated b/8 times
[Word Count: 70]

opad
01011100 (5C in hexadecimal) repeated b/8 times
[Word Count: 8]

HMAC(K, M) 
H[(K
opad) 7 H[(K
ipad) 7 M]]
[Word Count: 9]

1. Append zeros to the left end of K to create a b-bit string K
(e.g., if K is of
length 160 bits and b
512, then K will be appended with 44 zero bytes).
[Word Count: 35]

2. XOR (bitwise exclusive-OR) K with ipad to produce the b-bit block Si.
+
=
[Word Count: 15]

76
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

4. Apply H to the stream generated in step 3.
[Word Count: 10]

5. XOR K with opad to produce the b-bit block So.
[Word Count: 11]

6. Append the hash result from step 4 to So.
[Word Count: 10]

7. Apply H to the stream generated in step 6 and output the result.
[Word Count: 14]

Note that the XOR with ipad results in flipping one-half of the bits of K.
Similarly, the XOR with opad results in flipping one-half of the bits of K, but a dif-
ferent set of bits. In effect, by passing Si and So through the hash algorithm, we have
pseudorandomly generated two keys from K.
HMAC should execute in approximately the same time as the embedded hash
function for long messages. HMAC adds three executions of the basic hash function
(for Si, So, and the block produced from the inner hash).
[Word Count: 91]

In this section, we look at several MACs based on the use of a block cipher.
[Word Count: 16]

T
message authentication code, also referred to as the tag
[Word Count: 10]

Tlen
bit length of T
MSBs(X) 
the s leftmost bits of the bit string X
[Word Count: 15]

If the message is not an integer multiple of the cipher block length, then the
final block is padded to the right (least significant bits) with a 1 and as many 0s as
necessary so that the final block is also of length b. The CMAC operation then
proceeds as before, except that a different n-bit key K2 is used instead of K1.
[Word Count: 63]

To generate the two n-bit keys, the block cipher is applied to the block that
consists entirely of 0 bits.The first subkey is derived from the resulting ciphertext by
a left shift of one bit and, conditionally, by XORing a constant that depends on the
block size. The second subkey is derived in the same manner from the first subkey.
[Word Count: 60]

1. Data that will be both authenticated and encrypted. This is the plaintext
message P of data block.
[Word Count: 18]

2. Associated data A that will be authenticated but not encrypted.An example is a
protocol header that must be transmitted in the clear for proper protocol opera-
tion but which needs to be authenticated.
[Word Count: 34]

(a) Message length is integer multiple of block size
[Word Count: 9]

(b) Message length is not integer multiple of block size
[Word Count: 10]

Figure 3.7
Cipher-Based Message Authentication Code (CMAC)
[Word Count: 7]

78
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

3. A nonce N that is assigned to the payload and the associated data. This is a
unique value that is different for every instance during the lifetime of a proto-
col association and is intended to prevent replay attacks and certain other
types of attacks.
[Word Count: 46]

Figure 3.8 illustrates the operation of CCM. For authentication, the input
includes the nonce, the associated data, and the plaintext.This input is formatted as
a sequence of blocks B0 through Br. The first block contains the nonce plus some
formatting bits that indicate the lengths of the N, A, and P elements.This is followed
[Word Count: 54]

Figure 3.8
Counter with Cipher Block Chaining-Message Authentication Code (CCM)
[Word Count: 10]

3.4 / PUBLIC-KEY CRYPTOGRAPHY PRINCIPLES 79
[Word Count: 6]

Of equal importance to conventional encryption is public-key encryption, which
finds use in message authentication and key distribution. This section looks first at
the basic concept of public-key encryption and takes a preliminary look at key dis-
tribution issues. Section 3.5 examines the two most important public-key algorithms:
RSA and Diffie-Hellman. Section 3.6 introduces digital signatures.
[Word Count: 56]

80
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

A public-key encryption scheme has six ingredients (Figure 3.9a).
[Word Count: 9]

• Plaintext: This is the readable message or data that is fed into the algorithm 
as input.
[Word Count: 17]

• Encryption algorithm: The encryption algorithm performs various transforma-
tions on the plaintext.
[Word Count: 13]

Plaintext
output
Encryption algorithm
(e.g., RSA)
Decryption algorithm
[Word Count: 8]

Plaintext
output
Encryption algorithm
(e.g., RSA)
[Word Count: 6]

(a) Encryption with public key
Bob
Alice
[Word Count: 7]

(b) Encryption with private key
Bob
Alice
[Word Count: 7]

3.4 / PUBLIC-KEY CRYPTOGRAPHY PRINCIPLES 81
[Word Count: 6]

• Public and private key: This is a pair of keys that have been selected so that 
if one is used for encryption, the other is used for decryption.The exact trans-
formations performed by the encryption algorithm depend on the public or
private key that is provided as input.
[Word Count: 49]

• Ciphertext: This is the scrambled message produced as output. It depends on
the plaintext and the key. For a given message, two different keys will produce
two different ciphertexts.
[Word Count: 30]

• Decryption algorithm: This algorithm accepts the ciphertext and the matching
key and produces the original plaintext.
[Word Count: 17]

As the names suggest, the public key of the pair is made public for others to
use, while the private key is known only to its owner.A general-purpose public-key
cryptographic algorithm relies on one key for encryption and a different but related
key for decryption.
The essential steps are the following:
[Word Count: 51]

1. Each user generates a pair of keys to be used for the encryption and decryp-
tion of messages.
[Word Count: 19]

2. Each user places one of the two keys in a public register or other accessible file.
This is the public key.The companion key is kept private.As Figure 3.9a suggests,
each user maintains a collection of public keys obtained from others.
[Word Count: 41]

3. If Bob wishes to send a private message to Alice,Bob encrypts the message using
Alice’s public key.
[Word Count: 18]

4. When Alice receives the message, she decrypts it using her private key. No
other recipient can decrypt the message because only Alice knows Alice’s pri-
vate key.
[Word Count: 28]

Applications for Public-Key Cryptosystems
[Word Count: 4]

Before proceeding, we need to clarify one aspect of public-key cryptosystems that is
otherwise likely to lead to confusion. Public-key systems are characterized by the
use of a cryptographic type of algorithm with two keys, one held private and one
available publicly. Depending on the application, the sender uses either the sender’s
private key, the receiver’s public key, or both to perform some type of cryptographic
function. In broad terms, we can classify the use of public-key cryptosystems into
three categories:
[Word Count: 81]

• Encryption/decryption: The sender encrypts a message with the recipient’s
public key.
[Word Count: 12]

82
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Table 3.2
Applications for Public-Key Cryptosystems
[Word Count: 6]

Algorithm
Encryption/Decryption
Digital Signature
Key Exchange
[Word Count: 6]

• Digital signature: The sender “signs” a message with its private key. Signing is
achieved by a cryptographic algorithm applied to the message or to a small
block of data that is a function of the message.
[Word Count: 37]

• Key exchange: Two sides cooperate to exchange a session key. Several different
approaches are possible, involving the private key(s) of one or both parties.
[Word Count: 25]

Some algorithms are suitable for all three applications, whereas others can be
used only for one or two of these applications. Table 3.2 indicates the applications
supported by the algorithms discussed in this chapter: RSA and Diffie Hellman.
This table also includes the Digital Signature Standard (DSS) and elliptic-curve
cryptography, also mentioned later in this chapter.
[Word Count: 56]

Requirements for Public-Key Cryptography
[Word Count: 4]

The cryptosystem illustrated in Figure 3.9 depends on a cryptographic algorithm
based on two related keys. Diffie and Hellman postulated this system without
demonstrating that such algorithms exist. However, they did lay out the conditions
that such algorithms must fulfill [DIFF76]:
[Word Count: 41]

1. It is computationally easy for a party B to generate a pair (public key PUb,
private key PRb).
[Word Count: 19]

2. It is computationally easy for a sender A, knowing the public key and the mes-
sage to be encrypted, M, to generate the corresponding ciphertext:
[Word Count: 26]

3. It is computationally easy for the receiver B to decrypt the resulting ciphertext
using the private key to recover the original message:
[Word Count: 23]

4. It is computationally infeasible for an opponent, knowing the public key, PUb, to
determine the private key, PRb.
[Word Count: 19]

5. It is computationally infeasible for an opponent, knowing the public key, PUb,
and a ciphertext, C, to recover the original message, M.
[Word Count: 23]

We can add a sixth requirement that, although useful, is not necessary for all
public-key applications.
[Word Count: 16]

6. Either of the two related keys can be used for encryption, with the other used
for decryption.
[Word Count: 18]

M
D[PUb, E(PRb, M)] 
D[PRb, E(PUb, M)]
=
=
[Word Count: 9]

3.5 / PUBLIC-KEY CRYPTOGRAPHY ALGORITHMS 83
[Word Count: 6]

The two most widely used public-key algorithms are RSA and Diffie-Hellman. We
look at both of these in this section and then briefly introduce two other algorithms.4
[Word Count: 27]

One of the first public-key schemes was developed in 1977 by Ron Rivest, Adi
Shamir, and Len Adleman at MIT and first published in 1978 [RIVE78]. The RSA
scheme has since that time reigned supreme as the most widely accepted and imple-
mented approach to public-key encryption. RSA is a block cipher in which the
plaintext and ciphertext are integers between 0 and n
1 for some n.
Encryption and decryption are of the following form period for some plaintext
block M and ciphertext block C:
[Word Count: 86]

Both sender and receiver must know the values of n and e, and only the
receiver knows the value of d. This is a public-key encryption algorithm with a pub-
lic key of KU
{e, n} and a private key of KR
{d, n}. For this algorithm to be sat-
isfactory for public-key encryption, the following requirements must be met.
[Word Count: 60]

1. It is possible to find values of e, d, n such that Med mod n
M for all M < n.
[Word Count: 22]

2. It is relatively easy to calculate Me and Cd for all values of M < n.
[Word Count: 17]

3. It is infeasible to determine d given e and n.
[Word Count: 11]

An example, from [SING99], is shown in Figure 3.11. For this example, the
keys were generated as follows:
[Word Count: 18]

1. Select two prime numbers, p
17 and q
11.
[Word Count: 10]

4This section uses some elementary concepts from number theory. For a review, see Appendix A.
[Word Count: 15]

84
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

3. Calculate f(n) 
(p
1)(q
1) 
16 × 10 
160.
4. Select e such that e is relatively prime to f(n) 
160 and less than f(n);we choose
e
7.
5. Determine d such that de mod 160 
1 and d < 160.The correct value is d
23,
because 23 × 7 
161 
(1 × 160) 
1.
[Word Count: 56]

The resulting keys are public key PU
{7, 187} and private key PR
{23,
187}. The example shows the use of these keys for a plaintext input of M
88. For
=
=
=
[Word Count: 34]

3.5 / PUBLIC-KEY CRYPTOGRAPHY ALGORITHMS 85
[Word Count: 6]

encryption, we need to calculate C
887 mod 187. Exploiting the properties of
modular arithmetic, we can do this as follows:
[Word Count: 21]

887 mod 187 
[(884 mod 187) × (882 mod 187) × (881 mod 187)] mod 187
[Word Count: 16]

887 mod 187 
(88 × 77 × 132) mod 187 
894,432 mod 187 
11
[Word Count: 14]

For decryption, we calculate M
1123 mod 187:
[Word Count: 8]

1123 mod 187 
[(111 mod 187) × (112 mod 187) × (114 mod 187) ×
(118 mod 187) × (118 mod 187)] mod 187
[Word Count: 24]

1123 mod 187 
(11 × 121 × 55 × 33 × 33) mod 187 
79,720,245 mod 187 
88
[Word Count: 18]

The first published public-key algorithm appeared in the seminal paper by Diffie
and Hellman that defined public-key cryptography [DIFF76] and is generally
referred to as the Diffie-Hellman key exchange. A number of commercial products
employ this key exchange technique.
[Word Count: 39]

86
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

are distinct and consist of the integers from 1 through p
1 in some permutation.
For any integer b less than p and a primitive root a of prime number p, one can
find a unique exponent i such that
[Word Count: 40]

The exponent i is referred to as the discrete logarithm, or index, of b for the base a,
mod p. We denote this value as dloga,p(b).5
[Word Count: 26]

The result is that the two sides have exchanged a secret value. Furthermore,
because XA and XB are private, an adversary only has the following ingredients to
work with: q,
, YA, and YB. Thus, the adversary is forced to take a discrete loga-
rithm to determine the key. For example, to determine the private key of user B, an
adversary must compute
[Word Count: 63]

5Many texts refer to the discrete logarithm as the index. There is no generally agreed notation for this
concept, much less an agreed name.
[Word Count: 24]

3.5 / PUBLIC-KEY CRYPTOGRAPHY ALGORITHMS 87
[Word Count: 6]

A computes YA
397 mod 353 
40.
B computes YB
3233 mod 353 
248.
[Word Count: 14]

After they exchange public keys, each can compute the common secret key:
[Word Count: 12]

A computes K
(YB)
mod 353 
24897 mod 353 
160.
[Word Count: 10]

B computes K
(YA)
mod 353 
40233 mod 353
160.
[Word Count: 10]

We assume an attacker would have available the following information:
[Word Count: 10]

Figure 3.12
The Diffie-Hellman Key Exchange Algorithm
[Word Count: 7]

88
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

In this simple example, it would be possible to determine the secret key 160 by brute
force. In particular, an attacker E can determine the common key by discovering a
solution to the equation 3a mod 353 
40 or the equation 3b mod 353 
248. The
brute-force approach is to calculate powers of 3 modulo 353, stopping when the
result equals either 40 or 248. The desired answer is reached with the exponent
value of 97, which provides 397 mod 353 
40.
With larger numbers, the problem becomes impractical.
[Word Count: 89]

MAN-IN-THE-MIDDLE ATTACK The protocol depicted in Figure 3.13 is insecure
against a man-in-the-middle attack. Suppose Alice and Bob wish to exchange keys,
and Darth is the adversary.The attack proceeds as follows:
[Word Count: 31]

1. Darth prepares for the attack by generating two random private keys XD1 and
XD2, and then computing the corresponding public keys YD1 and YD2.
[Word Count: 25]

Calculate
   YA  aXA  mod q
Generate
   random XB  q;
[Word Count: 11]

Calculate
   K  (YA)XB  mod q 
Calculate
   K  (YB)XA  mod q
[Word Count: 12]

3.5 / PUBLIC-KEY CRYPTOGRAPHY ALGORITHMS 89
[Word Count: 6]

3. Darth intercepts YA and transmits YD1 to Bob. Darth also calculates
[Word Count: 12]

6. Darth intercepts YB
and transmits YD2
to Alice.
Darth calculates
[Word Count: 11]

At this point, Bob and Alice think that they share a secret key. Instead Bob
and Darth share secret key K1, and Alice and Darth share secret key K2.All future
communication between Bob and Alice is compromised in the following way:
[Word Count: 41]

1. Alice sends an encrypted message M: E(K2, M).
[Word Count: 9]

2. Darth intercepts the encrypted message and decrypts it to recover M.
[Word Count: 12]

3. Darth sends Bob E(K1, M) or E(K1, M'), where M' is any message. In the first
case, Darth simply wants to eavesdrop on the communication without altering
it. In the second case, Darth wants to modify the message going to Bob.
[Word Count: 42]

The key exchange protocol is vulnerable to such an attack because it does not
authenticate the participants. This vulnerability can be overcome with the use of
digital signatures and public-key certificates; these topics are explored later in this
chapter and in Chapter 4.
[Word Count: 43]

Other Public-Key Cryptography Algorithms
[Word Count: 4]

Two other public-key algorithms have found commercial acceptance: DSS and
elliptic-curve cryptography.
[Word Count: 12]

90
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

the other hand, although the theory of ECC has been around for some time, it is
only recently that products have begun to appear and that there has been sustained
cryptanalytic interest in probing for weaknesses. Thus, the confidence level in ECC
is not yet as high as that in RSA.
ECC is fundamentally more difficult to explain than either RSA or Diffie-
Hellman, and a full mathematical description is beyond the scope of this book. The
technique is based on the use of a mathematical construct known as the elliptic curve.
[Word Count: 92]

Solid treatments of hash functions and message authentication codes are found in [STIN06]
and {MENE97].
The recommended treatments of encryption provided in Chapter 2 cover public-key as
well as conventional encryption.[DIFF88] describes in detail the several attempts to devise secure
two-key cryptoalgorithms and the gradual evolution of a variety of protocols based on them.
[Word Count: 54]

3.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 91
[Word Count: 9]

DIFF88
Diffie, W. “The First Ten Years of Public-Key Cryptography.” Procedings of the
IEEE, May 1988.
MENE97
Menezes,A.;Oorschot,P.;and Vanstone,S.Handbook of Applied Cryptography.
Boca Raton, FL: CRC Press, 1997.
STIN06
Stinson,
D.
Cryptography:
Theory and Practice.
Boca Raton,
FL:
Chapman&Hall/ CRC Press, 2006.
[Word Count: 42]

• NIST Secure Hashing Page: SHA FIPS and related documents.
[Word Count: 10]

• RSA Laboratories: Extensive collection of technical material on RSA and other topics
in cryptography.
[Word Count: 15]

• Digital Signatures: NIST page with information on NIST-approved digital signature
options.
[Word Count: 12]

3.8
KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

authenticated encryption
Diffie-Hellman key exchange
digital signature
Digital Signature Standard
(DSS)
elliptic-curve cryptography
(ECC)
HMAC
key exchange
[Word Count: 17]

MD5
message authentication
message authentication code
(MAC)
message digest
one-way hash function
private key
public key
public-key certificate
[Word Count: 18]

public-key encryption
RIPEMD-160
RSA
secret key
secure hash function
SHA-1
strong collision resistance
weak collision resistance
[Word Count: 16]

3.1
List three approaches to message authentication.
3.2
What is a message authentication code?
3.3
Briefly describe the three schemes illustrated in Figure 3.2.
3.4
What properties must a hash function have to be useful for message authentication?
3.5
In the context of a hash function, what is a compression function?
3.6
What are the principal ingredients of a public-key cryptosystem?
3.7
List and briefly define three uses of a public-key cryptosystem.
[Word Count: 72]

92
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

3.8
What is the difference between a private key and a secret key?
3.9
What is a digital signature?
[Word Count: 19]

3.1
Consider a 32-bit hash function defined as the concatenation of two 16-bit functions:
XOR and RXOR, which are defined in Section 3.2 as “two simple hash functions.”
[Word Count: 28]

a.
Will this checksum detect all errors caused by an odd number of error bits?
Explain.
b. Will this checksum detect all errors caused by an even number of error bits? If
not, characterize the error patterns that will cause the checksum to fail.
c.
Comment on the effectiveness of this function for use as a hash function for
authentication.
[Word Count: 60]

3.2
Suppose H(m) is a collision-resistant hash function that maps a message of arbitrary
bit length into an n-bit hash value. Is it true that, for all messages x, x' with x
x', we
have H(x)
H(x')? Explain your answer.
3.3
State the value of the padding field in SHA-512 if the length of the message is
a.
1919 bits
b. 1920 bits
c.
1921 bits
[Word Count: 66]

3.4
State the value of the length field in SHA-512 if the length of the message is
a.
1919 bits
b. 1920 bits
c.
1921 bits
[Word Count: 26]

3.5
a.
Consider the following hash function. Messages are in the form of a sequence of
[Word Count: 16]

6I thank William K. Mason of the magazine staff of The Cryptogram for providing this example.
[Word Count: 16]

decimal numbers, M
(a1, a2, . . ., at).The hash value h is calculated as 
,
a a
[Word Count: 18]

for some predefined value n. Does this hash function satisfy any of the requirements
for a hash function listed in Section 3.2? Explain your answer.
[Word Count: 25]

b. Repeat part (a) for the hash function 
.
h = a a
[Word Count: 13]

c.
Calculate the hash function of part (b) for M
(189,632,900,722,349) and n
989.
[Word Count: 14]

3.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 93
[Word Count: 9]

Then, add each column mod 26 and add the result to the running total, mod 26. In this
example, the running total is (24, 2, 6, 10). Round 2: Using the matrix from round 1,
rotate the first row left by 1, second row left by 2, third row left by 3, and reverse the
order of the fourth row. In our example:
[Word Count: 63]

94
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

Figure 3.14
Efficient Implementation of HMAC
[Word Count: 6]

ask for the MACs of three messages: the message 0
0n, where n is the cipher block
size; the message 1
1n; and the message 1 7 0. As a result of these three queries, the
=
=
[Word Count: 38]

3.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 95
[Word Count: 9]

In words,
1.
M1 takes an input k and produces an output x.
2.
M2 takes inputs x and p giving output z.
3.
M3 takes inputs z and k and produces p.
[Word Count: 33]

The three tables, once constructed, are made public.
a.
It should be clear that it is possible to construct M3 to satisfy the preceding condition.
As an example, fill in M3 for the following simple case:
[Word Count: 36]

96
CHAPTER 3 / PUBLIC-KEY CRYPTOGRAPHY AND MESSAGE AUTHENTICATION
[Word Count: 9]

3.18
Show how RSA can be represented by matrices M1, M2, and M3 of Problem 3.4.
3.19
Consider the following scheme.
1.
Pick an odd number, E.
2.
Pick two prime numbers,P and Q,where (P
1)(Q
1) 
1 is evenly divisible by E.
3.
Multiply P and Q to get N.
[Word Count: 51]

4.1
Symmetric Key Distribution Using Symmetric Encryption
[Word Count: 7]

4.3
Key Distribution Using Asymmetric Encryption
[Word Count: 6]

Public-Key Certificates
Public-Key Distribution of Secret Keys
[Word Count: 7]

PKIX Management Functions
PKIX Management Protocols
[Word Count: 6]

4.8
Key Terms, Review Questions, and Problems
[Word Count: 7]

KEY DISTRIBUTION AND USER
AUTHENTICATION
[Word Count: 5]

98
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

No Singhalese, whether man or woman, would venture out of the house without
a bunch of keys in his hand, for without such a talisman he would fear that some
devil might take advantage of his weak state to slip into his body.
[Word Count: 43]

—The Golden Bough, Sir James George Frazer
[Word Count: 7]

4.1
SYMMETRIC KEY DISTRIBUTION USING SYMMETRIC
ENCRYPTION
[Word Count: 7]

1. A key could be selected by A and physically delivered to B.
2. A third party could select the key and physically deliver it to A and B.
[Word Count: 29]

3. If A and B have previously and recently used a key, one party could transmit the
new key to the other, using the old key to encrypt the new key.
4. If A and B each have an encrypted connection to a third party C, C could
deliver a key on the encrypted links to A and B.
[Word Count: 59]

keys are revealed. Even if frequent changes are made to the link encryption keys,
these should be done manually.To provide keys for end-to-end encryption, option 4
is preferable.
For option 4, two kinds of keys are used:
[Word Count: 37]

• Session key: When two end systems (hosts, terminals, etc.) wish to communicate,
they establish a logical connection (e.g., virtual circuit). For the duration of that
logical connection, called a session, all user data are encrypted with a one-time
session key.At the conclusion of the session the session key is destroyed.
[Word Count: 51]

• Permanent key: A permanent key is a key used between entities for the
purpose of distributing session keys.
[Word Count: 19]

A necessary element of option 4 is a key distribution center (KDC). The KDC
determines which systems are allowed to communicate with each other. When per-
mission is granted for two systems to establish a connection, the key distribution
center provides a one-time session key for that connection.
In general terms, the operation of a KDC proceeds as follows:
[Word Count: 59]

1. When host A wishes to set up a connection to host B, it transmits a connection-
request packet to the KDC. The communication between A and the KDC is
encrypted using a master key shared only by A and the KDC.
[Word Count: 42]

2. If the KDC approves the connection request, it generates a unique one-time ses-
sion key. It encrypts the session key using the permanent key it shares with A and
delivers the encrypted session key to A.Similarly,it encrypts the session key using
the permanent key it shares with B and delivers the encrypted session key to B.
[Word Count: 57]

3. A and B can now set up a logical connection and exchange messages and data,
all encrypted using the temporary session key.
[Word Count: 23]

The automated key distribution approach provides the flexibility and dynamic
characteristics needed to allow a number of users to access a number of servers and
for the servers to exchange data with each other. The most widely used application
that implements this approach is Kerberos, described in the next section.
[Word Count: 50]

Kerberos is a key distribution and user authentication service developed at MIT.
The problem that Kerberos addresses is this: Assume an open distributed environ-
ment in which users at workstations wish to access services on servers distributed
throughout the network. We would like for servers to be able to restrict access to
authorized users and to be able to authenticate requests for service. In this environ-
ment, a workstation cannot be trusted to identify its users correctly to network ser-
vices. In particular, the following three threats exist:
[Word Count: 88]

1. A user may gain access to a particular workstation and pretend to be another
user operating from that workstation.
[Word Count: 20]

2. A user may alter the network address of a workstation so that the requests sent
from the altered workstation appear to come from the impersonated workstation.
[Word Count: 27]

100
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

3. A user may eavesdrop on exchanges and use a replay attack to gain entrance
to a server or to disrupt operations.
[Word Count: 22]

Version 4 of Kerberos makes use of DES, in a rather elaborate protocol, to provide
the authentication service. Viewing the protocol as a whole, it is difficult to see the
need for the many elements contained therein. Therefore, we adopt a strategy used
by Bill Bryant [BRYA88] and build up to the full protocol by looking first at several
hypothetical dialogues. Each successive dialogue adds additional complexity to
counter security vulnerabilities revealed in the preceding dialogue.
After examining the protocol, we look at some other aspects of version 4.
[Word Count: 89]

1The portion to the left of the colon indicates the sender and receiver, the portion to the right indicates
the contents of the message, and the symbol 7 indicates concatenation.
[Word Count: 30]

C 
client
AS    
authentication server
V
server
IDC
identifier of user on C
IDV
identifier of V
PC
password of user on C
ADC
network address of C
Kv
secret encryption key shared by AS and V
[Word Count: 37]

102
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

Tickettgs
E(Ktgs, [IDC 7 ADC 7 IDtgs 7 TS1 7 Lifetime1])
[Word Count: 11]

Ticketv
E(Kv, [IDC 7 ADC 7 IDv 7 TS2 7 Lifetime2])
[Word Count: 11]

The new service, TGS, issues tickets to users who have been authenticated to
AS. Thus, the user first requests a ticket-granting ticket (Tickettgs) from the AS. The
client module in the user workstation saves this ticket. Each time the user requires
access to a new service, the client applies to the TGS, using the ticket to authenticate
itself. The TGS then grants a ticket for the particular service. The client saves each
service-granting ticket and uses it to authenticate its user to a server each time a
particular service is requested. Let us look at the details of this scheme:
[Word Count: 100]

1. The client requests a ticket-granting ticket on behalf of the user by sending its
user’s ID to the AS, together with the TGS ID, indicating a request to use the
TGS service.
[Word Count: 33]

2. The AS responds with a ticket that is encrypted with a key that is derived from
the user’s password (KC), which is already stored at the AS. When this
response arrives at the client, the client prompts the user for his or her pass-
word, generates the key, and attempts to decrypt the incoming message. If the
correct password is supplied, the ticket is successfully recovered.
[Word Count: 67]

Because only the correct user should know the password, only the correct
user can recover the ticket. Thus, we have used the password to obtain credentials
from Kerberos without having to transmit the password in plaintext. The ticket
itself consists of the ID and network address of the user and the ID of the TGS.
[Word Count: 55]

3. The client requests a service-granting ticket on behalf of the user. For this pur-
pose, the client transmits a message to the TGS containing the user’s ID, the
ID of the desired service, and the ticket-granting ticket.
[Word Count: 38]

4. The TGS decrypts the incoming ticket using a key shared only by the AS and
the TGS (Ktgs) and verifies the success of the decryption by the presence of its
ID. It checks to make sure that the lifetime has not expired. Then it compares
the user ID and network address with the incoming information to authenti-
cate the user. If the user is permitted access to the server V, the TGS issues a
ticket to grant access to the requested service.
[Word Count: 83]

5. The client requests access to a service on behalf of the user. For this purpose, the
client transmits a message to the server containing the user’s ID and the service-
granting ticket.The server authenticates by using the contents of the ticket.
[Word Count: 42]

This new scenario satisfies the two requirements of only one password query
per user session and protection of the user password.
[Word Count: 21]

THE VERSION 4 AUTHENTICATION DIALOGUE Although the foregoing scenario
enhances security compared to the first attempt, two additional problems remain.
The heart of the first problem is the lifetime associated with the ticket-granting
[Word Count: 33]

104
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

Table 4.1
Summary of Kerberos Version 4 Message Exchanges
[Word Count: 9]

(2) AS : C
E(Kc, [Kc,tgs 7 IDtgs 7 TS2 7 Lifetime2 7 Tickettgs])
[Word Count: 14]

Tickettgs
E(Ktgs, [Kc,tgs 7 IDC 7 ADC 7 IDtgs 7 TS2 7 Lifetime2])
=
[Word Count: 14]

(a) Authentication Service Exchange to obtain ticket-granting ticket
[Word Count: 8]

(3) C : TGS
IDv 7 Tickettgs 7 Authenticatorc
[Word Count: 9]

(4) TGS : C
E(Kc,tgs, [Kc,v 7 IDv 7 TS4 7 Ticketv])
[Word Count: 12]

Tickettgs
E(Ktgs, [Kc,tgs 7 IDC 7 ADC 7 IDtgs 7 TS2 7 Lifetime2])
=
[Word Count: 14]

Ticketv
E(Kv, [Kc,v 7 IDC 7 ADC 7 IDv 7 TS4 7 Lifetime4])
=
[Word Count: 14]

Authenticatorc
E(Kc,tgs, [IDC 7 ADC 7 TS3])
=
[Word Count: 8]

(b) Ticket-Granting Service Exchange to obtain service-granting ticket
[Word Count: 8]

(6) V : C
E(Kc,v, [TS5
1]) (for mutual authentication)
+
[Word Count: 11]

Ticketv
E(Kv, [Kc,v 7 IDC 7 ADC 7 IDv 7 TS4 7 Lifetime4])
=
[Word Count: 14]

Authenticatorc
E(Kc,v, [IDC 7 ADC 7 TS5])
=
[Word Count: 8]

(c) Client/Server Authentication Exchange to obtain service
[Word Count: 7]

106
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

Finally, at the conclusion of this process, the client and server share a secret
key. This key can be used to encrypt future messages between the two or to
exchange a new random session key for that purpose.
Table 4.2 summarizes the justification for each of the elements in the Kerberos
protocol, and Figure 4.1 provides a simplified overview of the action.
[Word Count: 62]

Table 4.2
Rationale for the Elements of the Kerberos Version 4 Protocol
[Word Count: 12]

Message (1)
Client requests ticket-granting ticket.
[Word Count: 6]

IDC
Tells AS identity of user from this client.
[Word Count: 9]

IDtgs
Tells AS that user requests access to TGS.
[Word Count: 9]

TS1
Allows AS to verify that client’s clock is synchronized with that of AS.
[Word Count: 14]

Message (2)
AS returns ticket-granting ticket.
[Word Count: 6]

Kc
Encryption is based on user’s password, enabling AS and client to verify password, and
protecting contents of message (2).
[Word Count: 20]

Kc,tgs
Copy of session key accessible to client created by AS to permit secure exchange
between client and TGS without requiring them to share a permanent key.
[Word Count: 27]

IDtgs
Confirms that this ticket is for the TGS.
[Word Count: 9]

TS2
Informs client of time this ticket was issued.
[Word Count: 9]

Lifetime2
Informs client of the lifetime of this ticket.
[Word Count: 9]

Tickettgs
Ticket to be used by client to access TGS.
[Word Count: 10]

Message (3)
Client requests service-granting ticket.
[Word Count: 6]

IDV
Tells TGS that user requests access to server V.
[Word Count: 10]

Tickettgs
Assures TGS that this user has been authenticated by AS.
[Word Count: 11]

Authenticatorc
Generated by client to validate ticket.
[Word Count: 7]

Message (4)
TGS returns service-granting ticket.
[Word Count: 6]

Kc,tgs
Key shared only by C and TGS protects contents of message (4).
[Word Count: 13]

Kc,v
Copy of session key accessible to client created by TGS to permit secure exchange
between client and server without requiring them to share a permanent key.
[Word Count: 27]

IDV
Confirms that this ticket is for server V.
[Word Count: 9]

TS4
Informs client of time this ticket was issued.
[Word Count: 9]

TicketV
Ticket to be used by client to access server V.
[Word Count: 11]

Tickettgs
Reusable so that user does not have to reenter password.
[Word Count: 11]

Ktgs
Ticket is encrypted with key known only to AS and TGS, to prevent tampering.
[Word Count: 15]

Kc,tgs
Copy of session key accessible to TGS used to decrypt authenticator, thereby authenti-
cating ticket.
[Word Count: 16]

IDC
Indicates the rightful owner of this ticket.
[Word Count: 8]

ADC
Prevents use of ticket from workstation other than one that initially requested the ticket.
[Word Count: 15]

IDtgs
Assures server that it has decrypted ticket properly.
[Word Count: 9]

TS2
Informs TGS of time this ticket was issued.
[Word Count: 9]

Lifetime2
Prevents replay after ticket has expired.
[Word Count: 7]

Authenticatorc
Assures TGS that the ticket presenter is the same as the client for whom the ticket was
issued has very short lifetime to prevent replay.
[Word Count: 26]

Kc,tgs
Authenticator is encrypted with key known only to client and TGS, to prevent tampering.
[Word Count: 15]

IDC
Must match ID in ticket to authenticate ticket.
[Word Count: 9]

ADC
Must match address in ticket to authenticate ticket.
[Word Count: 9]

TS3
Informs TGS of time this authenticator was generated.
[Word Count: 9]

TicketV
Assures server that this user has been authenticated by AS.
[Word Count: 11]

Authenticatorc
Generated by client to validate ticket.
[Word Count: 7]

Message (6)
Optional authentication of server to client.
[Word Count: 8]

Kc,v
Assures C that this message is from V.
[Word Count: 9]

TS5
1
+
Assures C that this is not a replay of an old reply.
[Word Count: 15]

Ticketv
Reusable so that client does not need to request a new ticket from TGS for each access
to the same server.
[Word Count: 22]

Kv
Ticket is encrypted with key known only to TGS and server, to prevent tampering.
[Word Count: 15]

Kc,v
Copy of session key accessible to client; used to decrypt authenticator, thereby
authenticating ticket.
[Word Count: 15]

IDC
Indicates the rightful owner of this ticket.
[Word Count: 8]

ADC
Prevents use of ticket from workstation other than one that initially requested the ticket.
[Word Count: 15]

IDV
Assures server that it has decrypted ticket properly.
[Word Count: 9]

TS4
Informs server of time this ticket was issued.
[Word Count: 9]

Lifetime4
Prevents replay after ticket has expired.
[Word Count: 7]

Authenticatorc
Assures server that the ticket presenter is the same as the client for whom the ticket was
issued; has very short lifetime to prevent replay.
[Word Count: 26]

Kc,v
Authenticator is encrypted with key known only to client and server, to prevent tampering.
[Word Count: 15]

IDC
Must match ID in ticket to authenticate ticket.
[Word Count: 9]

ADc
Must match address in ticket to authenticate ticket.
[Word Count: 9]

TS5
Informs server of time this authenticator was generated.
[Word Count: 9]

(c) Client/Server Authentication Exchange
[Word Count: 4]

108
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

1. User logs on to
workstation and
requests service on host.
[Word Count: 11]

3. Workstation prompts
user for password and
uses password to decrypt
incoming message, then
sends ticket and
authenticator that
contains user's name,
network address, and
time to TGS.
[Word Count: 28]

Once per
type of service
4. TGS decrypts ticket and
authenticator, verifies request,
then creates ticket for requested
server.
[Word Count: 19]

5. Workstation sends
ticket and authenticator
to server.
[Word Count: 8]

6. Server verifies that
ticket and authenticator
match, then grants access
to service. If mutual
authentication is
required, server returns
an authenticator.
[Word Count: 22]

2. AS verifies user's access right in
database, creates ticket-granting ticket
and session key. Results are encrypted
using key derived from user's password.
[Word Count: 23]

KERBEROS REALMS AND MULTIPLE KERBERI A full-service Kerberos environment
consisting of a Kerberos server, a number of clients, and a number of application
servers requires the following:
[Word Count: 27]

1. The Kerberos server must have the user ID and hashed passwords of all partic-
ipating users in its database. All users are registered with the Kerberos server.
[Word Count: 28]

2. The Kerberos server must share a secret key with each server. All servers are
registered with the Kerberos server.
[Word Count: 20]

3. The Kerberos server in each interoperating realm shares a secret key with the
server in the other realm. The two Kerberos servers are registered with each
other.
[Word Count: 28]

(2) AS : C:
E(KC, [KC,tgs 7 IDtgs 7 TS2 7 Lifetime2 7 Tickettgs])
[Word Count: 14]

(3) C : TGS:
IDtgsrem 7 Tickettgs 7 AuthenticatorC
[Word Count: 9]

(4) TGS : C:
E(KC,tgs, [KC,tgsrem 7 IDtgsrem 7 TS4 7 Tickettgsrem])
[Word Count: 12]

(5) C : TGSrem:
IDVrem 7 Tickettgsrem 7 AuthenticatorC
[Word Count: 9]

(6) TGSrem : C:
E(KC,tgsrem, [KC,Vrem 7 IDVrem 7 TS6 7 TicketVrem])
[Word Count: 12]

(7) C : Vrem:
TicketVrem 7 AuthenticatorC
[Word Count: 7]

The ticket presented to the remote server (Vrem) indicates the realm in which the
user was originally authenticated. The server chooses whether to honor the remote
request.
One problem presented by the foregoing approach is that it does not scale well
to many realms. If there are N realms, then there must be N(N
1)/2 secure key
exchanges so that each Kerberos realm can interoperate with all other Kerberos
realms.
[Word Count: 70]

110
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

Kerberos version 5 is specified in RFC 4120 and provides a number of improve-
ments over version 4 [KOHL94]. To begin, we provide an overview of the changes
from version 4 to version 5 and then look at the version 5 protocol.
[Word Count: 42]

DIFFERENCES BETWEEN VERSIONS 4 AND 5 Version 5 is intended to address the
limitations of version 4 in two areas: environmental shortcomings and technical
deficiencies.We briefly summarize the improvements in each area. Kerberos version
[Word Count: 34]

1. Request ticket for local TGS
2. Ticket for local TGS
[Word Count: 11]

Figure 4.2
Request for Service in Another Realm
[Word Count: 8]

4 did not fully address the need to be of general purpose. This led to the following
environmental shortcomings.
[Word Count: 19]

1. Encryption system dependence: Version 4 requires the use of DES. Export
restriction on DES as well as doubts about the strength of DES were thus of
concern. In version 5, ciphertext is tagged with an encryption-type identifier so
that any encryption technique may be used. Encryption keys are tagged with a
type and a length, allowing the same key to be used in different algorithms and
allowing the specification of different variations on a given algorithm.
[Word Count: 77]

2. Internet protocol dependence: Version 4 requires the use of Internet Protocol
(IP) addresses. Other address types, such as the ISO network address, are not
accommodated. Version 5 network addresses are tagged with type and length,
allowing any network address type to be used.
[Word Count: 44]

3. Message byte ordering: In version 4, the sender of a message employs a byte
ordering of its own choosing and tags the message to indicate least significant
byte in lowest address or most significant byte in lowest address. This tech-
niques works but does not follow established conventions. In version 5, all
message structures are defined using Abstract Syntax Notation One (ASN.1)
and Basic Encoding Rules (BER), which provide an unambiguous byte
ordering.
[Word Count: 74]

4. Ticket lifetime: Lifetime values in version 4 are encoded in an 8-bit quantity
in units of five minutes. Thus, the maximum lifetime that can be expressed is 
28 × 5 
1280 minutes (a little over 21 hours).This may be inadequate for some
applications (e.g., a long-running simulation that requires valid Kerberos cre-
dentials throughout execution). In version 5, tickets include an explicit start
time and end time, allowing tickets with arbitrary lifetimes.
[Word Count: 73]

Apart from these environmental limitations, there are technical deficiencies
in the version 4 protocol itself. Most of these deficiencies were documented in
[BELL90], and version 5 attempts to address these. The deficiencies are the
following.
[Word Count: 35]

1. Double encryption: Note in Table 4.1 [messages (2) and (4)] that tickets pro-
vided to clients are encrypted twice—once with the secret key of the target
server and then again with a secret key known to the client. The second
encryption is not necessary and is computationally wasteful.
[Word Count: 49]

112
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

2. PCBC encryption: Encryption in version 4 makes use of a nonstandard mode of
DES known as propagating cipher block chaining (PCBC).2 It has been
demonstrated that this mode is vulnerable to an attack involving the interchange
of ciphertext blocks [KOHL89]. PCBC was intended to provide an integrity
check as part of the encryption operation. Version 5 provides explicit integrity
mechanisms, allowing the standard CBC mode to be used for encryption. In par-
ticular, a checksum or hash code is attached to the message prior to encryption
using CBC.
[Word Count: 89]

THE VERSION 5 AUTHENTICATION DIALOGUE Table 4.3 summarizes the basic version
5 dialogue.This is best explained by comparison with version 4 (Table 4.1).
First, consider the authentication service exchange. Message (1) is a client
request for a ticket-granting ticket. As before, it includes the ID of the user and the
TGS.The following new elements are added:
[Word Count: 56]

• Options: Used to request that certain flags be set in the returned ticket.
• Times: Used by the client to request the following time settings in the ticket:
from: the desired start time for the requested ticket
[Word Count: 38]

till: the requested expiration time for the requested ticket
[Word Count: 9]

rtime: requested renew-till time
• Nonce: A random value to be repeated in message (2) to assure that the
response is fresh and has not been replayed by an opponent.
[Word Count: 30]

3Appendix F describes the mapping of passwords to encryption keys.
[Word Count: 10]

Table 4.3
Summary of Kerberos Version 5 Message Exchanges
[Word Count: 9]

(1) C
AS
Options 7 IDc 7 Realmc 7 IDtgs 7 Times 7 Nonce1
:
[Word Count: 15]

(2) AS
C
Realmc 7 IDC 7 Tickettgs 7 E(Kc, [Kc,tgs 7 Times 7 Nonce1 7 Realmtgs 7 IDtgs])
:
[Word Count: 20]

Tickettgs
E(Ktgs, [Flags 7 Kc,tgs 7 Realmc 7 IDC 7 ADC 7 Times])
=
[Word Count: 14]

(a) Authentication Service Exchange to obtain ticket-granting ticket
[Word Count: 8]

(3) C
TGS
Options 7 IDv 7Times 77 Nonce2 7 Tickettgs 7 Authenticatorc
:
[Word Count: 14]

(4) TGS
C
Realmc 7 IDC 7Ticketv 7 E(Kc,tgs, [Kc,v 7 Times 7 Nonce2 7 Realmv 7 IDv])
:
[Word Count: 19]

Tickettgs
E(Ktgs, [Flags 7 Kc,tgs 7 Realmc 7 IDC 7 ADC 7 Times])
=
[Word Count: 14]

Ticketv
E(Kv, [Flags 7 Kc,v 7 Realmc 7 IDC 7 ADC 7Times])
=
[Word Count: 13]

Authenticatorc
E(Kc,tgs, [IDC 7 Realmc 7 TS1])
=
[Word Count: 8]

(b) Ticket-Granting Service Exchange to obtain service-granting ticket
[Word Count: 8]

(5) C
V
Options 7 Ticketv 7 Authenticatorc
:
[Word Count: 9]

Ticketv
E(Kv, [Flags 7 Kc,v 7 Realmc 7 IDC 7 ADC 7 Times])
=
[Word Count: 14]

Authenticatorc
E(Kc,v, [IDC 7 Realmc 7 TS2 7 Subkey 7 Seq#])
=
[Word Count: 12]

(c) Client/Server Authentication Exchange to obtain service
[Word Count: 7]

• Subkey: The client’s choice for an encryption key to be used to protect this
specific application session. If this field is omitted, the session key from the
ticket (KC,V) is used.
[Word Count: 32]

114
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

• Sequence number: An optional field that specifies the starting sequence num-
ber to be used by the server for messages sent to the client during this session.
Messages may be sequence numbered to detect replays.
[Word Count: 36]

If mutual authentication is required, the server responds with message (6).
This message includes the timestamp from the authenticator. Note that in version 4,
the timestamp was incremented by one. This is not necessary in version 5, because
the nature of the format of messages is such that it is not possible for an opponent to
create message (6) without knowledge of the appropriate encryption keys.The sub-
key field, if present, overrides the subkey field, if present, in message (5). The
optional sequence number field specifies the starting sequence number to be used
by the client.
[Word Count: 96]

4.3
KEY DISTRIBUTION USING ASYMMETRIC ENCRYPTION
[Word Count: 6]

One of the major roles of public-key encryption is to address the problem of key
distribution. There are actually two distinct aspects to the use of public-key encryp-
tion in this regard.
[Word Count: 32]

• The use of public-key encryption to distribute secret keys.
[Word Count: 10]

4.3 / KEY DISTRIBUTION USING ASYMMETRIC ENCRYPTION 115
[Word Count: 8]

transactions (SET), and S/MIME—all of which are discussed in Part Two. X.509 is
examined in detail in the next section.
[Word Count: 20]

Unsigned certificate:
contains user ID,
user's public key
[Word Count: 8]

Signed certificate:
Recipient can verify
signature using CA's
public key
[Word Count: 10]

Generate hash
code of unsigned
certificate
[Word Count: 6]

Encrypt hash code
with CA's private key
to form signature
[Word Count: 10]

116
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

A powerful alternative is the use of public-key certificates. When Bob wishes
to communicate with Alice, Bob can do the following:
[Word Count: 21]

2. Encrypt that message using conventional encryption with a one-time conven-
tional session key.
[Word Count: 14]

3. Encrypt the session key using public-key encryption with Alice’s public key.
[Word Count: 12]

4. Attach the encrypted session key to the message and send it to Alice.
[Word Count: 14]

Only Alice is capable of decrypting the session key and therefore of recovering
the original message. If Bob obtained Alice’s public key by means of Alice’s public-
key certificate, then Bob is assured that it is a valid key.
[Word Count: 39]

The heart of the X.509 scheme is the public-key certificate associated with each
user. These user certificates are assumed to be created by some trusted certifica-
tion authority (CA) and placed in the directory by the CA or by the user. The
directory server itself is not responsible for the creation of public keys or for the
[Word Count: 57]

certification function; it merely provides an easily accessible location for users to
obtain certificates.
Figure 4.4a shows the general format of a certificate,which includes the following
elements.
[Word Count: 27]

• Version: Differentiates among successive versions of the certificate format; the
default is version 1. If the Issuer Unique Identifier or Subject Unique
Identifier are present, the value must be version 2. If one or more extensions
are present, the version must be version 3.
• Serial number: An integer value, unique within the issuing CA, that is unam-
biguously associated with this certificate.
[Word Count: 64]

• Signature algorithm identifier: The algorithm used to sign the certificate,
together with any associated parameters.Because this information is repeated in
the Signature field at the end of the certificate, this field has little, if any, utility.
[Word Count: 37]

• Issuer name: X.500 name of the CA that created and signed this certificate.
[Word Count: 14]

• Period of validity: Consists of two dates: the first and last on which the certifi-
cate is valid.
• Subject name: The name of the user to whom this certificate refers.That is, this
certificate certifies the public key of the subject who holds the corresponding
private key.
[Word Count: 48]

Algorithms
Parameters
Encrypted
Signature
[Word Count: 4]

User certificate serial #
Revocation date
Revoked
certificate
[Word Count: 8]

118
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

• Subject’s public-key information: The public key of the subject, plus an identi-
fier of the algorithm for which this key is to be used, together with any associ-
ated parameters.
[Word Count: 31]

• Issuer unique identifier: An optional bit string field used to identify uniquely
the issuing CA in the event the X.500 name has been reused for different
entities.
[Word Count: 28]

• Subject unique identifier: An optional bit string field used to identify
uniquely the subject in the event the X.500 name has been reused for differ-
ent entities.
[Word Count: 28]

• Extensions: A set of one or more extension fields. Extensions were added in
version 3 and are discussed later in this section.
[Word Count: 23]

• Signature: Covers all of the other fields of the certificate; it contains the hash
code of the other fields encrypted with the CA’s private key.This field includes
the signature algorithm identifier.
[Word Count: 32]

The unique identifier fields were added in version 2 to handle the possible
reuse of subject and/or issuer names over time.These fields are rarely used.
The standard uses the following notation to define a certificate:
[Word Count: 35]

Y
X
the certificate of user X issued by certification authority Y
[Word Count: 12]

Y {I} 
the signing of I by Y; consists of I with an encrypted hash code appended
[Word Count: 17]

AI 
identifier of the algorithm used to sign the certificate
[Word Count: 10]

UCA 
optional unique identifier of the CA
A 
name of user A
UA 
optional unique identifier of the user A
[Word Count: 20]

TA
period of validity of the certificate
[Word Count: 7]

The CA signs the certificate with its private key. If the corresponding public
key is known to a user, then that user can verify that a certificate signed by the CA
is valid.This is the typical digital signature approach, as illustrated in Figure 4.5.
[Word Count: 44]

OBTAINING A USER’S CERTIFICATE User certificates generated by a CA have the
following characteristics:
[Word Count: 14]

• Any user with access to the public key of the CA can verify the user public key
that was certified.
[Word Count: 21]

• No party other than the certification authority can modify the certificate without
this being detected.
[Word Count: 16]

Figure 4.5
Simplified Depiction of Essential Elements of Digital Signature Process
[Word Count: 11]

120
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

Now suppose that A has obtained a certificate from certification authority
X1 and B has obtained a certificate from CA X2. If A does not securely know the
public key of X2, then B’s certificate, issued by X2, is useless to A. A can read B’s
certificate, but A cannot verify the signature. However, if the two CAs have
securely exchanged their own public keys, the following procedure will enable A
to obtain B’s public key.
[Word Count: 76]

1. A obtains (from the directory) the certificate of X2 signed by X1. Because A
securely knows X1’s public key, A can obtain X2’s public key from its certificate
and verify it by means of X1’s signature on the certificate.
[Word Count: 40]

2. A then goes back to the directory and obtains the certificate of B signed by X2.
Because A now has a trusted copy of X2’s public key, A can verify the signature
and securely obtain B’s public key.
[Word Count: 39]

A has used a chain of certificates to obtain B’s public key. In the notation of
X.509, this chain is expressed as
[Word Count: 22]

In the same fashion, B can obtain A’s public key with the reverse chain:
[Word Count: 14]

This scheme need not be limited to a chain of two certificates. An arbitrarily
long path of CAs can be followed to produce a chain. A chain with N elements
would be expressed as
[Word Count: 34]

• Forward certificates: Certificates of X generated by other CAs
[Word Count: 10]

• Reverse certificates: Certificates generated by X that are the certificates of
other CAs
[Word Count: 14]

In this example, user A can acquire the following certificates from the direc-
tory to establish a certification path to B:
[Word Count: 21]

When A has obtained these certificates, it can unwrap the certification path in
sequence to recover a trusted copy of B’s public key. Using this public key, A can
send encrypted messages to B. If A wishes to receive encrypted messages back from
[Word Count: 43]

B, or to sign messages sent to B, then B will require A’s public key, which can be
obtained from the certification path:
[Word Count: 23]

B can obtain this set of certificates from the directory, or A can provide them
as part of its initial message to B.
[Word Count: 23]

REVOCATION OF CERTIFICATES Recall from Figure 4.4 that each certificate includes a
period of validity, much like a credit card. Typically, a new certificate is issued just
before the expiration of the old one. In addition, it may be desirable on occasion to
revoke a certificate before it expires for one of the following reasons.
[Word Count: 55]

1. The user’s private key is assumed to be compromised.
2. The user is no longer certified by this CA.Reasons for this include subject’s name
has changed,the certificate is superseded,or the certificate was not issued in con-
formance with the CA’s policies.
3. The CA’s certificate is assumed to be compromised.
[Word Count: 51]

Each CA must maintain a list consisting of all revoked but not expired certifi-
cates issued by that CA, including both those issued to users and to other CAs.
These lists also should be posted on the directory.
[Word Count: 38]

Figure 4.6
X.509 Hierarchy:A Hypothetical Example
[Word Count: 6]

122
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

The X.509 version 2 format does not convey all of the information that recent
design and implementation experience has shown to be needed. [FORD95] lists the
following requirements not satisfied by version 2:
[Word Count: 33]

1. The Subject field is inadequate to convey the identity of a key owner to a public-
key user. X.509 names may be relatively short and lacking in obvious identifica-
tion details that may be needed by the user.
[Word Count: 39]

2. The Subject field is also inadequate for many applications, which typically recog-
nize entities by an Internet e-mail address,a URL,or some other Internet-related
identification.
[Word Count: 25]

3. There is a need to indicate security policy information. This enables a security
application or function, such as IPSec, to relate an X.509 certificate to a given
policy.
[Word Count: 29]

4. There is a need to limit the damage that can result from a faulty or malicious CA
by setting constraints on the applicability of a particular certificate.
5. It is important to be able to identify different keys used by the same owner at
different times. This feature supports key life cycle management, in particular
the ability to update key pairs for users and CAs on a regular basis or under
exceptional circumstances.
[Word Count: 74]

KEY AND POLICY INFORMATION These extensions convey additional information
about the subject and issuer keys, plus indicators of certificate policy. A certificate
policy is a named set of rules that indicates the applicability of a certificate to a
[Word Count: 38]

particular community and/or class of application with common security
requirements. For example, a policy might be applicable to the authentication of
electronic data interchange (EDI) transactions for the trading of goods within a
given price range.
This area includes:
[Word Count: 39]

• Authority key identifier: Identifies the public key to be used to verify the sig-
nature on this certificate or CRL. Enables distinct keys of the same CA to be
differentiated. One use of this field is to handle CA key pair updating.
[Word Count: 43]

• Subject key identifier: Identifies the public key being certified. Useful for sub-
ject key pair updating. Also, a subject may have multiple key pairs and, corre-
spondingly, different certificates for different purposes (e.g., digital signature
and encryption key agreement).
[Word Count: 40]

• Key usage: Indicates a restriction imposed as to the purposes for which, and
the policies under which, the certified public key may be used. May indicate
one or more of the following: digital signature, nonrepudiation, key encryp-
tion, data encryption, key agreement, CA signature verification on certificates,
and CA signature verification on CRLs.
[Word Count: 54]

• Private-key usage period: Indicates the period of use of the private key corre-
sponding to the public key. Typically, the private key is used over a different
period from the validity of the public key. For example, with digital signature
keys, the usage period for the signing private key is typically shorter than that
for the verifying public key.
[Word Count: 60]

• Certificate policies: Certificates may be used in environments where multiple
policies apply. This extension lists policies that the certificate is recognized as
supporting, together with optional qualifier information.
[Word Count: 29]

• Policy mappings: Used only in certificates for CAs issued by other CAs. Policy
mappings allow an issuing CA to indicate that one or more of that issuer’s
policies can be considered equivalent to another policy used in the subject
CA’s domain.
[Word Count: 42]

CERTIFICATE SUBJECT AND ISSUER ATTRIBUTES These extensions support alternative
names, in alternative formats, for a certificate subject or certificate issuer and can
convey additional information about the certificate subject to increase a certificate
user’s confidence that the certificate subject is a particular person or entity. For
example, information such as postal address, position within a corporation, or
picture image may be required.
The extension fields in this area include:
[Word Count: 69]

• Subject alternative name: Contains one or more alternative names,using any of a
variety of forms. This field is important for supporting certain applications, such
as electronic mail, EDI, and IPSec, which may employ their own name forms.
• Issuer alternative name: Contains one or more alternative names, using any of
a variety of forms.
• Subject directory attributes: Conveys any desired X.500 directory attribute
values for the subject of this certificate.
[Word Count: 72]

124
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

CERTIFICATION PATH CONSTRAINTS These extensions allow constraint specifications
to be included in certificates issued for CAs by other CAs. The constraints may
restrict the types of certificates that can be issued by the subject CA or that may
occur subsequently in a certification chain.
The extension fields in this area include:
[Word Count: 51]

• Basic constraints: Indicates if the subject may act as a CA. If so, a certification
path length constraint may be specified.
[Word Count: 22]

• Name constraints: Indicates a name space within which all subject names in
subsequent certificates in a certification path must be located.
[Word Count: 22]

• Policy constraints: Specifies constraints that may require explicit certificate
policy identification or inhibit policy mapping for the remainder of the certifi-
cation path.
[Word Count: 24]

• End entity: A generic term used to denote end users, devices (e.g., servers,
routers), or any other entity that can be identified in the subject field of a pub-
lic key certificate. End entities typically consume and/or support PKI-related
services.
• Certification authority (CA): The issuer of certificates and (usually) certifi-
cate revocation lists (CRLs). It may also support a variety of administrative
functions, although these are often delegated to one or more registration
authorities.
[Word Count: 76]

• Registration authority (RA): An optional component that can assume a num-
ber of administrative functions from the CA. The RA is often associated with
the end entity registration process, but can assist in a number of other areas as
well.
[Word Count: 41]

• CRL issuer: An optional component that a CA can delegate to publish CRLs.
[Word Count: 14]

• Repository: A generic term used to denote any method for storing certificates
and CRLs so that they can be retrieved by end entities.
[Word Count: 24]

PKIX identifies a number of management functions that potentially need to be sup-
ported by management protocols. These are indicated in Figure 4.7 and include the
following:
[Word Count: 27]

• Registration: This is the process whereby a user first makes itself known to a
CA (directly, or through an RA), prior to that CA issuing a certificate or cer-
tificates for that user. Registration begins the process of enrolling in a PKI.
Registration usually involves some off-line or online procedure for mutual
authentication. Typically, the end entity is issued one or more shared secret
keys used for subsequent authentication.
[Word Count: 70]

• Initialization: Before a client system can operate securely, it is necessary to
install key materials that have the appropriate relationship with keys stored
elsewhere in the infrastructure. For example, the client needs to be securely
initialized with the public key and other assured information of the trusted
CA(s) to be used in validating certificate paths.
• Certification: This is the process in which a CA issues a certificate for a user’s
public key and returns that certificate to the user’s client system and/or posts
that certificate in a repository.
[Word Count: 90]

Certificate
publication
Certificate/CRL
publication
[Word Count: 4]

Registration,
initialization,
certification,
key pair recovery,
key pair update
revocation request
[Word Count: 11]

126
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

• Key pair update: All key pairs need to be updated regularly (i.e., replaced with
a new key pair) and new certificates issued. Update is required when the cer-
tificate lifetime expires and as a result of certificate revocation.
[Word Count: 39]

• Revocation request: An authorized person advises a CA of an abnormal situa-
tion requiring certificate revocation. Reasons for revocation include private
key compromise, change in affiliation, and name change.
[Word Count: 30]

• Cross certification: Two CAs exchange information used in establishing a
cross-certificate.A cross-certificate is a certificate issued by one CA to another
CA that contains a CA signature key used for issuing certificates.
[Word Count: 33]

Federated identity management is a relatively new concept dealing with the use of a
common identity management scheme across multiple enterprises and numerous
applications and supporting many thousands, even millions, of users. We begin our
overview with a discussion of the concept of identity management and then examine
federated identity management.
[Word Count: 51]

Identity management is a centralized, automated approach to provide enterprise-
wide access to resources by employees and other authorized individuals. The focus
of identity management is defining an identity for each user (human or process),
[Word Count: 35]

associating attributes with the identity, and enforcing a means by which a user can
verify identity. The central concept of an identity management system is the use
of single sign-on (SSO). SSO enables a user to access all network resources after a
single authentication.
[PELT07] lists the following as the principal elements of an identity management
system.
[Word Count: 57]

• Authentication: Confirmation that a user corresponds to the user name
provided.
[Word Count: 12]

• Authorization: Granting access to specific services and/or resources based on
the authentication.
[Word Count: 13]

• Accounting: A process for logging access and authorization.
[Word Count: 9]

• Provisioning: The enrollment of users in the system.
[Word Count: 9]

• Workflow automation: Movement of data in a business process.
[Word Count: 10]

• Delegated administration: The use of role-based access control to grant
permissions.
[Word Count: 12]

• Password synchronization: Creating a process for single sign-on (SSO) or
reduced sign-on (RSO). Single sign-on enables a user to access all network
resources after a single authentication. RSO may involve multiple sign-ons but
requires less user effort than if each resource and service maintained its own
authentication facility.
[Word Count: 49]

• Self-service password reset: Enables the user to modify his or her password.
[Word Count: 13]

• Federation: A process where authentication and permission will be passed on
from one system to another—usually across multiple enterprises, thereby
reducing the number of authentications needed by the user.
[Word Count: 30]

128
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

Data consumers are entities that obtain and employ data maintained and pro-
vided by identity and attribute providers, which are often used to support authoriza-
tion decisions and to collect audit information. For example, a database server or
file server is a data consumer that needs a client’s credentials so as to know what
access to provide to that client.
[Word Count: 60]

Principals
authenticate,
manage their
identity elements
[Word Count: 6]

Data consumers apply
references to obtain
attribute data
[Word Count: 8]

Data consumers obtain
identifiers, attribute
references
[Word Count: 6]

Figure 4.8
Generic Identity Management Architecture
[Word Count: 6]

1
End user's browser or other application engages
in an authentication dialogue with identity provider
in the same domain. End user also provides attribute
values associated with user's identity.
[Word Count: 29]

2
Some attributes associated with an identity, such as
allowable roles, may be provided by an administrator
in the same domain.
[Word Count: 21]

3
A service provider in a remote domain, which the user
wishes to access, obtains identity information, 
authentication information, and associated attributes
from the identity provider in the source domain.
[Word Count: 30]

4
Service provider opens session with remote user and
enforces access control restrictions based on user's
identity and attributes.
[Word Count: 19]

130
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

EXAMPLES To get some feel for the functionality of identity federation, we look at
three scenarios, taken from [COMP06]. In the first scenario (Figure 4.10a),
Workplace.com contracts with Health.com to provide employee health benefits.
An employee uses a Web interface to sign on to Workplace.com and goes through
an authentication procedure there. This enables the employee to access
authorized services and resources at Workplace.com. When the employee clicks
[Word Count: 68]

Workplace.com
(employee portal)
Name
Joe
Jane
Ravi
[Word Count: 7]

Workplace.com
(employee portal)
Name
Joe
Jane
Ravi
[Word Count: 7]

PartsSupplier.com
Welcome Joe!
Technical doc.
Troubleshooting
[Word Count: 6]

Figure 4.10
Federated Identity Scenarios
[Word Count: 5]

132
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

BARK07b
Barker, E., et al. Recommendation for Key Management—Part 1: General.
NIST SP800-57, March 2007.
BARK07c
Barker, E., et al. Recommendation for Key Management—Part 2: Best
Practices for Key Management Organization. NIST SP800-57, March 2007.
BARK08
Barker, E., et al. Recommendation for Key Management—Part 3: Specific Key
Management Guidance. NIST SP800-57,August 2008.
BHAT07
Bhatti, R.; Bertino, E.; and Ghafoor, A. “An Integrated Approach to
Federated Identity and Privilege Management in Open Systems.” Communications
of the ACM, February 2007.
[Word Count: 78]

4.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 133
[Word Count: 9]

• MIT Kerberos Site: Information about Kerberos, including the FAQ, papers and docu-
ments, and pointers to commercial product sites.
[Word Count: 20]

• MIT Kerberos Consortium: Created to establish Kerberos as the universal authentica-
tion platform for the world’s computer networks.
[Word Count: 19]

• USC/ISI Kerberos Page: Another good source of Kerberos material.
[Word Count: 10]

• Kerberos Working Group: IETF group developing standards based on Kerberos.
[Word Count: 11]

• Public-Key Infrastructure Working Group: IETF group developing standards based on
X.509v3.
[Word Count: 12]

• Verisign: A leading commercial vendor of X.509-related products; white papers and
other worthwhile material at this site.
[Word Count: 18]

• NIST PKI Program: Good source of information.
[Word Count: 8]

4.8
KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

authentication
authentication server (AS)
federated identity manage-
ment
identity management
[Word Count: 10]

Kerberos
Kerberos realm
key distribution
key distribution center 
(KDC)
[Word Count: 9]

key management
master key
mutual authentication
nonce
one-way authentication
[Word Count: 9]

134
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

1.
A generates a random number R and sends to the server his name A, destination
B, and E(Ka, R).
[Word Count: 20]

ticket-granting server (TGS)
timestamp
X.509 certificate
[Word Count: 6]

propagating cipher block
chaining (PCBC) mode
public-key certificate
public-key directory
[Word Count: 10]

4.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 135
[Word Count: 9]

(1) A
B: Na
:
(1) A
B: E(K, Na)
:
(1) A
B: E(K, Na)
:
(2) B
A: E(K, Na)
:
(2) B
A: Na
:
(2) B
A: E(K, f(Na))
:
[Word Count: 34]

Describe situations for which each usage is appropriate.
4.3
Show that a random error in one block of ciphertext is propagated to all subsequent
blocks of plaintext in PCBC mode (see Figure F.2 in Appendix F).
4.4
Suppose that, in PCBC mode, blocks Ci and Ci 1 are interchanged during transmis-
sion. Show that this affects only the decrypted blocks Pi and Pi 1 but not subsequent
blocks.
4.5
In addition to providing a standard for public-key certificate formats, X.509 specifies
an authentication protocol.The original version of X.509 contains a security flaw.The
essence of the protocol is
[Word Count: 97]

B responds, thinking it is talking to A but is actually talking to C:
[Word Count: 14]

136
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

C meanwhile causes A to initiate authentication with C by some means.As a result,A
sends C the following:
[Word Count: 18]

C responds to A using the same nonce provided to C by B.
[Word Count: 13]

This is exactly what C needs to convince B that it is talking to A, so C now repeats the
incoming message back out to B.
[Word Count: 26]

So B will believe it is talking to A, whereas it is actually talking to C. Suggest a simple
solution to this problem that does not involve the use of timestamps.
4.6
Consider a one-way authentication technique based on asymmetric encryption:
[Word Count: 41]

a.
Explain the protocol.
b. What type of attack is this protocol susceptible to?
4.7
Consider a one-way authentication technique based on asymmetric encryption:
[Word Count: 24]

4.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 137
[Word Count: 9]

KDC
A:
E(Ka, [KS 7IDB 7N1 7E(Kb, [KS 7IDA]))
[Word Count: 9]

A
B:
E(KS, f(N2))
a.
Explain the protocol.
b. Can you think of a possible attack on this protocol? Explain how it can be done.
c.
Mention a possible technique to get around the attack—not a detailed mechanism,
just the basics of the idea.
Note: The remaining problems deal with a cryptographic product developed by IBM,
which is briefly described in a document at this book’s Web site in IBMCrypto.pdf.
Try these problems after reviewing the document.
[Word Count: 77]

138
CHAPTER 4 / KEY DISTRIBUTION AND USER AUTHENTICATION
[Word Count: 9]

4.19
What is the effect of adding the instruction EMKi?
EMKi: X
E(KMHi, X )
i
0, 1
[Word Count: 18]

Web Security Threats
Web Traffic Security Approaches
[Word Count: 7]

5.2
Secure Socket Layer and Transport Layer Security
[Word Count: 8]

SSL Architecture
SSL Record Protocol
Change Cipher Spec Protocol
Alert Protocol
Handshake Protocol
Cryptographic Computations
[Word Count: 15]

Version Number
Message Authentication Code
Pseudorandom Function
Alert Codes
Cipher Suites
Client Certificate Types
Certificate_Verify and Finished Messages
Cryptographic Computations
Padding
[Word Count: 21]

Connection Initiation
Connection Closure
5.5
Secure Shell (SSH)
[Word Count: 8]

Transport Layer Protocol
User Authentication Protocol
Connection Protocol
[Word Count: 8]

5.7
Key Terms, Review Questions, and Problems
[Word Count: 7]

140
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

—From the song,“I’ve Got You Under My Skin” by Cole Porter
[Word Count: 11]

◆
Secure Socket Layer (SSL) provides security services between TCP and
applications that use TCP. The Internet standard version is called Transport
Layer Service (TLS).
[Word Count: 25]

◆
SSL/TLS provides confidentiality using symmetric encryption and message
integrity using a message authentication code.
[Word Count: 15]

◆
SSL/TLS includes protocol mechanisms to enable two TCP users to deter-
mine the security mechanisms and services they will use.
[Word Count: 21]

◆
HTTPS (HTTP over SSL) refers to the combination of HTTP and SSL to
implement secure communication between a Web browser and a Web server.
[Word Count: 25]

◆
Secure Shell (SSH) provides secure remote logon and other secure
client/server facilities.
[Word Count: 13]

The World Wide Web is fundamentally a client/server application running over the
Internet and TCP/IP intranets.As such, the security tools and approaches discussed
so far in this book are relevant to the issue of Web security. But, as pointed out in
[GARF02], the Web presents new challenges not generally appreciated in the con-
text of computer and network security.
[Word Count: 59]

• The Internet is two-way. Unlike traditional publishing environments—even
electronic publishing systems involving teletext, voice response, or fax-back—
the Web is vulnerable to attacks on the Web servers over the Internet.
[Word Count: 31]

• The Web is increasingly serving as a highly visible outlet for corporate and
product information and as the platform for business transactions. Reputations
can be damaged and money can be lost if the Web servers are subverted.
[Word Count: 38]

• Although Web browsers are very easy to use, Web servers are relatively easy
to configure and manage, and Web content is increasingly easy to develop, the
underlying software is extraordinarily complex. This complex software may
hide many potential security flaws. The short history of the Web is filled with
examples of new and upgraded systems, properly installed, that are vulnerable
to a variety of security attacks.
[Word Count: 67]

• A Web server can be exploited as a launching pad into the corporation’s or
agency’s entire computer complex. Once the Web server is subverted, an
attacker may be able to gain access to data and systems not part of the Web
itself but connected to the server at the local site.
[Word Count: 52]

• Casual and untrained (in security matters) users are common clients for
Web-based services. Such users are not necessarily aware of the security
risks that exist and do not have the tools or knowledge to take effective
countermeasures.
[Word Count: 38]

142
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

Figure 5.1
Relative Location of Security Facilities in the TCP/IP Protocol Stack
[Word Count: 12]

Table 5.1
A Comparison of Threats on the Web
[Word Count: 9]

• Modification of message
traffic in transit
[Word Count: 7]

Confidentiality
• Eavesdropping on the net
[Word Count: 6]

• Info about which client
talks to server
[Word Count: 8]

Authentication
• Impersonation of legitimate
users
[Word Count: 6]

• Belief that false information 
is valid
[Word Count: 7]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 143
[Word Count: 10]

5.2 SECURE SOCKET LAYER AND TRANSPORT 
LAYER SECURITY
[Word Count: 8]

Netscape originated SSL.Version 3 of the protocol was designed with public review
and input from industry and was published as an Internet draft document.
Subsequently, when a consensus was reached to submit the protocol for Internet
standardization, the TLS working group was formed within IETF to develop a com-
mon standard. This first published version of TLS can be viewed as essentially an
SSLv3.1 and is very close to and backward compatible with SSLv3.
This section is devoted to a discussion of SSLv3.In the next section,the principal
differences between SSLv3 and TLS are described.
[Word Count: 94]

• Connection: A connection is a transport (in the OSI layering model defini-
tion) that provides a suitable type of service. For SSL, such connections are
peer-to-peer relationships. The connections are transient. Every connection is
associated with one session.
[Word Count: 39]

• Session: An SSL session is an association between a client and a server.Sessions
are created by the Handshake Protocol. Sessions define a set of cryptographic
[Word Count: 26]

144
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

security parameters which can be shared among multiple connections. Sessions
are used to avoid the expensive negotiation of new security parameters for
each connection.
[Word Count: 24]

• Session identifier: An arbitrary byte sequence chosen by the server to identify
an active or resumable session state.
[Word Count: 19]

• Peer certificate: An X509.v3 certificate of the peer. This element of the state
may be null.
[Word Count: 17]

• Compression method: The algorithm used to compress data prior to encryption.
[Word Count: 12]

• Cipher spec: Specifies the bulk data encryption algorithm (such as null, AES,
etc.) and a hash algorithm (such as MD5 or SHA-1) used for MAC calculation.
It also defines cryptographic attributes such as the hash_size.
[Word Count: 36]

• Master secret: 48-byte secret shared between the client and server.
[Word Count: 11]

• Is resumable: A flag indicating whether the session can be used to initiate new
connections.
[Word Count: 16]

A connection state is defined by the following parameters.
[Word Count: 9]

• Server and client random: Byte sequences that are chosen by the server and
client for each connection.
• Server write MAC secret: The secret key used in MAC operations on data
sent by the server.
• Client write MAC secret: The secret key used in MAC operations on data
sent by the client.
[Word Count: 54]

• Server write key: The secret encryption key for data encrypted by the server
and decrypted by the client.
[Word Count: 19]

• Client write key: The symmetric encryption key for data encrypted by the
client and decrypted by the server.
[Word Count: 19]

• Initialization vectors: When a block cipher in CBC mode is used, an initializa-
tion vector (IV) is maintained for each key. This field is first initialized by the
SSL Handshake Protocol. Thereafter, the final ciphertext block from each
record is preserved for use as the IV with the following record.
• Sequence numbers: Each party maintains separate sequence numbers for
transmitted and received messages for each connection.When a party sends or
receives a change cipher spec message, the appropriate sequence number is set
to zero. Sequence numbers may not exceed 264 – 1.
[Word Count: 94]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 145
[Word Count: 10]

The SSL Record Protocol provides two services for SSL connections:
[Word Count: 10]

• Confidentiality: The Handshake Protocol defines a shared secret key that is
used for conventional encryption of SSL payloads.
[Word Count: 19]

• Message Integrity: The Handshake Protocol also defines a shared secret key
that is used to form a message authentication code (MAC).
[Word Count: 22]

1Of course, one hopes that compression shrinks rather than expands the data. However, for very short
blocks, it is possible, because of formatting conventions, that the compression algorithm will actually
provide output that is longer than the input.
[Word Count: 38]

Figure 5.3
SSL Record Protocol Operation
[Word Count: 6]

146
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

AES
128, 256
RC4-40
40
IDEA
128
RC4-128
128
RC2-40
40
DES-40
40
DES
56
3DES
168
Fortezza
80
[Word Count: 19]

hash(MAC_write_secret || pad_2||
hash(MAC_write_secret || pad_1||seq_num ||
SSLCompressed.type || SSLCompressed.length ||
SSLCompressed.fragment))
[Word Count: 12]

||
= concatenation
MAC_write_secret
= shared secret key
hash
= cryptographic hash algorithm; either 
MD5 or SHA-1
pad_1
= the byte 0x36 (0011 0110) repeated 
48 times (384 bits) for MD5 and 40 
times (320 bits) for SHA-1
pad_2
= the byte 0x5C (0101 1100) repeated 48
times for MD5 and 40 times for SHA-1
seq_num
= the sequence number for this message
SSLCompressed.type
= the higher-level protocol used to process
this fragment
SSLCompressed.length
= the length of the compressed fragment
SSLCompressed.fragment = the compressed fragment (if compression
is not used, this is the plaintext fragment)
[Word Count: 96]

Note that this is very similar to the HMAC algorithm defined in Chapter 3.The
difference is that the two pads are concatenated in SSLv3 and are XORed in HMAC.
The SSLv3 MAC algorithm is based on the original Internet draft for HMAC, which
used concatenation.The final version of HMAC (defined in RFC 2104) uses the XOR.
Next, the compressed message plus the MAC are encrypted using symmetric
encryption. Encryption may not increase the content length by more than 1024
bytes, so that the total length may not exceed 214 + 2048. The following encryption
algorithms are permitted:
[Word Count: 97]

Fortezza can be used in a smart card encryption scheme.
For stream encryption, the compressed message plus the MAC are encrypted.
Note that the MAC is computed before encryption takes place and that the MAC
is then encrypted along with the plaintext or compressed plaintext.
For block encryption, padding may be added after the MAC prior to encryp-
tion.The padding is in the form of a number of padding bytes followed by a one-byte
[Word Count: 74]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 147
[Word Count: 10]

• Content Type (8 bits): The higher-layer protocol used to process the enclosed
fragment.
[Word Count: 14]

• Major Version (8 bits): Indicates major version of SSL in use. For SSLv3, the
value is 3.
[Word Count: 18]

• Minor Version (8 bits): Indicates minor version in use. For SSLv3, the value is 0.
[Word Count: 16]

• Compressed Length (16 bits): The length in bytes of the plaintext fragment (or
compressed fragment if compression is used).The maximum value is 
.
[Word Count: 24]

The content types that have been defined are change_cipher_spec,alert,
handshake, and application_data. The first three are the SSL-specific proto-
cols, discussed next. Note that no distinction is made among the various applications
(e.g., HTTP) that might use SSL; the content of the data created by such applications
is opaque to SSL.
Figure 5.4 illustrates the SSL record format.
[Word Count: 58]

The Change Cipher Spec Protocol is one of the three SSL-specific protocols that use
the SSL Record Protocol, and it is the simplest. This protocol consists of a single
message (Figure 5.5a), which consists of a single byte with the value 1.The sole pur-
pose of this message is to cause the pending state to be copied into the current state,
which updates the cipher suite to be used on this connection.
[Word Count: 72]

Content
type
Major
version
Minor
version
Compressed
length
[Word Count: 8]

148
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

(d) Other Upper-Layer Protocol (e.g., HTTP)
[Word Count: 6]

• unexpected_message: An inappropriate message was received.
[Word Count: 7]

• bad_record_mac: An incorrect MAC was received.
[Word Count: 7]

• decompression_failure: The decompression function received improper
input (e.g., unable to decompress or decompress to greater than maximum
allowable length).
[Word Count: 20]

• handshake_failure: Sender was unable to negotiate an acceptable set of
security parameters given the options available.
• illegal_parameter: A field in a handshake message was out of range or
inconsistent with other fields.
[Word Count: 34]

• close_notify: Notifies the recipient that the sender will not send any
more messages on this connection. Each party is required to send a
close_notify alert before closing the write side of a connection.
[Word Count: 34]

• no_certificate: May be sent in response to a certificate request if no
appropriate certificate is available.
[Word Count: 17]

• bad_certificate: A received certificate was corrupt (e.g., contained a
signature that did not verify).
• unsupported_certificate: The type of the received certificate is not
supported.
• certificate_revoked: A certificate has been revoked by its signer.
[Word Count: 36]

• certificate_expired: A certificate has expired.
[Word Count: 6]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 149
[Word Count: 10]

• certificate_unknown: Some other unspecified issue arose in processing
the certificate, rendering it unacceptable.
[Word Count: 14]

The most complex part of SSL is the Handshake Protocol. This protocol allows the
server and client to authenticate each other and to negotiate an encryption and
MAC algorithm and cryptographic keys to be used to protect data sent in an SSL
record. The Handshake Protocol is used before any application data is transmitted.
The Handshake Protocol consists of a series of messages exchanged by client
and server. All of these have the format shown in Figure 5.5c. Each message has
three fields:
[Word Count: 83]

• Type (1 byte): Indicates one of 10 messages. Table 5.2 lists the defined
message types.
[Word Count: 16]

• Length (3 bytes): The length of the message in bytes.
[Word Count: 11]

• Content ( 
bytes): The parameters associated with this message; these are
listed in Table 5.2.
[Word Count: 16]

Figure 5.6 shows the initial exchange needed to establish a logical connection
between client and server.The exchange can be viewed as having four phases.
[Word Count: 24]

PHASE 1. ESTABLISH SECURITY CAPABILITIES This phase is used to initiate a logical
connection and to establish the security capabilities that will be associated with it.
The exchange is initiated by the client, which sends a client_hello message with
the following parameters:
[Word Count: 42]

• Version: The highest SSL version understood by the client.
[Word Count: 10]

• Random: A client-generated random structure consisting of a 32-bit timestamp
and 28 bytes generated by a secure random number generator. These values
serve as nonces and are used during key exchange to prevent replay attacks.
[Word Count: 36]

Table 5.2
SSL Handshake Protocol Message Types
[Word Count: 7]

client_hello
version, random, session id, cipher suite, compression method
[Word Count: 9]

server_hello
version, random, session id, cipher suite, compression method
[Word Count: 9]

certificate
chain of X.509v3 certificates
[Word Count: 5]

server_key_exchange
parameters, signature
[Word Count: 3]

client_key_exchange
parameters, signature
[Word Count: 3]

150
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

• Session ID: A variable-length session identifier. A nonzero value indicates
that the client wishes to update the parameters of an existing connection or to
create a new connection on this session. A zero value indicates that the client
wishes to establish a new connection on a new session.
• CipherSuite: This is a list that contains the combinations of cryptographic
algorithms supported by the client, in decreasing order of preference. Each
element of the list (each cipher suite) defines both a key exchange algorithm
and a CipherSpec; these are discussed subsequently.
[Word Count: 92]

Phase 1
Establish security capabilities, including
protocol version, session ID, cipher suite,
compression method, and initial random
numbers.
[Word Count: 18]

Phase 2
Server may send certificate, key exchange,
and request certificate. Server signals end
of hello message phase.
[Word Count: 18]

Phase 3
Client sends certificate if requested. Client
sends key exchange. Client may send
certificate verification.
[Word Count: 16]

Phase 4
Change cipher suite and finish
handshake protocol.
[Word Count: 9]

Note: Shaded transfers are
optional or situation-dependent
messages that are not always sent.
[Word Count: 13]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 151
[Word Count: 10]

• Compression Method: This is a list of the compression methods the client
supports.
[Word Count: 14]

• RSA: The secret key is encrypted with the receiver’s RSA public key.A public-
key certificate for the receiver’s key must be made available.
[Word Count: 24]

• Fixed Diffie-Hellman: This is a Diffie-Hellman key exchange in which the
server’s certificate contains the Diffie-Hellman public parameters signed by
the certificate authority (CA). That is, the public-key certificate contains the
Diffie-Hellman public-key parameters. The client provides its Diffie-Hellman
public-key parameters either in a certificate, if client authentication is
required, or in a key exchange message. This method results in a fixed secret
key between two peers based on the Diffie-Hellman calculation using the
fixed public keys.
[Word Count: 78]

• Fortezza: The technique defined for the Fortezza scheme.
[Word Count: 9]

Following the definition of a key exchange method is the CipherSpec, which
includes the following fields.
[Word Count: 16]

• CipherAlgorithm: Any of the algorithms mentioned earlier: RC4, RC2, DES,
3DES, DES40, IDEA, or Fortezza
[Word Count: 16]

152
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

• HashSize: 0, 16 (for MD5), or 20 (for SHA-1) bytes
[Word Count: 11]

• Key Material: A sequence of bytes that contain data used in generating the
write keys
[Word Count: 16]

• IV Size: The size of the Initialization Value for Cipher Block Chaining (CBC)
encryption
[Word Count: 15]

• Anonymous Diffie-Hellman: The message content consists of the two global
Diffie-Hellman values (a prime number and a primitive root of that number)
plus the server’s public Diffie-Hellman key (see Figure 3.12).
[Word Count: 32]

• Ephemeral Diffie-Hellman: The message content includes the three Diffie-
Hellman parameters provided for anonymous Diffie-Hellman plus a signature
of those parameters.
[Word Count: 22]

• RSA key exchange (in which the server is using RSA but has a signature-only
RSA key): Accordingly, the client cannot simply send a secret key encrypted
with the server’s public key. Instead, the server must create a temporary RSA
public/private key pair and use the server_key_exchange message to send
the public key. The message content includes the two parameters of the
temporary RSA public key (exponent and modulus; see Figure 3.10) plus a
signature of those parameters.
• Fortezza
[Word Count: 80]

Some further details about the signatures are warranted.As usual, a signature
is created by taking the hash of a message and encrypting it with the sender’s private
key. In this case, the hash is defined as
[Word Count: 36]

hash(ClientHello.random
||
ServerHello.random
||
ServerParams)
[Word Count: 5]

So the hash covers not only the Diffie-Hellman or RSA parameters but also the two
nonces from the initial hello messages. This ensures against replay attacks and
misrepresentation. In the case of a DSS signature, the hash is performed using the
[Word Count: 41]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 153
[Word Count: 10]

SHA-1 algorithm. In the case of an RSA signature, both an MD5 and an SHA-1
hash are calculated, and the concatenation of the two hashes (36 bytes) is encrypted
with the server’s private key.
Next, a nonanonymous server (server not using anonymous Diffie-Hellman)
can request a certificate from the client. The certificate_request message
includes two parameters: certificate_type and certificate_authorities.
The certificate type indicates the public-key algorithm and its use:
[Word Count: 69]

• RSA for fixed Diffie-Hellman; in this case the signature is used only for
authentication, by sending a certificate signed with RSA
[Word Count: 22]

• DSS for fixed Diffie-Hellman; again, used only for authentication
[Word Count: 10]

The second parameter in the certificate_request message is a list of the
distinguished names of acceptable certificate authorities.
The final message in phase 2, and one that is always required, is the
server_done message, which is sent by the server to indicate the end of the
server hello and associated messages. After sending this message, the server will
wait for a client response.This message has no parameters.
[Word Count: 67]

• RSA: The client generates a 48-byte pre-master secret and encrypts with the
public key from the server’s certificate or temporary RSA key from a
server_key_exchange message. Its use to compute a master secret is
explained later.
• Ephemeral or Anonymous Diffie-Hellman: The client’s public Diffie-Hellman
parameters are sent.
[Word Count: 49]

• Fixed Diffie-Hellman: The client’s public Diffie-Hellman parameters were
sent in a certificate message, so the content of this message is null.
[Word Count: 22]

• Fortezza: The client’s Fortezza parameters are sent.
[Word Count: 8]

Finally, in this phase, the client may send a certificate_verify message
to provide explicit verification of a client certificate. This message is only sent fol-
lowing any client certificate that has signing capability (i.e., all certificates except
[Word Count: 37]

154
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

those containing fixed Diffie-Hellman parameters). This message signs a hash code
based on the preceding messages, defined as
[Word Count: 18]

CertificateVerify.signature.md5_hash=
MD5(master_secret || pad_2 || MD5(handshake_messages || 
master_secret || pad_1));
CertificateVerify.signature.sha_hash=
SHA(master_secret || pad_2 || SHA(handshake_messages || 
master_secret || pad_1));
[Word Count: 20]

PHASE 4. FINISH This phase completes the setting up of a secure connection. The
client sends a change_cipher_spec message and copies the pending CipherSpec
into the current CipherSpec. Note that this message is not considered part of the
Handshake Protocol but is sent using the Change Cipher Spec Protocol. The client
then immediately sends the finished message under the new algorithms, keys, and
secrets. The finished message verifies that the key exchange and authentication
processes were successful.The content of the finished message is the concatenation of
two hash values:
[Word Count: 89]

MD5(master_secret || pad2 || MD5(handshake_messages || 
Sender || master_secret || pad1))
SHA(master_secret || pad2 || SHA(handshake_messages || 
Sender || master_secret || pad1))
[Word Count: 22]

where Sender is a code that identifies that the sender is the client and
handshake_messages is all of the data from all handshake messages up to but
not including this message.
In response to these two messages,
the server sends its own
change_cipher_spec message, transfers the pending to the current CipherSpec,
and sends its finished message. At this point, the handshake is complete and the
client and server may begin to exchange application-layer data.
[Word Count: 74]

Two further items are of interest: (1) the creation of a shared master secret by means
of the key exchange and (2) the generation of cryptographic parameters from the
master secret.
[Word Count: 31]

5.2 / SECURE SOCKET LAYER AND TRANSPORT LAYER SECURITY 155
[Word Count: 10]

MASTER SECRET CREATION The shared master secret is a one-time 48-byte value
(384 bits) generated for this session by means of secure key exchange. The creation
is in two stages. First, a pre_master_secret is exchanged. Second, the
master_secret is calculated by both parties. For pre_master_secret
exchange, there are two possibilities.
[Word Count: 50]

• RSA: A 48-byte pre_master_secret is generated by the client, encrypted
with the server’s public RSA key, and sent to the server. The server decrypts
the ciphertext using its private key to recover the pre_master_secret.
[Word Count: 35]

• Diffie-Hellman: Both client and server generate a Diffie-Hellman public key.
After these are exchanged, each side performs the Diffie-Hellman calculation
to create the shared pre_master_secret.
[Word Count: 26]

Both sides now compute the master_secret as
[Word Count: 7]

master_secret = MD5(pre_master_secret || SHA('A' || 
pre_master_secret || ClientHello.random ||
ServerHello.random)) || 
MD5(pre_master_secret || SHA('BB' || 
pre_master_secret || ClientHello.random ||
ServerHello.random)) || 
MD5(pre_master_secret || SHA('CCC' || 
pre_master_secret || ClientHello.random || 
ServerHello.random))
[Word Count: 31]

where ClientHello.random and ServerHello.random are the two
nonce values exchanged in the initial hello messages.
[Word Count: 15]

GENERATION OF CRYPTOGRAPHIC PARAMETERS CipherSpecs require a client write
MAC secret, a server write MAC secret, a client write key, a server write key, a client
write IV, and a server write IV, which are generated from the master secret in that
order.These parameters are generated from the master secret by hashing the master
secret into a sequence of secure bytes of sufficient length for all needed parameters.
The generation of the key material from the master secret uses the same format
for generation of the master secret from the pre-master secret as
[Word Count: 93]

key_block = MD5(master_secret || SHA('A' || master_secret || 
ServerHello.random || ClientHello.random)) ||
MD5(master_secret || SHA('BB' || master_secret ||
ServerHello.random || ClientHello.random)) || 
MD5(master_secret || SHA('CCC' || master_secret || 
ServerHello.random || ClientHello.random)) || . . .
[Word Count: 35]

until enough output has been generated. The result of this algorithmic structure is a
pseudorandom function. We can view the master_secret as the pseudorandom
seed value to the function. The client and server random numbers can be viewed as
salt values to complicate cryptanalysis (see Chapter 9 for a discussion of the use of salt
values).
[Word Count: 56]

156
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

TLS is an IETF standardization initiative whose goal is to produce an Internet
standard version of SSL. TLS is defined as a Proposed Internet Standard in RFC
5246. RFC 5246 is very similar to SSLv3. In this section, we highlight the
differences.
[Word Count: 42]

The TLS Record Format is the same as that of the SSL Record Format (Figure 5.4),
and the fields in the header have the same meanings. The one difference is in ver-
sion values. For the current version of TLS, the major version is 3 and the minor
version is 3.
[Word Count: 51]

There are two differences between the SSLv3 and TLS MAC schemes: the actual
algorithm and the scope of the MAC calculation. TLS makes use of the HMAC
algorithm defined in RFC 2104. Recall from Chapter 3 that HMAC is defined as
[Word Count: 41]

H
= embedded hash function (for TLS, either MD5 or SHA-1)
[Word Count: 11]

M
= message input to HMAC
K+
= secret key padded with zeros on the left so that the result is equal
to the block length of the hash code (for MD5 and SHA-1, block
length = 512 bits)
ipad = 00110110 (36 in hexadecimal) repeated 64 times (512 bits)
opad = 01011100 (5C in hexadecimal) repeated 64 times (512 bits)
[Word Count: 61]

SSLv3 uses the same algorithm, except that the padding bytes are
concatenated with the secret key rather than being XORed with the secret key
padded to the block length. The level of security should be about the same in
both cases.
For TLS, the MAC calculation encompasses the fields indicated in the following
expression:
[Word Count: 54]

MAC(MAC_write_secret,seq_num || TLSCompressed.type || 
TLSCompressed.version || TLSCompressed.length || 
TLSCompressed.fragment)
[Word Count: 9]

The MAC calculation covers all of the fields covered by the SSLv3 calculation,
plus the field TLSCompressed.version, which is the version of the protocol
being employed.
[Word Count: 26]

TLS makes use of a pseudorandom function referred to as PRF to expand secrets
into blocks of data for purposes of key generation or validation. The objective is to
make use of a relatively small shared secret value but to generate longer blocks of
data in a way that is secure from the kinds of attacks made on hash functions and
MACs.The PRF is based on the data expansion function (Figure 5.7) given as
[Word Count: 74]

P_hash(secret, seed)= HMAC_hash(secret,A(1) || seed) || 
HMAC_hash(secret, A(2) || seed) || 
HMAC_hash(secret, A(3) || seed) || . . .
[Word Count: 19]

Figure 5.7
TLS Function P_hash(secret, seed)
[Word Count: 6]

158
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

PRF(secret, label, seed) = P_hash(S1,label || seed)
[Word Count: 7]

PRF takes as input a secret value, an identifying label, and a seed value and
produces an output of arbitrary length.
[Word Count: 21]

TLS supports all of the alert codes defined in SSLv3 with the exception of
no_certificate. A number of additional codes are defined in TLS; of these, the
following are always fatal.
[Word Count: 31]

• record_overflow: A TLS record was received with a payload (ciphertext)
whose length exceeds 
bytes, or the ciphertext decrypted to a length
of greater than 
bytes.
[Word Count: 26]

• unknown_ca: A valid certificate chain or partial chain was received, but the
certificate was not accepted because the CA certificate could not be located or
could not be matched with a known, trusted CA.
• access_denied: A valid certificate was received, but when access control
was applied, the sender decided not to proceed with the negotiation.
• decode_error: A message could not be decoded, because either a field
was out of its specified range or the length of the message was incorrect.
[Word Count: 83]

• protocol_version: The protocol version the client attempted to negoti-
ate is recognized but not supported.
[Word Count: 16]

• insufficient_security: Returned instead of handshake_failure
when a negotiation has failed specifically because the server requires ciphers
more secure than those supported by the client.
[Word Count: 25]

• unsupported_extension: Sent by clients that receive an extended server
hello containing an extension not in the corresponding client hello.
[Word Count: 20]

• internal_error: An internal error unrelated to the peer or the correct-
ness of the protocol makes it impossible to continue.
[Word Count: 21]

• decrypt_error: A handshake cryptographic operation failed, including
being unable to verify a signature, decrypt a key exchange, or validate a fin-
ished message.
[Word Count: 24]

The remaining alerts include the following.
[Word Count: 6]

• user_canceled: This handshake is being canceled for some reason unre-
lated to a protocol failure.
[Word Count: 16]

• no_renegotiation: Sent by a client in response to a hello request or by
the server in response to a client hello after initial handshaking. Either
of these messages would normally result in renegotiation, but this alert
indicates that the sender is not able to renegotiate. This message is always a
warning.
[Word Count: 52]

There are several small differences between the cipher suites available under SSLv3
and under TLS:
[Word Count: 15]

• Key Exchange: TLS supports all of the key exchange techniques of SSLv3
with the exception of Fortezza.
[Word Count: 18]

• Symmetric Encryption Algorithms: TLS includes all of the symmetric encryp-
tion algorithms found in SSLv3, with the exception of Fortezza.
[Word Count: 21]

TLS defines the following certificate types to be requested in a
certificate_request message: rsa_sign, dss_sign, rsa_fixed_dh, and
dss_fixed_dh. These are all defined in SSLv3. In addition, SSLv3 includes
rsa_ephemeral_dh, dss_ephemeral_dh, and fortezza_kea. Ephemeral
Diffie-Hellman involves signing the Diffie-Hellman parameters with either RSA or
DSS. For TLS, the rsa_sign and dss_sign types are used for that function; a
separate signing type is not needed to sign Diffie-Hellman parameters. TLS does
not include the Fortezza scheme.
[Word Count: 74]

Certificate_Verify and Finished Messages
[Word Count: 4]

In the TLS certificate_verify message, the MD5 and SHA-1 hashes are
calculated only over handshake_messages. Recall that for SSLv3, the hash
calculation also included the master secret and pads. These extra fields were felt to
add no additional security.
As with the finished message in SSLv3, the finished message in TLS is a hash
based on the shared master_secret, the previous handshake messages, and a
label that identifies client or server.The calculation is somewhat different. For TLS,
we have
[Word Count: 79]

PRF(master_secret,finished_label,MD5(handshake_messages)||
SHA-1(handshake_messages))
[Word Count: 2]

where finished_label is the string “client finished” for the client and “server
finished” for the server.
[Word Count: 16]

160
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

The pre_master_secret for TLS is calculated in the same way as in SSLv3.As in
SSLv3, the master_secret in TLS is calculated as a hash function of the
pre_master_secret and the two hello random numbers. The form of the TLS
calculation is different from that of SSLv3 and is defined as
[Word Count: 50]

master_secret= PRF(pre_master_secret,"master secret",
ClientHello.random||ServerHello.random)
[Word Count: 4]

The algorithm is performed until 48 bytes of pseudorandom output are produced.
The calculation of the key block material (MAC secret keys, session encryption
keys, and IVs) is defined as
[Word Count: 30]

key_block = PRF(master_secret, "key expansion",
SecurityParameters.server_random||
SecurityParameters.client_random)
[Word Count: 7]

until enough output has been generated. As with SSLv3, the key_block is a func-
tion of the master_secret and the client and server random numbers, but for
TLS, the actual algorithm is different.
[Word Count: 33]

HTTPS (HTTP over SSL) refers to the combination of HTTP and SSL to imple-
ment secure communication between a Web browser and a Web server.The HTTPS
capability is built into all modern Web browsers. Its use depends on the Web server
supporting HTTPS communication. For example, search engines do not support
HTTPS.
The principal difference seen by a user of a Web browser is that URL (uni-
form resource locator) addresses begin with https:// rather than http://. A normal
HTTP connection uses port 80. If HTTPS is specified, port 443 is used, which
invokes SSL.
[Word Count: 95]

When HTTPS is used, the following elements of the communication are
encrypted:
[Word Count: 12]

• Contents of browser forms (filled in by browser user)
[Word Count: 10]

• Cookies sent from browser to server and from server to browser
[Word Count: 12]

HTTPS is documented in RFC 2818, HTTP Over TLS.There is no fundamen-
tal change in using HTTP over either SSL or TLS, and both implementations are
referred to as HTTPS.
[Word Count: 30]

162
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

error on the server or a communication error that causes the TCP connection to drop.
However, the unannounced TCP closure could be evidence of some sort of attack. So
the HTTPS client should issue some sort of security warning when this occurs.
[Word Count: 42]

• Transport Layer Protocol: Provides server authentication, data confidentiality,
and data integrity with forward secrecy (i.e., if a key is compromised during
one session, the knowledge does not affect the security of earlier sessions).The
transport layer may optionally provide compression.
[Word Count: 40]

IP
Internet protocol provides datagram delivery across
multiple networks.
[Word Count: 9]

Transmission control protocol provides reliable, connection-
oriented end-to-end delivery.
[Word Count: 9]

Provides server authentication, confidentiality, and integrity.
It may optionally also provide compression.
[Word Count: 12]

Authenticates the client-side
user to the server.
[Word Count: 7]

SSH
Connection Protocol
Multiplexes the encrypted
tunnel into several logical
channels.
[Word Count: 11]

• User Authentication Protocol: Authenticates the user to the server.
[Word Count: 10]

• Connection Protocol: Multiplexes multiple logical communications channels
over a single, underlying SSH connection.
[Word Count: 14]

HOST KEYS Server authentication occurs at the transport layer, based on the server
possessing a public/private key pair. A server may have multiple host keys using
multiple different asymmetric encryption algorithms. Multiple hosts may share the
same host key. In any case, the server host key is used during key exchange to
authenticate the identity of the host. For this to be possible, the client must have a
priori knowledge of the server’s public host key. RFC 4251 dictates two alternative
trust models that can be used:
[Word Count: 87]

1. The client has a local database that associates each host name (as typed by
the user) with the corresponding public host key. This method requires no
centrally administered infrastructure and no third-party coordination. The
downside is that the database of name-to-key associations may become
burdensome to maintain.
[Word Count: 48]

2. The host name-to-key association is certified by a trusted certification author-
ity (CA).The client only knows the CA root key and can verify the validity of
all host keys certified by accepted CAs.This alternative eases the maintenance
problem, since ideally, only a single CA key needs to be securely stored on the
client. On the other hand, each host key must be appropriately certified by a
central authority before authorization is possible.
[Word Count: 73]

PACKET EXCHANGE Figure 5.9 illustrates the sequence of events in the SSH
Transport Layer Protocol. First, the client establishes a TCP connection to the
server. This is done via the TCP protocol and is not part of the Transport Layer
Protocol. Once the connection is established, the client and server exchange data,
referred to as packets, in the data field of a TCP segment. Each packet is in the
following format (Figure 5.10).
[Word Count: 73]

• Packet length: Length of the packet in bytes, not including the packet length
and MAC fields.
• Padding length: Length of the random padding field.
[Word Count: 26]

• Payload: Useful contents of the packet. Prior to algorithm negotiation, this
field is uncompressed. If compression is negotiated, then in subsequent pack-
ets, this field is compressed.
[Word Count: 28]

• Random padding: Once an encryption algorithm has been negotiated, this
field is added. It contains random bytes of padding so that that total length of
the packet (excluding the MAC field) is a multiple of the cipher block size, or
8 bytes for a stream cipher.
[Word Count: 47]

• Message authentication code (MAC): If message authentication has been
negotiated, this field contains the MAC value. The MAC value is computed
over the entire packet plus a sequence number, excluding the MAC field. The
sequence number is an implicit 32-bit packet sequence that is initialized to
[Word Count: 47]

164
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

zero for the first packet and incremented for every packet.The sequence num-
ber is not included in the packet sent over the TCP connection.
[Word Count: 24]

Once an encryption algorithm has been negotiated, the entire packet (exclud-
ing the MAC field) is encrypted after the MAC value is calculated.
The SSH Transport Layer packet exchange consists of a sequence of steps
(Figure 5.9). The first step, the identification string exchange, begins with the client
sending a packet with an identification string of the form:
[Word Count: 58]

SSH-protoversion-softwareversion SP comments CR LF
[Word Count: 5]

SSH-protoversion-softwareversion
Identification string
exchange
[Word Count: 4]

Figure 5.9
SSH Transport Layer Protocol Packet Exchanges
[Word Count: 8]

1. C generates a random number 
and computes 
. C
sends to S.
[Word Count: 13]

2. S generates a random number 
and computes 
.
S receives . It computes 
mod ,
, and signature 
on 
with its private host key. S sends
to C.The signing operation may involve a second hashing operation.
(K_S || f || s)
H
s
K_S || e || f || K)
H = hash(V_C || V_S || I_C || I_S ||
p
K = ey
e
f = gy mod p
y(0 6 y 6 q)
e
e = gx mod p
x(1 6 x 6 q)
[Word Count: 87]

pktl = packet length
pdl = padding length
[Word Count: 8]

Figure 5.10
SSH Transport Layer Protocol Packet Formation
[Word Count: 8]

166
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

3. C verifies that 
really is the host key for S (e.g., using certificates or a
local database). C is also allowed to accept the key without verification;
however, doing so will render the protocol insecure against active attacks
(but may be desirable for practical reasons in the short term in many
environments). C then computes 
,
, and verifies the signature on 
.
[Word Count: 64]

H
s
I_C || I_S || K_S || e || f || K)
H = hash(V_C || V_S ||
K = f x mod p
[Word Count: 25]

Table 5.3
SSH Transport Layer Cryptographic Algorithms
[Word Count: 7]

hmac-sha1*
HMAC-SHA1; digest length =
key length = 20
[Word Count: 9]

blowfish-cbc
Blowfish in CBC mode
hmac-sha1-96**
First 96 bits of HMAC-SHA1;
digest length = 12; key length = 20
[Word Count: 19]

twofish256-cbc
Twofish in CBC mode
with a 256-bit key
hmac-md5
HMAC-SHA1; digest length =
key length = 16
[Word Count: 18]

twofish192-cbc
Twofish with a 192-bit key
hmac-md5-96
First 96 bits of HMAC-SHA1;
digest length = 12; key length = 16
[Word Count: 20]

twofish128-cbc
Twofish with a 128-bit key
[Word Count: 6]

aes256-cbc
AES in CBC mode with a
256-bit key
Compression algorithm
[Word Count: 11]

aes192-cbc
AES with a 192-bit key
none*
No compression
[Word Count: 9]

aes128-cbc**
AES with a 128-bit key
zlib
Defined in RFC 1950 and 
RFC 1951
[Word Count: 14]

Serpent256-cbc
Serpent in CBC mode
with a 256-bit key
[Word Count: 9]

Serpent192-cbc
Serpent with a 192-bit key
[Word Count: 6]

Serpent128-cbc
Serpent with a 128-bit key
[Word Count: 6]

The final step is service request. The client sends an SSH_MSG_
SERVICE_REQUEST packet to request either the User Authentication or the
Connection Protocol. Subsequent to this, all data is exchanged as the payload of an
SSH Transport Layer packet, protected by encryption and MAC.
[Word Count: 44]

KEY GENERATION The keys used for encryption and MAC (and any needed IVs)
are generated from the shared secret key 
, the hash value from the key exchange
, and the session identifier, which is equal to 
unless there has been a subsequent
key exchange after the initial key exchange.The values are computed as follows.
[Word Count: 55]

where HASH() is the hash function determined during algorithm negotiation.
[Word Count: 10]

The User Authentication Protocol provides the means by which the client is authen-
ticated to the server.
[Word Count: 17]

MESSAGE TYPES AND FORMATS Three types of messages are always used in the User
Authentication Protocol. Authentication requests from the client have the format:
[Word Count: 24]

string
method name
...
method specific fields
[Word Count: 7]

where user name is the authorization identity the client is claiming, service name
is the facility to which the client is requesting access (typically the SSH
Connection Protocol), and method name is the authentication method being used
in this request. The first byte has decimal value 50, which is interpreted as
SSH_MSG_USERAUTH_REQUEST.
If the server either (1) rejects the authentication request or (2) accepts the
request but requires one or more additional authentication methods, the server
sends a message with the format:
[Word Count: 82]

name-list
authentications that can continue
[Word Count: 5]

where the name-list is a list of methods that may productively continue the dialog. If
the server accepts authentication, it sends a single byte message: SSH_MSG_
USERAUTH_SUCCESS (52).
[Word Count: 28]

168
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

MESSAGE EXCHANGE The message exchange involves the following steps.
[Word Count: 9]

1. The client sends a SSH_MSG_USERAUTH_REQUEST with a requested method
of none.
[Word Count: 12]

2. The server checks to determine if the user name is valid. If not, the server returns
SSH_MSG_USERAUTH_FAILURE with the partial success value of false. If the
user name is valid, the server proceeds to step 3.
[Word Count: 37]

3. The server returns SSH_MSG_USERAUTH_FAILURE with a list of one or more
authentication methods to be used.
[Word Count: 17]

4. The client selects one of the acceptable authentication methods and sends a
SSH_MSG_USERAUTH_REQUEST with that method name and the required
method-specific fields. At this point, there may be a sequence of exchanges to
perform the method.
[Word Count: 37]

5. If the authentication succeeds and more authentication methods are required,the
server proceeds to step 3,using a partial success value of true.If the authentication
fails, the server proceeds to step 3, using a partial success value of false.
[Word Count: 38]

6. When all required authentication methods succeed, the server sends a
SSH_MSG_USERAUTH_SUCCESS message, and the Authentication Protocol is
over.
[Word Count: 19]

AUTHENTICATION METHODS The server may require one or more of the following
authentication methods.
[Word Count: 14]

• publickey: The details of this method depend on the public-key algorithm
chosen. In essence, the client sends a message to the server that contains the
client’s public key, with the message signed by the client’s private key. When
the server receives this message, it checks whether the supplied key is accept-
able for authentication and, if so, it checks whether the signature is correct.
[Word Count: 65]

• password: The client sends a message containing a plaintext password,
which is protected by encryption by the Transport Layer Protocol.
[Word Count: 21]

• hostbased: Authentication is performed on the client’s host rather than the
client itself.Thus, a host that supports multiple clients would provide authenti-
cation for all its clients. This method works by having the client send a signa-
ture created with the private key of the client host. Thus, rather than directly
verifying the user’s identity, the SSH server verifies the identity of the client
host—and then believes the host when it says the user has already authenti-
cated on the client side.
[Word Count: 83]

The SSH Connection Protocol runs on top of the SSH Transport Layer Protocol and
assumes that a secure authentication connection is in use.2 That secure authentication
[Word Count: 26]

2RFC 4254, The Secure Shell (SSH) Connection Protocol, states that the Connection Protocol runs on top
of the Transport Layer Protocol and the User Authentication Protocol. RFC 4251, SSH Protocol
Architecture, states that the Connection Protocol runs over the User Authentication Protocol. In fact, the
Connection Protocol runs over the Transport Layer Protocol, but assumes that the User Authentication
Protocol has been previously invoked.
[Word Count: 64]

connection, referred to as a tunnel, is used by the Connection Protocol to multiplex a
number of logical channels.
[Word Count: 19]

CHANNEL TYPES Four channel types are recognized in the SSH Connection
Protocol specification.
[Word Count: 13]

• session: The remote execution of a program. The program may be a shell, an
application such as file transfer or e-mail, a system command, or some built-in
subsystem. Once a session channel is opened, subsequent requests are used to
start the remote program.
[Word Count: 44]

170
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

Establish Authenticated Transport Layer Connection
[Word Count: 5]

Figure 5.11
Example SSH Connection Protocol Message
Exchange
[Word Count: 8]

• x11: This refers to the X Window System, a computer software system and net-
work protocol that provides a graphical user interface (GUI) for networked
computers.X allows applications to run on a network server but to be displayed
on a desktop machine.
• forwarded-tcpip: This is remote port forwarding, as explained in the next sub-
section.
• direct-tcpip: This is local port forwarding, as explained in the next subsection.
[Word Count: 70]

Figure 5.12
SSH Transport Layer Packet Exchanges
[Word Count: 7]

172
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

1. The SSH client sets up a connection to the remote server.
[Word Count: 12]

2. Select an unused local port number, say 9999, and configure SSH to accept
traffic from this port destined for port 110 on the server.
[Word Count: 25]

3. The SSH client informs the SSH server to create a connection to the destina-
tion, in this case mailserver port 110.
[Word Count: 22]

4. The client takes any bits sent to local port 9999 and sends them to the server
inside the encrypted SSH session.The SSH server decrypts the incoming bits
and sends the plaintext to port 110.
[Word Count: 35]

5. In the other direction, the SSH server takes any bits received on port 110
and sends them inside the SSH session back to the client, who decrypts and
sends them to the process connected to port 9999.
[Word Count: 38]

With remote forwarding, the user’s SSH client acts on the server’s behalf.
The client receives traffic with a given destination port number, places the traffic
on the correct port and sends it to the destination the user chooses. A typical
example of remote forwarding is the following. You wish to access a server at
work from your home computer. Because the work server is behind a firewall, it
will not accept an SSH request from your home computer. However, from work
you can set up an SSH tunnel using remote forwarding. This involves the follow-
ing steps.
[Word Count: 97]

1. From the work computer, set up an SSH connection to your home
computer. The firewall will allow this, because it is a protected outgoing
connection.
[Word Count: 26]

2. Configure the SSH server to listen on a local port, say 22, and to deliver data
across the SSH connection addressed to remote port, say 2222.
[Word Count: 27]

3. You can now go to your home computer, and configure SSH to accept traffic
on port 2222.
4. You now have an SSH tunnel that can be used for remote logon to the work
server.
[Word Count: 36]

5.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 173
[Word Count: 9]

[RESC01] is a good detailed treatment of SSL and TLS. [BARR05] provides a thorough
treatment of SSH.The original version (SSH-1) of SSH was introduced in [YLON96].
[Word Count: 26]

BARR05
Barrett, D.; Silverman, R.; and Byrnes, R. SSH The Secure Shell:The Definitive
Guide. Sebastopol, CA: O’Reilly, 2005.
RESC01
Rescorla, E. SSL and TLS: Designing and Building Secure Systems. Reading,
MA:Addison-Wesley, 2001.
YLON96
Ylonen, T. “SSH - Secure Login Connections over the Internet.” Proceedings,
Sixth USENIX Security Symposium,July 1996.
[Word Count: 49]

• Transport Layer Security Charter: Latest RFCs and Internet drafts for TLS.
[Word Count: 12]

• OpenSSL Project: Project to develop open-source SSL and TLS software. Site includes
documents and links.
[Word Count: 16]

5.7 KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

Alert protocol
Change Cipher Spec protocol
Handshake protocol
[Word Count: 8]

HTTPS (HTTP over SSL)
Master Secret
Secure Shell (SSH)
[Word Count: 9]

Secure Socket Layer (SSL)
Transport Layer Security
(TLS)
[Word Count: 8]

174
CHAPTER 5 / TRANSPORT-LEVEL SECURITY
[Word Count: 6]

The Wi-Fi Alliance
IEEE 802 Protocol Architecture
IEEE 802.11 Network Components and Architectural Model
IEEE 802.11 Services
[Word Count: 17]

IEEE 802.11i Services
IEEE 802.11i Phases of Operation
Discovery Phase
Authentication Phase
Key Management Phase
Protected Data Transfer Phase
The IEEE 802.11i Pseudorandom Function
[Word Count: 24]

6.3
Wireless Application Protocol Overview
[Word Count: 5]

Operational Overview
Wireless Markup Language
WAP Architecture
Wireless Application Environment
WAP Protocol Architecture
[Word Count: 13]

WTLS Sessions and Connections
WTLS Protocol Architecture
Cryptographic Algorithms
[Word Count: 9]

6.7
Key Terms, Review Questions, and Problems
[Word Count: 7]

176
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

Investigators have published numerous reports of birds taking turns vocalizing;
the bird spoken to gave its full attention to the speaker and never vocalized at the
same time, as if the two were holding a conversation.
[Word Count: 36]

Researchers and scholars who have studied the data on avian communication
carefully write (a) the communication code of birds, such as crows, has not been
broken by any means; (b) probably all birds have wider vocabularies than any-
one realizes; and (c) greater complexity and depth are recognized in avian com-
munication as research progresses.
[Word Count: 55]

—The Human Nature of Birds, Theodore Barber
[Word Count: 7]

◆
IEEE 802.11 is a standard for wireless LANs. Interoperable standards-
compliant implementations are referred to as Wi-Fi.
[Word Count: 18]

◆
IEEE 802.11i specifies security standards for IEEE 802.11 LANs, including
authentication, data integrity, data confidentiality, and key management.
Interoperable implementations are also referred to as Wi-Fi Protected
Access (WPA).
[Word Count: 30]

◆
The Wireless Application Protocol (WAP) is a standard to provide mobile
users of wireless phones and other wireless terminals access to telephony
and information services, including the Internet and the Web.
[Word Count: 32]

◆
WAP security is primarily provided by the Wireless Transport Layer Secu-
rity (WTLS), which provides security services between the mobile device
and the WAP gateway to the Internet.
[Word Count: 29]

◆
There are several approaches to WAP end-to-end security. One notable
approach assumes that the mobile device implements TLS over TCP/IP
and the wireless network supports transfer of IP packets.
[Word Count: 30]

6.1 / IEEE 802.11 WIRELESS LAN OVERVIEW 177
[Word Count: 8]

Access point (AP)
Any entity that has station functionality and provides access to the distribution
system via the wireless medium for associated stations.
[Word Count: 23]

Basic service set (BSS)
A set of stations controlled by a single coordination function.
[Word Count: 14]

Coordination function
The logical function that determines when a station operating within a BSS is per-
mitted to transmit and may be able to receive PDUs.
[Word Count: 26]

A system used to interconnect a set of BSSs and integrated LANs to create an
ESS.
[Word Count: 16]

A set of one or more interconnected BSSs and integrated LANs that appear as a
single BSS to the LLC layer at any station associated with one of these BSSs.
[Word Count: 30]

The unit of data exchanged between two peer MAC entities using the services of
the physical layer.
[Word Count: 17]

Information that is delivered as a unit between MAC users.
[Word Count: 10]

Station
Any device that contains an IEEE 802.11 conformant MAC and physical layer.
[Word Count: 13]

IEEE 802 is a committee that has developed standards for a wide range of local area
networks (LANs). In 1990, the IEEE 802 Committee formed a new working group,
IEEE 802.11, with a charter to develop a protocol and transmission specifications
for wireless LANs (WLANs). Since that time, the demand for WLANs at different
frequencies and data rates has exploded. Keeping pace with this demand, the IEEE
802.11 working group has issued an ever-expanding list of standards. Table 6.1
briefly defines key terms used in the IEEE 802.11 standard.
[Word Count: 89]

178
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

Encoding/decoding of signals
Bit transmission/reception
Transmission medium
[Word Count: 7]

Assemble data into frame
Addressing
Error detection
Medium access
[Word Count: 9]

General IEEE 802
functions
Specific IEEE 802.11
functions
[Word Count: 8]

Frequency band definition
Wireless signal encoding
[Word Count: 6]

Reliable data delivery
Wireless access control protocols
[Word Count: 7]

Before proceeding, we need to briefly preview the IEEE 802 protocol architecture.
IEEE 802.11 standards are defined within the structure of a layered set of protocols.
This structure, used for all IEEE 802 standards, is illustrated in Figure 6.1.
[Word Count: 39]

PHYSICAL LAYER The lowest layer of the IEEE 802 reference model is the physical
layer, which includes such functions as encoding/decoding of signals and bit
transmission/reception. In addition, the physical layer includes a specification of the
transmission medium. In the case of IEEE 802.11, the physical layer also defines
frequency bands and antenna characteristics.
[Word Count: 54]

MEDIA ACCESS CONTROL All LANs consist of collections of devices that share the
network’s transmission capacity. Some means of controlling access to the
transmission medium is needed to provide an orderly and efficient use of that
capacity.This is the function of a media access control (MAC) layer.The MAC layer
receives data from a higher-layer protocol, typically the Logical Link Control (LLC)
layer, in the form of a block of data known as the MAC service data unit (MSDU).
In general, the MAC layer performs the following functions:
[Word Count: 87]

• On transmission, assemble data into a frame, known as a MAC protocol data
unit (MPDU) with address and error-detection fields.
[Word Count: 21]

• On reception, disassemble frame, and perform address recognition and error
detection.
[Word Count: 12]

• Govern access to the LAN transmission medium.
[Word Count: 8]

6.1 / IEEE 802.11 WIRELESS LAN OVERVIEW 179
[Word Count: 8]

Source
MAC Address
MAC Service Data Unit (MSDU)
CRC
[Word Count: 9]

The exact format of the MPDU differs somewhat for the various MAC proto-
cols in use. In general, all of the MPDUs have a format similar to that of Figure 6.2.
The fields of this frame are as follows.
[Word Count: 39]

• MAC Control: This field contains any protocol control information needed for
the functioning of the MAC protocol. For example, a priority level could be
indicated here.
[Word Count: 27]

• Destination MAC Address: The destination physical address on the LAN for
this MPDU.
[Word Count: 14]

• Source MAC Address: The source physical address on the LAN for this
MPDU.
[Word Count: 14]

• MAC Service Data Unit: The data from the next higher layer.
[Word Count: 12]

• CRC: The cyclic redundancy check field; also known as the Frame Check
Sequence (FCS) field. This is an error-detecting code, such as that which is
used in other data-link control protocols. The CRC is calculated based on the
bits in the entire MPDU. The sender calculates the CRC and adds it to the
frame. The receiver performs the same calculation on the incoming MPDU
and compares that calculation to the CRC field in that incoming MPDU. If the
two values don’t match, then one or more bits have been altered in transit.
[Word Count: 93]

The fields preceding the MSDU field are referred to as the MAC header, and
the field following the MSDU field is referred to as the MAC trailer.The header and
trailer contain control information that accompany the data field and that are used
by the MAC protocol.
[Word Count: 46]

LOGICAL LINK CONTROL In most data-link control protocols, the data-link protocol
entity is responsible not only for detecting errors using the CRC, but for recovering
from those errors by retransmitting damaged frames. In the LAN protocol
architecture, these two functions are split between the MAC and LLC layers. The
MAC layer is responsible for detecting errors and discarding any frames that
contain errors. The LLC layer optionally keeps track of which frames have been
successfully received and retransmits unsuccessful frames.
[Word Count: 80]

IEEE 802.11 Network Components and Architectural Model
[Word Count: 7]

Figure 6.3 illustrates the model developed by the 802.11 working group.The smallest
building block of a wireless LAN is a basic service set (BSS),which consists of wireless
stations executing the same MAC protocol and competing for access to the same
shared wireless medium. A BSS may be isolated, or it may connect to a backbone
[Word Count: 55]

180
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

Figure 6.3
IEEE 802.11 Extended Service Set
[Word Count: 7]

6.1 / IEEE 802.11 WIRELESS LAN OVERVIEW 181
[Word Count: 8]

Association
Distribution system
MSDU delivery
[Word Count: 5]

Authentication
Station
LAN access and security
[Word Count: 6]

Deauthentication
Station
LAN access and security
[Word Count: 6]

Disassociation
Distribution system
MSDU delivery
[Word Count: 5]

Distribution
Distribution system
MSDU delivery
[Word Count: 5]

Integration
Distribution system
MSDU delivery
[Word Count: 5]

Reassociation
Distribution system
MSDU delivery
[Word Count: 5]

IEEE 802.11 defines nine services that need to be provided by the wireless LAN to
achieve functionality equivalent to that which is inherent to wired LANs. Table 6.2
lists the services and indicates two ways of categorizing them.
[Word Count: 38]

1. The service provider can be either the station or the DS. Station services are
implemented in every 802.11 station, including AP stations. Distribution ser-
vices are provided between BSSs; these services may be implemented in an AP
or in another special-purpose device attached to the distribution system.
[Word Count: 48]

2. Three of the services are used to control IEEE 802.11 LAN access and confi-
dentiality. Six of the services are used to support delivery of MSDUs between
stations. If the MSDU is too large to be transmitted in a single MPDU, it may
be fragmented and transmitted in a series of MPDUs.
[Word Count: 53]

Following the IEEE 802.11 document, we next discuss the services in an order
designed to clarify the operation of an IEEE 802.11 ESS network. MSDU delivery,
which is the basic service, already has been mentioned. Services related to security
are introduced in Section 6.2.
[Word Count: 44]

182
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

The integration service enables transfer of data between a station on an IEEE
802.11 LAN and a station on an integrated IEEE 802.x LAN. The term integrated
refers to a wired LAN that is physically connected to the DS and whose stations
may be logically connected to an IEEE 802.11 LAN via the integration service.The
integration service takes care of any address translation and media conversion logic
required for the exchange of data.
[Word Count: 73]

ASSOCIATION-RELATED SERVICES The primary purpose of the MAC layer is to
transfer MSDUs between MAC entities; this purpose is fulfilled by the
distribution service. For that service to function, it requires information about
stations within the ESS that is provided by the association-related services. Before
the distribution service can deliver data to or accept data from a station, that
station must be associated. Before looking at the concept of association, we need
to describe the concept of mobility. The standard defines three transition types,
based on mobility:
[Word Count: 87]

• No transition: A station of this type is either stationary or moves only within
the direct communication range of the communicating stations of a single BSS.
[Word Count: 27]

• BSS transition: This is defined as a station movement from one BSS to
another BSS within the same ESS. In this case, delivery of data to the station
requires that the addressing capability be able to recognize the new location
of the station.
[Word Count: 44]

• ESS transition: This is defined as a station movement from a BSS in one ESS
to a BSS within another ESS. This case is supported only in the sense that the
station can move. Maintenance of upper-layer connections supported by
802.11 cannot be guaranteed. In fact, disruption of service is likely to occur.
[Word Count: 54]

To deliver a message within a DS, the distribution service needs to know
where the destination station is located. Specifically, the DS needs to know the
identity of the AP to which the message should be delivered in order for that mes-
sage to reach the destination station. To meet this requirement, a station must
maintain an association with the AP within its current BSS.Three services relate to
this requirement:
[Word Count: 70]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 183
[Word Count: 8]

There are two characteristics of a wired LAN that are not inherent in a wireless LAN.
[Word Count: 16]

1. In order to transmit over a wired LAN, a station must be physically connected
to the LAN. On the other hand, with a wireless LAN, any station within radio
range of the other devices on the LAN can transmit. In a sense, there is a form
of authentication with a wired LAN in that it requires some positive and
presumably observable action to connect a station to a wired LAN.
[Word Count: 71]

2. Similarly, in order to receive a transmission from a station that is part of a
wired LAN, the receiving station also must be attached to the wired LAN. On
the other hand, with a wireless LAN, any station within radio range can
receive. Thus, a wired LAN provides a degree of privacy, limiting reception of
data to stations connected to the LAN.
[Word Count: 63]

The 802.11i RSN security specification defines the following services.
[Word Count: 9]

• Authentication: A protocol is used to define an exchange between a user and
an AS that provides mutual authentication and generates temporary keys to
be used between the client and the AP over the wireless link.
• Access control:1 This function enforces the use of the authentication function,
routes the messages properly, and facilitates key exchange. It can work with a
variety of authentication protocols.
[Word Count: 66]

• Privacy with message integrity: MAC-level data (e.g., an LLC PDU) are
encrypted along with a message integrity code that ensures that the data have
not been altered.
[Word Count: 28]

Figure 6.4a indicates the security protocols used to support these services,
while Figure 6.4b lists the cryptographic algorithms used for these services.
[Word Count: 22]

1In this context, we are discussing access control as a security function. This is a different function than
media access control (MAC) as described in Section 6.1. Unfortunately, the literature and the standards
use the term access control in both contexts.
[Word Count: 41]

184
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

The operation of an IEEE 802.11i RSN can be broken down into five distinct phases
of operation. The exact nature of the phases will depend on the configuration and
the end points of the communication. Possibilities include (see Figure 6.3):
[Word Count: 40]

1. Two wireless stations in the same BSS communicating via the access point
(AP) for that BSS.
2. Two wireless stations (STAs) in the same ad hoc IBSS communicating directly
with each other.
3. Two wireless stations in different BSSs communicating via their respective APs
across a distribution system.
[Word Count: 49]

4. A wireless station communicating with an end station on a wired network via
its AP and the distribution system.
[Word Count: 20]

Extensible
Authentication
Protocol (EAP)
[Word Count: 4]

Confidentiality, Data
Origin Authentication
and Integrity and
Replay Protection
[Word Count: 9]

Integrity and
Data Origin
Authentication
[Word Count: 5]

CBC-MAC = Cipher Block  Block Chaining Message Authentication Code (MAC)
CCM 
= Counter Mode with Cipher Block Chaining Message Authentication Code 
CCMP 
= Counter Mode with Cipher Block Chaining MAC Protocol
TKIP 
= Temporal Key Integrity Protocol
[Word Count: 37]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 185
[Word Count: 8]

• Discovery: An AP uses messages called Beacons and Probe Responses to
advertise its IEEE 802.11i security policy. The STA uses these to identify an
AP for a WLAN with which it wishes to communicate. The STA associates
with the AP, which it uses to select the cipher suite and authentication mecha-
nism when the Beacons and Probe Responses present a choice.
[Word Count: 62]

• Authentication: During this phase, the STA and AS prove their identities to
each other.The AP blocks non-authentication traffic between the STA and AS
until the authentication transaction is successful. The AP does not participate
in the authentication transaction other than forwarding traffic between the
STA and AS.
[Word Count: 48]

Figure 6.5
IEEE 802.11i Phases of Operation
[Word Count: 7]

186
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

• Key generation and distribution: The AP and the STA perform several opera-
tions that cause cryptographic keys to be generated and placed on the AP and
the STA. Frames are exchanged between the AP and STA only.
[Word Count: 38]

• Protected data transfer: Frames are exchanged between the STA and the end
station through the AP.As denoted by the shading and the encryption module
icon, secure data transfer occurs between the STA and the AP only; security is
not provided end-to-end.
[Word Count: 42]

• Connection termination: The AP and STA exchange frames. During this
phase, the secure connection is torn down and the connection is restored to the
original state.
[Word Count: 27]

We now look in more detail at the RSN phases of operation, beginning with the
discovery phase, which is illustrated in the upper portion of Figure 6.6.The purpose
of this phase is for an STA and an AP to recognize each other, agree on a set of secu-
rity capabilities, and establish an association for future communication using those
security capabilities.
[Word Count: 61]

SECURITY CAPABILITIES During this phase, the STA and AP decide on specific
techniques in the following areas:
[Word Count: 17]

• Confidentiality and MPDU integrity protocols for protecting unicast traffic
(traffic only between this STA and AP)
[Word Count: 17]

Confidentiality and integrity protocols for protecting multicast/broadcast traf-
fic are dictated by the AP, since all STAs in a multicast group must use the same pro-
tocols and ciphers.The specification of a protocol, along with the chosen key length
(if variable) is known as a cipher suite. The options for the confidentiality and
integrity cipher suite are
[Word Count: 57]

• WEP, with either a 40-bit or 104-bit key, which allows backward compatibility
with older IEEE 802.11 implementations
• TKIP
[Word Count: 20]

The other negotiable suite is the authentication and key management (AKM)
suite, which defines (1) the means by which the AP and STA perform mutual
authentication and (2) the means for deriving a root key from which other keys may
be generated.The possible AKM suites are
[Word Count: 46]

• Pre-shared key (no explicit authentication takes place and mutual authentica-
tion is implied if the STA and AP share a unique secret key)
[Word Count: 24]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 187
[Word Count: 8]

Probe request
Station sends a request
to join network.
AP sends possible
security parameter
(security capabilities set
per the security policy).
[Word Count: 21]

AP sends the associated
security parameters.
[Word Count: 6]

Station sends a
request to perform
 null authentication.
[Word Count: 8]

Station sends a request to
associate with AP with
security parameters.
[Word Count: 11]

Station sets selected
security parameters.
[Word Count: 5]

Extensible Authentication Protocol Exchange
[Word Count: 4]

Figure 6.6
IEEE 802.11i Phases of Operation: Capability Discovery,
Authentication, and Association
[Word Count: 12]

MPDU EXCHANGE The discovery phase consists of three exchanges.
[Word Count: 9]

• Network and security capability discovery: During this exchange, STAs dis-
cover the existence of a network with which to communicate. The AP either
periodically broadcasts its security capabilities (not shown in figure), indicated
by RSN IE (Robust Security Network Information Element), in a specific
channel through the Beacon frame; or responds to a station’s Probe Request
through a Probe Response frame. A wireless station may discover available
access points and corresponding security capabilities by either passively mon-
itoring the Beacon frames or actively probing every channel.
[Word Count: 87]

• Open system authentication: The purpose of this frame sequence, which pro-
vides no security, is simply to maintain backward compatibility with the
[Word Count: 23]

188
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

IEEE 802.11 state machine, as implemented in existing IEEE 802.11 hard-
ware. In essence, the two devices (STA and AP) simply exchange identifiers.
[Word Count: 23]

As was mentioned, the authentication phase enables mutual authentication between
an STA and an authentication server (AS) located in the DS. Authentication is
designed to allow only authorized stations to use the network and to provide the
STA with assurance that it is communicating with a legitimate network.
[Word Count: 48]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 189
[Word Count: 8]

However, for an IBSS, there is no AP. For an IBSS, 802.11i provides a more complex
solution that, in essence, involves pairwise authentication between stations on the
IBSS.
[Word Count: 28]

MPDU EXCHANGE The lower part of Figure 6.6 shows the MPDU exchange
dictated by IEEE 802.11 for the authentication phase. We can think of
authentication phase as consisting of the following three phases.
[Word Count: 33]

EAP EXCHANGE As mentioned, there are a number of possible EAP exchanges
that can be used during the authentication phase. Typically, the message flow
[Word Count: 24]

190
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

between STA and AP employs the EAP over LAN (EAPOL) protocol, and the
message flow between the AP and AS uses the Remote Authentication Dial In User
Service (RADIUS) protocol, although other options are available for both STA-to-
AP and AP-to-AS exchanges. [FRAN07] provides the following summary of the
authentication exchange using EAPOL and RADIUS.
[Word Count: 55]

1. The EAP exchange begins with the AP issuing an EAP-Request/Identity
frame to the STA.
[Word Count: 15]

2. The STA replies with an EAP-Response/Identity frame, which the
AP receives over the uncontrolled port. The packet is then encapsulated
in RADIUS over EAP and passed on to the RADIUS server as a 
RADIUS-Access-Request packet.
[Word Count: 36]

3. The AAA server replies with a RADIUS-Access-Challenge packet, which is
passed on to the STA as an EAP-Request. This request is of the appropriate
authentication type and contains relevant challenge information.
[Word Count: 32]

4. The STA formulates an EAP-Response message and sends it to the AS.
The response is translated by the AP into a Radius-Access-Request with
the response to the challenge as a data field. Steps 3 and 4 may be
repeated multiple times, depending on the EAP method in use. For TLS
tunneling methods, it is common for authentication to require 10 to 20
round trips.
[Word Count: 65]

5. The AAA server grants access with a Radius-Access-Accept packet. The
AP issues an EAP-Success frame. (Some protocols require confirmation of
the EAP success inside the TLS tunnel for authenticity validation.) The
controlled port is authorized, and the user may begin to access the
network.
[Word Count: 45]

Note from Figure 6.6 that the AP controlled port is still blocked to general
user traffic.Although the authentication is successful, the ports remain blocked until
the temporal keys are installed in the STA and AP, which occurs during the 4-Way
Handshake.
[Word Count: 41]

During the key management phase, a variety of cryptographic keys are generated
and distributed to STAs.There are two types of keys: pairwise keys used for commu-
nication between an STA and an AP and group keys used for multicast communica-
tion. Figure 6.8, based on [FRAN07], shows the two key hierarchies, and Table 6.3
defines the individual keys.
[Word Count: 58]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 191
[Word Count: 8]

EAPOL key confirmation key
EAPOL key encryption key
Temporal key
[Word Count: 10]

40 bits, 104 bits (WEP)
128 bits (CCMP)
256 bits (TKIP)
[Word Count: 11]

Possible truncation
PRF (pseudo-random
function) using
HMAC-SHA-1
[Word Count: 7]

User-defined
cryptoid
EAP
authentication
[Word Count: 4]

256 bits
Changes periodically
or if compromised
[Word Count: 7]

Changes based on
policy (dissaciation,
deauthentication)
[Word Count: 6]

192
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

Table 6.3
IEEE 802.11i Keys for Data Confidentiality and Integrity Protocols
[Word Count: 11]

Name
Description / Purpose
Size (bits)
Type
[Word Count: 7]

Authentication,
Accounting, and
Authorization Key
[Word Count: 5]

Used to derive the PMK. Used with
the IEEE 802.1X authentication and
key management approach. Same as
MMSK.
[Word Count: 18]

PSK
Pre-shared Key
Becomes the PMK in pre-shared
key environments.
[Word Count: 10]

PMK
Pairwise Master Key
Used with other inputs to derive the
PTK.
[Word Count: 12]

GMK
Group Master Key
Used with other inputs to derive the
GTK.
[Word Count: 12]

Derived from the PMK. Comprises
the EAPOL-KCK, EAPOL-KEK,
and TK and (for TKIP) the MIC
key.
[Word Count: 16]

TK
Temporal Key
Used with TKIP or CCMP to pro-
vide confidentiality and integrity
protection for unicast user traffic.
[Word Count: 19]

Derived from the GMK. Used to
provide confidentiality and integrity
protection for multicast/broadcast
user traffic.
[Word Count: 15]

Used by TKIP’s Michael MIC to
provide integrity protection of 
messages.
[Word Count: 11]

Used to provide integrity protection
for key material distributed during
the 4-Way Handshake.
[Word Count: 13]

Used to ensure the confidentiality of
the GTK and other key material in
the 4-Way Handshake.
[Word Count: 16]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 193
[Word Count: 8]

The three parts of the PTK are as follows.
[Word Count: 9]

• EAP Over LAN (EAPOL) Key Confirmation Key (EAPOL-KCK): Supports
the integrity and data origin authenticity of STA-to-AP control frames during
operational setup of an RSN. It also performs an access control function:
proof-of-possession of the PMK. An entity that possesses the PMK is autho-
rized to use the link.
[Word Count: 50]

• EAPOL Key Encryption Key (EAPOL-KEK): Protects the confidentiality of
keys and other data during some RSN association procedures.
[Word Count: 19]

• Temporal Key (TK): Provides the actual protection for user traffic.
[Word Count: 11]

PAIRWISE KEY DISTRIBUTION The upper part of Figure 6.9 shows the MPDU
exchange for distributing pairwise keys. This exchange is known as the 4-way
handshake. The STA and SP use this handshake to confirm the existence of the
PMK, verify the selection of the cipher suite, and derive a fresh PTK for the
following data session.The four parts of the exchange are as follows.
[Word Count: 64]

•
: Message includes the MAC address of the AP and a nonce
(Anonce)
[Word Count: 14]

•
: The STA generates its own nonce (Snonce) and uses both nonces
and both MAC addresses, plus the PMK, to generate a PTK. The STA then
sends a message containing its MAC address and Snonce, enabling the AP to
generate the same PTK.This message includes a message integrity code (MIC)2
[Word Count: 51]

using HMAC-MD5 or HMAC-SHA-1-128.The key used with the MIC is KCK.
[Word Count: 11]

•
: The AP is now able to generate the PTK. The AP then sends a
message to the STA, containing the same information as in the first message,
but this time including a MIC.
[Word Count: 35]

•
: This is merely an acknowledgment message, again protected by a
MIC.
[Word Count: 13]

GROUP KEY DISTRIBUTION For group key distribution, the AP generates a GTK and
distributes it to each STA in a multicast group.The two-message exchange with each
STA consists of the following:
[Word Count: 31]

•
: This message includes the GTK, encrypted either with RC4 or
with AES.The key used for encryption is KEK.A MIC value is appended.
AP : STA
[Word Count: 27]

2While MAC is commonly used in cryptography to refer to a Message Authentication Code, the term
MIC is used instead in connection with 802.11i because MAC has another standard meaning, Media
Access Control, in networking.
[Word Count: 35]

194
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

Figure 6.9
IEEE 802.11i Phases of Operation: Four-Way Handshake and Group Key Handshake
[Word Count: 13]

•
: The STA acknowledges receipt of the GTK. This message
includes a MIC value.
[Word Count: 15]

IEEE 802.11i defines two schemes for protecting data transmitted in 802.11
MPDUs: the Temporal Key Integrity Protocol (TKIP), and the Counter Mode-CBC
MAC Protocol (CCMP).
[Word Count: 25]

6.2 / IEEE 802.11i WIRELESS LAN SECURITY 195
[Word Count: 8]

TKIP TKIP is designed to require only software changes to devices that are
implemented with the older wireless LAN security approach called Wired
Equivalent Privacy (WEP).TKIP provides two services:
[Word Count: 29]

• Message integrity: TKIP adds a message integrity code (MIC) to the 802.11
MAC frame after the data field.The MIC is generated by an algorithm, called
Michael, that computes a 64-bit value using as input the source and destination
MAC address values and the Data field, plus key material.
[Word Count: 49]

• Data confidentiality: Data confidentiality is provided by encrypting the
MPDU plus MIC value using RC4.
[Word Count: 16]

CCMP CCMP is intended for newer IEEE 802.11 devices that are equipped with
the hardware to support this scheme. As with TKIP, CCMP provides two services:
[Word Count: 26]

• Message integrity: CCMP uses the cipher-block-chaining message authentica-
tion code (CBC-MAC), described in Chapter 3.
[Word Count: 16]

• Data confidentiality: CCMP uses the CTR block cipher mode of operation
with AES for encryption. CTR is described in Chapter 2.
[Word Count: 22]

The same 128-bit AES key is used for both integrity and confidentiality.The
scheme uses a 48-bit packet number to construct a nonce to prevent replay
attacks.
[Word Count: 26]

196
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

The IEEE 802.11i PRF takes four parameters as input and produces the
desired number of random bits.The function is of the form PRF( ,
,
, Len), where
[Word Count: 28]

= a text string specific to the application (e.g., nonce generation or pair-
wise key expansion)
= some data specific to each case
Len = desired number of pseudorandom bits
[Word Count: 30]

For example, for the pairwise transient key for CCMP:
[Word Count: 9]

PTK = PRF(PMK, "Pairwise key expansion", min(AP–
Addr, STA–Addr)|| max(AP–Addr, STA–Addr) || min
(Anonce, Snonce) || max(Anonce, Snonce), 384)
[Word Count: 19]

= the text string "Pairwise key expansion"
= a sequence of bytes formed by concatenating the two MAC addresses
and the two nonces
Len = 384 bits
[Word Count: 27]

Nonce = PRF(Random Number, "Init Counter", MAC || Time, 256)
[Word Count: 10]

where Time is a measure of the network time known to the nonce generator.
The group temporal key is generated by
[Word Count: 21]

GTK = PRF(GMK, "Group key expansion", MAC || Gnonce, 256)
[Word Count: 10]

Figure 6.10 illustrates the function PRF( ,
,
, Len).The parameter 
serves
as the key input to HMAC. The message input consists of four items concatenated
together: the parameter 
, a byte with value 0, the parameter , and a counter . The
counter is initialized to 0.The HMAC algorithm is run once, producing a 160-bit hash
value. If more bits are required, HMAC is run again with the same inputs, except that
is incremented each time until the necessary number of bits is generated. We can
express the logic as
[Word Count: 91]

PRF(K, A, B, Len)
R ‹-- null string
for i ‹-- 0 to ((Len + 159)/160 – 1) do
R ‹-- R || HMAC–SHA–1(K, A ||0 ||B ||i)
Return Truncate–to–Len(R, Len)
[Word Count: 31]

6.3 / WIRELESS APPLICATION PROTOCOL OVERVIEW 197
[Word Count: 7]

6.3 WIRELESS APPLICATION PROTOCOL OVERVIEW
[Word Count: 5]

• A programming model based on the WWW Programming Model
[Word Count: 10]

• A markup language, the Wireless Markup Language, adhering to XML
[Word Count: 11]

• A specification of a small browser suitable for a mobile, wireless terminal
• A lightweight communications protocol stack
[Word Count: 19]

• A framework for wireless telephony applications (WTAs)
[Word Count: 8]

Figure 6.10
IEEE 802.11i Pseudorandom Function
[Word Count: 6]

198
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

WML was designed to describe content and format for presenting data on devices with
limited bandwidth,limited screen size,and limited user input capability.It is designed to
work with telephone keypads, styluses, and other input devices common to mobile,
wireless communication. WML permits the scaling of displays for use on two-line
screens found in some small devices,as well as the larger screens found on smart phones.
[Word Count: 64]

Response (content)
Encoded response
Content
[Word Count: 5]

6.3 / WIRELESS APPLICATION PROTOCOL OVERVIEW 199
[Word Count: 7]

WML over
HTTP/TCP/IP
WML-capable
Web server
[Word Count: 6]

For an ordinary PC, a Web browser provides content in the form of Web pages
coded with the Hypertext Markup Language (HTML). To translate an HTML-
coded Web page into WML with content and format suitable for wireless devices,
much of the information, especially graphics and animation, must be stripped away.
WML presents mainly text-based information that attempts to capture the essence
of the Web page and that is organized for easy access for users of mobile devices.
Important features of WML include:
[Word Count: 83]

• Text and image support: Formatting and layout commands are provided for
text and limited image capability.
[Word Count: 17]

• Deck/card organizational metaphor: WML documents are subdivided into
small, well-defined units of user interaction called cards. Users navigate by
moving back and forth between cards. A card specifies one or more units of
interaction (a menu, a screen of text, or a text-entry field). A WML deck is
similar to an HTML page in that it is identified by a Web address (URL) and
is the unit of content transmission.
[Word Count: 71]

200
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

• Support for navigation among cards and decks: WML includes provisions for
event handling, which is used for navigation or executing scripts.
[Word Count: 22]

In an HTML-based Web browser, a user navigates by clicking on links. At a
WML-capable mobile device, a user interacts with cards, moving forward and back
through the deck.
[Word Count: 29]

Hypermedia
transfer
Streaming
Message
transfer
Transfer
Services
[Word Count: 7]

6.3 / WIRELESS APPLICATION PROTOCOL OVERVIEW 201
[Word Count: 7]

SECURITY SERVICES The WAP specification includes mechanisms to provide
confidentiality, integrity, authentication, and nonrepudiation. The security services
include the following.
[Word Count: 20]

• Cryptographic libraries: This application framework level library provides ser-
vices for signing of data for integrity and non-repudiation purposes.
[Word Count: 20]

• Authentication: WAP provides various mechanisms for client and server
authentication. At the Session Services layer, HTTP Client Authentication
(RFC2617) may be used to authenticate clients to proxies and application
servers. At the Transport Services layer, WTLS and TLS handshakes may be
used to authenticate clients and servers.
[Word Count: 48]

• Identity: The WAP Identity Module (WIM) provides the functions
that store and process information needed for user identification and
authentication.
[Word Count: 21]

• PKI: The set of security services that enable the use and management of
public-key cryptography and certificates.
[Word Count: 18]

• Secure transport: The Transport Services layer protocols are defined for
secure transport over datagrams and connections. WTLS is defined for secure
transport over datagrams and TLS is defined for secure transport over
connections (i.e.,TCP).
[Word Count: 35]

• Secure bearer: Some bearer networks provide bearer-level security. For
example, IP networks (especially in the context of IPv6) provide bearer-level
security with IPsec.
[Word Count: 24]

SERVICE DISCOVERY There is a collection of service discovery services that enable
the WAP client and the Web server to determine capabilities and services. Examples
of service discovery services include the following.
[Word Count: 32]

• EFI: The External Functionality Interface (EFI) allows applications to
discover what external functions/services are available on the device.
[Word Count: 19]

• Provisioning: This service allows a device to be provisioned with the parame-
ters necessary to access network services.
[Word Count: 19]

• Navigation discovery: This service allows a device to discover new network
services (e.g., secure pull proxies) during the course of navigation such as
when downloading resources from a hypermedia server. The WAP Transport-
Level End-to-End Security specification, described in Section 6.5, defines one
navigation discovery protocol.
[Word Count: 47]

• Service lookup: This service provides for the discovery of a service’s parame-
ters through a directory lookup by name. One example of this is the Domain
Name System (DNS).
[Word Count: 30]

The WAE specifies an application framework for wireless devices such as mobile
telephones, pagers, and PDAs. In essence, the WAE consists of tools and formats
[Word Count: 25]

202
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

that are intended to ease the task of developing applications and devices supported
by WAP.The major elements of the WAE model (Figure 6.13) are
[Word Count: 24]

• WAE user agents: Software that executes in the user’s wireless device and that
provides specific functionality (e.g., display content) to the end user.
[Word Count: 24]

• Wireless telephony applications (WTA): A collection of telephony-specific
extensions for call and feature control mechanisms that provide authors
advanced mobile network services. Using WTA, applications developers can
use the microbrowser to originate telephone calls and to respond to events
from the telephone network.
[Word Count: 44]

• Standard content encoding: Defined to allow a WAE user agent (e.g., a
browser) to conveniently navigate Web content. On the server side are content
generators. These are applications (or services) on origin servers (e.g., CGI
scripts) that produce standard content formats in response to requests from
user agents in the mobile terminal. WAE does not specify any standard
content generators but expects that there will be a variety available running
on typical HTTP origin servers commonly used in WWW today.
[Word Count: 81]

• Push: A service to receive push transmissions from the server, i.e., transmis-
sions that are not in response to a Web client request but are sent on the
initiative of the server.This service is supported by the Push-OTA (Push Over
The Air) session service.
[Word Count: 45]

• Multimedia messaging: Provides for the transfer and processing of multimedia
messages, such as e-mail and instant messages, to WAP devices.
[Word Count: 21]

6.3 / WIRELESS APPLICATION PROTOCOL OVERVIEW 203
[Word Count: 7]

In the remainder of this subsection, we provide an overview of the WAP
protocols, with the exception of WTLS, which is treated in Section 6.4.
[Word Count: 25]

WIRELESS TRANSACTION PROTOCOL WTP manages transactions by conveying
requests and responses between a user agent (such as a WAP browser) and an
application server for such activities as browsing and e-commerce transactions.
WTP provides a reliable transport service but dispenses with much of the overhead
of TCP, resulting in a lightweight protocol that is suitable for implementation in
“thin” clients (e.g., mobile nodes) and suitable for use over low-bandwidth wireless
links.WTP includes the following features.
[Word Count: 75]

• Optional user-to-user reliability: WTP user triggers the confirmation of each
received message.
[Word Count: 13]

• Optional out-of-band data on acknowledgments.
[Word Count: 6]

• PDU concatenation and delayed acknowledgment to reduce the number of
messages sent.
[Word Count: 13]

WTP is transaction oriented rather than connection oriented.With WTP,there is
no explicit connection setup or teardown but rather a reliable connectionless service.
WTP provides three transaction classes that may be invoked by WSP or
another higher layer protocol:
[Word Count: 38]

• Class 0: Unreliable invoke message with no result message
• Class 1: Reliable invoke message with no result message
[Word Count: 20]

• Class 2: Unreliable invoke message with one reliable result message
[Word Count: 11]

Class 0 provides an unreliable datagram service, which can be used for an unre-
liable push operation. Data from a WTP user are encapsulated by WTP (the initiator,
or client) in an invoke PDU and transmitted to the target WTP (the responder, or
server) with no acknowledgment.The responder WTP delivers the data to the target
WTP user.
[Word Count: 57]

204
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

WIRELESS DATAGRAM PROTOCOL WDP is used to adapt a higher-layer WAP
protocol to the communication mechanism (called the bearer) used between the
mobile node and the WAP gateway. Adaptation may include partitioning data into
segments of appropriate size for the bearer and interfacing with the bearer network.
WDP hides details of the various bearer networks from the other layers of WAP. In
some instances,WAP is implemented on top of IP.
[Word Count: 70]

• Data integrity: Uses message authentication to ensure that data sent between
the client and the gateway are not modified.
[Word Count: 20]

• Privacy: Uses encryption to ensure that the data cannot be read by a third party.
[Word Count: 16]

• Authentication: Uses digital certificates to authenticate the two parties.
[Word Count: 10]

• Denial-of-service protection: Detects and rejects messages that are replayed
or not successfully verified.
[Word Count: 14]

3See Chapter 5 for a discussion of SSL/TLS. However, the discussion in this section is self-contained; you
do not need to read a description of TLS first.
[Word Count: 27]

6.4 / WIRELESS TRANSPORT LAYER SECURITY 205
[Word Count: 7]

Two important WTLS concepts are the secure session and the secure connection,
which are defined in the specification as:
[Word Count: 19]

• Secure connection: A connection is a transport (in the OSI layering model def-
inition) that provides a suitable type of service. For SSL, such connections are
peer-to-peer relationships. The connections are transient. Every connection is
associated with one session.
[Word Count: 40]

• Secure session: An SSL session is an association between a client and a server.
Sessions are created by the Handshake Protocol. Sessions define a set of cryp-
tographic security parameters, which can be shared among multiple connec-
tions. Sessions are used to avoid the expensive negotiation of new security
parameters for each connection.
[Word Count: 54]

• Session identifier: An arbitrary byte sequence chosen by the server to identify
an active or resumable session state.
[Word Count: 19]

• Protocol version: WTLS protocol version number.
[Word Count: 7]

• Peer certificate: Certificate of the peer. This element of the state may be null.
[Word Count: 15]

• Compression method: The algorithm used to compress data prior to
encryption.
[Word Count: 12]

• Cipher spec: Specifies the bulk data encryption algorithm (such as null,
RC5, DES, etc.) and a hash algorithm (such as MD5 or SHA-1) used for
MAC calculation. It also defines cryptographic attributes such as the
hash_size.
[Word Count: 37]

• Master secret: A 20-byte secret shared between the client and server.
[Word Count: 12]

• Sequence number: Which sequence numbering scheme (off, implicit, or
explicit) is used in this secure connection.
[Word Count: 17]

• Key refresh: Defines how often some connection state values (encryption key,
MAC secret, and IV) calculations are performed.
• Is resumable: A flag indicating whether the session can be used to initiate new
connections.
[Word Count: 35]

The connection state is the operating environment of the record protocol. It
includes all parameters that are needed for the cryptographic operations (encryp-
tion/decryption and MAC calculation/verification). Each secure connection has a
connection state, which is defined by the following parameters.
[Word Count: 41]

206
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

• Connection end: Whether this entity is considered a client or a server in this
secure session.
[Word Count: 17]

• Bulk cipher algorithm: Includes the key size of this algorithm, how much of
that key is secret, whether it is a block or stream cipher, and the block size of
the cipher (if appropriate).
[Word Count: 35]

• MAC algorithm: Includes the size of the key used for MAC calculation and
the size of the hash which is returned by the MAC algorithm.
[Word Count: 26]

• Compression algorithm: Includes all information the algorithm requires to do
compression.
[Word Count: 12]

• Master secret: A 20-byte secret shared between the client and server.
[Word Count: 12]

• Client random: A 16-byte value provided by the client.
[Word Count: 10]

• Server random: A 16-byte value provided by the server.
[Word Count: 10]

• Sequence number mode: Which scheme is used to communicate sequence
numbers in this secure connection.
[Word Count: 16]

• Key refresh: Defines how often some connection state parameters (encryption
key, MAC secret, and IV) are updated. New keys are calculated at every
messages, that is, when the sequence number is 0,
,
, etc.
[Word Count: 36]

WTLS is not a single protocol but rather two layers of protocols, as illustrated in
Figure 6.15. The WTLS Record Protocol provides basic security services to various
higher-layer protocols. In particular, the Hypertext Transfer Protocol (HTTP),
which provides the transfer service for Web client/server interaction, can operate on
top of WTLS. Three higher-layer protocols are defined as part of WTLS: the
Handshake Protocol, The Change Cipher Spec Protocol, and the Alert Protocol.
These WTLS-specific protocols are used in the management of WTLS exchanges
and are examined subsequently in this section.
[Word Count: 90]

WTLS RECORD PROTOCOL The WTLS Record Protocol takes user data from the
next higher layer (WTP, WTLS Handshake Protocol, WTLS Alert Protocol, and
WTLS Change Cipher Spec Protocol) and encapsulates these data in a PDU. The
following steps occur (Figure 6.16).
[Word Count: 41]

6.4 / WIRELESS TRANSPORT LAYER SECURITY 207
[Word Count: 7]

Step 1. The payload is compressed using a lossless compression algorithm.
[Word Count: 11]

Step 2. A message authentication code (MAC) is computed over the compressed
data, using HMAC. One of several hash algorithms can be used with HMAC,
including MD-5 and SHA-1. The length of the hash code is 0, 5, or 10 bytes.
The MAC is added after the compressed data.
[Word Count: 49]

Step 3. The compressed message plus the MAC code are encrypted using a symmetric
encryption algorithm. The allowable encryption algorithms are DES, triple
DES, RC5, and IDEA.
[Word Count: 27]

Step 4. The Record Protocol prepends a header to the encrypted payload.
[Word Count: 12]

The Record Protocol header consists of the following fields (Figure 6.17).
[Word Count: 11]

• Record type (8 bits): Consisting of the subfields:
–Record length field indicator (1 bit): Indicates whether a record length field
is present.
–Sequence number field indicator (1 bit): Indicates whether a sequence 
number field is present.
[Word Count: 37]

–Cipher spec indicator (1 bit):If this bit is zero,it indicates that no compression,
MAC protection, or encryption is used.
[Word Count: 19]

–Content type (4 bits): The higher-layer protocol above the WTLS Record 
Protocol.
[Word Count: 12]

• Sequence number (16 bits): A sequence number associated with this record.
This provides reliability over an unreliable transport service.
[Word Count: 20]

• Record length (16 bits):The length in bytes of the plaintext data (or compressed
data if compression is used).
[Word Count: 19]

CHANGE CIPHER SPEC PROTOCOL Associated with the current transaction is a
cipher spec, which specifies the encryption algorithm, the hash algorithm used as
[Word Count: 23]

Figure 6.16
WTLS Record Protocol Operation
[Word Count: 6]

208
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

ALERT PROTOCOL The Alert Protocol is used to convey WTLS-related alerts to the
peer entity. As with other applications that use WTLS, alert messages are
compressed and encrypted, as specified by the current state.
[Word Count: 34]

r = reserved
C = cipher spec indicator
S = sequence number field indicator
L = record length field indicator
MAC = message authentication code
[Word Count: 25]

6.4 / WIRELESS TRANSPORT LAYER SECURITY 209
[Word Count: 7]

• session_close_notify: notifies the recipient that the sender will
not send any more messages using this connection state or the secure
session.
[Word Count: 22]

• unexpected_message: An inappropriate message was received.
[Word Count: 7]

• bad_record_mac: An incorrect MAC was received.
[Word Count: 7]

• decompression_failure:
The decompression function received
improper input (e.g., unable to decompress or decompress to greater than
maximum allowable length).
[Word Count: 20]

• handshake_failure: Sender was unable to negotiate an acceptable set of
security parameters given the options available.
[Word Count: 17]

• illegal_parameter: A field in a handshake message was out of range or
inconsistent with other fields.
[Word Count: 17]

• connection_close_notify: Notifies the recipient that the sender will
not send any more messages using this connection state.
[Word Count: 18]

• bad_certificate: A received certificate was corrupt (e.g., contained a sig-
nature that did not verify).
[Word Count: 16]

• unsupported_certificate: The type of the received certificate is not
supported.
[Word Count: 11]

• certificate_revoked: A certificate has been revoked by its signer.
[Word Count: 10]

• certificate_expired: A certificate has expired.
[Word Count: 6]

• certificate_unknown: Some other unspecified issue arose in processing
the certificate, rendering it unacceptable.
[Word Count: 14]

HANDSHAKE PROTOCOL The most complex part of WTLS is the Handshake
Protocol.This protocol allows the server and client to authenticate each other and
to negotiate an encryption and MAC algorithms and cryptographic keys to be
[Word Count: 35]

210
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

used to protect data sent in a WTLS record. The Handshake Protocol is used
before any application data are transmitted. An important function of the
Handshake Protocol is the generation of a pre-master secret, which in turn is used
to generate a master secret. The master secret is then used to generate various
cryptographic keys.
The Handshake Protocol consists of a series of messages exchanged by client
and server. Figure 6.18 shows the initial exchange needed to establish a logical
[Word Count: 80]

Establish security capabilities, including
protocol version, session ID, cipher suite,
compression method, and initial random
numbers.
[Word Count: 16]

Server may send certificate, key exchange,
and request certificate. Server signals end
of hello message phase.
[Word Count: 16]

Client sends certificate if requested. Client
sends key exchange. Client may send
certificate verification.
[Word Count: 14]

Change cipher suite and finish
handshake protocol.
[Word Count: 7]

Note: Shaded transfers are
optional or situation-dependent
messages that are not always sent.
Figure 6.18
WTLS Handshake Protocol Action
[Word Count: 19]

6.4 / WIRELESS TRANSPORT LAYER SECURITY 211
[Word Count: 7]

AUTHENTICATION Authentication in the WTLS is carried out with certificates.
Authentication can occur either between the client and the server or when the client
only authenticates the server. The latter procedure can happen only if the server
allows it to occur.The server can require the client to authenticate itself to the server.
[Word Count: 52]

212
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

However, the WTLS specification defines that authentication is an optional
procedure. Currently, X.509v3, X9.68, and WTLS certificates are supported. The
WTLS certificate is optimized for size, and consists of the following elements
(compare with Figure 4.4).
[Word Count: 36]

• Certificate_version: Version of the certificate.
[Word Count: 6]

• Signature_algorithm: Algorithm used to sign the certificate.
[Word Count: 8]

• Issuer: Defines the party who has signed the certificate, usually some CA.
[Word Count: 13]

• Valid_not_before: The beginning of validity period of the certificate.
[Word Count: 10]

• Valid_not_after: The point of time after the certificate is no longer valid.
[Word Count: 13]

• Subject: Owner of the key, associated with the public key being certified.
[Word Count: 13]

• Public_key_type: Type (algorithm) of the public key.
[Word Count: 8]

• Parameter_specifier: Specifies parameter relevant for the public key.
[Word Count: 9]

• Public key: The public key being certified.
[Word Count: 8]

• Signature: Signed with the CA’s private key.
[Word Count: 8]

• DH_anon: The conventional Diffie-Hellman computation is performed
anonymously (without authentication). The negotiated key (Z) is used as the
pre_master_secret.
[Word Count: 20]

• ECDH_anon: The elliptic curve Diffie-Hellman computation is performed.
The negotiated key (Z) is used as the pre_master_secret.
[Word Count: 18]

• RSA_anon: This is an RSA key exchange without authentication. The server
sends its RSA public key. In this method, a 20-byte secret value is generated
by the client, encrypted under the server’s public key, and sent to the
server. The server uses its private key to decrypt the secret value. The
pre_master_secret is the secret value appended with the server’s
public key.
[Word Count: 63]

The server key exchange message is not sent for the following key exchange
methods.
[Word Count: 14]

• ECDH_ECDSA: Elliptic curve Diffie-Hellman key exchange with ECDSA-
based certificates. The server sends a certificate that contains its ECDH
public key. The server certificate is signed with ECDSA by a third party
[Word Count: 33]

6.4 / WIRELESS TRANSPORT LAYER SECURITY 213
[Word Count: 7]

trusted by the client. Depending whether the client is to be authenticated or
not, it sends its certificate containing its ECDH public key signed with
ECDSA by a third party trusted by the server or just its (temporary) ECDH
public key. Each party calculates the pre-master secret based on one’s own
private key and counterpart’s public key received as such or contained in a
certificate.
[Word Count: 65]

PSEUDORANDOM FUNCTION(PRF) The PRF is used for a number of purposes in
WTLS. The PRF takes as input a secret value, a seed, and an identifying label and
produces an output of arbitrary length. In the TLS standard, two hash algorithms
were used in order to make the PRF as secure as possible. In order to save
resources, WTLS can be implemented using only one hash algorithm. Which hash
algorithm is actually used is agreed on during the handshake as a part of the
cipher spec.
The PRF is based on the data expansion function
[Word Count: 95]

P_hash(secret, seed) =
HMAC_hash(secret, A(1)|| seed)||
HMAC_hash(secret, A(2)|| seed)||
HMAC_hash(secret, A(3)|| seed)|| ...
[Word Count: 13]

where || indicates concatenation and A() is defined as
[Word Count: 9]

A(0) = seed
A(i) = HMAC_hash(secret, A(i – 1))
[Word Count: 9]

PRF(secret, label, seed) = P_hash(secret, label || seed)
[Word Count: 8]

MASTER KEY GENERATION The shared master secret is a one-time 20-byte value
(160 bits) generated for this session by means of secure key exchange.The creation is in
two stages.First,a pre_master_secret is exchanged.Second,the master_secret
is calculated by both parties, using the function
[Word Count: 41]

214
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

WTLS protection domain
TLS protection domain
[Word Count: 6]

Figure 6.19
Security Zones Using Standard Security Services
[Word Count: 8]

master_secret = PRF(pre_master_secret, "master secret", 
ClientHello.random || ServerHello.random)
[Word Count: 8]

where ClientHello.random and ServerHello.random are the random
numbers exchanged during the first phase of the handshake protocol.
The MAC and encryption keys are then derived from the master key. The
MAC calculation uses the HMAC algorithm (Chapter 3) and encompasses the
fields indicated in the expression
[Word Count: 46]

HMAC_hash (MAC_secret, seq_number || WTLSCompressed.
record_type|| WTLSCompressed.length || WTLS
Compressed.fragment)
[Word Count: 10]

where WTLSCompressed.fragment refers to the (optionally) compressed plain-
text data field.
Either MD5 or SHA-1 may be used for the HMAC hash function.
Encryption is applied to all of the WTLS record, except the header. The
following encryption algorithms are permitted.
[Word Count: 41]

The basic WAP transmission model involving a WAP client, a WAP gateway, and
a Web server results in a security gap, as illustrated in Figure 6.19.This figure corre-
sponds to the protocol architecture shown in Figure 6.14. The mobile device estab-
lishes a secure WTLS session with the WAP gateway. The WAP gateway, in turn,
[Word Count: 55]

Figure 6.20
WAP2 End-to-End Security Approaches
[Word Count: 6]

216
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

Figure 6.21
WAP2 End-to-End Security Scheme
[Word Count: 6]

6.6 / RECOMMENDED READING AND WEB SITES 217
[Word Count: 8]

CHEN05
Chen, J.; Jiang, M.; and Liu, Y. “Wireless LAN Security and IEEE 802.11i.”
IEEE Wireless Communications, February 2005.
FRAN07
Frankel, S.; Eydt, B.; Owens, L.; and Scarfone, K. Establishing Wireless Robust
Security Networks: A Guide to IEEE 802.11i. NIST Special Publication SP 800-97,
February 2007.
ROSH04
Roshan, P., and Leary, J. 802.11 Wireless LAN Fundamentals. Indianapolis:
Cisco Press, 2004.
STAL07
Stallings, W. Data and Computer Communications, Eighth Edition. Upper
Saddle River, NJ: Prentice Hall, 2007.
[Word Count: 76]

Establish Secure WTLS session (if not present)
[Word Count: 7]

Error 300: Body= XML Navigation Document
[Word Count: 6]

Error 300: Body= XML Navigation Document
[Word Count: 6]

GET:
http://bank.com/...
GET:
http://bank.com/...
[Word Count: 4]

Trusted
Master/Default
Pull Proxy
OS
Secure Subordinate
Pull Proxy
OS (Secure
Domain)
[Word Count: 12]

Figure 6.22
WAP Transport Layer End-to-End Security Example
[Word Count: 8]

The IEEE 802.11 and WiFi specifications are covered in more detail in [STAL07]. A good
book-length treatment is [ROSH04]. [FRAN07] is an excellent, detailed treatment of IEEE
802.11i. [CHEN05] provides an overview of IEEE 802.11i.
[Word Count: 35]

218
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

6.1
What is the basic building block of an 802.11 WLAN?
6.2
Define an extended service set.
6.3
List and briefly define IEEE 802.11 services.
6.4
Is a distribution system a wireless network?
6.5
How is the concept of an association related to that of mobility?
[Word Count: 46]

• The IEEE 802.11 Wireless LAN Working Group: Contains working group documents
plus discussion archives.
[Word Count: 15]

• Wi-Fi Alliance: An industry group promoting the interoperability of 802.11 products
with each other and with Ethernet.
[Word Count: 18]

• Wireless LAN Association: Gives an introduction to the technology, including a discus-
sion of implementation considerations and case studies from users.Links to related sites.
[Word Count: 25]

• Extensible Authentication Protocol (EAP) Working Group: IETF working group
responsible for EAP and related issues. Site includes RFCs and Internet drafts.
[Word Count: 22]

• Open Mobile Alliance: Consolidation of the WAP Forum and the Open Mobile
Architecture Initiative. Provides WAP technical specifications and industry links.
[Word Count: 22]

6.7
KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

Wireless Application Protocol
(WAP)
Wireless Datagram Protocol
(WDP)
wireless LAN (WLAN)
Wireless Markup Language
(WML)
Wireless Session Protocol
(WSP)
Wireless Transaction Protocol
(WTP)
Wireless Transport Layer
Security (WTLS)
Wi-Fi
Wi-Fi Protected Access
(WPA)
WTLS Record Protocol
[Word Count: 36]

media access control (MAC)
MAC protocol data unit
(MPDU)
MAC service data unit
(MSDU)
message integrity code (MIC)
Michael
pairwise keys
pseudorandom function
Robust Security Network
(RSN)
Temporal Key Integrity
Protocol (TKIP)
Wired Equivalent Privacy
(WEP)
Wireless Application
Environment (WAE)
[Word Count: 40]

4-way handshake
access point (AP)
Alert Protocol
basic service set (BSS)
Change Cipher Spec 
Protocol
Counter Mode-CBC MAC
Protocol (CCMP)
distribution system (DS)
extended service set (ESS)
group keys
Handshake Protocol
IEEE 802.1X
IEEE 802.11
IEEE 802.11i
independent BSS (IBSS)
logical link control (LLC)
[Word Count: 44]

6.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 219
[Word Count: 9]

Request
Station sends a request
for authentication.
[Word Count: 7]

AP sends challenge message
containing 128-bit random
number.
[Word Count: 8]

AP decrypts challenge response.
If match, send authentication
success message.
[Word Count: 10]

Station responds
with encrypted version
of challenge number.
[Word Count: 8]

220
CHAPTER 6 / WIRELESS NETWORK SECURITY
[Word Count: 7]

a.
What are the benefits of this authentication scheme?
b. This authentication scheme is incomplete. What is missing and why is this impor-
tant? Hint: The addition of one or two messages would fix the problem.
c.
What is a cryptographic weakness of this scheme?
6.3
For WEP, data integrity and data confidentiality are achieved using the RC4 stream
encryption algorithm. The transmitter of an MPDU performs the following steps,
referred to as encapsulation:
[Word Count: 74]

Notation
Operational Description
Cryptographic Keys and Key Rings
Public-Key Management
[Word Count: 10]

RFC 5322
Multipurpose Internet Mail Extensions
S/MIME Functionality
S/MIME Messages
S/MIME Certificate Processing
Enhanced Security Services
[Word Count: 16]

Internet Mail Architecture
E-mail Threats
DKIM Strategy
DKIM Functional Flow
[Word Count: 10]

7.5
Key Terms, Review Questions, and Problems
[Word Count: 7]

222
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Despite the refusal of VADM Poindexter and LtCol North to appear, the Board’s
access to other sources of information filled much of this gap. The FBI provided
documents taken from the files of the National Security Advisor and relevant
NSC staff members, including messages from the PROF system between VADM
Poindexter and LtCol North. The PROF messages were conversations by com-
puter, written at the time events occurred and presumed by the writers to be pro-
tected from disclosure. In this sense, they provide a first-hand, contemporaneous
account of events.
[Word Count: 90]

—The Tower Commission Report to President Reagan on the 
Iran-Contra Affair, 1987
[Word Count: 12]

◆
PGP is an open-source, freely available software package for e-mail secu-
rity. It provides authentication through the use of digital signature, confi-
dentiality through the use of symmetric block encryption, compression
using the ZIP algorithm, and e-mail compatibility using the radix-64
encoding scheme.
[Word Count: 44]

◆
PGP incorporates tools for developing a public-key trust model and
public-key certificate management.
[Word Count: 14]

◆
S/MIME is an Internet standard approach to e-mail security that incorporates
the same functionality as PGP.
[Word Count: 17]

◆
DKIM is a specification used by e-mail providers for cryptographically
signing e-mail messages on behalf of the source domain.
[Word Count: 20]

In virtually all distributed environments, electronic mail is the most heavily
used network-based application. Users expect to be able to, and do, send 
e-mail to others who are connected directly or indirectly to the Internet,
regardless of host operating system or communications suite. With the explo-
sively growing reliance on e-mail, there grows a demand for authentication
and confidentiality services. Two schemes stand out as approaches that enjoy
widespread use: Pretty Good Privacy (PGP) and S/MIME. Both are examined
in this chapter. The chapter closes with a discussion of DomainKeys Identified
Mail.
[Word Count: 92]

PGP is a remarkable phenomenon. Largely the effort of a single person, Phil
Zimmermann, PGP provides a confidentiality and authentication service that can
be used for electronic mail and file storage applications. In essence, Zimmermann
has done the following:
[Word Count: 39]

1. Selected the best available cryptographic algorithms as building blocks.
[Word Count: 10]

2. Integrated these algorithms into a general-purpose application that is inde-
pendent of operating system and processor and that is based on a small set of
easy-to-use commands.
[Word Count: 28]

3. Made the package and its documentation, including the source code, freely
available via the Internet, bulletin boards, and commercial networks such as
AOL (America On Line).
[Word Count: 27]

4. Entered into an agreement with a company (Viacrypt, now Network
Associates) to provide a fully compatible, low-cost commercial version of PGP.
[Word Count: 22]

PGP has grown explosively and is now widely used. A number of reasons can
be cited for this growth.
[Word Count: 19]

1. It is available free worldwide in versions that run on a variety of platforms,
including Windows, UNIX, Macintosh, and many more. In addition, the commer-
cial version satisfies users who want a product that comes with vendor support.
[Word Count: 39]

2. It is based on algorithms that have survived extensive public review and are con-
sidered extremely secure. Specifically, the package includes RSA, DSS, and
Diffie-Hellman for public-key encryption; CAST-128, IDEA, and 3DES for sym-
metric encryption; and SHA-1 for hash coding.
[Word Count: 42]

3. It has a wide range of applicability, from corporations that wish to select and
enforce a standardized scheme for encrypting files and messages to individuals
who wish to communicate securely with others worldwide over the Internet and
other networks.
[Word Count: 40]

4. It was not developed by, nor is it controlled by, any governmental or standards
organization. For those with an instinctive distrust of “the establishment,” this
makes PGP attractive.
[Word Count: 29]

5. PGP is now on an Internet standards track (RFC 3156; MIME Security with
OpenPGP). Nevertheless, PGP still has an aura of an antiestablishment
endeavor.
[Word Count: 25]

We begin with an overall look at the operation of PGP. Next, we examine 
how cryptographic keys are created and stored. Then, we address the vital issue of
public-key management.
[Word Count: 30]

Most of the notation used in this chapter has been used before,but a few terms are new.
It is perhaps best to summarize those at the beginning.The following symbols are used.
[Word Count: 31]

session key used in symmetric encryption scheme
private key of user A, used in public-key encryption scheme
public key of user A, used in public-key encryption scheme
public-key encryption
public-key decryption
symmetric encryption
symmetric decryption
DC =
EC  =
DP  =
EP   =
PUa =
PRa =
Ks    =
[Word Count: 49]

224
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

hash function
concatenation
compression using ZIP algorithm
conversion to radix 64 ASCII format1
[Word Count: 13]

The PGP documentation often uses the term secret key to refer to a key paired
with a public key in a public-key encryption scheme. As was mentioned earlier, this
practice risks confusion with a secret key used for symmetric encryption. Hence, we
use the term private key instead.
[Word Count: 48]

The actual operation of PGP, as opposed to the management of keys, consists of four
services: authentication, confidentiality, compression, and e-mail compatibility
(Table 7.1).We examine each of these in turn.
[Word Count: 30]

AUTHENTICATION Figure 7.1a illustrates the digital signature service provided by
PGP. This is the digital signature scheme discussed in Chapter 3 and illustrated in
Figure 4.5.The sequence is as follows.
[Word Count: 30]

2. SHA-1 is used to generate a 160-bit hash code of the message.
[Word Count: 13]

3. The hash code is encrypted with RSA using the sender’s private key, and the
result is prepended to the message.
[Word Count: 21]

4. The receiver uses RSA with the sender’s public key to decrypt and recover the
hash code.
[Word Count: 17]

5. The receiver generates a new hash code for the message and compares it with
the decrypted hash code.If the two match,the message is accepted as authentic.
[Word Count: 27]

A hash code of a message is created using 
SHA-1.This message digest is encrypted using
DSS or RSA with the sender’s private key and
included with the message.
[Word Count: 28]

CAST or IDEA or Three-key
Triple DES with Diffie-Hellman
or RSA
[Word Count: 11]

A message is encrypted using CAST-128 or
IDEA or 3DES with a one-time session key
generated by the sender.The session key is
encrypted using Diffie-Hellman or RSA with
the recipient’s public key and included with
the message.
[Word Count: 37]

Compression
ZIP
A message may be compressed for storage or
transmission using ZIP.
[Word Count: 13]

E-mail 
compatibility
Radix-64 conversion
[Word Count: 4]

To provide transparency for e-mail applica-
tions, an encrypted message may be converted
to an ASCII string using radix-64 conversion.
[Word Count: 20]

1 The American Standard Code for Information Interchange (ASCII) is described in Appendix I.
[Word Count: 14]

226
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

1. The sender generates a message and a random 128-bit number to be used as
a session key for this message only.
[Word Count: 22]

2. The message is encrypted using CAST-128 (or IDEA or 3DES) with the ses-
sion key.
[Word Count: 16]

3. The session key is encrypted with RSA using the recipient’s public key and is
prepended to the message.
4. The receiver uses RSA with its private key to decrypt and recover the session
key.
5. The session key is used to decrypt the message.
[Word Count: 45]

As an alternative to the use of RSA for key encryption, PGP provides an
option referred to as Diffie-Hellman. As was explained in Chapter 3, Diffie-
Hellman is a key exchange algorithm. In fact, PGP uses a variant of Diffie-Hellman
that does provide encryption/decryption, known as ElGamal.
Several observations may be made. First, to reduce encryption time, the combi-
nation of symmetric and public-key encryption is used in preference to simply using
[Word Count: 72]

COMPRESSION As a default, PGP compresses the message after applying the
signature but before encryption.This has the benefit of saving space both for e-mail
transmission and for file storage.
The placement of the compression algorithm, indicated by Z for compression
and Z–1 for decompression in Figure 7.1, is critical.
[Word Count: 49]

1. The signature is generated before compression for two reasons:
[Word Count: 10]

a. It is preferable to sign an uncompressed message so that one can store only
the uncompressed message together with the signature for future verifica-
tion. If one signed a compressed document, then it would be necessary either
to store a compressed version of the message for later verification or to
recompress the message when verification is required.
[Word Count: 58]

b. Even if one were willing to generate dynamically a recompressed message
for verification, PGP’s compression algorithm presents a difficulty.The algo-
rithm is not deterministic; various implementations of the algorithm achieve
different tradeoffs in running speed versus compression ratio and, as a result,
produce different compressed forms. However, these different compression
algorithms are interoperable because any version of the algorithm can
correctly decompress the output of any other version. Applying the hash
[Word Count: 72]

228
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

function and signature after compression would constrain all PGP imple-
mentations to the same version of the compression algorithm.
[Word Count: 19]

2. Message encryption is applied after compression to strengthen cryptographic
security. Because the compressed message has less redundancy than the
original plaintext, cryptanalysis is more difficult.
[Word Count: 26]

The compression algorithm used is ZIP, which is described in Appendix G.
[Word Count: 12]

(a) Generic transmission diagram (from A)
(b) Generic reception diagram (to B)
[Word Count: 12]

Encrypt key, X
X    E(PUb, Ks) || E(Ks, X)
[Word Count: 9]

Ks     D(PRb, E(PUb, Ks))
X      D(Ks, E(Ks, X))
[Word Count: 8]

Figure 7.2
Transmission and Reception of PGP Messages
[Word Count: 8]

230
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

PGP makes use of four types of keys: one-time session symmetric keys, public keys,
private keys, and passphrase-based symmetric keys (explained subsequently).Three
separate requirements can be identified with respect to these keys.
[Word Count: 32]

1. A means of generating unpredictable session keys is needed.
[Word Count: 10]

3. Each PGP entity must maintain a file of its own public/private key pairs as
well as a file of public keys of correspondents.
[Word Count: 24]

We examine each of these requirements in turn.
[Word Count: 8]

KEY IDENTIFIERS As we have discussed, an encrypted message is accompanied by
an encrypted form of the session key that was used for message encryption. The
[Word Count: 26]

• Timestamp: The time at which the signature was made.
• Message digest: The 160-bit SHA-1 digest encrypted with the sender’s pri-
vate signature key. The digest is calculated over the signature timestamp
concatenated with the data portion of the message component. The inclu-
sion of the signature timestamp in the digest insures against replay types of
attacks. The exclusion of the filename and timestamp portions of the
message component ensures that detached signatures are exactly the same
as attached signatures prefixed to the message. Detached signatures are
[Word Count: 88]

232
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Notation:
E(PUb, •)  encryption with user b's public key
E(PRa, •)  encryption with user a's private key
E(Ks, •) 
 encryption with session key
ZIP 
 Zip compression function
R64 
 Radix-64 conversion function
[Word Count: 36]

Figure 7.3
General Format PGP Message (from A to B)
[Word Count: 10]

calculated on a separate file that has none of the message component
header fields.
[Word Count: 14]

• Leading two octets of message digest: Enables the recipient to determine if
the correct public key was used to decrypt the message digest for authentica-
tion by comparing this plaintext copy of the first two octets with the first two
octets of the decrypted digest. These octets also serve as a 16-bit frame check
sequence for the message.
[Word Count: 59]

• Key ID of sender’s public key: Identifies the public key that should be used to
decrypt the message digest and, hence, identifies the private key that was used
to encrypt the message digest.
[Word Count: 34]

The message component and optional signature component may be com-
pressed using ZIP and may be encrypted using a session key.
[Word Count: 21]

The session key component includes the session key and the identifier of the
recipient’s public key that was used by the sender to encrypt the session key.
The entire block is usually encoded with radix-64 encoding.
[Word Count: 36]

• Timestamp: The date/time when this key pair was generated.
[Word Count: 10]

• Key ID: The least significant 64 bits of the public key for this entry.
[Word Count: 15]

• Public key: The public-key portion of the pair.
[Word Count: 9]

• Private key: The private-key portion of the pair; this field is encrypted.
[Word Count: 13]

Key ID*
Public Key
Owner Trust
Key
Legitimacy
Signature(s)
Signature
Trust(s)
[Word Count: 11]

Figure 7.4
General Structure of Private- and Public-Key Rings
[Word Count: 9]

234
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

• User ID: Typically,this will be the user’s e-mail address (e.g.,stallings@acm.org).
However, the user may choose to associate a different name with each pair 
(e.g., Stallings, WStallings, WilliamStallings, etc.) or to reuse the same User ID
more than once.
[Word Count: 39]

The private-key ring can be indexed by either User ID or Key ID; later we will
see the need for both means of indexing.
Although it is intended that the private-key ring be stored only on the
machine of the user that created and owns the key pairs and that it be accessible
only to that user, it makes sense to make the value of the private key as secure as
possible.Accordingly, the private key itself is not stored in the key ring. Rather, this
key is encrypted using CAST-128 (or IDEA or 3DES). The procedure is as follows:
[Word Count: 99]

1. The user selects a passphrase to be used for encrypting private keys.
[Word Count: 13]

2. When the system generates a new public/private key pair using RSA, it asks
the user for the passphrase. Using SHA-1, a 160-bit hash code is generated
from the passphrase, and the passphrase is discarded.
[Word Count: 35]

3. The system encrypts the private key using CAST-128 with the 128 bits of
the hash code as the key.The hash code is then discarded, and the encrypted
private key is stored in the private-key ring.
[Word Count: 36]

• Timestamp: The date/time when this entry was generated.
[Word Count: 9]

• Key ID: The least significant 64 bits of the public key for this entry.
• Public Key: The public key for this entry.
• User ID: Identifies the owner of this key. Multiple user IDs may be associated
with a single public key.
[Word Count: 44]

The public-key ring can be indexed by either User ID or Key ID; we will see
the need for both means of indexing later.
We are now in a position to show how these key rings are used in message
transmission and reception. For simplicity, we ignore compression and radix-64 con-
version in the following discussion. First consider message transmission (Figure 7.5)
and assume that the message is to be both signed and encrypted. The sending PGP
entity performs the following steps.
[Word Count: 82]

Figure 7.5
PGP Message Generation (from User A to User B: no compression or radix-64
conversion)
[Word Count: 16]

a. PGP retrieves the sender’s private key from the private-key ring using
your_userid as an index. If your_userid was not provided in the
command, the first private key on the ring is retrieved.
[Word Count: 33]

b. PGP prompts the user for the passphrase to recover the unencrypted private
key.
[Word Count: 14]

c. The signature component of the message is constructed.
[Word Count: 9]

a. PGP generates a session key and encrypts the message.
[Word Count: 10]

b. PGP retrieves the recipient’s public key from the public-key ring using
her_userid as an index.
[Word Count: 16]

c. The session key component of the message is constructed.
[Word Count: 10]

The receiving PGP entity performs the following steps (Figure 7.6).
[Word Count: 10]

a. PGP retrieves the receiver’s private key from the private-key ring using the
Key ID field in the session key component of the message as an index.
[Word Count: 27]

b. PGP prompts the user for the passphrase to recover the unencrypted
private key.
[Word Count: 14]

c. PGP then recovers the session key and decrypts the message.
[Word Count: 11]

236
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Figure 7.6
PGP Message Reception (from User A to User B; no compression or radix-64
conversion)
[Word Count: 16]

a. PGP retrieves the sender’s public key from the public-key ring using the Key
ID field in the signature key component of the message as an index.
[Word Count: 27]

b. PGP recovers the transmitted message digest.
[Word Count: 7]

c. PGP computes the message digest for the received message and compares it
to the transmitted message digest to authenticate.
[Word Count: 20]

As can be seen from the discussion so far, PGP contains a clever, efficient, interlock-
ing set of functions and formats to provide an effective confidentiality and authenti-
cation service. To complete the system, one final area needs to be addressed, that
of public-key management. The PGP documentation captures the importance of
this area:
[Word Count: 54]

This whole business of protecting public keys from tampering is the
single most difficult problem in practical public key applications. It
is the “Achilles heel” of public key cryptography, and a lot of soft-
ware complexity is tied up in solving this one problem.
[Word Count: 44]

PGP provides a structure for solving this problem with several suggested
options that may be used. Because PGP is intended for use in a variety of formal
and informal environments, no rigid public-key management scheme is set up, such
as we will see in our discussion of S/MIME later in this chapter.
[Word Count: 52]

1. Physically get the key from B. B could store her public key 
on a floppy
disk and hand it to A. A could then load the key into his system from the
floppy disk.This is a very secure method but has obvious practical limitations.
[Word Count: 45]

2. Verify a key by telephone. If A can recognize B on the phone,A could call B and
ask her to dictate the key, in radix-64 format, over the phone.As a more practical
alternative, B could transmit her key in an e-mail message to A. A could have
PGP generate a 160-bit SHA-1 digest of the key and display it in hexadecimal
format; this is referred to as the “fingerprint” of the key.A could then call B and
ask her to dictate the fingerprint over the phone. If the two fingerprints match,
the key is verified.
[Word Count: 96]

4. Obtain B’s public key from a trusted certifying authority. Again, a public-key
certificate is created and signed by the authority. A could then access the
authority, providing a user name and receiving a signed certificate.
[Word Count: 36]

For cases 3 and 4, A already would have to have a copy of the introducer’s
public key and trust that this key is valid. Ultimately, it is up to A to assign a level of
trust to anyone who is to act as an introducer.
[Word Count: 46]

THE USE OFTRUST Although PGP does not include any specification for establishing
certifying authorities or for establishing trust, it does provide a convenient means of
using trust, associating trust with public keys, and exploiting trust information.
[Word Count: 36]

238
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

1. When A inserts a new public key on the public-key ring, PGP must assign 
a value to the trust flag that is associated with the owner of this public key. If
the owner is A, and therefore this public key also appears in the private-key
ring, then a value of ultimate trust is automatically assigned to the trust field.
[Word Count: 60]

(a) Trust Assigned to
Public-Key Owner
(appears after key packet;
user defined)
[Word Count: 12]

(b) Trust Assigned to Public
Key/User ID Pair (appears after
User ID packet; computed 
by PGP)
[Word Count: 16]

(c) Trust Assigned to Signature
(appears after signature packet;
cached copy of OWNERTRUST
for this signator)
[Word Count: 16]

—this key is present in
secret key ring 
(ultimate trust)
[Word Count: 10]

—this key is present in secret key
ring (ultimate trust)
[Word Count: 10]

—set if this key appears in
secret key ring
[Word Count: 9]

—set if user wants only to be
warned when key that is not fully
validated is used for encryption
[Word Count: 19]

—set if signature leads up a
contiguous trusted certification 
path back to the ultimately
trusted key ring owner
[Word Count: 18]

Otherwise, PGP asks A for his assessment of the trust to be assigned to the
owner of this key, and A must enter the desired level. The user can specify
that this owner is unknown, untrusted, marginally trusted, or completely
trusted.
[Word Count: 41]

2. When the new public key is entered, one or more signatures may be attached to
it. More signatures may be added later. When a signature is inserted into the
entry, PGP searches the public-key ring to see if the author of this signature is
among the known public-key owners. If so, the OWNERTRUST value for this
owner is assigned to the SIGTRUST field for this signature. If not, an unknown
user value is assigned.
[Word Count: 75]

2Figure provided to the author by Phil Zimmermann.
[Word Count: 8]

240
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

 key's owner is trusted by you to sign keys
[Word Count: 10]

 key's owner is partly trusted by you to sign keys
[Word Count: 11]

Several points are illustrated in Figure 7.7.
[Word Count: 7]

1. Note that all keys whose owners are fully or partially trusted by this user have
been signed by this user, with the exception of node L. Such a user signature is
not always necessary, as the presence of node L indicates, but in practice, most
users are likely to sign the keys for most owners that they trust. So, for exam-
ple, even though E’s key is already signed by trusted introducer F, the user
chose to sign E’s key directly.
[Word Count: 82]

4. Figure 7.7 also shows an example of a detached “orphan” node S, with two
unknown signatures. Such a key may have been acquired from a key server.
[Word Count: 28]

PGP cannot assume that this key is legitimate simply because it came from a
reputable server. The user must declare the key legitimate by signing it or by
telling PGP that it is willing to trust fully one of the key’s signatories.
[Word Count: 42]

242
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Date: October 8, 2009 2:15:49 PM EDT
From: William Stallings
<ws@shore.net>
Subject: The Syntax in RFC 5322
To: Smith@Other-host.com
Cc: Jones@Yet-Another-Host.com
[Word Count: 21]

Hello. This section begins the actual
message body, which is delimited from the
message heading by a blank line.
[Word Count: 19]

Another field that is commonly found in RFC 5322 headers is Message-ID.
This field contains a unique identifier associated with this message.
[Word Count: 22]

Multipurpose Internet Mail Extension (MIME) is an extension to the RFC 5322
framework that is intended to address some of the problems and limitations of the
use of Simple Mail Transfer Protocol (SMTP), defined in RFC 821, or some other
mail transfer protocol and RFC 5322 for electronic mail. [PARZ06] lists the follow-
ing limitations of the SMTP/5322 scheme.
[Word Count: 59]

1. SMTP cannot transmit executable files or other binary objects. A number of
schemes are in use for converting binary files into a text form that can be used
by SMTP mail systems, including the popular UNIX UUencode/UUdecode
scheme. However, none of these is a standard or even a de facto standard.
[Word Count: 52]

2. SMTP cannot transmit text data that includes national language characters,
because these are represented by 8-bit codes with values of 128 decimal or
higher, and SMTP is limited to 7-bit ASCII.
[Word Count: 32]

3. SMTP servers may reject mail message over a certain size.
[Word Count: 11]

4. SMTP gateways that translate between ASCII and the character code EBCDIC
do not use a consistent set of mappings, resulting in translation problems.
[Word Count: 24]

5. SMTP gateways to X.400 electronic mail networks cannot handle nontextual
data included in X.400 messages.
[Word Count: 16]

6. Some SMTP implementations do not adhere completely to the SMTP standards
defined in RFC 821. Common problems include:
[Word Count: 19]

• Deletion, addition, or reordering of carriage return and linefeed
[Word Count: 10]

• Truncating or wrapping lines longer than 76 characters
[Word Count: 9]

• Removal of trailing white space (tab and space characters)
[Word Count: 10]

• Padding of lines in a message to the same length
[Word Count: 11]

• Conversion of tab characters into multiple space characters
[Word Count: 9]

MIME is intended to resolve these problems in a manner that is compatible
with existing RFC 5322 implementations. The specification is provided in RFCs
2045 through 2049.
[Word Count: 27]

OVERVIEW The MIME specification includes the following elements.
[Word Count: 8]

1. Five new message header fields are defined, which may be included in an RFC
5322 header. These fields provide information about the body of the message.
[Word Count: 27]

2. A number of content formats are defined, thus standardizing representations
that support multimedia electronic mail.
[Word Count: 16]

3. Transfer encodings are defined that enable the conversion of any content for-
mat into a form that is protected from alteration by the mail system.
[Word Count: 26]

In this subsection, we introduce the five message header fields. The next two
subsections deal with content formats and transfer encodings.
The five header fields defined in MIME are
[Word Count: 29]

• MIME-Version: Must have the parameter value 1.0. This field indicates that
the message conforms to RFCs 2045 and 2046.
[Word Count: 20]

• Content-Type: Describes the data contained in the body with sufficient detail
that the receiving user agent can pick an appropriate agent or mechanism to
represent the data to the user or otherwise deal with the data in an appropri-
ate manner.
[Word Count: 42]

• Content-Transfer-Encoding: Indicates the type of transformation that has
been used to represent the body of the message in a way that is acceptable for
mail transport.
[Word Count: 27]

• Content-ID: Used to identify MIME entities uniquely in multiple contexts.
[Word Count: 11]

• Content-Description: A text description of the object with the body; this is
useful when the object is not readable (e.g., audio data).
[Word Count: 23]

Any or all of these fields may appear in a normal RFC 5322 header.A compliant
implementation must support the MIME-Version, Content-Type, and Content-
Transfer-Encoding fields;the Content-ID and Content-Description fields are optional
and may be ignored by the recipient implementation.
[Word Count: 39]

244
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Text
Plain
Unformatted text; may be ASCII or ISO 8859.
[Word Count: 10]

Enriched
Provides greater format flexibility.
[Word Count: 5]

Multipart
Mixed
The different parts are independent but are to be transmitted together.They
should be presented to the receiver in the order that they appear in the mail
message.
[Word Count: 29]

Parallel
Differs from Mixed only in that no order is defined for delivering the parts to
the receiver.
[Word Count: 18]

Alternative
The different parts are alternative versions of the same information.They are
ordered in increasing faithfulness to the original, and the recipient’s mail
system should display the “best” version to the user.
[Word Count: 32]

Digest
Similar to Mixed, but the default type/subtype of each part is message/rfc822.
[Word Count: 13]

Message
rfc822
The body is itself an encapsulated message that conforms to RFC 822.
[Word Count: 14]

Partial
Used to allow fragmentation of large mail items, in a way that is transparent
to the recipient.
[Word Count: 18]

External-body
Contains a pointer to an object that exists elsewhere.
[Word Count: 10]

Image
jpeg
The image is in JPEG format, JFIF encoding.
[Word Count: 10]

Audio
Basic
Single-channel 8-bit ISDN mu-law encoding at a sample rate of 8 kHz.
[Word Count: 14]

Application
PostScript
Adobe Postscript format.
[Word Count: 5]

octet-stream
General binary data consisting of 8-bit bytes.
[Word Count: 8]

Here is a simple example of a multipart message containing two parts—both
consisting of simple text (taken from RFC 2046).
[Word Count: 20]

From: Nathaniel Borenstein <nsb@bellcore.com>
To: Ned Freed <ned@innosoft.com>
Subject: Sample message
MIME-Version: 1.0
Content-type: multipart/mixed; boundary="simple 
boundary"
[Word Count: 17]

This is the preamble. It is to be ignored, though it 
is a handy place for mail composers to include an
explanatory note to non-MIME conformant readers.
—simple boundary
[Word Count: 29]

This is implicitly typed plain ASCII text. It does NOT
end with a linebreak.
—simple boundary
Content-type: text/plain; charset=us-ascii
[Word Count: 19]

This is explicitly typed plain ASCII text. It DOES end
with a linebreak.
[Word Count: 13]

—simple boundary—
This is the epilogue. It is also to be ignored.
[Word Count: 12]

From: Nathaniel Borenstein <nsb@bellcore.com>
To: Ned Freed <ned@innosoft.com>
Subject: Formatted text mail
MIME-Version: 1.0
Content-Type: multipart/alternative; 
boundary=boundary42
[Word Count: 17]

Content-Type: text/plain; charset=us-ascii
[Word Count: 3]

...plain text version of message goes here....
[Word Count: 7]

246
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

.... RFC 1896 text/enriched version of same message
goes here ...
[Word Count: 11]

A MULTIPART EXAMPLE Figure 7.8, taken from RFC 2045, is the outline of a
complex multipart message.The message has five parts to be displayed serially: two
introductory plain text parts, an embedded multipart message, a richtext part, and a
closing encapsulated text message in a non-ASCII character set. The embedded
multipart message has two parts to be displayed in parallel: a picture and an audio
fragment.
[Word Count: 66]

CANONICAL FORM An important concept in MIME and S/MIME is that of
canonical form. Canonical form is a format, appropriate to the content type, that is
standardized for use between systems. This is in contrast to native form, which is a
format that may be peculiar to a particular system. Table 7.5, from RFC 2049, should
help clarify this matter.
[Word Count: 60]

In terms of general functionality, S/MIME is very similar to PGP. Both offer the
ability to sign and/or encrypt messages. In this subsection, we briefly summarize
S/MIME capability.We then look in more detail at this capability by examining mes-
sage formats and message preparation.
[Word Count: 44]

7bit
The data are all represented by short lines of ASCII characters.
[Word Count: 12]

8bit
The lines are short, but there may be non-ASCII characters (octets with the
high-order bit set).
[Word Count: 17]

binary
Not only may non-ASCII characters be present, but the lines are not necessar-
ily short enough for SMTP transport.
[Word Count: 20]

quoted-printable
Encodes the data in such a way that if the data being encoded are mostly
ASCII text, the encoded form of the data remains largely recognizable by
humans.
[Word Count: 29]

base64
Encodes data by mapping 6-bit blocks of input to 8-bit blocks of output, all of
which are printable ASCII characters.
[Word Count: 21]

248
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

MIME-Version: 1.0
From: Nathaniel Borenstein <nsb@bellcore.com>
To: Ned Freed <ned@innosoft.com>
Subject: A multipart example
Content-Type: multipart/mixed;
boundary=unique-boundary-1
[Word Count: 17]

This is the preamble area of a multipart message. Mail readers that understand multipart format should ignore
this preamble. If you are reading this text, you might want to consider changing to a mail reader that understands
how to properly display multipart messages.
[Word Count: 43]

...Some text appears here...
[Note that the preceding blank line means no header fields were given and this is text, with charset US ASCII.
It could have been done with explicit typing as in the next part.]
[Word Count: 37]

--unique-boundary-1
Content-type: text/plain; charset=US-ASCII
[Word Count: 4]

This could have been part of the previous part, but illustrates explicit versus implicit typing of body parts.
[Word Count: 18]

--unique-boundary-1
Content-Type: multipart/parallel;   boundary=unique-boundary-2
[Word Count: 4]

--unique-boundary-2
Content-Type: audio/basic
Content-Transfer-Encoding: base64
[Word Count: 5]

... base64-encoded 8000 Hz single-channel mu-law-format audio data goes here....
[Word Count: 10]

--unique-boundary-2
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
[Word Count: 5]

... base64-encoded image data goes here....
[Word Count: 6]

--unique-boundary-1
Content-type: text/enriched
[Word Count: 3]

This is <bold><italic>richtext.</italic></bold> <smaller>as defined in RFC 1896</smaller>
[Word Count: 8]

Isn't it <bigger><bigger>cool?</bigger></bigger>
[Word Count: 3]

--unique-boundary-1
Content-Type: message/rfc822
[Word Count: 3]

From: (mailbox in US-ASCII)
To: (address in US-ASCII)
Subject: (subject in US-ASCII)
Content-Type: Text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: Quoted-printable
[Word Count: 17]

... Additional text in ISO-8859-1 goes here ...
[Word Count: 8]

Figure 7.8
Example MIME Message Structure
[Word Count: 6]

FUNCTIONS S/MIME provides the following functions.
[Word Count: 6]

• Enveloped data: This consists of encrypted content of any type and encrypted-
content encryption keys for one or more recipients.
[Word Count: 21]

• Signed data: A digital signature is formed by taking the message digest of the
content to be signed and then encrypting that with the private key of the signer.
The content plus signature are then encoded using base64 encoding. A signed
data message can only be viewed by a recipient with S/MIME capability.
[Word Count: 54]

• Clear-signed data: As with signed data, a digital signature of the content is
formed. However, in this case, only the digital signature is encoded using
base64.As a result, recipients without S/MIME capability can view the message
content, although they cannot verify the signature.
[Word Count: 44]

• Signed and enveloped data: Signed-only and encrypted-only entities may be
nested, so that encrypted data may be signed and signed data or clear-signed
data may be encrypted.
[Word Count: 28]

CRYPTOGRAPHIC ALGORITHMS Table 7.6 summarizes the cryptographic algorithms used
in S/MIME.S/MIME uses the following terminology taken from RFC 2119 (Key Words
for use in RFCs to Indicate Requirement Levels) to specify the requirement level:
[Word Count: 34]

• MUST: The definition is an absolute requirement of the specification. An
implementation must include this feature or function to be in conformance
with the specification.
[Word Count: 26]

• SHOULD: There may exist valid reasons in particular circumstances to ignore
this feature or function, but it is recommended that an implementation include
the feature or function.
[Word Count: 28]

S/MIME incorporates three public-key algorithms. The Digital Signature
Standard (DSS) described in Chapter 3 is the preferred algorithm for digital 
signature. S/MIME lists Diffie-Hellman as the preferred algorithm for encrypting
session keys; in fact, S/MIME uses a variant of Diffie-Hellman that does provide
[Word Count: 43]

The body to be transmitted is created in the system’s native format.The native char-
acter set is used and, where appropriate, local end-of-line conventions are used as
well.The body may be a UNIX-style text file, or a Sun raster image, or a VMS
indexed file, or audio data in a system-dependent format stored only in memory, or
anything else that corresponds to the local model for the representation of some
form of information. Fundamentally, the data is created in the “native” form that
corresponds to the type specified by the media type.
[Word Count: 92]

250
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Table 7.6
Cryptographic Algorithms Used in S/MIME
[Word Count: 7]

Create a message digest to be used in
forming a digital signature.
[Word Count: 12]

Receiver SHOULD support MD5 for backward compatibility.
[Word Count: 7]

Encrypt message digest to form a digital
signature.
[Word Count: 8]

Sending and receiving agents MUST support DSS.
[Word Count: 7]

Sending agents SHOULD support RSA encryption.
[Word Count: 6]

Receiving agents SHOULD support verification of RSA
signatures with key sizes 512 bits to 1024 bits.
[Word Count: 16]

Encrypt session key for transmission with
a message.
[Word Count: 8]

Sending and receiving agents SHOULD support Diffie-Hellman.
[Word Count: 7]

Sending and receiving agents MUST support RSA encryption
with key sizes 512 bits to 1024 bits.
[Word Count: 16]

Encrypt message for transmission with a
one-time session key.
[Word Count: 9]

Sending and receiving agents MUST support encryption with
tripleDES.
[Word Count: 9]

Sending agents SHOULD support encryption with AES.
[Word Count: 7]

Sending agents SHOULD support encryption with RC2/40.
[Word Count: 7]

Create a message authentication code.
Receiving agents MUST support HMAC with SHA-1.
[Word Count: 12]

Sending agents SHOULD support HMAC with SHA-1.
[Word Count: 7]

1. If the sending agent has a list of preferred decrypting capabilities from an
intended recipient, it SHOULD choose the first (highest preference) capabil-
ity on the list that it is capable of using.
[Word Count: 34]

2. If the sending agent has no such list of capabilities from an intended recipient but
has received one or more messages from the recipient, then the outgoing mes-
sage SHOULD use the same encryption algorithm as was used on the last signed
and encrypted message received from that intended recipient.
[Word Count: 51]

3. If the sending agent has no knowledge about the decryption capabilities of the
intended recipient and is willing to risk that the recipient may not be able to
decrypt the message, then the sending agent SHOULD use triple DES.
[Word Count: 40]

4. If the sending agent has no knowledge about the decryption capabilities of the
intended recipient and is not willing to risk that the recipient may not be able
to decrypt the message, then the sending agent MUST use RC2/40.
[Word Count: 40]

If a message is to be sent to multiple recipients and a common encryption
algorithm cannot be selected for all, then the sending agent will need to send two
messages. However, in that case, it is important to note that the security of the mes-
sage is made vulnerable by the transmission of one copy with lower security.
[Word Count: 58]

S/MIME makes use of a number of new MIME content types, which are shown in
Table 7.7. All of the new application types use the designation PKCS. This refers to
a set of public-key cryptography specifications issued by RSA Laboratories and
made available for the S/MIME effort.
We examine each of these in turn after first looking at the general procedures
for S/MIME message preparation.
[Word Count: 65]

Type
Subtype
smime Parameter
Description
[Word Count: 5]

Multipart
Signed
A clear-signed message in two parts: one is the
message and the other is the signature.
[Word Count: 18]

Application
pkcs7-mime
signedData
A signed S/MIME entity.
[Word Count: 7]

pkcs7-mime
envelopedData
An encrypted S/MIME entity.
[Word Count: 6]

An entity containing only public-key certificates.
[Word Count: 6]

pkcs7-mime
CompressedData
A compressed S/MIME entity.
[Word Count: 6]

signedData
The content type of the signature subpart of a
multipart/signed message.
[Word Count: 12]

252
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

ENVELOPEDDATA An application/pkcs7-mime subtype is used for one of four
categories of S/MIME processing, each with a unique smime-type parameter. In all
cases, the resulting entity (referred to as an object) is represented in a form known
as Basic Encoding Rules (BER), which is defined in ITU-T Recommendation
X.209. The BER format consists of arbitrary octet strings and is therefore binary
data. Such an object should be transfer encoded with base64 in the outer MIME
message.We first look at envelopedData.
The steps for preparing an envelopedData MIME entity are
[Word Count: 89]

1. Generate a pseudorandom session key for a particular symmetric encryp-
tion algorithm (RC2/40 or triple DES).
[Word Count: 17]

2. For each recipient,encrypt the session key with the recipient’s public RSA key.
[Word Count: 13]

3. For each recipient, prepare a block known as RecipientInfo that contains
an identifier of the recipient’s public-key certificate,3 an identifier of the algo-
rithm used to encrypt the session key, and the encrypted session key.
[Word Count: 36]

4. Encrypt the message content with the session key.
[Word Count: 9]

The RecipientInfo blocks followed by the encrypted content constitute
the envelopedData. This information is then encoded into base64. A sample
message (excluding the RFC 5322 headers) is
[Word Count: 27]

Content-Type: application/pkcs7-mime; smime-type=enveloped-
data; name=smime.p7m
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=smime.p7m
[Word Count: 10]

rfvbnj756tbBghyHhHUujhJhjH77n8HHGT9HG4VQpfyF467GhIGfHfYT6
7n8HHGghyHhHUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H
f8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4
0GhIGfHfQbnj756YT64V
[Word Count: 4]

3This is an X.509 certificate, discussed later in this section.
[Word Count: 10]

To recover the encrypted message, the recipient first strips off the base64
encoding.Then the recipient’s private key is used to recover the session key. Finally,
the message content is decrypted with the session key.
[Word Count: 34]

SIGNEDDATA The signedData smime-type can be used with one or more signers.
For clarity, we confine our description to the case of a single digital signature. The
steps for preparing a signedData MIME entity are
[Word Count: 35]

1. Select a message digest algorithm (SHA or MD5).
[Word Count: 9]

2. Compute the message digest (hash function) of the content to be signed.
[Word Count: 13]

3. Encrypt the message digest with the signer’s private key.
[Word Count: 10]

4. Prepare a block known as SignerInfo that contains the signer’s public-
key certificate, an identifier of the message digest algorithm, an identifier of
the algorithm used to encrypt the message digest, and the encrypted mes-
sage digest.
[Word Count: 38]

The signedData entity consists of a series of blocks, including a message
digest algorithm identifier, the message being signed, and SignerInfo. The
signedData entity may also include a set of public-key certificates sufficient to
constitute a chain from a recognized root or top-level certification authority to the
signer. This information is then encoded into base64. A sample message (excluding
the RFC 5322 headers) is
[Word Count: 64]

Content-Type: application/pkcs7-mime; smime-type=signed-
data; name=smime.p7m
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=smime.p7m
[Word Count: 10]

567GhIGfHfYT6ghyHhHUujpfyF4f8HHGTrfvhJhjH776tbB9HG4VQbnj7
77n8HHGT9HG4VQpfyF467GhIGfHfYT6rfvbnj756tbBghyHhHUujhJhjH
HUujhJh4VQpfyF467GhIGfHfYGTrfvbnjT6jH7756tbB9H7n8HHGghyHh
6YT64V0GhIGfHfQbnj75
[Word Count: 4]

To recover the signed message and verify the signature, the recipient first
strips off the base64 encoding. Then the signer’s public key is used to decrypt the
message digest.The recipient independently computes the message digest and com-
pares it to the decrypted message digest to verify the signature.
[Word Count: 48]

254
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

using base64 or quoted-printable.Then this part is processed in the same manner as
signedData, but in this case an object with signedData format is created that
has an empty message content field. This object is a detached signature. It is then
transfer encoded using base64 to become the second part of the multipart/signed
message.This second part has a MIME content type of application and a subtype of
pkcs7-signature. Here is a sample message:
[Word Count: 73]

Content-Type: multipart/signed;
protocol="application/pkcs7-signature";
micalg=sha1; boundary=boundary42
[Word Count: 5]

—boundary42
Content-Type: application/pkcs7-signature; name=smime.p7s
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename=smime.p7s
[Word Count: 9]

ghyHhHUujhJhjH77n8HHGTrfvbnj756tbB9HG4VQpfyF467GhIGfHfYT6
4VQpfyF467GhIGfHfYT6jH77n8HHGghyHhHUujhJh756tbB9HGTrfvbnj
n8HHGTrfvhJhjH776tbB9HG4VQbnj7567GhIGfHfYT6ghyHhHUujpfyF4
7GhIGfHfYT64VQbnj756
—boundary42—
[Word Count: 5]

The protocol parameter indicates that this is a two-part clear-signed entity.
The micalg parameter indicates the type of message digest used. The receiver can
verify the signature by taking the message digest of the first part and comparing this
to the message digest recovered from the signature in the second part.
[Word Count: 51]

REGISTRATION REQUEST Typically, an application or user will apply to a certification
authority for a public-key certificate.The application/pkcs10 S/MIME entity is used to
transfer a certification request. The certification request includes certification
RequestInfo block, followed by an identifier of the public-key encryption
algorithm, followed by the signature of the certificationRequestInfo block
made using the sender’s private key. The certificationRequestInfo block
includes a name of the certificate subject (the entity whose public key is to be
certified) and a bit-string representation of the user’s public key.
[Word Count: 85]

CERTIFICATES-ONLY MESSAGE A message containing only certificates or a certificate
revocation list (CRL) can be sent in response to a registration request. The message
is an application/pkcs7-mime type/subtype with an smime-type parameter of
degenerate. The steps involved are the same as those for creating a signedData
message, except that there is no message content and the signerInfo field
is empty.
[Word Count: 60]

S/MIME uses public-key certificates that conform to version 3 of X.509 
(see Chapter 4). The key-management scheme used by S/MIME is in some ways a
hybrid between a strict X.509 certification hierarchy and PGP’s web of trust.
As with the PGP model, S/MIME managers and/or users must configure each client
with a list of trusted keys and with certificate revocation lists. That is, the responsi-
bility is local for maintaining the certificates needed to verify incoming signatures
and to encrypt outgoing messages. On the other hand, the certificates are signed by
certification authorities.
[Word Count: 93]

USER AGENT ROLE An S/MIME user has several key-management functions to
perform.
[Word Count: 12]

• Key generation: The user of some related administrative utility (e.g., one asso-
ciated with LAN management) MUST be capable of generating separate
Diffie-Hellman and DSS key pairs and SHOULD be capable of generating
RSA key pairs. Each key pair MUST be generated from a good source of non-
deterministic random input and be protected in a secure fashion. A user agent
SHOULD generate RSA key pairs with a length in the range of 768 to 1024 bits
and MUST NOT generate a length of less than 512 bits.
[Word Count: 89]

• Registration: A user’s public key must be registered with a certification
authority in order to receive an X.509 public-key certificate.
[Word Count: 21]

• Certificate storage and retrieval: A user requires access to a local list of certifi-
cates in order to verify incoming signatures and to encrypt outgoing messages.
Such a list could be maintained by the user or by some local administrative
entity on behalf of a number of users.
[Word Count: 49]

• Owner’s name or alias
• Expiration date of the Digital ID
[Word Count: 12]

• Name of the certification authority that issued the Digital ID
• Digital signature of the certification authority that issued the Digital ID
[Word Count: 23]

256
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Digital IDs can also contain other user-supplied information, including
[Word Count: 9]

• Basic registration information (country, zip code, age, and gender)
[Word Count: 10]

VeriSign provides three levels, or classes, of security for public-key certificates,
as summarized in Table 7.8. A user requests a certificate online at VeriSign’s Web
site or other participating Web sites. Class 1 and Class 2 requests are processed 
on line, and in most cases take only a few seconds to approve. Briefly, the following
procedures are used.
[Word Count: 58]

• For Class 1 Digital IDs,VeriSign confirms the user’s e-mail address by sending
a PIN and Digital ID pick-up information to the e-mail address provided in
the application.
[Word Count: 28]

• For Class 2 Digital IDs, VeriSign verifies the information in the application
through an automated comparison with a consumer database in addition to
[Word Count: 24]

Table 7.8
Verisign Public-Key Certificate Classes
[Word Count: 6]

Automated unam-
biguous name and 
e-mail address search.
[Word Count: 8]

Same as Class 1, plus
automated enrollment infor-
mation check and automated
address check.
[Word Count: 14]

Same as Class 1, plus personal
presence and ID documents
plus Class 2 automated ID
check for individuals; business
records (or filings) for
organizations.
[Word Count: 24]

PCA: trustworthy
hardware; CA: trust-
worthy software or
trustworthy hardware.
[Word Count: 10]

Certificate
Applicant and
Subscriber
Private Key
Protection
[Word Count: 7]

Encryption software
(PIN protected)
recommended but not
required.
[Word Count: 8]

Encryption software (PIN
protected) required.
[Word Count: 5]

Encryption software (PIN
protected) required; hardware
token recommended but not
required.
[Word Count: 11]

Applications
Implemented or
Contemplated
by Users
[Word Count: 6]

Individual and intra- and 
inter-company e-mail, online
subscriptions, password
replacement, and software 
validation.
[Word Count: 13]

E-banking, corp. database
access, personal banking,
membership-based online
services, content integrity
services, e-commerce server,
software validation; authenti-
cation of LRAAs; and strong
encryption for certain servers.
[Word Count: 26]

IA        = Issuing Authority
CA      = Certification Authority
PCA    = VeriSign public primary certification authority
PIN     = Personal Identification Number
LRAA = Local Registration Authority Administrator
[Word Count: 26]

performing all of the checking associated with a Class 1 Digital ID. Finally,
confirmation is sent to the specified postal address alerting the user that a
Digital ID has been issued in his or her name.
[Word Count: 36]

• For Class 3 Digital IDs, VeriSign requires a higher level of identity assurance.
An individual must prove his or her identity by providing notarized creden-
tials or applying in person.
[Word Count: 31]

As of this writing, three enhanced security services have been proposed in an
Internet draft. The details of these may change, and additional services may be
added.The three services are
[Word Count: 30]

• Signed receipts: A signed receipt may be requested in a SignedData object.
Returning a signed receipt provides proof of delivery to the originator of a
message and allows the originator to demonstrate to a third party that the
recipient received the message. In essence, the recipient signs the entire origi-
nal message plus the original (sender’s) signature and appends the new signa-
ture to form a new S/MIME message.
[Word Count: 70]

• Security labels: A security label may be included in the authenticated attrib-
utes of a SignedData object. A security label is a set of security information
regarding the sensitivity of the content that is protected by S/MIME encapsu-
lation.The labels may be used for access control, by indicating which users are
permitted access to an object. Other uses include priority (secret, confidential,
restricted, and so on) or role based, describing which kind of people can see
the information (e.g., patient’s health-care team, medical billing agents, etc.).
[Word Count: 87]

• Secure mailing lists: When a user sends a message to multiple recipients, a cer-
tain amount of per-recipient processing is required, including the use of each
recipient’s public key. The user can be relieved of this work by employing the
services of an S/MIME Mail List Agent (MLA). An MLA can take a single
incoming message, perform the recipient-specific encryption for each recipi-
ent, and forward the message. The originator of a message need only send the
message to the MLA with encryption performed using the MLA’s public key.
[Word Count: 90]

258
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

This section provides an overview of DKIM. Before beginning our discussion
of DKIM, we introduce the standard Internet mail architecture.Then we look at the
threat that DKIM is intended to address, and finally provide an overview of DKIM
operation.
[Word Count: 39]

RFC 4684 (Analysis of Threats Motivating DomainKeys Identified Mail) describes
the threats being addressed by DKIM in terms of the characteristics, capabilities,
and location of potential attackers.
[Word Count: 27]

CHARACTERISTICS RFC characterizes the range of attackers on a spectrum of three
levels of threat.
[Word Count: 15]

1. At the low end are attackers who simply want to send e-mail that a recipient
does not want to receive.The attacker can use one of a number of commercially
available tools that allow the sender to falsify the origin address of messages.
This makes it difficult for the receiver to filter spam on the basis of originating
address or domain.
[Word Count: 61]

Figure 7.9
Function Modules and Standardized Protocols for the Internet
[Word Count: 10]

260
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

2. At the next level are professional senders of bulk spam mail. These attackers
often operate as commercial enterprises and send messages on behalf of third
parties. They employ more comprehensive tools for attack, including Mail
Transfer Agents (MTAs) and registered domains and networks of compromised
computers (zombies) to send messages and (in some cases) to harvest addresses
to which to send.
[Word Count: 62]

3. The most sophisticated and financially motivated senders of messages are those
who stand to receive substantial financial benefit, such as from an e-mail-based
fraud scheme. These attackers can be expected to employ all of the above
mechanisms and additionally may attack the Internet infrastructure itself,
including DNS cache-poisoning attacks and IP routing attacks.
[Word Count: 54]

CAPABILITIES RFC 4686 lists the following as capabilities that an attacker might
have.
[Word Count: 13]

1. Submit messages to MTAs and Message Submission Agents (MSAs) at
multiple locations in the Internet.
[Word Count: 16]

2. Construct arbitrary Message Header fields, including those claiming to be
mailing lists, resenders, and other mail agents.
[Word Count: 18]

3. Sign messages on behalf of domains under their control.
[Word Count: 10]

4. Generate substantial numbers of either unsigned or apparently signed messages
that might be used to attempt a denial-of-service attack.
[Word Count: 20]

5. Resend messages that may have been previously signed by the domain.
[Word Count: 12]

6. Transmit messages using any envelope information desired.
[Word Count: 8]

7. Act as an authorized submitter for messages from a compromised computer.
[Word Count: 12]

8. Manipulation of IP routing.This could be used to submit messages from specific
IP addresses or difficult-to-trace addresses,or to cause diversion of messages to a
specific domain.
[Word Count: 27]

9. Limited influence over portions of DNS using mechanisms such as cache
poisoning.This might be used to influence message routing or to falsify adver-
tisements of DNS-based keys or signing practices.
10. Access to significant computing resources,for example,through the conscription of
worm-infected “zombie” computers. This could allow the “bad actor” to perform
various types of brute-force attacks.
[Word Count: 57]

11. Ability to eavesdrop on existing traffic, perhaps from a wireless network.
[Word Count: 12]

signatures, with incorrect signatures, or with correct signatures from domains with
little traceability. They may also pose as mailing lists, greeting cards, or other agents
that legitimately send or resend messages on behalf of others.
[Word Count: 35]

1. S/MIME depends on both the sending and receiving users employing S/MIME.
For almost all users, the bulk of incoming mail does not use S/MIME, and the
bulk of the mail the user wants to send is to recipients not using S/MIME.
[Word Count: 42]

2. S/MIME signs only the message content. Thus, RFC 5322 header information
concerning origin can be compromised.
[Word Count: 17]

3. DKIM is not implemented in client programs (MUAs) and is therefore transpar-
ent to the user; the user need take no action.
[Word Count: 23]

4. DKIM applies to all mail from cooperating domains.
[Word Count: 9]

5. DKIM allows good senders to prove that they did send a particular message
and to prevent forgers from masquerading as good senders.
[Word Count: 23]

Figure 7.11 provides a more detailed look at the elements of DKIM operation. Basic
message processing is divided between a signing Administrative Management
Domain (ADMD) and a verifying ADMD. At its simplest, this is between the
[Word Count: 36]

4The reasoning is expressed in terms of the use of S/MIME.The same argument applies to PGP.
[Word Count: 16]

262
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Mail origination
network
Mail delivery
network
[Word Count: 6]

DNS = Domain Name System
MDA = Mail Delivery Agent
MSA = Mail Submission Agent
MTA = Message Transfer Agent
MUA = Message User Agent
[Word Count: 25]

Figure 7.10
Simple Example of DKIM Deployment
[Word Count: 7]

Originating or Relaying  ADMD:
Sign Message with SDID
[Word Count: 8]

Relaying or Delivering ADMD
Message signed?
Relaying or Delivering ADMD:
Message signed?
[Word Count: 12]

Dkim-Signature:
v=1; a=rsa-sha256; c=relaxed/relaxed;
d=gmail.com; s=gamma; h=domainkey-signa-
ture:mime-version:received:date:message-
id:subject 
:from:to:content-type:con-
tent-transfer-encoding;
bh=5mZvQDyCRuyLb1Y28K4zgS2MPOemFToDBgvbJ
7GO90s=;
b=PcUvPSDygb4ya5Dyj1rbZGp/VyRiScuaz7TTG
J5qW5slM+klzv6kcfYdGDHzEVJW+Z
FetuPfF1ETOVhELtwH0zjSccOyPkEiblOf6gILO
bm3DDRm3Ys1/FVrbhVOlA+/jH9Aei
uIIw/5iFnRbSH6qPDVv/beDQqAWQfA/wF7O5k=
[Word Count: 18]

264
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

•
Algorithm used to generate the signature; must be either rsa-sha1 or 
rsa-sha256.
[Word Count: 13]

•
Canonicalization method used on the header and the body.
[Word Count: 10]

•
A domain name used as an identifier to refer to the identity of a respon-
sible person or organization. In DKIM, this identifier is called the Signing
Domain IDentifier (SDID). In our example, this field indicates that the sender
is using a gmail address.
[Word Count: 45]

•
In order that different keys may be used in different circumstances for
the same signing domain (allowing expiration of old keys, separate depart-
mental signing, or the like), DKIM defines a selector (a name associated with
a key), which is used by the verifier to retrieve the proper key during signature
verification.
[Word Count: 53]

•
Signed Header fields. A colon-separated list of header field names that
identify the header fields presented to the signing algorithm. Note that in our
example above, the signature covers the domainkey-signature field.This refers
to an older algorithm (since replaced by DKIM) that is still in use.
[Word Count: 47]

•
The hash of the canonicalized body part of the message. This provides
additional information for diagnosing signature verification failures.
•
The signature data in base64 format; this is the encrypted hash code.
[Word Count: 33]

LEIB07
Leiba, B., and Fenton, J. “DomainKeys Identified Mail (DKIM): Using Digital
Signatures for Domain Verification.” Proceedings of Fourth Conference on E-mail
and Anti-Spam (CEAS 07), 2007.
[Word Count: 27]

7.5 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 265
[Word Count: 9]

• PGP Home Page: PGP Web site by PGP Corp., the leading PGP commercial vendor.
[Word Count: 15]

• International PGP Home Page: Designed to promote worldwide use of PGP. Contains
documents and links of interest.
[Word Count: 18]

• PGP Charter: Latest RFCs and Internet drafts for Open Specification PGP.
[Word Count: 12]

• S/MIME Charter: Latest RFCs and Internet drafts for S/MIME.
[Word Count: 10]

• DKIM: Website hosted by Mutual Internet Practices Association, this site contains a
wide range of documents and information related to DKIM.
[Word Count: 22]

• DKIM Charter: Latest RFCs and Internet drafts for DKIM.
[Word Count: 10]

7.5 KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

detached signature
DomainKeys Identified Mail
(DKIM)
electronic mail
[Word Count: 8]

Multipurpose Internet Mail
Extensions (MIME)
Pretty Good Privacy (PGP)
radix 64
[Word Count: 11]

7.1
What are the five principal services provided by PGP?
7.2
What is the utility of a detached signature?
7.3
Why does PGP generate a signature before applying compression?
7.4
What is R64 conversion?
7.5
Why is R64 conversion useful for an e-mail application?
7.6
How does PGP use the concept of trust?
7.7
What is RFC 5322?
7.8
What is MIME?
7.9
What is S/MIME?
7.10
What is DKIM?
[Word Count: 70]

7.1
PGP makes use of the cipher feedback (CFB) mode of CAST-128, whereas most sym-
metric encryption applications (other than key encryption) use the cipher block
chaining (CBC) mode.We have
[Word Count: 30]

CFB: Ci = Pi  E(K, Ci-1);       Pi = Ci  E(K, Ci-1)
[Word Count: 13]

CBC: Ci = E(K, [Ci-1  Pi]);    Pi = Ci-1  D(K, Ci)
[Word Count: 13]

266
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Both PGP and S/MIME make use of an encoding technique referred to as radix-64 conver-
sion.This technique maps arbitrary binary input into printable character output.The form of
encoding has the following relevant characteristics:
[Word Count: 33]

1. The range of the function is a character set that is universally representable at
all sites, not a specific binary encoding of that character set.Thus, the characters
themselves can be encoded into whatever form is needed by a specific system.
For example, the character “E” is represented in an ASCII-based system as
hexadecimal 45 and in an EBCDIC-based system as hexadecimal C5.
[Word Count: 63]

2. The character set consists of 65 printable characters, one of which is used for
padding.With 
available characters, each character can be used to rep-
resent 6 bits of input.
[Word Count: 30]

3. No control characters are included in the set.Thus, a message encoded in radix 64
can traverse mail-handling systems that scan the data stream for control characters.
[Word Count: 27]

4. The hyphen character “-” is not used. This character has significance in the RFC 5322
format and should therefore be avoided.
[Word Count: 22]

6-bit
Value
Character
Encoding
6-bit
Value
Character
Encoding
6-bit
Value
Character
Encoding
6-bit
Value
Character
Encoding
[Word Count: 16]

The extracted 6-bit decimal values are 8, 53, 50, and 17. Looking these up in Table 7.9
yields the radix-64 encoding as the following characters: I1yR. If these characters are stored
in 8-bit ASCII format with parity bit set to zero, we have
[Word Count: 43]

01001001    00110001    01111001    01010010
[Word Count: 4]

268
CHAPTER 7 / ELECTRONIC MAIL SECURITY
[Word Count: 7]

Binary representation
00100011 01011100 10010001
[Word Count: 5]

ASCII code (8 bit, zero parity)
01001001 00110001 01111001 01010010
[Word Count: 10]

Figure 7.12
Printable Encoding of Binary Data into 
Radix-64 Format
[Word Count: 10]

In hexadecimal, this is 49317952.To summarize:
[Word Count: 6]

Applications of IPsec
Benefits of IPsec
Routing Applications
IPsec Documents
IPsec Services
Transport and Tunnel Modes
[Word Count: 16]

Security Associations
Security Association Database
Security Policy Database
IP Traffic Processing
[Word Count: 11]

ESP Format
Encryption and Authentication Algorithms
Padding
Anti-Replay Service
Transport and Tunnel Modes
[Word Count: 13]

Authentication Plus Confidentiality
Basic Combinations of Security Associations
[Word Count: 8]

Key Determination Protocol
Header and Payload Formats
[Word Count: 7]

8.8
Key Terms, Review Questions, and Problems
[Word Count: 7]

If a secret piece of news is divulged by a spy before the time is ripe, he must be put
to death, together with the man to whom the secret was told.
[Word Count: 32]

◆
IP security (IPsec) is a capability that can be added to either current version
of the Internet Protocol (IPv4 or IPv6) by means of additional headers.
[Word Count: 27]

◆
IPsec encompasses three functional areas: authentication, confidentiality,
and key management.
[Word Count: 11]

◆
Authentication makes use of the HMAC message authentication code.
Authentication can be applied to the entire original IP packet (tunnel
mode) or to all of the packet except for the IP header (transport mode).
[Word Count: 35]

◆
Confidentiality is provided by an encryption format known as encapsulating
security payload. Both tunnel and transport modes can be accommodated.
◆
IKE defines a number of techniques for key management.
[Word Count: 31]

In 1994, the Internet Architecture Board (IAB) issued a report titled “Security in
the Internet Architecture” (RFC 1636). The report identified key areas for
security mechanisms. Among these were the need to secure the network
[Word Count: 35]

infrastructure from unauthorized monitoring and control of network traffic
and the need to secure end-user-to-end-user traffic using authentication and
encryption mechanisms.
To provide security, the IAB included authentication and encryption as
necessary security features in the next-generation IP, which has been issued as
IPv6. Fortunately, these security capabilities were designed to be usable both
with the current IPv4 and the future IPv6. This means that vendors can begin
offering these features now, and many vendors now do have some IPsec capabil-
ity in their products. The IPsec specification now exists as a set of Internet
standards.
[Word Count: 96]

IPsec provides the capability to secure communications across a LAN, across private
and public WANs, and across the Internet. Examples of its use include:
[Word Count: 24]

• Secure branch office connectivity over the Internet: A company can build a
secure virtual private network over the Internet or over a public WAN. This
enables a business to rely heavily on the Internet and reduce its need for
private networks, saving costs and network management overhead.
[Word Count: 48]

• Secure remote access over the Internet: An end user whose system is equipped
with IP security protocols can make a local call to an Internet Service Provider
(ISP) and gain secure access to a company network.This reduces the cost of toll
charges for traveling employees and telecommuters.
[Word Count: 48]

• Establishing extranet and intranet connectivity with partners: IPsec can be
used to secure communication with other organizations, ensuring authentica-
tion and confidentiality and providing a key exchange mechanism.
[Word Count: 29]

• Enhancing electronic commerce security: Even though some Web and electronic
commerce applications have built-in security protocols,the use of IPsec enhances
that security. IPsec guarantees that all traffic designated by the network adminis-
trator is both encrypted and authenticated, adding an additional layer of security
to whatever is provided at the application layer.
[Word Count: 53]

IP
Header
IPsec
Header
Secure IP
Payload
[Word Count: 7]

IP
Header
IPsec
Header
Secure IP
Payload
[Word Count: 7]

IP
Header
IPsec
Header
Secure IP
Payload
[Word Count: 7]

• When IPsec is implemented in a firewall or router, it provides strong security
that can be applied to all traffic crossing the perimeter.Traffic within a company
or workgroup does not incur the overhead of security-related processing.
[Word Count: 37]

• IPsec in a firewall is resistant to bypass if all traffic from the outside must use
IP and the firewall is the only means of entrance from the Internet into the
organization.
[Word Count: 33]

• IPsec is below the transport layer (TCP, UDP) and so is transparent to
applications. There is no need to change software on a user or server system
when IPsec is implemented in the firewall or router. Even if IPsec is
implemented in end systems, upper-layer software, including applications, is
not affected.
[Word Count: 52]

• IPsec can be transparent to end users.There is no need to train users on security
mechanisms, issue keying material on a per-user basis, or revoke keying material
when users leave the organization.
[Word Count: 33]

• IPsec can provide security for individual users if needed.This is useful for offsite
workers and for setting up a secure virtual subnetwork within an organization
for sensitive applications.
[Word Count: 29]

In addition to supporting end users and protecting premises systems and networks,
IPsec can play a vital role in the routing architecture required for internetworking.
[HUIT98] lists the following examples of the use of IPsec. IPsec can assure that
[Word Count: 39]

• A router advertisement (a new router advertises its presence) comes from an
authorized router.
• A neighbor advertisement (a router seeks to establish or maintain a neighbor
relationship with a router in another routing domain) comes from an autho-
rized router.
[Word Count: 42]

• A redirect message comes from the router to which the initial IP packet was sent.
[Word Count: 16]

Without such security measures, an opponent can disrupt communications
or divert some traffic. Routing protocols such as Open Shortest Path First (OSPF)
should be run on top of security associations between routers that are defined
by IPsec.
[Word Count: 37]

IPsec encompasses three functional areas: authentication, confidentiality, and key
management. The totality of the IPsec specification is scattered across dozens of
RFCs and draft IETF documents,making this the most complex and difficult to grasp
of all IETF specifications. The best way to grasp the scope of IPsec is to consult the
[Word Count: 51]

latest version of the IPsec document roadmap, which as of this writing is [FRAN09].
The documents can be categorized into the following groups.
[Word Count: 23]

• Architecture: Covers the general concepts, security requirements, definitions,
and mechanisms defining IPsec technology. The current specification is RFC
4301, Security Architecture for the Internet Protocol.
[Word Count: 26]

• Authentication Header (AH): AH is an extension header to provide message
authentication. The current specification is RFC 4302, IP Authentication
Header. Because message authentication is provided by ESP, the use of AH is
deprecated. It is included in IPsecv3 for backward compatibility but should
not be used in new applications.We do not discuss AH in this chapter.
[Word Count: 58]

• Encapsulating Security Payload (ESP): ESP consists of an encapsulating header
and trailer used to provide encryption or combined encryption/authentication.
The current specification is RFC 4303, IP Encapsulating Security Payload (ESP).
[Word Count: 31]

• Internet Key Exchange (IKE): This is a collection of documents describing
the key management schemes for use with IPsec. The main specification is
RFC 4306, Internet Key Exchange (IKEv2) Protocol, but there are a number of
related RFCs.
[Word Count: 39]

• Cryptographic algorithms: This category encompasses a large set of docu-
ments that define and describe cryptographic algorithms for encryption, mes-
sage authentication, pseudorandom functions (PRFs), and cryptographic key
exchange.
[Word Count: 30]

• Other: There are a variety of other IPsec-related RFCs, including those deal-
ing with security policy and management information base (MIB) content.
[Word Count: 23]

IPsec provides security services at the IP layer by enabling a system to select
required security protocols, determine the algorithm(s) to use for the service(s), and
put in place any cryptographic keys required to provide the requested services.Two
protocols are used to provide security: an authentication protocol designated by the
header of the protocol, Authentication Header (AH); and a combined encryption/
authentication protocol designated by the format of the packet for that protocol,
Encapsulating Security Payload (ESP). RFC 4301 lists the following services:
[Word Count: 83]

• Connectionless integrity
• Data origin authentication
[Word Count: 7]

• Rejection of replayed packets (a form of partial sequence integrity)
[Word Count: 11]

Both AH and ESP support two modes of use: transport and tunnel mode.The oper-
ation of these two modes is best understood in the context of a description of ESP,
which is covered in Section 8.3. Here we provide a brief overview.
[Word Count: 42]

1In this chapter, the term IP packet refers to either an IPv4 datagram or an IPv6 packet.
[Word Count: 17]

Fundamental to the operation of IPsec is the concept of a security policy applied
to each IP packet that transits from a source to a destination. IPsec policy is
determined primarily by the interaction of two databases, the security association
database (SAD) and the security policy database (SPD). This section provides
an overview of these two databases and then summarizes their use during IPsec
operation. Figure 8.2 illustrates the relevant relationships.
[Word Count: 71]

A key concept that appears in both the authentication and confidentiality mecha-
nisms for IP is the security association (SA).An association is a one-way logical con-
nection between a sender and a receiver that affords security services to the traffic
carried on it. If a peer relationship is needed for two-way secure exchange, then two
security associations are required. Security services are afforded to an SA for the
use of AH or ESP, but not both.
[Word Count: 76]

Table 8.1
Tunnel Mode and Transport Mode Functionality
[Word Count: 8]

AH
Authenticates IP payload and selected
portions of IP header and IPv6 
extension headers.
[Word Count: 14]

Authenticates entire inner IP packet (inner
header plus IP payload) plus selected portions
of outer IP header and outer IPv6 extension
headers.
[Word Count: 22]

ESP
Encrypts IP payload and any IPv6 exten-
sion headers following the ESP header.
[Word Count: 14]

Encrypts IP payload and any IPv6 
extension headers following the ESP
header.Authenticates IP payload but 
not IP header.
[Word Count: 18]

Encrypts entire inner IP packet.Authenticates
inner IP packet.
[Word Count: 8]

A security association is uniquely identified by three parameters.
[Word Count: 9]

• Security Parameters Index (SPI): A bit string assigned to this SA and having
local significance only.The SPI is carried in AH and ESP headers to enable the
receiving system to select the SA under which a received packet will be
processed.
[Word Count: 42]

• IP Destination Address: This is the address of the destination endpoint of the
SA, which may be an end-user system or a network system such as a firewall or
router.
[Word Count: 31]

• Security Protocol Identifier: This field from the outer IP header indicates
whether the association is an AH or ESP security association.
[Word Count: 22]

Hence, in any IP packet, the security association is uniquely identified by the
Destination Address in the IPv4 or IPv6 header and the SPI in the enclosed exten-
sion header (AH or ESP).
[Word Count: 33]

In each IPsec implementation, there is a nominal2 Security Association Database
that defines the parameters associated with each SA. A security association is nor-
mally defined by the following parameters in an SAD entry.
[Word Count: 34]

• Security Parameter Index: A 32-bit value selected by the receiving end of an
SA to uniquely identify the SA. In an SAD entry for an outbound SA, the SPI
is used to construct the packet’s AH or ESP header. In an SAD entry for an
inbound SA, the SPI is used to map traffic to the appropriate SA.
[Word Count: 59]

• Sequence Number Counter: A 32-bit value used to generate the Sequence
Number field in AH or ESP headers, described in Section 8.3 (required for all
implementations).
[Word Count: 27]

• Sequence Counter Overflow: A flag indicating whether overflow of the
Sequence Number Counter should generate an auditable event and prevent
further transmission of packets on this SA (required for all implementations).
[Word Count: 32]

• Anti-Replay Window: Used to determine whether an inbound AH or ESP
packet is a replay, described in Section 8.3 (required for all implementations).
[Word Count: 24]

• AH Information: Authentication algorithm, keys, key lifetimes, and related
parameters being used with AH (required for AH implementations).
• ESP Information: Encryption and authentication algorithm, keys, initializa-
tion values, key lifetimes, and related parameters being used with ESP
(required for ESP implementations).
[Word Count: 43]

• Lifetime of this Security Association: A time interval or byte count after
which an SA must be replaced with a new SA (and new SPI) or terminated,
plus an indication of which of these actions should occur (required for all
implementations).
[Word Count: 42]

2Nominal in the sense that the functionality provided by a Security Association Database must be
present in any IPsec implementation, but the way in which that functionality is provided is up to the
implementer.
[Word Count: 34]

• IPsec Protocol Mode: Tunnel, transport, or wildcard.
[Word Count: 8]

• Path MTU: Any observed path maximum transmission unit (maximum size
of a packet that can be transmitted without fragmentation) and aging
variables (required for all implementations).
[Word Count: 27]

1. Compare the values of the appropriate fields in the packet (the selector fields)
against the SPD to find a matching SPD entry, which will point to zero or
more SAs.
[Word Count: 31]

2. Determine the SA if any for this packet and its associated SPI.
3. Do the required IPsec processing (i.e.,AH or ESP processing).
[Word Count: 23]

The following selectors determine an SPD entry:
[Word Count: 7]

• Remote IP Address: This may be a single IP address,an enumerated list or range
of addresses, or a wildcard (mask) address.The latter two are required to support
more than one destination system sharing the same SA (e.g., behind a firewall).
[Word Count: 41]

• Name: A user identifier from the operating system.This is not a field in the IP
or upper-layer headers but is available if IPsec is running on the same operat-
ing system as the user.
[Word Count: 35]

• Local and Remote Ports: These may be individual TCP or UDP port values,
an enumerated list of ports, or a wildcard port.
[Word Count: 23]

IPsec is executed on a packet-by-packet basis. When IPsec is implemented, each
outbound IP packet is processed by the IPsec logic before transmission, and each
inbound packet is processed by the IPsec logic after reception and before passing
the packet contents on to the next higher layer (e.g., TCP or UDP). We look at the
logic of these two situations in turn.
[Word Count: 62]

OUTBOUND PACKETS Figure 8.3 highlights the main elements of IPsec processing for
outbound traffic.A block of data from a higher layer, such as TCP, is passed down to
the IP layer and an IP packet is formed, consisting of an IP header and an IP body.
Then the following steps occur:
[Word Count: 51]

1. IPsec searches the SPD for a match to this packet.
[Word Count: 11]

2. If no match is found, then the packet is discarded and an error message is
generated.
[Word Count: 17]

Protocol
Local IP
Port
Remote IP
Port
Action
Comment
[Word Count: 9]

ICMP
1.2.3.101
*
*
*
BYPASS
Error messages
[Word Count: 8]

*
1.2.3.101
*
1.2.3.0/24
*
PROTECT: ESP 
intransport-mode
[Word Count: 8]

TCP
1.2.3.101
*
1.2.4.10
80
PROTECT: ESP 
intransport-mode
[Word Count: 8]

TCP
1.2.3.101
*
1.2.4.10
443
BYPASS
TLS: avoid double encryption
[Word Count: 10]

*
1.2.3.101
*
1.2.4.0/24
*
DISCARD
Others in DMZ
[Word Count: 9]

Outbound IP packet
(e.g., from TCP or UDP)
[Word Count: 8]

Figure 8.3
Processing Model for Outbound Packets
[Word Count: 7]

3. If a match is found, further processing is determined by the first matching
entry in the SPD. If the policy for this packet is DISCARD, then the packet is
discarded. If the policy is BYPASS, then there is no further IPsec processing;
the packet is forwarded to the network for transmission.
[Word Count: 52]

4. If the policy is PROTECT, then a search is made of the SAD for a matching
entry.If no entry is found,then IKE is invoked to create an SA with the appro-
priate keys and an entry is made in the SA.
5. The matching entry in the SAD determines the processing for this packet.
Either encryption, authentication, or both can be performed, and either
transport or tunnel mode can be used. The packet is then forwarded to the
network for transmission.
[Word Count: 82]

INBOUND PACKETS Figure 8.4 highlights the main elements of IPsec processing for
inbound traffic. An incoming IP packet triggers the IPsec processing. The following
steps occur:
[Word Count: 26]

1. IPsec determines whether this is an unsecured IP packet or one that has
ESP or AH headers/trailers, by examining the IP Protocol field (IPv4) or
Next Header field (IPv6).
[Word Count: 30]

8.3 / ENCAPSULATING SECURITY PAYLOAD 281
[Word Count: 6]

Deliver packet
to higher layer
(e.g. TCP, UDP)
[Word Count: 8]

Figure 8.4
Processing Model for Inbound Packets
[Word Count: 7]

2. If the packet is unsecured, IPsec searches the SPD for a match to this packet.
If the first matching entry has a policy of BYPASS, the IP header is processed
and stripped off and the packet body is delivered to the next higher layer,such
as TCP.If the first matching entry has a policy of PROTECT or DISCARD,or
if there is no matching entry, the packet is discarded.
[Word Count: 68]

3. For a secured packet, IPsec searches the SAD. If no match is found, the
packet is discarded. Otherwise, IPsec applies the appropriate ESP or AH
processing.Then, the IP header is processed and stripped off and the packet
body is delivered to the next higher layer, such as TCP.
[Word Count: 49]

ESP can be used to provide confidentiality, data origin authentication, connection-
less integrity, an anti-replay service (a form of partial sequence integrity), and (lim-
ited) traffic flow confidentiality. The set of services provided depends on options
selected at the time of Security Association (SA) establishment and on the location
of the implementation in a network topology.
ESP can work with a variety of encryption and authentication algorithms,
including authenticated encryption algorithms such as GCM.
[Word Count: 74]

Figure 8.5a shows the top-level format of an ESP packet.It contains the following fields.
[Word Count: 14]

• Security Parameters Index (32 bits): Identifies a security association.
[Word Count: 10]

• Sequence Number (32 bits): A monotonically increasing counter value; this
provides an anti-replay function, as discussed for AH.
[Word Count: 19]

• Payload Data (variable): This is a transport-level segment (transport mode)
or IP packet (tunnel mode) that is protected by encryption.
[Word Count: 21]

• Padding (0–255 bytes): The purpose of this field is discussed later.
[Word Count: 12]

• Pad Length (8 bits): Indicates the number of pad bytes immediately preceding
this field.
[Word Count: 15]

• Next Header (8 bits): Identifies the type of data contained in the payload data
field by identifying the first header in that payload (for example, an extension
header in IPv6, or an upper-layer protocol such as TCP).
[Word Count: 38]

Padding (0 - 255 bytes)
Pad length
Next header
[Word Count: 9]

8.3 / ENCAPSULATING SECURITY PAYLOAD 283
[Word Count: 6]

• Integrity Check Value (variable): A variable-length field (must be an integral
number of 32-bit words) that contains the Integrity Check Value computed
over the ESP packet minus the Authentication Data field.
[Word Count: 32]

Encryption and Authentication Algorithms
[Word Count: 4]

The Padding field serves several purposes:
[Word Count: 6]

• If an encryption algorithm requires the plaintext to be a multiple of some
number of bytes (e.g., the multiple of a single block for a block cipher), the
Padding field is used to expand the plaintext (consisting of the Payload Data,
Padding, Pad Length, and Next Header fields) to the required length.
[Word Count: 53]

• The ESP format requires that the Pad Length and Next Header fields be right
aligned within a 32-bit word. Equivalently, the ciphertext must be an integer
multiple of 32 bits.The Padding field is used to assure this alignment.
[Word Count: 39]

• Additional padding may be added to provide partial traffic-flow confidential-
ity by concealing the actual length of the payload.
[Word Count: 20]

1. If the received packet falls within the window and is new, the MAC is checked.
If the packet is authenticated, the corresponding slot in the window is marked.
[Word Count: 29]

2. If the received packet is to the right of the window and is new, the MAC is
checked. If the packet is authenticated, the window is advanced so that this
sequence number is the right edge of the window, and the corresponding slot in
the window is marked.
[Word Count: 49]

3. If the received packet is to the left of the window or if authentication fails, the
packet is discarded; this is an auditable event.
[Word Count: 25]

Marked if valid
packet received
Unmarked if valid
packet not yet received
[Word Count: 12]

Advance window if
valid packet to the
right is received
[Word Count: 10]

8.3 / ENCAPSULATING SECURITY PAYLOAD 285
[Word Count: 6]

TRANSPORT MODE ESP Transport mode ESP is used to encrypt and optionally
authenticate the data carried by IP (e.g., a TCP segment), as shown in Figure 8.8b.
[Word Count: 27]

(b) A virtual private network via tunnel mode
[Word Count: 8]

Figure 8.7
Transport-Mode versus Tunnel-Mode Encryption
[Word Count: 6]

For this mode using IPv4, the ESP header is inserted into the IP packet immediately
prior to the transport-layer header (e.g., TCP, UDP, ICMP), and an ESP trailer
(Padding, Pad Length, and Next Header fields) is placed after the IP packet. If
authentication is selected, the ESP Authentication Data field is added after the ESP
trailer. The entire transport-level segment plus the ESP trailer are encrypted.
Authentication covers all of the ciphertext plus the ESP header.
[Word Count: 76]

Orig IP
hdr
Hop-by-hop, dest,
routing, fragment
IPv6
[Word Count: 8]

Ext
headers
TCP
Data
ESP
trlr
ESP
auth
ESP
hdr
[Word Count: 10]

Orig IP
hdr
Extension headers
(if present)
TCP
Data
IPv6
[Word Count: 10]

Figure 8.8
Scope of ESP Encryption and Authentication
[Word Count: 8]

8.3 / ENCAPSULATING SECURITY PAYLOAD 287
[Word Count: 6]

In the context of IPv6, ESP is viewed as an end-to-end payload; that is, it is not
examined or processed by intermediate routers.Therefore, the ESP header appears
after the IPv6 base header and the hop-by-hop, routing, and fragment extension
headers. The destination options extension header could appear before or after the
ESP header, depending on the semantics desired. For IPv6, encryption covers
the entire transport-level segment plus the ESP trailer plus the destination options
extension header if it occurs after the ESP header.Again, authentication covers the
ciphertext plus the ESP header.
Transport mode operation may be summarized as follows.
[Word Count: 99]

1. At the source, the block of data consisting of the ESP trailer plus the entire
transport-layer segment is encrypted and the plaintext of this block is replaced
with its ciphertext to form the IP packet for transmission. Authentication is
added if this option is selected.
[Word Count: 46]

2. The packet is then routed to the destination. Each intermediate router needs to
examine and process the IP header plus any plaintext IP extension headers but
does not need to examine the ciphertext.
[Word Count: 34]

3. The destination node examines and processes the IP header plus any plaintext
IP extension headers. Then, on the basis of the SPI in the ESP header, the
destination node decrypts the remainder of the packet to recover the plaintext
transport-layer segment.
[Word Count: 42]

Transport mode operation provides confidentiality for any application that
uses it, thus avoiding the need to implement confidentiality in every individual
application. One drawback to this mode is that it is possible to do traffic analysis on
the transmitted packets.
[Word Count: 40]

the external host and the firewalls.The following steps occur for transfer of a trans-
port-layer segment from the external host to the internal host.
[Word Count: 24]

1. The source prepares an inner IP packet with a destination address of the
target internal host. This packet is prefixed by an ESP header; then the
packet and ESP trailer are encrypted and Authentication Data may
be added. The resulting block is encapsulated with a new IP header (base
header plus optional extensions such as routing and hop-by-hop options for
IPv6) whose destination address is the firewall; this forms the outer IP
packet.
[Word Count: 74]

2. The outer packet is routed to the destination firewall. Each intermediate
router needs to examine and process the outer IP header plus any outer IP
extension headers but does not need to examine the ciphertext.
[Word Count: 36]

3. The destination firewall examines and processes the outer IP header plus
any outer IP extension headers. Then, on the basis of the SPI in the ESP
header, the destination node decrypts the remainder of the packet to
recover the plaintext inner IP packet. This packet is then transmitted in the
internal network.
[Word Count: 53]

4. The inner packet is routed through zero or more routers in the internal
network to the destination host.
[Word Count: 19]

Figure 8.9 shows the protocol architecture for the two modes.
[Word Count: 10]

• Transport adjacency: Refers to applying more than one security protocol to
the same IP packet without invoking tunneling. This approach to combining
AH and ESP allows for only one level of combination; further nesting yields
no added benefit since the processing is performed at one IPsec instance: the
(ultimate) destination.
[Word Count: 51]

• Iterated tunneling: Refers to the application of multiple layers of security
protocols effected through IP tunneling. This approach allows for multiple
levels of nesting, since each tunnel can originate or terminate at a different
IPsec site along the path.
[Word Count: 40]

8.4 / COMBINING SECURITY ASSOCIATIONS 289
[Word Count: 6]

TCP
hdr
Data
ESP
trlr
ESP
hdr
Orig IP
hdr
[Word Count: 10]

New IP
hdr
TCP
hdr
Data
ESP
trlr
ESP
hdr
Orig IP
hdr
ESP
auth
[Word Count: 15]

The two approaches can be combined, for example, by having a transport SA
between hosts travel part of the way through a tunnel SA between security gateways.
One interesting issue that arises when considering SA bundles is the order in
which authentication and encryption may be applied between a given pair of endpoints
and the ways of doing so.We examine that issue next.Then we look at combinations of
SAs that involve at least one tunnel.
[Word Count: 75]

Encryption and authentication can be combined in order to transmit an IP packet
that has both confidentiality and authentication between hosts. We look at several
approaches.
[Word Count: 26]

ESP WITH AUTHENTICATION OPTION This approach is illustrated in Figure 8.8. In
this approach, the user first applies ESP to the data to be protected and then
appends the authentication data field.There are actually two subcases:
[Word Count: 36]

• Transport mode ESP: Authentication and encryption apply to the IP payload
delivered to the host, but the IP header is not protected.
[Word Count: 23]

• Tunnel mode ESP: Authentication applies to the entire IP packet delivered
to the outer IP destination address (e.g., a firewall), and authentication is
performed at that destination. The entire inner IP packet is protected by the
privacy mechanism for delivery to the inner IP destination.
[Word Count: 46]

For both cases, authentication applies to the ciphertext rather than the plaintext.
[Word Count: 12]

Basic Combinations of Security Associations
[Word Count: 5]

The IPsec Architecture document lists four examples of combinations of SAs that
must be supported by compliant IPsec hosts (e.g., workstation, server) or security
gateways (e.g. firewall, router).These are illustrated in Figure 8.10.The lower part of
[Word Count: 36]

Figure 8.10
Basic Combinations of Security Associations
[Word Count: 7]

each case in the figure represents the physical connectivity of the elements; the
upper part represents logical connectivity via one or more nested SAs. Each SA can
be either AH or ESP. For host-to-host SAs, the mode may be either transport or
tunnel; otherwise it must be tunnel mode.
Case 1. All security is provided between end systems that implement IPsec.
For any two end systems to communicate via an SA, they must share the appropri-
ate secret keys.Among the possible combinations are
[Word Count: 83]

c. ESP followed by AH in transport mode (an ESP SA inside an AH SA)
[Word Count: 15]

d. Any one of a, b, or c inside an AH or ESP in tunnel mode
[Word Count: 16]

The key management portion of IPsec involves the determination and distribution of
secret keys. A typical requirement is four keys for communication between two
applications: transmit and receive pairs for both integrity and confidentiality. The
IPsec Architecture document mandates support for two types of key management:
[Word Count: 46]

• Manual: A system administrator manually configures each system with its
own keys and with the keys of other communicating systems. This is practical
for small, relatively static environments.
[Word Count: 29]

• Automated: An automated system enables the on-demand creation of keys
for SAs and facilitates the use of keys in a large distributed system with an
evolving configuration.
[Word Count: 28]

The default automated key management protocol for IPsec is referred to as
ISAKMP/Oakley and consists of the following elements:
[Word Count: 19]

• Oakley Key Determination Protocol: Oakley is a key exchange protocol based
on the Diffie-Hellman algorithm but providing added security. Oakley is
generic in that it does not dictate specific formats.
[Word Count: 31]

• Internet Security Association and Key Management Protocol (ISAKMP):
ISAKMP provides a framework for Internet key management and provides the
specific protocol support,including formats,for negotiation of security attributes.
[Word Count: 28]

ISAKMP by itself does not dictate a specific key exchange algorithm; rather,
ISAKMP consists of a set of message types that enable the use of a variety of key
exchange algorithms. Oakley is the specific key exchange algorithm mandated for
use with the initial version of ISAKMP.
In IKEv2, the terms Oakley and ISAKMP are no longer used, and there are
significant differences from the use of Oakley and ISAKMP in IKEv1. Nevertheless,
the basic functionality is the same.In this section,we describe the IKEv2 specification.
[Word Count: 85]

IKE key determination is a refinement of the Diffie-Hellman key exchange algo-
rithm. Recall that Diffie-Hellman involves the following interaction between users
A and B. There is prior agreement on two global parameters: , a large prime num-
ber; and , a primitive root of .A selects a random integer 
as its private key and
transmits to B its public key 
. Similarly, B selects a random integer
as its private key and transmits to A its public key 
. Each side
can now compute the secret session key:
[Word Count: 89]

The Diffie-Hellman algorithm has two attractive features:
[Word Count: 7]

• Secret keys are created only when needed. There is no need to store secret
keys for a long period of time, exposing them to increased vulnerability.
• The exchange requires no pre-existing infrastructure other than an agreement
on the global parameters.
[Word Count: 42]

However, there are a number of weaknesses to Diffie-Hellman, as pointed out in
[HUIT98].
[Word Count: 14]

• It does not provide any information about the identities of the parties.
[Word Count: 13]

• It is subject to a man-in-the-middle attack, in which a third party C imperson-
ates B while communicating with A and impersonates A while communicating
with B. Both A and B end up negotiating a key with C, which can then listen to
and pass on traffic.The man-in-the-middle attack proceeds as
1. B sends his public key 
in a message addressed to A (see Figure 3.13).
[Word Count: 67]

2. The enemy (E) intercepts this message. E saves B’s public key and sends a
message to A that has B’s User ID but E’s public key 
. This message is
YE
[Word Count: 32]

K = (B)XA mod q = (A)XB mod q = aXAXB mod q
[Word Count: 13]

B = aXB mod q
XB
A = aXA mod q
XA
q
a
q
[Word Count: 15]

sent in such a way that it appears as though it was sent from B’s host system.
A receives E’s message and stores E’s public key with B’s User ID. Similarly,
E sends a message to B with E’s public key, purporting to come from A.
[Word Count: 46]

3. B computes a secret key 
based on B’s private key and 
.A computes a
secret key 
based on A’s private key and 
. E computes 
using E’s
secret key 
and 
and computers 
using 
and 
.
[Word Count: 36]

4. From now on, E is able to relay messages from A to B and from B to A,
appropriately changing their encipherment en route in such a way that
neither A nor B will know that they share their communication with E.
[Word Count: 43]

• It is computationally intensive.As a result, it is vulnerable to a clogging attack,
in which an opponent requests a high number of keys. The victim spends
considerable computing resources doing useless modular exponentiation
rather than real work.
[Word Count: 38]

IKE key determination is designed to retain the advantages of Diffie-
Hellman, while countering its weaknesses.
[Word Count: 16]

FEATURES OF IKE KEY DETERMINATION The IKE key determination algorithm is
characterized by five important features:
[Word Count: 16]

1. It employs a mechanism known as cookies to thwart clogging attacks.
[Word Count: 12]

2. It enables the two parties to negotiate a group;this,in essence,specifies the global
parameters of the Diffie-Hellman key exchange.
[Word Count: 19]

3. It uses nonces to ensure against replay attacks.
[Word Count: 9]

4. It enables the exchange of Diffie-Hellman public key values.
[Word Count: 10]

5. It authenticates the Diffie-Hellman exchange to thwart man-in-the-middle
attacks.
[Word Count: 10]

1. The cookie must depend on the specific parties.This prevents an attacker from
obtaining a cookie using a real IP address and UDP port and then using it to
swamp the victim with requests from randomly chosen IP addresses or ports.
[Word Count: 41]

2. It must not be possible for anyone other than the issuing entity to generate cook-
ies that will be accepted by that entity.This implies that the issuing entity will use
local secret information in the generation and subsequent verification of a
[Word Count: 42]

cookie. It must not be possible to deduce this secret information from any partic-
ular cookie.The point of this requirement is that the issuing entity need not save
copies of its cookies, which are then more vulnerable to discovery, but can verify
an incoming cookie acknowledgment when it needs to.
[Word Count: 50]

3. The cookie generation and verification methods must be fast to thwart attacks
intended to sabotage processor resources.
[Word Count: 18]

The recommended method for creating the cookie is to perform a fast hash
(e.g., MD5) over the IP Source and Destination addresses, the UDP Source and
Destination ports, and a locally generated secret value.
IKE key determination supports the use of different groups for the Diffie-
Hellman key exchange. Each group includes the definition of the two global parame-
ters and the identity of the algorithm.The current specification includes the following
groups.
[Word Count: 72]

• Modular exponentiation with a 768-bit modulus
[Word Count: 7]

• Modular exponentiation with a 1024-bit modulus
[Word Count: 7]

• Modular exponentiation with a 1536-bit modulus
[Word Count: 7]

• Elliptic curve parameters (hexadecimal):
• Elliptic curve group over
[Word Count: 10]

• Elliptic curve parameters (hexadecimal):
[Word Count: 5]

The first three groups are the classic Diffie-Hellman algorithm using modular
exponentiation.The last two groups use the elliptic curve analog to Diffie-Hellman,
which was described in Chapter 3.
IKE key determination employs nonces to ensure against replay attacks. Each
nonce is a locally generated pseudorandom number. Nonces appear in responses
and are encrypted during certain portions of the exchange to secure their use.
Three different authentication methods can be used with IKE key determination:
[Word Count: 74]

• Digital signatures: The exchange is authenticated by signing a mutually
obtainable hash; each party encrypts the hash with its private key. The hash is
generated over important parameters, such as user IDs and nonces.
[Word Count: 35]

• Public-key encryption: The exchange is authenticated by encrypting parame-
ters such as IDs and nonces with the sender’s private key.
[Word Count: 21]

q = 21024 - 2960 - 1 + 264 * (:2894 * p; + 129093)
[Word Count: 15]

q = 2768 - 2704 - 1 + 264 * (:2638 * p; + 149686)
[Word Count: 15]

• Symmetric-key encryption: A key derived by some out-of-band mechanism
can be used to authenticate the exchange by symmetric encryption of exchange
parameters.
[Word Count: 23]

HDR, SK {IDi, [CERT,] [CERTREQ,] [IDr,] AUTH, SAi2, TSi, TSr}
[Word Count: 10]

HDR, SK {IDr, [CERT,] AUTH, SAr2, TSi, TSr}
[Word Count: 8]

HDR, SK {[N], SA, Ni, [KEi], [TSi, TSr]}
[Word Count: 8]

HDR = IKE header
SAx1 = offered and chosen algorithms, DH group
KEx = Diffie-Hellman public key
Nx= nonces
CERTREQ = Certificate request
IDx = identity
CERT = certificate
[Word Count: 29]

SK {...} = MAC and encrypt
AUTH = Authentication
SAx2 = algorithms, parameters for IPsec SA
TSx = traffic selectors for IPsec SA
N = Notify
D = Delete
CP = Configuration
[Word Count: 32]

The CREATE_CHILD_SA exchange can be used to establish further SAs for
protecting traffic. The informational exchange is used to exchange management
information, IKEv2 error messages, and other notifications.
[Word Count: 28]

IKE defines procedures and packet formats to establish, negotiate, modify, and
delete security associations. As part of SA establishment, IKE defines payloads for
exchanging key generation and authentication data.These payload formats provide
a consistent framework independent of the specific key exchange protocol, encryp-
tion algorithm, and authentication mechanism.
[Word Count: 48]

IKE HEADER FORMAT An IKE message consists of an IKE header followed by one or
more payloads.All of this is carried in a transport protocol.The specification dictates
that implementations must support the use of UDP for the transport protocol.
Figure 8.12a shows the header format for an IKE message. It consists of the
following fields.
[Word Count: 55]

• Initiator SPI (64 bits): A value chosen by the initiator to identify a unique
IKE security association (SA).
[Word Count: 19]

• Responder SPI (64 bits): A value chosen by the responder to identify a
unique IKE SA.
[Word Count: 17]

• Next Payload (8 bits): Indicates the type of the first payload in the message;
payloads are discussed in the next subsection.
[Word Count: 22]

• Major Version (4 bits): Indicates major version of IKE in use.
[Word Count: 12]

• Minor Version (4 bits): Indicates minor version in use.
[Word Count: 10]

MjVer
MnVer
Exchange Type
Flags
Next Payload
[Word Count: 7]

Initiator’s Security Parameter Index (SPI)
[Word Count: 5]

Responder’s Security Parameter Index (SPI)
[Word Count: 5]

Key Exchange
DH Group #, Key Exchange Data
[Word Count: 8]

Certificate
Cert Encoding, Certificate Data
[Word Count: 5]

Certificate Request
Cert Encoding, Certification Authority
[Word Count: 6]

Authentication
Auth Method,Authentication Data
[Word Count: 4]

Notify
Protocol-ID, SPI Size, Notify Message Type, SPI, Notification Data
[Word Count: 10]

Delete
Protocol-ID, SPI Size, # of SPIs, SPI (one or more)
[Word Count: 11]

Traffic Selector
Number of TSs,Traffic Selectors
[Word Count: 6]

Encrypted
IV, Encrypted IKE payloads, Padding, Pad Length, ICV
[Word Count: 9]

Configuration
CFG Type, Configuration Attributes
[Word Count: 5]

• Exchange Type (8 bits): Indicates the type of exchange; these are discussed
later in this section.
[Word Count: 17]

• Flags (8 bits): Indicates specific options set for this IKE exchange.Three bits are
defined so far.The initiator bit indicates whether this packet is sent by the SA ini-
tiator. The version bit indicates whether the transmitter is capable of using a
higher major version number than the one currently indicated. The response bit
indicates whether this is a response to a message containing the same message ID.
[Word Count: 68]

• Message ID (32 bits): Used to control retransmission of lost packets and
matching of requests and responses.
[Word Count: 18]

• Length (32 bits): Length of total message (header plus all payloads) in octets.
[Word Count: 14]

the establishment of an SA. The payload has a complex, hierarchical structure. The
payload may contain multiple proposals. Each proposal may contain multiple proto-
cols. Each protocol may contain multiple transforms. And each transform may
contain multiple attributes. These elements are formatted as substructures within
the payload as follows.
[Word Count: 49]

• Proposal: This substructure includes a proposal number, a protocol ID
(AH, ESP, or IKE), an indicator of the number of transforms, and then a
transform substructure. If more than one protocol is to be included in a
proposal, then there is a subsequent proposal substructure with the same pro-
posal number.
[Word Count: 52]

• Transform: Different protocols support different transform types. The trans-
forms are used primarily to define cryptographic algorithms to be used with a
particular protocol.
[Word Count: 25]

• Attribute: Each transform may include attributes that modify or complete the
specification of the transform.An example is key length.
[Word Count: 20]

• DNS signed key
• X.509 certificate—signature
• X.509 certificate—key exchange
[Word Count: 11]

• Certificate Revocation List (CRL)
• Authority Revocation List (ARL)
• SPKI certificate
[Word Count: 13]

At any point in an IKE exchange, the sender may include a Certificate
Request payload to request the certificate of the other communicating entity. The
payload may list more than one certificate type that is acceptable and more than
one certificate authority that is acceptable.
The Authentication payload contains data used for message authentication
purposes.The authentication method types so far defined are RSA digital signature,
shared-key message integrity code, and DSS digital signature.
[Word Count: 73]

Invalid Payload Type
NAT Detection Destination IP
[Word Count: 7]

No Proposal Chosen
HTTP Cert Lookup Supported
[Word Count: 7]

Authentication Failed
ESP TFC Padding Not Supported
[Word Count: 7]

Single Pair Required
Non First Fragments Also
[Word Count: 7]

The Nonce payload contains random data used to guarantee liveness during
an exchange and to protect against replay attacks.
The Notify payload contains either error or status information associated
with this SA or this SA negotiation. The following table lists the IKE notify
messages.
[Word Count: 44]

Table 8.4
Cryptographic Suites for IPsec
[Word Count: 6]

ESP encryption
3DES-CBC
AES-CBC (128-bit key)
[Word Count: 6]

ESP integrity
HMAC-SHA1-96
AES-XCBC-MAC-96
[Word Count: 4]

IKE encryption
3DES-CBC
AES-CBC (128-bit key)
[Word Count: 6]

IKE Integrity
HMAC-SHA1-96
AES-XCBC-MAC-96
[Word Count: 4]

IKE DH group
1024-bit MODP
2048-bit MODP
[Word Count: 7]

ESP integrity
Null
Null
AES-GMAC 
(128-bit key)
[Word Count: 7]

IKE PRF
HMAC-SHA-256
HMAC-SHA-384
HMAC-SHA-256
HMAC-SHA-384
[Word Count: 6]

IKE authentication
ECDSA-256
ECDSA-384
ECDSA-256
ECDSA-384
[Word Count: 6]

cryptography, VPN-A relies on 3DES and HMAC, while VPN-B relies exclu-
sively on AES. Three types of secret-key algorithms are used:
[Word Count: 21]

• Encryption: For encryption, the cipher block chaining (CBC) mode is used.
[Word Count: 12]

• Message authentication: For message authentication,VPN-A relies on HMAC
with SHA-1 with the output truncated to 96 bits. VPN-B relies on a variant of
CMAC with the output truncated to 96 bits.
[Word Count: 32]

• Pseudorandom function: IKEv2 generates pseudorandom bits by repeated
use of the MAC used for message authentication.
[Word Count: 17]

• Encryption: For ESP, authenticated encryption is provided using the GCM
mode with either 128-bit or 256-bit AES keys. For IKE encryption, CBC is
used, as it was for the VPN suites.
[Word Count: 32]

• Message authentication: For ESP, if only authentication is required, then
GMAC is used. GMAC is a message authentication code algorithm based on
the CRT mode of operation discussed in Chapter 2. For IKE, message authen-
tication is provided using HMAC with one of the SHA-3 hash functions.
[Word Count: 48]

• Pseudorandom function: As with the VPN suites, IKEv2 in these suites gener-
ates pseudorandom bits by repeated use of the MAC used for message
authentication.
[Word Count: 26]

For the Diffie-Hellman algorithm, the use of elliptic curve groups modulo a
prime is specified. For authentication, elliptic curve digital signatures are listed.The
original IKEv2 documents used RSA-based digital signatures. Equivalent or greater
strength can be achieved using ECC with fewer key bits.
[Word Count: 43]

IPv6 and IPv4 are covered in more detail in [STAL07]. [CHEN98] provides a good
discussion of an IPsec design. [FRAN05] is a more comprehensive treatment of IPsec.
[PATE06] is a useful overview of IPsecv3 and IKEv2 with an emphasis on cryptographic
aspects.
[Word Count: 42]

8.8 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 303
[Word Count: 9]

• NIST IPsec Project: Contains papers, presentations, and reference implemen-
tations.
[Word Count: 11]

• IPsec Maintenance and Extensions Charter: Latest RFCs and internet drafts
for IPsec.
[Word Count: 13]

8.8
KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

anti-replay service
Authentication Header (AH)
Encapsulating Security
Payload (ESP)
Internet Security Association
and Key Management
Protocol (ISAKMP)
[Word Count: 17]

Internet Key Exchange (IKE)
IP Security (IPsec)
IPv4
IPv6
Oakley key determination
protocol
[Word Count: 13]

replay attack
security association (SA)
transport mode
tunnel mode
[Word Count: 9]

8.1
Give examples of applications of IPsec.
8.2
What services are provided by IPsec?
8.3
What parameters identify an SA and what parameters characterize the nature of a
particular SA?
8.4
What is the difference between transport mode and tunnel mode?
8.5
What is a replay attack?
8.6
Why does ESP include a padding field?
8.7
What are the basic approaches to bundling SAs?
8.8
What are the roles of the Oakley key determination protocol and ISAKMP
in IPsec?
[Word Count: 79]

CHEN98
Cheng, P., et al. “A Security Architecture for the Internet Protocol.” IBM
Systems Journal, Number 1, 1998.
FRAN05
Frankel, S., et al. Guide to IPsec VPNs. NIST SP 800-77, 2005.
PATE06
Paterson, K. “A Cryptographic Tour of the IPsec Standards.” “ Cryptology
ePrint Archive: Report 2006/097,April 2006.
STAL07
Stallings, W. Data and Computer Communications, Eighth Edition. Upper
Saddle River, NJ: Prentice Hall, 2007.
[Word Count: 64]

Intruder Behavior Patterns
Intrusion Techniques
[Word Count: 5]

Audit Records
Statistical Anomaly Detection
Rule-Based Intrusion Detection
The Base-Rate Fallacy
Distributed Intrusion Detection
Honeypots
Intrusion Detection Exchange Format
[Word Count: 19]

Password Protection
Password Selection Strategies
[Word Count: 5]

9.5
Key Terms, Review Questions, and Problems
[Word Count: 7]

They agreed that Graham should set the test for Charles Mabledene. It was nei-
ther more nor less than that Dragon should get Stern’s code. If he had the ‘in’ at
Utting which he claimed to have this should be possible, only loyalty to Moscow
Centre would prevent it. If he got the key to the code he would prove his loyalty
to London Central beyond a doubt.
[Word Count: 68]

◆
Unauthorized intrusion into a computer system or network is one of the
most serious threats to computer security.
[Word Count: 19]

◆
Intrusion detection systems have been developed to provide early warning
of an intrusion so that defensive action can be taken to prevent or mini-
mize damage.
[Word Count: 27]

◆
Intrusion detection involves detecting unusual patterns of activity or
patterns of activity that are known to correlate with intrusions.
[Word Count: 20]

◆
One important element of intrusion prevention is password management,
with the goal of preventing unauthorized users from having access to the
passwords of others.
[Word Count: 25]

One of the two most publicized threats to security is the intruder (the other is
viruses), often referred to as a hacker or cracker. In an important early study of
intrusion,Anderson [ANDE80] identified three classes of intruders:
[Word Count: 37]

• Masquerader: An individual who is not authorized to use the computer and
who penetrates a system’s access controls to exploit a legitimate user’s account
[Word Count: 25]

• Misfeasor: A legitimate user who accesses data, programs, or resources for
which such access is not authorized, or who is authorized for such access but
misuses his or her privileges
[Word Count: 31]

• Clandestine user: An individual who seizes supervisory control of the system
and uses this control to evade auditing and access controls or to suppress audit
collection
[Word Count: 27]

The masquerader is likely to be an outsider; the misfeasor generally is an insider;
and the clandestine user can be either an outsider or an insider.
Intruder attacks range from the benign to the serious.At the benign end of the
scale, there are many people who simply wish to explore internets and see what is
out there. At the serious end are individuals who are attempting to read privileged
data, perform unauthorized modifications to data, or disrupt the system.
[GRAN04] lists the following examples of intrusion:
[Word Count: 86]

• Performing a remote root compromise of an e-mail server
[Word Count: 10]

• Copying a database containing credit card numbers
[Word Count: 8]

• Viewing sensitive data, including payroll records and medical information,
without authorization
• Running a packet sniffer on a workstation to capture usernames and pass-
words
• Using a permission error on an anonymous FTP server to distribute pirated
software and music files
[Word Count: 43]

• Dialing into an unsecured modem and gaining internal network access
• Posing as an executive, calling the help desk, resetting the executive’s e-mail
password, and learning the new password
[Word Count: 30]

• Using an unattended, logged-in workstation without permission
[Word Count: 8]

The techniques and behavior patterns of intruders are constantly shifting, to exploit
newly discovered weaknesses and to evade detection and countermeasures. Even
so, intruders typically follow one of a number of recognizable behavior patterns, and
these patterns typically differ from those of ordinary users. In the following, we look
[Word Count: 49]

Table 9.1
Some Examples of Intruder Patterns of Behavior
[Word Count: 9]

1. Select the target using IP lookup tools such as NSLookup, Dig, and others.
[Word Count: 14]

2. Map network for accessible services using tools such as NMAP.
[Word Count: 11]

3. Identify potentially vulnerable services (in this case, pcAnywhere).
[Word Count: 9]

4. Brute force (guess) pcAnywhere password.
[Word Count: 6]

5. Install remote administration tool called DameWare.
[Word Count: 7]

6. Wait for administrator to log on and capture his password.
[Word Count: 11]

7. Use that password to access remainder of network.
[Word Count: 9]

1. Act quickly and precisely to make their activities harder to detect.
[Word Count: 12]

2. Exploit perimeter through vulnerable ports.
[Word Count: 6]

3. Use Trojan horses (hidden software) to leave back doors for reentry.
[Word Count: 12]

1. Create network accounts for themselves and their friends.
[Word Count: 9]

2. Access accounts and applications they wouldn’t normally use for their daily jobs.
[Word Count: 13]

3. E-mail former and prospective employers.
[Word Count: 6]

4. Conduct furtive instant-messaging chats.
[Word Count: 5]

5. Visit Web sites that cater to disgruntled employees, such as f’dcompany.com.
[Word Count: 12]

6. Perform large downloads and file copying.
[Word Count: 7]

at three broad examples of intruder behavior patterns, to give the reader some feel
for the challenge facing the security administrator. Table 9.1, based on [RADC04],
summarizes the behavior.
[Word Count: 29]

INSIDER ATTACKS Insider attacks are among the most difficult to detect and prevent.
Employees already have access and knowledge about the structure and content of
corporate databases. Insider attacks can be motivated by revenge or simply a feeling
of entitlement. An example of the former is the case of Kenneth Patterson, fired
from his position as data communications manager for American Eagle Outfitters.
Patterson disabled the company’s ability to process credit card purchases during
five days of the holiday season of 2002. As for a sense of entitlement, there have
[Word Count: 90]

• Enforce least privilege, only allowing access to the resources employees need
to do their job.
[Word Count: 16]

• Set logs to see what users access and what commands they are entering.
[Word Count: 14]

• Protect sensitive resources with strong authentication.
[Word Count: 7]

• Upon termination, delete employee’s computer and network access.
[Word Count: 9]

• Upon termination, make a mirror image of employee’s hard drive before reis-
suing it.That evidence might be needed if your company information turns up
at a competitor.
[Word Count: 28]

In this section, we look at the techniques used for intrusion.Then we examine
ways to detect intrusion.
[Word Count: 17]

• One-way function: The system stores only the value of a function based on the
user’s password. When the user presents a password, the system transforms
that password and compares it with the stored value. In practice, the system
usually performs a one-way transformation (not reversible) in which the
password is used to generate a key for the one-way function and in which a
fixed-length output is produced.
• Access control: Access to the password file is limited to one or a very few
accounts.
[Word Count: 85]

If one or both of these countermeasures are in place, some effort is needed for
a potential intruder to learn passwords. On the basis of a survey of the literature and
[Word Count: 31]

interviews with a number of password crackers, [ALVA90] reports the following
techniques for learning passwords:
[Word Count: 15]

1. Try default passwords used with standard accounts that are shipped with the
system. Many administrators do not bother to change these defaults.
[Word Count: 23]

2. Exhaustively try all short passwords (those of one to three characters).
[Word Count: 12]

3. Try words in the system’s online dictionary or a list of likely passwords.Examples
of the latter are readily available on hacker bulletin boards.
[Word Count: 24]

4. Collect information about users, such as their full names, the names of their
spouse and children, pictures in their office, and books in their office that are
related to hobbies.
[Word Count: 31]

5. Try users’ phone numbers, Social Security numbers, and room numbers.
[Word Count: 11]

6. Try all legitimate license plate numbers for this state.
[Word Count: 10]

7. Use a Trojan horse (described in Chapter 10) to bypass restrictions on access.
[Word Count: 14]

8. Tap the line between a remote user and the host system.
[Word Count: 12]

Inevitably, the best intrusion prevention system will fail. A system’s second line of
defense is intrusion detection, and this has been the focus of much research in
recent years.This interest is motivated by a number of considerations, including the
following:
[Word Count: 40]

1. If an intrusion is detected quickly enough, the intruder can be identified and
ejected from the system before any damage is done or any data are compro-
mised. Even if the detection is not sufficiently timely to preempt the intruder,
the sooner that the intrusion is detected, the less the amount of damage and
the more quickly that recovery can be achieved.
[Word Count: 63]

2. An effective intrusion detection system can serve as a deterrent, so acting to pre-
vent intrusions.
[Word Count: 17]

3. Intrusion detection enables the collection of information about intrusion tech-
niques that can be used to strengthen the intrusion prevention facility.
[Word Count: 22]

Intrusion detection is based on the assumption that the behavior of the
intruder differs from that of a legitimate user in ways that can be quantified. Of
course, we cannot expect that there will be a crisp, exact distinction between an
attack by an intruder and the normal use of resources by an authorized user. Rather,
we must expect that there will be some overlap.
Figure 9.1 suggests, in very abstract terms, the nature of the task confronting
the designer of an intrusion detection system. Although the typical behavior of an
[Word Count: 91]

Overlap in observed
or expected behavior
[Word Count: 6]

Measurable behavior
parameter
Average behavior
of intruder
Average behavior
of authorized user
[Word Count: 12]

Figure 9.1
Profiles of Behavior of Intruders and Authorized Users
[Word Count: 10]

1. Statistical anomaly detection: Involves the collection of data relating to the
behavior of legitimate users over a period of time. Then statistical tests
are applied to observed behavior to determine with a high level of confidence
whether that behavior is not legitimate user behavior.
[Word Count: 45]

a. Threshold detection: This approach involves defining thresholds, inde-
pendent of user, for the frequency of occurrence of various events.
[Word Count: 20]

b. Profile based:A profile of the activity of each user is developed and used
to detect changes in the behavior of individual accounts.
[Word Count: 23]

2. Rule-based detection: Involves an attempt to define a set of rules that can be
used to decide that a given behavior is that of an intruder.
[Word Count: 27]

a. Anomaly detection: Rules are developed to detect deviation from previ-
ous usage patterns.
b. Penetration identification: An expert system approach that searches for
suspicious behavior.
[Word Count: 26]

A fundamental tool for intrusion detection is the audit record. Some record of
ongoing activity by users must be maintained as input to an intrusion detection
system. Basically, two plans are used:
[Word Count: 32]

• Native audit records: Virtually all multiuser operating systems include
accounting software that collects information on user activity. The advantage
of using this information is that no additional collection software is needed.
The disadvantage is that the native audit records may not contain the needed
information or may not contain it in a convenient form.
[Word Count: 55]

• Detection-specific audit records: A collection facility can be implemented that
generates audit records containing only that information required by the
intrusion detection system. One advantage of such an approach is that it could
be made vendor independent and ported to a variety of systems. The disad-
vantage is the extra overhead involved in having, in effect, two accounting
packages running on a machine.
[Word Count: 64]

A good example of detection-specific audit records is one developed by
Dorothy Denning [DENN87]. Each audit record contains the following fields:
[Word Count: 21]

• Subject: Initiators of actions. A subject is typically a terminal user but might
also be a process acting on behalf of users or groups of users.All activity arises
through commands issued by subjects. Subjects may be grouped into different
access classes, and these classes may overlap.
[Word Count: 47]

• Action: Operation performed by the subject on or with an object; for example,
login, read, perform I/O, execute.
[Word Count: 19]

• Time-Stamp: Unique time-and-date stamp identifying when the action took
place.
[Word Count: 11]

Most user operations are made up of a number of elementary actions. For
example, a file copy involves the execution of the user command, which includes
doing access validation and setting up the copy, plus the read from one file, plus the
write to another file. Consider the command
[Word Count: 49]

issued by Smith to copy an executable file GAME from the current directory to the
<Library> directory.The following audit records may be generated:
[Word Count: 23]

In this case, the copy is aborted because Smith does not have write permission to
<Library>.
The decomposition of a user operation into elementary actions has three
advantages:
[Word Count: 28]

1. Because objects are the protectable entities in a system, the use of elementary
actions enables an audit of all behavior affecting an object. Thus, the system
can detect attempted subversions of access controls (by noting an abnormal-
ity in the number of exception conditions returned) and can detect successful
subversions by noting an abnormality in the set of objects accessible to the
subject.
[Word Count: 64]

2. Single-object, single-action audit records simplify the model and the implemen-
tation.
[Word Count: 12]

3. Because of the simple, uniform structure of the detection-specific audit
records, it may be relatively easy to obtain this information or at least part of
it by a straightforward mapping from existing native audit records to the
detection-specific audit records.
[Word Count: 41]

Smith
execute
<Library>COPY.EXE
0
CPU = 00002
11058721678
[Word Count: 8]

Smith
read
<Smith>GAME.EXE
0
RECORDS = 0
11058721679
[Word Count: 8]

Smith
execute
<Library>COPY.EXE
write-viol
RECORDS = 0
11058721680
[Word Count: 8]

determine the activity profile of the average user. Thus, the audit records serve to
define typical behavior. Second, current audit records are the input used to detect
intrusion. That is, the intrusion detection model analyzes incoming audit records to
determine deviation from average behavior.
Examples of metrics that are useful for profile-based intrusion detection are
the following:
[Word Count: 57]

• Counter: A nonnegative integer that may be incremented but not decre-
mented until it is reset by management action. Typically, a count of certain
event types is kept over a particular period of time. Examples include the
number of logins by a single user during an hour, the number of times a given
command is executed during a single user session, and the number of pass-
word failures during a minute.
[Word Count: 72]

• Gauge: A nonnegative integer that may be incremented or decremented.
Typically, a gauge is used to measure the current value of some entity.
Examples include the number of logical connections assigned to a user appli-
cation and the number of outgoing messages queued for a user process.
[Word Count: 48]

• Interval timer: The length of time between two related events. An example is
the length of time between successive logins to an account.
[Word Count: 24]

• Resource utilization: Quantity of resources consumed during a specified
period. Examples include the number of pages printed during a user session
and total time consumed by a program execution.
[Word Count: 30]

Given these general metrics, various tests can be performed to determine
whether current activity fits within acceptable limits. [DENN87] lists the following
approaches that may be taken:
[Word Count: 27]

Table 9.2
Measures That May Be Used for Intrusion Detection
[Word Count: 10]

Measure
Model
Type of Intrusion Detected
[Word Count: 6]

Intruders may be likely to log in during off-hours.
[Word Count: 9]

Frequency of login at different
locations
[Word Count: 6]

Intruders may log in from a location that a particu-
lar user rarely or never uses.
[Word Count: 16]

Time since last login
Operational
Break-in on a “dead” account.
[Word Count: 10]

Elapsed time per session
Mean and standard
deviation
[Word Count: 8]

Significant deviations might indicate masquerader.
[Word Count: 5]

Quantity of output to location
Mean and standard
deviation
[Word Count: 9]

Excessive amounts of data transmitted to remote
locations could signify leakage of sensitive data.
[Word Count: 14]

Session resource utilization
Mean and standard
deviation
[Word Count: 7]

Unusual processor or I/O levels could signal an
intruder.
[Word Count: 9]

Password failures at login
Operational
Attempted break-in by password guessing.
[Word Count: 10]

Failures to login from specified
terminals
[Word Count: 6]

Execution frequency
Mean and standard
deviation
[Word Count: 6]

May detect intruders, who are likely to use different
commands, or a successful penetration by a legiti-
mate user, who has gained access to privileged
commands.
[Word Count: 26]

Program resource utilization
Mean and standard
deviation
[Word Count: 7]

An abnormal value might suggest injection of a
virus or Trojan horse, which performs side-effects
that increase I/O or processor utilization.
[Word Count: 21]

Execution denials
Operational model
May detect penetration attempt by individual user
who seeks higher privileges.
[Word Count: 15]

Abnormalities for read and write access for individ-
ual users may signify masquerading or browsing.
[Word Count: 15]

Records read, written
Mean and standard
deviation
[Word Count: 7]

Abnormality could signify an attempt to obtain sen-
sitive data by inference and aggregation.
[Word Count: 14]

Failure count for read, write,
create, delete
[Word Count: 7]

Operational
May detect users who persistently attempt to access
unauthorized files.
[Word Count: 11]

system administrators and security analysts to collect a suite of known penetration
scenarios and key events that threaten the security of the target system.
A simple example of the type of rules that can be used is found in NIDX, an
early system that used heuristic rules that can be used to assign degrees of suspicion
to activities [BAUE88]. Example heuristics are the following:
[Word Count: 64]

1. Users should not read files in other users’ personal directories.
[Word Count: 11]

2. Users must not write other users’ files.
[Word Count: 8]

3. Users who log in after hours often access the same files they used earlier.
[Word Count: 15]

4. Users do not generally open disk devices directly but rely on higher-level operat-
ing system utilities.
[Word Count: 17]

5. Users should not be logged in more than once to the same system.
[Word Count: 14]

6. Users do not make copies of system programs.
[Word Count: 9]

Table 9.3
USTAT Actions versus SunOS Event Types
[Word Count: 8]

Read
open_r, open_rc, open_rtc, open_rwc, open_rwtc, open_rt, open_rw,
open_rwt
[Word Count: 9]

Write
truncate, ftruncate, creat, open_rtc, open_rwc, open_rwtc, open_rt,
open_rw, open_rwt, open_w, open_wt, open_wc, open_wct
[Word Count: 14]

Create
mkdir, creat, open_rc, open_rtc, open_rwc, open_rwtc, open_wc,
open_wtc, mknod
[Word Count: 10]

Until recently, work on intrusion detection systems focused on single-system stand-
alone facilities. The typical organization, however, needs to defend a distributed
collection of hosts supported by a LAN or internetwork. Although it is possible to
mount a defense by using stand-alone intrusion detection systems on each host, a
more effective defense can be achieved by coordination and cooperation among
intrusion detection systems across the network.
Porras points out the following major issues in the design of a distributed
intrusion detection system [PORR92]:
[Word Count: 83]

• A distributed intrusion detection system may need to deal with different audit
record formats. In a heterogeneous environment, different systems will
employ different native audit collection systems and, if using intrusion detec-
tion, may employ different formats for security-related audit records.
[Word Count: 42]

• One or more nodes in the network will serve as collection and analysis points
for the data from the systems on the network. Thus, either raw audit data or
summary data must be transmitted across the network. Therefore, there is a
requirement to assure the integrity and confidentiality of these data. Integrity
is required to prevent an intruder from masking his or her activities by altering
the transmitted audit information. Confidentiality is required because the
transmitted audit information could be valuable.
[Word Count: 82]

• Either a centralized or decentralized architecture can be used. With a central-
ized architecture, there is a single central point of collection and analysis of all
audit data. This eases the task of correlating incoming reports but creates a
potential bottleneck and single point of failure. With a decentralized architec-
ture, there are more than one analysis centers, but these must coordinate their
activities and exchange information.
[Word Count: 68]

Figure 9.2
Architecture for Distributed Intrusion Detection
[Word Count: 7]

A good example of a distributed intrusion detection system is one developed
at the University of California at Davis [HEBE92, SNAP91]. Figure 9.2 shows the
overall architecture, which consists of three main components:
[Word Count: 33]

• Host agent module: An audit collection module operating as a background
process on a monitored system. Its purpose is to collect data on security-
related events on the host and transmit these to the central manager.
[Word Count: 37]

• LAN monitor agent module: Operates in the same fashion as a host
agent module except that it analyzes LAN traffic and reports the results to the
central manager.
• Central manager module: Receives reports from LAN monitor and host
agents and processes and correlates these reports to detect intrusion.
[Word Count: 50]

Notable activity
Signatures
Noteworthy sessions
[Word Count: 5]

A relatively recent innovation in intrusion detection technology is the honeypot.
Honeypots are decoy systems that are designed to lure a potential attacker away
from critical systems. Honeypots are designed to
[Word Count: 31]

• divert an attacker from accessing critical systems
[Word Count: 8]

• collect information about the attacker’s activity
• encourage the attacker to stay on the system long enough for administrators
to respond
[Word Count: 22]

To facilitate the development of distributed intrusion detection systems that can
function across a wide range of platforms and environments, standards are needed
to support interoperability. Such standards are the focus of the IETF Intrusion
Detection Working Group. The purpose of the working group is to define data for-
mats and exchange procedures for sharing information of interest to intrusion
detection and response systems and to management systems that may need to inter-
act with them.The outputs of this working group include:
[Word Count: 82]

1. A requirements document, which describes the high-level functional require-
ments for communication between intrusion detection systems and requirements
for communication between intrusion detection systems and with management
systems, including the rationale for those requirements. Scenarios will be used to
illustrate the requirements.
[Word Count: 43]

2. A common intrusion language specification, which describes data formats that
satisfy the requirements.
3. A framework document, which identifies existing protocols best used for com-
munication between intrusion detection systems, and describes how the
devised data formats relate to them.
[Word Count: 41]

As of this writing,all of these documents are in an Internet-draft document stage.
[Word Count: 13]

The front line of defense against intruders is the password system. Virtually all
multiuser systems require that a user provide not only a name or identifier (ID) but
also a password. The password serves to authenticate the ID of the individual log-
ging on to the system. In turn, the ID provides security in the following ways:
[Word Count: 57]

• The ID determines whether the user is authorized to gain access to a system.
In some systems, only those who already have an ID filed on the system are
allowed to gain access.
[Word Count: 34]

• The ID determines the privileges accorded to the user. A few users may have
supervisory or “superuser” status that enables them to read files and perform
functions that are especially protected by the operating system. Some systems
have guest or anonymous accounts, and users of these accounts have more
limited privileges than others.
[Word Count: 54]

• The ID is used in what is referred to as discretionary access control. For exam-
ple, by listing the IDs of the other users, a user may grant permission to them
to read files owned by that user.
[Word Count: 39]

• It prevents duplicate passwords from being visible in the password file. Even if
two users choose the same password, those passwords will be assigned at dif-
ferent times. Hence, the “extended” passwords of the two users will differ.
[Word Count: 39]

• It effectively increases the length of the password without requiring the user
to remember two additional characters. Hence, the number of possible pass-
words is increased by a factor of 4096, increasing the difficulty of guessing a
password.
• It prevents the use of a hardware implementation of DES, which would ease
the difficulty of a brute-force guessing attack.
[Word Count: 60]

E(pwd, [salt, 0])
User id
User id
salt
Password File
[Word Count: 10]

Table 9.4
Observed Password Lengths [SPAF92a]
[Word Count: 6]

as frightening, is shown in Table 9.5. In all, nearly one-fourth of the passwords were
guessed.The following strategy was used:
[Word Count: 20]

1. Try the user’s name, initials, account name, and other relevant personal infor-
mation. In all, 130 different permutations for each user were tried.
2. Try words from various dictionaries. The author compiled a dictionary of over
60,000 words, including the online dictionary on the system itself, and various
other lists as shown.
[Word Count: 53]

Table 9.5
Passwords Cracked from a Sample Set of 13,797 Accounts [KLEI90]
[Word Count: 12]

Type of Password
Search Size
Number of
Matches
[Word Count: 8]

aComputed as the number of matches divided by the search size.The more words that needed to be tested for
a match, the lower the cost/benefit ratio.
[Word Count: 26]

3. Try various permutations on the words from step 2. This included making the
first letter uppercase or a control character, making the entire word uppercase,
reversing the word, changing the letter “o” to the digit “zero,” and so on. These
permutations added another 1 million words to the list.
[Word Count: 50]

4. Try various capitalization permutations on the words from step 2 that were not
considered in step 3. This added almost 2 million additional words to the list.
[Word Count: 28]

Thus, the test involved in the neighborhood of 3 million words. Using the fastest
Thinking Machines implementation listed earlier, the time to encrypt all these
words for all possible salt values is under an hour. Keep in mind that such a thor-
ough search could produce a success rate of about 25%, whereas even a single hit
may be enough to gain a wide range of privileges on a system.
[Word Count: 70]

ACCESS CONTROL One way to thwart a password attack is to deny the opponent
access to the password file. If the encrypted password portion of the file is accessible
only by a privileged user, then the opponent cannot read it without already knowing
the password of a privileged user. [SPAF92a] points out several flaws in this strategy:
[Word Count: 57]

• Many systems, including most UNIX systems, are susceptible to unanticipated
break-ins. Once an attacker has gained access by some means, he or she may
wish to obtain a collection of passwords in order to use different accounts for
different logon sessions to decrease the risk of detection. Or a user with
an account may desire another user’s account to access privileged data or to
sabotage the system.
[Word Count: 68]

• An accident of protection might render the password file readable, thus com-
promising all the accounts.
[Word Count: 17]

• Some of the users have accounts on other machines in other protection domains,
and they use the same password.Thus, if the passwords could be read by anyone
on one machine, a machine in another location might be compromised.
[Word Count: 39]

Thus, a more effective strategy would be to force users to select passwords that are
difficult to guess.
[Word Count: 18]

• All passwords must be at least eight characters long.
[Word Count: 10]

• In the first eight characters, the passwords must include at least one each of
uppercase, lowercase, numeric digits, and punctuation marks.
[Word Count: 22]

These rules could be coupled with advice to the user. Although this approach is
superior to simply educating users, it may not be sufficient to thwart password
crackers. This scheme alerts crackers as to which passwords not to try but may still
make it possible to do password cracking.
Another possible procedure is simply to compile a large dictionary of possible
“bad” passwords. When a user selects a password, the system checks to make sure
that it is not on the disapproved list.There are two problems with this approach:
[Word Count: 89]

• Space: The dictionary must be very large to be effective. For example, the dic-
tionary used in the Purdue study [SPAF92a] occupies more than 30 megabytes
of storage.
[Word Count: 29]

• Time: The time required to search a large dictionary may itself be large. In
addition, to check for likely permutations of dictionary words, either those
words most be included in the dictionary, making it truly huge, or each search
must also involve considerable processing.
[Word Count: 45]

e.g., string probably from this language: abbcacaba
[Word Count: 7]

e.g., string probably not from this language: aacccbaaa
[Word Count: 8]

In general, a Markov model is a quadruple 
, where 
is the number
of states in the model,
is the state space,
is the matrix of transition probabilities,
and 
is the order of the model. For a kth-order model, the probability of making a
transition to a particular letter depends on the previous letters that have been gen-
erated. Figure 9.5 shows a simple first-order model.
The authors report on the development and use of a second-order model. To
begin, a dictionary of guessable passwords is constructed.Then the transition matrix
is calculated as follows:
[Word Count: 94]

1. Determine the frequency matrix f, where 
is the number of occurrences
of the trigram consisting of the ith, jth, and kth character. For example, the
password parsnips yields the trigrams par, ars, rsn, sni, nip, and ips.
[Word Count: 38]

2. For each bigram , calculate 
as the total number of trigrams beginning
with .For example,
would be the total number of trigrams of the form
aba, abb, abc, and so on.
[Word Count: 32]

The following procedure is then applied to the dictionary:
[Word Count: 9]

1. A hash table of 
bits is defined, with all bits initially set to 0.
[Word Count: 15]

2. For each password, its hash values are calculated, and the corresponding bits
in the hash table are set to 1.Thus, if 
for some 
, then the sixty-
seventh bit of the hash table is set to 1; if the bit already has the value 1, it
remains at 1.
[Word Count: 50]

Hi(Xj) = y
1 … i … k;
1 … j … D;
0 … y … N - 1
[Word Count: 20]

When a new password is presented to the checker, its 
hash values are calcu-
lated. If all the corresponding bits of the hash table are equal to 1, then the password
is rejected. All passwords in the dictionary will be rejected. But there will also be
some “false positives” (that is, passwords that are not in the dictionary but that pro-
duce a match in the hash table). To see this, consider a scheme with two hash func-
tions. Suppose that the passwords undertaker and hulkhogan are in the dictionary,
but 
is not. Further suppose that
[Word Count: 96]

If the password 
is presented to the system, it will be rejected even
though it is not in the dictionary. If there are too many such false positives, it will be
difficult for users to select passwords. Therefore, we would like to design the hash
scheme to minimize false positives. It can be shown that the probability of a false
positive can be approximated by:
[Word Count: 65]

, ratio of hash table size (bits) to dictionary size (words)
[Word Count: 11]

H21undertaker2 = 998       H21hulkhogan2 = 665       H21xG%#jj982 = 998
[Word Count: 9]

H11undertaker2 = 25         H11hulkhogan2 = 83         H11xG%#jj982 = 665
[Word Count: 9]

1Both the Markov model and the Bloom filter involve the use of probabilistic techniques. In the case
of the Markov model, there is a small probability that some passwords in the dictionary will not be
caught and a small probability that some passwords not in the dictionary will be rejected. In the case
of the Bloom filter, there is a small probability that some passwords not in the dictionary will be
rejected.
[Word Count: 72]

9.4 / RECOMMENDED READING AND WEB SITES 333
[Word Count: 8]

Two thorough treatments of intrusion detection are [BACE00] and [PROC01]. A more
concise but very worthwhile treatment is [SCAR07]. Two short but useful survey articles on
the subject are [KENT00] and [MCHU00]. [NING04] surveys recent advances in intrusion
detection techniques. [HONE01] is the definitive account on honeypots and provides a
detailed analysis of the tools and methods of hackers.
[Word Count: 59]

20
15
10
5
0
Ratio of hash table size (bits) to dictionary size (words)
[Word Count: 15]

• CERT Coordination Center: The organization that grew from the computer
emergency response team formed by the Defense Advanced Research Projects
Agency. Site provides good information on Internet security threats, vulnerabilities,
and attack statistics.
[Word Count: 34]

• Packet Storm: Resource of up-to-date and historical security tools, exploits, and
advisories.
[Word Count: 13]

• Honeynet Project: A research project studying the techniques of predatory hackers
and developing honeypot products.
[Word Count: 16]

• Honeypots: A good collection of research papers and technical articles.
[Word Count: 11]

• Intrusion Detection Working Group: IETF group developing standards for exchange
formats and exchange procedures for intrusion detection systems. Includes RFCs and
Internet drafts.
[Word Count: 24]

• STAT Project: A research and open-source project at the University of California,
Santa Barbara that focuses on signature-based intrusion detection tools for hosts,
applications, and networks.
[Word Count: 27]

• Password Usage and Generation: NIST documents on this topic.
[Word Count: 10]

9.5
KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

audit record
Bayes’ Theorem
base-rate fallacy
honeypot
[Word Count: 7]

intruder
intrusion detection
intrusion detection exchange
format
[Word Count: 7]

password
rule-based intrusion detection
salt
statistical anomaly detection
[Word Count: 8]

9.1
List and briefly define three classes of intruders.
9.2
What are two common techniques used to protect a password file?
9.3
What are three benefits that can be provided by an intrusion detection system?
9.4
What is the difference between statistical anomaly detection and rule-based intrusion
detection?
9.5
What metrics are useful for profile-based intrusion detection?
9.6
What is the difference between rule-based anomaly detection and rule-based pene-
tration identification?
9.7
What is a honeypot?
9.8
What is a salt in the context of UNIX password management?
9.9
List and briefly define four techniques used to avoid guessable passwords.
[Word Count: 100]

9.5 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 335
[Word Count: 9]

9.1
In the context of an IDS, we define a false positive to be an alarm generated by an
IDS in which the IDS alerts to a condition that is actually benign. A false negative
occurs when an IDS fails to generate an alarm when an alert-worthy condition is in
effect. Using the following diagram, depict two curves that roughly indicate false
positives and false negatives, respectively.
[Word Count: 67]

More specific
or stricter
Less specific
or looser
[Word Count: 8]

a. YK 334
b. mfmitm (for “my favorite 
c. Natalie1
d. Washington
movie is tender mercies)
e. Aristotle f. tv9stove
g. 12345678
h. dribgib
[Word Count: 24]

a.
Show that the expected number of bits in the hash table that are equal to zero is
expressed as
[Word Count: 20]

b. Show that the probability that an input word, not in the dictionary, will be falsely
accepted as being in the dictionary is
[Word Count: 23]

c.
Show that the preceding expression can be approximated as
[Word Count: 10]

9.16
Design a file access system to allow certain users read and write access to a file,
depending on authorization set up by the system. The instructions should be of the
format:
[Word Count: 32]

READ (F, User A):
attempt by User A to read file F
READ (F, User A):
attempt by User A to store a possibly modified copy of F
[Word Count: 28]

Each file has a header record, which contains authorization privileges; that is, a list of
users who can read and write.The file is to be encrypted by a key that is not shared by
the users but known only to the system.
[Word Count: 42]

We begin with a review of important results from probability theory, then demon-
strate the base-rate fallacy.
[Word Count: 17]

Conditional Probability and Independence
[Word Count: 4]

where we assume 
is not zero.
In our example,
and 
. The quantity
encompasses all of those outcomes in which the sum is 8 and at least one
die
is even. As we have seen, there are three such outcomes. Thus,
. A moment’s thought should convince you that 
.
We can now calculate
Pr[B] = 3/4
Pr[AB] = 3/36 = 1/12
[Word Count: 62]

Pr[AB]
B = {at least one die even}
A = {sum of 8}
Pr[B]
[Word Count: 14]

Pr[A| B]
B
A
3/27 = 1/9
faces odd)] = 36-(3 * 3) = 27
[36-(number of events with both
[Word Count: 20]

This agrees with our previous reasoning.
Two events 
and 
are called independent if 
. It can eas-
ily be seen that if 
and 
are independent,
and 
.
[Word Count: 27]

One of the most important results from probability theory is known as Bayes’ theo-
rem. First we need to state the total probability formula. Given a set of mutually
exclusive events 
, such that the union of these events covers all possi-
ble outcomes, and given an arbitrary event , then it can be shown that
[Word Count: 56]

Bayes’ theorem may be stated as follows:
[Word Count: 7]

Pr[B|A] = Pr[B]
Pr[A|B] = Pr[A]
B
A
Pr[AB] = Pr[A]Pr[B]
B
A
[Word Count: 13]

(b) Example
(a) Diagram to illustrate concepts
[Word Count: 7]

Figure 9.7
Illustration of Total Probability and Bayes’ Theorem
[Word Count: 9]

calculate the conditional probability of an error, namely the conditional probability
that a one was sent given that a zero was received, using Bayes’ theorem:
[Word Count: 25]

Figure 9.7b illustrates the preceding equation.In the figure,the sample space is rep-
resented by a unit square. Half of the square corresponds to S0 and half to S1, so
.Similarly,half of the square corresponds to R0 and half to R1,so
.Within the area representing S0,1/4 of that area corresponds to
R1,so 
.Other conditional probabilities are similarly evident.
[Word Count: 57]

Consider the following situation. A patient has a test for some disease that comes
back positive (indicating he has the disease).You are told that
[Word Count: 24]

• The accuracy of the test is 87% (i.e., if a patient has the disease, 87% of the
time, the test yields the correct result, and if the patient does not have the dis-
ease, 87% of the time, the test yields the correct result).
[Word Count: 45]

• The incidence of the disease in the population is 1%.
[Word Count: 11]

Given that the test is positive, how probable is it that the patient does not have
the disease? That is, what is the probability that this is a false alarm? We need Bayes’
theorem to get the correct answer:
[Word Count: 39]

positive] = 0.09
Pr[well/
well] = 0.999
Pr[negative/
Pr[positive/disease] = 0.999
[Word Count: 11]

=  
(0.13)(0.99)
(0.87)(0.01) + (0.13)(0.99) = 0.937
[Word Count: 7]

Pr[well/positive] =  
Pr[positive/well]Pr[well]
Pr[positive/disease]Pr[disease] + Pr[positive/well]Pr[well]
[Word Count: 6]

Pr[R1/S0] = 0.25
Pr[R0] = Pr[R1] = 0.5
Pr[S0] = Pr[S1] = 0.5
[Word Count: 13]

Pr[S1 | R0] =  
Pr[R0 | S1]Pr[S1]
Pr[R0 | S1]Pr[S1] + Pr[R0 | S0]Pr[S0] =  
pa p
pap + (1 - pb)(1 - p)
[Word Count: 24]

Backdoor
Logic Bomb
Trojan Horses
Mobile Code
Multiple-Threat Malware
[Word Count: 9]

The Nature of Viruses
Viruses Classification
Virus Kits
Macro Viruses
E-Mail Viruses
[Word Count: 12]

Antivirus Approaches
Advanced Antivirus Techniques
[Word Count: 5]

The Morris Worm
Worm Propagation Model
Recent Worm Attacks
State of Worm Technology
Mobile Phone Worms
Worm Countermeasures
[Word Count: 18]

10.5 Distributed Denial Of Service Attacks
[Word Count: 6]

DDoS Attack Description
Constructing the Attack Network
DDoS Countermeasures
[Word Count: 9]

10.7 Key Terms, Review Questions, And Problems
[Word Count: 7]

What is the concept of defense: The parrying of a blow. What is its characteristic
feature: Awaiting the blow.
[Word Count: 19]

◆
Malicious software is software that is intentionally included or inserted in
a system for a harmful purpose.
[Word Count: 18]

◆
A virus is a piece of software that can “infect” other programs by modify-
ing them; the modification includes a copy of the virus program, which can
then go on to infect other programs.
[Word Count: 35]

◆
A worm is a program that can replicate itself and send copies from com-
puter to computer across network connections. Upon arrival, the worm
may be activated to replicate and propagate again. In addition to propaga-
tion, the worm usually performs some unwanted function.
[Word Count: 45]

◆
A denial of service (DoS) attack is an attempt to prevent legitimate users
of a service from using that service.
[Word Count: 21]

◆
A distributed denial of service attack is launched from multiple coordinated
sources.
[Word Count: 13]

The terminology in this area presents problems because of a lack of universal agree-
ment on all of the terms and because some of the categories overlap. Table 10.1 is a
useful guide.
Malicious software can be divided into two categories: those that need a host
program, and those that are independent. The former, referred to as parasitic, are
essentially fragments of programs that cannot exist independently of some
actual application program, utility, or system program. Viruses, logic bombs,
[Word Count: 79]

Table 10.1
Terminology of Malicious Programs
[Word Count: 6]

Virus
Malware that, when executed, tries to replicate itself into other executable code; when it
succeeds the code is said to be infected.When the infected code is executed, the virus also
executes.
[Word Count: 32]

Worm
A computer program that can run independently and can propagate a complete working
version of itself onto other hosts on a network.
[Word Count: 23]

Logic bomb
A program inserted into software by an intruder.A logic bomb lies dormant until a prede-
fined condition is met; the program then triggers an unauthorized act.
[Word Count: 28]

Trojan horse
A computer program that appears to have a useful function, but also has a hidden and
potentially malicious function that evades security mechanisms, sometimes by exploiting
legitimate authorizations of a system entity that invokes the Trojan horse program.
[Word Count: 40]

Any mechanism that bypasses a normal security check; it may allow unauthorized access
to functionality.
[Word Count: 15]

Mobile code
Software (e.g., script, macro, or other portable instruction) that can be shipped unchanged
to a heterogeneous collection of platforms and execute with identical semantics.
[Word Count: 26]

Exploits
Code specific to a single vulnerability or set of vulnerabilities.
[Word Count: 11]

Downloaders
Program that installs other items on a machine that is under attack. Usually, a downloader
is sent in an e-mail.
[Word Count: 21]

Auto-rooter
Malicious hacker tools used to break into new machines remotely.
[Word Count: 11]

Set of tools for generating new viruses automatically.
[Word Count: 8]

Used to send large volumes of unwanted e-mail.
[Word Count: 8]

Flooders
Used to attack networked computer systems with a large volume of traffic to carry out a
denial-of-service (DoS) attack.
[Word Count: 20]

Keyloggers
Captures keystrokes on a compromised system.
[Word Count: 7]

Rootkit
Set of hacker tools used after attacker has broken into a computer system and gained
root-level access.
[Word Count: 18]

Zombie, bot
Program activated on an infected machine that is activated to launch attacks on other
machines.
[Word Count: 17]

Spyware
Software that collects information from a computer and transmits it to another system.
[Word Count: 14]

Adware
Advertising that is integrated into software. It can result in pop-up ads or redirection of a
browser to a commercial site.
[Word Count: 22]

and backdoors are examples. Independent malware is a self-contained program
that can be scheduled and run by the operating system. Worms and bot programs
are examples.
We can also differentiate between those software threats that do not repli-
cate and those that do. The former are programs or fragments of programs that
are activated by a trigger. Examples are logic bombs, backdoors, and bot pro-
grams. The latter consist of either a program fragment or an independent
program that, when executed, may produce one or more copies of itself to be
[Word Count: 91]

activated later on the same system or some other system. Viruses and worms are
examples.
In the remainder of this section, we briefly survey some of the key categories
of malicious software, deferring discussion on the key topics of viruses and worms
until the following sections.
[Word Count: 46]

workers [GAUD00]. Ultimately, Lloyd was sentenced to 41 months in prison and
ordered to pay $2 million in restitution.
[Word Count: 19]

• Continuing to perform the function of the original program and additionally
performing a separate malicious activity
• Continuing to perform the function of the original program but modifying the
function to perform malicious activity (e.g., a Trojan horse version of a login
program that collects passwords) or to disguise other malicious activity (e.g., a
Trojan horse version of a process listing program that does not display certain
processes that are malicious)
[Word Count: 72]

• Performing a malicious function that completely replaces the function of the
original program
[Word Count: 14]

• E-mail: A user on a vulnerable host opens an infected e-mail attachment;
Nimda looks for e-mail addresses on the host and then sends copies of itself to
those addresses.
• Windows shares: Nimda scans hosts for unsecured Windows file shares; it can
then use NetBIOS86 as a transport mechanism to infect files on that host in
the hopes that a user will run an infected file, which will activate Nimda on
that host.
[Word Count: 74]

• Web servers: Nimda scans Web servers, looking for known vulnerabilities in
Microsoft IIS. If it finds a vulnerable server, it attempts to transfer a copy of
itself to the server and infect it and its files.
• Web clients: If a vulnerable Web client visits a Web server that has been
infected by Nimda, the client’s workstation will become infected.
[Word Count: 61]

Thus, Nimda has worm, virus, and mobile code characteristics. Blended attacks
may also spread through other services, such as instant messaging and peer-to-peer
file sharing.
[Word Count: 25]

• Infection mechanism: The means by which a virus spreads, enabling it to repli-
cate.The mechanism is also referred to as the infection vector.
[Word Count: 24]

• Trigger: The event or condition that determines when the payload is activated
or delivered.
[Word Count: 15]

• Payload: What the virus does, besides spreading. The payload may involve
damage or may involve benign but noticeable activity.
[Word Count: 20]

During its lifetime, a typical virus goes through the following four phases:
[Word Count: 12]

• Dormant phase: The virus is idle. The virus will eventually be activated by
some event, such as a date, the presence of another program or file, or the
capacity of the disk exceeding some limit. Not all viruses have this stage.
[Word Count: 42]

• Propagation phase: The virus places a copy of itself into other programs or into
certain system areas on the disk. The copy may not be identical to the propa-
gating version; viruses often morph to evade detection. Each infected program
will now contain a clone of the virus, which will itself enter a propagation phase.
[Word Count: 56]

• Triggering phase: The virus is activated to perform the function for which it
was intended. As with the dormant phase, the triggering phase can be caused
by a variety of system events, including a count of the number of times that
this copy of the virus has made copies of itself.
[Word Count: 52]

• Execution phase: The function is performed. The function may be harmless,
such as a message on the screen, or damaging, such as the destruction of
programs and data files.
[Word Count: 30]

Most viruses carry out their work in a manner that is specific to a particular oper-
ating system and, in some cases, specific to a particular hardware platform. Thus, they
are designed to take advantage of the details and weaknesses of particular systems.
[Word Count: 43]

subroutine infect-executable :
        {loop:
        file : get-random-executable-file;
        if (first-line-of-file  1234567)
            then goto loop
            else prepend V to file; }
[Word Count: 20]

subroutine do-damage :
        {whatever damage is to be done}
[Word Count: 9]

subroutine trigger-pulled :
        {return true if some condition holds}
[Word Count: 9]

main:     main-program :
              {infect-executable;
              if trigger-pulled then do-damage;
              goto next;}
next:
[Word Count: 11]

subroutine infect-executable :
                   {loop:
                            file : get-random-executable-file;
                   if (first-line-of-file  01234567) then goto loop;
             (1)    compress file;
             (2)    prepend CV to file;
             }
[Word Count: 23]

main:    main-program :
                    {if ask-permission then infect-executable;
             (3)    uncompress rest-of-file;
             (4)    run uncompressed file;}
             }
[Word Count: 15]

Figure 10.2
Logic for a Compression Virus
[Word Count: 7]

1. For each uninfected file P2 that is found, the virus first compresses that file to
produce 
, which is shorter than the original program by the size of the virus.
2. A copy of the virus is prepended to the compressed program.
[Word Count: 43]

3. The compressed version of the original infected program,
, is uncompressed.
[Word Count: 12]

4. The uncompressed original program is executed.
[Word Count: 7]

In this example, the virus does nothing other than propagate. As previously
mentioned, the virus may include a logic bomb.
[Word Count: 20]

There has been a continuous arms race between virus writers and writers of
antivirus software since viruses first appeared. As effective countermeasures are
developed for existing types of viruses, newer types are developed. There is no
simple or universally agreed upon classification scheme for viruses, In this section,
we follow [AYCO06] and classify viruses along two orthogonal axes: the type of
target the virus tries to infect and the method the virus uses to conceal itself from
detection by users and antivirus software.
A virus classification by target includes the following categories:
[Word Count: 92]

• Boot sector infector: Infects a master boot record or boot record and spreads
when a system is booted from the disk containing the virus.
[Word Count: 25]

• File infector: Infects files that the operating system or shell consider to be
executable.
[Word Count: 15]

• Macro virus: Infects files with macro code that is interpreted by an applica-
tion.
[Word Count: 15]

A virus classification by concealment strategy includes the following categories:
[Word Count: 10]

• Encrypted virus: A typical approach is as follows. A portion of the virus cre-
ates a random encryption key and encrypts the remainder of the virus.The key
is stored with the virus. When an infected program is invoked, the virus uses
the stored random key to decrypt the virus.When the virus replicates, a differ-
ent random key is selected. Because the bulk of the virus is encrypted with a
different key for each instance, there is no constant bit pattern to observe.
[Word Count: 83]

• Stealth virus: A form of virus explicitly designed to hide itself from detection
by antivirus software.Thus, the entire virus, not just a payload is hidden.
[Word Count: 26]

• Polymorphic virus: A virus that mutates with every infection, making detec-
tion by the “signature” of the virus impossible.
[Word Count: 20]

• Metamorphic virus: As with a polymorphic virus, a metamorphic virus mutates
with every infection. The difference is that a metamorphic virus rewrites itself
completely at each iteration, increasing the difficulty of detection.
Metamorphic viruses may change their behavior as well as their appearance.
[Word Count: 44]

Another weapon in the virus writers’ armory is the virus-creation toolkit. Such a
toolkit enables a relative novice to quickly create a number of different viruses.
Although viruses created with toolkits tend to be less sophisticated than viruses
designed from scratch, the sheer number of new viruses that can be generated using
a toolkit creates a problem for antivirus schemes.
[Word Count: 60]

In the mid-1990s, macro viruses became by far the most prevalent type of virus.
Macro viruses are particularly threatening for a number of reasons:
[Word Count: 24]

1. A macro virus is platform independent. Many macro viruses infect Microsoft
Word documents or other Microsoft Office documents. Any hardware plat-
form and operating system that supports these applications can be infected.
[Word Count: 33]

2. Macro viruses infect documents, not executable portions of code. Most of the
information introduced onto a computer system is in the form of a document
rather than a program.
[Word Count: 30]

3. Macro viruses are easily spread.A very common method is by electronic mail.
4. Because macro viruses infect user documents rather than system programs, tra-
ditional file system access controls are of limited use in preventing their spread.
[Word Count: 38]

A more recent development in malicious software is the e-mail virus. The first
rapidly spreading e-mail viruses, such as Melissa, made use of a Microsoft Word
macro embedded in an attachment. If the recipient opens the e-mail attachment, the
Word macro is activated.Then
[Word Count: 43]

1. The e-mail virus sends itself to everyone on the mailing list in the user’s e-mail
package.
[Word Count: 17]

2. The virus does local damage on the user’s system.
[Word Count: 10]

The ideal solution to the threat of viruses is prevention: Do not allow a virus to get
into the system in the first place, or block the ability of a virus to modify any files
containing executable code or macros.This goal is, in general, impossible to achieve,
[Word Count: 47]

although prevention can reduce the number of successful viral attacks.The next best
approach is to be able to do the following:
[Word Count: 21]

• Detection: Once the infection has occurred, determine that it has occurred
and locate the virus.
[Word Count: 16]

• Identification: Once detection has been achieved, identify the specific virus
that has infected a program.
[Word Count: 16]

• Removal: Once the specific virus has been identified, remove all traces of the
virus from the infected program and restore it to its original state. Remove the
virus from all infected systems so that the virus cannot spread further.
[Word Count: 40]

If detection succeeds but either identification or removal is not possible, then the
alternative is to discard the infected file and reload a clean backup version.
Advances in virus and antivirus technology go hand in hand. Early viruses
were relatively simple code fragments and could be identified and purged with
relatively simple antivirus software packages. As the virus arms race has evolved,
both viruses and, necessarily, antivirus software have grown more complex and
sophisticated.
[STEP93] identifies four generations of antivirus software:
[Word Count: 81]

• Fourth generation: full-featured protection
[Word Count: 5]

More sophisticated antivirus approaches and products continue to appear. In this
subsection, we highlight some of the most important.
[Word Count: 19]

GENERIC DECRYPTION Generic decryption (GD) technology enables the antivirus
program to easily detect even the most complex polymorphic viruses while
maintaining fast scanning speeds [NACH97]. Recall that when a file containing a
polymorphic virus is executed, the virus must decrypt itself to activate. In order to
detect such a structure, executable files are run through a GD scanner, which
contains the following elements:
[Word Count: 63]

• CPU emulator: A software-based virtual computer. Instructions in an exe-
cutable file are interpreted by the emulator rather than executed on the
underlying processor. The emulator includes software versions of all registers
and other processor hardware, so that the underlying processor is unaffected
by programs interpreted on the emulator.
[Word Count: 50]

• Virus signature scanner: A module that scans the target code looking for
known virus signatures.
• Emulation control module: Controls the execution of the target code.
[Word Count: 27]

• Integrated mail systems: Systems such as Lotus Notes and Microsoft Outlook
make it very simple to send anything to anyone and to work with objects that
are received.
[Word Count: 29]

• Mobile-program systems: Capabilities such as Java and ActiveX allow
programs to move on their own from one system to another.
[Word Count: 21]

1. A monitoring program on each PC uses a variety of heuristics based on system
behavior, suspicious changes to programs, or family signature to infer that a
virus may be present.The monitoring program forwards a copy of any program
thought to be infected to an administrative machine within the organization.
[Word Count: 50]

2. The administrative machine encrypts the sample and sends it to a central virus
analysis machine.
3. This machine creates an environment in which the infected program can be
safely run for analysis.Techniques used for this purpose include emulation,or the
creation of a protected environment within which the suspect program can be
executed and monitored. The virus analysis machine then produces a prescrip-
tion for identifying and removing the virus.
[Word Count: 70]

4. The resulting prescription is sent back to the administrative machine.
[Word Count: 11]

5. The administrative machine forwards the prescription to the infected client.
[Word Count: 11]

6. The prescription is also forwarded to other clients in the organization.
7. Subscribers around the world receive regular antivirus updates that protect
them from the new virus.
[Word Count: 28]

The success of the digital immune system depends on the ability of the virus
analysis machine to detect new and innovative virus strains. By constantly analyzing
and monitoring the viruses found in the wild, it should be possible to continually
update the digital immune software to keep up with the threat.
[Word Count: 51]

BEHAVIOR-BLOCKING SOFTWARE Unlike heuristics or fingerprint-based scanners,
behavior-blocking software integrates with the operating system of a host computer
and monitors program behavior in real-time for malicious actions [CONR02,
NACH02].The behavior blocking software then blocks potentially malicious actions
before they have a chance to affect the system. Monitored behaviors can include
[Word Count: 50]

• Attempts to open, view, delete, and/or modify files;
• Attempts to format disk drives and other unrecoverable disk operations;
[Word Count: 20]

• Modifications to the logic of executable files or macros;
[Word Count: 10]

• Modification of critical system settings, such as start-up settings;
• Scripting of e-mail and instant messaging clients to send executable content; and
• Initiation of network communications.
[Word Count: 28]

Figure 10.5 illustrates the operation of a behavior blocker. Behavior-blocking
software runs on server and desktop computers and is instructed through policies
set by the network administrator to let benign actions take place but to intercede
when unauthorized or suspicious actions occur. The module blocks any suspicious
software from executing. A blocker isolates the code in a sandbox, which restricts
the code’s access to various OS resources and applications. The blocker then sends
an alert.
Because a behavior blocker can block suspicious software in real-time, it has an
advantage over such established antivirus detection techniques as fingerprinting or
[Word Count: 98]

Firewall
Server running
behavior-blocking
software
[Word Count: 5]

1. Administrator sets 
acceptable software behavior 
policies and uploads them to 
a server. Policies can also be 
uploaded to desktops.
[Word Count: 20]

3. Behavior-blocking 
software at server flags 
suspicious code. The 
blocker "sandboxes" the 
suspicious software to 
prevent it from proceeding
[Word Count: 19]

2. Malicious software 
manages to make it 
through the firewall.
[Word Count: 10]

4. Server alerts administrator 
that suspicious code has been 
identified and sandboxed, 
awaiting administrator's 
decision on whether the code 
should be removed or allowed 
to run.
[Word Count: 26]

Figure 10.5
Behavior-Blocking Software Operation
[Word Count: 5]

A worm is a program that can replicate itself and send copies from computer to
computer across network connections. Upon arrival, the worm may be activated to
replicate and propagate again. In addition to propagation, the worm usually
performs some unwanted function. An e-mail virus has some of the characteristics
of a worm because it propagates itself from system to system. However, we can still
[Word Count: 65]

• Electronic mail facility: A worm mails a copy of itself to other systems, so that
its code is run when the e-mail or an attachment is received or viewed.
[Word Count: 30]

• Remote execution capability: A worm executes a copy of itself on another
system, either using an explicit remote execution facility or by exploiting a
program flaw in a network service to subvert its operations.
[Word Count: 35]

• Remote login capability: A worm logs onto a remote system as a user and then
uses commands to copy itself from one system to the other, where it then
executes.
[Word Count: 31]

The new copy of the worm program is then run on the remote system where, in
addition to any functions that it performs at that system, it continues to spread in the
same fashion.
A network worm exhibits the same characteristics as a computer virus: a
dormant phase, a propagation phase, a triggering phase, and an execution phase.The
propagation phase generally performs the following functions:
[Word Count: 65]

1. Search for other systems to infect by examining host tables or similar reposi-
tories of remote system addresses.
[Word Count: 19]

2. Establish a connection with a remote system.
3. Copy itself to the remote system and cause the copy to be run.
[Word Count: 22]

The network worm may also attempt to determine whether a system has
previously been infected before copying itself to the system. In a multiprogramming
system, it may also disguise its presence by naming itself as a system process or using
some other name that may not be noticed by a system operator.
As with viruses, network worms are difficult to counter.
[Word Count: 61]

Until the current generation of worms, the best known was the worm released onto
the Internet by Robert Morris in 1988 [ORMA03].The Morris worm was designed to
spread on UNIX systems and used a number of different techniques for propagation.
[Word Count: 40]

When a copy began execution, its first task was to discover other hosts known to this
host that would allow entry from this host.The worm performed this task by examin-
ing a variety of lists and tables, including system tables that declared which other
machines were trusted by this host, users’ mail forwarding files, tables by which users
gave themselves permission for access to remote accounts, and from a program that
reported the status of network connections. For each discovered host, the worm tried
a number of methods for gaining access:
[Word Count: 91]

1. It attempted to log on to a remote host as a legitimate user. In this method, the
worm first attempted to crack the local password file and then used the
discovered passwords and corresponding user IDs. The assumption was that
many users would use the same password on different systems. To obtain the
passwords, the worm ran a password-cracking program that tried
[Word Count: 63]

a. Each user’s account name and simple permutations of it
[Word Count: 10]

b. A list of 432 built-in passwords that Morris thought to be likely
candidates2
[Word Count: 14]

c. All the words in the local system dictionary
[Word Count: 9]

2. It exploited a bug in the UNIX finger protocol,which reports the whereabouts of
a remote user.
[Word Count: 17]

3. It exploited a trapdoor in the debug option of the remote process that receives
and sends mail.
[Word Count: 18]

If any of these attacks succeeded, the worm achieved communication with the
operating system command interpreter. It then sent this interpreter a short boot-
strap program, issued a command to execute that program, and then logged off.The
bootstrap program then called back the parent program and downloaded the
remainder of the worm.The new worm was then executed.
[Word Count: 57]

2The complete list is provided at this book’s Web site.
[Word Count: 10]

Clearly, the objective in countering a worm is to catch the worm in its slow
start phase, at a time when few hosts have been infected.
[Word Count: 26]

The state of the art in worm technology includes the following:
[Word Count: 11]

• Multiplatform: Newer worms are not limited to Windows machines but can
attack a variety of platforms, especially the popular varieties of UNIX.
[Word Count: 23]

• Multi-exploit: New worms penetrate systems in a variety of ways, using
exploits against Web servers, browsers, e-mail, file sharing, and other network-
based applications.
[Word Count: 25]

• Ultrafast spreading: One technique to accelerate the spread of a worm is to
conduct a prior Internet scan to accumulate Internet addresses of vulnerable
machines.
[Word Count: 26]

• Polymorphic: To evade detection, skip past filters, and foil real-time analysis,
worms adopt the virus polymorphic technique. Each copy of the worm has
new code generated on the fly using functionally equivalent instructions and
encryption techniques.
[Word Count: 37]

• Metamorphic: In addition to changing their appearance, metamorphic worms
have a repertoire of behavior patterns that are unleashed at different stages of
propagation.
[Word Count: 24]

• Transport vehicles: Because worms can rapidly compromise a large number of
systems, they are ideal for spreading other distributed attack tools, such as
distributed denial of service bots.
• Zero-day exploit: To achieve maximum surprise and distribution, a worm
should exploit an unknown vulnerability that is only discovered by the general
network community when the worm is launched.
[Word Count: 59]

Worms first appeared on mobile phones in 2004. These worms communicate
through Bluetooth wireless connections or via the multimedia messaging service
(MMS).The target is the smartphone, which is a mobile phone that permits users to
install software applications from sources other than the cellular network operator.
Mobile phone malware can completely disable the phone, delete data on the phone,
or force the device to send costly messages to premium-priced numbers.
[Word Count: 70]

An example of a mobile phone worm is CommWarrior, which was launched in
2005. This worm replicates by means of Bluetooth to other phones in the receiving
area. It also sends itself as an MMS file to numbers in the phone’s address book and
in automatic replies to incoming text messages and MMS messages. In addition, it
copies itself to the removable memory card and inserts itself into the program
installation files on the phone.
[Word Count: 75]

There is considerable overlap in techniques for dealing with viruses and worms.
Once a worm is resident on a machine, antivirus software can be used to detect it. In
addition, because worm propagation generates considerable network activity, net-
work activity and usage monitoring can form the basis of a worm defense.
To begin, let us consider the requirements for an effective worm countermea-
sure scheme:
[Word Count: 65]

• Generality: The approach taken should be able to handle a wide variety of
worm attacks, including polymorphic worms.
[Word Count: 19]

• Timeliness: The approach should respond quickly so as to limit the number of
infected systems and the number of generated transmissions from infected
systems.
[Word Count: 25]

• Resiliency: The approach should be resistant to evasion techniques employed
by attackers to evade worm countermeasures.
[Word Count: 17]

• Minimal denial-of-service costs: The approach should result in minimal reduc-
tion in capacity or service due to the actions of the countermeasure software.
That is, in an attempt to contain worm propagation, the countermeasure
should not significantly disrupt normal operation.
[Word Count: 41]

• Transparency: The countermeasure software and devices should not require
modification to existing (legacy) OSs, application software, and hardware.
[Word Count: 19]

• Global and local coverage: The approach should be able to deal with attack
sources both from outside and inside the enterprise network.
[Word Count: 23]

No existing worm countermeasure scheme appears to satisfy all these require-
ments. Thus, administrators typically need to use multiple approaches in defending
against worm attacks.
[Word Count: 25]

COUNTERMEASURE APPROACHES Following [JHI07], we list six classes of worm
defense:
[Word Count: 11]

A. Signature-based worm scan filtering: This type of approach generates a worm
signature, which is then used to prevent worm scans from entering/leaving a
network/host. Typically, this approach involves identifying suspicious flows
and generating a worm signature. This approach is vulnerable to the use of
polymorphic worms: Either the detection software misses the worm or, if it is
sufficiently sophisticated to deal with polymorphic worms, the scheme may
take a long time to react. [NEWS05] is an example of this approach.
[Word Count: 81]

B.
Filter-based worm containment: This approach is similar to class A but focuses
on worm content rather than a scan signature. The filter checks a message to
[Word Count: 27]

determine if it contains worm code. An example is Vigilante [COST05], which
relies on collaborative worm detection at end hosts. This approach can be quite
effective but requires efficient detection algorithms and rapid alert dissemination.
[Word Count: 35]

C. Payload-classification-based worm containment: These network-based tech-
niques examine packets to see if they contain a worm.Various anomaly detection
techniques can be used, but care is needed to avoid high levels of false positives
or negatives.An example of this approach is reported in [CHIN05], which looks
for exploit code in network flows. This approach does not generate signatures
based on byte patterns but rather looks for control and data flow structures that
suggest an exploit.
[Word Count: 75]

D. Threshold random walk (TRW) scan detection: TRW exploits randomness
in picking destinations to connect to as a way of detecting if a scanner is in
operation [JUNG04]. TRW is suitable for deployment in high-speed, low-cost
network devices. It is effective against the common behavior seen in worm
scans.
[Word Count: 49]

E. Rate limiting: This class limits the rate of scanlike traffic from an infected host.
Various strategies can be used, including limiting the number of new machines a
host can connect to in a window of time, detecting a high connection failure rate,
and limiting the number of unique IP addresses a host can scan in a window of
time. [CHEN04] is an example. This class of countermeasures may introduce
longer delays for normal traffic. This class is also not suited for slow, stealthy
worms that spread slowly to avoid detection based on activity level.
[Word Count: 95]

F. Rate halting: This approach immediately blocks outgoing traffic when a
threshold is exceeded either in outgoing connection rate or diversity of con-
nection attempts [JHI07]. The approach must include measures to quickly
unblock mistakenly blocked hosts in a transparent way. Rate halting can inte-
grate with a signature- or filter-based approach so that once a signature or fil-
ter is generated, every blocked host can be unblocked. Rate halting appears to
offer a very effective countermeasure. As with rate limiting, rate halting tech-
niques are not suitable for slow, stealthy worms.
[Word Count: 92]

We look now at two approaches in more detail.
[Word Count: 9]

The operation of the PWC architecture can be described as follows:
[Word Count: 11]

A. A PWC agent monitors outgoing traffic for scan activity, determined by a
surge in UDP or TCP connection attempts to remote hosts. If a surge is
detected, the agent performs the following actions: (1) issues an alert to local
system; (2) blocks all outgoing connection attempts; (3) transmits the alert to
the PWC manager; and (4) starts a relaxation analysis, described in D.
[Word Count: 64]

B. A PWC manager receives an alert. The PWC propagates the alert to all other
agents (beside the originating agent).
[Word Count: 20]

Worm management center
—Security manager
—Signature extractor
—PWC manager
[Word Count: 9]

Meanwhile, a separate aspect of the worm defense system is in operation.The
signature extractor functions as a passive sensor that monitors all traffic and
attempts to detect worms by signature analysis. When a new worm is detected, its
signature is sent by the security manager to the firewall to filter out any more copies
of the worm. In addition, the PWC manager sends the signature to PWC agents,
enabling them to immediately recognize infection and disable the worm.
[Word Count: 78]

NETWORK-BASED WORM DEFENSE The key element of a network-based worm
defense is worm monitoring software. Consider an enterprise network at a site,
consisting of one or an interconnected set of LANs. Two types of monitoring
software are needed:
[Word Count: 38]

• Ingress monitors: These are located at the border between the enterprise net-
work and the Internet.They can be part of the ingress filtering software of a bor-
der router or external firewall or a separate passive monitor. A honeypot can
also capture incoming worm traffic.An example of a detection technique for an
ingress monitor is to look for incoming traffic to unused local IP addresses.
[Word Count: 66]

Worm monitors can act in the manner of intrusion detection systems and gen-
erate alerts to a central administrative system. It is also possible to implement a sys-
tem that attempts to react in real time to a worm attack, so as to counter zero-day
exploits effectively. This is similar to the approach taken with the digital immune
system (Figure 10.4).
Figure 10.8 shows an example of a worm countermeasure architecture [SIDI05].
The system works as follows (numbers in figure refer to numbers in the following list):
[Word Count: 87]

1. Sensors deployed at various network locations detect a potential worm. The
sensor logic can also be incorporated in IDS sensors.
2. The sensors send alerts to a central server that correlates and analyzes the incom-
ing alerts.The correlation server determines the likelihood that a worm attack is
being observed and the key characteristics of the attack.
3. The server forwards its information to a protected environment, where the
potential worm may be sandboxed for analysis and testing.
4. The protected system tests the suspicious software against an appropriately
instrumented version of the targeted application to identify the vulnerability.
[Word Count: 99]

5. The protected system generates one or more software patches and tests these.
[Word Count: 13]

6. If the patch is not susceptible to the infection and does not compromise the
application’s functionality, the system sends the patch to the application host
to update the targeted application.
[Word Count: 31]

10.5 / DISTRIBUTED DENIAL OF SERVICE ATTACKS 365
[Word Count: 8]

4. Vulnerability 
testing and 
identification
[Word Count: 5]

The success of such an automated patching system depends on maintaining a
current list of potential attacks and developing general tools for patching software
to counter such attacks. Examples of approaches are as follows:
[Word Count: 34]

• Using minor code-randomization techniques [BHAT03] so that the infection
no longer works because the code to be attacked is no longer in the same form
and location
• Adding filters to the application that enable it to recognize and ignore an attack
[Word Count: 43]

10.5 DISTRIBUTED DENIAL OF SERVICE ATTACKS
[Word Count: 6]

Distributed denial of service (DDoS) attacks present a significant security threat to
corporations, and the threat appears to be growing [VIJA02]. In one study, covering
a three-week period in 2001, investigators observed more than 12,000 attacks
against more than 5000 distinct targets, ranging from well-known ecommerce com-
panies such as Amazon and Hotmail to small foreign ISPs and dial-up connections
[MOOR01]. DDoS attacks make computer systems inaccessible by flooding servers,
networks, or even end user systems with useless traffic so that legitimate users can
no longer gain access to those resources. In a typical DDoS attack, a large number of
[Word Count: 100]

A DDoS attack attempts to consume the target’s resources so that it cannot provide
service. One way to classify DDoS attacks is in terms of the type of resource that is
consumed. Broadly speaking, the resource consumed is either an internal host
resource on the target system or data transmission capacity in the local network to
which the target is attacked.
A simple example of an internal resource attack is the SYN flood attack.
Figure 10.9a shows the steps involved:
[Word Count: 80]

1. The attacker takes control of multiple hosts over the Internet, instructing
them to contact the target Web server.
[Word Count: 19]

2. The slave hosts begin sending TCP/IP SYN (synchronize/initialization) packets,
with erroneous return IP address information, to the target.
[Word Count: 19]

3. Each SYN packet is a request to open a TCP connection. For each such
packet, the Web server responds with a SYN/ACK (synchronize/acknowl-
edge) packet, trying to establish a TCP connection with a TCP entity at a spu-
rious IP address. The Web server maintains a data structure for each SYN
request waiting for a response back and becomes bogged down as more traffic
floods in. The result is that legitimate connections are denied while the victim
machine is waiting to complete bogus “half-open” connections.
[Word Count: 86]

The TCP state data structure is a popular internal resource target but by no
means the only one. [CERT01] gives the following examples:
[Word Count: 23]

1. In many systems, a limited number of data structures are available to hold
process information (process identifiers,process table entries,process slots,etc.).
An intruder may be able to consume these data structures by writing a simple
program or script that does nothing but repeatedly create copies of itself.
2. An intruder may also attempt to consume disk space in other ways, including
[Word Count: 61]

• generating excessive numbers of mail messages
[Word Count: 7]

• intentionally generating errors that must be logged
• placing files in anonymous ftp areas or network-shared areas
[Word Count: 18]

Figure 10.9
Examples of Simple DDoS Attacks
[Word Count: 7]

Figure 10.9b illustrates an example of an attack that consumes data transmis-
sion resources.The following steps are involved:
[Word Count: 18]

1. The attacker takes control of multiple hosts over the Internet, instructing
them to send ICMP ECHO packets3 with the target’s spoofed IP address to a
group of hosts that act as reflectors, as described subsequently.
[Word Count: 36]

2. Nodes at the bounce site receive multiple spoofed requests and respond by send-
ing echo reply packets to the target site.
[Word Count: 22]

3. The target’s router is flooded with packets from the bounce site, leaving no
data transmission capacity for legitimate traffic.
[Word Count: 20]

The first step in a DDoS attack is for the attacker to infect a number of machines
with zombie software that will ultimately be used to carry out the attack.The essen-
tial ingredients in this phase of the attack are the following:
[Word Count: 42]

1. Software that can carry out the DDoS attack.The software must be able to run
on a large number of machines, must be able to conceal its existence, must be
able to communicate with the attacker or have some sort of time-triggered
mechanism, and must be able to launch the intended attack toward the target.
2. A vulnerability in a large number of systems.The attacker must become aware of
a vulnerability that many system administrators and individual users have failed
to patch and that enables the attacker to install the zombie software.
[Word Count: 92]

3. A strategy for locating vulnerable machines, a process known as scanning.
[Word Count: 12]

3The Internet Control Message Protocol (ICMP) is an IP-level protocol for the exchange of control pack-
ets between a router and a host or between hosts. The ECHO packet requires the recipient to respond
with an echo reply to check that communication is possible between entities.
[Word Count: 46]

10.5 / DISTRIBUTED DENIAL OF SERVICE ATTACKS 369
[Word Count: 8]

Figure 10.10
Types of Flooding-Based DDoS Attacks
[Word Count: 7]

In the scanning process, the attacker first seeks out a number of vulnerable
machines and infects them. Then, typically, the zombie software that is installed in
the infected machines repeats the same scanning process, until a large distributed
network of infected machines is created. [MIRK04] lists the following types of scan-
ning strategies:
[Word Count: 53]

• Random: Each compromised host probes random addresses in the IP address
space, using a different seed. This technique produces a high volume of
[Word Count: 24]

Internet traffic, which may cause generalized disruption even before the actual
attack is launched.
[Word Count: 14]

• Hit-List: The attacker first compiles a long list of potential vulnerable
machines. This can be a slow process done over a long period to avoid detec-
tion that an attack is underway. Once the list is compiled, the attacker begins
infecting machines on the list. Each infected machine is provided with a
portion of the list to scan.This strategy results in a very short scanning period,
which may make it difficult to detect that infection is taking place.
[Word Count: 79]

• Topological: This method uses information contained on an infected victim
machine to find more hosts to scan.
[Word Count: 18]

• Local subnet: If a host can be infected behind a firewall, that host then looks
for targets in its own local network.The host uses the subnet address structure
to find other hosts that would otherwise be protected by the firewall.
[Word Count: 41]

In general, there are three lines of defense against DDoS attacks [CHAN02]:
[Word Count: 12]

• Attack prevention and preemption (before the attack): These mechanisms
enable the victim to endure attack attempts without denying service to legiti-
mate clients. Techniques include enforcing policies for resource consumption
and providing backup resources available on demand. In addition, prevention
mechanisms modify systems and protocols on the Internet to reduce the possi-
bility of DDoS attacks.
[Word Count: 57]

• Attack detection and filtering (during the attack): These mechanisms attempt to
detect the attack as it begins and respond immediately.This minimizes the impact
of the attack on the target. Detection involves looking for suspicious patterns of
behavior. Response involves filtering out packets likely to be part of the attack.
[Word Count: 50]

• Attack source traceback and identification (during and after the attack): This
is an attempt to identify the source of the attack as a first step in preventing
future attacks. However, this method typically does not yield results fast
enough, if at all, to mitigate an ongoing attack.
[Word Count: 48]

The challenge in coping with DDoS attacks is the sheer number of ways in
which they can operate. Thus DDoS countermeasures must evolve with the threat.
[Word Count: 26]

For a thorough understanding of viruses, the book to read is [SZOR05]. Another excellent
treatment is [AYCO06]. Good overview articles on viruses and worms are [CASS01],
[FORR97], [KEPH97a], and [NACH97]. [MEIN01] provides a good treatment of the Code
Red worm. [WEAV03] is a comprehensive survey of worm characteristics. [HYPP06] dis-
cusses worm attacks on mobile phones.
[PATR04] is a worthwhile survey of DDoS attacks. [MIRK04] is a thorough description
of the variety of DDoS attacks and countermeasures. [CHAN02] is a good examination of
DDoS defense strategies.
[Word Count: 86]

10.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 371
[Word Count: 9]

• AntiVirus Online: IBM’s site on virus information.
[Word Count: 8]

• Vmyths: Dedicated to exposing virus hoaxes and dispelling misconceptions about real
viruses.
[Word Count: 13]

• VirusList: Site maintained by commercial antivirus software provider. Good collection
of useful information.
[Word Count: 14]

• DDoS Attacks/Tools: Extensive list of links and documents.
[Word Count: 9]

10.7 KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

backdoor
behavior-blocking software
blended attack
boot-sector virus
digital immune system
direct DDoS attack
[Word Count: 13]

distributed denial of service
(DDoS)
downloaders
e-mail virus
flooder
logic bomb
[Word Count: 11]

macro virus
malicious software
malware
metamorphic virus
mobile code
parasitic virus
[Word Count: 11]

10.1
What is the role of compression in the operation of a virus?
10.2
What is the role of encryption in the operation of a virus?
10.3
What are typical phases of operation of a virus or worm?
10.4
What is a digital immune system?
10.5
How does behavior-blocking software work?
10.6
In general terms, how does a worm propagate?
10.7
Describe some worm countermeasures.
10.8
What is a DDoS?
[Word Count: 70]

main ()
{
int I;
printf(*char t[] = (*);
[Word Count: 9]

polymorphic virus
reflector DDoS attack
scanning
[Word Count: 6]

10.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 373
[Word Count: 9]

for (i=0; t[i]!=0; i=i+1)
printf("%d, ", t[i]);
printf("%s", t);
}
[Word Count: 10]

c.
What is the specific relevance of this problem to this chapter?
10.4
Consider the following fragment:
legitimate code
if data is Friday the 13th;
crash_computer();
legitimate code
[Word Count: 28]

What type of malicious software is this?
10.5
Consider the following fragment in an authentication program:
username = read_username();
password = read_password();
if username is "133t h4ck0r"
return ALLOW_LOGIN;
if username and password are valid
return ALLOW_LOGIN
else return DENY_LOGIN
What type of malicious software is this?
10.6
The following code fragments show a sequence of virus instructions and a metamor-
phic version of the virus. Describe the effect produced by the metamorphic code.
[Word Count: 74]

mov
eax,
5
push
ecx
pop
ecx
add
eax,
ebx
swap
eax,
ebx
swap
ebx,
eax
call
[eax]
nop
[Word Count: 19]

10.7
The list of passwords used by the Morris worm is provided at this book’s Web site.
a.
The assumption has been expressed by many people that this list represents words
commonly used as passwords. Does this seem likely? Justify your answer.
b. If the list does not reflect commonly used passwords, suggest some approaches
that Morris may have used to construct the list.
10.8
Suggest some methods of attacking the PWC worm defense that could be used by
worm creators and suggest countermeasures to these methods.
[Word Count: 87]

Packet Filtering Firewall
Stateful Inspection Firewalls
Application-Level Gateway
Circuit-Level Gateway
[Word Count: 10]

Bastion Host
Host-Based Firewalls
Personal Firewall
[Word Count: 6]

11.5 Firewall Location and Configurations
[Word Count: 5]

DMZ Networks
Virtual Private Networks
Distributed Firewalls
Summary of Firewall Locations and Topologies
[Word Count: 13]

11.7 Key Terms, Review Questions, and Problems
[Word Count: 7]

The function of a strong position is to make the forces holding it practically
unassailable.
[Word Count: 15]

On the day that you take up your command, block the frontier passes, destroy the
official tallies, and stop the passage of all emissaries.
[Word Count: 24]

◆
A firewall forms a barrier through which the traffic going in each direction
must pass. A firewall security policy dictates which traffic is authorized to
pass in each direction.
[Word Count: 30]

◆
A firewall may be designed to operate as a filter at the level of IP packets,
or may operate at a higher protocol layer.
[Word Count: 25]

Firewalls can be an effective means of protecting a local system or network of systems
from network-based security threats while at the same time affording access to the out-
side world via wide area networks and the Internet.
[Word Count: 38]

Information systems in corporations, government agencies, and other organizations
have undergone a steady evolution.The following are notable developments:
[Word Count: 18]

• Centralized data processing system, with a central mainframe supporting a
number of directly connected terminals
[Word Count: 16]

• Local area networks (LANs) interconnecting PCs and terminals to each other
and the mainframe
• Premises network, consisting of a number of LANs, interconnecting PCs,
servers, and perhaps a mainframe or two
[Word Count: 33]

• Enterprise-wide network, consisting of multiple, geographically distributed
premises networks interconnected by a private wide area network (WAN)
[Word Count: 18]

• Internet connectivity, in which the various premises networks all hook into the
Internet and may or may not also be connected by a private WAN
[Word Count: 26]

Internet connectivity is no longer optional for organizations. The information
and services available are essential to the organization. Moreover, individual users
within the organization want and need Internet access, and if this is not provided via
their LAN, they will use dial-up capability from their PC to an Internet service
provider (ISP). However, while Internet access provides benefits to the organization,
[Word Count: 61]

[BELL94b] lists the following design goals for a firewall:
[Word Count: 9]

1. All traffic from inside to outside, and vice versa, must pass through the firewall.
This is achieved by physically blocking all access to the local network except
via the firewall. Various configurations are possible, as explained later in this
chapter.
[Word Count: 41]

2. Only authorized traffic, as defined by the local security policy, will be allowed to
pass.Various types of firewalls are used, which implement various types of secu-
rity policies, as explained later in this chapter.
[Word Count: 35]

3. The firewall itself is immune to penetration.This implies the use of a hardened
system with a secured operating system.Trusted computer systems are suitable
for hosting a firewall and often required in government applications.
[Word Count: 34]

[SMIT97] lists four general techniques that firewalls use to control access and
enforce the site’s security policy. Originally, firewalls focused primarily on service
control, but they have since evolved to provide all four:
[Word Count: 33]

• Service control: Determines the types of Internet services that can be
accessed, inbound or outbound. The firewall may filter traffic on the basis of
IP address, protocol, or port number; may provide proxy software that receives
and interprets each service request before passing it on; or may host the server
software itself, such as a Web or mail service.
[Word Count: 60]

• Direction control: Determines the direction in which particular service
requests may be initiated and allowed to flow through the firewall.
[Word Count: 21]

• User control: Controls access to a service according to which user is attempt-
ing to access it. This feature is typically applied to users inside the firewall
perimeter (local users). It may also be applied to incoming traffic from exter-
nal users; the latter requires some form of secure authentication technology,
such as is provided in IPsec (Chapter 8).
[Word Count: 60]

• Behavior control: Controls how particular services are used. For example, the
firewall may filter e-mail to eliminate spam, or it may enable external access to
only a portion of the information on a local Web server.
[Word Count: 37]

Before proceeding to the details of firewall types and configurations, it is best
to summarize what one can expect from a firewall. The following capabilities are
within the scope of a firewall:
[Word Count: 32]

1. A firewall defines a single choke point that keeps unauthorized users out of
the protected network, prohibits potentially vulnerable services from entering
or leaving the network, and provides protection from various kinds of IP
spoofing and routing attacks.The use of a single choke point simplifies security
management because security capabilities are consolidated on a single system
or set of systems.
[Word Count: 61]

2. A firewall provides a location for monitoring security-related events.Audits and
alarms can be implemented on the firewall system.
[Word Count: 19]

3. A firewall is a convenient platform for several Internet functions that are not
security related. These include a network address translator, which maps local
addresses to Internet addresses, and a network management function that audits
or logs Internet usage.
[Word Count: 40]

4. A firewall can serve as the platform for IPsec. Using the tunnel mode capabil-
ity described in Chapter 8, the firewall can be used to implement virtual
private networks.
[Word Count: 30]

Firewalls have their limitations, including the following:
[Word Count: 7]

1. The firewall cannot protect against attacks that bypass the firewall. Internal
systems may have dial-out capability to connect to an ISP. An internal LAN
may support a modem pool that provides dial-in capability for traveling
employees and telecommuters.
[Word Count: 39]

2. The firewall may not protect fully against internal threats, such as a disgruntled
employee or an employee who unwittingly cooperates with an external
attacker.
3. An improperly secured wireless LAN may be accessed from outside the organi-
zation. An internal firewall that separates portions of an enterprise network
cannot guard against wireless communications between local systems on differ-
ent sides of the internal firewall.
[Word Count: 65]

4. A laptop, PDA, or portable storage device may be used and infected outside
the corporate network, and then attached and used internally.
[Word Count: 23]

A firewall may act as a packet filter. It can operate as a positive filter, allowing to
pass only packets that meet specific criteria, or as a negative filter, rejecting any
packet that meets certain criteria. Depending on the type of firewall, it may examine
one or more protocol headers in each packet, the payload of each packet, or the pat-
tern generated by a sequence of packets. In this section, we look at the principal
types of firewalls.
[Word Count: 79]

A packet filtering firewall applies a set of rules to each incoming and outgoing IP
packet and then forwards or discards the packet (Figure 11.1b).The firewall is typi-
cally configured to filter packets going in both directions (from and to the internal
network). Filtering rules are based on information contained in a network packet:
[Word Count: 54]

• Source IP address: The IP address of the system that originated the IP packet
(e.g., 192.178.1.1)
[Word Count: 17]

• Destination IP address: The IP address of the system the IP packet is trying to
reach (e.g., 192.168.1.2)
[Word Count: 19]

• Source and destination transport-level address: The transport-level (e.g., TCP
or UDP) port number, which defines applications such as SNMP or TELNET
[Word Count: 22]

• IP protocol field: Defines the transport protocol
[Word Count: 8]

• Interface: For a firewall with three or more ports, which interface of the fire-
wall the packet came from or which interface of the firewall the packet is des-
tined for
[Word Count: 32]

The packet filter is typically set up as a list of rules based on matches to fields
in the IP or TCP header. If there is a match to one of the rules, that rule is invoked
to determine whether to forward or discard the packet. If there is no match to any
rule, then a default action is taken.Two default policies are possible:
[Word Count: 64]

• Default = discard: That which is not expressly permitted is prohibited.
• Default = forward: That which is not expressly prohibited is permitted.
[Word Count: 24]

External (untrusted) network
(e.g., Internet)
Internal (protected) network
(e.g., enterprise network)
Firewall
[Word Count: 12]

Application
End-to-end
transport
connection
[Word Count: 4]

Application
End-to-end
transport
connection
[Word Count: 4]

action
ourhost
port
theirhost
port
comment
[Word Count: 6]

block
*
*
SPIGOT
*
we don’t trust these people
[Word Count: 10]

allow
OUR-GW
25
*
*
connection to our SMTP port
[Word Count: 10]

action
ourhost
port
theirhost
port
comment
[Word Count: 6]

action
ourhost
port
theirhost
port
comment
[Word Count: 6]

allow
*
*
*
25
connection to their SMTP port
[Word Count: 10]

allow
{our hosts}
*
*
25
our packets to their SMTP port
[Word Count: 12]

allow
{our hosts}
*
*
*
our outgoing calls
[Word Count: 9]

designator that matches everything. We assume that the default = discard policy is
in force.
[Word Count: 15]

is one of a list of designated internal hosts and the destination TCP port number
is 25.It also allows incoming packets with a source port number of 25 that include
the ACK flag in the TCP segment. Note that we explicitly designate source and
destination systems to define these rules explicitly.
[Word Count: 51]

E. This ruleset is one approach to handling FTP connections. With FTP, two TCP
connections are used: a control connection to set up the file transfer and a data
connection for the actual file transfer. The data connection uses a different port
number that is dynamically assigned for the transfer. Most servers, and hence
most attack targets, use low-numbered ports; most outgoing calls tend to use a
higher-numbered port, typically above 1023.Thus, this ruleset allows
[Word Count: 75]

— Reply packets to a connection initiated by an internal machine
[Word Count: 11]

— Packets destined for a high-numbered port on an internal machine
[Word Count: 11]

This scheme requires that the systems be configured so that only the appropriate
port numbers are in use.
[Word Count: 18]

Rule set E points out the difficulty in dealing with applications at the packet-
filtering level.Another way to deal with FTP and similar applications is either state-
ful packet filters or an application-level gateway, both described subsequently in this
section.
One advantage of a packet filtering firewall is its simplicity.Also, packet filters
typically are transparent to users and are very fast. [WACK02] lists the following
weaknesses of packet filter firewalls:
[Word Count: 70]

filter firewall to allow traffic types, sources, and destinations that should be
denied based on an organization’s information security policy.
[Word Count: 20]

Some of the attacks that can be made on packet filtering firewalls and the
appropriate countermeasures are the following:
[Word Count: 19]

• IP address spoofing: The intruder transmits packets from the outside with a
source IP address field containing an address of an internal host.The attacker
hopes that the use of a spoofed address will allow penetration of systems that
employ simple source address security, in which packets from specific trusted
internal hosts are accepted. The countermeasure is to discard packets with an
inside source address if the packet arrives on an external interface. In fact, this
countermeasure is often implemented at the router external to the firewall.
[Word Count: 87]

• Source routing attacks: The source station specifies the route that a packet
should take as it crosses the Internet, in the hopes that this will bypass security
measures that do not analyze the source routing information. The counter-
measure is to discard all packets that use this option.
[Word Count: 49]

Table 11.2
Example Stateful Firewall Connection State Table [WACK02]
[Word Count: 9]

Source Address
Source Port
Destination 
Address
[Word Count: 6]

192.168.1.100
1030
210.22.88.29
80
Established
[Word Count: 5]

192.168.1.102
1031
216.32.42.123
80
Established
[Word Count: 5]

192.168.1.101
1033
173.66.32.122
25
Established
[Word Count: 5]

192.168.1.106
1035
177.231.32.12
79
Established
[Word Count: 5]

223.43.21.231
1990
192.168.1.6
80
Established
[Word Count: 5]

2122.22.123.32
2112
192.168.1.6
80
Established
[Word Count: 5]

210.922.212.18
3321
192.168.1.6
80
Established
[Word Count: 5]

24.102.32.23
1025
192.168.1.6
80
Established
[Word Count: 5]

223.21.22.12
1046
192.168.1.6
80
Established
[Word Count: 5]

The protocol described here is designed to provide a framework for
client-server applications in both the TCP and UDP domains to
conveniently and securely use the services of a network firewall.
The protocol is conceptually a “shim-layer” between the application
layer and the transport layer, and as such does not provide network-
layer gateway services, such as forwarding of ICMP messages.
[Word Count: 61]

SOCKS consists of the following components:
[Word Count: 6]

• The SOCKS server, which often runs on a UNIX-based firewall. SOCKS is
also implemented on Windows systems.
[Word Count: 18]

• The SOCKS client library, which runs on internal hosts protected by the
firewall.
[Word Count: 14]

• SOCKS-ified versions of several standard client programs such as FTP and
TELNET. The implementation of the SOCKS protocol typically involves
either the recompilation or relinking of TCP-based client applications, or the
use of alternate dynamically loaded libraries, to use the appropriate encapsu-
lation routines in the SOCKS library.
[Word Count: 49]

It is common to base a firewall on a stand-alone machine running a common oper-
ating system, such as UNIX or Linux. Firewall functionality can also be imple-
mented as a software module in a router or LAN switch. In this section, we look at
some additional firewall basing considerations.
[Word Count: 50]

A bastion host is a system identified by the firewall administrator as a critical strong
point in the network’s security.Typically, the bastion host serves as a platform for an
application-level or circuit-level gateway. Common characteristics of a bastion host
are as follows:
[Word Count: 42]

• The bastion host hardware platform executes a secure version of its operating
system, making it a hardened system.
• Only the services that the network administrator considers essential are
installed on the bastion host.These could include proxy applications for DNS,
FTP, HTTP, and SMTP.
[Word Count: 45]

• The bastion host may require additional authentication before a user is
allowed access to the proxy services. In addition, each proxy service may
require its own authentication before granting user access.
[Word Count: 32]

• Each proxy is configured to support only a subset of the standard application’s
command set.
[Word Count: 16]

• Each proxy is configured to allow access only to specific host systems. This
means that the limited command/feature set may be applied only to a subset of
systems on the protected network.
[Word Count: 33]

• Each proxy maintains detailed audit information by logging all traffic, each
connection, and the duration of each connection. The audit log is an essential
tool for discovering and terminating intruder attacks.
[Word Count: 32]

• Each proxy module is a very small software package specifically designed for
network security. Because of its relative simplicity, it is easier to check such
modules for security flaws. For example, a typical UNIX mail application may
contain over 20,000 lines of code, while a mail proxy may contain fewer
than 1000.
[Word Count: 53]

• Each proxy is independent of other proxies on the bastion host. If there is a
problem with the operation of any proxy, or if a future vulnerability is discov-
ered, it can be uninstalled without affecting the operation of the other proxy
applications. Also, if the user population requires support for a new service,
the network administrator can easily install the required proxy on the
bastion host.
[Word Count: 68]

• A proxy generally performs no disk access other than to read its initial config-
uration file. Hence, the portions of the file system containing executable code
can be made read only. This makes it difficult for an intruder to install Trojan
horse sniffers or other dangerous files on the bastion host.
[Word Count: 52]

• Each proxy runs as a nonprivileged user in a private and secured directory on
the bastion host.
[Word Count: 18]

A host-based firewall is a software module used to secure an individual host.
Such modules are available in many operating systems or can be provided as an
add-on package. Like conventional stand-alone firewalls, host-resident firewalls
filter and restrict the flow of packets. A common location for such firewalls is a
server. There are several advantages to the use of a server-based or workstation-
based firewall:
[Word Count: 65]

• Filtering rules can be tailored to the host environment. Specific corporate
security policies for servers can be implemented, with different filters for
servers used for different application.
[Word Count: 28]

• Protection is provided independent of topology.Thus both internal and exter-
nal attacks must pass through the firewall.
• Used in conjunction with stand-alone firewalls, the host-based firewall pro-
vides an additional layer of protection. A new type of server can be added to
the network, with its own firewall, without the necessity of altering the net-
work firewall configuration.
[Word Count: 60]

A personal firewall controls the traffic between a personal computer or workstation
on one side and the Internet or enterprise network on the other side. Personal fire-
wall functionality can be used in the home environment and on corporate intranets.
Typically, the personal firewall is a software module on the personal computer. In a
[Word Count: 54]

• FTP access (20-21, 1024-64535 from 20-21)
[Word Count: 7]

Figure 11.2
Example Personal Firewall Interface
[Word Count: 6]

When FTP access is enabled, ports 20 and 21 on the local machine are opened
for FTP; if others connect to this computer from ports 20 or 21, the ports 1024
through 64535 are open.
For increased protection, advanced firewall features are available through
easy-to-configure checkboxes. Stealth mode hides the Mac on the Internet by drop-
ping unsolicited communication packets, making it appear as though no Mac is
present. UDP packets can be blocked, restricting network traffic to TCP packets
only for open ports. The firewall also supports logging, an important tool for check-
ing on unwanted activity.
[Word Count: 98]

11.5 FIREWALL LOCATION AND CONFIGURATIONS
[Word Count: 5]

As Figure 11.1a indicates, a firewall is positioned to provide a protective barrier
between an external, potentially untrusted source of traffic and an internal network.
With that general principle in mind, a security administrator must decide on the
location and on the number of firewalls needed. In this section, we look at some
common options.
[Word Count: 55]

11.5 / FIREWALL LOCATION AND CONFIGURATIONS 389
[Word Count: 7]

Internal
firewall
Internal protected network
[Word Count: 5]

Figure 11.3
Example Firewall Configuration
[Word Count: 5]

firewall also provides a basic level of protection for the remainder of the enterprise
network. In this type of configuration, internal firewalls serve three purposes:
[Word Count: 25]

1. The internal firewall adds more stringent filtering capability, compared to the
external firewall, in order to protect enterprise servers and workstations from
external attack.
[Word Count: 25]

2. The internal firewall provides two-way protection with respect to the DMZ.First,
the internal firewall protects the remainder of the network from attacks launched
from DMZ systems. Such attacks might originate from worms, rootkits, bots, or
other malware lodged in a DMZ system. Second, an internal firewall can protect
the DMZ systems from attack from the internal protected network.
[Word Count: 59]

3. Multiple internal firewalls can be used to protect portions of the internal
network from each other. For example, firewalls can be configured so that
internal servers are protected from internal workstations and vice versa.
A common practice is to place the DMZ on a different network interface on
the external firewall from that used to access the internal networks.
[Word Count: 60]

A distributed firewall configuration involves stand-alone firewall devices plus host-
based firewalls working together under a central administrative control. Figure 11.5
suggests a distributed firewall configuration. Administrators can configure host-
resident firewalls on hundreds of servers and workstations as well as configure
personal firewalls on local and remote user systems. Tools let the network adminis-
trator set policies and monitor security across the entire network. These firewalls
protect against internal attacks and provide protection tailored to specific machines
and applications. Stand-alone firewalls provide global protection, including internal
firewalls and an external firewall, as discussed previously.
[Word Count: 95]

11.5 / FIREWALL LOCATION AND CONFIGURATIONS 391
[Word Count: 7]

IP
Header
IPsec
Header
Secure IP
Payload
[Word Count: 7]

IP
Header
IPsec
Header
Secure IP
Payload
[Word Count: 7]

IP
Header
IPsec
Header
Secure IP
Payload
[Word Count: 7]

With distributed firewalls, it may make sense to establish both an internal and
an external DMZ. Web servers that need less protection because they have less
critical information on them could be placed in an external DMZ, outside the exter-
nal firewall. What protection is needed is provided by host-based firewalls on these
servers.
An important aspect of a distributed firewall configuration is security moni-
toring. Such monitoring typically includes log aggregation and analysis, firewall
statistics, and fine-grained remote monitoring of individual hosts if needed.
[Word Count: 85]

Summary of Firewall Locations and Topologies
[Word Count: 6]

We can now summarize the discussion from Sections 11.4 and 11.5 to define a
spectrum of firewall locations and topologies. The following alternatives can be
identified:
[Word Count: 26]

• Host-resident firewall: This category includes personal firewall software and
firewall software on servers. Such firewalls can be used alone or as part of an
in-depth firewall deployment.
• Screening router: A single router between internal and external networks with
stateless or full packet filtering. This arrangement is typical for small
office/home office (SOHO) applications.
[Word Count: 55]

Internal
firewall
Internal protected network
[Word Count: 5]

Figure 11.5
Example Distributed Firewall Configuration
[Word Count: 6]

• Single bastion inline: A single firewall device between an internal and external
router (e.g., Figure 11.1a). The firewall may implement stateful filters and/or
application proxies. This is the typical firewall appliance configuration for
small to medium-sized organizations.
[Word Count: 38]

11.6 / RECOMMENDED READING AND WEB SITE 393
[Word Count: 8]

• Single bastion T: Similar to single bastion inline but has a third network
interface on bastion to a DMZ where externally visible servers are placed.
Again, this is a common appliance configuration for medium to large
organizations.
[Word Count: 38]

• Double bastion inline: Figure 11.3 illustrates this configuration, where the
DMZ is sandwiched between bastion firewalls. This configuration is common
for large businesses and government organizations.
[Word Count: 27]

• Double bastion T: The DMZ is on a separate network interface on the bastion
firewall. This configuration is also common for large businesses and govern-
ment organizations and may be required. For example, this configuration is
required for Australian government use (Australian Government Information
Technology Security Manual - ACSI33).
[Word Count: 50]

• Distributed firewall configuration: Illustrated in Figure 11.5. This configura-
tion is used by some large businesses and government organizations.
[Word Count: 20]

A classic treatment of firewalls is [CHES03]. [LODI98], [OPPL97], and [BELL94b] are good
overview articles on the subject. [WACK02] is an excellent overview of firewall technology
and firewall policies. [AUDI04] and [WILS05] provide useful discussions of firewalls.
[Word Count: 37]

• Firewall.com: Numerous links to firewall references and software resources.
[Word Count: 10]

11.7 KEY TERMS, REVIEW QUESTIONS,AND PROBLEMS
[Word Count: 6]

application-level gateway
bastion host
circuit-level gateway
distributed firewalls
DMZ
[Word Count: 9]

firewall
host-based firewall
IP address spoofing
IP security (IPsec)
packet filtering firewall
[Word Count: 12]

personal firewall
proxy
stateful inspection firewall
tiny fragment attack
virtual private network (VPN)
[Word Count: 13]

11.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 395
[Word Count: 9]

Table 11.3
Sample Packet Filter Firewall Ruleset
[Word Count: 7]

Source Address
Source Port
Dest Address
Dest Port
Action
[Word Count: 9]

Rule
Direction
Src Addr
Dest Addr
Protocol
Dest Port
Action
[Word Count: 10]

B
Out
Internal
External
TCP
>1023
Permit
[Word Count: 7]

Packet
Direction
Src Addr
Dest Addr
Protocol
Dest Port
Action
[Word Count: 10]

a.
Describe the effect of each rule.
b. Your host in this example has IP address 172.16.1.1. Someone tries to send e-mail
from a remote host with IP address 192.168.3.4. If successful, this generates an
SMTP dialogue between the remote user and the SMTP server on your host con-
sisting of SMTP commands and mail. Additionally, assume that a user on your
host tries to send e-mail to the SMTP server on the remote system. Four typical
packets for this scenario are as shown:
[Word Count: 84]

Indicate which packets are permitted or denied and which rule is used in each
case.
[Word Count: 15]

c.
Someone from the outside world (10.1.2.3) attempts to open a connection from
port 5150 on a remote host to the Web proxy server on port 8080 on one of your
local hosts (172.16.3.4), in order to carry out an attack. Typical packets are as
follows:
[Word Count: 46]

Will the attack succeed? Give details.
11.6
To provide more protection, the ruleset from the preceding problem is modified as
follows:
[Word Count: 21]

a.
Describe the change.
b. Apply this new ruleset to the same six packets of the preceding problem. Indicate
which packets are permitted or denied and which rule is used in each case.
11.7
A hacker uses port 25 as the client port on his or her end to attempt to open a con-
nection to your Web proxy server.
a.
The following packets might be generated:
[Word Count: 67]

Packet
Direction
Src Addr
Dest Addr
Protocol
Dest Port
Action
[Word Count: 10]

Rule Direction
Src Addr
Dest Addr
Protocol
Src Port
Dest Port
Action
[Word Count: 12]

A
In
External
Internal
TCP
>1023
25
Permit
[Word Count: 8]

B
Out
Internal
External
TCP
25
>1023
Permit
[Word Count: 8]

C
Out
Internal
External
TCP
>1023
25
Permit
[Word Count: 8]

D
In
External
Internal
TCP
25
>1023
Permit
[Word Count: 8]

Packet
Direction
Src Addr
Dest Addr
Protocol
Src Port
Dest Port
Action
[Word Count: 12]

11.7 / KEY TERMS, REVIEW QUESTIONS, AND PROBLEMS 397
[Word Count: 9]

sensitivity tag (classification if you like) in its subject and for external e-mail to have
the lowest sensitivity tag. Discuss how this measure could be implemented in a firewall
and what components and architecture would be needed to do this.
11.10
You are given the following “informal firewall policy” details to be implemented
using a firewall like that in Figure 11.3:
[Word Count: 61]

Design suitable packet filter rulesets (similar to those shown in Table 11.1) to be
implemented on the “External Firewall” and the “Internal Firewall” to satisfy the
aforementioned policy requirements.
[Word Count: 29]

Divisors
Prime Numbers
Relatively Prime Numbers
[Word Count: 6]

A.1 / PRIME AND RELATIVELY PRIME NUMBERS 399
[Word Count: 8]

The Devil said to Daniel Webster:“Set me a task I can’t carry out, and I’ll give you anything in
the world you ask for.”
Daniel Webster:“Fair enough. Prove that for n greater than 2, the equation an + bn = cn
[Word Count: 41]

has no non-trivial solution in the integers.”
They agreed on a three-day period for the labor, and the Devil disappeared.
At the end of three days, the Devil presented himself, haggard, jumpy, biting his lip. Daniel
Webster said to him,“Well, how did you do at my task? Did you prove the theorem?”
“Eh? No . . . no, I haven’t proved it.”
“Then I can have whatever I ask for? Money? The Presidency?”
“What? Oh,that—of course.But listen! If we could just prove the following two lemmas—”
—The Mathematical Magpie, Clifton Fadiman
[Word Count: 91]

In this appendix, we provide some background on two concepts referenced in this
book: prime numbers and modular arithmetic.
[Word Count: 19]

In this section, unless otherwise noted, we deal only with nonnegative integers. The
use of negative integers would introduce no essential differences.
[Word Count: 22]

We say that b
0 divides a if a
mb for some m,where a,b,and m are integers. That
is, b divides a if there is no remainder on division. The notation b a is commonly used
to mean b divides a. Also, if b a, we say that b is a divisor of a. For example, the
positive divisors of 24 are 1, 2, 3, 4, 6, 8, 12, and 24.
The following relations hold:
[Word Count: 75]

• If a 1, then a
;1.
• If a b and b a, then a = ;b.
• Any b
0 divides 0.
• If b g and b h, then b (mg + nh) for arbitrary integers m and n.
[Word Count: 42]

If b g, then g is of the form g = b × g1 for some integer g1.
[Word Count: 18]

If b h, then h is of the form h = b × h1 for some integer h1.
[Word Count: 18]

An integer p > 1 is a prime number if its only divisors are ;1 and ;p. Prime
numbers play a critical role in number theory and in the techniques discussed in
Chapter 3.
[Word Count: 34]

400
APPENDIX A / SOME ASPECTS OF NUMBER THEORY
[Word Count: 9]

Any integer a > 1 can be factored in a unique way as
[Word Count: 13]

where p1 6 p2 6
6 pt are prime numbers and where each ai is a positive integer.
For example, 91 = 7 × 13 and 11011 = 7 × 112 × 13.
It is useful to cast this another way. If P is the set of all prime numbers, then
any positive integer can be written uniquely in the following form:
[Word Count: 62]

The right-hand side is the product over all possible prime numbers p;for any particular
value of a, most of the exponents ap will be 0.
The value of any given positive integer can be specified by simply listing all the
nonzero exponents in the foregoing formulation.Thus, the integer 12 is represented
by {a2 = 2, a3 = 1}, and the integer 18 is represented by {a2 = 1, a3 = 2}. Multiplication
of two numbers is equivalent to adding the corresponding exponents:
[Word Count: 82]

What does it mean, in terms of these prime factors, to say that a b? Any integer
of the form pk can be divided only by an integer that is of a lesser or equal power of
the same prime number, pj with j ≤k.Thus, we can say
[Word Count: 48]

We will use the notation gcd (a, b) to mean the greatest common divisor of a and b.
The positive integer c is said to be the greatest common divisor of a and b if
[Word Count: 35]

1. c is a divisor of a and of b.
2. Any divisor of a and b is a divisor of c.
[Word Count: 22]

An equivalent definition is the following:
[Word Count: 6]

gcd(a, b) = max[k, such that k a and k b]
[Word Count: 11]

Because we require that the greatest common divisor be positive, gcd(a, b) =
gcd(a, -b) = gcd(-a, b) = gcd(-a, -b). In general, gcd(a, b) = gcd( a , b ). For example,
gcd(60, 24) = gcd(60, -24) = 12. Also, because all nonzero integers divide 0, we have
gcd(a, 0) = a
It is easy to determine the greatest common divisor of two positive integers if
we express each integer as the product of primes. For example,
[Word Count: 78]

k = gcd(a, b)       
kp = min(ap, bp)       for all p
:
[Word Count: 12]

Given any positive integer n and any nonnegative integer a, if we divide a by n,
we get an integer quotient q and an integer remainder r that obey the following
relationship:
[Word Count: 32]

Figure A.1
The Relationship a = qn + r; 0
r 6 n
…
[Word Count: 14]

402
APPENDIX A / SOME ASPECTS OF NUMBER THEORY
[Word Count: 9]

Two integers a and b are said to be congruent modulo n,if (a mod n) = (b mod n).
This is written a
b mod n. For example, 73
4 mod 23 and 21
-9 mod 10. Note
that if a
0 mod n, then n a.
The modulo operator has the following properties:
[Word Count: 54]

1. a
b mod n if n (a - b).
2. (a mod n) = (b mod n) implies a
b mod n.
3. a
b mod n implies b
a mod n.
4. a
b mod n and b
c mod n imply a
c mod n.
[Word Count: 48]

1. [(a mod n) + (b mod n)] mod n = (a + b) mod n
2. [(a mod n) - (b mod n)] mod n = (a - b) mod n
3. [(a mod n) × (b mod n)] mod n = (a × b) mod n
[Word Count: 48]

We demonstrate the first property. Define (a mod n) = ra and (b mod n) = rb.
Then we can write a = ra + jn for some integer j and b = rb + kn for some integer k.
Then
[Word Count: 41]

(a + b) mod n = (ra + jn + rb + kn) mod n
[Word Count: 15]

The remaining properties are as easily proved.
[Word Count: 7]

404
APPENDIX B / PROJECTS FOR TEACHING NETWORK SECURITY
[Word Count: 9]

Analysis and observation, theory and experience must never disdain or exclude each other; on the
contrary, they support each other.
[Word Count: 20]

1. Research projects
2. Hacking project
3. Programming projects
4. Laboratory exercises
5. Practical security assessments
6. Writing assignments
7. Reading/report assignments
[Word Count: 22]

An effective way of reinforcing basic concepts from the course and for teaching
students research skills is to assign a research project. Such a project could involve
a literature search as well as an Internet search of vendor products, research lab
activities, and standardization efforts. Projects could be assigned to teams or, for
smaller projects, to individuals. In any case, it is best to require some sort of project
proposal early in the term, giving the instructor time to evaluate the proposal for
appropriate topic and appropriate level of effort. Student handouts for research
projects should include
[Word Count: 97]

• A format for the proposal
• A format for the final report
• A schedule with intermediate and final deadlines
• A list of possible project topics
[Word Count: 28]

The students can select one of the topics listed in the instructor’s manual or
devise their own comparable project. The IRC includes a suggested format for the
proposal and final report as well as a list of fifteen possible research topics.
[Word Count: 41]

1. Without seeking any sort of help.
2. Using some provided hints.
3. Using exact directions.
[Word Count: 16]

The IRC includes the files needed for this project:
[Word Count: 9]

1. Web Security project.
2. Web Hacking exercises (XSS and Script-attacks) covering client-side and server-
side vulnerability exploitations, respectively.
3. Documentation for installation and use for the above.
4. A PowerPoint file describing Web hacking.This file is crucial to understanding
how to use the exercises since it clearly explains the operation using screen
shots.
[Word Count: 54]

This project was designed and implemented by Professor Sreekanth Malladi
of Dakota State University.
[Word Count: 14]

The programming project is a useful pedagogical tool. There are several attractive
features of stand-alone programming projects that are not part of an existing security
facility.
[Word Count: 26]

1. The instructor can choose from a wide variety of cryptography and network
security concepts to assign projects.
2. The projects can be programmed by the students on any available computer
and in any appropriate language; they are platform and language independent.
3. The instructor need not download, install, and configure any particular infra-
structure for stand-alone projects.
[Word Count: 58]

There is also flexibility in the size of projects. Larger projects give students more
a sense of achievement, but students with less ability or fewer organizational skills can
be left behind.Larger projects usually elicit more overall effort from the best students.
Smaller projects can have a higher concepts-to-code ratio, and because more of them
can be assigned, the opportunity exists to address a variety of different areas.
[Word Count: 67]

406
APPENDIX B / PROJECTS FOR TEACHING NETWORK SECURITY
[Word Count: 9]

Again, as with research projects, the students should first submit a proposal.
The student handout should include the same elements listed in Section A.1. The
IRC includes a set of twelve possible programming projects.
The following individuals have supplied the research and programming projects
suggested in the instructor’s manual: Henning Schulzrinne of Columbia University;
Cetin Kaya Koc of Oregon State University; and David M. Balenson of Trusted Infor-
mation Systems and George Washington University.
[Word Count: 74]

Professor Sanjay Rao and Ruben Torres of Purdue University have prepared a set of
laboratory exercises that are part of the IRC. These are implementation projects
designed to be programmed on Linux but could be adapted for any Unix environment.
These laboratory exercises provide realistic experience in implementing security func-
tions and applications.
[Word Count: 53]

Another excellent way to reinforce concepts from the course and to give students
research experience is to assign papers from the literature to be read and analyzed.
The IRC includes a suggested list of papers, one or two per chapter, to be assigned.
The IRC provides a PDF copy of each of the papers. The IRC also includes a sug-
gested assignment wording.
[Word Count: 63]

B
Base-64 (radix-64) transfer encoding, 247
Basic service set (BSS), IEEE 802.11, 179–180
Block ciphers, 30, 34, 45, 50–53
cipher block chaining (CBC) mode, 50, 51
cipher feedback (CFB) mode, 52–53
defined, 45
design of, 34
electronic codebook (ECB), 50
modes of operation, 54
plaintext processing, cryptography, 30
[Word Count: 48]

Codebook, 50
defined, 50
electronic (ECB), 50
Compression, 227–228
PGP, 227–228
SSL, 145
Computer security, defined, 2
Confidentiality, 15–16, 27–60, 227–229, 285, 292.
See also Encryption
data, 15, 16
Internet Protocol (IP), 283, 290
messages, 27–58
pretty good privacy (PGP), 225–227
traffic flow (TFC), 283
Connection, SSL, 143
Connection Protocol, SSH, 163, 168–172
Cookie exchange, 294–295
CRL issuer, PKI, 125
Cross-certification, PKI, 126
Cryptanalysis, 30–32
Cryptography, 32, 81–84, 85–92. See also
Public-key cryptography
algorithms, 83–90
classification of systems, 30
cryptosystems, applications for, 79–82
encryption structure, 79–81
public-key, 79–82, 83–90
requirements for, 82
Cryptographic computations, 154–155, 160
[Word Count: 96]

D
Data, 15, 16–17
confidentiality, 15, 16
integrity, 16–17
origin authentication, 18
Data Encryption Standard (DES), 34–38
algorithm (DES), description of, 35
strength of, 35–36
triple (3DES), 36–38
Decryption algorithm, 29, 81
Denial-of-service (DoS) attack, 16
defined, 11
DES, see Data Encryption Standard (DES)
Diffie-Hellman key exchange, 85–89, 151, 155
anonymous, 151
algorithm, 86–88
ephemeral, 151
fixed, 151
introduction to, 85–86
man-in-the-middle attack, 88–89
[Word Count: 64]

Diffie-Hellman key exchange (Continued)
protocols, 88
SSL Handshake Protocol, 151, 155
Digital Signature Algorithm (DSA), 89
Digital Signature Standard (DSS), 89
Digital signatures, 90
Discovery phase, IEEE 802.11i, 185–188
Distribution system (DS), IEEE 802.11, 180–182
DomainKeys Identified Mail (DKIM), 257–264
e-mail threats, 259–261
functional flow, 261–264
Internet mail architecture, 258–259
DoS, see Denial-of-service (DoS) attack
Double encryption, 111
[Word Count: 58]

F
Feistel cipher structure, 32–34
Fortezza key exchange, 151–153, 159
Forward certificate, 120
Fragmentation, SSL, 145
[Word Count: 16]

G
Group master key (PMK), IEEE 802.11i,
192–193
[Word Count: 8]

H
Handshake Protocol, 143, 149–154, 209–211
Hash functions, 65–66, 67–73
HMAC, 73–76
one-way, 65–66
requirements, 66–67
secure, 67–73
Secure Hash Algorithm (SHA), 70
SHA-1 secure functions, 70–73
simple, 68–70
strong collision resistance, 67
weak collision resistance, 67
[Word Count: 37]

HMAC, 73–76
algorithm, 74–76
design objectives, 74
Host keys, SSH, 163
HTTPS, 140, 160–162
[Word Count: 14]

security policy database (SPD), 276, 278–279
traffic processing, 279–281
Internet Protocol security (IPsec), 270–279
documents, 273–274
packets, 279–281
policy, 276–279
routing, 273
transport mode, 274–276
tunnel mode, 274–276
Internet security, 221–304
defined, 2
electronic mail, 221–304
Internet protocol (IP), 142, 269–303
Transport Layer Security (TLS), 140, 142
transport-level, 139–174
Internet Security Association and Key
Management Protocol (ISAKMP), 293
Internet standards, 21
Internet Architecture Board (IAB), 21
Internet Engineering Task Force (IETF), 21
RFCs, 21
Interrealm authentication, 111
IP, see Internet Protocol (IP)
ISAKMP, see Internet Security and Key
management Protocol (ISAKMP)
ITU-T Recommendation X.800, see X.800
standard recommendations
[Word Count: 98]

K
Kerberos, 99–114
authentication dialogues, 100–108, 112–114
authentication forwarding, 111
authentication server (AS), 100
authentication service exchange, 112–113
client/server authentication exchange, 113
differences between versions 4 and 5, 110–111
double encryption, 111
encryption system dependence, 111
environmental shortcomings, 111
Internet protocol dependence, 111
interrealm authentication, 111
introduction to, 99–100
message byte ordering, 111
nonce, 112
options, 112
password attacks, 112
principal, 108
propagating cipher block chaining (PCBC)
encryption, 112
realms, 108–112, 113
session keys, 112
[Word Count: 75]

Key rings, PGP, 233–236
Key schedule algorithm, DES, 94
Keystream, defined, 45
[Word Count: 12]

L
Link encryption, 98
Logical link control (LLC) layer, IEEE 800, 179
[Word Count: 12]

MIME, see Multipurpose Internet Mail
Extensions (MIME)
Mix columns,AES, 40
Model for network security, 19–21
Modification of messages, 11, 13
Multipurpose Internet Mail Extensions
(MIME), 242–247
canonical form, 247
content types, 244–246
transfer encodings, 246–247
[Word Count: 35]

O
Oakley Key Determination Protocol, 293
One-way function, 65–66
authentication, 65–66
hash functions, 65–66
X.507, 121–122
Open systems interconnection (OSI), 8–19
Options, Kerberos, 111
[Word Count: 24]

defined, 81
distribution, 114–116
management, 236–241
pretty good privacy (PGP), 234–241
revoking, 241
ring, 233–236
secret keys, distribution of using, 116
subject key identifier, 123
trust, PGP fields, 237–241
usage, X.509 authentication service, 123
X.509 authentication service information,
123–124
[Word Count: 39]

Q
Quoted-printable transfer encoding, 247
[Word Count: 5]

Round, 32, 34, 40–41
Add Round Key, 40
AES encryption, 40–41
function, Feistel cipher, 31, 33
Routing, IPsec, 273
RSA, 83–85
public-key encryption, 83–85
RSA algorithm, see Rivest-Shamir-Adleman
(RSA) algorithm
[Word Count: 30]

Symmetric encryption (Continued)
computationally secure, 31
cryptanalysis, 30–32
cryptography, 30
decryption algorithm, 29
encryption algorithm, 28
Feistel cipher structure, 32–34
key size, 33
plaintext, 28, 30–31
principles of, 28–34
requirements of, 29
round function, 32, 33
rounds, number of, 33
secret key, 29
subkey generation algorithm, 34
[Word Count: 47]

Secure Socket Layer (SSL), 140, 142–155
Transport Layer Security (TLS), 140, 142,
156–160
Web considerations, 140–142
Transport mode, IP, 274–276, 285–288
Triple Data Encryption Standard (3DES), 36–37
Trust, PGP fields, 237–241
Tunnel, SSH, 169–170
Tunnel mode, IP, 274–276, 285–288
[Word Count: 39]

U
USENET newsgroups, 24
User Authentication Protocol, SSH, 163,
167–168
[Word Count: 10]

V
VeriSign certificates, S/MIME, 255–257
Version number,TLS, 156
[Word Count: 8]

Robust Security Network (RSN), 183–184
Wi-Fi Protected Access (WPA),
176–177, 183
Wired Equivalent Privacy (WEP), 183
Wireless Application Protocol (WAP), 176,
197–204, 214–217
Wireless Transport Layer Security (WTLS),
176, 204–214
Wireless session protocol (WSP),WAP, 203
Wireless transaction protocol (WTP),WAP,
203–204
Wireless Transport Layer Security (WTLS), 176,
204–214
Alert Protocol, 208–209
authentication, 211–212
Change Cipher Spec Protocol, 207–208
cryptographic algorithms, 211–214
Handshake Protocol, 209–211
key exchange, 212–213
master key generation, 213–214
protocol architecture, 206–211
[Word Count: 73]

pseudorandom function (PRF), 213
Record Protocol, 206–207
sessions and connections, 205–206
[Word Count: 11]

X
X.509 certificate, 116–124
certificate revocation list (CRL), 122
certificates, 117–119
certification authority (CA), 116
forward certificate, 120
introduction to, 116
issuer attributes, 123–124
key information, 122–123
path constraints, 124
policy information, 122
reverse certificate, 120
revocation of certificates, 121–122
subject attributes, 122–123
user’s certificate, obtaining, 118–119
version 3, 122–124
X.800 standard recommendations, 8, 14, 16–17
[Word Count: 56]

Total Paragraphs: 2961