<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Nedsym spamming</title>
<meta name="description" content="Despite recent declines, spam still accounts for more than 70% of all email sent. Why does this happen? He Xu exposes the tip of the iceberg by analysing a recent spambot which is driven by the Andromeda botnet: Win32/Nedsym.G." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1838;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201309-Nedsym"></a>Nedsym spamming</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2013-09-02</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="surname">He Xu</span></h3><span class="orgname">Fortinet</span>, <span class="orgdiv">Canada</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Despite recent declines, spam still accounts for more than 70% of all email sent. Why does this happen? He Xu exposes the tip of the iceberg by analysing a recent spambot which is driven by the Andromeda botnet: Win32/Nedsym.G.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2013 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2945" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2945" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id3859686"></a></span></dt><dt><span class="sect1"><a href="#id4644878">Installation</a></span></dt><dt><span class="sect1"><a href="#id3064966">Preparation</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id3089104">Add to firewall list</a></span></dt><dt><span class="sect2"><a href="#id2502503">Create thread</a></span></dt><dt><span class="sect2"><a href="#id4680260">Drop and load two additional modules</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id2736317">Communication</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id3535092">Different gates for different jobs</a></span></dt><dt><span class="sect2"><a href="#id3956730">Fake traffic</a></span></dt><dt><span class="sect2"><a href="#id4511445">Get initial configuration</a></span></dt><dt><span class="sect2"><a href="#id4514632">Define macro</a></span></dt><dt><span class="sect2"><a href="#id4572471">Grab local emails</a></span></dt><dt><span class="sect2"><a href="#id4779295">Get spamming template</a></span></dt><dt><span class="sect2"><a href="#id2697417">More detail</a></span></dt><dt><span class="sect2"><a href="#id4898649">Error feedback in SEH routine</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3694618">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3859686"></a></h2></div></div></div><p>A number of security reports in 2012 declared that spam was on the decline [<span class="citation"><a href="#citation.1">1</a></span>]. However, spam still accounts for more than 70% of all email sent &ndash; an enormous proportion. Why does this happen? In this article we will expose the tip of the iceberg by analysing a recent spambot which is driven by the Andromeda botnet and detected by <span class="emphasis"><em>Microsoft</em></span> as Win32/Nedsym.G.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4644878"></a>Installation</h2></div></div></div><p>The bot uses a loader and mailer module mechanism. </p><p>The loader will create a new folder in the %App Data% system folder and generate an extremely long folder name using the following hard coded string prefixed with &lsquo;x&rsquo;: </p><p>qwertyuiopasdfghjklzxcvbnm123456789 </p><p>Then, if the full path of the executing bot does not include the string &lsquo;vcnost.e&rsquo;, it will enumerate all processes and terminate every one whose filename includes &lsquo;svcnost.&rsquo; to make sure that only one instance of the bot is running. </p><p>It then moves itself to the sub-folder as svcnost.exe. </p><p>Next, the bot creates another folder with the same name as the previous one, but with the character &lsquo;2&rsquo; added to the end. We will see why later. </p><p>It adds the following registry value to ensure that it runs automatically each time the system is started: </p><p><span class="bold"><strong>Key:</strong></span> HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run </p><p><span class="bold"><strong>Name:</strong></span> Windows Init </p><p><span class="bold"><strong>Value:</strong></span> %App Data%\x&lt;Random String&gt;2\svcnost.exe </p><p>The bot moves itself again so that its location matches the registry value. </p><p>It starts itself in the new location and then overwrites the system hosts file, as shown in <a href="#figure.1">Figure 1</a>, in order to disable various security software updates, including those from <span class="emphasis"><em>Kaspersky Lab</em></span>, <span class="emphasis"><em>McAfee</em></span>, <span class="emphasis"><em>Symantec</em></span> and <span class="emphasis"><em>Microsoft</em></span> &ndash; 195 in total. </p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Compromised hosts file." src="/uploads/images/figures/2013/09/XuYeong-1.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Compromised hosts file.</b></p></div><p>We have found newer variants that simplify and customize this routine. First, the malware tries to create a named mutex, &lsquo;MSCTF.Shared.MUTEX.LDR&rsquo;, to prevent multiple instances running, then it copies itself to %App Data% with the hard coded filename &lsquo;wmprwise.exe&rsquo; and adds the following registry entry: </p><p><span class="bold"><strong>Key:</strong></span> HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run </p><p><span class="bold"><strong>Name:</strong></span> Microsoft Firewall 2.9 </p><p><span class="bold"><strong>Value:</strong></span> %App Data%\wmprwise.exe </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3064966"></a>Preparation</h2></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3089104"></a>Add to firewall list</h3></div></div></div><p>The bot adds its path to the firewall&rsquo;s list of authorized applications by adding the following registry entry:</p><p><span class="bold"><strong>Key:</strong></span> HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile\AuthorizedApplications\List </p><p><span class="bold"><strong>Name:</strong></span> %App Data%\x&lt;Random String&gt;2\svcnost.exe </p><p><span class="bold"><strong>Value: </strong></span>%App Data%\x&lt;Random String&gt;2\svcnost.exe:*:Enabled:ldrsoft </p><p>The embedded module will be decrypted and extracted in memory by simulating the PE loader behaviour, then the loader will call the entry point of the module to run the malicious code there. As we see in <a href="#figure.2">Figure 2</a>, the original module&rsquo;s name is Mailer.dll, and it has export structure, but no export function.</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="The mailer module." src="/uploads/images/figures/2013/09/XuYeong-2.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;The mailer module.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2502503"></a>Create thread</h3></div></div></div><p>As shown in <a href="#figure.3">Figure 3</a>, the module simply creates a single new thread then returns. </p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="The module entry point only creates one thread." src="/uploads/images/figures/2013/09/XuYeong-3.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;The module entry point only creates one thread.</b></p></div><p>The loader will then drop in a dead loop that sleeps permanently (<a href="#figure.4">Figure 4</a>). </p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Loader drops in a dead loop for sleeping." src="/uploads/images/figures/2013/09/XuYeong-4.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Loader drops in a dead loop for sleeping.</b></p></div><p>The new thread performs the same operation as the new variant &ndash; it attempts to create a mutex named &lsquo;LDR.ML.STARTED&rsquo; and updates the following registry entry (the value string should be the current BotID, which is generated randomly): </p><p><span class="bold"><strong>Key: </strong></span>HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\LowRegistry </p><p><span class="bold"><strong>Name:</strong></span> SavedLegacySettingsML </p><p><span class="bold"><strong>Value:</strong></span> 447140859 </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4680260"></a>Drop and load two additional modules</h3></div></div></div><p>To encrypt/decrypt packages and support mail server connection by SSL, the bot drops and decrypts two additional DLLs:</p><div class="informaltable"><table border="1"><colgroup><col /><col /></colgroup><thead><tr><th align="center">DLL drop path and filename</th><th align="center">Original filename in export table </th></tr></thead><tbody><tr><td>%AppData%\desktop.ini</td><td>BTREE.dll</td></tr><tr><td>%AppData%\ntuser.dat</td><td>zlib1.dll</td></tr></tbody></table></div><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="The dropped DLL desktop.ini export table." src="/uploads/images/figures/2013/09/XuYeong-5.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;The dropped DLL desktop.ini export table.</b></p></div><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="The dropped DLL ntuser.dat export table." src="/uploads/images/figures/2013/09/XuYeong-6.jpg" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;The dropped DLL ntuser.dat export table.</b></p></div><p>All the export functions will be loaded into the bot and will be used for SSL connection with the mail server. </p><p>The bot only needs a handful of APIs from this module for encrypt/decrypt packages (Figure 7). </p><div class="figure"><a id="figure.7"></a><div class="mediaobject"><img alt="The imported APIs from DLL ntuser.dat." src="/uploads/images/figures/2013/09/XuYeong-7.jpg" /></div><p class="title"><b>Figure&nbsp;7.&nbsp;The imported APIs from DLL ntuser.dat.</b></p></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2736317"></a>Communication</h2></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3535092"></a>Different gates for different jobs</h3></div></div></div><p>Most strings are encrypted initially, so before talking with the C&amp;C server, the following gates are extracted:</p><div class="itemizedlist"><ul type="disc"><li><p>/stat1.php</p></li><li><p>/stat2.php</p></li><li><p>/smtps.php</p></li><li><p>/u.php</p></li><li><p>/error.php</p></li><li><p>/logacc.php</p></li></ul></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3956730"></a>Fake traffic</h3></div></div></div><p>Similar to the Pushdo botnet, the bot will first send fake traffic to make monitoring more difficult. It will select one IP address from the following IP ranges:</p><div class="informaltable"><table border="1"><colgroup><col /></colgroup><tbody><tr><td><span class="bold"><strong>Initial IP ranges</strong></span></td></tr><tr><td> &ldquo;89.149.242.%RND_NUMBER[1-254]&rdquo;| &ldquo;89.149.243.%RND_NUMBER[1-254]&rdquo;| &ldquo;89.149.244.%RND_NUMBER[1-254]&rdquo;| &ldquo;217.20.115.%RND_NUMBER[1-254]&rdquo;| &ldquo;217.20.127.%RND_NUMBER[1-254]&rdquo;| &ldquo;217.20.112.%RND_NUMBER[1-254]&rdquo; </td></tr></tbody></table></div><div class="informaltable"><table border="1"><colgroup><col /></colgroup><tbody><tr><td><span class="bold"><strong>IP ranges after interpretation</strong></span></td></tr><tr><td>&lt;?&ldquo;89.149.242.149&rdquo;|&ldquo;89.149.243.167&rdquo;|&ldquo;89.149.244.62&rdquo;|&ldquo;217.20.115.110&rdquo;|&ldquo;217.20.127.37&rdquo;|&ldquo;217.20.112.235&rdquo;?&gt;</td></tr></tbody></table></div><p>Our investigation revealed that all the IP ranges belong to a single organization (see <a href="#figure.8">Figure 8</a>).</p><div class="figure"><a id="figure.8"></a><div class="mediaobject"><img alt="The IP ranges belong to a single organization." src="/uploads/images/figures/2013/09/XuYeong-8.jpg" /></div><p class="title"><b>Figure&nbsp;8.&nbsp;The IP ranges belong to a single organization.</b></p></div><p>The bot uses the following string as the fake package, and encrypts the package using the deflate API from the dropped ntuser.dat module:</p><p>ver=1&amp;login=kuklachev&amp;macroses_version=2&amp;SMTPWorking=True&amp;SMTPOn=True&amp;SMTPSentNumber=5.x </p><p>As shown in <a href="#figure.9">Figure 9</a>, there is no response to the fake traffic. </p><div class="figure"><a id="figure.9"></a><div class="mediaobject"><img alt="Fake traffic example." src="/uploads/images/figures/2013/09/XuYeong-9.jpg" /></div><p class="title"><b>Figure&nbsp;9.&nbsp;Fake traffic example.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4511445"></a>Get initial configuration</h3></div></div></div><p>For the real traffic, the following pattern is used to generate the package:</p><pre class="programlisting">ver=%s&amp;login=%s&amp;macroses_version=2&amp;SMTPWorking=%s&amp;SMTPOn=%s&amp;SMTPOffMessage=%s&amp;SMTPBlockTime=%d&amp;SMTPSentNumber=
%d&amp;botid=%s&amp;lastsmtp=%s </pre><p>The interpreted parameters are as follows:</p><pre class="programlisting">ver=200&amp;login=admin6&amp;macroses_version=2&amp;SMTPWorking=untested&amp;SMTPOn=True&amp;SMTPOffMessage=&amp;SMTPBlockTime=
0&amp;SMTPSentNumber=0&amp;botid=447140859&amp;lastsmtp= </pre><p>After deflation, the package will be sent to the C&amp;C server with a POST header. There is a trick in the HTTP POST header: the host is not the real C&amp;C address but a hard coded IP. The gate file on the C&amp;C server is http://sonymaind20k.ru/stat1.php. </p><div class="figure"><a id="figure.10"></a><div class="mediaobject"><img alt="First real traffic." src="/uploads/images/figures/2013/09/XuYeong-10.jpg" /></div><p class="title"><b>Figure&nbsp;10.&nbsp;First real traffic.</b></p></div><div class="figure"><a id="figure.11"></a><div class="mediaobject"><img alt="Decrypted configuration." src="/uploads/images/figures/2013/09/XuYeong-11.jpg" /></div><p class="title"><b>Figure&nbsp;11.&nbsp;Decrypted configuration. </b></p></div><p>After inflation we see the configuration file shown in <a href="#figure.11">Figure 11</a>. </p><p>To check the validity of the received package, the bot will examine the &lsquo;#BODY&rsquo; tag. The first line of configuration data is the list of victim email addresses and will be used for the SMTP &lsquo;RCPT TO:&rsquo; command [<span class="citation"><a href="#citation.2">2</a></span>]. The second line is the email address for the SMTP &lsquo;MAIL FROM:&rsquo; command. The third line is the spamming job ID that is issued by the C&amp;C server, including username and password combined with the &lsquo;/&rsquo; symbol. The fourth line is the proxy server. The fifth line is the mail server port mapping table. From the sixth line to the first #BODY tag is the block for updating the bot&rsquo;s initial options (see Figure 12). </p><div class="figure"><a id="figure.12"></a><div class="mediaobject"><img alt="Initial options." src="/uploads/images/figures/2013/09/XuYeong-12.jpg" /></div><p class="title"><b>Figure&nbsp;12.&nbsp;Initial options.</b></p></div><p>The bot can support the following keyword options, and skips lines that it cannot support: </p><div class="itemizedlist"><ul type="disc"><li><p>RAW_FORMAT</p></li><li><p>CONF_TIMEOUT</p></li><li><p>CONF_RETRIES</p></li><li><p>MAXIMUM_THREADS</p></li><li><p>MAXSMTPFails</p></li><li><p>OneTimeSMTPid</p></li><li><p>FULL_REPORTS</p></li><li><p>OneTimeSMTP</p></li><li><p>SMTPOn</p></li><li><p>Remarks</p></li></ul></div><p>In the example shown in <a href="#figure.11">Figure 11</a>, the C&amp;C server /stat1.php will update bot RAW_FORMAT to YEAH, then turn off and turn on the FULL_REPORTS option. So finally the C&amp;C server has only updated the bot&rsquo;s CONF_RETRIES value from the default 1 to 2. </p><p>In fact, we can see that the SMTPWorking value is &lsquo;traptesting&rsquo;, which means that it is not really for spamming but for grabbing local email information in the next section. </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4514632"></a>Define macro</h3></div></div></div><p>The block between the first and second #BODY tags is the macro pattern and range limit. </p><p>There are two different types of macro. The first type, starting with the character &lsquo;R&rsquo;, is for declaring a random range; the second type, starting with &lsquo;S&rsquo;, is for declaring the format. The bot will convert each macro beginning with &lsquo;S&rsquo; to a fixed string that may be used for spamming later. </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4572471"></a>Grab local emails</h3></div></div></div><p>The bot will try to grab local email information from the following applications:</p><div class="itemizedlist"><ul type="disc"><li><p><span class="emphasis"><em>RITLabs The Bat! Email Client</em></span></p></li><li><p><span class="emphasis"><em>Internet Explorer IntelliForms</em></span></p></li><li><p><span class="emphasis"><em>Mozilla Firefox</em></span></p></li></ul></div><p>Once any information is found and grabbed, the bot will convert it to an extremely long string and add it into the following pattern: </p><p>botid=%s&amp;accs=%s </p><p>Then it deflates the information and sends it to the C&amp;C server http://sonymaind20k.ru/logacc.php with a similar HTTP POST header to the one shown in <a href="#figure.10">Figure 10</a>. </p><p>For the grabbed emails, the bot will test the data directly. It will generate an email template according to the pattern that follows the second #BODY tag in the configuration file. </p><p>The bot begins to enter a permanent loop for getting the spam configuration file and spamming routine. </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4779295"></a>Get spamming template</h3></div></div></div><p>The bot will send the same package to the C&amp;C server as it sent to get the initial configuration, but this time the C&amp;C server gate path will be changed to http://sonymaind20k.ru/ stat2.php. In response, it gets the spamming configuration file, as shown in <a href="#figure.13">Figure 13</a>. </p><div class="figure"><a id="figure.13"></a><div class="mediaobject"><img alt="Second configuration." src="/uploads/images/figures/2013/09/XuYeong-13.jpg" /></div><p class="title"><b>Figure&nbsp;13.&nbsp;Second configuration.</b></p></div><p>This set of configuration data is similar to the first. The first line is the list of victim email addresses separated by the symbol &lsquo;,&rsquo;. The second line is a macro to indicate that the bot should get the email from the LAST_GOOD_MAIL block, or from the first line if the block is empty. </p><p>According to the configuration, the bot will run 30 threads to send spam (<a href="#figure.13">Figure 13</a>). </p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2697417"></a>More detail</h3></div></div></div><p>In each spamming thread, the bot will get a single address from the list of victim email addresses to use as the destination, then pick up another from the LAST_GOOD_MAIL block to use as the &lsquo;MAIL FROM:&rsquo; content, continually interpreting the final spamming email according to the template that follows the second #BODY tag. </p><p>The bot currently supports the following keywords in the spam template: </p><div class="itemizedlist"><ul type="disc"><li><p>RND_UC_CHAR</p></li><li><p>RND_LC_CHAR</p></li><li><p>RND_DIGIT</p></li><li><p>RND_NUMBER</p></li><li><p>CURRENT_DATE_TIME</p></li><li><p>RND_DATE_TIME</p></li><li><p>OUTLOOK_BOUNDARY</p></li><li><p>OUTLOOK_MESSAGE-ID</p></li><li><p>OUTLOOK_SHORT_MESSAGE-ID</p></li><li><p>PROXY</p></li><li><p>TO_MAIL</p></li><li><p>LOCAL_HOST</p></li><li><p>TO_NAME</p></li><li><p>TO_CC_DEFAULT_HANDLER</p></li><li><p>LAST_GOOD_MAIL</p></li><li><p>FROM</p></li><li><p>FROM_NAME</p></li></ul></div><p>After interpretation, all keywords will be converted to the final spam email content and sent to the mail server according to the SMTP commands (<a href="#figure.14">Figure 14</a>). </p><div class="figure"><a id="figure.14"></a><div class="mediaobject"><img alt="SMTP traffic." src="/uploads/images/figures/2013/09/XuYeong-14.jpg" /></div><p class="title"><b>Figure&nbsp;14.&nbsp;SMTP traffic.</b></p></div><p>An example of the spam email is shown in <a href="#figure.15">Figure 15</a>. </p><div class="figure"><a id="figure.15"></a><div class="mediaobject"><img alt="Example of the spam email." src="/uploads/images/figures/2013/09/XuYeong-15.jpg" /></div><p class="title"><b>Figure&nbsp;15.&nbsp;Example of the spam email.</b></p></div><p>The referred URL in the spam message is an online pharmacy &ndash; <a href="#figure.16">Figure 16</a> shows a screenshot of the site. </p><div class="figure"><a id="figure.16"></a><div class="mediaobject"><img alt="URL screenshot." src="/uploads/images/figures/2013/09/XuYeong-16.jpg" /></div><p class="title"><b>Figure&nbsp;16.&nbsp;URL screenshot.</b></p></div><p>When the bot has tried all the addresses, it will send a feedback package to the C&amp;C server using the following pattern:</p><pre class="programlisting">ver=%s&amp;login=%s&amp;id=%s&amp;totalsent=%d&amp;totallost=%d&amp;totaldrop=%d&amp;SMTPSent=%d&amp;Remarks=%s&amp;macroses_version=2&amp;botid=
%s&amp;lastsmtp=%s&amp;SMTPWorking=%s&amp;sent=%s&amp;lost=%s&amp;drop=%s </pre><p>The bot does not need the C&amp;C server to respond, so once the feedback package has been sent, it will close the connection and prepare for the next spamming routine (<a href="#figure.17">Figure 17</a>). </p><div class="figure"><a id="figure.17"></a><div class="mediaobject"><img alt="The feedback package is one way only, so the bot closes the connection." src="/uploads/images/figures/2013/09/XuYeong-17.jpg" /></div><p class="title"><b>Figure&nbsp;17.&nbsp;The feedback package is one way only, so the bot closes the connection.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4898649"></a>Error feedback in SEH routine</h3></div></div></div><p>To improve the bot&rsquo;s next generation and fix possible bugs, it has added code for feedback traffic in SEH routines. When an exception occurs, the bot will not try to fix it, but will generate a package using the following pattern and send it back to the /error.php C&amp;C server: </p><p>id=%s&amp;botid=%s&amp;error=%d </p><p>The bot feeds back one of the following error codes to the C&amp;C server: </p><div class="informaltable"><table border="1"><colgroup><col /><col /></colgroup><tbody><tr><td><span class="bold"><strong>Error code</strong></span></td><td><span class="bold"><strong>Description</strong></span></td></tr><tr><td>1</td><td>Keywords interpretation exception</td></tr><tr><td>2</td><td>Spam template interpretation exception</td></tr><tr><td>3</td><td>Convert string or number range exception</td></tr><tr><td>4</td><td>Pattern interpretation exception</td></tr></tbody></table></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3694618"></a>Conclusion</h2></div></div></div><p>Through our analysis of this spambot, we have seen a glimpse of how it spreads and works. The bot herder has never given up any opportunities to earn money. Each time we thought that the situation was improving, the bot herder was ready to launch a new round of attacks. It is a good idea to upgrade insecure email servers to ensure that they block spam.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2138486"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] Gudkova, D. Kaspersky Security Bulletin Spam Evolution 2012. January 2013. <span class="bibliosource"><a href="https://www.securelist.com/en/analysis/204792276/Kaspersky_Security_Bulletin_Spam_Evolution_2012" target="_blank">http://www.securelist.com/en/analysis/204792276/Kaspersky_Security_Bulletin_Spam_Evolution_2012</a></span>. </p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] RFC 821 Simple Mail Transfer Protocol. <span class="bibliosource"><a href="https://tools.ietf.org/html/rfc821" target="_blank">http://tools.ietf.org/html/rfc821</a></span>. </p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Nedsym spamming&url=https://www.virusbulletin.com/virusbulletin/2013/09/nedsym-spamming"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2013/09/nedsym-spamming'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2013/09/nedsym-spamming&title=Nedsym spamming"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2013/09/nedsym-spamming&t=Nedsym spamming"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2013/09/nedsym-spamming"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>