<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="google-site-verification" content="_b2avZwzr79oru6lM2Ddae1fNpSIbPaP0H0WNkc2x3k"/>
    <meta name="msvalidate.01" content="CE77828A466C2513F660017CFCB6BA13"/>
    <link rel="icon" href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/favicon.ico">

    

            
    
    <link href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/css/main.css?id=b3e7fe8a6c3736dca145" rel="stylesheet">
    <script type="text/javascript"> var appInsights=window.appInsights||function(a){ function b(a){c[a]=function(){var b=arguments;c.queue.push(function(){c[a].apply(c,b)})}}var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie=d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f="onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c }({ instrumentationKey:"dcb460fe-684e-4d39-bfcd-d3a6f2710a32" }); window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView(); </script>
    <script>
        window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        'Author': 'Joan Calvet',
        'ArticleCategory': 'Malware',
        'ArticleSection': 'Research',
        'cookie-bar-hq': true
    });
</script>
<script>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-PMDGSM');
</script>

<!-- This site is optimized with the Yoast SEO plugin v9.2 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2 | WeLiveSecurity</title>
<meta name="description" content="Boaxxe adware: &#039;A good advert sells the product without drawing attention to itself&#039; Part 2"/>
<link rel="canonical" href="https://www.welivesecurity.com/2014/01/17/boaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2 | WeLiveSecurity" />
<meta property="og:description" content="Boaxxe adware: &#039;A good advert sells the product without drawing attention to itself&#039; Part 2" />
<meta property="og:url" content="https://www.welivesecurity.com/2014/01/17/boaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2/" />
<meta property="og:site_name" content="WeLiveSecurity" />
<meta property="article:tag" content="adware" />
<meta property="article:tag" content="Malware" />
<meta property="article:section" content="Malware" />
<meta property="article:published_time" content="2014-01-17T08:42:06+00:00" />
<meta property="article:modified_time" content="2014-01-17T09:07:49+00:00" />
<meta property="og:updated_time" content="2014-01-17T09:07:49+00:00" />
<meta property="og:image" content="https://www.welivesecurity.com/wp-content/uploads/2014/01/ads-1024x762.jpg" />
<meta property="og:image:secure_url" content="https://www.welivesecurity.com/wp-content/uploads/2014/01/ads-1024x762.jpg" />
<meta property="og:image:width" content="1024" />
<meta property="og:image:height" content="762" />
<meta property="og:image:alt" content="Adverts (Rex)" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content="Boaxxe adware: &#039;A good advert sells the product without drawing attention to itself&#039; Part 2" />
<meta name="twitter:title" content="Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2 | WeLiveSecurity" />
<meta name="twitter:site" content="@welivesecurity" />
<meta name="twitter:image" content="https://www.welivesecurity.com/wp-content/uploads/2014/01/ads.jpg" />
<meta name="twitter:creator" content="@welivesecurity" />
<!-- / Yoast SEO plugin. -->

<link rel="alternate" type="application/rss+xml" title="WeLiveSecurity RSS 2.0 Feed" href="/rss-configurator/" /><style type="text/css" id="syntaxhighlighteranchor"></style>
        <link id="cookie-style" rel="stylesheet" type="text/css" href="https://assets.esetstatic.com/3PS/cookiebar.min.css">

<script>(window.BOOMR_mq=window.BOOMR_mq||[]).push(["addVar",{"rua.upush":"false","rua.cpush":"false","rua.upre":"false","rua.cpre":"false","rua.uprl":"false","rua.cprl":"false","rua.cprf":"false","rua.trans":"","rua.cook":"false","rua.ims":"false","rua.ufprl":"false","rua.cfprl":"false","rua.isuxp":"false","rua.texp":"norulematch"}]);</script>
                              <script>!function(e){var n="https://s.go-mpulse.net/boomerang/";if("False"=="True")e.BOOMR_config=e.BOOMR_config||{},e.BOOMR_config.PageParams=e.BOOMR_config.PageParams||{},e.BOOMR_config.PageParams.pci=!0,n="https://s2.go-mpulse.net/boomerang/";if(window.BOOMR_API_key="7R9SM-QGSYF-QDLJK-UETXR-SPM6B",function(){function e(){if(!o){var e=document.createElement("script");e.id="boomr-scr-as",e.src=window.BOOMR.url,e.async=!0,i.parentNode.appendChild(e),o=!0}}function t(e){o=!0;var n,t,a,r,d=document,O=window;if(window.BOOMR.snippetMethod=e?"if":"i",t=function(e,n){var t=d.createElement("script");t.id=n||"boomr-if-as",t.src=window.BOOMR.url,BOOMR_lstart=(new Date).getTime(),e=e||d.body,e.appendChild(t)},!window.addEventListener&&window.attachEvent&&navigator.userAgent.match(/MSIE [67]\./))return window.BOOMR.snippetMethod="s",void t(i.parentNode,"boomr-async");a=document.createElement("IFRAME"),a.src="about:blank",a.title="",a.role="presentation",a.loading="eager",r=(a.frameElement||a).style,r.width=0,r.height=0,r.border=0,r.display="none",i.parentNode.appendChild(a);try{O=a.contentWindow,d=O.document.open()}catch(_){n=document.domain,a.src="javascript:var d=document.open();d.domain='"+n+"';void(0);",O=a.contentWindow,d=O.document.open()}if(n)d._boomrl=function(){this.domain=n,t()},d.write("<bo"+"dy onload='document._boomrl();'>");else if(O._boomrl=function(){t()},O.addEventListener)O.addEventListener("load",O._boomrl,!1);else if(O.attachEvent)O.attachEvent("onload",O._boomrl);d.close()}function a(e){window.BOOMR_onload=e&&e.timeStamp||(new Date).getTime()}if(!window.BOOMR||!window.BOOMR.version&&!window.BOOMR.snippetExecuted){window.BOOMR=window.BOOMR||{},window.BOOMR.snippetStart=(new Date).getTime(),window.BOOMR.snippetExecuted=!0,window.BOOMR.snippetVersion=12,window.BOOMR.url=n+"7R9SM-QGSYF-QDLJK-UETXR-SPM6B";var i=document.currentScript||document.getElementsByTagName("script")[0],o=!1,r=document.createElement("link");if(r.relList&&"function"==typeof r.relList.supports&&r.relList.supports("preload")&&"as"in r)window.BOOMR.snippetMethod="p",r.href=window.BOOMR.url,r.rel="preload",r.as="script",r.addEventListener("load",e),r.addEventListener("error",function(){t(!0)}),setTimeout(function(){if(!o)t(!0)},3e3),BOOMR_lstart=(new Date).getTime(),i.parentNode.appendChild(r);else t(!1);if(window.addEventListener)window.addEventListener("load",a,!1);else if(window.attachEvent)window.attachEvent("onload",a)}}(),"".length>0)if(e&&"performance"in e&&e.performance&&"function"==typeof e.performance.setResourceTimingBufferSize)e.performance.setResourceTimingBufferSize();!function(){if(BOOMR=e.BOOMR||{},BOOMR.plugins=BOOMR.plugins||{},!BOOMR.plugins.AK){var n=""=="true"?1:0,t="",a="eaaqm7bfmqcrqkqce3yp4aaaabroumak-f-caf897e12-clienttons-s.akamaihd.net",i="false"=="true"?2:1,o={"ak.v":"32","ak.cp":"1251022","ak.ai":parseInt("757730",10),"ak.ol":"0","ak.cr":11,"ak.ipv":6,"ak.proto":"http/1.1","ak.rid":"1ece6345","ak.r":44866,"ak.a2":n,"ak.m":"dscr","ak.n":"ff","ak.bpcip":"2001:67c:2564:518::","ak.cport":52838,"ak.gh":"92.122.101.45","ak.quicv":"","ak.tlsv":"tls1.3","ak.0rtt":"","ak.csrc":"-","ak.acc":"reno","ak.t":"1659514890","ak.ak":"hOBiQwZUYzCg5VSAfCLimQ==dbiMqfEgZrcl6OgG6vpIuTw1kY4PHcDK0b+idDxvamn2gMku11i7KK7DnpZ76ZTHkXDOFJCYxRPu3yNL05Vvh+D6ahjAwxzWPHaXmntW3C7uojKyIXykS2eyAViWNb/JXYR+kOK7wXNbOR2lfcUhbs8Sc0FqPmHJjzXP/dkLCk/3/jyfubxZmtPELoyKZB404G2wg5ZMgTyFhYTXv88BbyRoEj5iAOAHyFPJCk8FLBU6Sr05jItN7LnuQToG32kPff00buvB/TPBeZHyFbhRx+YNZH8tIdsbF6LYyc0nMCEoY2Cc3RyQ9uFmM2jstVswk/xCU9mwD4I4jRoqKCkPnfeu6XCvWF9RIsoyT0GYqBllAmA+3e4Cq5OYfMLm/o3zZlym04ogMHIZtUpbSRU4T+WqfXacly4TaTACb1GfVBQ=","ak.pv":"11","ak.dpoabenc":"","ak.tf":i};if(""!==t)o["ak.ruds"]=t;var r={i:!1,av:function(n){var t="http.initiator";if(n&&(!n[t]||"spa_hard"===n[t]))o["ak.feo"]=void 0!==e.aFeoApplied?1:0,BOOMR.addVar(o)},rv:function(){var e=["ak.bpcip","ak.cport","ak.cr","ak.csrc","ak.gh","ak.ipv","ak.m","ak.n","ak.ol","ak.proto","ak.quicv","ak.tlsv","ak.0rtt","ak.r","ak.acc","ak.t","ak.tf"];BOOMR.removeVar(e)}};BOOMR.plugins.AK={akVars:o,akDNSPreFetchDomain:a,init:function(){if(!r.i){var e=BOOMR.subscribe;e("before_beacon",r.av,null,null),e("onbeacon",r.rv,null,null),r.i=!0}return this},is_complete:function(){return!0}}}}()}(window);</script></head>
<body class="no-js single noimage">
<noscript>
	<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PMDGSM" height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>

<div class="main">
    <header id="site-header" class="container">
        <div class="row">
            <div class="col-md-4 col-sm-12 col-xs-12 pull-right" id="header-nav">
                <div class="row">
                    <div class="hidden-lg hidden-md col-sm-7 col-xs-8 hidden-xxs">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
                    <div class="col-md-8 hidden-sm hidden-xs languages">
                        <div class="dropdown">
	<button class="btn btn-default dropdown-toggle" type="button" id="main-language-picker" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    	<span class="text">In English</span>
    	<span class="icomoon icon-icon_arrow"></span>
  	</button>
  	<ul class="dropdown-menu" aria-labelledby="main-language-picker">
            <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
      	</ul>
</div>                    </div>
                    <div class="col-md-4 col-sm-2 col-xs-3 menu-trigger">
                        <div class="menu-btn">
	<span class="text">Menu</span>
	<button type="button" id="menu-trigger" class="tcon tcon-menu--xcross" aria-label="toggle menu">
        <span class="wrapper">
            <span class="tcon-menu__lines" aria-hidden="true"></span>
            <span class="tcon-visuallyhidden">toggle menu</span>
        </span>
    </button>
</div>                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 imc" id="main-menu">
                        <nav class="menu clearfix imc">
                            <ul class="col-md-12 col-sm-6 col-xs-6 imc">
                                                                    <li class="">
                                        <a href="/">
                                            All Posts                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="http://welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/">
                                            Ukraine Crisis – Digital Security Resource Center                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/we-live-progress/">
                                            We Live Progress                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/research">
                                            Research                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/how-to/">
                                            How To                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/media/videos/">
                                            Videos                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/conference-papers/">
                                            Conference Materials                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/white-papers/">
                                            White Papers                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/threat-reports/">
                                            Threat Reports                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/magazine/">
                                            Magazine                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/our-experts/">
                                            Our Experts                                        </a>
                                    </li>
                                                            </ul>

                            <div class="col-md-12 col-sm-6 col-xs-6 imc">
                                <ul class="languages hidden-lg hidden-md hidden-xxs col-xs-12 imc">
                                        <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
                                    </ul>
                            </div>
                        </nav>
                    </div>
                    <div class="menu-overlay col-md-12 col-sm-12 col-xs-12 imc">
                        <div class="inner imc"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-5 hidden-sm hidden-xs pull-left" id="header-logo">
                <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                <span class="slogan hidden-sm hidden-xs">
						Award-winning news, views, and insight from the ESET <strong>security community</strong>					</span>
            </div>
        </div>
    </header>
        <section id="article-detail">
            <div class="hero-noimage">
	<div class="container promo-text">
		<div class="inner clearfix">
			<div class="col-md-11 col-sm-11 col-xs-12 no-padding">
				<h1>Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2</h1>
<div class="excerpt">In this post, we examine the complex it fits into a larger click fraud ecosystem, where users can be redirected either automatically, or through search engines browsing, to advertisement websites.</div>
<div class="post-meta">
    <div class="wls-authors">
            </div>
    <span class="meta">
		<span class="strong">
			<time datetime="2014-01-17 08:42:06">17 Jan 2014 - 08:42AM</time>
		</span>
			</span>
</div>
			</div>
		</div>
	</div>
</div>	

            <div class="content">
                <div class="social-wrapper" id="social-sharer">
                    <span class="text">Share</span>
	<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F01%2F17%2Fboaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
		<span class="icomoon icon-icon_fb"></span>
	</a>
	<a class="share-twitter" href="https://twitter.com/intent/tweet?&url=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F01%2F17%2Fboaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2%2F&text=Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2%0A&via=welivesecurity" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
		<span class="icomoon icon-icon_tw"></span>
	</a>
	<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F01%2F17%2Fboaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
		<span class="icomoon icon-icon_in"></span>
	</a>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-1 col-sm-1 hidden-xs">

                        </div>
                        <div class="col-md-10 col-sm-10 col-xs-12 formatted">

                            <div class="excerpt noimage">
                                <p>In this post, we examine the complex it fits into a larger click fraud ecosystem, where users can be redirected either automatically, or through search engines browsing, to advertisement websites.</p>
                            </div>

                            <p>(This blog post’s title is based on <a href="http://en.wikipedia.org/wiki/David_Ogilvy_(businessman)">David Ogilvy</a>’s quote).</p>
<p dir="ltr">In the <a title="/2014/01/14/boaxxe-adware-a-good-ad-sells-the-product-without-drawing-attention-to-itself-pt-1/" href="/2014/01/14/boaxxe-adware-a-good-ad-sells-the-product-without-drawing-attention-to-itself-pt-1/" target="_blank">previous blog post</a> we set <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s binary distribution context through an affiliate network named partnerka.me. We also explained how it fits into a larger click fraud ecosystem, where users can be redirected either automatically, or through search engines browsing, to advertisement websites.</p>
<p dir="ltr">It is now time for us to dig into the <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> binary program. First, we will explain its installation process, then how and why it maintains its own DNS cache, and finally its click fraud implementation.</p>
<h3>Installation Process</h3>
<p style="text-align: left;">We will start by describing the way <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> installs its different components onto the machine. Roughly summarized, this process follows the three steps described in the image below:</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2014/01/1_installation.png"><img class="aligncenter  wp-image-28446" alt="1_installation" src="/wp-content/uploads/2014/01/1_installation.png" width="626" height="271" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/1_installation.png 894w, https://www.welivesecurity.com/wp-content/uploads/2014/01/1_installation-300x129.png 300w" sizes="(max-width: 626px) 100vw, 626px" /></a></p>
<h3>Installation Step 1</h3>
<p dir="ltr" id="docs-internal-guid--ac5e453-9c02-f1e6-c486-ff082f30feaf"><a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> arrives as a Visual Basic executable with a companion file named &#8220;<em>setup.dat</em>&#8220;, both inside an NSIS installer that will simply decompress them and execute the binary. After various checks on the environment to detect emulators or debuggers, this program extracts a BMP image from its code section. An example of this image is shown below:</p>
<p dir="ltr"><a href="/wp-content/uploads/2014/01/2_bin.png"><img class="aligncenter size-full wp-image-28447" alt="2_bin" src="/wp-content/uploads/2014/01/2_bin.png" width="285" height="39" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/2_bin.png 285w, https://www.welivesecurity.com/wp-content/uploads/2014/01/2_bin-275x39.png 275w" sizes="(max-width: 285px) 100vw, 285px" /></a></p>
<p dir="ltr">The image&#8217;s data is then decrypted into a new executable, which once executed will itself decrypt the last code layer. This &#8220;image container&#8221; technique is likely used to make antiviruses believe the encrypted code should not be considered for analysis, being part of an image. Finally, the companion file &#8220;<em>setup.dat</em>&#8221; is RC4-decrypted with a key contained in this file itself, then decompressed with the <a href="http://ibsensoftware.com/products_aPLib.html">aPLib library</a>, and its relative <em>CALL</em> and<em> JMP</em> instructions are reconstructed with <a href="http://mattmahoney.net/dc/dce.html#Section_571">the E8/E9 transformation</a> to get the final binary file.</p>
<h3>Installation Step 2</h3>
<p>In order to manipulate search engine results for its implementation of user-initiated click fraud, <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> needs to have precise control over the user&#8217;s browser. The way it is implemented varies according to the targeted browser. Currently <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> manipulates Chrome and Firefox through browser extensions, whereas Internet Explorer is controlled with in-memory hooks that will be set up by the final payload binary. We are now going to explain the installation of Chrome and Firefox extensions, and we will cover later their actual working.</p>
<h3>Chrome</h3>
<h3 dir="ltr"><em>Extension Files</em></h3>
<p>A Chrome extension is normally distributed as a signed <em>.CRX</em> file, which can be installed simply by opening it with the browser. But for development purposes it is also possible to install “unpacked” extensions, which means copying the extensions files into the right place and modifying Chrome settings to load the extension. This last method is the one used by <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>. The process begins with the RC4-decryption of different data blobs contained in the binary, giving:</p>
<p dir="ltr" id="docs-internal-guid--ac5e453-9c58-f8fc-761f-dc7eab4e8b27" style="text-align: left;"><a href="http://developer.chrome.com/extensions/manifest.html">The extension’s manifest</a>, a JSON object containing extension’s metadata:</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2014/01/extraimage3.jpg"><img class="aligncenter  wp-image-28465" alt="extraimage3" src="/wp-content/uploads/2014/01/extraimage3.jpg" width="629" height="229" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/extraimage3.jpg 898w, https://www.welivesecurity.com/wp-content/uploads/2014/01/extraimage3-300x109.jpg 300w" sizes="(max-width: 629px) 100vw, 629px" /></a></p>
<p dir="ltr" style="text-align: left;">The extension’s name in the manifest will be chosen from the list of installed applications on the machine, based on a hardware-specific value. In others words, each machine infected will use a different name for the extension. This type of hardware-dependent choice is commonly used by Win32/Boaxxe.BE, as we will see.</p>
<p dir="ltr" style="text-align: left;">Then, the manifest declares two JavaScript files. The first one is a <em>background script</em> that will run in the extension process for the lifetime of the extension. The second one is a <em>content script</em> that will be injected into each webpage matching the associated “matches” parameter (all webpages in this case). Finally, the extension asks for permission to access all webpages (&#8220;http://*/*&#8221;,&#8221;https://*/*&#8221;) and various Chrome APIs so as to manipulate the browser.</p>
<p>The extension’s code itself, is composed of three different files. Firstly, the background script:</p>
<p style="text-align: center;"><img class="aligncenter" alt="ge4" src="/wp-content/uploads/2014/01/extraimage4.jpg" width="443" height="230" /></p>
<p>This script is made of around 100 lines of obfuscated code and contains the core extension’s logic.</p>
<p>Secondly, the content script:</p>
<p><a href="/wp-content/uploads/2014/01/extraimage5.jpg"><img class="aligncenter" alt="extraimage5" src="/wp-content/uploads/2014/01/extraimage5.jpg" width="630" height="48" /></a></p>
<p>This script simply sends a message with the current URL and referrer to the registered event listeners, and executes the answer.</p>
<p>Thirdly, a JSON object, named JSON_PAYLOAD thereafter, composed of four fields.</p>
<p><a href="/wp-content/uploads/2014/01/extraimage6.jpg"><img class="aligncenter" alt="extraimage6" src="/wp-content/uploads/2014/01/extraimage6.jpg" width="641" height="163" /></a></p>
<p>Before dropping the scripts, all values of the form “<em>@@STRING@@</em>” in the background script will be replaced, in particular:</p>
<p>“<em>@@TOKEN@@</em>” is replaced by the <a href="https://en.wikipedia.org/wiki/Base64">base64</a> encoding of the RC4-encryption with the key “<em>tokencryptkey</em>” of a plain-text string. This string is typically something like <em>“u:14AB8569 w:1234 p:1 c:5b b:32 v:0</em>”, where the different parameters’ are:</p>
<p><a href="/wp-content/uploads/2014/01/extraimage7.jpg"><img class="aligncenter" alt="extraimage7" src="/wp-content/uploads/2014/01/extraimage7.jpg" width="597" height="178" /></a><br />
“<em>@@LOGIC@@</em>” is replaced by the base64 encoding of the RC4-encryption of JSON_PAYLOAD with the previous <em>@@TOKEN@@</em> value as key.</p>
<p dir="ltr" id="docs-internal-guid-20af4b36-9ed2-4d02-d07a-871f5b3fc207">Finally, the three files (manifest, background and content scripts) are dropped into the usual Chrome directory for extensions.</p>
<h3>Extension Installation</h3>
<p>The actual installation of the extension in Chrome is done by modifying the extensions.settings JSON object contained in the “Preferences” file in Chrome’s directory. This file contains – among others things – all installed extensions. <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> inserts the following lines to declare its extension:</p>
<p><a href="/wp-content/uploads/2014/01/extraimage8.jpg"><img class="aligncenter size-full wp-image-28474" alt="extraimage8" src="/wp-content/uploads/2014/01/extraimage8.jpg" width="564" height="266" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/extraimage8.jpg 564w, https://www.welivesecurity.com/wp-content/uploads/2014/01/extraimage8-300x141.jpg 300w" sizes="(max-width: 564px) 100vw, 564px" /></a>And… that’s it! At this point the extension’s JavaScript code will be loaded in Chrome. The ease of this installation process may seem surprising, but Google has <a href="http://blog.chromium.org/2013/11/protecting-windows-users-from-malicious.html">recently announced</a> that starting in January 2014 installation of unpacked extensions will only be possible when the browser is in developer mode.</p>
<h3>Firefox</h3>
<h3><em>Extension Files</em></h3>
<p>The necessary files for a Firefox extension are decrypted:</p>
<p><em>install.rdf</em>, the extension’s manifest:</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2014/01/extraimage9.jpg"><img class="aligncenter" alt="extraimage9" src="/wp-content/uploads/2014/01/extraimage9.jpg" width="700" height="354" /></a></p>
<p dir="ltr" id="docs-internal-guid-20af4b36-9ed5-24fd-cd26-c5ed1857b635">The “id”, “name”, “version”, and “creator” fields will be filled with hardware-dependent values. For sake of this example, let’s assume “id” will be set to “{1234}”, and “name” to “Microsoft Office”.</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Chrome_Registration">chrome.manifest</a>, which will be decrypted and filled in the following way:</p>
<p><a href="/wp-content/uploads/2014/01/FIREFOXEXTRA.jpg"><img class="aligncenter size-full wp-image-28534" alt="FIREFOXEXTRA" src="/wp-content/uploads/2014/01/FIREFOXEXTRA.jpg" width="671" height="156" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/FIREFOXEXTRA.jpg 671w, https://www.welivesecurity.com/wp-content/uploads/2014/01/FIREFOXEXTRA-300x69.jpg 300w" sizes="(max-width: 671px) 100vw, 671px" /></a></p>
<p>This file declares the extension&#8217;s JavaScript code – the “component” line – and then ensures that the extension will be loaded and will receive a notification at Firefox&#8217;s startup.</p>
<p>The extension’s code itself, which is contained in one JavaScript file. The actual code is dropped in a similar manner as for Chrome, with the replacement of the same <em>@@STRING@@</em> variables</p>
<p>Finally, the three files <em>(install.rdf</em>, <em>chrome.manifest</em> and the JavaScript file) are dropped into the usual Firefox directory for extensions.</p>
<h3>Extension Installation</h3>
<p>In order to install the extension in Firefox, the following two operations take place in Firefox’s “Profile” directory</p>
<p>Declare the extension’s path in the “<em>extensions.ini</em>” file.</p>
<p dir="ltr">Check if an extension with same id is already present in the SQLite database “<em>extensions.sqlite</em>&#8220;.</p>
<p><a href="/wp-content/uploads/2014/01/extraimage1111111.jpg"><img class="aligncenter size-full wp-image-28525" alt="extraimage1111111" src="/wp-content/uploads/2014/01/extraimage1111111.jpg" width="389" height="74" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/extraimage1111111.jpg 389w, https://www.welivesecurity.com/wp-content/uploads/2014/01/extraimage1111111-300x57.jpg 300w" sizes="(max-width: 389px) 100vw, 389px" /></a></p>
<p>If yes, an update is made to the table to point to the newly installed version.</p>
<p>If no, the extension is inserted into the table. And&#8230; that&#8217;s it! Similarly to Chrome, the simplicity of such an installation process can be surprising. It’s worth mentioning that <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> installs its Chrome and Firefox extensions as visible, and thus they will appear in the extensions panel.</p>
<h3>Installation Step 3</h3>
<p dir="ltr">The objective of <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> installation step 3 is to fetch the final binary payload that will run on the machine. To do this, a network message is built with the following form:</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2014/01/3_Poke.png"><img class="aligncenter  wp-image-28448" alt="3_Poke" src="/wp-content/uploads/2014/01/3_Poke.png" width="646" height="126" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/3_Poke.png 923w, https://www.welivesecurity.com/wp-content/uploads/2014/01/3_Poke-300x58.png 300w" sizes="(max-width: 646px) 100vw, 646px" /></a></p>
<p>In the red box we see a binary header composed of four fields:</p>
<ul>
<li>The message checksum</li>
<li>The payload length</li>
<li>The message type</li>
<li>The affiliate ID</li>
</ul>
<p>In the blue box we find the message payload, which concatenates the following plain text parameter</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2014/01/extraimage13.jpg"><img class="aligncenter" alt="extraimage13" src="/wp-content/uploads/2014/01/extraimage13.jpg" width="621" height="271" /></a></p>
<p dir="ltr" id="docs-internal-guid--ac5e453-9c96-e824-9970-411ffcc86e0a">The message is RC4-encrypted with a 244-byte pseudo-randomly generated key. Then, this key is encrypted with a RSA public key contained in the binary, and finally the encrypted message and this newly encrypted key are encoded in base64. The final result is sent over HTTP to a hardcoded IP address.</p>
<p dir="ltr">The remote server normally gives back an HTML page, though it can also refuse to serve a machine that has asked too often. This HTML page just contains a body with a base64 encoded value. Once decoded, it appears to be a custom container structure with two Windows libraries inside:</p>
<p dir="ltr">DLL1 is a trampoline library that will be registered to run at each startup in the context of <a href="http://msdn.microsoft.com/en-us/library/ms859484.aspx">regsvr32.exe</a>. Its main purpose is to decrypt the second DLL and to maintain a hook on the system to ensure its loading in all processes.</p>
<p dir="ltr">DLL2 is the actual Win32/Boaxxe.BE payload; it will be stored on the machine hard drive in an RC4-encrypted form with a key derived from the hard drive volume serial number and other hardware specific values. In other words, without knowing the exact hardware used on the machine it will be hard to decrypt the library (a type of cryptographic key generally known as <a href="https://www.schneier.com/paper-clueless-agents.pdf">environmental key</a>).</p>
<p dir="ltr">This is the moment the <em>Installs</em> column of the <em>partnerka.me</em> website statistics is incremented, but only if it is the first time a machine with such a “u” field value requests the payload.</p>
<p dir="ltr">It should be noted that depending on the security products running on the machine – detected with their process names and indicated to the binary distribution server in the “v” parameter –specific protections are applied to the binaries in order to avoid detection. For example, when ESET products are running on the machine, the received payload will be protected by the commercial protector <a href="http://www.oreans.com/themida.php">Themida</a>.</p>
<h3 dir="ltr">Payload</h3>
<p dir="ltr">At this point, DLL1 will always run on the system in the context of regsvr32.exe and will set a hook on <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms644959(v=vs.85).aspx#wh_callwndproc_wh_callwndprocret">WH_CALLWNDPROC events</a>. Simply put, it means this library will be loaded in all GUI processes receiving messages for their windows, a very common operation for such processes. Each time it has been loaded in a process, DLL1 will decrypt DLL2 and call its main function.</p>
<p dir="ltr">Among the different operations implemented by DLL2 we will describe the custom DNS cache system it maintains, the user-initiated click fraud module and finally the automated click fraud module.</p>
<h3 dir="ltr">DNS Cache Maintenance</h3>
<p dir="ltr">When DLL2 is loaded into a browser (IE, Firefox or Chrome) it starts maintaining its own DNS cache, which is its own association between domain names and IP addresses. The purpose of this custom cache system is to avoid network detection based on DNS requests, as we will see.</p>
<h3 dir="ltr">Data Structures</h3>
<p dir="ltr">The cache rests upon two data structures:</p>
<p>The first one is the cache itself – noted as DNS_CACHE thereafter – which is a list of 0x60 byte entries. An example of this structure&#8217;s state is shown below:</p>
<p><a href="/wp-content/uploads/2014/01/4_DNS_cache_explained.png"><img class="aligncenter size-full wp-image-28449" alt="4_DNS_cache_explained" src="/wp-content/uploads/2014/01/4_DNS_cache_explained.png" width="699" height="291" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/4_DNS_cache_explained.png 699w, https://www.welivesecurity.com/wp-content/uploads/2014/01/4_DNS_cache_explained-300x124.png 300w" sizes="(max-width: 699px) 100vw, 699px" /></a></p>
<p>&nbsp;</p>
<p dir="ltr">Each entry contains information related to one domain name, which can be either legitimate (meaning not related to Boaxxe) or malicious, for reasons that will become apparent later. More precisely, it is composed of:</p>
<p dir="ltr">The domain name itself, preceded in the first byte by its length.</p>
<ul>
<li>A “domain purpose” field (indicated in red for entry 1), distinguishing legitimate domain names from malicious ones.</li>
<li>The IP address (boxed in blue). As we will explain below, this address is not the one associated with the domain from a network point-of-view.</li>
<li>A “already resolved” field (boxed in green)</li>
<li>The timestamp in Windows OLE 64 bit format (boxed in black) of the last successful resolving.</li>
</ul>
<p dir="ltr">The second structure is actually a compacted version of the previous one:</p>
<p><a href="/wp-content/uploads/2014/01/5_Compact_DNS_cache_explained.png"><img class="aligncenter size-full wp-image-28450" alt="5_Compact_DNS_cache_explained" src="/wp-content/uploads/2014/01/5_Compact_DNS_cache_explained.png" width="665" height="100" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/5_Compact_DNS_cache_explained.png 665w, https://www.welivesecurity.com/wp-content/uploads/2014/01/5_Compact_DNS_cache_explained-300x45.png 300w" sizes="(max-width: 665px) 100vw, 665px" /></a></p>
<p>It’s a map containing a maximum of 256 entries of 24-bytes width each. The key (enclosed in blue) is a checksum of a domain name stored in the cache, then comes the last known IP address associated with it and finally two timestamps describing the interval during which the domain was seen active.<br />
This structure is stored in a particular Windows registry key, and is updated regularly from the DNS cache in memory.</p>
<p>Thus the cache update processing does not start from scratch each time but reuses previously collected information stored in the registry key.</p>
<h3 dir="ltr" id="docs-internal-guid--ac5e453-9c9c-274d-7926-36c13c70d912">Cache Management</h3>
<h3 dir="ltr">Initialization</h3>
<p dir="ltr">When <strong>DLL2</strong> runs for the first time on the machine – in the context of <em>regsvr32.exe</em> – the DNS cache is empty. At this point, a set of around 500 legitimate domain names is RC4-decrypted from DLL2’s data. Then, <strong>the program chooses a subset of these domains based on a hardware-specific value</strong>. This allows the program to fill the cache with different legitimate domain names on each infected machine. Finally, when <strong>DLL2</strong> gets loaded in the context of a browser for the first time, it adds some malicious domains – usually four – to the cache, according to the affiliate ID value.</p>
<p dir="ltr">Why would the malware need different and legitimate domain names in its cache on each infected machine? Because it will generate a different series of DNS requests for clean domain names at each cache update, and thus make it hard to build a reliable <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> network detection based on DNS requests.</p>
<h3 dir="ltr">Update</h3>
<p dir="ltr">The program will regularly check each entry of its cache and update it if 24 hours have passed since the last update. As we might expect, it will then make a DNS A request for the domain name, but interestingly<strong> the IP address received will not be the one stored in the cache (and used later for communications)</strong>. Indeed the last 3-bytes of the received IP address will be RC4-encrypted with the hardcoded key “ANKS” in order to get the “real” IP address associated with the domain.</p>
<p dir="ltr">Let’s take an example: if you query a DNS server for the domain thegreerfive.biz – a malicious domain used by Win32/Boaxxe.BE – you will get 31.240.6.70 as an answer, which is <span style="color: #0000ff;">1F <span style="color: #339966;">F0 06 46</span></span> in hexadecimal, but the real IP address of the server associated with the domain is 31.193.0.178, which is <span style="color: #339966;">1F <span style="color: #ff0000;">C1 00 B2</span></span>, because the RC4-encryption of <span style="color: #3366ff;">F0 06 46</span> with the key “ANKS” gives<span style="color: #ff0000;"> C1 00 B2</span>.</p>
<p dir="ltr"><a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s operators only control the “real” IP address, and thus this technique allows their domain names to be associated with innocent IP addresses. In other words, the analysis of <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s related domain names is totally useless without knowing the key used to get the real IP addresses.</p>
<h3 dir="ltr">User-initiated Click Fraud</h3>
<p dir="ltr">User-initiated click fraud refers to the rerouting of users when they click on search engines results. It allows <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> to provide high-quality traffic to advertisement websites, as it reroutes real users – and not robots – to advertisement websites related to their interest (the keywords for which they searched). The logical working of this activity is summarized below. The blue text indicates the user’s actions, and the red text shows <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s actions.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2014/01/6_user_redirection.png"><img class="aligncenter  wp-image-28451" alt="6_user_redirection" src="/wp-content/uploads/2014/01/6_user_redirection.png" width="662" height="568" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/6_user_redirection.png 828w, https://www.welivesecurity.com/wp-content/uploads/2014/01/6_user_redirection-300x257.png 300w" sizes="(max-width: 662px) 100vw, 662px" /></a></p>
<p dir="ltr" id="docs-internal-guid--ac5e453-9c9f-1202-59e7-b8f0ed0e5bce">In step 1, the user looks with search engines for a certain keyword <em><strong>K</strong></em>, and gets back a list of related websites. At the same time, <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> sends <em><strong>K</strong></em> to its own search engine which also returns a list of related websites. In the event that there are no websites suitable for this particular keyword, no redirection occurs. In step 2, the user clicks on a legitimate result in its browser, and gets back the corresponding webpage. But after the user’s click, <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> forces the browser to reconnect to one of its own results. In practice the user has no time to see the webpage he clicked on, and directly ends up on the webpage selected by <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>.</p>
<p dir="ltr">For Chrome and Firefox, the user-initiated click fraud operation is implemented in the extensions we previously described the installation process, whereas for Internet Explorer it is based on hooks in memory.</p>
<h3 dir="ltr">Chrome and Firefox</h3>
<h3 dir="ltr"><em>Internal Working</em></h3>
<p dir="ltr">The extension’s operation is similar for both browsers; therefore we will only describe it for Chrome. Recall that the Chrome’s extension is composed of two JavaScript files: the background script, the single instance of which will run permanently, and the content script, the single instance of which will run for each webpage.</p>
<p dir="ltr" style="text-align: left;">At startup, the background script will decrypt JSON_PAYLOAD and evaluate its “c” field, which contains the core extension logic. This code declares an array containing the targeted search engines. All these search engines receive keywords from the user as parameters in <em>GET</em> requests and this is the place from where <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> gathers them. In order to do so, the extension’s code first declares the URL’s parameter containing the keyword for each search engine, with the possible subpages used for search requests. Here is the list of the targeted search engines in December:</p>
<p><a href="/wp-content/uploads/2014/01/extraimage14.jpg"><img class="aligncenter" alt="extraimage14" src="/wp-content/uploads/2014/01/extraimage14.jpg" width="722" height="298" /></a></p>
<p>So a request for the URL “www.google.com/search?q=cat“ will match the line 1 of the previous array, and the keyword “cat” will be extracted from the URL and then sent to <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s doorway search engine, which has been searchpagex.com (and searchpagex.org for Firefox) during the last months.</p>
<p>Also, a whitelist of web sites is declared: Wikipedia, Facebook, Twitter. <strong>The user will not be redirected when he clicks on one of these domains in its search results.</strong> This allows <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a> to be more stealthy, as the user would probably suspect that something is wrong if, for example, he ends up on an advertisement website when he clicks on a Wikipedia URL (because he knows what the Wikipedia website should look like).</p>
<p>Finally, some event listeners are set up with Chrome APIs to process each newly visited URL – provided by the content script previously described – and to activate the redirection logic if it matches a targeted search engine.</p>
<p>The answer from <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s search engine is a JSON object containing URL(s) in the form “<em>searchpagex.com/c?t=BASE64ID</em>”. When visited, such URL will start a chain of redirections through an advertisement network ending on a website related to the keyword they searched for.</p>
<p>In parallel to this user redirection activity, the extension will, every hour, poke a specific URL – contained in the “c” field of JSON_PAYLOAD –  to ask for a new version of JSON_PAYLOAD</p>
<h3 dir="ltr">Internet Explorer</h3>
<p>In order to implement the user-initiated click fraud activity in Internet Explorer, Win32/Boaxxe.BE hooks in memory the Windows API functions <em>HttpAddRequestHeadersA</em>, <em>CreateWindowExW</em> and<em> DrawTextExW</em>. The hooks are simply jumps to Boaxxe’s code inserted at the functions’ entry points. Roughly summarized, the code then provides URLs visited by the user to a specific Boaxxe’s thread.</p>
<p dir="ltr" style="text-align: left;">This thread implements a similar logic to that we previously described for the Chrome extension. It filters the same list of search engines URLs in order to extract from them the keywords searched for. The only difference is that it does not send these keywords to its own search engine, but to a malicious IP address stored in the custom DNS cache. The answer from the server – RC4-encrypted as usual – has the following form in plain text:</p>
<p><a href="/wp-content/uploads/2014/01/extraimage15.jpg"><img class="aligncenter" alt="extraimage15" src="/wp-content/uploads/2014/01/extraimage15.jpg" width="720" height="89" /></a></p>
<p>The “u” parameter provides the URL to which the user should be redirected, whereas the “r” parameter contains the referrer to use for this request, which is a URL served by <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>’s search engine, containing the affiliate ID and the keyword entered by the user. Setting this referrer field allows Boaxxe’s operators to be paid by the advertisement network as if the user directly searched for the keyword in the doorway search engine, as we will explain later.</p>
<h3>Automated Click Fraud</h3>
<p>Automated click fraud refers in this context to the silent browsing of advertisement websites, without any real user interaction. In order to do so, an Internet Explorer process is regularly launched by an instance of Win32/Boaxxe.BE running in <em>regsvr32.exe</em>. This new process is not visible to the user thanks to the <a href="http://msdn.microsoft.com/en-us/library/hh826025(v=vs.85).aspx">Internet Explorer “-Embedding” parameter</a>, and tries to be as stealthy as possible.</p>
<p>First, it modifies various Internet Explorer settings, for example to disable navigation sounds, or remove restrictions on downloading files. It also creates a thread that will continuously monitor both execution time and the memory used by this process; if the time is too long or the memory too big – meaning the machine is overloaded – it terminates the execution. Finally, it hooks the MessageBeep API function to prevent it from making noise.</p>
<p dir="ltr">Secondly, it adds to its DNS cache a group of hard coded domain names, according to the affiliate ID value. Then, it sends a request to one of them – with the usual RC4/base64 transformation – whose answer contains the necessary information to launch the automated click fraud. For example:</p>
<p><a href="/wp-content/uploads/2014/01/extraimage16.jpg"><img class="aligncenter" alt="extraimage16" src="/wp-content/uploads/2014/01/extraimage16.jpg" width="649" height="67" /></a></p>
<p>The important parameters are:</p>
<p><a href="/wp-content/uploads/2014/01/EXTRAIMAGE440000.jpg"><img class="aligncenter size-full wp-image-28541" alt="EXTRAIMAGE440000" src="/wp-content/uploads/2014/01/EXTRAIMAGE440000.jpg" width="500" height="121" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/01/EXTRAIMAGE440000.jpg 500w, https://www.welivesecurity.com/wp-content/uploads/2014/01/EXTRAIMAGE440000-300x72.jpg 300w" sizes="(max-width: 500px) 100vw, 500px" /></a></p>
<p>At this point the process will browse the “u” URL with its referrer header sets to “r”. The URL usually starts a redirection chains – usually 4 or 5 hops – thanks to the HTTP 302 response code. The last HTML page visited is then analyzed by the code to extract any links inside. Each of these links will then be visited, with a maximum of “n” pages visited in total.</p>
<p>At various points during this activity, the process sleeps for certain amounts of time, defined by the “t” parameter, likely in order to mimic human behavior on the advertised websites.</p>
<p>Finally, after each page visited the process makes a <em>HTTP GET</em> request to a website chosen from a small list of common websites (Google, Facebook, Twitter…). This allows the malware to “hide” click fraud requests among usual network traffic.</p>
<h3 dir="ltr">Conclusion</h3>
<p>We have described in this blog post a complex threat named <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a>, whose purpose is to redirect traffic to various websites in order to be paid as an advertiser. In particular, we described how <a title="http://www.virusradar.com/en/Win32_Boaxxe/detail" href="http://www.virusradar.com/en/Win32_Boaxxe/detail" target="_blank">Win32/Boaxxe.BE</a></p>
<ul>
<li>Performs user-initiated click fraud that monitors the keywords typed by the user in search engines to reroute him to advertisement websites related to his interests.</li>
<li>Performs automated click fraud that silently browses various advertisement websites.</li>
<li>Maintains a custom DNS cache system in order to avoid network detection and make investigation by security analysts harder.</li>
</ul>
<p><strong>SHA-1 Hashes</strong></p>
<p><strong>NSIS Dropper            2AD7D28E726516DC4B5768F3A6E3CCB65BE70429</strong></p>
<p><strong>                                        19907BC92459177D3B1C79485828024E5DF57630</strong></p>
<p><strong>setup.dat                      602B280EF014312FDD28658EBFFA120E39BB74E0</strong></p>
<p><strong>                                          3AC4C250294D27215767A5F96A07EBCE17419FE1</strong></p>
<p><strong>Chrome Extension    6DB7F622219B33936694A2B797561A60E759B2A0  (background.js)</strong></p>
<p><strong>                                           6BE4A19995565A8FC087678FB7117FF0E6269766 (content.js)</strong></p>
<p><strong>Firefox Extension       B74B640A4097EB5D3C95783B7FA2334BA846EADD (JS code)</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>

                            
                                                            <div class="dot">
                                    <span class="icomoon icon-icon_article_dot"></span>
                                </div>

                                <div class="meta">
                                    <div class="wls-authors wls-authors-footer">
                                                                            </div>
                                    <span class="strong">
								        <time datetime="2014-01-17 08:42:06">17 Jan 2014 - 08:42AM</time>
                                    </span>
                                </div>
                            
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text"><em>Sign up to receive an email update whenever a new article is published in our <a href="https://www.welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/" target="_blank" rel="noopener">Ukraine Crisis – Digital Security Resource Center</a></em></span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="TOPIC" value="We Live Security Ukraine Newsletter">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="button-flag">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text">Newsletter</span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="NEWSLETTER" value="We Live Security">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>

                                                            <div class="similar-articles row">
                                    <div class="heading-line col-md-12 col-sm-12 col-xs-12">
                                        <h3><span class="text">Similar Articles</span></h3>
                                    </div>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/malware/" class="category-tag-btn">Malware</a>                                                <a href="https://www.welivesecurity.com/2022/06/16/how-emotet-is-changing-tactics-microsoft-tightening-office-macro-security/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/06/emotet-malware-botnet-macros-mark-web-623x415.jpg"
                                                         alt="Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/06/16/how-emotet-is-changing-tactics-microsoft-tightening-office-macro-security/">
                                                    How Emotet is changing tactics in response to Microsoft’s tightening of Office macro security                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/eset-research/" class="category-tag-btn">ESET Research</a>                                                <a href="https://www.welivesecurity.com/2022/01/25/watering-hole-deploys-new-macos-malware-dazzlespy-asia/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/01/dazzlespy-malware-macos-623x415.jpg"
                                                         alt="Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/01/25/watering-hole-deploys-new-macos-malware-dazzlespy-asia/">
                                                    Watering hole deploys new macOS malware, DazzleSpy, in Asia                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/malware/" class="category-tag-btn">Malware</a>                                                <a href="https://www.welivesecurity.com/2021/10/15/virus-bulletin-old-malware-never-dies-gets-more-targeted/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2021/10/virus-bulletin-old-malware-targeted-attacks-623x415.jpg"
                                                         alt="Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2021/10/15/virus-bulletin-old-malware-never-dies-gets-more-targeted/">
                                                    Virus Bulletin: Old malware never dies – it just gets more targeted                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/malware/" class="category-tag-btn">Malware</a>                                                <a href="https://www.welivesecurity.com/2021/08/06/anatomy-native-iis-malware/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2021/07/wls_anatomy-iis-malware-2021_1770540524_1000x667-623x432.jpg"
                                                         alt="Boaxxe adware: &#8216;A good advert sells the product without drawing attention to itself&#8217; Part 2">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2021/08/06/anatomy-native-iis-malware/">
                                                    Anatomy of native IIS malware                                                </a>
                                            </h4>
                                        </article>
                                                                    </div>
                            
                            <div class="comments row">
                                <div class="heading-line col-xs-12">
                                    <h3><span class="text">Discussion</span></h3>
                                                                            
<div id="disqus_thread"></div>
                                                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    	</div> 	<footer id="site-footer">
		<div class="container">
			<div class="row">
				<div class="col-md-2">
                    <div class="hidden-sm hidden-xs">
                        <div class="logo-wrapper footer clearfix">
                            <div class="dark clearfix">
                                <a href="https://www.welivesecurity.com/" class="wls">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-1.svg" alt="Welivesecurity.com">
                                </a>
                                <a href="https://www.eset.com" class="eset">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-2.svg" alt="by ESET">
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="hidden-lg hidden-md">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
				</div>
				<nav id="footer" class="clearfix">
											<div class="mobile-block">
																<div class="col-md-2 col-md-offset-2">
										<ul>
																							<li>
													<a href="/">Home</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/about-us/">About Us</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/contact-us/">Contact Us</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/sitemap/">Sitemap</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/our-experts/">Our Experts</a>
												</li>
																							<li>
													<a href="https://eset.com">ESET</a>
												</li>
																					</ul>
									</div>
													</div>
											<div class="mobile-block">
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/research/">Research</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/category/how-to/">How To</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/categories/">Categories</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/rss-configurator/">RSS Configurator</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/news-widget-generator/">News Widget</a>
												</li>
																					</ul>
									</div>
													</div>
									</nav>
			</div>
			<div class="row">
				<div class="col-md-12 legal clearfix">
					<div class="wrap clearfix">
													<span>
								<a href="https://www.welivesecurity.com/privacy/">
									Privacy Policy								</a>
							</span>
													<span>
								<a href="https://www.welivesecurity.com/legal-information/">
									Legal Information								</a>
							</span>
											</div>
					<span class="copyright pull-right">Copyright &copy; ESET, All Rights Reserved</span>
				</div>
							</div>
		</div>
	</footer>
	
	<button id="back-to-top" class="animated-scroll" data-target="absoluteTop">
		<span class="icomoon icon-icon_arrow"></span>
		<span class="text">Back to top</span>
	</button>

			<div class="social-wrapper-mobile hidden-lg hidden-md hidden-sm" id="mobile-article-sharer">
			<div class="col-xs-12">
				<div class="icons" style="text-align: center;">
											<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F01%2F17%2Fboaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
							<span class="icomoon icon-icon_fb"></span>
						</a>
											<a class="share-twitter" href="https://twitter.com/intent/tweet?https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F01%2F17%2Fboaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
							<span class="icomoon icon-icon_tw"></span>
						</a>
											<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F01%2F17%2Fboaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
							<span class="icomoon icon-icon_in"></span>
						</a>
									</div>
			</div>
		</div>
	
	<script>
		var baseUrl = "https://www.welivesecurity.com/";
	</script>
	
			<script>
            !function(){if(-1==window.document.cookie.indexOf("user_rec=1")){function e(e,o){var t=document.createElement("img");t.setAttribute("style","display:none"),t.src=e+o,window.document.body.appendChild(t)}function o(){d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Default%20status&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=defaultStatus&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c)}function t(){console.log("GA and GTM are loaded."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=11",e(u,a),e(s,c)}function n(){var e=new Date;e.setTime(e.getTime()+63072e6);var o="expires="+e.toUTCString();window.document.cookie="user_rec=1; "+o+"; path=/"}var d,a,c,i,r,l="UA-76266002-27",g=window.location.href,s="https://cdn1.esetstatic.com/ESET/INT/assets/img/check.png",u="https://www.google-analytics.com/collect",w="wls",m=0,h=function e(){i=window.ga&&ga.create?1:0,r=window.google_tag_manager?1:0,m++,console.log("Timer: ",m),h=setTimeout(e,500)};window.document.addEventListener&&(d=1e6*Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Script%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=scriptLoaded&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c),window.addEventListener("beforeunload",o),window.ga&&ga.create&&window.google_tag_manager?(t(),window.removeEventListener("beforeunload",o),n()):(setTimeout(h,500),setTimeout(function(){clearTimeout(h),i&&r?t():i&&!r?(console.log("GA is loaded and GTM is blocked."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=10",e(u,a),e(s,c)):!i&&r?(console.log("GA is blocked and GTM is loaded."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=01",e(u,a),e(s,c)):i||r||(console.log("GA is blocked and GTM is blocked."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=00",e(u,a),e(s,c)),window.removeEventListener("beforeunload",o),n()},1e4)))}}();
		</script>
	
	<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/js/main.js?id=fef3139dcedd23afc232"></script>
    <!-- Version: v1.9.0.9dc53e.pro.awus -->
    		<script type="text/javascript">
			var disqus_config = function () { 
				this.language = "en";
			};
			var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":"", "numsVisible": false};
			var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
		</script>
		<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/static/js/crayon.min.js"></script>

			
		
    <script>
    	Main.init();
    </script>

    <script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"welivesecurity"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.16'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.16"},"disqusIdentifier":"28442 \/?p=28442","disqusShortname":"welivesecurity","disqusTitle":"Boaxxe adware: \u2018A good advert sells the product without drawing attention to itself\u2019 Part 2","disqusUrl":"https:\/\/www.welivesecurity.com\/2014\/01\/17\/boaxxe-adware-a-good-advert-sells-the-product-without-drawing-attention-to-itself-part-2\/","postId":"28442"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.16'></script>
    <script src="https://assets.esetstatic.com/3PR/app.min.js"></script>
  </body>
</html>
