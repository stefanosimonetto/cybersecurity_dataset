<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Cat-and-mouse game in CVE 2012-0158</title>
<meta name="description" content="Ruhai Zhang takes a look at the cat-and-mouse game of exploit samples, focusing on the widely used CVE-2012-0158 vulnerability." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1804;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201305-cat-and-mouse"></a>Cat-and-mouse game in CVE 2012-0158</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2013-05-03</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="surname">Ruhai Zhang</span></h3><span class="orgname">Fortinet</span>, <span class="orgdiv">China</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Ruhai Zhang takes a look at the cat-and-mouse game of exploit samples, focusing on the widely used CVE-2012-0158 vulnerability.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2013 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2858" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2858" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id4969579"></a></span></dt><dt><span class="sect1"><a href="#id3717519">Vulnerability analysis</a></span></dt><dt><span class="sect1"><a href="#id2777284">Office file format anti-detection tricks</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id2627837">End of Chain Sector ID</a></span></dt><dt><span class="sect2"><a href="#id2660523">Microsoft Excel default password</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id4230804">RTF file format anti-detection tricks</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id2208486">RTF magic checking</a></span></dt><dt><span class="sect2"><a href="#id3859686">RTF object obfuscating</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3462580">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4969579"></a></h2></div></div></div><p>The CVE-2012-0158 vulnerability has been widely used by cybercriminals since April 2012 and has been exploited in the wild with many anti-detection tricks. As we know, when an exploit sample is executed, the corresponding vulnerable application will initially load and parse it. While scanning an exploit file, an AV engine will also analyse its file format. For some file types with complicated structures, the AV engine may struggle to parse all of the structures listed in the format specification. Moreover, for efficiency, fault-tolerant performance purposes, or even through carelessness, an application may not fully comply with the format specification while parsing a file. These factors open a door in the cat-and-mouse game. The exploit in question can be implemented in both <span class="emphasis"><em>Microsoft Office</em></span> and RTF files, which increases its spreading ability.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3717519"></a>Vulnerability analysis</h2></div></div></div><p>The CVE-2012-0158 vulnerability is in the ListView, ListView2, TreeView and TreeView2 ActiveX controls in MSCOMCTL.OCX, which are mainly used in <span class="emphasis"><em>Microsoft Office</em></span>, as shown in <a href="#figure.1">Figure 1</a>. </p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="An exploit sample&rsquo;s ListView Contents stream." src="/uploads/images/figures/2013/05/Zhang-1.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;An exploit sample&rsquo;s ListView Contents stream.</b></p></div><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="Vulnerable parsing function in MSCOMCTL.OCX (v6.01.9545)." src="/uploads/images/figures/2013/05/Zhang-2.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;Vulnerable parsing function in MSCOMCTL.OCX (v6.01.9545).</b></p></div><p>The following is the execution process for the vulnerable function in MSCOMCTL.OCX, as shown in <a href="#figure.2">Figure 2</a>: </p><div class="itemizedlist"><ul type="disc"><li><p>Read a 0xC bytes record in the &lsquo;Contents&rsquo; stream to the stack buffer, which has the following structure:</p><pre class="programlisting">struct CobjRecord {
DWORD flag;
DWORD unknown;
DWORD next_read_len;
}
</pre></li><li><p>Get the value next_read_len.</p></li><li><p>In the second call to the CheckLenAndReadRecord function, the Next Record Len value is read (see Figure 1) and compared with next_read_len value in the CobjRecord. If the two length values are equal, the following next_read_len bytes size data will be read to the stack buffer. However, only eight bytes are allocated on the stack.</p></li></ul></div><p>For the sample (<span class="emphasis"><em>MD5: C694ED321C758AF7D4F7582A415DEDE9</em></span>) shown in <a href="#figure.1">Figure 1</a>, the vulnerable function will return to address 0x27583C30 and then jump to the shellcode at 0x125DA4, as shown in <a href="#figure.3">Figure 3</a>, <a href="#figure.4">Figure 4</a> and <a href="#figure.5">Figure 5</a>.</p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Stack overview after overflow." src="/uploads/images/figures/2013/05/Zhang-3.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Stack overview after overflow.</b></p></div><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Jmp esp instruction in MSCOMCTL.OCX (v6.01.9545)." src="/uploads/images/figures/2013/05/Zhang-4.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Jmp esp instruction in MSCOMCTL.OCX (v6.01.9545).</b></p></div><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="Jmp to the shellcode." src="/uploads/images/figures/2013/05/Zhang-5.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;Jmp to the shellcode.</b></p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2777284"></a>Office file format anti-detection tricks</h2></div></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2627837"></a>End of Chain Sector ID</h3></div></div></div><p><a href="#figure.6">Figure 6</a> is a rough flow chart showing how <span class="emphasis"><em>Microsoft Office</em></span> reads stream data.</p><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="Reading stream data flow chart." src="/uploads/images/figures/2013/05/Zhang-6.jpg" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;Reading stream data flow chart.</b></p></div><p>The sample (<span class="emphasis"><em>MD5: 52a87d2cd564900904aea8869c00f6c6</em></span>) shown in <a href="#figure.7">Figure 7</a>and <a href="#figure.8">Figure 8</a> uses this trick. The End Of Chain SecID at offset 10252 should have been 4, a continuous value. It is likely that this value was modified in an attempt to evade detection. If the AV engine recognizes the End of Chain SecID as the end of the stream data, this kind of crafted exploit sample may slip away undetected.</p><div class="figure"><a id="figure.7"></a><div class="mediaobject"><img alt="A sample&rsquo;s Contents directory entry." src="/uploads/images/figures/2013/05/Zhang-7.jpg" /></div><p class="title"><b>Figure&nbsp;7.&nbsp;A sample&rsquo;s Contents directory entry.</b></p></div><div class="figure"><a id="figure.8"></a><div class="mediaobject"><img alt="A sample&rsquo;s short-sector allocation table." src="/uploads/images/figures/2013/05/Zhang-8.jpg" /></div><p class="title"><b>Figure&nbsp;8.&nbsp;A sample&rsquo;s short-sector allocation table.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2660523"></a>Microsoft Excel default password</h3></div></div></div><p><a href="#figure.9">Figure 9</a> shows the process of <span class="emphasis"><em>Microsoft Excel </em></span>validating password-protected documents:</p><div class="figure"><a id="figure.9"></a><div class="mediaobject"><img alt="A password-protected Excel sample&rsquo;s Workbook stream." src="/uploads/images/figures/2013/05/Zhang-9.jpg" /></div><p class="title"><b>Figure&nbsp;9.&nbsp;A password-protected Excel sample&rsquo;s Workbook stream.</b></p></div><div class="orderedlist"><ol type="1"><li><p>The decryption key is derived from the default password &lsquo;VelvetSweatshop&rsquo; and Salt.</p></li><li><p>The EncryptedVerifier field is decrypted using the derived key. </p></li><li><p>The hashing algorithm output is obtained by using the above decrypted Verifier as input.</p></li><li><p>The EncryptedVerifierHash field is decrypted using the key derived in step 1.</p></li><li><p>If the above two hash values are equal, execution will continue. If they are not, the user will be prompted to input the password and validate it as per the above steps.</p></li></ol></div><p>We can see that password-protected <span class="emphasis"><em>Microsoft Excel</em></span> documents can be executed without entering the password while it is set to the default &lsquo;VelvetSweatshop&rsquo;.</p><div class="figure"><a id="figure.10"></a><div class="mediaobject"><img alt="A password-protected Excel sample&rsquo;s directory entries." src="/uploads/images/figures/2013/05/Zhang-10.jpg" /></div><p class="title"><b>Figure&nbsp;10.&nbsp;A password-protected Excel sample&rsquo;s directory entries.</b></p></div><p><a href="#figure.9">Figure 9</a> and <a href="#figure.10">Figure 10</a> show a sample (<span class="emphasis"><em>MD5: 5c7d74dd1c96651d22c5829039ab93bd</em></span>) using this trick. The exploit relevant data is encrypted in the &lsquo;encryption&rsquo; stream. We can see the following decrypted exploiting structure in the memory:</p><div class="figure"><a id="figure.11"></a><div class="mediaobject"><img alt="A sample&rsquo;s decrypted exploiting data in the memory." src="/uploads/images/figures/2013/05/Zhang-11.jpg" /></div><p class="title"><b>Figure&nbsp;11.&nbsp;A sample&rsquo;s decrypted exploiting data in the memory.</b></p></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4230804"></a>RTF file format anti-detection tricks</h2></div></div></div><p>This exploit can also be embedded into an RTF file as an OLE object, so some tricks relevant to RTF parsing can also be used. </p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2208486"></a>RTF magic checking</h3></div></div></div><p>While parsing an RTF file, <span class="emphasis"><em>Microsoft Word</em></span> will not check the fifth character (&lsquo;f&rsquo; in the &lsquo;\rtfN&rsquo; control word), as shown in <a href="#figure.12">Figure 12</a>.</p><div class="figure"><a id="figure.12"></a><div class="mediaobject"><img alt="RTF magic parsing in WINWORD.EXE (v11.0.5604)." src="/uploads/images/figures/2013/05/Zhang-12.jpg" /></div><p class="title"><b>Figure&nbsp;12.&nbsp;RTF magic parsing in WINWORD.EXE (v11.0.5604).</b></p></div><p>The sample (<span class="emphasis"><em>MD5: 63eb0c0ae2853c9398d94569cf5eadcf</em></span>) shown in <a href="#figure.13">Figure 13</a> uses this trick. If the AV engine recognizes the RTF file totally as described in the RTF specification, this kind of crafted exploit sample will escape detection.</p><div class="figure"><a id="figure.13"></a><div class="mediaobject"><img alt="An exploit sample using the RTF magic trick." src="/uploads/images/figures/2013/05/Zhang-13.jpg" /></div><p class="title"><b>Figure&nbsp;13.&nbsp;An exploit sample using the RTF magic trick.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3859686"></a>RTF object obfuscating</h3></div></div></div><p>The exploit OLE file is embedded into an RTF file using control word &lsquo;\object&rsquo;. The object data is encoded using the &lsquo;Hex to ASCII&rsquo; method. While parsing the object data, <span class="emphasis"><em>Microsoft Word </em></span>will ignore space characters and other control words.</p><p><a href="#figure.14">Figure 14</a> shows a sample (<span class="emphasis"><em>MD5: f8ec2de6927ac7a22a88f8a2f6c2ebd3</em></span>) using this trick. The OLE file magic &lsquo;D0CF11E0A1B11AE1&rsquo; value is not continuous, but separated by some space characters and RTF control words. </p><div class="figure"><a id="figure.14"></a><div class="mediaobject"><img alt="An exploit sample using RTF obfuscating tricks." src="/uploads/images/figures/2013/05/Zhang-14.jpg" /></div><p class="title"><b>Figure&nbsp;14.&nbsp;An exploit sample using RTF obfuscating tricks.</b></p></div><p>The sample (M<span class="emphasis"><em>D5: 4c4d397511fd8f802950218d598c3478</em></span>) shown in <a href="#figure.15">Figure 15</a> also uses this trick. In this sample, several useful characters are separated by some obfuscating RTF groups &lsquo;{}&rsquo;, which may also contain some useful characters. </p><div class="figure"><a id="figure.15"></a><div class="mediaobject"><img alt="Another exploit sample using RTF obfuscating tricks." src="/uploads/images/figures/2013/05/Zhang-15.jpg" /></div><p class="title"><b>Figure&nbsp;15.&nbsp;Another exploit sample using RTF obfuscating tricks.</b></p></div><p>To detect this kind of crafted sample, an AV engine must also ignore the obfuscating characters and structures while parsing the OLE object from an RTF file. </p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3462580"></a>Conclusion</h2></div></div></div><p>The cat-and-mouse game of exploit samples is based largely around the differences in file format parsing between the vulnerable application and the detection engine. One exploit sample which seems corrupted because of unusual structures may indeed execute correctly. For each type of file, the engine should try to parse its file format exactly as its corresponding application does, and not simply rely on its format specification.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3908061"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] CVE-2012-0158. <span class="bibliosource"><a href="ttp://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0158" target="_top">http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0158</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] Microsoft Office Document Cryptography Structure. <span class="bibliosource"><a href="https://msdn.microsoft.com/en-us/library/cc313071(v=office.12).aspx" target="_blank">http://msdn.microsoft.com/en-us/library/cc313071(v=office.12).aspx</a></span>.</p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Cat-and-mouse game in CVE 2012-0158&url=https://www.virusbulletin.com/virusbulletin/2013/05/cat-and-mouse-game-cve-2012-0158"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2013/05/cat-and-mouse-game-cve-2012-0158'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2013/05/cat-and-mouse-game-cve-2012-0158&title=Cat-and-mouse game in CVE 2012-0158"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2013/05/cat-and-mouse-game-cve-2012-0158&t=Cat-and-mouse game in CVE 2012-0158"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2013/05/cat-and-mouse-game-cve-2012-0158"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>