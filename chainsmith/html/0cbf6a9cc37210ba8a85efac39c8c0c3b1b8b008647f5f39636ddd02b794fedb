<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Styx exploit pack: insidious design analysis</title>
<meta name="description" content="Aditya Sood and colleagues discuss the details and design of the Styx exploit pack." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1840;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201309-Styx"></a>Styx exploit pack: insidious design analysis</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2013-09-02</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="surname">Aditya K. Sood</span></h3><span class="orgname">Michigan State University</span>, <span class="orgdiv">USA</span></div><div class="author titlepage"><h3 class="author"><span class="firstname">Richard J.</span> <span class="surname">Enbody</span></h3><span class="orgname">Michigan State University</span>, <span class="orgdiv">USA</span></div><div class="author titlepage"><h3 class="author"><span class="firstname">Rohit</span> <span class="surname">Bansal</span></h3><span class="orgname">Independent security researcher</span>, <span class="orgdiv">India</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Aditya Sood and colleagues discuss the details and design of the Styx exploit pack.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2013 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2951" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2951" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id3012523"></a></span></dt><dt><span class="sect1"><a href="#id3290081">Communication design</a></span></dt><dt><span class="sect1"><a href="#id3995870">Services</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id2842671">Ghost Busters </a></span></dt><dt><span class="sect2"><a href="#id2360912">Captain Checker</a></span></dt><dt><span class="sect2"><a href="#id4136168">Styx obfuscator</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3625288">Filters and access restrictions</a></span></dt><dt><span class="sect1"><a href="#id3593771">Exploit distribution and analysis</a></span></dt><dt><span class="sect1"><a href="#id3038969">Detecting Styx exploit pack</a></span></dt><dt><span class="sect1"><a href="#id2616896">Further reading</a></span></dt><dt><span class="sect1"><a href="#id4654184">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3012523"></a></h2></div></div></div><p>In this paper, we discuss the details and design of the Styx exploit pack. </p><p>According to the dictionary, Styx is a river in the underworld, over which Charon ferried the souls of the dead. According to the Styx service provider website, &lsquo;Styx is a river in Greek mythology that formed the boundary between earth and the underworld... It circles the underworld nine times.&rsquo; So it seems that the origin of the name is as rigorous as the exploit pack itself. </p><p>The Styx exploit pack was originally marketed and sold via Styx crypt.com (see <a href="#figure.1">Figure 1</a>), the website of a Russian organization that provided obfuscation services for mangling and morphing the structure of different file formats. A couple of months ago, however, the exploit pack was removed and it is now sold on the very lucrative underground market. It has been used on a large scale thanks to its efficient design, built-in exploit obfuscation and other features. </p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Original Styx service provider." src="/uploads/images/figures/2013/09/Styx-1.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Original Styx service provider.</b></p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3290081"></a>Communication design</h2></div></div></div><p>Styx implements a well-defined API construct to communicate with its controller application. The use of API-based web communication procedures makes the exploit pack robust and flexible. It uses JSON and XML format for sending and receiving data. Let&rsquo;s look at how the target URL is constructed and how communication is achieved. </p><p>Typically, a Styx URL is constructed in the format: </p><pre class="programlisting">http://&lt;hostname&gt;/&lt;api-folder&gt;/[command|method]</pre><p>The &lsquo;hostname&rsquo; is the address of the target domain. The &lsquo;api folder&rsquo; is the directory on the server that is accessed using an API key. The key is sent as a part of the HTTP request to enable authentication in order to process the command or method sent by the client. Primarily, the client has to send &lsquo;X-APIKey&rsquo; in the HTTP header in order to access the API so that the server will accept the requests and sends responses accordingly. For example, Listing 1 shows an HTTP request sent by the client in order to get a list of domain names configured on the server.</p><pre class="programlisting"><span class="bold"><strong># Getting domain names</strong></span>
POST http://&lt;styx_domain&gt;:8888/api/getdomains HTTP/1.1
Host: &lt;styx_domain&gt;
Accept: application/json
X-APIKey: g48XBmTJM4Jf6LpjevOrMgXEZlRNmRluKigcx2L0UlfOYv14SEjuL81AjGdxnoR1

<span class="bold"><strong>#Adding domain names</strong></span>
POST http://&lt;styx_domain&gt;:8888/api/adddomain HTTP/1.1
Host: &lt;styx_domain&gt;
Accept: application/json
X-APIKey: g48XBmTJM4Jf6LpjevOrMgXEZlRNmRluKigcx2L0UlfOYv14SEjuL81AjGdxnoR1
domain= 

<span class="bold"><strong>Listing 1: HTTP POST request with API key.</strong></span>
</pre><p>Styx also implements a well-defined error-handling interface for JSON and XML-based communication models, as presented in Listing 2.</p><pre class="programlisting"><span class="bold"><strong># JSON Error Flow</strong></span>
{
    &ldquo;error&rdquo;: true,
    &ldquo;message&rdquo;: &ldquo;error message&rdquo;,
    &ldquo;data&rdquo;: null
}

<span class="bold"><strong># XML Error Flow</strong></span>
&lt;?xml version=&rdquo;1.0&rdquo; encoding=&rdquo;utf-8&rdquo;?&gt;
&lt;response&gt;
    &lt;error&gt;1&lt;/error&gt;
    &lt;message&gt;error message&lt;/message&gt;
&lt;/response&gt;

<span class="bold"><strong>Listing 2: JSON/XML error handling response.</strong></span>
</pre><p>The commands used by Styx are shown in <a href="#table.1">Table 1</a>.</p><div class="table"><a id="table.1"></a><table border="1" summary="Commands used by Styx exploit pack."><colgroup><col /><col /></colgroup><thead><tr><th align="center">Commands</th><th align="center">Details</th></tr></thead><tbody><tr><td>/api/clearSubaccStats</td><td>Clear all statistics data of a sub-account</td></tr><tr><td>/api/getMagicURL</td><td>Return magic API key used by sub-account for execution of commands</td></tr><tr><td>/api/uploadfile</td><td>Upload file</td></tr><tr><td>/api/getfileCheck</td><td>Check assigned file against detection</td></tr><tr><td>/api/getdomains</td><td>Get a list of configured domains</td></tr><tr><td>/api/adddomain</td><td>Add a new domain to the list</td></tr><tr><td>/api/createDomainSet</td><td>Create a new domain set of selection and rotation</td></tr><tr><td>/api/addDomainsToSet</td><td>Add domains to create a set</td></tr><tr><td>/api/deldomain</td><td>Remove a domain</td></tr><tr><td>/api/getDomainCheck</td><td>Check domain against Ghost Busters</td></tr><tr><td>/api/stats_global</td><td>Get global statistics by date</td></tr><tr><td>/api/stats_browser_n_os</td><td>Get global statistics by operating system and browser</td></tr><tr><td>/api/stats_country</td><td>Get global statistics by country</td></tr><tr><td>/api/getCurrentHitPercent</td><td>Return current and active hits</td></tr><tr><td>/api/getCurrentFlow</td><td>Return current data flow from the exploit pack</td></tr><tr><td>/api/setNotification</td><td>Set notification messages</td></tr><tr><td>/api/detBlockWithoutReferrer</td><td>Block access without referrer</td></tr><tr><td>/api/setBlockUniqueReferrers</td><td>Block (first three) access with unique referrer</td></tr><tr><td>/api/setBlockRepeatForIP</td><td>Block repeat access for specific IPs for hours</td></tr><tr><td>/api/setUsePluginDetect</td><td>Block access based on user-agent strings</td></tr></tbody></table><p class="title"><b>Table&nbsp;1.&nbsp;Commands used by Styx exploit pack.</b></p></div><p>A number of metrics are used by Styx to determine the infection success rate and to build statistics accordingly. By default, the exploit pack has an interval of 15 seconds in real time to receive data from the client. In other words, infected machines transmit data every 15 seconds. The different metrics that are used for traffic flow analysis are as follows:</p><div class="itemizedlist"><ul type="disc"><li><p>Current Loaded &ndash; number of active infections</p></li><li><p>Current Uniques &ndash; number of unique infections</p></li><li><p>Current Hit &ndash; total number of hits </p></li><li><p>Current Refuse &ndash; total number of IP addresses that are refused to serve exploits </p></li><li><p>Top-5 Browsers &ndash; top five exploited browsers</p></li><li><p>Top-5 OS &ndash; top five infected hosts</p></li><li><p>Top-5 Countries &ndash; top five countries with the highest number of infections</p></li><li><p>Top-5 Referrers &ndash; top five referrers, based on which exploits are served. </p></li></ul></div><p>Styx can easily be integrated with Sutra, a traffic distribution system (TDS), to manage and build statistics regarding successful (or unsuccessful) infections based on their geographical locations. </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3995870"></a>Services</h2></div></div></div><p>Styx uses three different types of service for various functionalities. The services are discussed below.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2842671"></a>Ghost Busters </h3></div></div></div><p>The Ghost Busters service [<span class="citation"><a href="#citation.1">1</a></span>] is designed to provide flexibility in checking and verifying known domain names against active blacklists to determine whether the domain has been marked as malicious. Active domains are not mapped to any entries present in the blacklist and thus cannot be traced easily. As a result, the incoming traffic from infected systems remains active and malicious domains continue to spread malware. This prevents traffic loss. Listing 3 shows how Styx implements the domain verification check. </p><pre class="programlisting">// Check domain with Ghost Busters

$domain = &ldquo;my-domain.com&rdquo;
If (false === ($result = $api -&gt; getDomainCheck($domain))) {
            trigger_error($api -&gt; getErrorMessage());
} elseif ($result -&gt; messame == &lsquo;OK&rsquo;)  {
           printf(&ldquo;your domain %s is OK, Ghostbusters said.&rdquo;, $domain);
} elseif {
            printf(&ldquo;Domain id +NOT+ clean, bro. Here is your check: %s, your domain: %s&rdquo;, $result -&gt;data-&gt;public_url, $domain);
}

<span class="bold"><strong>Listing 3: Ghost Busters domain verification check.</strong></span>
</pre><p>Ghost Busters provides a well defined API that can be integrated into the Command &amp; Control (C&amp;C) panels of different automated exploit and malware infection frameworks to provide a built-in defence. The Ghost Busters system provides real-time updates on the fly, which are very beneficial for attackers in preventing the fingerprinting of domains. The Ghost Busters service also implements a robust multi threading system to address multiple requests made at the same time. It usually takes three seconds to provide domain verification results. <a href="#figure.2">Figure 2</a> shows the Ghost Busters website. </p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="Ghost Busters service." src="/uploads/images/figures/2013/09/Styx-2.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;Ghost Busters service.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2360912"></a>Captain Checker</h3></div></div></div><p>The Captain Checker service is used by Styx to check whether a generated file will execute properly. Captain Checker verifies that the file is not easily detectable by the anti protection solutions running on the end user machines. The idea is to check whether the malicious file survives after a number of aggressive tests against known anti virus solutions. Listing 4 shows how a simple check is performed by Styx when a malicious executable is generated. </p><pre class="programlisting">// Check domain with Ghost Busters
$domain = &ldquo;my-domain.com&rdquo;
If (false === ($result = $api -&gt; getFileCheck( ))) {
      trigger_error($api -&gt; getErrorMessage());
} elseif ($result -&gt; message == &lsquo;OK&rsquo;)  {
      echo &ldquo;File checked. It&rsquo;s OK.&rdquo;;
} else
        printf(&ldquo;Another proble with your file, my Lord. Captain Checker says it&rsquo;s NOT ok: %s&rdquo;, $result -&gt;data-&gt;public_url);
}

<span class="bold"><strong>Listing 4: Captain Checker file screening.</strong></span>
</pre></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4136168"></a>Styx obfuscator</h3></div></div></div><p>Styx also uses a built-in service for morphing and obfuscation. Every single exploit code served by Styx is properly obfuscated with this cryptor service. This substantially complicates the process of unwrapping exploit code for analysis.</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3625288"></a>Filters and access restrictions</h2></div></div></div><p>Styx implements a number of different filters to restrict the incoming flow of unauthorized traffic. This functionality protects the exploit pack against being traced. The different sets of filters are discussed below:</p><div class="itemizedlist"><ul type="disc"><li><p>Block access without referrer: if the incoming HTTP request does not have the appropriate referrer header set, Styx blocks the request. This means that some type of referrer validation exists in the Styx exploit pack.</p></li><li><p>Block access (first 3) with unique referrer: access to Styx web pages is blocked if the incoming requests have unique referrers. This filter is created to trigger ambiguity in accessing the Styx exploit pack. </p></li><li><p>Block repetitive access: if the incoming requests are repetitive and originate from the same IP addresses, access is blocked immediately for an hour. This duration can be extended as required. This filter is designed specifically for scenarios in which security researchers and analysts use emulated systems to download malware. </p></li><li><p>Filter IP addresses: the IP addresses of the infected machines that are connected to the Styx exploit pack are filtered. This is to restrict the bot traffic originating from already compromised systems.</p></li><li><p>Filter non-<span class="emphasis"><em>Windows</em></span> traffic: the user agent string that accompanies incoming HTTP requests is scanned. This testing is performed to detect whether the traffic originates from e.g. <span class="emphasis"><em>Windows</em></span> systems or mobile platforms. This option restricts the serving of the exploit in a non reliable environment. For example, an exploit that runs on <span class="emphasis"><em>Windows</em></span> will fail on the <span class="emphasis"><em>Linux</em></span> platform, so with the use of this filter, traffic screening can be performed.</p></li><li><p>Filter bots by user agent: in this filter, the incoming HTTP traffic is scanned based on user agent strings carrying information about the crawlers and traffic collector bots. This is done to avoid automated crawling for Styx and to restrict the listing in search engines. </p></li></ul></div><p>Once the filter is in place, the next step is to take action when the filter finds the traffic. Styx triggers three different actions by replying with one of the following:</p><div class="itemizedlist"><ul type="disc"><li><p>402 Payment required</p></li><li><p>404 Page not found</p></li><li><p>Redirect to BackURL &ndash; 302.</p></li></ul></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3593771"></a>Exploit distribution and analysis</h2></div></div></div><p>Now let&rsquo;s look at exactly how Styx downloads malware onto users&rsquo; systems. In a number of deployments, Styx uses multiple iframe redirectors to redirect browsers to a malicious domain. For example, the typical URLs used by Styx are shown in Listing 5. The random strings are actual API keys that authenticate the client HTTP requests to the server. </p><pre class="programlisting">h___p://loadcontent.zapto.org:8888/jyfGy80g7h70DI9M0JzPI0osnR0839G0eQ4V0V3XG0E1oJ0Ruqs0eo9X0KMdJ12ybd/
h___p://loadcontent.zapto.org:8888/zRu1S80FSmy0vSvg0vOqU0nVcA16fx70NXCG0IZJv0djlf0H7Tt06qeU0BKhn06ys0/
http://getstatlink.com/m2DM610qtKM0iVWv0iKBR0O75g0PSu00DBlZ0Xzlz0ixge0xxwL06Yex0FsBj0K4wd0d5AJ0iROl/   
http://getstatlink.com/m2DM610qtKM0iVWv0iKBR0O75g0PSu00DBlZ0Xzlz0ixge0xxwL06Yex0FsBj0K4wd0d5AJ0iROl/mCYoHHs.js 

<span class="bold"><strong>Listing 5: Styx exploit pack &ndash; URL design.</strong></span>
</pre><p>On successful redirection to a malicious domain, the browser sends a GET request to download a malicious file (in this example, it is Java), which exploits the vulnerability in the browser to fetch the malware. Primarily, Styx uses the PluginDetect script to map the number of vulnerable plug ins running in the system. When an iframe is executed, the browser is redirected to the malicious domain which triggers the PluginDetect script. If plug-ins are found to be vulnerable, a requisite exploit file is served, as shown in <a href="#figure.3">Figure 3</a>. If there are no vulnerable plug ins, the malicious domain either serves no HTTP response or redirects the browser to a legitimate domain such as the <span class="emphasis"><em>Google</em></span> search engine. </p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Malicious Jar file used by Styx." src="/uploads/images/figures/2013/09/Styx-3.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Malicious Jar file used by Styx.</b></p></div><p>(Click <a href="/uploads/images/figures/2013/09/Styx-3-large.jpg" target="_top">here</a> to view a larger version of Figure 3.)</p><p>On successful exploitation, Styx serves the malicious executable, as shown in <a href="#figure.4">Figure 4</a>. </p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Downloading malicious executable." src="/uploads/images/figures/2013/09/Styx-4.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Downloading malicious executable.</b></p></div><p>(Click <a href="/uploads/images/figures/2013/09/Styx-4-large.jpg" target="_top">here</a> to view a larger version of Figure 4.)</p><p>Once the malware is served and successfully installed, it connects back to the Styx exploit pack administration panel to send a notification about the installation and to update the statistics, as shown in Figure 5. As one can see, the bot is sending random numbers as a part of the ps0 parameter. There is a possibility that the C&amp;C panels used by the botnet and exploit packs such as Styx are hosted on the same domain. In certain scenarios, to increase security, the malware authors use two different domains for the exploit pack and the botnet C&amp;C panel. </p><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="Bot (malware) communicating with C&amp;C." src="/uploads/images/figures/2013/09/Styx-5.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;Bot (malware) communicating with C&amp;C.</b></p></div><p>(Click <a href="/uploads/images/figures/2013/09/Styx-5-large.jpg" target="_top">here</a> to view a larger version of Figure 5.)</p><p>Styx uses CVE-2013-0422 [<span class="citation"><a href="#citation.2">2</a></span>] on a large scale to infect end user machines by exploiting vulnerable installations of Java code. For constructing payloads and applets for Java exploitation, Styx inherits the power of the Java Network Language Protocol (JNLP) for running Java code outside the browser as a standalone application.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3038969"></a>Detecting Styx exploit pack</h2></div></div></div><p>Based on Styx functionality, we have written a Snort signature (presented in Listing 6) which can be used to trace malicious traffic generated by the Styx exploit pack in the wild. </p><pre class="programlisting">alert tcp $HOME_NET 1024: -&gt; $EXTERNAL_NET any (msg:&rdquo;Win32.Exploit.Styx -  CnC Communication&rdquo;; flow:established,to_server; 
urilen:&gt;200; 
content:&rdquo;GET &ldquo;; 
depth:4; 
content:&rdquo;.exe?&rdquo;; 
distance:200; 
within:100; 
content:&rdquo;=&rdquo;;
within:30; 
content:&rdquo;|26|h=&rdquo;; 
within:30; 
fast_pattern; 
content:&rdquo;User-Agent: Mozilla/4.0 (Win&rdquo;; 
distance:0; 
content:!&rdquo;|0d 0a|Cookie|3a| &ldquo;; 
reference:md5,d5cc74e25577706982a71eb4acbfadc1; pcre:&rdquo;/\.exe\?[\w]+=[\w]+&amp;h=[\d]{1,2}\x20HTTP\/1\.1/&rdquo;; 
classtype:ExploitKit; 
sid:XXXXXXXXX; rev:1; )

<span class="bold"><strong>Listing 6: Styx exploit pack signature.</strong></span>
</pre></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2616896"></a>Further reading</h2></div></div></div><p>Other researchers have blogged about the Styx exploit pack&rsquo;s infection mechanisms. To understand how Styx serves an exploit, an interesting case study has been discussed in [<span class="citation"><a href="#citation.2">2</a></span>], [<span class="citation"><a href="#citation.6">6</a></span>]. General information about the features and characteristics of the Styx exploit pack have been presented in [<span class="citation"><a href="#citation.3">3</a></span>] to show the advancements in code and working. A list of simple detection patterns has been presented in [<span class="citation"><a href="#citation.4">4</a></span>] so that appropriate signatures can be designed to detect the Styx exploit pack. A comparison report [<span class="citation"><a href="#citation.5">5</a></span>] of the Styx exploit pack with other existing browser exploit frameworks clarifies the ongoing state of exploit packs. Finally, a general exploit distribution mechanism used by the Styx exploit pack covering a real time case study is presented in [<span class="citation"><a href="#citation.8">8</a></span>]. </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4654184"></a>Conclusion</h2></div></div></div><p>This paper dissects the design and behaviour of the Styx exploit pack in detail. The complete design analysis will help researchers and analysts to understand more about the different elements of the Styx exploit pack. We hope that these kinds of analytical details will help the security community to build more robust protection solutions to subvert the infections spread by automated exploit packs such as Styx.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4007772"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] Ghost Busters. <span class="bibliosource"><a href="https://www.youtube.com/watch?v=mqWILzUnsmw" target="_blank">https://www.youtube.com/watch?v=mqWILzUnsmw</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] CVE-2013-0422. <span class="bibliosource"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-0422" target="_blank">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-0422</a></span>.</p></div><div class="bibliomixed"><a id="citation.3"></a><p class="bibliomixed">[3] The infection of Styx Exploit Kit (Landing page: painterinvoice.ru + Payload: PWS/Ursnif Variant). February 2013. <span class="bibliosource"><a href="https://malwaremustdie.blogspot.co.uk/2013/02/the-infection-of-styx-exploit-kit.html" target="_blank">http://malwaremustdie.blogspot.co.uk/2013/02/the-infection-of-styx-exploit-kit.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.4"></a><p class="bibliomixed">[4] Styx Exploit Kit Analysis &ndash; building a bridge to the underworld. April 2013. <span class="bibliosource"><a href="https://malforsec.blogspot.co.uk/2013/04/styx-exploit-kit-analysis-building.html" target="_blank">http://malforsec.blogspot.co.uk/2013/04/styx-exploit-kit-analysis-building.html</a></span>. </p></div><div class="bibliomixed"><a id="citation.5"></a><p class="bibliomixed">[5] Inside Styx Sploitpack 4.0 &ndash; Exploit Kit Control Panel. May 2013. <span class="bibliosource"><a href="http://malware.dontneedcoffee.com/2013/05/inside-styx-2013-05.html" target="_blank">http://malware.dontneedcoffee.com/2013/05/inside-styx-2013-05.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.6"></a><p class="bibliomixed">[6] Styx Exploit Kit. December 2012. <span class="bibliosource"><a href="http://www.malwaresigs.com/2012/12/19/Styx-exploit-kit/" target="_blank">http://www.malwaresigs.com/2012/12/19/Styx-exploit-kit/</a></span>. </p></div><div class="bibliomixed"><a id="citation.7"></a><p class="bibliomixed">[7] An Overview of Exploit Packs (Update 19.1). April 2013. <span class="bibliosource"><a href="https://contagiodump.blogspot.com/2010/06/overview-of-exploit-packs-update.html" target="_blank">http://contagiodump.blogspot.com/2010/06/overview-of-exploit-packs-update.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.8"></a><p class="bibliomixed">[8] Surgihalli, S.; Krishnasamy, V. Styx Exploit Kit Takes Advantage of Vulnerabilities. June 2013. <span class="bibliosource"><a href="https://blogs.mcafee.com/mcafee-labs/Styx-exploit-kit-takes-advantage-of-vulnerabilities" target="_blank">http://blogs.mcafee.com/mcafee-labs/Styx-exploit-kit-takes-advantage-of-vulnerabilities</a></span>. </p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Styx exploit pack: insidious design analysis&url=https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis&title=Styx exploit pack: insidious design analysis"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis&t=Styx exploit pack: insidious design analysis"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>