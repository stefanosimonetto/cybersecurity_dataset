<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: VB2017 paper: Modern reconnaissance phase by APT – protection layer</title>
<meta name="description" content="During recent research, Talos researchers observed the ways in which APT actors are evolving and how a reconnaissance phase is included in the infection vector in order to protect valuable zero-day exploits or malware frameworks. Indeed, the development of exploits and complex malware is a big cost from the attacker’s point of view, which is why they put a lot of effort into hiding them from analysts and security companies. This paper presents five case studies that demonstrate how the infection vector is evolving. We chose five examples from different APT actors, showing that this trend is not related to a single group of attackers, but is in fact global." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 5749;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-vb2017-paper-modern-reconnaissance-phase-apt-protection-layer"></a>VB2017 paper: Modern reconnaissance phase by APT – protection layer</h1>
<h3><a class="chapter" name="h3-paul-rascagneres-amp-warren-mercer"></a>Paul Rascagneres &amp; Warren Mercer</h3>
<p>Cisco Talos</p>
<p><em>Copyright © 2017 Virus Bulletin</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-11642" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-11642" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /> <a class="toc-level2" href="#h2-case-study-1-nato">Case study #1: NATO</a><br /> <a class="toc-level2" href="#h2-case-study-2-dina-bosio">Case study #2: Dina Bosio</a><br /> <a class="toc-level2" href="#h2-case-study-3-survey-time">Case study #3: Survey time</a><br /> <a class="toc-level2" href="#h2-case-study-4-korean-new-year">Case study #4: Korean New Year</a><br /> <a class="toc-level2" href="#h2-case-study-5-rokrat">Case study #5: ROKRAT</a><br /> <a class="toc-level4" href="#h4-1-twitter-accounts">#1 Twitter accounts</a><br /> <a class="toc-level4" href="#h4-2-yandex-accounts">#2 Yandex accounts</a><br /> <a class="toc-level4" href="#h4-3-mediafire-accounts">#3 MediaFire accounts</a><br /> <a class="toc-level2" href="#h2-mitigation">Mitigation</a><br /> <a class="toc-level2" href="#h2-conclusion">Conclusion</a><br /> <a class="toc-level2" href="#h2-references">References</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p>The <em>Talos</em> researchers are no strangers to APT attacks. During recent research, we observed the ways in which APT actors are evolving and how a reconnaissance phase is included in the infection vector in order to protect valuable zero-day exploits or malware frameworks. Indeed, the development of exploits and complex malware is a big cost from the attacker's point of view, which is why they put a lot of effort into hiding them from analysts and security companies.</p>
<p>This paper presents five case studies that demonstrate how the infection vector is evolving. We chose five examples from different APT actors, showing that this trend is not related to a single group of attackers, but is in fact global.</p>
<ul>
<li>The first case study is that of an <em>Office</em> document that includes a Flash object. The Flash object is used to retrieve information about the target system and to send this information to the attackers. If the information matches the expectations of the attacker, the exploit is sent to the infected system.</li>
<li>The second case study is that of an <em>Office</em> document with a macro and JavaScript. The purpose of the JavaScript is to collect information about the target and to send this information to the attacker. If the information matches the expectations of the attacker, the final payload is sent to the infected system.</li>
<li>The third case study is that of an <em>Office</em> document with a macro and PowerShell. The protection mechanism is exactly the same as in the previous case study.</li>
<li>The fourth case study is that of a Korean threat based on a <em>Hanword</em> document. In this case, the infection vector is first used to send information about the targeted system before receiving the final Remote Administration Tool (RAT). If the data is wrong, the RAT cannot be downloaded and the investigation is stopped.</li>
<li>Finally, we will see that sometimes we can obtain the final payload. We managed to obtain the final RAT of the Korean-targeting threat actor mentioned previously. We named the RAT 'ROKRAT'.</li>
</ul>
<p>After the case studies, we will describe some mitigations to help avoid infection.</p>
<p> </p>
<h2><a class="chapter" name="h2-case-study-1-nato"></a>Case study #1: NATO</h2>
<p><strong>SHA‑256:</strong> ffd5bd7548ab35c97841c31cf83ad2ea5ec02c741560317fc9602a49ce36a763</p>
<p><strong>Filename:</strong> NATO secretary meeting.doc</p>
<p>The analysed sample is a <em>Microsoft Word</em> document, which contains a Flash object, as shown in Figures<a href="#fig1"> 1</a> and <a href="#fig2">2</a>.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/7315/1238/0631/Fig-1-modern-reconnaisance.png" alt="Fig-1-modern-reconnaisance.png" width="387" height="290" /></p>
<p><span class="centered-caption"><a class=" anchor" name="fig1"></a>Figure 1: Screenshot of Microsoft Word document.</span><br /><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/9615/1238/0709/Fig-2-modern-reconnaisance.png" alt="Fig-2-modern-reconnaisance.png" width="681" height="178" /><span class="centered-caption"><a class=" anchor" name="fig2"></a>Figure 2: Flash object.</span></p>
<p>The first task of the Flash object is to gather information about the system using the flash.system.Capabilities.serverString API and to send this information to the attacker. The following is an example of the output of this function:</p>
<p style="padding-left: 30px;">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;SB=f&amp;DEB=t&amp;V=WIN%209%2C0%2C0%2C0&amp;M=Adobe%20Windows&amp;R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;L=en&amp;PT=ActiveX&amp;AVD=f&amp;LFD=f&amp;WD=f&amp;IME=t&amp;DD=f&amp;DDP=f&amp;DTS=f&amp;DTE=f&amp;DTH=f&amp;DTM=f</p>
<p>The values are documented by <em>Adobe</em> in [<a href="#ref1">1</a>]. Some fields are interesting:</p>
<ul>
<li>The PT value in the example is ActiveX. This value means that the Flash object is executed through ActiveX (in <em>Microsoft Office</em>). If the Flash object is executed outside of <em>Office</em> the value is different. This information helps the attacker to identify if the Flash context is good. Generally, security researchers extract embedded objects to analyse them.</li>
<li>The V value provides the Flash version. This information can help the attacker to deliver an exploit that works on the installed Flash version (no zero-day if it's not mandatory).</li>
<li>The OS value provides the operating system version (<em>Windows XP</em> in our case). This value can be used to determine whether the system is legitimate. If the attacker knows that the target uses <em>Windows 10</em> but receives <em>Windows XP</em> as the OS value, they can conclude that the request was performed by a sandbox system.</li>
</ul>
<p><a href="#fig3">Figure 3</a> is a screenshot of the C&amp;C used to send this information.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/3515/1238/1983/Fig-3-modern-reconnaisance.jpg" alt="Fig-3-modern-reconnaisance.jpg" width="576" height="96" /><span class="centered-caption"><a class=" anchor" name="fig3"></a>Figure 3: C&amp;C used to send information.</span></p>
<p>If the data matches the attacker's expectations, the server will send a second Flash object and an additional payload to the infected system (<a href="#fig4">Figure 4</a>).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/3515/1238/2091/Fig-4-modern-reconnaisance.png" alt="Fig-4-modern-reconnaisance.png" width="632" height="77" /><span class="centered-caption"><a class=" anchor" name="fig4"></a>Figure 4: If the data matches the attacker's expectations, the server will send a second Flash object and an additional payload to the infected system.</span></p>
<p>The new Flash object will be loaded with the LoadBytes() API (this.swf variable) and the payload is passed in an argument in the 'sh' variable (we assume that sh is for shellcode). This case study demonstrates how the attackers protect their exploits, in this case a Flash exploit.</p>
<p>Thanks to <em>Umbrella Cisco</em> we were able to observe the DNS activity (<a href="#fig5">Figure 5</a>). The campaign started on 29 December 2016 with a very low level of activity. On 16 January, we see an uptick in activity – this is when we started to observe more public samples, which we used for our research purposes.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/1915/1238/2423/Fig-5-modern-reconnaisance.png" alt="Fig-5-modern-reconnaisance.png" width="720" height="186" /><span class="centered-caption"><a class=" anchor" name="fig5"></a>Figure 5: DNS activity showing an uptick on 16 January.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-case-study-2-dina-bosio"></a>Case study #2: Dina Bosio</h2>
<p><strong>SHA‑256:</strong> 2299ff9c7e5995333691f3e68373ebbb036aa619acd61cbea6c5210490699bb6</p>
<p><strong>Filename:</strong> National Day Reception (Dina Mersine Bosio Ambassador's Secretary).doc</p>
<p>This case study revolves around a <em>Microsoft Word</em> document. The document is alleged to have been created by Dina Bosio, an individual whom we believe to be fictitious (see <a href="#fig6">Figure 6</a>).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/1815/1238/2616/Fig-6-modern-reconnaisance.png" alt="Fig-6-modern-reconnaisance.png" width="364" height="261" /><span class="centered-caption"><a class=" anchor" name="fig6"></a>Figure 6: Dina Bosio profile.</span></p>
<p>As can be seen in <a href="#fig7">Figure 7</a>, the document contains a macro.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/8615/1238/2683/Fig-7-modern-reconnaisance.png" alt="Fig-7-modern-reconnaisance.png" width="365" height="275" /><span class="centered-caption"><a class=" anchor" name="fig7"></a>Figure 7: The document contains a macro.</span></p>
<p>The purpose of the macro is to generate and execute a JavaScript document called mailform.js. This document is executed with the argument NPEfpRZ4aqnh1YuGwQd0. This is the RC4 key used by the JavaScript to decrypt itself. Without this key/argument, the JavaScript cannot be executed. If this file is identified on <em>VirusTotal</em> without the context (the macro with the RC4 key) then analysis is impossible.</p>
<p>The purpose of the decrypted payload is to gather information about the targeted system and to download the final RAT (with the .pif extension) if the data meets the attackers' criteria (<a href="#fig8">Figure 8</a>).</p>
<p><a class="zoom-img" title="Figure 8: The payload gathers information about the targeted system and downloads the final RAT if the data meets the attackers’ criteria." href="/files/7615/1238/3178/Fig-8-modern-reconnaisance.png"><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/b10751f65bf88e513bf756f2a0f23f79_f2247.png" alt="Fig-8-modern-reconnaisance.png" width="840" height="104" /></a><span class="centered-caption"><a class=" anchor" name="fig8"></a>Figure 8: The payload gathers information about the targeted system and downloads the final RAT if the data meets the attackers' criteria.</span></p>
<p>In this case, the script collects network information, domain information, share information, user information, installed software, and task list.</p>
<p> </p>
<h2><a class="chapter" name="h2-case-study-3-survey-time"></a>Case study #3: Survey time</h2>
<p><strong>SHA‑256:</strong> eb1f47c9f71d3fd2ff744a9454c256bf3248921fbcbadf0a80d5e73a0c6a82de</p>
<p><strong>Filename:</strong> survey.xls</p>
<p>The file in this case study is a <em>Microsoft Excel</em> document with a macro, the purpose of which is to drop and execute a VBS and a PowerShell script (see <a href="#fig9">Figures 9</a> and <a href="#fig10">10</a>). As with the previous case study, the purpose of the payload is to collect information about the infected system; <a href="#fig11">Figure 11</a> shows the information-gathering script.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/1115/1238/3335/Fig-9-modern-reconnaisance.png" alt="Fig-9-modern-reconnaisance.png" width="385" height="237" /><span class="centered-caption"><a class=" anchor" name="fig9"></a>Figure 9: The document contains a macro.</span></p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/2715/1238/3392/Fig-10-modern-reconnaisance.jpg" alt="Fig-10-modern-reconnaisance.jpg" width="487" height="662" /><span class="centered-caption"><a class=" anchor" name="fig10"></a>Figure 10: The purpose of the macro is to drop and execute a VBS and a PowerShell script.</span></p>
<p><a class="zoom-img" title="Figure 11: The information-gathering script." href="/files/7415/1238/3430/Fig-11-modern-reconnaisance.png"><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/6af5e20704c5536a64a46a418738897a_f2250.png" alt="Fig-11-modern-reconnaisance.png" width="840" height="60" /></a><span class="centered-caption"><a class=" anchor" name="fig11"></a>Figure 11: The information-gathering script.</span></p>
<p>As in the other cases, if the collected data is good and is what the attacker is looking for, a binary is downloaded and executed on the system.</p>
<p> </p>
<h2><a class="chapter" name="h2-case-study-4-korean-new-year"></a>Case study #4: Korean New Year</h2>
<p><strong>SHA‑256:</strong> 281828d6f5bd377f91c6283c34896d0483b08ac2167d34e981fbea871893c919</p>
<p><strong>Filename:</strong> 5170101-17년_북한_신년사_분석.hwp (5170101-17 __ North Korea _ New Year _ analysis .hwp)</p>
<p>In this case study the infection vector is a <em>Hanword</em> document (HWP). <em>Hanword</em> is a well-known text editor in South Korea, widely used in the public sector (instead of<em> Microsoft Office</em>). The HWP format support OLE objects. The OLE objects are simply compressed with zlib. <a href="#fig12">Figure 12</a> shows a screenshot of the analysed document.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/8015/1238/3554/Fig-12-modern-reconnaisance.png" alt="Fig-12-modern-reconnaisance.png" width="354" height="254" /><span class="centered-caption"><a class=" anchor" name="fig12"></a>Figure 12: The analysed document.</span></p>
<p>The logo at the bottom of the document is that of the Ministry of Unification. The purpose of the ministry is to work on the unification of North Korea and South Korea. As expected, the HWP document contains OLE objects, as shown in<a href="#fig13"> Figure 13</a>.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/5915/1238/4117/Fig-13-modern-reconnaisance.png" alt="Fig-13-modern-reconnaisance.png" width="429" height="255" /><span class="centered-caption"><a class=" anchor" name="fig13"></a>Figure 13: OLE objects in the HWP document.</span></p>
<p>The OLE objects are executed when the user clicks on a link in the document. The objects drop two executables onto the disk:</p>
<ul>
<li>C:\Users\ADMINI~1\AppData\Local\Temp\Hwp (2).exe</li>
<li>C:\Users\ADMINI~1\AppData\Local\Temp\Hwp (3).exe</li>
</ul>
<p>The first step of the executable is to open a decoy document and present this to the user (<a href="#fig14">Figure 14</a>).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/1515/1238/4178/Fig-14-modern-reconnaisance.png" alt="Fig-14-modern-reconnaisance.png" width="408" height="292" /><span class="centered-caption"><a class=" anchor" name="fig14"></a>Figure 14: A decoy document is presented to the user.</span></p>
<p>The next step is to gather information from the system:</p>
<ul>
<li>Computer name</li>
<li>Username</li>
<li>Execution path</li>
<li>BIOS model (HKLM\System\CurrentControlSet\Services\mssmbios\Data\SMBiosData)</li>
</ul>
<p>The purpose appears to be to determine whether the target is suitable for attack. The data is sent to a (compromised) legitimate website of the South Korean government:</p>
<p style="padding-left: 30px;">www.kgls.or.kr/news2/news_dir/index.php</p>
<p>If the attackers decide that the victim's profile meets their requirements, a .jpg file is generated. This file is the binary executed on the infected system (the final RAT):</p>
<p style="padding-left: 30px;">www.kgls.or.kr/news2/news_dir/02BC6B26_put.jpg</p>
<p style="padding-left: 30px;">(<em>where 02BC6B26 is the ID of the infected machine</em>)</p>
<p><a href="#fig15">Figure 15</a>, for example, shows a pcap of the communication between an infected machine and the C&amp;C (the pcap comes from <em>VirusTotal</em>).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/1415/1238/4353/Fig-15-modern-reconnaisance.png" alt="Fig-15-modern-reconnaisance.png" width="329" height="292" /><span class="centered-caption"><a class=" anchor" name="fig15"></a>Figure 15: Communication between an infected machine and the C&amp;C.</span></p>
<p>The decoded content is as follows:</p>
<p>0F37555F#0#0#0#TEQUILABOOMBOOM#janettedoe#C:\4b20883386665bd205ac50f34f7b6293747fd720d602e2bb3c270837a21291b4#innotek GmbH VirtualBox 1.2</p>
<p>The first field contains an ID generated on the infected system, the fifth field is the hostname of the <em>VirusTotal</em> sandbox, the sixth field is the username, the seventh field is the execution path, and finally we can see the BIOS version of the <em>VirusTotal</em> sandbox. We can conclude that the sample was executed on a <em>VirusTotal</em> virtual machine.</p>
<p> </p>
<h2><a class="chapter" name="h2-case-study-5-rokrat"></a>Case study #5: ROKRAT</h2>
<p>In some cases, we are able to provoke APT actors and obtain the final RAT. This was the case with the Korean actor mentioned in case study #4. As before, the campaign started with two HWP documents.</p>
<p>The first email was sent from the official email contact of the Korea Global Forum. We assume that the account was compromised and abused by the attacker. The email asks the recipient to complete a form in an attached document (an HWP document), as shown in Figures <a href="#fig16">16</a> and <a href="#fig17">17</a>.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/7215/1238/4468/Fig-16-modern-reconnaisance.png" alt="Fig-16-modern-reconnaisance.png" width="351" height="295" /><a class=" anchor" name="fig16"></a><span class="centered-caption">Figure 16: The recipient is asked to complete a form in an attached (HWP) document.</span></p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/4915/1238/4528/Fig-17-modern-reconnaisance.png" alt="Fig-17-modern-reconnaisance.png" width="349" height="237" /><span class="centered-caption"><a class=" anchor" name="fig17"></a>Figure 17: The attached HWP document.</span></p>
<p>The second email asks for help from someone in North Korea. In this case, the attackers work on the empathy of the receiver. This email also contains an attached HWP document (Figures <a href="#fig18">18</a> and <a href="#fig19">19</a>).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/1615/1238/4616/Fig-18-modern-reconnaisance.png" alt="Fig-18-modern-reconnaisance.png" width="351" height="279" /><span class="centered-caption"><a class=" anchor" name="fig18"></a>Figure 18: The second email also contains an HWP document.</span></p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/9015/1238/4665/Fig-19-modern-reconnaisance.png" alt="Fig-19-modern-reconnaisance.png" width="349" height="237" /><span class="centered-caption"><a class=" anchor" name="fig19"></a>Figure 19: The attached HWP document.</span></p>
<p>As usual in HWP documents, the file contains OLE objects (compressed with zlib).</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/1815/1238/4742/Fig-20-modern-reconnaisance.png" alt="Fig-20-modern-reconnaisance.png" width="400" height="191" /><span class="centered-caption"><a class=" anchor" name="fig20"></a>Figure 20: The file contains OLE objects.</span></p>
<p>The document contains an EPS (Encapsulated PostScript) object. This object contains an exploit that is used to execute code thanks to the vulnerability CVE-2013-0808. The purpose is to download a PE file from a compromised website:</p>
<p>http://ac ddesigns[.]com[.]au/clients/ACPRCM/kingstone.jpg</p>
<p>http://discgolfglow[.]com:/wp-content/plugins/maintenance/images/worker.jpg</p>
<p>There is a similar .jpg pattern to the one in the previous case study. We named the downloaded RAT 'ROKRAT'.</p>
<p>This malware does not work on <em>Windows XP</em> or <em>2003</em>. If it is executed on these platforms, an infinite loop is executed.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/3515/1238/4909/Fig-21-modern-reconnaisance.png" alt="Fig-21-modern-reconnaisance.png" width="433" height="185" /><span class="centered-caption">Figure 21: If the malware is excuted on Windows XP or 2003, an infinite loop is executed.</span></p>
<p>The next step is to check if there are any analysis tools running on the system.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/5215/1238/4960/Fig-22-modern-reconnaisance.png" alt="Fig-22-modern-reconnaisance.png" width="247" height="252" /><span class="centered-caption">Figure 22: Checking if analysis tools are running.</span></p>
<p>If one of the following applications is running, the malware deduces that the system is a sandbox or an analysis machine:</p>
<ul>
<li>'mtool' for <em>VMware Tools</em></li>
<li>'llyd' for <em>OllyDBG</em></li>
<li>'ython' for Python (<em>Cuckoo Sandbox</em> for example)</li>
<li>'ilemo' for <em>File Monitor</em></li>
<li>'egmon' for <em>Registry Monitor</em></li>
<li>'peid' for <em>PEiD</em></li>
<li>'rocex' for <em>Process Explorer</em></li>
<li>'vbox' for <em>VirtualBox</em></li>
<li>'iddler' for <em>Fiddler</em></li>
<li>'ortmo' for <em>Portmon</em></li>
<li>'iresha' for <em>Wireshark</em></li>
<li>'rocmo' for <em>Process Monitor</em></li>
<li>'utoru' for <em>Autoruns</em></li>
<li>'cpvie' for <em>TCPView</em></li>
</ul>
<p>In this case, the malware performs queries on legitimate websites and starts watching a Japanese anime, as shown in Figure 23.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/9615/1238/5017/Fig-23-modern-reconnaisance.png" alt="Fig-23-modern-reconnaisance.png" width="466" height="182" /><span class="centered-caption">Figure 23: The malware performs queries on legitimate websites and starts watching a Japanese anime (https://www[.]amazon[.]com/Men-War-PC/dp/B001QZGVEC/EsoftTeam/watchcom.jpg http://www[.]hulu[.]com/watch/559035/episode3.mp4).</span></p>
<p>We assume that these connections are intended to generate fake IOCs on sandbox systems.</p>
<p>If the malware is running on an intended system, it is able to initiate communications through three different communication channels:</p>
<h4><a class="chapter" name="h4-1-twitter-accounts"></a>#1 Twitter accounts</h4>
<p>The malware is able to communicate with the attackers using <em>Twitter</em> via seven different hard-coded <em>Twitter</em> API tokens, as shown in <a href="#fig24">Figure 24</a>.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/6315/1238/5110/Fig-24-modern-reconnaisance.png" alt="Fig-24-modern-reconnaisance.png" width="270" height="252" /><span class="centered-caption"><a class=" anchor" name="fig24"></a>Figure 24: The malware communicates via seven hard-coded Twitter API tokens.</span></p>
<h4><a class="chapter" name="h4-2-yandex-accounts"></a>#2 Yandex accounts</h4>
<p>ROKRAT is able to communicate with the attackers via Yandex. It is able to upload or download files on the <em>Yandex</em> cloud service. The malware contains four hard-coded tokens, as shown in <a href="#fig25">Figure 25</a>.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/4815/1238/5188/Fig-25-modern-reconnaisance.png" alt="Fig-25-modern-reconnaisance.png" width="361" height="220" /><span class="centered-caption"><a class=" anchor" name="fig25"></a>Figure 25: The malware has four hard-coded Yandex API tokens.</span></p>
<h4><a class="chapter" name="h4-3-mediafire-accounts"></a>#3 MediaFire accounts</h4>
<p>ROKRAT is able to communicate with <em>MediaFire</em> too. A single API token is hard coded in the analysed sample, as shown in <a href="#fig26">Figure 26</a>.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/9915/1238/5270/Fig-26-modern-reonnaisance.png" alt="Fig-26-modern-reonnaisance.png" width="389" height="206" /><span class="centered-caption"><a class=" anchor" name="fig26"></a>Figure 26: The malware has a single MediaFire API token.</span></p>
<p>Each of the three platforms is legitimate and may be used by organizations in standard, day-to-day work. Additionally, these platform use HTTPS encryption. From an incident response point of view, this could frustrate efficient analysis and remediation of an incursion.</p>
<p> </p>
<h2><a class="chapter" name="h2-mitigation"></a>Mitigation</h2>
<p><em>Windows</em> platforms already include effective mitigation techniques for these vectors. To thwart threat actors that prefer leveraging macros, we recommend disabling macro execution in <em>Microsoft Office</em>. Additionally, PowerShell is becoming more and more popular with APT threat actors, hence we recommend restricting PowerShell execution with Execution Policy GPO. Malicious use of JavaScript and WScript is common too – these can easily be disabled by setting the following registry value:</p>
<p style="padding-left: 30px;">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows Script Host\Settings\Enabled =&gt; REG_DWORD = 0</p>
<p>It goes without saying that we also recommend keeping your software, OS and security products up to date and correctly configured.</p>
<p> </p>
<h2><a class="chapter" name="h2-conclusion"></a>Conclusion</h2>
<p>The costs of developing a zero-day or complex malware framework is significant. That's why it makes perfect sense for malware actors to protect their investments and secure them from security researchers. Once a complex malware variant is discovered by the security industry, it is of little or no use to the threat actor.</p>
<p>There is a clear trend towards adding information-gathering mechanisms within the infection vector to avoid leaking valuable code to security analysts. It is likely that many targets of these attacks have already been compromised in the past by the same actors. Hence, the adversary knows the target infrastructure, the network IP ranges, the naming convention of the hostname or the username, the domain name, etc. of the targets they are seeking to infect. The information obtained by these pieces of malware allows the attacker to identify efficiently if the infected system shares the profile of the intended victim. With the benefit of this information, the attackers can perform additional tests before releasing their advanced and valuable malware. This new approach makes the jobs of security analysts and researchers more complex, yet also that little bit more interesting.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] <a href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/Capabilities.htm" target="_blank">http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/system/Capabilities.html</a>.</p> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2017/VB2017-Rascagneres-Mercer.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=VB2017 paper: Modern reconnaissance phase by APT – protection layer&url=https://www.virusbulletin.com/virusbulletin/2017/11/vb2017-paper-modern-reconnaissance-phase-apt-protection-layer"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2017/11/vb2017-paper-modern-reconnaissance-phase-apt-protection-layer'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2017/11/vb2017-paper-modern-reconnaissance-phase-apt-protection-layer&title=VB2017 paper: Modern reconnaissance phase by APT – protection layer"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2017/11/vb2017-paper-modern-reconnaissance-phase-apt-protection-layer&t=VB2017 paper: Modern reconnaissance phase by APT – protection layer"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2017/11/vb2017-paper-modern-reconnaissance-phase-apt-protection-layer"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>