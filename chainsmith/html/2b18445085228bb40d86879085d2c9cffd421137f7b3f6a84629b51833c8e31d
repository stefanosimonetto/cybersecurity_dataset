<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: VB2018 paper: Lazarus Group: a mahjong game played with different sets of tiles</title>
<meta name="description" content="The number of incidents attributed to the Lazarus Group, a.k.a. Hidden Cobra, has grown rapidly since its estimated establishment in 2009. In this paper, ESET researchers Peter Kalnai and Michal Poslusny look at various cells within the group, that may share code but are assumed to otherwise operate independently." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 6224;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-vb2018-paper-lazarus-group-mahjong-game-played-different-sets-tiles"></a>VB2018 paper: Lazarus Group: a mahjong game played with different sets of tiles</h1>
<h3><a class="chapter" name="h3-peter-kalnai-amp-michal-poslusny"></a>Peter Kálnai &amp; Michal Poslušný</h3>
<p>ESET, Czech Republic</p>
<p><em>Copyright © 2018 Virus Bulletin</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-13382" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-13382" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /> <a class="toc-level2" href="#h2-introduction">Introduction</a><br /> <a class="toc-level2" href="#h2-reported-cases">Reported cases</a><br /> <a class="toc-level3" href="#h3-operation-troy-and-darkseoul">Operation Troy and DarkSeoul</a><br /> <a class="toc-level3" href="#h3-operation-blockbuster-saga-sequel-and-going-mobile">Operation Blockbuster – the saga, the sequel and going mobile</a><br /> <a class="toc-level3" href="#h3-swift-attack-bangladesh">SWIFT attack in Bangladesh</a><br /> <a class="toc-level3" href="#h3-polish-and-mexican-banks">Polish and Mexican banks</a><br /> <a class="toc-level3" href="#h3-wannacryptor-outbreak">WannaCryptor outbreak</a><br /> <a class="toc-level3" href="#h3-bitcoin-oriented-attacks">Bitcoin-oriented attacks</a><br /> <a class="toc-level3" href="#h3-turkish-bankshot">The Turkish Bankshot</a><br /> <a class="toc-level2" href="#h2-toolset-characteristics">Toolset characteristics</a><br /> <a class="toc-level3" href="#h3-dynamic-resolution-windows-apis">Dynamic resolution of Windows APIs</a><br /> <a class="toc-level3" href="#h3-tcp-backdoors">TCP backdoors</a><br /> <a class="toc-level3" href="#h3-fake-tls-protocol">Fake TLS protocol</a><br /> <a class="toc-level3" href="#h3-self-deleting-batch-files">Self-deleting batch files</a><br /> <a class="toc-level3" href="#h3-pe-rich-header-metadata">PE Rich Header metadata</a><br /> <a class="toc-level2" href="#h2-caught-samples">Caught samples</a><br /> <a class="toc-level3" href="#h3-wannacryptor-2016">WannaCryptor from 2016</a><br /> <a class="toc-level3" href="#h3-multi-platform-java-downloaders">Multi-platform Java downloaders</a><br /> <a class="toc-level3" href="#h3-custom-malware-packer">Custom malware packer</a><br /> <a class="toc-level3" href="#h3-south-korean-tv-series">South Korean TV series</a><br /> <a class="toc-level3" href="#h3-online-casino-killdisk-ed">Online casino KillDisk-ed</a><br /> <a class="toc-level3" href="#h3-strange-coinminer">Strange CoinMiner</a><br /> <a class="toc-level2" href="#h2-conclusion">Conclusion</a><br /> <a class="toc-level2" href="#h2-references">References</a><br /> <a class="toc-level2" href="#h2-footnotes">Footnotes</a><br /> <a class="toc-level2" href="#h2-appendix">Appendix A</a><br /> <a class="toc-level2" href="#h2-appendix-b">Appendix B</a><br /> <a class="toc-level2" href="#h2-appendix-c">Appendix C</a><br /> <a class="toc-level2" href="#h2-appendix-d">Appendix D</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p>The number of incidents attributed to the Lazarus Group, a.k.a. Hidden Cobra, has grown rapidly since its estimated establishment in 2009. This notorious group intensified its efforts in 2017 (e.g. the attacks on Polish and Mexican banks, the WannaCryptor outbreak, the spear-phishing campaign against US contractors), and kept up the pace at the turn of the year (the <em>Android</em>-ported payloads, the bitcoin-oriented attacks, the Turkish campaign, and more). Attribution of these newer cases was determined by observing similarities with previously resolved cases: specific chunks of code, unique data, and network infrastructure. In this paper we summarize the crucial links that played a role in these major cases.</p>
<p>The source code of the group’s toolset appears to be modified with every attack. There are several static features that vary between the instances: dynamic <em>Windows</em> API resolution and the obfuscation of procedure and library names, the form of self-deleting batch files, the list of domains leveraged for fake TLS communication, the format strings included in TCP backdoors, the use of commercial packers, etc. The variety is so huge that it suggests that the Lazarus group may be split into multiple, independent, code-sharing cells. Our research investigates this idea further by exploring the undocumented PE Rich Header metadata, which once again indicates that there are various development environments producing the malicious binaries.</p>
<p>There are also several binaries from the Lazarus toolset that have not been publicly reported. Our study of these samples adds some interesting findings to the Lazarus puzzle: the very first iteration of WannaCryptor from 2016, in-the-wild experimentation with the malicious Java downloaders targeting multiple platforms, the use of a custom malware packer, and the presence of strange artifacts like Chinese language or South Korean cultural references. This paper will present previously unpublished details about the cyber-sabotage attack against an online casino in Central America from late 2017, and we will reveal the modus operandi of the Lazarus cell that was behind that attack.</p>
<p> </p>
<h2><a class="chapter" name="h2-introduction"></a>Introduction</h2>
<p>The activity of Lazarus toolset components can be traced back as far as 2009. Several typical Lazarus backdoors were uploaded to <em>VirusTotal</em> that year, e.g. <span class="monospace">netprov.dll</span> and <span class="monospace">dvcmgmt.exe</span> [<a href="#ref1">1</a>]. However, the first published identification of the so-called Lazarus Group and its toolkit was not until many years later in <em>Novetta</em>’s extensive papers [<a href="#ref2">2</a>] in February 2016. The first mention of Lazarus at a<em> Virus Bulletin</em> conference was also in 2016, when Bartholomew and Guerrero-Saade of <em>Kaspersky Lab</em> described the pseudo-hacktivism tendencies of two famous Lazarus attacks [<a href="#ref3">3</a>]. Since 2017, especially after the WannaCryptor outbreak, the number of Lazarus-related reports has proliferated. In this paper, we summarize the crucial fingerprints that led malware researchers to attribute the famous cases to the group, and discuss the main characteristics that have helped us to ascribe further samples to the group. Finally, we show six suspected Lazarus-related cases that we believe are not widely known.</p>
<p><em>ESET</em> detects known Lazarus malware mostly as Win32/NukeSped, Win64/NukeSped, Android/NukeSped or PowerShell/NukeSped. USCERT and the FBI call the group Hidden Cobra [<a href="#ref4">4</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-reported-cases"></a>Reported cases</h2>
<h3><a class="chapter" name="h3-operation-troy-and-darkseoul"></a>Operation Troy and DarkSeoul</h3>
<p>Lazarus Group first came into the spotlight in 2013, when reports about two of their campaigns in South Korea were published for the first time. The long-term campaign called Operation Troy was a cyber espionage operation against South Korean armed forces and government targets, and ran between the years 2009 and 2012. The second of these campaigns, called DarkSeoul, occurred in 2013 and mainly targeted the South Korean financial sector. Binaries involved in these operations often preserved symbol paths<a href="#footnote1"><sup>1</sup></a> – details can be found in [<a href="#ref5">5</a>, <a href="#ref6">6</a>]. <em>ESET</em> detects most of the malware known to have been used in these campaigns or similar as Win32/Spy.Keydoor or Win64/Spy.Keydoor.</p>
<p> </p>
<h3><a class="chapter" name="h3-operation-blockbuster-saga-sequel-and-going-mobile"></a>Operation Blockbuster – the saga, the sequel and going mobile</h3>
<p><em>Sony Pictures Entertainment</em> went through a very tough period in 2014, when the company was the victim of one of the most destructive cyber attacks against a commercial entity to date. The attack caused major damage to the company, and many of its internal files and documents were stolen, leaked or deleted. The binaries involved in the attack, as well as legions of statically similar files were later extensively described by <em>Novetta</em> [<a href="#ref2">2</a>]<a href="#footnote2"><sup>2</sup></a>, which named the attack ‘Operation Blockbuster’. Regarding the many common overlapping characteristics of binaries, this epic report was preceded by <em>Symantec</em>’s report [<a href="#ref7">7</a>] by several months and, a year later, was followed by <em>Palo Alto Networks</em>’ series of blog posts:<em> The Blockbuster Sequel</em> [<a href="#ref8">8</a>], <em>The Blockbuster Saga Continues</em> [<a href="#ref9">9</a>] and <em>Operation Blockbuster Goes Mobile</em> [<a href="#ref10">10</a>]. The new attacks were tied to Lazarus by the re-use of self-deleting batch files, format strings in the TCP backdoors, dynamic API loading routines, obfuscation of function names, and the use of fake TLS communications.</p>
<p> </p>
<h3><a class="chapter" name="h3-swift-attack-bangladesh"></a>SWIFT attack in Bangladesh</h3>
<p>A story that is perhaps more fitting to a Hollywood movie unfolded in February 2016, when the SWIFT payment system was abused to steal more than $80m from Bangladesh’s central bank [<a href="#ref11">11</a>]. Claims of similarity between this and Operation Blockbuster were based on many relatively weak details, with the characteristics of self-deleting batch files and shared code chunks being the most relevant [<a href="#ref12">12</a>].</p>
<p> </p>
<h3><a class="chapter" name="h3-polish-and-mexican-banks"></a>Polish and Mexican banks</h3>
<p>Hot news about successful attacks against Polish banks appeared in February 2017 on the Polish security portal<em> ZaufanaTrzeciaStrona.pl</em> [<a href="#ref13">13</a>]. The impact of the attacks was described dramatically as ‘we are dealing with the most serious disclosed attack on critical infrastructure and the banking sector in the history of our country’. Blog posts from <em>Symantec</em> [<a href="#ref14">14</a>] and <em>BAE Systems</em> [<a href="#ref15">15</a>] immediately supported the initial report. The link to the Lazarus Group was made through a part of the self-deleting batch files, through the encrypted strings involved in the dynamic API loading routines (Table 1), which were all shared with earlier Lazarus spreading tools, and through the fact that a victim reported the presence of an already Lazarus-attributed file. <em>Kaspersky Lab</em> covered two incidents in [<a href="#ref16">16</a>]: this one and one follow-up of the previously mentioned SWIFT attack.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td class="monospace">_2FAcHI224$A_q8gS0dK</td>
<td>NetShareEnum</td>
</tr>
<tr>
<td class="monospace">!VWBeBxYx1nzrCkBLGQO</td>
<td>NetShareDel</td>
</tr>
<tr>
<td class="monospace">!uRa9t1tCDeS197CPt7I</td>
<td>NetShareAdd</td>
</tr>
<tr>
<td class="monospace">!emCFgv7Xc8ItaVGN0bMf</td>
<td>netapi32.dll</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 1: Strings decrypted by the key ‘<span class="monospace">#<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="690008041a061b1b104829585b5a5d5c5f5e">[email&#160;protected]</a></span>’.</p>
<p>The threat was distributed via a watering hole attack, wherein a trusted but compromised website redirected to a landing page booby-trapped with a (non-zero-day) exploit. In the case of the Polish attacks, the starting point was the official website of Komisja Nadzoru Finansowego (the Polish Financial Supervision Authority), while in the Mexican case it was the website of the Mexican equivalent, Comisión Nacional Bancaria y de Valores (National Banking and Securities Commission). We presented our findings relating to the technical details of the until-then minimally documented malware on <em>WeLiveSecurity</em> [<a href="#ref17">17</a>].</p>
<p>Another interesting discovery in this case was a backdoor with an unusual feature in how it parsed commands from operators. The operators were using commands in Russian, presented in a translit – a method of encoding Cyrillic letters into Latin ones. This language choice is considered a false flag for various reasons. One is that malware authors usually implement commands via numbers or English shortcuts. For example, instead of having a one- or two-digit, or natural, seven-letter English word command, ‘install’ was implemented as the impractical 12-letter command ‘ustanavlyvat’, which transliterates ‘устанавлыват’ (unsurprisingly, Russian for ‘install’). Moreover, <em>Kaspersky Lab</em>’s researchers said ‘the Russian words in the backdoor looked like a very cheap imitation’ [<a href="#ref16">16</a>, p.17].</p>
<p> </p>
<h3><a class="chapter" name="h3-wannacryptor-outbreak"></a>WannaCryptor outbreak</h3>
<p>On 12 May 2017 much of the world was shaken when the Lazarus Group launched its large-scale ransomware cyber attack, WannaCryptor.D (a.k.a. WannaCry, WCrypt). The malware was spread using an exploit called EternalBlue that had been made public a month prior to the attack. While <em>Microsoft</em> had released a patch for the exploit nearly two months before the attack, many systems remained unpatched, and that, essentially, was the reason the outbreak was so huge. The damages caused by the attack were enormous and had real-life consequences all around the world, disrupting many crucial systems and services including many hospitals in the United Kingdom. The incident has been covered countless times, e.g. [<a href="#ref18">18</a>, <a href="#ref19">19</a>], and a screenshot showing the ransom message became widely recognizable.</p>
<p>The ransomware’s GUI, <span class="monospace">u.wnry</span>, was contained in a password-protected dropper called<span class="monospace"> taskshe.exe</span>. The window caption contained ‘Wana Decrypt0r 2.0’ and the compilation time in the PE header was altered to 13 July 2010 – the timestamp of <span class="monospace">LODCTR.EXE</span>, the original <em>Microsoft</em> file from which this file’s version information was copied.</p>
<p>WannaCryptor had a longer evolution than originally thought. Just a few weeks before the outbreak, an almost identical ransomware executable was spread via SMB brute-forcing, but it had minimal impact and therefore stayed under the radar. The in-the-wild name of a dropper encapsulating that earlier variant was usually <span class="monospace">taskhcst.exe</span> and it contained the embedded payload <span class="monospace">u.wry</span>. The payload had the same design as its infamous successor, with just some slight differences such as the window caption ‘Wana Decrypt0r 1.0’ and the original PE timestamp of 9 March 2017.</p>
<p>Even earlier that year, on 10 February, a dropper called <span class="monospace">taskschs.exe</span> was uploaded to <em>VirusTotal</em>, with a compilation time of just a day previously. It contained a ransom payload named <span class="monospace">taskmsgr.exe</span>, which shared many static similarities with the two previously described payloads, in particular the character strings and the structure of resources. However, the design of this ‘beta’ version was a bit different [<a href="#ref20">20</a>].</p>
<p>The earliest attribution of WannaCryptor to Lazarus was a cryptic Tweet by Neel Mehta [<a href="#ref21">21</a>]. It highlighted similarities in two files: the beta version of WannaCryptor and an older Lazarus backdoor from 2015, the two sharing unique hexadecimal strings in their code sections.</p>
<p> </p>
<h3><a class="chapter" name="h3-bitcoin-oriented-attacks"></a>Bitcoin-oriented attacks</h3>
<p>In late 2017, the Lazarus Group launched various cryptocurrency attacks that stole bitcoin from many South Korean users and also eventually hacked and bankrupted a South Korean cryptocurrency exchange [<a href="#ref22">22</a>]. The overall picture of the Lazarus modus operandi remained the same: decoy documents in Korean and the payload being executed in a cascade with multiple stages, the final one being a backdoor supporting several commands. However, there was a shift in the attack style: where portable executables had previously been used to download or execute the attacker’s commands, now PowerShell scripts served that purpose. Note that the attribution of these attacks was made through unique links (HTTP responses from the C&amp;C, such as <span class="monospace">killkill</span> or <span class="monospace">success</span>) with the Polish and Mexican banks case. Interestingly, some of the stages were based on code available from open‑source repositories [<a href="#ref23">23</a>].</p>
<p>In early 2018, another bitcoin-stealing campaign called HaoBao was disclosed [<a href="#ref24">24</a>]. The attribution in this case was based on malicious documents which had the same metadata and filenames of dropped implants as those in <em>Palo Alto Networks</em>’ reports [<a href="#ref8">8</a>, <a href="#ref9">9</a>]. However, there were no obvious static links present in the implants and they were compiled with <em>Visual Studio 2015</em>. From our point of view, that places this campaign off-centre from the usual modus operandi.</p>
<p> </p>
<h3><a class="chapter" name="h3-turkish-bankshot"></a>The Turkish Bankshot</h3>
<p>In March 2018, <em>McAfee</em> reported the reappearance of the Bankshot implant, a spear-phishing campaign against Turkish financial institutions [<a href="#ref25">25</a>]. The malware was an HTTP backdoor supporting 27 commands. The attribution of this toolkit was immediate, based on its overall functionality. More details about related attacks can be found in [<a href="#ref26">26</a>, <a href="#ref27">27</a>, <a href="#ref28">28</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-toolset-characteristics"></a>Toolset characteristics</h2>
<p>We have collected a list of the main characteristics that can be used to identify a sample from the Lazarus toolset. Besides the characteristics described in the following subsections, the samples were double-checked for additional signs that could link them to the Lazarus toolset, e.g. the connection infrastructure or the metadata of the documents that dropped them. <a href="#figure1">Figure 1</a> shows a typical initial stage of a multi-staged Lazarus malware attack (the property of being multi-staged is the invisible (1)): a console application accepting several parameters (2) that has its <em>Windows</em> APIs resolved at the start (3) and drops the additional stages from the resources (4) using an RC4-like stream cipher (Spritz).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/c048b4934af31d533c91712743594c32_f3133.png" alt="01_scheme.png" width="843" height="481" /><span class="centered-caption"><a class=" anchor" name="figure1"></a>Figure 1: Decompiled pseudo-code of the dropper from the Polish bank attacks.</span></p>
<p> </p>
<h3><a class="chapter" name="h3-dynamic-resolution-windows-apis"></a>Dynamic resolution of Windows APIs</h3>
<p>A disassembly of Lazarus’ dynamic resolution of <em>Windows</em> APIs is seen in <a href="#figure1">Figure 1</a>. The technique is very typical and has already been described [<a href="#ref2">2</a>, p.59]. Appendix A shows various alternatives of the eight particular <em>Windows</em> APIs. The table is not complete, e.g. the clusters with APIs resolved on the stack, character-by-character or by double-words, are omitted. In those cases, the variation of the decryption keys led to many different types that would make the table unreadable.</p>
<p> </p>
<h3><a class="chapter" name="h3-tcp-backdoors"></a>TCP backdoors</h3>
<p>A relatively simple TCP backdoor supporting tens of commands is another of the chord-striking traits of Lazarus malware. The commands are usually indexed by consecutive integers. One of them is an execution in the command line (see <a href="#figure2">Figure 2</a>), where the action is basically the execution of the console command <span class="monospace">cmd.exe /c %Source% &gt; %LogFile% 2&gt;&amp;1</span>, where <span class="monospace">%Source%</span> is a malicious executable and <span class="monospace">%LogFile%</span> is its output. We have found a number of methods the Lazarus Group uses to format the string; these are shown in Appendix B.</p>
<p>Occasionally, the formatting of the console command <span class="monospace">cmd.exe /c netsh firewall add portopening TCP %PortNumber% "%PortName%"</span> varied as well.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/91470bf3fc373d5c32f3e0368c0d1ef8_f3134.png" alt="02_TCP_backdoor_commands.png" width="390" height="526" /><span class="centered-caption"><a class=" anchor" name="figure2"></a>Figure 2: The commands of a backdoor indexed by integers.</span></p>
<p> </p>
<h3><a class="chapter" name="h3-fake-tls-protocol"></a>Fake TLS protocol</h3>
<p>TLS protocol spoofing has been observed several times as a way to increase the stealthiness of malicious network communication. This is achieved by sending the bot’s client‑server traffic as a part of a fake TLS packet that mimics the TLS protocol and seemingly initiates a legitimate connection (see Figure 3). There were multiple distinct sets maintaining the low profile, as shown in Appendix C. The presence of <span class="monospace">naver.com</span> in the sets indicates that traffic from the #3-ranked<a href="#footnote3"><sup>3</sup></a> site in South Korea is expected to be found on compromised systems. Next, can we infer that the attackers have not excluded victims from China or Russia, as <span class="monospace">baidu.com</span> is ranked #1 in China and <span class="monospace">vk.com</span> is ranked #1 in Russia?</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/6215/4148/9603/03_TLS_Packet.png" alt="03_TLS_Packet.png" width="780" height="505" /><span class="centered-caption">Figure 3: Creating the buffer for the fake TLS on the stack.</span></p>
<p> </p>
<h3><a class="chapter" name="h3-self-deleting-batch-files"></a>Self-deleting batch files</h3>
<p>Self-deleting batch files are deployed to sweep away evidence of the presence of the initial malware stages after a successful infiltration. Many components of the Lazarus toolkit have such a capability, and self-deleting batch files are very commonly used to provide this functionality. As for the previous characteristics, there is a huge variability in the precise form of the batch files; see Appendix D.</p>
<p> </p>
<h3><a class="chapter" name="h3-pe-rich-header-metadata"></a>PE Rich Header metadata</h3>
<p>A PE Rich Header is a part of a <em>Windows</em> executable generated by the <em>Microsoft</em> linker when compiling a PE using <em>Visual Studio</em>. It contains information about objects used during the compilation. Despite the fact that information stored in the PE Rich header is not officially documented, there are several solid research articles that attempt to describe what is stored inside the header, e.g. [<a href="#ref29">29</a>, <a href="#ref30">30</a>]. We analysed the PE Rich header data of samples from our Lazarus sample sets and found some interesting information.</p>
<p>First, we had to clean the data sets – in order to gain an accurate picture of the timeline, only the samples that had an untampered PE timestamp were considered.<a href="#footnote4"><sup>4</sup></a> We ended up with ~600 unique, strongly linked 32-bit samples and tried to discover which build environment(s) their authors had used. Around 80% of the files were built in <em>Visual Studio 98</em> – from the oldest backdoors up to samples compiled in September 2017, which was actually the very last involvement of that ‘ancient’ IDE we registered. About 15% of samples in this collection were compiled in <em>Visual Studio 2010</em>. The very first of these from our dataset were compiled in March 2015 and were included in <em>Symantec</em>’s report [<a href="#ref7">7</a>]. We have seen this IDE being used even for samples from 2018, including the tools involved in an operation against a Central American casino, which we describe later in this paper. The remaining 5% was divided among the most recent editions of <em>Visual Studio</em>, i.e. 2012, 2013, 2015. The binaries reported by <em>Proofpoint</em> [<a href="#ref22">22</a>] had PE timestamps from July and December 2017 and were built with a mixture of <em>VS 2010</em> and <em>VS 2015</em> products, with the latter one being used for the first time in a Lazarus case. Finally, the Turkish and HaoBao campaigns reported by <em>McAfee</em> [<a href="#ref24">24</a>, <a href="#ref25">25</a>] involved executables with compilation timestamps in 2018 and were produced with the <em>VS 2015</em> environment. No in-the-wild signs of Lazarus using <em>VS 2017</em> have been observed yet. It is very important to note that the use of observed build environments overlapped, with many <em>Visual Studio</em> versions used, which surprised us, as we expected the environments to be upgraded and change over time in a single continuous timeline.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/43527fc006397fb79143ad68731567fd_f3136.png" alt="04_rich_header_stats_x86.png" width="843" height="436" /><span class="centered-caption">Figure 4: Timeline of the Visual Studios by the Rich header, 32-bit.</span></p>
<p>For the 64-bit counterpart, the situation was far more homogeneous. The dataset contained ~140 unique samples and a convincing 95% of the samples from the set were generated in <em>VS 2010</em><a href="#footnote5"><sup>5</sup></a>, which is in agreement with the fraction of two most prevalent IDEs in the 32-bit dataset. The remaining 5% of anomalies corresponded to the 32-bit case as well. The PEs by <em>VS 2012</em> seemed like predecessors of tools from the Turkish campaign and the executables built with <em>VS 2015</em> were 64-bit variants of the binaries in the HaoBao attacks.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/feb9b99ee188458e67c801b7b1f18fc2_f3137.png" alt="05_rich_header_stats_x64.png" width="843" height="373" /><span class="centered-caption">Figure 5: Timeline of the Visual Studios by the Rich header, 64-bit.</span></p>
<p>The biggest takeaway from exploring the PE Rich Header data is the fact that there are samples built in multiple different IDEs simultaneously. We conclude that the group is not a single entity and that there are at least two main development units, labs or cells. Moreover, the anomalies might suggest that the closed source is from time to time available for an unknown entity – could it have been shared with a unit tasked with jobs not dominantly responsible for <em>Windows</em> development? Was it outsourced externally for code review/testing? Or had the code just leaked to an unauthorized person?</p>
<p> </p>
<h2><a class="chapter" name="h2-caught-samples"></a>Caught samples</h2>
<p>This part is the main contribution of this paper. We tried to associate the samples described below with the Lazarus toolset in a similar fashion to that in which it was done in the famous cases described earlier. For the most part, our confidence in the link is strong.</p>
<p> </p>
<h3><a class="chapter" name="h3-wannacryptor-2016"></a>WannaCryptor from 2016</h3>
<p>This brings us to the project that seemed to be at the very beginning of the WannaCryptor’s development, an early alpha. On 2 September 2016, a file called <span class="monospace">hpmessage.exe</span>, compiled just a few days earlier, was uploaded to <em>VirusTotal</em>. It had almost the same design as the ‘beta’ version, in which the ‘Start Decrypt’ button replaced the alpha’s triple ‘Price List’, ‘Download Key’ and ‘Run Decryptor’. <em>ESET LiveGrid®</em> spotted this sample under the <span class="monospace">%STARTUP%</span> location, which suggests it might have been tested in the wild.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/277c027e2954d8ffe9572ad704a04f1c_f3139.png" alt="06_win32_filecoder_wannacryptor_alpha.png" width="680" height="514" /><span class="centered-caption">Figure 6: The ransom screen of the alpha WannaCryptor, 2016.</span></p>
<p> </p>
<h3><a class="chapter" name="h3-multi-platform-java-downloaders"></a>Multi-platform Java downloaders</h3>
<p>In February 2017, we discovered suspicious activity on <span class="monospace">hxxp://vip95.ddns.net:7310</span>. Two Java downloaders, called <span class="monospace">myBT.jar</span> and <span class="monospace">mytd.jar</span>, were hosted there and attempted to deliver additional files to the system they ran on. The payload seemed to be prepared for multiple platforms, namely <em>Windows</em> and <em>Linux</em> (see Figure 7). However, the <em>Linux</em> branch was obviously in a testing phase, because there are a lot of architectures that <em>Linux</em> can run on but the downloader did not check them. Moreover, the file<span class="monospace"> jre_1_5_0_linux.bin</span> was not hosted on the expected path.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/8915/4149/0710/07_vip95_jar_downloader.png" alt="07_vip95_jar_downloader.png" width="542" height="537" /><span class="centered-caption">Figure 7: Windows or Linux branch in one of the Java downloaders.</span></p>
<p>There were several payloads for <em>Windows</em>. The executable files <span class="monospace">di86.dat</span> and <span class="monospace">di64.dat</span> were referred to as ‘installers’ in the code, while the encrypted files <span class="monospace">dp86.dat</span> and <span class="monospace">dp64.dat</span> were ‘packages’. The <span class="monospace">param.dat</span> file contains the parameter and the RC4 key for the installers to decrypt them and load as <em>Windows</em> services (<span class="monospace">-il ndylpqtvabadplaf</span>). Two additional stages were dropped by the packages: a basic keylogger and a variant of the backdoor for which the 32-bit instance was already described as RomeoDelta in [<a href="#ref2">2</a>]. This, together with weak signs like dynamic <em>Windows</em> API resolution and data decryption with RC4, helped us to conclude that all of the hosted files are significantly linked to Lazarus.</p>
<p> </p>
<h3><a class="chapter" name="h3-custom-malware-packer"></a>Custom malware packer</h3>
<p>Sometimes malware distributors decide to use a packer in order to increase the chance of avoiding detection by a security solution and to harden the binary against analysis. They tend to use commercial packers like <em>VMProtect</em>, <em>Enigma Protector</em> or <em>Themida</em>, but we recorded few instances where they also used a crypter – a custom malware packer. In this case, the crypter is a modified version of a public project commonly known as DXPack that has been released as a series of ‘Developing a PE file packer’ tutorials on its author’s personal blog [<a href="#ref32">32</a>]. DXPack is an example of a low-hanging fruit on the Internet that provides the attackers UPX-like features to encapsulate their malware, with the difference that there is no existing, public static unpacker.</p>
<p>The crypter can be identified by certain specific properties of the PE header. The most notable characteristic is the order of the sections. Files packed with DXPack always starts with a ‘.rsrc’ resource section, which contains imported functions and encrypted data; it is followed by the ‘.text’ code section, unlike in most ordinary executables, where the ‘.text’ section is almost always at the beginning of the file.</p>
<p>Another notable feature is that the NT header starts inside the DOS header, and partially overwrites it. This is achieved by preserving the <span class="monospace">lfa_new</span> offset from the DOS header that points inside itself, where the NT header starts (in the case of DXPack) at offset 0x10 (see Figure 8).</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/4615/4149/1019/08_custom_packer_hdr.png" alt="08_custom_packer_hdr.png" width="764" height="642" /><span class="centered-caption">Figure 8: The start of the NT header and the missing DOS stub.</span></p>
<p>DXPack also has a specific entry point that can easily be recognized. Compared to the commercial protectors, unpacking DXPack does not pose much of a challenge.</p>
<p>The attribution to the Lazarus toolset was made by the presence of two unique strings, ‘<span class="monospace">E:\OpenSSL32_x86\certs</span>’ and ‘<span class="monospace">E:\OpenSSL32_x86\cert.pem</span>’, found in the unpacked code in memory. These strings can be strongly linked to Lazarus because they are found in the dropped implants mentioned in <em>Palo Alto Networks</em>’ report [<a href="#ref9">9</a>].</p>
<p> </p>
<h3><a class="chapter" name="h3-south-korean-tv-series"></a>South Korean TV series</h3>
<p>We have found a server-side component from the Lazarus toolset that has been deployed on an infected endpoint. The component contains a list of South Korean TV series (<a href="#table2">Table 2</a>) inside the binary as well as a list of big corporations (<a href="#table3">Table 3</a>), which served as the attribution link because the samples from the WannaCryptor outbreak had the same list. The names of TV series in Mandarin Chinese are encoded in the form of Pinyin romanization, which means they are spelled in Latin characters without tone marks. The component is a server-side application that is most likely deployed on compromised machines that are then used as C&amp;C servers. It is large and written in object-oriented programming style, which is a big contrast compared to the group’s client-side tools that tend to be minimalistic and as straightforward as possible. This server-side element manages client connections by utilizing I/O completion ports, which are usually used in high-performance server applications as an elegant solution to manage many clients at once. It accepts a port number as an optional command-line argument which is used for listening, otherwise it checks the hard-coded port numbers like 443, 22, 1433, 3306, etc. The configuration of the application is stored in the INI file <span class="monospace">data\package_con_x86.cat</span> with names like the port number and a bot identifier, all stored in a single section called <span class="monospace">Fuwuqi</span> – the romanized Chinese word for server:</p>
<p><img src="/files/cache/aa1a060ef2c7df544dcdc16413f7e7dc_f3141.jpg" alt="chinese text.jpg" width="65" height="26" /></p>
<p>We have found a few similar server binaries that were compiled between 2016 and early 2017, but we are not sure in which campaigns were they used, or what exact purpose they served in those campaigns.<a class=" anchor" name="table2"></a></p>
<p> </p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td>meiyounihuobuxiaqu.avi</td>
<td>mamashishenme.avi</td>
<td>yunaweinizhaixinglanyue.avi</td>
<td>disanyiyuan.avi</td>
</tr>
<tr>
<td>zuijiaaiqing.avi</td>
<td>yinweishinicaixihuan.avi</td>
<td>kenengaiguoni.avi</td>
<td>shanliangdenanren.avi</td>
</tr>
<tr>
<td>dafengshui.avi</td>
<td>yiranshini.avi</td>
<td>gongwodeyemanwangfei.avi</td>
<td>bizuijiazu.avi</td>
</tr>
<tr>
<td>wulalafufu.avi</td>
<td>renshengnizhuan.avi</td>
<td>erzimen.avi</td>
<td>MayQueen.avi</td>
</tr>
<tr>
<td>dawangdemeng.avi</td>
<td>geiniyiqianwan.avi</td>
<td>anquanwubaozhang.avi</td>
<td>meinanji.avi</td>
</tr>
<tr>
<td>anquanwubaozhang.avi</td>
<td>heiyingjiazu.avi</td>
<td>niuyaoliangriqing.avi</td>
<td>molimaike.avi</td>
</tr>
<tr>
<td>yaogunshidai.avi</td>
<td>duxiamahuali.avi</td>
<td>mingyuanwangzu.avi</td>
<td>kalawuqi.avi</td>
</tr>
<tr>
<td>tiandiyinqing.avi</td>
<td>babudemama.avi</td>
<td>zaowangzhe.avi</td>
<td>dataijian.avi</td>
</tr>
<tr>
<td>feihu.avi</td>
<td>huidaosanguo.avi</td>
<td>feimaozhengchuan.avi</td>
<td>huhuaweiqing.avi</td>
</tr>
<tr>
<td>meilijiuba.avi</td>
<td>xingqiudazhan.avi</td>
<td>zuigaojilu.avi</td>
<td>jisu60miao.avi</td>
</tr>
<tr>
<td>liukezidan.avi</td>
<td>gansidui2.avi</td>
<td>banamacaifeng.avi</td>
<td>yibenwuyan.avi</td>
</tr>
<tr>
<td>shenhaiqianlong.avi</td>
<td>wokoudezongji.avi</td>
<td>nuhuojietou2.avi</td>
<td>leitingsaodu.avi</td>
</tr>
<tr>
<td>tianti.avi</td>
<td>jufengyingqiu.avi</td>
<td>nanquanwang.avi</td>
<td> </td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 2: Arrays of strings in the server: South Korean TV series.<a class=" anchor" name="table3"></a></p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td>Google</td>
<td>Yahoo</td>
<td>Adobe</td>
<td>Mozilla</td>
<td>Intel</td>
<td>NVIDIA</td>
</tr>
<tr>
<td>Tencent</td>
<td>Rising</td>
<td>360Safe</td>
<td>Sype</td>
<td>Amazon</td>
<td> </td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 3: Arrays of strings in the server: corporations.</p>
<p> </p>
<p> </p>
<h3><a class="chapter" name="h3-online-casino-killdisk-ed"></a>Online casino KillDisk-ed</h3>
<p>Lazarus gained notoriety as a relentless cyber-sabotage group following its attack against <em>Sony Pictures Entertainment</em> in 2014. That reputation remains untarnished if we fast-forward to late 2017 on the Lazarus timeline, when the group, or operators closely related to it, chose a Central American online casino as a target. After obtaining access to remote control tools used by the company’s administrators, such as Radmin 3 and LogMeIn, they deployed various malicious tools, including disk-wiping malware from the KillDisk family.</p>
<p>KillDisk is a generic detection name that <em>ESET</em> uses for malware with destructive capabilities such as damaging boot sectors or overwriting and deleting (system) files, followed by a reboot to render the machine unusable. Although all KillDisk malware has similar functionality, as a generic detection, individual samples do not necessarily have strong code similarities or relationships. For example, the cyber attacks against high-value targets in Ukraine in December 2015 [<a href="#ref33">33</a>] also employed KillDisk malware, but those samples were from different KillDisk sub-families, and therefore are almost certainly unrelated to the Central American casino attack.</p>
<p>We reported on this case in [<a href="#ref34">34</a>], with details of the attackers’ tools – namely the KillDisk variants, the TCP backdoor, the session hijacker, Browser Password Dump and Mimikatz – and attribution to the Lazarus Group.</p>
<p>With a high level of confidence, we made the attribution based on two crucial factors. First, the TCP backdoor used in this attack strongly reminds us of other known Lazarus backdoors in terms of static properties – this kind of attribution has been made in many major cases related to Lazarus. Second, the session hijacker was a <em>Themida</em>-protected version of one used in the attacks against Polish and Mexican banks [16, p.<a href="#ref33">33</a>]. The scenario that some unrelated hacking group wanted to impersonate Lazarus can’t be ruled out completely, but we think it is very unlikely in this case. The attackers would have to reverse engineer and re-implement too many closed-source tools and mimic the modus operandi very persuasively. Moreover, the session hijacker was strongly protected, which makes no sense if they wanted to use it as a false flag. The attackers chose a rather cynical C&amp;C domain for the victim – <span class="monospace">lovebet.publicvm.com</span>. This example supports the conjecture that every attack is customized for its targets.</p>
<p> </p>
<h3><a class="chapter" name="h3-strange-coinminer"></a>Strange CoinMiner</h3>
<p>The following case is an example where our confidence of the link with Lazarus is just low-to-medium. The initial compromises were restricted exclusively to <em>Zoho</em> systems running the <em>ManageEngine ServiceDesk</em> software, very likely through vulnerabilities that were disclosed in February 2018 [<a href="#ref35">35</a>]. The revenue for the attackers was very low, mining only ~2.31 XMR in several weeks. The next campaign, however – in May 2018 and targeting medium-sized corporate networks – was at least 10 times as successful in just a few days.</p>
<p>The components responsible for coin mining are stored in an encrypted form on the file system: <span class="monospace">edb.sdb</span> and <span class="monospace">secpol.sdb</span> in <span class="monospace">%WINDOWS%\security\</span>. The filenames rang bells with us, because the installers from the <span class="monospace">vip95.ddns.com</span> storage, that we have attributed to Lazarus strongly, also used this folder to install their malicious <em>Windows</em> services.</p>
<p>In Table 4, the similarities of 64-bit variants germane to the source code are sketched. Obviously all projects were compiled with the same edition of <em>Visual Studio 2010</em>.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td rowspan="2" valign="middle"><strong>Feature</strong></td>
<td style="text-align: center;" colspan="2"><strong>Value</strong></td>
</tr>
<tr>
<td><strong>di64.dat</strong></td>
<td><strong>WinSock2-64</strong></td>
</tr>
<tr>
<td>prodidUtc1600_C = Visual Studio 2010 (10.00) build 30319</td>
<td>Count = 106</td>
<td>109</td>
</tr>
<tr>
<td>prodidUtc1600_CPP = Visual Studio 2010 (10.00) build 30319</td>
<td>29</td>
<td>34</td>
</tr>
<tr>
<td>prodidMasm1000 = Visual Studio 2010 (10.00) build 30319</td>
<td>10</td>
<td>9</td>
</tr>
<tr>
<td>RC4</td>
<td>classic</td>
<td>custom</td>
</tr>
<tr>
<td>*.sdb filenames</td>
<td>application<br />system<br />security</td>
<td>edb<br />secpol</td>
</tr>
<tr>
<td>Service name</td>
<td>Bluetooth support</td>
<td>WinSock2Svc</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 4: Comparison between a Lazarus bot and the coin miner.</p>
<p>The service maintaining the coin-mining components used a modified version of the RC4 algorithm – one of the indices of the swapped entries was doubly incremented each iteration whilst the original RC4 increments it only once. This easily overlooked change is in the pseudo-ransom generation part of the cipher.</p>
<p> </p>
<h2><a class="chapter" name="h2-conclusion"></a>Conclusion</h2>
<p>Considering the scale of the Lazarus operations, together with often severe impacts on their victims, even on a global scale, the group is clearly well organized. We see that the group continues to be a threat all around the globe, even more than a decade since its first recorded appearance. The group tends to achieve high outcome with minimum effort, and usually reuses already invented proofs of concepts and tools, only very rarely creating anything from scratch. The group doesn’t seem to have a single goal, and while sometimes they steal in order to obtain funds, the next time they strike may be cyber espionage with destructive malware.</p>
<p>The attribution was not straightforward in most of the cases discussed in this paper, and it often depends on fine details. The diversity of the tools involved and approaches taken is so wide that it is really hard to believe that they all come from a single environment. This, together with the results of the PE Rich Header analysis, leads us to believe that there are multiple code development units. These units may, or may not, be pulling in the same, one-way direction.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] ESET GitHub. SHA256 hashes of mentioned files. <a href="https://github.com/eset/malware-ioc/tree/master/nukesped_lazarus" target="_blank">https://github.com/eset/malware-ioc/tree/master/nukesped_lazarus</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] Novetta. Operation Blockbuster. February 2016. <a href="https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf" target="_blank">https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf</a>. <a href="https://www.operationblockbuster.com/resources/" target="_blank">https://www.operationblockbuster.com/resources/</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] Bartholomew, B.; Guerrero-Saade, J.A. Wave your false flags! Deception tactics muddying attribution in targeted attacks. Virus Bulletin International Conference 2016 Denver. <a href="https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Bartholomew-GuerreroSaade.pdf" target="_blank">https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Bartholomew-GuerreroSaade.pdf</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] US-CERT. HIDDEN COBRA – North Korean Malicious. Cyber Activity <a href="https://www.us-cert.gov/HIDDEN-COBRA-North-Korean-Malicious-Cyber-Activity" target="_blank">https://www.us-cert.gov/HIDDEN-COBRA-North-Korean-Malicious-Cyber-Activity</a>.</p>
<p><a class=" anchor" name="ref5"></a>[5] Yang, K. Z:\MAKE TROY\NOT WAR: Case Study of the Wiper APT in Korea, and Beyond. Black Hat 2014 Singapore. <a href="https://www.blackhat.com/docs/asia-14/materials/Yang/Asia-14-Yang-Z-Make-Troy-Not-War-Case-Study-Of-The-Wiper-APT-In-Korea-And-Beyond.pdf" target="_blank">https://www.blackhat.com/docs/asia-14/materials/Yang/Asia-14-Yang-Z-Make-Troy-Not-War-Case-Study-Of-The-Wiper-APT-In-Korea-And-Beyond.pdf</a>.</p>
<p><a class=" anchor" name="ref6"></a>[6] Sherstobitoff, R.; Liba, I.; Walter, J. Dissecting Operation Troy: Cyberespionage in South Korea. McAfee. July 2013. <a href="https://www.mcafee.com/enterprise/en-us/assets/white-papers/wp-dissecting-operation-troy.pdf" target="_blank">https://www.mcafee.com/enterprise/en-us/assets/white-papers/wp-dissecting-operation-troy.pdf</a>.</p>
<p><a class=" anchor" name="ref7"></a>[7] Symantec. Duuzer back door Trojan targets South Korea to take over computers, October 2015. <a href="https://www.symantec.com/connect/blogs/duuzer-back-door-trojan-targets-south-korea-take-over-computers" target="_blank">https://www.symantec.com/connect/blogs/duuzer-back-door-trojan-targets-south-korea-take-over-computers</a>.</p>
<p><a class=" anchor" name="ref8"></a>[8] Kasza, A.; Yates, M. The Blockbuster Sequel. Palo Alto Networks. April 2017. <a href="https://researchcenter.paloaltonetworks.com/2017/04/unit42-the-blockbuster-sequel/" target="_blank">https://researchcenter.paloaltonetworks.com/2017/04/unit42-the-blockbuster-sequel/</a>.</p>
<p><a class=" anchor" name="ref9"></a>[9] Kasza, A. The Blockbuster Saga Continues. Palo Alto Networks. August 2017. <a href="https://researchcenter.paloaltonetworks.com/2017/08/unit42-blockbuster-saga-continues/" target="_blank">https://researchcenter.paloaltonetworks.com/2017/08/unit42-blockbuster-saga-continues/</a>.</p>
<p><a class=" anchor" name="ref10"></a>[10] Kasza, A.; Cortes, J.; Yates, M. Operation Blockbuster Goes Mobile. Palo Alto Networks. November 2017. <a href="https://researchcenter.paloaltonetworks.com/2017/11/unit42-operation-blockbuster-goes-mobile/" target="_blank">https://researchcenter.paloaltonetworks.com/2017/11/unit42-operation-blockbuster-goes-mobile/</a>.</p>
<p><a class=" anchor" name="ref11"></a>[11] Nish, A.; Thatcher, B. (BAE Systems; SWIFT) Cyber-Heist: Two Bytes to $951m, RSAC 2017 San Francisco, <a href="https://www.rsaconference.com/writable/presentations/file_upload/ht-t11-cyber-heist-two-byte-_to-951m-collaborat-_to-defend.pdf" target="_blank">https://www.rsaconference.com/writable/presentations/file_upload/ht-t11-cyber-heist-two-byte-_to-951m-collaborat-_to-defend.pdf</a>.</p>
<p><a class=" anchor" name="ref12"></a>[12] Shevchenko, S.; Nish, A. CYBER HEIST ATTRIBUTION. BAE Systems. May 2016. <a href="https://baesystemsai.blogspot.com/2016/05/cyber-heist-attribution.html" target="_blank">http://baesystemsai.blogspot.com/2016/05/cyber-heist-attribution.html</a>.</p>
<p><a class=" anchor" name="ref13"></a>[13] Haertle, A. Włamania do kilku banków skutkiem poważnego ataku na polski sektor finansowy, February 2017, <a href="https://zaufanatrzeciastrona.pl/post/wlamania-do-kilku-bankow-skutkiem-powaznego-ataku-na-polski-sektor-finansowy/" target="_blank">https://zaufanatrzeciastrona.pl/post/wlamania-do-kilku-bankow-skutkiem-powaznego-ataku-na-polski-sektor-finansowy/</a>.</p>
<p><a class=" anchor" name="ref14"></a>[14] Symantec. Attackers target dozens of global banks with new malware. February 2017. <a href="https://www.symantec.com/connect/blogs/attackers-target-dozens-global-banks-new-malware-0" target="_blank">https://www.symantec.com/connect/blogs/attackers-target-dozens-global-banks-new-malware-0</a>.</p>
<p><a class=" anchor" name="ref15"></a>[15] BAE Systems Applied Intelligence. LAZARUS &amp; WATERING-HOLE ATTACKS. February 2017. <a href="https://baesystemsai.blogspot.cz/2017/02/lazarus-watering-hole-attacks.html" target="_blank">http://baesystemsai.blogspot.cz/2017/02/lazarus-watering-hole-attacks.html</a>.</p>
<p><a class=" anchor" name="ref16"></a>[16] Kaspersky Lab. Lazarus under the Hood. April 2017. <a href="https://securelist.com/files/2017/04/Lazarus_Under_The_Hood_PDF_final.pdf.%20https://www.youtube.com/watch?v=9Vh2n6nC0t4" target="_blank">https://securelist.com/files/2017/04/Lazarus_Under_The_Hood_PDF_final.pdf. https://www.youtube.com/watch?v=9Vh2n6nC0t4</a>.</p>
<p><a class=" anchor" name="ref17"></a>[17] Kálnai, P. Demystifying targeted malware used against Polish banks. WeLiveSecurity. February 2018. <a href="https://www.welivesecurity.com/2017/02/16/demystifying-targeted-malware-used-polish-banks/" target="_blank">https://www.welivesecurity.com/2017/02/16/demystifying-targeted-malware-used-polish-banks/</a>.</p>
<p><a class=" anchor" name="ref18"></a>[18] MalwareTechBlog. How to Accidentally Stop a Global Cyber Attacks. May 2017. <a href="https://www.malwaretech.com/2017/05/how-to-accidentally-stop-a-global-cyber-attacks.html" target="_blank">https://www.malwaretech.com/2017/05/how-to-accidentally-stop-a-global-cyber-attacks.html</a>.</p>
<p><a class=" anchor" name="ref19"></a>[19] Gavrila, R. Lessons learned from the WannaCry outbreak. Virus Bulletin International Conference 2017 Madrid. <a href="https://www.virusbulletin.com/conference/vb2017/abstracts/lessons-learned-wannacry-outbreak" target="_blank">https://www.virusbulletin.com/conference/vb2017/abstracts/lessons-learned-wannacry-outbreak</a>.</p>
<p><a class=" anchor" name="ref20"></a>[20] Yang, K. WannaCry: Evolving History from Beta to 2.0. Fortinet. May 2017. <a href="https://www.fortinet.com/blog/threat-research/wannacry-evolving-history-from-beta-to-2-0.html" target="_blank">https://www.fortinet.com/blog/threat-research/wannacry-evolving-history-from-beta-to-2-0.html</a>.</p>
<p><a class=" anchor" name="ref21"></a>[21] Neel, M. #WannaCryptAttribution. May 2017. <a href="https://twitter.com/neelmehta/status/864164081116225536" target="_blank">https://twitter.2com/neelmehta/status/864164081116225536</a>.</p>
<p><a class=" anchor" name="ref22"></a>[22] Huss, D. North Korea bitten by the bitcoin bug. Proofpoint. December 2017. <a href="https://www.proofpoint.com/sites/default/files/pfpt-us-wp-north-korea-bitten-by-bitcoin-bug.pdf" target="_blank">https://www.proofpoint.com/sites/default/files/pfpt-us-wp-north-korea-bitten-by-bitcoin-bug.pdf</a>.</p>
<p><a class=" anchor" name="ref23"></a>[23] <a href="https://github.com/PowerShellMafia/PowerSploit/blob/master/CodeExecution/Invoke-ReflectivePEInjection.ps1" target="_blank">https://github.com/PowerShellMafia/PowerSploit/blob/master/CodeExecution/Invoke-ReflectivePEInjection.ps1</a>.</p>
<p><a class=" anchor" name="ref24"></a>[24] Sherstobitoff, R. Lazarus Resurfaces, Targets Global Banks and Bitcoin Users. McAfee. February 2018. <a href="https://securingtomorrow.mcafee.com/mcafee-labs/lazarus-resurfaces-targets-global-banks-bitcoin-users/" target="_blank">https://securingtomorrow.mcafee.com/mcafee-labs/lazarus-resurfaces-targets-global-banks-bitcoin-users/</a>.</p>
<p><a class=" anchor" name="ref25"></a>[25] Sherstobitoff, R. Hidden Cobra Targets Turkish Financial Sector With New Bankshot Implant. McAfee. March 2018. <a href="https://securingtomorrow.mcafee.com/mcafee-labs/hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant/" target="_blank">https://securingtomorrow.mcafee.com/mcafee-labs/hidden-cobra-targets-turkish-financial-sector-new-bankshot-implant/</a>.</p>
<p><a class=" anchor" name="ref26"></a>[26] Shen, C.E.; Jang, M.-C.; Kwak, K.-j. Nation-State Moneymule’s Hunting Season, Black Hat EU 2017. <a href="https://www.blackhat.com/docs/eu-17/materials/eu-17-Shen-Nation-State%20Moneymules-Hunting-Season-APT-Attacks-Targeting-Financial-Institutions.pdf" target="_blank">https://www.blackhat.com/docs/eu-17/materials/eu-17-Shen-Nation-State%20Moneymules-Hunting-Season-APT-Attacks-Targeting-Financial-Institutions.pdf</a>.</p>
<p><a class=" anchor" name="ref27"></a>[27] Seoungsu, P. Anatomy Of Financial Attacks By The Lazarus Group. Area 41 2018. <a href="https://www.slideshare.net/SeongsuPark8/area41-anatomy-of-attacks-aimed-at-financial-sector-by-the-lazarus-group-104315358/" target="_blank">https://www.slideshare.net/SeongsuPark8/area41-anatomy-of-attacks-aimed-at-financial-sector-by-the-lazarus-group-104315358/</a>. <a href="https://www.youtube.com/watch?v=NEjVJsKeV5k" target="_blank">https://www.youtube.com/watch?v=NEjVJsKeV5k</a>.</p>
<p><a class=" anchor" name="ref28"></a>[28] Doman Ch. Malicious Documents from Lazarus Group Targeting South Korea, June 2018. <a href="https://www.alienvault.com/blogs/labs-research/malicious-documents-from-lazarus-group-targeting-south-korea" target="_blank">https://www.alienvault.com/blogs/labs-research/malicious-documents-from-lazarus-group-targeting-south-korea</a>.</p>
<p><a class=" anchor" name="ref29"></a>[29] Webster, G.D.; Kolosnjaji, B.; von Pentz, Ch.; Kirsch, J.; Hanif, Z.D.; Zarras, A.; Eckert, C. Finding the Needle: A Study of the PE32 Rich Header and Respective Malware Triage. In: Proceedings of the International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. Springer, pp. 119--138, 2017.</p>
<p><a class=" anchor" name="ref30"></a>[30] Pistelli, D. Microsoft’s Rich Signature (undocumented) 2008. <a href="http://www.ntcore.com/files/richsign.htm" target="_blank">http://www.ntcore.com/files/richsign.htm</a>.</p>
<p><a class=" anchor" name="ref31"></a>[31] Kálnai, P.; Poslušný, M. Lazarus toolset: restoring the old painting in a new frame. AVAR 2017, Beijing. <a href="http://avar.skdlabs.com/index.php/speakers/lazarus-toolset-restoring-the-old-painting-in-a-new-frame/" target="_blank">http://avar.skdlabs.com/index.php/speakers/lazarus-toolset-restoring-the-old-painting-in-a-new-frame/</a>.</p>
<p><a class=" anchor" name="ref32"></a>[32] Developing PE file packer step-by-step. Step 11. Command line interface. Final version <a href="https://coder.pub/2014/10/pe-packer-step-by-step-step-11-command-line-interface/." target="_blank">https://coder.pub/2014/10/pe-packer-step-by-step-step-11-command-line-interface/.</a></p>
<p><a class=" anchor" name="ref33"></a>[33] Cherepanov, A.; Lipovsky, R. BlackEnergy – what we really know about the notorious cyber attacks, Virus Bulletin International Conference 2016, Denver. <a href="https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Cherepanov-Lipovsky.pdf" target="_blank">https://www.virusbulletin.com/uploads/pdf/magazine/2016/VB2016-Cherepanov-Lipovsky.pdf</a>.</p>
<p><a class=" anchor" name="ref34"></a>[34] Kálnai, P.; Cherepanov, A. Lazarus KillDisks Central American casino. WeLiveSecurity. April 2018. <a href="https://www.welivesecurity.com/2018/04/03/lazarus-killdisk-central-american-casino/" target="_blank">https://www.welivesecurity.com/2018/04/03/lazarus-killdisk-central-american-casino/</a>.</p>
<p><a class=" anchor" name="ref35"></a>[35] ManageEngine patches zero-day vulnerabilities. ManageEngine. February 2018. <a href="https://blogs.manageengine.com/corporate/manageengine/2018/02/01/manageengine-patches-zero-day-vulnerabilities.html" target="_blank">https://blogs.manageengine.com/corporate/manageengine/2018/02/01/manageengine-patches-zero-day-vulnerabilities.html</a>.</p>
<p> </p>
<p> </p>
<h2><a class="chapter" name="h2-footnotes"></a>Footnotes</h2>
<p><a class=" anchor" name="footnote1"></a>1 For example, Z:\1Mission\Team_Project\[2012.6 ~]\HTTP Troy\HttpDr0pper\Win32\Release\3PayloadDll.pdb or D:\Work\Op\Mission\TeamProject\[2012.11~12]\TDrop\Payloadll32\Release\Payloadll32.pdb. We have found only two NukeSped samples with paths:</p>
<p style="padding-left: 30px;">E:\ConstructSystem\widebot\bot_dll\Debug\bot_dll.pdb<br />D:\Source\Source_C\Work_Source\T(3.1_Unicode)\Server_\x64\Release\ServerDll.pdb</p>
<p><a class=" anchor" name="footnote2"></a>2 We used a very similar hunting method to the one described in Section 2.1 of [2] to find newly linked Lazarus executables.</p>
<p><a class=" anchor" name="footnote3"></a>3 Ranking by <em>Alexa.com</em>, June 2018.</p>
<p><a class=" anchor" name="footnote4"></a>4 In [<a href="#ref31">31</a>], we showed several cases when the PE timestamp modification could be detected.</p>
<p><a class=" anchor" name="footnote5"></a>5 <em>VS 2010</em> was one of the first versions to support compilation of 64-bit binaries by default, so there could not be any such samples compiled in VS 98.</p>
<p> </p>
<h2><a class="chapter" name="h2-appendix"></a>Appendix A</h2>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td class="monospace"><span style="color: #ff0000;">LoadLibraryW, WinExec, OpenProcess, Sleep, GetLogicalDrives, connect, ChangeServiceConfig2W, GetAdaptersInfo</span><br />(The attacks against Polish and Mexican banks)</td>
</tr>
<tr>
<td class="monospace"><span style="color: #ff0000;">-, -, -,-, -, S^connect, S^ChangeServiceConfig2A, -</span><br />(Op. Troy, but with many S^-prepended functions from wininet.dll) </td>
</tr>
<tr>
<td><span class="monospace"><span style="color: #ff0000;">Lo.adL_ibr.ar_yW, ..W_.in..Ex...ec, Op.enPr..oce_ss, Sl._._eep, ..Get.__Logi...calD__.rives, con_._nect, Cha._.ngeSer....vice_.Con.fig2W., GetA_._dap...ters___In_.fo</span></span><br /><span class="monospace">(Op. Blockbuster)</span> </td>
</tr>
<tr>
<td><span class="monospace"><span style="color: #ff0000;">Lo.adL_ibr.ar_yA, -, Ope.n_P.ro._cess, S..l.ee.p, Ge.tL.ogi.ca_lDr..ives, c_..onn..ect, Cha.nge.Ser.vi_.ceCo.nfig2A, G.etAd.apte.rsI..nfo</span></span><br /><span class="monospace">(Op. Blockbuster</span>) </td>
</tr>
<tr>
<td><span class="monospace">SB2uSeCV2VDt, teb3MAc, raAbWVBcAOO, K4AAa, yAYSBiec24EVenAO, cBbbAcY, pz2biAKAVnecApBbxeift, yAY6u2aYAVOJbxB</span> </td>
</tr>
<tr>
<td class="monospace">WyrarbiLdaoL, cexEniW, ssecorPnepO, peelS, sevirDlacigoLteG, tcennoc, W2gifnoCecivreSegnahC, ofnIsretpadAteG </td>
</tr>
<tr>
<td><span class="monospace">WdaoWtbgagyA, LtnPmpc, DepnEgdcphh, Hwppe, RpiWdrtcawOgtkph, cdnnpci, CsanrpHpgktcpCdnqtr2A, RpiAoaeipghTnqd</span> </td>
</tr>
<tr>
<td><span class="monospace">LxadLrbiaipA, WrwEoec, OyewPixcejj, Sueey, GekLxgrcauDirmej, cxwweck, ChawgeSeimrceCxwfrg2A, GekAdaykeijIwfx</span> </td>
</tr>
<tr>
<td><span class="monospace"><span style="color: #ff0000;">-, WrmEcvx,OkvmPilxvhh, Sovvk, GvgLltrxaoDirevh, xlmmvxg, CsamtvSvierxvClmurt2W, GvgAwakgvihImul</span></span><br /><span class="monospace">(Op. Blockbuster The Sequel) </span></td>
</tr>
<tr>
<td><span class="monospace">s7gOsvowgwTx, cvZR8YC, 9bYZ3w7CYii, zDYYb, 2Yqs7avCgDFwvQYi, C7ZZYCq, regZaYzYwQvCYr7Z6vamx, 2YqxOgbqYwiKZ67</span> </td>
</tr>
<tr>
<td><span class="monospace">-,-, 3VHJd7mxyuJGZrA=, wU3JfJk=, 1UTYVYakzOJCeYdXb+H60g==, 8U7Cd4yg0Q==, -, 1UTYWI2i1fVGZ7BsaPHw</span> </td>
</tr>
<tr>
<td><span class="monospace"><span style="color: #ff0000;">LoadLxbrarjA, WxnEitc, OptnProctss, Slttp, GteLovxcalDrxgts, conntce, CwanvtStrgxctConuxv2A, GteAdapetrsInuo</span></span><br /><span class="monospace">(Op. Blockbuster)</span> </td>
</tr>
<tr>
<td><span class="monospace">{9F 66 0A CB 85 C2 09 2E 29 AD 4B 6C F4}, {8E 78 A8 98 88 2B 37 97}, {CF 56 90 79 70 51 00 90 9D BE 82 91}, {0B </span><span class="monospace">14 D1 59 41 06 D9 F5}, {F9 C4 08 10 40 4D F9 04 86 1F A6 62 5A 4A 68 27 05 76 5B D0 9A DE}, {E7 D2 9D 4C 45 4E </span><span class="monospace">E2 B6 06 62 24 EA 69 CD 57 67}, {54 AE 43 F9 DD C8 4F 43 4A DA D5 70 11 13 A5 90 4F}</span> </td>
</tr>
<tr>
<td class="table table-bordered"><span class="monospace"><span style="color: #ff0000;">-, -, {0C 02 84 EA CC BA 34 1C 74 49 87 78 C6}, {06 1E 98 EA C7 9A 46}, {08 2E 9B E1 CC 8F 25 07 17}, {16 0E 9C EE CC 8D 23 20 72 5E 82 62 A5 01 38 0D 3E 37 D3 C3 DC F0 F7}, {10 0A 91 FB E3 8E 27 03 63 49 86 78 8F 0A 1D 0D, {11 0A 91 FB EE 85 21 1A 74 4D 98 4F B4 0D 0D 07 23 51}</span></span><br /><span class="monospace">(Turkish Bankshot)</span> </td>
</tr>
<tr>
<td><span class="monospace">-,-, {8F C1 D3 E0 88 51 E1 90},6C 00 23 46 F8 5F DB ED FD 03 62 96}, {9E DD C4 4D B7 AC}, {1B 56 3E 10 4D 43 </span><span class="monospace">61 56}, {48 16 0C 2B F5 FB 5B 16 84 19 8C 96 C2 07 19 A7 91 8B 2E 60 31 3B}, {50 C1 05 67 6C 69 54 C1 4E 03 8C </span><span class="monospace">3D 16 B1 CC 50}, {4D 4B 1B CA B1 B5 2C 6D C0 5F 2A 32 69 75 F3 A8 E5}</span> </td>
</tr>
<tr>
<td><span class="monospace">MmbxMszjbjcX, XsnFdwy, PlwnQjmywii, Tpwwl, HwhMmusybpEjsfwi, ymnnwyh, DtbnuwTwjfsywDmnvsu3X, HwhBxblhwjiJnvm</span> </td>
</tr>
</tbody>
</table>
<p><em>'-' indicates that the API was not resolved at all. </em></p>
<p> </p>
<h2><a class="chapter" name="h2-appendix-b"></a>Appendix B</h2>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td class="monospace"><span style="color: #ff0000;">cmd.exe /c "%s 2&gt;&gt; %s"<br />cmd.exe /c "%s &gt;&gt; %s 2&gt;&amp;1"</span><br />(Online casino in Central America)</td>
<td class="monospace"><span style="color: #ff0000;">cm%sx%s"%s %s %s" 2&gt;%s</span><br />(Operation Blockbuster)<br />(WannaCryptor outbreak)</td>
</tr>
<tr>
<td><span class="monospace" style="color: #ff0000;">c%s.e%sc "%s &gt; %s 2&gt;&amp;1"</span><br /><span class="monospace">(Operation Blockbuster - The Sequel)</span> </td>
<td><span class="monospace" style="color: #ff0000;">%sd.e%sc "%s &gt; %s 2&gt;&amp;1"</span><br /><span class="monospace">(Operation Blockbuster - The Sequel)</span> </td>
</tr>
<tr>
<td><span class="monospace" style="color: #ff0000;">%s%s%s "%s &gt; %s 2&gt;&amp;1"</span><br /><span class="monospace">(Operation Blockbuster - The Saga)</span> </td>
<td class="monospace"><span style="color: #ff0000;">%sd.e%sc "%s &gt; %s" 2&gt;&amp;1<br />%sd.e%sc n%ssh%srewa%s ad%s po%sop%sing<br />%sd.e%sc "%s &gt; %s"</span><br />(Op. Blockbuster) </td>
</tr>
<tr>
<td class="monospace"><span style="color: #ff0000;">cmd.exe /c "%s" &gt; %s 2&gt;&amp;1</span><br />(The Polish and Mexican case) </td>
<td><span class="monospace" style="color: #ff0000;">c%sd.e%sc %s &gt; "%s" 2&gt;&amp;1</span><br /><span class="monospace">(Op. Blockbuster - Goes Mobile)</span> </td>
</tr>
<tr>
<td><span class="monospace" style="color: #ff0000;">%s /c "%s" &gt;%s 2&gt;&amp;1<br /></span><span class="monospace">(Op. Blockbuster)</span> </td>
<td><span class="monospace">%sm%se%sc "%s &gt; %s %s&amp;1"</span> </td>
</tr>
<tr>
<td><span class="monospace">%sd.e%sc "%s &gt;&gt; "%s" 2&gt;&amp;1"</span> </td>
<td class="monospace">%sd.e%sc "%s &gt;&gt; "%s" 2&gt;&amp;1" </td>
</tr>
<tr>
<td><span class="monospace" style="color: #ff0000;">%smd.e%sc "%s &gt; %s 2&gt;&amp;1"</span><br /><span class="monospace">(Op. Blockbuster - The Sequel)</span> </td>
<td class="monospace"><span style="color: #ff0000;">%sd.e%sc "%s &gt;&gt; %s" 2&gt;&amp;1<br />%sd.e%sc "%s%s %s &gt; %s" 2&gt;&amp;1</span><br />(Symantec's report on Duuzer) </td>
</tr>
<tr>
<td class="monospace"><span style="color: #ff0000;">%sd.e%sc %s &gt;%s 2&gt;&amp;1</span><br />(Op. Blockbuster) </td>
<td class="monospace">%s %s &gt; "%s" 2&gt;&amp;1 </td>
</tr>
<tr>
<td><span class="monospace">%smd.e%sc "%s &gt; %s"</span> </td>
<td class="monospace">c%sd%sxe%sc %s &gt;&gt; %s 2&gt;&amp;1</td>
</tr>
<tr>
<td class="monospace"><span style="color: #ff0000;">cmd.exe /c "" &gt; 2&gt;&amp;1 </span>(on stack)<br />(Turkish Bankshot) </td>
<td class="monospace">cmd.exe /c %s &gt;&gt; %s 2&gt;&amp;1 </td>
</tr>
</tbody>
</table>
<p> </p>
<h2><a class="chapter" name="h2-appendix-c"></a>Appendix C</h2>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td class="monospace"><span style="color: #ff0000;">myservice.xbox.com, uk.yahoo.com, web.whatsapp.com, www.apple.com, www.baidu.com, www.bing.com, www.bitcoin.org, www.comodo.com, www.debian.org, www.dropbox.com, www.facebook.com, www.github.com, www.google.com, www.lenovo.com, www.microsoft.com, www.paypal.com, www.tumblr.com, www.twitter.com, www.wetransfer.com, www.wikipedia.org</span><br />(Op. Blockbuster Goes Mobile)</td>
</tr>
<tr>
<td class="monospace">github.com, imgur.com, support.mozilla.org, vk.com, wordpress.com, world.linkedin.com, world.taobao.com, www.adobe.com, www.amazon.com, www.apple.com, www.baidu.com, www.chase.com, www.coursera.org, www.delta.com, www.edx.org, www.exploit-db.com, www.facebook.com, www.google.com, www.microsoft.com, www.netflix.com, www.paycom.com, www.paypal.com, www.pinterest.com, www.reddit.com, www.sans.org, www.tumblr.com, www.twitter.com, www.united.com, www.whatsapp.com, www.wikipedia.org, www.yahoo.com, www.youtube.com </td>
</tr>
<tr>
<td class="monospace"><span style="color: #ff0000;">wwwimages2.adobe.com, www.paypalobjects.com, www.paypal.com, www.linkedin.com, www.apple.com, www.amazon.com, www.adobetag.com, windowslive.tt.omtrdc.net, verify.adobe.com, us.bc.yahoo.com, urs.microsoft.com, supportprofile.apple.com, support.oracle.com, support.msn.com, startpage.com, sstats.adobe.com, ssl.gstatic.com, ssl.google-analytics.com, srv.main.ebayrtm.com, skydrive.live.com, signin.ebay.com, securemetrics.apple.com, secureir.ebaystatic.com, secure.skypeassets.com, secure.skype.com, secure.shared.live.com, secure.logmein.com, sc.imp.live.com, sb.scorecardresearch.com, s1-s.licdn.com, s.imp.microsoft.com, pixel.quantserve.com, p.sfx.ms, mpsnare.iesnare.com, login.yahoo.com, login.skype.com, login.postini.com, login.live.com, i.betrad.com, imagesna.ssl-images-amazon.com, fls-na.amazon.com, extended-validation-ssl.verisign.com, daw.apple.com, csc.beap.bc.yahoo.com, by.essl.optimost.com, b.stats.ebay.com, apps.skypeassets.com, api.demandbase.com, ad.naver.com, accounts.google.com</span><br />(Op. Blockbuster) </td>
</tr>
<tr>
<td><span class="monospace">www.digicert.com, ssl.gstatic.com, sstats.adobe.com, aws.amazon.com, support.mozilla.org, www.certiport.com, www.google.com, update.microsoft.com, help.sap.com, www.thwate.com, support.microsoft.com, login.live.com, ssl.comodo.com, www.apple.com, verify.adobe.com, securemetrics.apple.com, support.oracle.com, www.macromedia.com, www.linkedin.com, support.msn.com, apps.skypeassets.com, developer.amazon.com, helpx.adobe.com, docs.adobe.com, support.sap.com, www.adobetag.com, login.yahoo.com, support.freshdesk.com, news.google.com, support.office.com, technet.microsoft.com, www.ibm.com, supportprofile.apple.com, ssl.google-analytics.com, login.skype.com</span> </td>
</tr>
<tr>
<td><span class="monospace">www.wordpress.com, www.wikipedia.org, www.yahoo.com, www.uc.com, www.paypal.com, www.linkedin.com, www.</span><span class="monospace">microsoft.com, www.avira.com, www.dell.com, www.bing.com, www.apple.com, www.avast.com, www.amazon.com, www.</span><span class="monospace">baidu.com</span> </td>
</tr>
<tr>
<td class="monospace"><span style="color: #ff0000;">www.yahoo.com, www.microsoft.com, www.join.me, www.facebook.com, www.bing.com, www.apple.com, www.amazon.com, twitter.com </span><br />(Op. Blockbuster The Sequel) </td>
</tr>
<tr>
<td><span class="monospace">www.yahoo.com, www.uc.com, www.paypal.com, www.oracle.com, www.microsoft.com, www.hp.com, www.dell.com, www.bing.com, www.apple.com, www.amazon.com, all.baidu.com, ad.naver.com</span> </td>
</tr>
</tbody>
</table>
<p> </p>
<h2><a class="chapter" name="h2-appendix-d"></a>Appendix D</h2>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td class="monospace"><span style="color: #ff0000;">:start<br />if not exist "%s" goto done<br />del "%s"<br />del /AH "%s"<br />goto start<br />:done<br />del %%0</span><br />(Op. Troy)</td>
<td class="monospace" valign="top"><span style="color: #ff0000;">@echo off<br />:D1<br />del /a %1<br />if exist %1 goto D1<br />del /a %0</span><br />(Op. Blockbuster)</td>
<td class="monospace" valign="top"><span style="color: #ff0000;">@echo off<br />:del1<br />del /a %1<br />if exist %1 goto del1<br />del /a %0</span><br />(PL &amp; MX banks)</td>
</tr>
<tr>
<td class="monospace" valign="top"><span style="color: #ff0000;">:L1<br />DEL "%s"<br />PING 0.0.0.0 &gt; nul<br />IF EXIST "%s" GOTO L1<br />DEL "%%0"</span><br />(SWIFT attacks)<br />(Op. Blockbuster) </td>
<td class="monospace"><span style="color: #ff0000;">@echo off<br />:Rpt<br />del "%s"&gt;nul<br />ping 0.0.0.0&gt;nul<br />ping 0.0.0.0&gt;nul<br />if exist "%s" goto Rpt<br />del "%%0"</span><br />(WannaCryptor outbreak) </td>
<td class="monospace" valign="top"><span style="color: #ff0000;">:L21024<br />del /a "%s"<br />ping -n 2 127.0.0.1<br />if exist "%s" goto L21024<br />del /a "%s"</span><br />(Op.Blockbuster The Sequel)<br />(Turkish Bankshot) </td>
</tr>
<tr>
<td class="monospace">@echo off<br />:P<br />del %%1<br />ping 0.0.0.0&gt;nul<br />if exist %%1 goto P<br />del %%0 </td>
<td class="monospace" valign="top">:L<br />DEL "%s"<br />IF EXIST "%s" GOTO L<br />DEL "%%0" </td>
<td class="monospace" valign="top">:E2<br />del "%s"<br />if exist "%s" goto E2<br />del "%%0" </td>
</tr>
<tr>
<td class="monospace" valign="top">:G1928<br />del /a "%s"<br />ping -n 1 127.0.0.1<br />if exist "%s" goto G1928<br />del /a "%s" </td>
<td class="monospace"><span style="color: #ff0000;">@echo off<br />:R1<br />del /a "%s"<br />if exist "%s" goto R1<br />del /a "%s"</span><br />(Op. Blockbuster) </td>
<td class="monospace"><span style="color: #ff0000;">@echo off<br />:Loop<br />del /a H "%s"<br />if exist "" goto Loop<br />del "%s"</span><br />(Op. Blockbuster) </td>
</tr>
<tr>
<td><span class="monospace">:timeout</span><br /><span class="monospace">timeout /t 5</span><br /><span class="monospace">del /a "%s"</span><br /><span class="monospace">if exist "%s" goto timeout</span><br /><span class="monospace">del /a "%s"</span><br /><span class="monospace">del /a "%s"</span> </td>
<td valign="top"><span class="monospace">:Repeat</span><br /><span class="monospace">del %s</span><br /><span class="monospace">if exist %s goto Repeat</span><br /><span class="monospace">del %s"</span> </td>
<td class="monospace"><span style="color: #ff0000;">:O<br />@echo off<br />del "%s"<br />if exist "%s" goto O<br />del "%s"</span><br />(Op. Blockbuster The Saga) </td>
</tr>
</tbody>
</table> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2018/VB2018-Kalnai-Poslusny.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=VB2018 paper: Lazarus Group: a mahjong game played with different sets of tiles&url=https://www.virusbulletin.com/virusbulletin/2019/06/vb2018-paper-lazarus-group-mahjong-game-played-different-sets-tiles"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2019/06/vb2018-paper-lazarus-group-mahjong-game-played-different-sets-tiles'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2019/06/vb2018-paper-lazarus-group-mahjong-game-played-different-sets-tiles&title=VB2018 paper: Lazarus Group: a mahjong game played with different sets of tiles"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2019/06/vb2018-paper-lazarus-group-mahjong-game-played-different-sets-tiles&t=VB2018 paper: Lazarus Group: a mahjong game played with different sets of tiles"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2019/06/vb2018-paper-lazarus-group-mahjong-game-played-different-sets-tiles"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>