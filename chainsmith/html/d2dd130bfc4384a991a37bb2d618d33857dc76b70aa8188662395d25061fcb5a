<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="google-site-verification" content="_b2avZwzr79oru6lM2Ddae1fNpSIbPaP0H0WNkc2x3k"/>
    <meta name="msvalidate.01" content="CE77828A466C2513F660017CFCB6BA13"/>
    <link rel="icon" href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/favicon.ico">

    

            
    
    <link href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/css/main.css?id=b3e7fe8a6c3736dca145" rel="stylesheet">
    <script type="text/javascript"> var appInsights=window.appInsights||function(a){ function b(a){c[a]=function(){var b=arguments;c.queue.push(function(){c[a].apply(c,b)})}}var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie=d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f="onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c }({ instrumentationKey:"dcb460fe-684e-4d39-bfcd-d3a6f2710a32" }); window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView(); </script>
    <script>
        window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        'Author': 'Aleksandr Matrosov',
        'ArticleCategory': 'ESET Russia',
        'ArticleSection': 'Research',
        'cookie-bar-hq': true
    });
</script>
<script>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-PMDGSM');
</script>

<!-- This site is optimized with the Yoast SEO plugin v9.2 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx | WeLiveSecurity</title>
<meta name="description" content="Analysis of the Flame worm (Win32/Flamer) reveals some interesting facts about the internal structure of its main module."/>
<link rel="canonical" href="https://www.welivesecurity.com/2012/07/20/flame-in-depth-code-analysis-of-mssecmgr-ocx/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx | WeLiveSecurity" />
<meta property="og:description" content="Analysis of the Flame worm (Win32/Flamer) reveals some interesting facts about the internal structure of its main module." />
<meta property="og:url" content="https://www.welivesecurity.com/2012/07/20/flame-in-depth-code-analysis-of-mssecmgr-ocx/" />
<meta property="og:site_name" content="WeLiveSecurity" />
<meta property="article:tag" content="Win32/Duqu" />
<meta property="article:section" content="ESET Russia" />
<meta property="article:published_time" content="2012-07-20T16:43:08+00:00" />
<meta property="og:image" content="https://www.welivesecurity.com/wp-content/media_files/flame-mssecmgr-ocx.jpg" />
<meta property="og:image:secure_url" content="https://www.welivesecurity.com/wp-content/media_files/flame-mssecmgr-ocx.jpg" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content="Analysis of the Flame worm (Win32/Flamer) reveals some interesting facts about the internal structure of its main module." />
<meta name="twitter:title" content="Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx | WeLiveSecurity" />
<meta name="twitter:site" content="@welivesecurity" />
<meta name="twitter:image" content="https://www.welivesecurity.com/wp-content/media_files/flame-mssecmgr-ocx.jpg" />
<meta name="twitter:creator" content="@welivesecurity" />
<!-- / Yoast SEO plugin. -->

<link rel="alternate" type="application/rss+xml" title="WeLiveSecurity RSS 2.0 Feed" href="/rss-configurator/" /><style type="text/css" id="syntaxhighlighteranchor"></style>
        <link id="cookie-style" rel="stylesheet" type="text/css" href="https://assets.esetstatic.com/3PS/cookiebar.min.css">
</head>
<body class="no-js single noimage">
<noscript>
	<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PMDGSM" height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>

<div class="main">
    <header id="site-header" class="container">
        <div class="row">
            <div class="col-md-4 col-sm-12 col-xs-12 pull-right" id="header-nav">
                <div class="row">
                    <div class="hidden-lg hidden-md col-sm-7 col-xs-8 hidden-xxs">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
                    <div class="col-md-8 hidden-sm hidden-xs languages">
                        <div class="dropdown">
	<button class="btn btn-default dropdown-toggle" type="button" id="main-language-picker" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    	<span class="text">In English</span>
    	<span class="icomoon icon-icon_arrow"></span>
  	</button>
  	<ul class="dropdown-menu" aria-labelledby="main-language-picker">
            <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
      	</ul>
</div>                    </div>
                    <div class="col-md-4 col-sm-2 col-xs-3 menu-trigger">
                        <div class="menu-btn">
	<span class="text">Menu</span>
	<button type="button" id="menu-trigger" class="tcon tcon-menu--xcross" aria-label="toggle menu">
        <span class="wrapper">
            <span class="tcon-menu__lines" aria-hidden="true"></span>
            <span class="tcon-visuallyhidden">toggle menu</span>
        </span>
    </button>
</div>                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 imc" id="main-menu">
                        <nav class="menu clearfix imc">
                            <ul class="col-md-12 col-sm-6 col-xs-6 imc">
                                                                    <li class="">
                                        <a href="/">
                                            All Posts                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="http://welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/">
                                            Ukraine Crisis – Digital Security Resource Center                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/we-live-progress/">
                                            We Live Progress                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/research">
                                            Research                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/how-to/">
                                            How To                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/media/videos/">
                                            Videos                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/conference-papers/">
                                            Conference Materials                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/white-papers/">
                                            White Papers                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/threat-reports/">
                                            Threat Reports                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/magazine/">
                                            Magazine                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/our-experts/">
                                            Our Experts                                        </a>
                                    </li>
                                                            </ul>

                            <div class="col-md-12 col-sm-6 col-xs-6 imc">
                                <ul class="languages hidden-lg hidden-md hidden-xxs col-xs-12 imc">
                                        <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
                                    </ul>
                            </div>
                        </nav>
                    </div>
                    <div class="menu-overlay col-md-12 col-sm-12 col-xs-12 imc">
                        <div class="inner imc"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-5 hidden-sm hidden-xs pull-left" id="header-logo">
                <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                <span class="slogan hidden-sm hidden-xs">
						Award-winning news, views, and insight from the ESET <strong>security community</strong>					</span>
            </div>
        </div>
    </header>
        <section id="article-detail">
            <div class="hero-noimage">
	<div class="container promo-text">
		<div class="inner clearfix">
			<div class="col-md-11 col-sm-11 col-xs-12 no-padding">
				<h1>Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx</h1>
<div class="excerpt">Analysis of the Flame worm (Win32/Flamer) reveals some interesting facts about the internal structure of its main module.</div>
<div class="post-meta">
    <div class="wls-authors">
            </div>
    <span class="meta">
		<span class="strong">
			<time datetime="2012-07-20 09:43:08">20 Jul 2012 - 09:43AM</time>
		</span>
			</span>
</div>
			</div>
		</div>
	</div>
</div>	

            <div class="content">
                <div class="social-wrapper" id="social-sharer">
                    <span class="text">Share</span>
	<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2012%2F07%2F20%2Fflame-in-depth-code-analysis-of-mssecmgr-ocx%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
		<span class="icomoon icon-icon_fb"></span>
	</a>
	<a class="share-twitter" href="https://twitter.com/intent/tweet?&url=https%3A%2F%2Fwww.welivesecurity.com%2F2012%2F07%2F20%2Fflame-in-depth-code-analysis-of-mssecmgr-ocx%2F&text=Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx%0A&via=welivesecurity" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
		<span class="icomoon icon-icon_tw"></span>
	</a>
	<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2012%2F07%2F20%2Fflame-in-depth-code-analysis-of-mssecmgr-ocx%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
		<span class="icomoon icon-icon_in"></span>
	</a>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-1 col-sm-1 hidden-xs">

                        </div>
                        <div class="col-md-10 col-sm-10 col-xs-12 formatted">

                            <div class="excerpt noimage">
                                <p>Analysis of the Flame worm (Win32/Flamer) reveals some interesting facts about the internal structure of its main module.</p>
                            </div>

                            <p>The Flame worm (detected by ESET as Win32/Flamer) is one of the most interesting targeted threats of this year. Although several articles about it have been published, many of the facts about the internal structure of its main module (<em>mssecmgr.ocx</em>) have not been disclosed yet. In this blog post we want to shed light on some of the  implementation details of this component.</p>
<p>We first became acquainted with complex targeted threats through our analyses of Stuxnet ( <a href="http://go.eset.com/us/resources/white-papers/Stuxnet_Under_the_Microscope.pdf">Stuxnet Under the Microscope</a> ), continued with Duqu ( <a href="https://www.welivesecurity.com/2011/10/25/win32duqu-it%E2%80%99s-a-date">Win32/Duqu: It&#8217;s A Date</a> ), and now it&#8217;s Flame&#8217;s turn. Analysis of the Stuxnet code required quite an effort in order to comprehend the complete functionality of the worm. In the case of Duqu we found the architecture and implementation quite similar to those of Stuxnet, which made the process of analysing Duqu much easier. Flame is quite another story; there are lots of interconnected modules as well as internal storage for configuration information, and a payload with a format as yet unknown. Despite these difficulties we are going to reveal some interesting details about the main module <em>mssecmgr.ocx</em>.</p>
<h2>Interconnection with Stuxnet &#038; Duqu</h2>
<p>It is clear that Flame is malware of the same kind as Stuxnet and Duqu. These malicious programs implement quite complex logic, with elaborate architecture and implementation details. They are intended to maintain a persistent presence on the attacked system. The object-oriented style of Flame programming in C++ makes code analysis more complex, because the process of analysis necessitates the reconstruction not only of Flame workflow logic, but compiler logic too. For example, a reconstruction of call method Rc4_GetBufferSize looks like this:</p>
<p><a href="/wp-content/media_files/0.jpg"><img class="alignright size-full wp-image-14359" title="flame-mssecmgr-ocx" src="/wp-content/media_files/flame-mssecmgr-ocx.jpg" alt="Flamer mssecmgr.ocx" width="668" height="340" /></a>In static analysis, one problem   commonly encountered is that of ascertaining the single-valued relationship with an exact value in VTABLE, which will be called by the VPTR pointer. In the process of static analysis we use a method involving defining structures for the emulation of C++ objects. This method has been well described in the article:  <a href="http://blog.0xbadc0de.be/archives/67">Reversing C++ programs with IDA pro and Hex-rays</a> .</p>
<p>In the blog post  <a href="https://www.welivesecurity.com/2011/10/25/win32duqu-it%e2%80%99s-a-date">Win32/Duqu: It&#8217;s a Date</a>  it is mentioned that Duqu is based on the same source code as Stuxnet. Based on the binary analysis of the main module of Flame (henceforth in this article this term will referr to <em>mssecmgr.ocx</em>) it may be concluded that the developers of the malware used different source code to that of Stuxnet or Duqu. Although <em>mssecmgr.ocx</em>  makes heavy use of  object oriented code this is quite different to how object oriented programming is used in both Stuxnet and Duqu.</p>
<p>If we look at the implementation details for certain objects we see that they are signficantly different. Consider, for instance, objects representing strings, which are almost the most frequently used type of object in all the malware considered here. In the figure below we present structures describing string objects in Stuxnet and in Flame and they are clearly quite different. The same applies to the methods implementation of these objects.</p>
<p><a href="/wp-content/media_files/11.jpg"><img class="aligncenter  wp-image-14325" title="1" src="/wp-content/media_files/11-300x214.jpg" alt="" width="300" height="214" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 1   Structures describing string types in Stuxnet and Flame</span></p>
<p>Such types are responsible for working with files, file mappings, synchronization objects, memory buffers, memory streams and so on, and are different from those implemented in Stuxnet.</p>
<p>Another distinguishing feature of Flame code is the frequent use of smart pointers like objects in order to handle pointers to objects of different types. Apart from the convenience of this approach (from the point of view of the developers) using smart pointers bulks up the code and makes it more difficult to analyze.</p>
<h2>Main module analysis</h2>
<p>Flame stores its components in various files within the Windows file system. It uses three distinct naming schemes in order to store the files. The malware chooses a specific scheme in each case, based on configuration information and the environment in which it is run. The following table contains information on these naming schemes.</p>
<p><span style="color: #0000ff;">Table 1   Flame naming schemes</span></p>
<p><a href="/wp-content/media_files/22.jpg"><img class="aligncenter size-medium wp-image-14326" title="2" src="/wp-content/media_files/22-300x140.jpg" alt="" width="300" height="140" /></a></p>
<h2>Flame Startup</h2>
<p>When the malware is installed in the system it is registered as an LSA authentication package in the system registry. This results in loading <em>mssecmmgr.ocx</em> as part of the <em>lsass.exe</em> system process during system startup. Interestingly, LSA authentication packages are required to expose a specific set of routines as interface for LSA. None of these interface routines are implemented by the main module of Flame.</p>
<h3>Flame OS supported versions</h3>
<p>When the main module of the malware is launched it performs some checks as to whether the Operating System version is supported by the malware and whether the machine was loaded in safe mode:</p>
<p><a href="/wp-content/media_files/33.jpg"><img class="aligncenter size-medium wp-image-14327" title="3" src="/wp-content/media_files/33-300x32.jpg" alt="" width="300" height="32" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 2   Flame initialization checks on startup</span></p>
<p>The malware doesn&#8217;t run on 64-bit operating systems, but runs on all versions of Windows starting from Windows 2000 up to but not including  Windows 8).</p>
<h3>Detecting antivirus software</h3>
<p>When the main Flame module is loaded it performs checks as to what security software is installed on the machine to be infected. The list of the programs whose presence on the system should be checked is stored in configuration information which is discussed later. In the samples we analyzed there are approximately 320 different names which correspond to security software of different kinds: personal firewalls, antivirus software, parental control and so on. Depending on several conditions   as defined by configuration information   the malware may stop execution if specific security software is spotted in the system. All the detected products are split into groups depending on their functionality:</p>
<ul>
<li>Personal firewalls;</li>
<li>HIPS;</li>
<li>Antivirus software;</li>
<li>Network packet analyzers;</li>
<li>Parental control systems;</li>
<li>System monitors;</li>
<li>DLP systems etc.</li>
</ul>
<h3>Injecting into processes</h3>
<p>Let&#8217;s look at how the malware propagates among processes within the infected system. Before going any further it is worth mentioning a nice publication on Flame&#8217;s injection technique (<a href="http://blog.ioactive.com/2012/06/inside-flame-you-say-shell32-i-say.html">Inside Flame: You Say Shell32, I Say MSSECMGR</a>).   To be able to inject code into the address space of other processes the malware carefully uses such standard API routines as:</p>
<ul>
<li><em>VirtualAllocEx</em>   to allocate memory for the module injected into the target process;</li>
<li><em>WriteProcessMemoryReadProcessMemory</em>   to inject the code;</li>
<li><em>CreateRemoteThreadRtlCreateUserThread</em>   to transfer control to the injected module.</li>
</ul>
<p>As a result, at some point the address space of the target process will look like this:</p>
<p><a href="/wp-content/media_files/42.jpg"><img class="aligncenter size-medium wp-image-14328" title="4" src="/wp-content/media_files/42-300x300.jpg" alt="" width="300" height="300" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 3   Target process address space layout during injection</span></p>
<p>What makes Flame difficult to detect is an interesting trick with the shell32.dll library. To map the image of the injected module, Flame allocates memory by mapping system library shell32.dll. The code responsible for doing this looks like this when it is decompiled:</p>
<p><a href="/wp-content/media_files/53.jpg"><img class="aligncenter size-medium wp-image-14329" title="5" src="/wp-content/media_files/53-300x139.jpg" alt="" width="300" height="139" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 4   Reusing memory region of shell32.dll</span></p>
<p>This results in the creation of all the necessary system structures for the injected module and as a result it looks like a legitimately-loaded module.</p>
<p>When all the data and code are written into target address space, Flame creates a remote thread, by executing either the <em>CreateRemoteThread</em> or <em>RtlCreateUserThread</em> API calls and specifying the address of Stub 2 as entry point and the injected data as a parameter.</p>
<p>Stub 2 contains loader code, the purpose of which is to map the injected module into the address space of the process as follows:</p>
<ul>
<li>Allocate memory for the image;</li>
<li>Apply base relocations;</li>
<li>Initialize import address table;</li>
<li>Call entry point.</li>
</ul>
<p>It uses injected data as a helper structure containing the address of all the necessary routines and supplemental string constants. Here is a piece of the code responsible for initialization of this structure:</p>
<p><a href="/wp-content/media_files/61.jpg"><img class="aligncenter size-medium wp-image-14332" title="6" src="/wp-content/media_files/61-300x167.jpg" alt="" width="300" height="167" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 5   Initialization of supplemental structures</span></p>
<p>Another thing that Stub_2 does is to hook the msvcrt.dll entry point with Stub_1 code. Later it will be shown why and how this hooking is implemented. The main functionality of Stub_1 code is to call the entry point of the injected module whenever the entry point of <em>msvcrt.dll</em> is called. As a result the injected module is able to receive all the events <em>msvcrt.dll</em> receives. It allows the malware to partially recreate the same execution environment as the legitimately loaded module creates. Flame hooks the <em>msvcrt.dll</em> entry point in quite an unusual way. Instead of splicing the code it overwrites the corresponding field of the PEB_LDR_DATA structure in <em>InLoadOrderModuleList</em> found in the PEB (Process Environment Block). After injection is completed the malware cleans up traces of penetration into process address space.</p>
<h2>Flame configuration information</h2>
<p>Flame&#8217;s configuration information storage is quite complicated and differs significantly at the implementation level from that of Stuxnet or Duqu. When the malware penetrates initially into the system, all the configuration data are contained inside resources belonging to the main module. Looking at Flame&#8217;s main module we notice a resource with the ID 146 in the resource directory. This is the place where all the configuration data are stored. Depending on the version of the malware the size of the resource may differ, ranging from 37 Kb up to 3 Mb. Unlike Stuxnet and Duqu, which store configuration data in a simple binary file, Flame employs a more sophisticated kind of storage which isn&#8217;t straightforward to parse.</p>
<p>To be able to get access to the configuration information one needs to decrypt the resource and decompress the decrypted data. The encryption algorithm is rather simple, as presented in Figure 6.</p>
<p><a href="/wp-content/media_files/7.jpg"><img class="aligncenter size-medium wp-image-14333" title="7" src="/wp-content/media_files/7-300x250.jpg" alt="" width="300" height="250" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 6   Flame resource decryption algorithm</span></p>
<p>When decrypted the data are de-compressed with the inflate mode of the data compression algorithm. Thus the malware proceeds to decompress the data in small data portions (less than a kilobyte each). To bypass sandboxes the malware calls the Sleep API routine to wait for 10 milliseconds. between portions. This makes the process of decompression quite resilient:</p>
<p><a href="/wp-content/media_files/8.jpg"><img class="aligncenter size-medium wp-image-14334" title="8" src="/wp-content/media_files/8-300x151.jpg" alt="" width="300" height="151" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 7   Inserting delays in resource decompression algorithm</span></p>
<p>Finally, after decompressing the decrypted resource, Flame applies a permutation to it as defined by the following byte array:</p>
<p><a href="/wp-content/media_files/91.jpg"><img class="aligncenter size-medium wp-image-14341" title="9" src="/wp-content/media_files/91-300x124.jpg" alt="" width="300" height="124" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 8   Configuration data decryption permutation</span></p>
<p>  All the Flame&#8217;s configuration data are split into specially formatted blocks of the following natural structure:</p>
<p><a href="/wp-content/media_files/10.jpg"><img class="aligncenter size-medium wp-image-14336" title="10" src="/wp-content/media_files/10-300x61.jpg" alt="" width="300" height="61" /></a></p>
<p><span style="color: #0000ff;">Figure 9   Flame configuration data storage basic block layout</span></p>
<p>Here, the block byte describes the type of the information contained inside the block. There are two types of blocks:</p>
<ul>
<li>blocks containing supplemental information about configuration information items;</li>
<li>blocks containing the values for configuration information items.</li>
</ul>
<p>The data field is structured as follows for blocks containing supplemental information:</p>
<p><a href="/wp-content/media_files/112.jpg"><img class="aligncenter size-medium wp-image-14345" title="11" src="/wp-content/media_files/112-300x61.jpg" alt="" width="300" height="61" /></a></p>
<p style="text-align: left;" align="center"><span style="color: #0000ff;">Figure 10   Flame configuration data storage basic block layout with supplemental information</span></p>
<p>Namely, it specifies the offset of the block with item data, the offset of the block containing supplemental information on the next configuration data item, and the name of the item. The root block is located at offset 0x1A from the beginning of the configuration data. In the next figure you can see a sample block describing configuration item RTS.MEDIA_SETUP.FILES_TO_DELETE:</p>
<p><a href="/wp-content/media_files/12.jpg"><img class="aligncenter size-medium wp-image-14343" title="12" src="/wp-content/media_files/12-300x90.jpg" alt="" width="300" height="90" /></a></p>
<p><span style="color: #0000ff;">Figure 11   Flame configuration data storage basic block</span></p>
<p>Unlike Stuxnet and Duqu, where configuration information items were nameless, in the case of Flame malware researchers were able to take advantage of item naming to make understanding Flame functionality easier.</p>
<p>The type of data of configuration information items may be determined by the value of the block byte. Here are some block byte values corresponding to different types of items:</p>
<ul>
<li>0x08   DWORD (4-byte integer);</li>
<li>0x06   WORD (2-byte integer);</li>
<li>0x09   QWORD (8-byte integer)</li>
<li>0x05   NULL-terminated Unicode string;</li>
<li>0x04   raw binary data;</li>
<li>0x03   item description block (see Figure 10)</li>
<li>0x02   root block.</li>
</ul>
<p>Depending on several conditions, when the malware infects the system it stores configuration information in a file with the name mscrypt.da0 or wpgfilter.da0 (see corresponding entry in Table 1)</p>
<p>We continue our in-depth code analysis of Win32/Flamer and will shortly return to you with new information.</p>
<p>Related ESET comment:</p>
<ul>
<li>
<div id="post-13138"><a title="Permanent Link to The negative impact on GDP of state-sponsored malware like Stuxnet and Flame" href="https://www.welivesecurity.com/2012/06/13/impact-on-gdp-of-state-sponsored-malware-like-stuxnet-and-flame" rel="bookmark">The negative impact on GDP of state-sponsored malware like Stuxnet and Flame</a></div>
</li>
<li><a title="Permanent Link to Stuxnet, Flamer, Flame, Whatever Name: There's just no good malware" href="https://www.welivesecurity.com/2012/06/03/stuxnet-flamer-flame-whatever-name-there-is-no-good-malware" rel="bookmark">Stuxnet, Flamer, Flame, Whatever Name: There&#8217;s just no good malware</a></li>
<li>  <a title="Permanent Link to Win32/Flamer: the 21st Century Whale" href="https://www.welivesecurity.com/2012/05/29/flamer-the-21st-century-whale" rel="bookmark">Win32/Flamer: the 21st Century Whale</a></li>
</ul>
<p><strong>Eugene Rodionov, Malware Researcher</strong><br />
<strong>Aleksandr Matrosov, Security Intelligence Team Lead</strong></p>

                            
                                                            <div class="dot">
                                    <span class="icomoon icon-icon_article_dot"></span>
                                </div>

                                <div class="meta">
                                    <div class="wls-authors wls-authors-footer">
                                                                            </div>
                                    <span class="strong">
								        <time datetime="2012-07-20 09:43:08">20 Jul 2012 - 09:43AM</time>
                                    </span>
                                </div>
                            
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text"><em>Sign up to receive an email update whenever a new article is published in our <a href="https://www.welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/" target="_blank" rel="noopener">Ukraine Crisis – Digital Security Resource Center</a></em></span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="TOPIC" value="We Live Security Ukraine Newsletter">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="button-flag">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text">Newsletter</span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="NEWSLETTER" value="We Live Security">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>

                                                            <div class="similar-articles row">
                                    <div class="heading-line col-md-12 col-sm-12 col-xs-12">
                                        <h3><span class="text">Similar Articles</span></h3>
                                    </div>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/blackhole/" class="category-tag-btn">Blackhole</a>                                                <a href="https://www.welivesecurity.com/2013/03/20/win32crydex-java-pushes-cyprus-into-a-blackhole/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2013/03/cyprus-blackhole-623x400.jpg"
                                                         alt="Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2013/03/20/win32crydex-java-pushes-cyprus-into-a-blackhole/">
                                                    Win32/Cridex: Java pushes Cyprus into a Blackhole                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/autorun/" class="category-tag-btn">autorun</a>                                                <a href="https://www.welivesecurity.com/2012/12/11/are-your-usb-flash-drives-an-infectious-malware-delivery-system/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/image151x103.jpg"
                                                         alt="Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2012/12/11/are-your-usb-flash-drives-an-infectious-malware-delivery-system/">
                                                    Are your USB flash drives an infectious malware delivery system?                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/false-positives/" class="category-tag-btn">false positives</a>                                                <a href="https://www.welivesecurity.com/2012/08/23/carbon-dating-and-malware-detection/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/image151x103.jpg"
                                                         alt="Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2012/08/23/carbon-dating-and-malware-detection/">
                                                    Carbon Dating and Malware Detection                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/flame/" class="category-tag-btn">Flame</a>                                                <a href="https://www.welivesecurity.com/2012/08/15/interconnection-of-gauss-with-stuxnet-duqu-flame/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/image151x103.jpg"
                                                         alt="Flame, Duqu and Stuxnet: in&#8209;depth code analysis of mssecmgr.ocx">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2012/08/15/interconnection-of-gauss-with-stuxnet-duqu-flame/">
                                                    Interconnection of Gauss with Stuxnet, Duqu &amp; Flame                                                </a>
                                            </h4>
                                        </article>
                                                                    </div>
                            
                            <div class="comments row">
                                <div class="heading-line col-xs-12">
                                    <h3><span class="text">Discussion</span></h3>
                                                                            
<div id="disqus_thread"></div>
                                                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    	</div> 	<footer id="site-footer">
		<div class="container">
			<div class="row">
				<div class="col-md-2">
                    <div class="hidden-sm hidden-xs">
                        <div class="logo-wrapper footer clearfix">
                            <div class="dark clearfix">
                                <a href="https://www.welivesecurity.com/" class="wls">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-1.svg" alt="Welivesecurity.com">
                                </a>
                                <a href="https://www.eset.com" class="eset">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-2.svg" alt="by ESET">
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="hidden-lg hidden-md">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
				</div>
				<nav id="footer" class="clearfix">
											<div class="mobile-block">
																<div class="col-md-2 col-md-offset-2">
										<ul>
																							<li>
													<a href="/">Home</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/about-us/">About Us</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/contact-us/">Contact Us</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/sitemap/">Sitemap</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/our-experts/">Our Experts</a>
												</li>
																							<li>
													<a href="https://eset.com">ESET</a>
												</li>
																					</ul>
									</div>
													</div>
											<div class="mobile-block">
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/research/">Research</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/category/how-to/">How To</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/categories/">Categories</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/rss-configurator/">RSS Configurator</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/news-widget-generator/">News Widget</a>
												</li>
																					</ul>
									</div>
													</div>
									</nav>
			</div>
			<div class="row">
				<div class="col-md-12 legal clearfix">
					<div class="wrap clearfix">
													<span>
								<a href="https://www.welivesecurity.com/privacy/">
									Privacy Policy								</a>
							</span>
													<span>
								<a href="https://www.welivesecurity.com/legal-information/">
									Legal Information								</a>
							</span>
											</div>
					<span class="copyright pull-right">Copyright &copy; ESET, All Rights Reserved</span>
				</div>
							</div>
		</div>
	</footer>
	
	<button id="back-to-top" class="animated-scroll" data-target="absoluteTop">
		<span class="icomoon icon-icon_arrow"></span>
		<span class="text">Back to top</span>
	</button>

			<div class="social-wrapper-mobile hidden-lg hidden-md hidden-sm" id="mobile-article-sharer">
			<div class="col-xs-12">
				<div class="icons" style="text-align: center;">
											<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2012%2F07%2F20%2Fflame-in-depth-code-analysis-of-mssecmgr-ocx%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
							<span class="icomoon icon-icon_fb"></span>
						</a>
											<a class="share-twitter" href="https://twitter.com/intent/tweet?https%3A%2F%2Fwww.welivesecurity.com%2F2012%2F07%2F20%2Fflame-in-depth-code-analysis-of-mssecmgr-ocx%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
							<span class="icomoon icon-icon_tw"></span>
						</a>
											<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2012%2F07%2F20%2Fflame-in-depth-code-analysis-of-mssecmgr-ocx%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
							<span class="icomoon icon-icon_in"></span>
						</a>
									</div>
			</div>
		</div>
	
	<script>
		var baseUrl = "https://www.welivesecurity.com/";
	</script>
	
			<script>
            !function(){if(-1==window.document.cookie.indexOf("user_rec=1")){function e(e,o){var t=document.createElement("img");t.setAttribute("style","display:none"),t.src=e+o,window.document.body.appendChild(t)}function o(){d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Default%20status&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=defaultStatus&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c)}function t(){console.log("GA and GTM are loaded."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=11",e(u,a),e(s,c)}function n(){var e=new Date;e.setTime(e.getTime()+63072e6);var o="expires="+e.toUTCString();window.document.cookie="user_rec=1; "+o+"; path=/"}var d,a,c,i,r,l="UA-76266002-27",g=window.location.href,s="https://cdn1.esetstatic.com/ESET/INT/assets/img/check.png",u="https://www.google-analytics.com/collect",w="wls",m=0,h=function e(){i=window.ga&&ga.create?1:0,r=window.google_tag_manager?1:0,m++,console.log("Timer: ",m),h=setTimeout(e,500)};window.document.addEventListener&&(d=1e6*Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Script%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=scriptLoaded&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c),window.addEventListener("beforeunload",o),window.ga&&ga.create&&window.google_tag_manager?(t(),window.removeEventListener("beforeunload",o),n()):(setTimeout(h,500),setTimeout(function(){clearTimeout(h),i&&r?t():i&&!r?(console.log("GA is loaded and GTM is blocked."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=10",e(u,a),e(s,c)):!i&&r?(console.log("GA is blocked and GTM is loaded."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=01",e(u,a),e(s,c)):i||r||(console.log("GA is blocked and GTM is blocked."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=00",e(u,a),e(s,c)),window.removeEventListener("beforeunload",o),n()},1e4)))}}();
		</script>
	
	<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/js/main.js?id=fef3139dcedd23afc232"></script>
    <!-- Version: v1.10.0.0df103.pro.azeu -->
    		<script type="text/javascript">
			var disqus_config = function () { 
				this.language = "en";
			};
			var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":"", "numsVisible": false};
			var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
		</script>
		<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/static/js/crayon.min.js"></script>

			
		
    <script>
    	Main.init();
    </script>

    <script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"welivesecurity"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.16'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.16"},"disqusIdentifier":"14323 https:\/\/www.welivesecurity.com\/?p=14323","disqusShortname":"welivesecurity","disqusTitle":"Flame, Duqu and Stuxnet: in\u2011depth code analysis of mssecmgr.ocx","disqusUrl":"https:\/\/www.welivesecurity.com\/2012\/07\/20\/flame-in-depth-code-analysis-of-mssecmgr-ocx\/","postId":"14323"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.16'></script>
    <script src="https://assets.esetstatic.com/3PR/app.min.js"></script>
  </body>
</html>
