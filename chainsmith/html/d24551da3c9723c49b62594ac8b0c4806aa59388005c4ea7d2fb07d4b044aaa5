<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: VB2018 paper: From Hacking Team to hacked team to...?</title>
<meta name="description" content="In this paper (presented at VB2018), Filip Kafka looks at the resurfaced Hacking Team spyware, and at what has changed since the company behind it faced a number of prominent hacks." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 6200;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-vb2018-paper-hacking-team-hacked-team"></a>VB2018 paper: From Hacking Team to hacked team to...?</h1>
<h3><a class="chapter" name="h3-filip-kafka"></a>Filip Kafka</h3>
<p>ESET, Slovakia</p>
<p><em>Copyright © 2018 Virus Bulletin</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-13214" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-13214" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /> <a class="toc-level2" href="#h2-introduction">Introduction</a><br /> <a class="toc-level2" href="#h2-discovery-post-leak-samples">Discovery of post-leak samples</a><br /> <a class="toc-level2" href="#h2-unpacking-samples">Unpacking the samples</a><br /> <a class="toc-level3" href="#h3-extracting-details-vmprotect-packed-samples">Extracting details from the VMProtect-packed samples</a><br /> <a class="toc-level4" href="#h4-first-approach">First approach</a><br /> <a class="toc-level4" href="#h4-second-approach">Second approach</a><br /> <a class="toc-level2" href="#h2-analysis-post-leak-samples">Analysis of the post-leak samples</a><br /> <a class="toc-level3" href="#h3-distribution-and-targets">Distribution and targets</a><br /> <a class="toc-level3" href="#h3-architecture-and-functionality">Architecture and functionality</a><br /> <a class="toc-level4" href="#h4-scout-version-28">Scout (version 28):</a><br /> <a class="toc-level4" href="#h4-soldier-version-1025">Soldier (version 1025):</a><br /> <a class="toc-level2" href="#h2-attribution">Attribution</a><br /> <a class="toc-level2" href="#h2-certificates">Certificates</a><br /> <a class="toc-level3" href="#h3-versioning">Versioning</a><br /> <a class="toc-level3" href="#h3-modifications-line-hacking-team-development-habits">Modifications in line with Hacking Team development habits</a><br /> <a class="toc-level4" href="#h4-1-difference-scout-startup-file-size">1. Difference in Scout Startup file size</a><br /> <a class="toc-level4" href="#h4-2-improved-random-number-generation">2. Improved random number generation</a><br /> <a class="toc-level4" href="#h4-4-change-fake-error-message-strings">4. Change in fake error message strings</a><br /> <a class="toc-level4" href="#h4-5-change-user-agents">5. Change in user agents</a><br /> <a class="toc-level4" href="#h4-6-changes-strings-used-campc-sync">6. Changes in strings used for C&amp;C sync</a><br /> <a class="toc-level2" href="#h2-conclusion">Conclusion</a><br /> <a class="toc-level2" href="#h2-references">References</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p><em>Hacking Team</em> first came under the spotlight of the security industry following its damaging data breach in July 2015. The leaked data revealed several zero-day exploits being used and sold to governments, and confirmed suspicions that <em>Hacking Team</em> had been doing business with oppressive regimes. But what happened to <em>Hacking Team</em> after one of the most famous hacks of recent years?</p>
<p><em>Hacking Team</em>'s flagship product, the Remote Control System (RCS), was detected in the wild at the beginning of 2018 in 14 different countries, including some of those that had previously criticized the company's practices. In this paper, we will present the evidence that convinced us that the new, post-hack <em>Hacking Team</em> samples can be traced back to a single group – not just any group, but<em> Hacking Team</em>'s developers themselves.</p>
<p>Furthermore, we will share previously undisclosed insights into <em>Hacking Team</em>'s post-leak operations, including the targeting of diplomats in Africa, uncover the digital certificates used to sign the malware, and share details of the distribution vectors used to target the victims. We will compare the functionality of the post-leak samples with that of the leaked source code. To help other security researchers, we'll provide tips on how to efficiently extract details from these newer <em>VMProtect</em>-packed RCS samples. Finally, we will show how <em>Hacking Team</em> sets up companies and purchases certificates for them.</p>
<p> </p>
<h2><a class="chapter" name="h2-introduction"></a>Introduction</h2>
<p>Since being founded in 2003, the Italian spyware vendor <em>Hacking Team</em> has gained notoriety for selling surveillance tools to governments and their agencies across the world. The capabilities of its flagship product, the Remote Control System (RCS), include extracting files from a targeted device, intercepting emails and instant messaging, as well as remotely activating a device's webcam and microphone. The company has been criticized for selling these capabilities to authoritarian governments [<a href="#ref1">1</a>] – an allegation it has consistently denied.</p>
<p>When <em>Hacking Team</em> itself suffered a damaging hack in July 2015 [<a href="#ref2">2</a>], the reported use of RCS by oppressive regimes was confirmed [<a href="#ref3">3</a>].</p>
<p>The 400GB of leaked internal data included:</p>
<ul>
<li>the spyware source code</li>
<li>the spyware for different platforms</li>
<li>five zero-day exploits: 1x <em>Windows LPE</em>, 3x <em>Adobe Flash</em>, 1x <em>Adobe Reader</em></li>
<li>a UEFI rootkit</li>
<li>evidence of selling an injection proxy for performing various MitM attacks</li>
<li>the once-secret list of customers</li>
<li>the pricelist</li>
<li>internal communications</li>
</ul>
<p>Due to the severity of the leak, <em>Hacking Team</em> was forced to ask its customers to suspend all use of RCS, and was left facing an uncertain future.</p>
<p>The security community has been keeping a close eye on the company's efforts to get back on its feet. With both the source code and a ready-to-use builder leaked, it came as no surprise when cybercriminals started reusing the spyware. This was the case in January 2016, when Callisto Group reused the source code in one of their campaigns [<a href="#ref4">4</a>]. Recent reports have revealed that in June 2016, <em>Hacking Team</em> received funding from a mysterious investor with ties to Saudi Arabia [<a href="#ref5">5</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-discovery-post-leak-samples"></a>Discovery of post-leak samples</h2>
<p>In the early stages of our investigation, the <em>Citizen Lab</em> provided us with RCS samples used in 2016 and 2017, which led to the discovery of a version of the spyware currently being used in the wild and signed with a previously unseen valid digital certificate.</p>
<p>Our further research uncovered several more samples of <em>Hacking Team</em>'s spyware created after the 2015 hack, all being slightly modified compared to variants released before the source code leak.</p>
<p>The samples were compiled between September 2015 and October 2017. We have deemed these compilation dates to be authentic, based on <em>ESET</em> telemetry data indicating the appearance of the samples in the wild within a few days of those dates.</p>
<p> </p>
<h2><a class="chapter" name="h2-unpacking-samples"></a>Unpacking the samples</h2>
<p>All the samples are packed with <em>VMProtect</em>, a commercial anti-piracy protector, which was also the case with pre-leak samples. We notified <em>VMProtect</em>'s developers and asked them to blacklist the licence used to pack spyware, but no action was taken.</p>
<p>In this section, we will explain how we unpacked the samples of modified <em>Hacking Team</em> spyware.</p>
<p> </p>
<h3><a class="chapter" name="h3-extracting-details-vmprotect-packed-samples"></a>Extracting details from the VMProtect-packed samples</h3>
<p>There are two approaches – the first is intended to extract only some (valuable) details from the sample, such as the C&amp;C; the second approach is to fully unpack the sample, including rebuilding the IAT (Import Address Table). The first approach is obviously easier and quicker, but to be able to fully analyse the samples, the second approach is needed.</p>
<p> </p>
<h4><a class="chapter" name="h4-first-approach"></a>First approach</h4>
<p>For the first approach, the sample is run and after some time, when the sample unpacks itself, the process is dumped. Then the C&amp;C or other information can be searched for in the dump. Indeed, this is not a sophisticated method, but it is important to mention this easy but still effective approach. For dumping you can use:</p>
<ol>
<li><em>Hacking Team</em>'s <em>VMProtect</em> dumper – a simple tool developed by <em>Hacking Team</em>'s developers, which runs the <em>VMProtect</em>-packed sample and dumps the process memory a few times after the sample unpacks itself.</li>
<li>Any of your favourite memory-dumping tools.</li>
</ol>
<p> </p>
<h4><a class="chapter" name="h4-second-approach"></a>Second approach</h4>
<p>The second approach represents typical unpacking, and results in a fully working unpacked PE file. We unpacked the sample dynamically (i.e. by executing it).</p>
<p>This approach includes the following steps:</p>
<ol>
<li>Run the sample and find the OEP (Original Entry Point).</li>
<li>If imports (calls to API) are wrapped, figure out the real API function and rewrite the wrapped call.</li>
<li>Dump and rebuild imports with typical tools.</li>
</ol>
<p>The steps explained in detail:</p>
<ol><ol>
<li>As <em>VMProtect</em> users can choose various protection settings, including detection of virtual machine or debugger, the difficulty of this part depends on what protection settings are used. We will first explain how to do the unpacking when the protection is not set to detect a debugger or a virtual machine, then we will extend our approach to bypass those detections.</li>
<ol style="list-style-type: lower-alpha;">
<li>Run the sample inside the debugger. After some time, pause it. Then search in the memory for:</li>
<ol><ol style="list-style-type: lower-roman;">
<li>Typical MSVC entry point. Programs compiled with <em>Microsoft</em> Visual Studio have very common code on startup, so looking for 'magic bytes' in the initialization of the security cookie (<a href="#fiigure1">Figure 1</a>) is enough to identify the OEP. Once the OEP has been identified, place a hardware breakpoint on the address and run the packed sample once again until it pauses at the OEP.</li>
<li>If it wasn't compiled with <em>Microsoft</em> Visual Studio, or it is still somehow masquerading, it is necessary to search for the code belonging to the original application.</li>
</ol></ol>
<li>If the protection is set to detect a debugger, it is necessary to use dumping tools as explained before, because there are no plug-ins available to successfully hide a debugger from <em>VMProtect</em>.</li>
</ol>
<li>Once the OEP is found, there might still be a problem with API functions – usually, <em>VMProtect</em> puts a 'wrapper' on them. This means that it won't call APIs directly, but instead it calls code in the .vmp section which computes the address of the API, pushes it on the stack, and finally returns to it. This wrapper makes work more difficult for typical IAT rebuilders. In order to get rid of the wrapper, it is necessary to solve the address of the API and then rewrite the wrapped call to the real address of the API. Solving the address of the API can be done either by emulation or by execution until it returns from the .vmp section to the section with imports (usually the address starts with 0x7f....).</li>
<li>When the OEP is found and imports are in the original form without the wrapper, the process can be dumped and the IAT rebuilt using typical tools like <em>OllyDump</em>, <em>Scylla</em> or <em>ImpRec</em>.<a class=" anchor" name="fiigure1"></a></li>
</ol></ol>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/5715/3926/3670/Figure_1_part_1.png" alt="Figure 1 part 1.png" width="755" height="212" /><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/2915/3926/3679/Figure_1_part_2.png" alt="Figure 1 part 2.png" width="617" height="427" /><span class="centered-caption">Figure 1: Typical bytes on entry point in programs compiled with Microsoft Visual Studio.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-analysis-post-leak-samples"></a>Analysis of the post-leak samples</h2>
<h3><a class="chapter" name="h3-distribution-and-targets"></a>Distribution and targets</h3>
<p>As for the distribution vector of the post-leak samples we analysed, in at least two cases, we detected the spyware in an executable file disguised as a PDF document. The names of the files suggest the malware was spread via spear-phising emails sent to high-profile targets such as diplomats:</p>
<ul>
<li>'Requirement for Diplomatic Passport Service.pdf.t.exe'</li>
<li>'Note Verbale No 00023AM-ADD2017 du 17 janvier 2017 .exe'</li>
<li>'Petition 2017 rasdt.......................................................................................................................................................................t.exe'</li>
<li>'rawshi nawaxoy harim kurdstan.exe'</li>
</ul>
<p>Our systems have detected these new <em>Hacking Team</em> spyware samples in 14 countries. We choose not to name the countries in order to prevent potentially incorrect attributions based on these detections, since the geo-location of the detections doesn't necessarily reveal anything about the origin of the attack.</p>
<p> </p>
<h3><a class="chapter" name="h3-architecture-and-functionality"></a>Architecture and functionality</h3>
<p>The malware has two stages – Scout (first stage) and Soldier or Elite (second stage; regular and premium version). The second stage, the actual payload, is deployed after a few initial checks carried out by Scout.</p>
<p>In the post-leak samples we analysed, Scout and Soldier had the following functionality:</p>
<h4><a class="chapter" name="h4-scout-version-28"></a>Scout (version 28):</h4>
<ul>
<li>Installs itself, checks if other instances are already running</li>
<li>Performs AV-bypassing tricks</li>
<li>Collects basic information about the computer</li>
<li>Checks for possible upgrades of itself / Soldier / Elite</li>
</ul>
<h4><a class="chapter" name="h4-soldier-version-1025"></a>Soldier (version 1025):</h4>
<ul>
<li>Collected data is packed, encrypted and stored in the registry and later sent to the C&amp;C server</li>
<li>Proper memory management, error handling</li>
<li>Capabilities: steal data from clipboard, steal data from social networks, steal passwords and other data from browsers, take screenshots, activate camera, determine geolocation based on Wi-Fi networks, record <em>Skype</em> calls, record keystrokes, monitor mouse clicks, schedule uninstallation of itself</li>
<li>Example of a configuration embedded in the file:</li>
</ul>
<pre>{"camera":{"enabled":false,"repeat":0,"iter":0},"position":{"enabled":false,"repeat":0},"screenshot":<br />{"enabled":true,"repeat":120},"photo":{"enabled":false},"file":{"enabled":false},"addressbook":{"enabled"<br />:false},"chat":{"enabled":false},"clipboard":{"enabled":false},"device":{"enabled":true},"call":{"enabled"<br />:false},"messages":{"enabled":false},"password":{"enabled":false},"keylog":{"enabled":false},"mouse":<br />{"enabled":false},"url":{"enabled":false},"sync":{"host":"149.154.153.223","repeat":120},"uninstall":<br />{"date":null,"enabled":false}}</pre>
<p> </p>
<h2><a class="chapter" name="h2-attribution"></a>Attribution</h2>
<p>Further analysis led us to conclude that all the analysed post-leak samples can be traced back to a single group, rather than being isolated instances of diverse actors building their own versions from the leaked <em>Hacking Team</em> source code.</p>
<p> </p>
<h2><a class="chapter" name="h2-certificates"></a>Certificates</h2>
<p>One indicator supporting this is the sequence of digital certificates used to sign the samples – we found six different certificates issued in succession. Four of the certificates were issued by <em>Thawte</em> to four different companies, and two are personal certificates issued to Valeriano Bedeschi (<em>Hacking Team</em> co-founder) and someone named Raffaele Carnacina.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/4915/3926/4070/Figure_2.png" alt="Figure 2.png" width="806" height="462" /><span class="centered-caption">Figure 2: The sequence of digital certificates used to sign the post-leak samples. Samples signed by Valeriano Bedeschi were most likely used for testing purposes, as the C&amp;C was set to an internal network (172.16.1.206).</span></p>
<p> </p>
<h3><a class="chapter" name="h3-versioning"></a>Versioning</h3>
<p>The versioning observed in the analysed samples continues where <em>Hacking Team</em> left off before the breach, and follows the same patterns. <em>Hacking Team</em>'s habit of compiling Scout and Soldier consecutively, and often on the same day, can also be seen across the newer samples.</p>
<p>Figure 3 shows the compilation dates, versioning and certificate authorities of <em>Hacking Team Windows</em> spyware samples seen between 2014 and 2017. Post-leak samples with renewed versioning begin with the sample signed by Valeriano Bedeschi. Reuse of the leaked source code by Callisto Group is marked in red.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/7115/3926/4168/Figure_3.png" alt="Figure 3.png" width="1161" height="854" /><span class="centered-caption">Figure 3: Hacking Team Windows spyware samples seen between 2014 and 2017.</span></p>
<p> </p>
<h3><a class="chapter" name="h3-modifications-line-hacking-team-development-habits"></a>Modifications in line with Hacking Team development habits</h3>
<p>Furthermore, our research has confirmed that the changes introduced in the post-leak updates were made in line with <em>Hacking Team</em>'s own coding style. The changes are often found in places that indicate a deep familiarity with the code, and follow <em>Hacking Team</em>'s previously established development patterns (visible in the leaked source code).</p>
<p>Other than these specific changes, the majority of the code is without any modifications. It is highly improbable that some other actor – that is, other than the original <em>Hacking Team</em> developer(s) – would make changes in exactly these places when creating new versions from the leaked<em> Hacking Team</em> source code.</p>
<h4><a class="chapter" name="h4-1-difference-scout-startup-file-size"></a>1. Difference in Scout Startup file size</h4>
<p>As shown in Figure 4, one of the subtle differences between the pre-leak and post-leak samples is a difference in Startup file size. When Scout installs on the system, it copies itself into the Windows Startup folder and appends random data to the end of the binary. This trick was used as an evasive technique against one anti-virus product. Before the leak, the copied file was padded to occupy 4MB. In the post-leak samples, this file copy operation is padded to 6MB.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/850df3c39eba0d064b830ca23b4de5d3_f3032.png" alt="Figure 4.png" width="640" height="361" /><span class="centered-caption">Figure 4: Startup file size copy changed from 4MB pre-leak to 6MB post-leak.</span></p>
<h4><a class="chapter" name="h4-2-improved-random-number-generation"></a>2. Improved random number generation</h4>
<p>Scout samples from before the leak used the GetTickCount and Rand functions to generate random numbers for increasing their size by appending the numbers at the end of the binary. In the post-leak samples, the number generation has been improved by using the CryptGenRandom API function. Only if this function fails are the previous functions used.</p>
<p>3. Changes in MySleep function</p>
<p><em>Hacking Team</em> developers used their own MySleep function – in the samples from before the leak, it was implemented for bypassing sleep patches in many sandboxes. It consisted of the GetCurrentThread and WaitForSingleObject <em>Windows</em> API functions. In the post-leak samples, the MySleep function is still present, but now comprises the CreateEvent, WaitForSingleObject and CloseHandle <em>Windows</em> API functions.</p>
<h4><a class="chapter" name="h4-4-change-fake-error-message-strings"></a>4. Change in fake error message strings</h4>
<p>The pre-leak samples contain fake error message strings to be used in case the spyware is run with a system process ID (i.e. 0 or 4). A process executed by a regular user would never have these ID values, so this trick might be aimed at sandboxes or emulators.</p>
<p>The content of the fake error messages had been changed regularly before the leak; the history of these changes was revealed in the leaked source code (Figure 5).</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/6915/3926/5013/Figure_5.png" alt="Figure 5.png" width="633" height="418" /><span class="centered-caption">Figure 5: Fake strings history in the Scout leaked source code. RCS 9.5 includes Scout versions 11 and 12.</span></p>
<p>In the post-leak samples, the strings have been changed again, this time to the message 'Aborting now'.</p>
<h4><a class="chapter" name="h4-5-change-user-agents"></a>5. Change in user agents</h4>
<p>Compared to pre-leak samples, some of the parameters of the user-agent string used for HTTP protocol when communicating with the C&amp;C server are different in the newer samples. (See Figures 6 to 10.)</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/8615/3926/5081/Figure_6.png" alt="Figure 6.png" width="723" height="274" /><span class="centered-caption">Figure 6: User-agent string history in the Scout leaked source code. RCS 9.4 includes Scout version unknown; RCS 9.5 includes Scout versions 11 and 12.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/2915/3926/5120/Figure_7.png" alt="Figure 7.png" width="655" height="57" /><span class="centered-caption">Figure 7: Altered user-agent string in Scout version 15.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/2315/3926/5146/Figure_8.png" alt="Figure 8.png" width="616" height="56" /><span class="centered-caption">Figure 8: Altered user-agent string in Scout version 17.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/5315/3926/5208/Figure_9.png" alt="Figure 9.png" width="618" height="59" /><span class="centered-caption">Figure 9: Altered user-agent string in Scout version 22.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/7315/3926/5245/Figure_10.png" alt="Figure 10.png" width="618" height="56" /><span class="centered-caption">Figure 10: Altered user-agent string in Scout version 28.</span></p>
<h4><a class="chapter" name="h4-6-changes-strings-used-campc-sync"></a>6. Changes in strings used for C&amp;C sync</h4>
<p>The URL path used for HTTP protocol when communicating with the C&amp;C server is another part of the code that was frequently changed in the pre-leak samples. In the post-leak samples, these paths also vary from sample to sample.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/3915/3926/5311/Figure_11.png" alt="Figure 11.png" width="513" height="219" /><span class="centered-caption">Figure 11: Strings used from C&amp;C sync in the Scout leaked source code. RCS 9.4 includes Scout version unknown.; RCS 9.5 includes Scout versions 11 and 12.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/1315/3926/5351/Figure_12.png" alt="Figure 12.png" width="275" height="38" /><span class="centered-caption">Figure 12: Alter URL Sync string in Scout version 15.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/2815/3926/5370/Figure_13.png" alt="Figure 13.png" width="302" height="41" /><span class="centered-caption">Figure 13: Alter URL Sync string in Scout version 17.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/1415/3926/5439/Figure_14.png" alt="Figure 14.png" width="276" height="41" /><span class="centered-caption">Figure 14: Alter URL Sync string in Scout version 18.</span></p>
<p> </p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/9815/3926/5472/Figure_15.png" alt="Figure 15.png" width="229" height="36" /><span class="centered-caption">Figure 15: Alter URL Sync string in Scout version 28.</span></p>
<p> </p>
<h2><a class="chapter" name="h2-conclusion"></a>Conclusion</h2>
<p>None of these indicators, by themselves, represents conclusive evidence of <em>Hacking Team</em>'s renewed activity. However, viewing them as a whole lets us claim with high confidence that, with one obvious exception, the post-leak samples we've analysed are indeed the work of the <em>Hacking Team</em> developers, and not the result of source code reuse by unrelated actors, such as in the case of Callisto Group in 2016.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] The Citizen Lab. Mapping Hacking Team's "Untraceable" Spyware. February 2014. <a href="https://citizenlab.ca/2014/02/mapping-hacking-teams-untraceable-spyware/" target="_blank">https://citizenlab.ca/2014/02/mapping-hacking-teams-untraceable-spyware/</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] Franceschi-Bicchierai, L. Spy Tech Company 'Hacking Team' Gets Hacked. Motherboard. July 2015. <a href="https://motherboard.vice.com/en_us/article/gvye3m/spy-tech-company-hacking-team-gets-hacked" target="_blank">https://motherboard.vice.com/en_us/article/gvye3m/spy-tech-company-hacking-team-gets-hacked</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] Hern, A. Hacking Team hacked: firm sold spying tools to repressive regimes, documents claim. The Guardian. July 2015. <a href="https://www.theguardian.com/technology/2015/jul/06/hacking-team-hacked-firm-sold-spying-tools-to-repressive-regimes-documents-claim" target="_blank">https://www.theguardian.com/technology/2015/jul/06/hacking-team-hacked-firm-sold-spying-tools-to-repressive-regimes-documents-claim</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] F-Secure Labs. Callisto Group. April 2017. <a href="https://www.f-secure.com/documents/996508/1030745/callisto-group" target="_blank">https://www.f-secure.com/documents/996508/1030745/callisto-group</a>.</p>
<p><a class=" anchor" name="ref5"></a>[5] Franceschi-Bicchierai, L. Hacking Team Is Still Alive Thanks to a Mysterious Investor From Saudi Arabia. Motherboard. January 2018. <a href="https://motherboard.vice.com/en_us/article/8xvzyp/hacking-team-investor-saudi-arabia" target="_blank">https://motherboard.vice.com/en_us/article/8xvzyp/hacking-team-investor-saudi-arabia</a>.</p> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2018/VB2018-Kafka.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=VB2018 paper: From Hacking Team to hacked team to...?&url=https://www.virusbulletin.com/virusbulletin/2019/01/vb2018-paper-hacking-team-hacked-team"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2019/01/vb2018-paper-hacking-team-hacked-team'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2019/01/vb2018-paper-hacking-team-hacked-team&title=VB2018 paper: From Hacking Team to hacked team to...?"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2019/01/vb2018-paper-hacking-team-hacked-team&t=VB2018 paper: From Hacking Team to hacked team to...?"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2019/01/vb2018-paper-hacking-team-hacked-team"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>