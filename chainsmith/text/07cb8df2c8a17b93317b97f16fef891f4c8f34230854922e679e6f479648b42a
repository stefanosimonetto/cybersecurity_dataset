Nssl

Get link

Facebook

Twitter

Pinterest

Email

Other Apps

August 16, 2006

I'm reading a book about VPNs (to be reviewed shortly) and I found myself in the section on SSL.  I wondered if a SSL-aware version of Netcat existed.  I know there are versions of Netcat that provide encryption, like Cryptcat, but I did not know of one that supported SSL -- until now.I found Nssl, which works very well.  Consider the following:orr:/usr/local/src$ fetch  http://superb-east.dl.sourceforge.net/sourceforge/nssl/nssl.005.tgznssl.005.tgz                                  100% of   10 kB  615 kBpsorr:/usr/local/src$ tar -xzvf nssl.005.tgz x nssl/x nssl/Makefilex nssl/nssl.cx nssl/nssl.hx nssl/pem_bin.hx nssl/readme.txtx nssl/server.pemx nssl/sock.cx nssl/sock.hx nssl/sslut.cx nssl/sslut.hx nssl/utils.cx nssl/utils.horr:/usr/local/src$ cd nsslorr:/usr/local/src/nssl$ makegcc -Wall -O2 -I /usr/local/ssl/include -c nssl.cgcc -Wall -O2 -I /usr/local/ssl/include -c sslut.cgcc -Wall -O2 -I /usr/local/ssl/include -c sock.cgcc -Wall -O2 -I /usr/local/ssl/include -c utils.ccc -o nssl nssl.o sslut.o sock.o utils.o -lssl -lcryptoorr:/usr/local/src/nssl$ ./nssl -h./nssl [options]    where [options] are:  misc  : [-v] to unset autist mode          [-o] to output traffic in hex dump on stderr          [-r] to not use SSL mode (clear text)          [-c] to unset canonical mode for stdin (send data for each keypress)  client: [-b] to read banner and exit (timeout is 4 seconds)          [-p port] to use source port  server: [-l port] to listen on local port (wait for incoming connections)          [-e comm] to execute a command when connection has been established          [-f file] to load a different cert and privkey from PEM file  proxy:  [-x port] to bounce from local port to remote hostorr:/usr/local/src/nssl$ ./nssl www.usaa.com 443    HEAD / HTTP/1.0HTTP/1.1 302 FoundDate: Wed, 16 Aug 2006 20:21:03 GMTServer: IBM_HTTP_ServerLocation: https://www.usaa.com/Vary: Accept-EncodingConnection: closeContent-Type: text/html; charset=iso-8859-1A quick look with Tcpdump shows the traffic was indeed encrypted.  Cool.Thanks to Hanashi for reminding me of the following:orr:/home/richard$ openssl s_client -connect www.usaa.com:443CONNECTED(00000003)depth=1 /C=US/O=RSA Data Security, Inc./OU=Secure Server Certification Authorityverify error:num=19:self signed certificate in certificate chainverify return:0---Certificate chain 0 s:/C=US/ST=Texas/L=San Antonio/O=USAA/OU=EMITS/OU=Terms of use at  www.verisign.com/rpa (c)00/CN=www.usaa.com   i:/C=US/O=RSA Data Security, Inc./OU=Secure Server Certification Authority 1 s:/C=US/O=RSA Data Security, Inc./OU=Secure Server Certification Authority   i:/C=US/O=RSA Data Security, Inc./OU=Secure Server Certification Authority---Server certificate-----BEGIN CERTIFICATE-----MIID5TCCA1KgAwIBAgIQM6eQApUxIPUGYX0HiOZeaDANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXUlNBIERhdGEgU2VjdXJpdHksIEluYy4xLjAsBgNVBAsTJVNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDUwMTA2MDAwMDAwWhcNMDcwMTA2MjM1OTU5WjCBnjELMAkGA1UEBhMCVVMxDjAMBgNVBAgTBVRleGFzMRQwEgYDVQQHFAtTYW4gQW50b25pbzENMAsGA1UEChQEVVNBQTEOMAwGA1UECxQFRU1JVFMxMzAxBgNVBAsUKlRlcm1zIG9mIHVzZSBhdCB3d3cudmVyaXNpZ24uY29tL3JwYSAoYykwMDEVMBMGA1UEAxQMd3d3LnVzYWEuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDPOc0BV4QWA8nt42ZTaUQbFzFa4wM+gxLZblZEOaFVOpPVMnDzpBv6zu0UmvpDLoqWjTDTDPiF+VdUrQQTL6jtUjZAXAcmCKzxm+CHkvWeidgjFdrEaSA6oNcjWEXgBaxU79wBsREGSZc9J779CHuGBK3rwcl60LC0+15/mZM2tQIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADALBgNVHQ8EBAMCBaAwPAYDVR0fBDUwMzAxoC+gLYYraHR0cDovL2NybC52ZXJpc2lnbi5jb20vUlNBU2VjdXJlU2VydmVyLmNybDBEBgNVHSAEPTA7MDkGC2CGSAGG+EUBBxcDMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AudmVyaXNpZ24uY29tMG0GCCsGAQUFBwEMBGEwX6FdoFswWTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2Oa8PPgGrUSBgsexkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMA0GCSqGSIb3DQEBBQUAA34ALmetJRVFq2+sdYy3i9o92Nz2Dzd2yqDTA/+7NKg1zlXFNT2inzpsiGQf0fXGLCSoEbsDWv0rKcvi6rekUHuncXUvn5njSfHHzIqL3yVSjs3Qz9bNLQwwJhzn/NmgSihDeLRNjgxzu5rOArgXhycg6zjORGgFxL1bwoRgiXc=-----END CERTIFICATE-----subject=/C=US/ST=Texas/L=San Antonio/O=USAA/OU=EMITS/OU=Terms of use at  www.verisign.com/rpa (c)00/CN=www.usaa.comissuer=/C=US/O=RSA Data Security, Inc./OU=Secure Server Certification Authority---No client certificate CA names sent---SSL handshake has read 1724 bytes and written 340 bytes---New, TLSv1/SSLv3, Cipher is AES256-SHAServer public key is 1024 bitSSL-Session:    Protocol  : TLSv1    Cipher    : AES256-SHA    Session-ID: 5A2D000062DF67F204E08ECD2E9F0C7837DF37C9585858585E81E344AF060000    Session-ID-ctx:     Master-Key: 262D4F535ABA0DBB38906C1C377A33FE9620ADBE783BA130278BBB     EA41AE2C4B8CBB2683C823F071BFBC81162DDD7773    Key-Arg   : None    Start Time: 1155760473    Timeout   : 300 (sec)    Verify return code: 19 (self signed certificate in certificate chain)---HEAD / HTTP/1.0HTTP/1.1 302 FoundDate: Wed, 16 Aug 2006 20:34:42 GMTServer: IBM_HTTP_ServerLocation: https://www.usaa.com/Vary: Accept-EncodingConnection: closeContent-Type: text/html; charset=iso-8859-1read:errno=0That works too, although it doesn't support the other options in Nssl.
