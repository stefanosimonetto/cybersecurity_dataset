<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Prosecting the Citadel botnet - revealing the dominance of the Zeus descendent: part two</title>
<meta name="description" content="Citadel is a sophisticated descendent of the Zeus botnet. In this two-part article, Aditya Sood and Rohit Bansal provide insight into the bot's design components, including its system infection and data exfiltration tactics. In this, the second part of the article, Aditya and Rohit present the results of their experiments." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1730;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201409-Citadel-2"></a>Prosecting the Citadel botnet - revealing the dominance of the Zeus descendent: part two</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2014-09-08</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Aditya K.</span> <span class="surname">Sood</span></h3><span class="orgname">Michigan State University</span>, <span class="orgdiv">USA</span></div><div class="author titlepage"><h3 class="author"><span class="firstname">Rohit</span> <span class="surname">Bansal</span></h3><span class="orgname">Independent Security Researcher</span>, <span class="orgdiv">USA</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Martijn</span> <span class="surname">Grooten</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Citadel is a sophisticated descendent of the Zeus botnet. In this two-part article, Aditya Sood and Rohit Bansal provide insight into the bot&#39;s design components, including its system infection and data exfiltration tactics. In this, the second part of the article, Aditya and Rohit present the results of their experiments.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2014 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2653" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2653" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id3762251"></a></span></dt><dt><span class="sect1"><a href="#id3073318">1. Experimental results</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id4320065">1.1 Traffic analysis</a></span></dt><dt><span class="sect2"><a href="#id4174355">1.2 Bot&rsquo;s design and working</a></span></dt><dt><span class="sect2"><a href="#id4663023">1.3 Citadel&rsquo;s Snort signature</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3332484">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3762251"></a></h2></div></div></div><p>Recent years have seen a significant rise in cybercriminal activities, and in particular the theft of online banking credentials. The majority of cybercriminals use automated exploitation frameworks to infect computers and exfiltrate data. The most widely used weapons in this type of cybercrime are botnets. Botnets have been in existence for many years, but their design frameworks have changed over time. We are now seeing a third generation of botnets that are targeting the users of online financial services. This era of targeted attacks started with the rival Zeus and SpyEye botnets and is evolving. In this paper, we look at the design and working details of the Citadel botnet. Citadel, which is believed to have European origins, is a sophisticated descendent of the Zeus botnet. Our analysis provides insight into the design components of Citadel, including its system infection and data exfiltration tactics.</p><p>In the first part of this article we looked at Citadel&#39;s design and implementation. In this concluding part we present the results and analysis of our experiments. </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3073318"></a>1. Experimental results</h2></div></div></div><p>In this section, we present the results of the experiments we conducted on the Citadel botnet in order to understand infections in progress. </p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4320065"></a>1.1 Traffic analysis</h3></div></div></div><p>As a part of our experiment, we visited malicious domains serving Citadel. In addition to tracking phishing emails, we queried the malware domain repositories to find the live malicious domains. As Citadel implements geo IP filtering, it was a challenge for us to get hold of a sample. We used VPN servers in different countries so that our requests would be initiated from IP address ranges belonging to the same country as that in which Citadel was hosted. <a href="#figure.1">Figure 1</a> shows that we received the Citadel binary after after successfully accessing the malicious domain from our virtual environment. Once we had dumped the traffic into a pcap file, we performed offline analysis. We extracted the raw data from the pcap files using TCP session stream analysis and used tools such as foremost to get the binary. </p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Fetching the Citadel bot." src="/uploads/images/figures/2014/09/Citadel-fig5.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Fetching the Citadel bot.</b></p></div><p>As discussed earlier, our goal was to create a virtual environment for behavioural and static analysis including disassembling and debugging. When we extracted the executable and allowed it to install in the virtual environment, it failed. This is because Citadel has an anti-emulation checker that detects the presence of a virtual machine and halts its execution. We noticed a strange behaviour as our virtual machine started sending fake DNS traffic to non-existent domains. That is, we found that Citadel generates a large amount of fake traffic if it is installed in a virtual machine. In addition, it also knocks at the gate to communicate with the C&amp;C, but it will not get any response if present in a virtual machine. We believe that this tactic is used to confuse honeypots and cause traffic anomalies. <a href="#figure.2">Figure 2</a> shows some of the fake DNS traffic encountered during our experiment. The structure of the domains suggests that a Domain Generation Algorithm (DGA) is active. DGAs are basically used for generating a set of seemingly random domain names, one of which is registered by the bot herder for C&amp;C communication. The majority of generated domains result in NXDomain responses. </p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="Fake DNS traffic generated by the Citadel bot." src="/uploads/images/figures/2014/09/Citadel-fig6.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;Fake DNS traffic generated by the Citadel bot.</b></p></div><p>For behaviour analysis, we created a test environment without a virtual machine and installed the bot on it. Once the bot had successfully been installed, it needed to connect back to the C&amp;C. As discussed earlier, the bot first knocks at the gate before the redirection happens for the downloading of the configuration file and the executable. <a href="#figure.3">Figure 3</a> shows the communication. The bot interacts with the &lsquo;file.php&rsquo; gate file by sending a POST request with encrypted content. After that, Citadel issues another POST request to &lsquo;file.php&rsquo; to determine whether the &lsquo;config.bin&rsquo; file can be fetched. Once the gate has validated the request, Citadel issues a GET request to download the &lsquo;config.bin&rsquo; file in order to update the configuration in the infected system. </p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Fetching Citadel&rsquo;s configuration binary." src="/uploads/images/figures/2014/09/Citadel-fig7.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Fetching Citadel&rsquo;s configuration binary.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4174355"></a>1.2 Bot&rsquo;s design and working</h3></div></div></div><p>The Citadel bot is a ring 3 rootkit that installs itself in the user layer of the operating system and controls other applications using a technique known as hooking. Hooking allows the bot to intercept the communication flow among different applications running in the user space and alter their execution accordingly. The bot possesses the following characteristics:</p><div class="itemizedlist"><ul type="disc"><li><p>For installation, the bot begins wrapped up within a dropper. The dropper is what was downloaded from the malicious domain. After the dropper has been downloaded onto the infected machine, it melts away, resulting in the extraction of the bot. (&lsquo;Melting&rsquo; refers to a process of self destruction in which the primary executable deletes itself after extracting the compressed content.) Citadel has a built-in batch code that performs the melting, as shown in<a href="#figure.4">Figure 4</a> . </p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Dropper code." src="/uploads/images/figures/2014/09/Citadel-fig8.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Dropper code.</b></p></div></li><li><p>The dropper extracts the executable in the application directory &lsquo;%APPDATA%&rsquo; with a random name. At the same time, a &lsquo;Run&rsquo; key is created in the registry, containing a reference to the random executable (Citadel) in order to start it on every (re)boot of the system. Listing 1 shows the structure of the files and directories created by the dropper. </p><pre class="programlisting">C:\Documents and Settings\Administrator\Application Data\[random]
C:\Documents and Settings\Administrator\Application Data\[random]\[random].exe
C:\Documents and Settings\Administrator\Application Data\[random]\[random].tmp
HKCU\Software\Microsoft\Windows\CurrentVersion\Run

<span class="bold"><strong>Listing 1: Files and directory structure created by Citadel.</strong></span>
</pre></li><li><p>After this, Citadel is executed in the system. Citadel infects the primary explorer.exe process by creating a remote thread so that explorer becomes the primary process and the malicious process is its child process. In this way, Citadel acts as a parasite and uses the cover of explorer.exe to perform operations. When explorer.exe is infected, Citadel sends a POST request back to the domain to knock at the gateway, after which the C&amp;C serves the config.bin file to the location shown in Listing 2. </p><pre class="programlisting">C:\Documents and Settings\Administrator\Application Data\[random]\[random].afq
C:\Documents and Settings\Administrator\Local Settings\Temporary Internet Files\Content.IE5\[random]\config.bin

<span class="bold"><strong>Listing 2: Config.bin file location.</strong></span>
</pre></li><li><p>After the bot has read the configuration file, it deletes several files from the system to hide its traces. This includes the temporary files, config.bin, and several other cookies files, as shown in Listing 3.</p><pre class="programlisting">C:\Documents and Settings\Administrator\Application Data\[random]\random.tmp
C:\Documents and Settings\Administrator\Cookies\<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="7110151c181f1802050310051e033110151e1314">[email&#160;protected]</a>[1].txt
C:\Documents and Settings\Administrator\Cookies\<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c3a2a7aeaaadaab0b7b1a2b7acb183a4acaca4afa6">[email&#160;protected]</a>[1].txt
C:\Documents and Settings\Administrator\Cookies\<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="ff9e9b929691968c8b8d9e8b908dbf959e899e">[email&#160;protected]</a>[1].txt
C:\Documents and Settings\Administrator\Cookies\<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="99f8fdf4f0f7f0eaedebf8edf6ebd9e9ebf6f4f6edf0f6f7b7f8fdf6fbfc">[email&#160;protected]</a>[1].txt
C:\Documents and Settings\Administrator\Cookies\<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="e786838a8e898e94939586938895a7949289">[email&#160;protected]</a>[1].txt
C:\Documents and Settings\Administrator\Cookies\<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="fe9f9a939790978d8a8c9f8a918cbe899f92959b8c909b898d">[email&#160;protected]</a>[1].txt
C:\Documents and Settings\Administrator\Local Settings\Temporary Internet Files\Content.IE5\[random]\config.bin

<span class="bold"><strong>Listing 3: Files deleted by Citadel including cookies files.</strong></span>
</pre></li><li><p>Citadel performs API hooking, which means it hijacks the communication flow of various APIs provided by the Windows operating system. The primary function of Citadel is to conduct man-in-the-browser (MitB) attacks. As Citadel is present in the system, it can easily hook built-in and system browser-based libraries to control the output of different functions. Having the MitB capability means that Cita-del can steal information from browsers, alter HTTP data and responses, and perform web injections. This is all possible through hooking. <a href="#table.1">Table 1</a> shows how Citadel hooks different functions in browser-specific libraries. </p><div class="table"><a id="table.1"></a><table border="1" summary="Hooked functions in different browsers."><colgroup><col /><col /></colgroup><thead><tr><th align="center">Browser type</th><th align="center">Real-time browser hooking examples</th></tr></thead><tbody><tr><td>Internet Explorer</td><td>HTTPSendRequest, InternetReadFile, InternetWriteFile, HTTPQueryInfo, InternetQueryDataAvailable, etc. functions in WININET.DLL.</td></tr><tr><td>Mozilla Firefox / Opera</td><td>PR_WRITE (p1, p2, p3) function is hooked in NSPR4.DLL. Other hooked functions are PR_READ, PR_CLOSE, PR_OPEN, PR_OpenTCPSocket, etc. </td></tr><tr><td>Google Chrome</td><td>Hooked functions are SSL_Write, PRReadFN and PRWriteFN in PRIOMethods structure present in CHROME.DLL. Additional ones are Open, Close, Read and Write.</td></tr></tbody></table><p class="title"><b>Table&nbsp;1.&nbsp;Hooked functions in different browsers.</b></p></div></li></ul></div><p>The details of the different commands used by Citadel are presented in <a href="#table.2">Table 2</a>.</p><div class="table"><a id="table.2"></a><table border="1" summary="List of commands used by Citadel botnet."><colgroup><col /><col /></colgroup><thead><tr><th align="center">Citadel commands</th><th align="center">Description</th></tr></thead><tbody><tr><td>dns_filter_add</td><td>Set the mask (filter) to activate browser-based DNS redirection</td></tr><tr><td>dns_filter_remove</td><td>Remove the mask (filter) to disable the DNS redirection in the browser</td></tr><tr><td>url_open</td><td>Force the browser to open a specific web page for advertisement or other purposes</td></tr><tr><td>user_execute</td><td>Download file from remote source and execute it</td></tr><tr><td>user_destroy</td><td>Kill other adversaries (malware) in the system</td></tr><tr><td>user_logoff</td><td>Force the user to terminate the active session </td></tr><tr><td>bot_uninstall</td><td>Uninstall (unload) the bot from the compromised machine</td></tr><tr><td>bot_update</td><td>Update the configuration of the bot present in the infected machine</td></tr><tr><td>os_shutdown</td><td>Shut down the infected system running a bot</td></tr><tr><td>os_reboot</td><td>Reboot the infected system running a bot</td></tr><tr><td>user_cookies_get</td><td>Steal cookies from the browser running on the infected system</td></tr><tr><td>user_cookies_remove</td><td>Remove (clear) cookies from the browser running on the infected system </td></tr><tr><td>user_certs_get</td><td>Collect the stored certificates from the infected system</td></tr><tr><td>user_certs_remove</td><td>Remove the stored certificates from the infected system</td></tr><tr><td>user_homepage_set</td><td>Hijack the default web page in the browser running on the infected system</td></tr><tr><td>user_flashplayer_get</td><td>Collect the Local Shared Object (LSO), i.e. SOL files, from the infected system</td></tr><tr><td>user_flashplayer_remove</td><td>Delete the SOL files from the infected system</td></tr><tr><td>bot_bc_add</td><td>Create a back-connect proxy connection with the bot</td></tr><tr><td>bot_bc_remove</td><td>Remove the back-connect proxy connection activated on the bot </td></tr><tr><td>bot_httpinject_enable</td><td>Enable the functionality in the bot to trigger web injections in the browser</td></tr><tr><td>bot_httpinject_disable</td><td>Disable the web injection capability of the bot</td></tr><tr><td>info_get_software</td><td>Collect the list of the installed software on the infected machine including version, company, product, etc.</td></tr><tr><td>info_get_antivirus</td><td>Get the information about the installed anti-virus on the infected system </td></tr><tr><td>info_get_firewall</td><td>Get the information about the installed firewall on the infected system</td></tr><tr><td>webinjects_update</td><td>Update web inject settings on the bot</td></tr><tr><td>user_url_block</td><td>Block the target URL</td></tr><tr><td>user_url_unblock</td><td>Unblock the target URL</td></tr><tr><td>user_homepage_set</td><td>Configure the home page of the browser</td></tr><tr><td>user_ftpclients_get</td><td>Get the stolen FTP credentials information</td></tr><tr><td>user_emailclients_get</td><td>Get the stolen email credentials information</td></tr><tr><td>module_execute_enable</td><td>Enable the remote file execute module</td></tr><tr><td>module_execute_disable</td><td>Disable the remote file execute module</td></tr><tr><td>module_download_enable</td><td>Enable the remote file download module</td></tr><tr><td>module_download_disable</td><td>Disable the remote file download module</td></tr><tr><td>search_file</td><td>Search for a specific file</td></tr><tr><td>upload_file</td><td>Upload a file</td></tr><tr><td>download_file</td><td>Download a file</td></tr><tr><td>ddos_start</td><td>Start DDoS attack</td></tr><tr><td>ddos_stop</td><td>Stop DDoS attack</td></tr><tr><td>httpinject_enable</td><td>Enable the HTTP inject module</td></tr><tr><td>httpinject_disable</td><td>Disable the HTTP inject module</td></tr></tbody></table><p class="title"><b>Table&nbsp;2.&nbsp;List of commands used by Citadel botnet.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4663023"></a>1.3 Citadel&rsquo;s Snort signature</h3></div></div></div><p>We also constructed different Snort signatures for Citadel. One of the signatures that we used to detect C&amp;C communication is included in this section. The MD5 of the sample that we used is: dce84b4cf5b4edbcbf394fef14abc572. Listing 4 shows the Snort signature. </p><pre class="programlisting">alert tcp $HOME_NET 1024: -&gt; $EXTERNAL_NET any 
(
msg:&quot;citadel - CnC Communication &quot;; 
flow: established,from_client; 
content:&quot;POST &quot;; 
depth:5; 
content:&quot;.php HTTP|2f|1.1|0d 0a|Accept|3a| *|2f|*|0d 0a|User-Agent|3a| Mozilla&quot;; 
content:&quot;|0d 0a|Content-Length: 1&quot;;
content:&quot;|0d 0a|Connection|3a| Keep-Alive|0d 0a|Cache-Control|3a| no-cache|0d 0a 0d 0a|&quot;; distance:2;
 within:54; 
isdataat:100,relative; 
content:!&quot;|0a|&quot;; 
distance:0 ;
within:100; 
content:!&quot;|0d 0a|Cookie|3a| &quot;;
content:!&quot;Content-Type|3a| &quot;; 
content:!&quot;NetflixId=&quot;; 
reference:md5, dce84b4cf5b4edbcbf394fef14abc572; 
reference:url, &lt;Reference to Citadel Details&gt;; 
classtype:trojan-activity; 
sid:XXXXXXXXX; rev:1;
 )

<span class="bold"><strong>Listing 4: Citadel Snort signature &ndash; C&amp;C communication channel.</strong></span>
</pre><p>The signature is based on the HTTP header characteristics that are unique to Citadel variants. The &lsquo;content&rsquo; tag allows analysts to specify content in the packet payload by stating explicitly the type of HTTP request to be used. The &lsquo;depth&rsquo; command tells Snort how far it has to look. In our case, Snort looks at the first five bytes of the payload. We used a distance of 0, which means that Snort does not have to ignore any pattern from the start of the payload. The &lsquo;within&rsquo; value of 54 indicates that at least this 54-byte pattern should be matched. For Snort signatures, an HTTP header containing a string such as &lsquo;.php&rsquo; , &lsquo;Accept:*/*&rsquo; or &lsquo;User-Agent: Mozilla&rsquo; can be included along with an &lsquo;isdataat&rsquo; value of 100, which actually checks the presence of 100 bytes of encrypted payload communication data to the C&amp;C. It has been observed that Zbot and Zbot variants communicate with an encrypted payload that usually varies from 100 to 130 bytes in size (even legacy Zeus uses the same mechanism, indicating the sharing of the same old Zeus code). We also included negative content-matching strings such as &lsquo;|0d 0a|Cookie|3a|&rsquo;, &lsquo;Content-Type|3a|&rsquo; and &lsquo;NetflixId=&rsquo; into the signature to counteract false positives. For privacy reasons, we cannot reveal the list of IP addresses that were tracked using this signature.</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3332484"></a>Conclusion</h2></div></div></div><p>In this paper, we have presented a detailed analysis covering the component design and behaviour of the Citadel botnet. We have noticed that Citadel is improving with every new version. However, its core design remains the same, with modifications only made to add new components. We noticed traces of Zeus while analysing Citadel. Citadel&rsquo;s components include a builder, a gate and a C&amp;C panel that have been designed in a similar manner to Zeus. </p><p>Citadel can be thought of as a userland rootkit with man-in-the-browser (MitB) capabilities. It implements anti-tracking and anti-reversing techniques such as geo IP filtering and virtual machine detection. In addition to this, Citadel uses gateways to restrict direct access to the C&amp;C (similar to the mechanism deployed by Zeus). Citadel uses a very sophisticated model of data exfiltration from infected machines that shows significant improvements over that used by Zeus. Citadel supports components such as form grabbers, web injects, a keylogger, screenshot stealer, video grabber and software grabber to exfiltrate stolen information. </p><p>Citadel&rsquo;s designers have worked extensively on the small issues in order to optimize components and secure the communication channel. For example, the encryption process still uses Zeus code, but it has been made more complex by introducing additional encryption layers. Citadel has implemented the concept of bot authentication, in which the bot has to send the login key in an encrypted POST request in order to retrieve the configuration profile &ndash; something that is missing from Zeus. The format of the configuration settings is similar to that of Zeus, but with additional settings. All of these characteristics show that Citadel is a well-constructed botnet with strong protection features. Interestingly, the majority of anti-virus systems raise the same alert for Citadel as for Zeus (Zbot) if it is detected in a system. This similarity means that the signatures or heuristics of Citadel closely match those of Zeus. Based on the analysis presented in this paper, we can safely conclude that Citadel is a Zeus descendent with new characteristics and more optimizations. </p></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2014/vb201409-Citadel.pdf" target="_blank"><img class="ccm-image-block responsive" alt="" src="/uploads/images/buttons/pdf-download-button.jpg" onmouseover="this.src = '/uploads/images/buttons/pdf-download-button-hover.jpg'" onmouseout="this.src = '/uploads/images/buttons/pdf-download-button.jpg'" border="0" height="45" width="262"></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Prosecting the Citadel botnet - revealing the dominance of the Zeus descendent: part two&url=https://www.virusbulletin.com/virusbulletin/2014/09/prosecting-citadel-botnet-revealing-dominance-zeus-descendent-part-two"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2014/09/prosecting-citadel-botnet-revealing-dominance-zeus-descendent-part-two'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2014/09/prosecting-citadel-botnet-revealing-dominance-zeus-descendent-part-two&title=Prosecting the Citadel botnet - revealing the dominance of the Zeus descendent: part two"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2014/09/prosecting-citadel-botnet-revealing-dominance-zeus-descendent-part-two&t=Prosecting the Citadel botnet - revealing the dominance of the Zeus descendent: part two"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2014/09/prosecting-citadel-botnet-revealing-dominance-zeus-descendent-part-two"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>