<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: The TAO of Automated Iframe Injectors – Building Drive‑by Platforms For Fun and Profit</title>
<meta name="description" content="Aditya Sood and Rohit Bansal present the design of distributed infection models used by attackers to inject malicious iframes on the fly in order to conduct large-scale drive-by download attacks." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 5102;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1>VB2016 paper: The TAO of Automated Iframe Injectors – Building Drive‑by Platforms For Fun and Profit</h1>
<h3>Aditya K. Sood</h3>
<p>Blue Coat Systems, USA</p>
<h3>Rohit Bansal</h3>
<p>SecNiche Security Labs, USA</p>
<p><em>Copyright © 2016 Virus Bulletin </em></p>
<hr />
<p> </p>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-9130" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="500">Table of contents</div><div id="ccm-remo-expand-content-9130" class="ccm-remo-expand-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /><a class="toc-level2" href="#h2-introduction">Introduction</a><br /><a class="toc-level2" href="#h2-iframe-injector-classification">Iframe Injector Classification</a><br /><a class="toc-level2" href="#h2-class-e-working-model">Class E: Working Model</a><br /><a class="toc-level2" href="#h2-class-g-working-model">Class G: Working Model</a><br /><a class="toc-level2" href="#h2-class-s-working-model">Class S: Working Model</a><br /><a class="toc-level2" href="#h2-comparative-study">Comparative Study</a><br /><a class="toc-level2" href="#h2-conclusion">Conclusion</a><br /><a class="toc-level2" href="#h2-references">References</a><br /><a class="toc-level2" href="#h2-appendix">Appendix</a></p>
<p> </p></div></div><h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p>In this paper, we present the design of distributed infection models used by attackers to inject malicious iframes on the fly in order to conduct large-scale drive-by download attacks. We use the term 'iframe injectors', which refers to the automated tools used by attackers to trigger mass infections. The iframe injectors can either be standalone tools or embedded components within botnets. We discuss the classification of iframe injectors and dissect a number of existing tools in order to understand their functionalities and how they are deployed effectively.</p>
<h2><a class="chapter" name="h2-introduction"></a>Introduction</h2>
<p>Iframes are inline frames, which are HTML objects that are embedded in a web page to fetch content (HTML or JavaScript) from a third-party domain. The content is treated as a part of the primary web page and is served when that web page is accessed. This is a known HTML functionality and is heavily used for content sharing among multiple domains. However, attackers abuse this functionality in multiple variants of drive-by download attacks [<a href="#ref1">1</a>] as a part of massive iframe infection campaigns [<a href="#ref2">2</a>, <a href="#ref3">3</a>]. An attack starts with a malicious domain that hosts malware. The attackers then embed a URL referencing the malware in an iframe and place that in a compromised website (or any other self-managed website). Users are then coerced into visiting the web page that has the iframe embedded in it. When the user visits the page, the malware is fetched from the malicious domain and the end-user system is infected. The same attack model has been used to serve exploits through browser exploit packs (BEPs) such as Beta [<a href="#ref4">4]</a>, Styx [<a href="#ref5">5</a>], Sweet Orange [<a href="#ref6">6</a>], Blackhole [<a href="#ref7">7</a>], Neutrino [<a href="#ref8">8</a>], etc. In the case of BEPs, the malicious iframe loads the BEP package in full, and the browser environment is fingerprinted against known vulnerable plug-ins and inherent components. If a vulnerable component (or plug-in) is found, the exploit is served, which in turn downloads the malware onto the end-user system. In reality, malware can be served directly or as part of an exploit delivering mechanism in which first a vulnerability is exploited.</p>
<h2><a class="chapter" name="h2-iframe-injector-classification"></a>Iframe Injector Classification</h2>
<p>We categorize iframe injectors into three primary classes based on the origination of attack and infection techniques, as follows:</p>
<ul>
<li><strong>Class E:</strong> This category comprises iframe injectors that are used as embedded components in malware that is installed on the end-user systems. Class E is commonly used as one of the primary components of botnet design. The bots are equipped with the iframe injector component so that hosting servers on the Internet can be scanned using compromised end-user systems to infect the servers with malicious iframes. Lately, we have seen bots being designed specifically for automated iframe injections. Class E bots also have the capability of stealing the credentials that end-users use to access remote hosting servers.</li>
<li><strong>Class G:</strong> This category of iframe injectors is based on the extended functionality of Class E iframe injectors. In Class G, the bot steals the credentials of different services, such as FTP, SSH, etc., used by the end-user to access remote servers. The bot steals the credentials and sends it to the embedded gateway component, which is deployed as an additional layer in the C&amp;C architecture. The gateway component then triggers iframe injections in the remote servers, which have had their credentials stolen by the bot.</li>
<li><strong>Class S:</strong> This category comprises iframe injectors that are used as standalone components. Class S injectors are placed directly on the compromised hosting servers and are executed to trigger infections. The attacker simply deploys the code on the compromised server and executes it. Class S injectors scan the Internet-facing directories on the hosting server and look for the HTML, JS, PHP, etc. files in which iframes need to be embedded.</li>
</ul>
<p>In the next section, we discuss the infection models of Class E, Class G and Class S iframe injectors.</p>
<h2><a class="chapter" name="h2-class-e-working-model"></a>Class E: Working Model</h2>
<p>Automated iframe injections have become the <em>de facto</em> characteristic of a number of botnets. In fact, botnets are being designed specifically to conduct scanning across remote websites, thereby infecting them with malicious JavaScripts. The attackers still harness the power of standard botnet design in which compromised systems running the bot trigger scans against a number of websites hosted on servers running insecure deployments of FTP servers, SSH servers etc. This process is followed to conduct mass infections so that websites can be infected on the fly. How is this accomplished? <a href="#figure1">Figure 1</a> highlights an execution flow, which is explained as follows:</p>
<ol>
<li>The user receives a spear-phishing email with an embedded malicious link. The attackers can also spread malicious links through third-party platforms such as online social networks (OSNs) to force users to visit the domain present in the URL. Once the user falls for social engineering trick and clicks the link, the browser opens the URL to load the content served.</li>
<li>Once the link is clicked, a drive-by download attack takes place, in which the browser is exploited against a known or unknown vulnerability that is present in the inherent component or third-party plug-in. Once the browser is exploited, it downloads the bot with the capability of performing automated injections on remote websites.</li>
<li>Once the bot has been downloaded onto the user's system, it starts scanning remote servers hosting websites for potential insecure deployments such as FTP and SSH servers running with weak or no credentials. Once an insecure deployment is detected, the bot starts scanning directories using recursive techniques in order to obtain a list of web directories.</li>
<li>Once a list of web directories is obtained, the bot looks for files that are exposed on the web. For example, it searches for 'index.html' or 'index.php' files in the 'www' or 'public_html' directory. The reason for this is simple: the bot prefers to inject files that are exposed on the Internet and which can be loaded in the browser.</li>
<li>Once the files are accessed, the bot starts injecting iframe codes into the preferred web pages. Since the iframe is an inline frame that loads content from a third-party domain in the parent website, the attackers supply malicious URLs in the iframes so that they are downloaded dynamically onto the users' machines.</li>
<li>Once successful injections have been made on remote websites, the bot starts collecting information about the injections, including remote IPs, target resources, etc.</li>
<li>Finally, the bot transmits the information gathered about the automated injections to the attacker‑controlled Command and Control (C&amp;C) server. The compromised websites are later sold in the underground community as a part of a Crimeware-as-a-Service (CaaS) model [<a href="#ref9">9</a>]. <a class=" anchor" name="figure1"></a></li>
</ol>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/4314/7644/5202/Sood-vb2016-fig1.jpg" alt="Sood-vb2016-fig1.jpg" width="845" height="500" /><span class="centered-caption">Figure 1: Class E: automated iframe injection model.</span></p>
<h2><a class="chapter" name="h2-class-g-working-model"></a>Class G: Working Model</h2>
<p>In this section, we discuss the working model of the Class G iframe injectors. This model can be considered as an extension to the Class E model, but it performs iframe injections differently. <a href="#figure2">Figure 2</a> highlights the working model of Class G injectors. A general execution flow is explained as follows:</p>
<ol>
<li>The user visits the malicious domain as a result of a spear-phishing attack or any other infection strategies adopted by the attackers.</li>
<li>The user's system is compromised through a drive-by download attack by the installation of a bot (malware) as a result of the exploitation of a vulnerability.</li>
<li>The bot starts its monitoring mode, in which it filters the user's communication with remote servers. If the communication uses protocols such as FTP, SSH, etc., which are used for managing remote servers, the bot sniffs the credentials and passes them over to the gateway component running as part of the C&amp;C.</li>
<li>The gateway has the functionality of injecting iframes into the web directories present on the remote servers. Note that in Class G, it is the gateway component that is triggering the injections, whereas in Class E, the injections are performed by the bot.</li>
<li>The gateway scans the remote directories and looks for potential files, such as ASP, JSP, PHP, HTML, JS, etc., into which to embed iframes, and verifies the files afterwards to make sure that injections have been successful and that the file layout is intact. Successful infections are reported back to the C&amp;C panel to keep track of infected servers. <a class=" anchor" name="figure2"></a></li>
</ol>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/5214/7644/5288/Sood-vb2016-fig2.jpg" alt="Sood-vb2016-fig2.jpg" width="845" height="485" /></p>
<p class="centered-caption">Figure 2: Class G: automated iframe injection model.</p>
<h2><a class="chapter" name="h2-class-s-working-model"></a>Class S: Working Model</h2>
<p>In 2014, we presented a detailed analysis of NiFramer [<a href="#ref10">10</a>], a Class S automated iframe injector tool used to infect the CPanel software used for managing hosting on servers. Figure 3 highlights the working model of Class S injectors. A general execution flow is explained as follows:</p>
<ol>
<li>The attacker uses stolen credentials to log into the remote hosting servers.</li>
<li>The attacker executes the automated iframe injection code to scan the directories and specific files in order to obtain their handles and access rights.</li>
<li>The attacker injects iframe code into the web pages, such as JSP, ASP, PHP, etc., present in the directories to make sure that the unauthorized code works inline with the legitimate code.</li>
<li>The infected web pages are then distributed as a part of drive-by download infections in order to download malware onto the end-user systems. <a class=" anchor" name="figure3"></a></li>
</ol>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/7214/7644/5402/Sood-vb2016-fig3.jpg" alt="Sood-vb2016-fig3.jpg" width="1041" height="654" /><span class="centered-caption">Figure 3: Class S: automated iframe injection model.</span></p>
<p>Our NiFRamer [<a href="#ref11">11</a>] analysis details how automated code is executed in the compromised remote servers.</p>
<h2><a class="chapter" name="h2-comparative-study"></a>Comparative Study</h2>
<p>In this study, we dissected different iframe injectors to understand their functionalities and infection mechanisms, including how they are designed. We mapped the different classes of iframe injectors discussed earlier to understand their characteristics. Let's take a look at the different features of automated iframe injectors:</p>
<ul>
<li><strong>JavaScript obfuscation</strong>: This is performed to reduce the size of injected iframes and make the code harder to understand. Researchers have to de-obfuscate the code in order to understand the internals.</li>
<li><strong>Automated injections</strong>: The iframes are injected in an automated manner with the use of scripts rather that using any manual efforts. Automated injection capabilities allow the attacker to infect directories or web pages on a large scale in order to conduct mass infections.</li>
<li><strong>Infrastructure scanning</strong>: As parts of bots, the automated iframe injectors have embedded functionality that enables them to conduct scans from the end-user systems for specific services such as FTP, SSH, etc. on the targeted hosting servers. The attacks appear to have originated from the end-user systems, but actually iframe bots (or embedded iframe components) abuse the compromised end-user systems to trigger additional sets of infections by compromising more systems.</li>
<li><strong>Directory/file scanning</strong>: Once the hosting servers are compromised, iframe injectors conduct inline scanning to surf through directories and files for injecting iframes.</li>
<li><strong>Mass infections</strong>: This is one of the main features of automated iframe injectors because, being automated by nature, they can infect multiple directories (hosts) on shared hosting servers to infect large sets of websites on the fly.</li>
<li><strong>Directory privilege check</strong>: Before the iframes are injected, they carry out a privilege check on the directories and files to ensure the injections will be done in the targeted directories with write access enabled. This is done to ensure that injections are triggered in a stealthy manner and that unnecessary logs are not generated.</li>
<li><strong>File filtering</strong>: Files that are going to be accessible over the Internet are filtered for iframe injections. Files such as HTML/JS/PHP, etc. are of utmost priority. This makes the automated iframe injection process targeted and only required files are infected.</li>
<li><strong>Injected file verification</strong>: This component ensures that the iframe injections occur successfully by verifying that the files have the proper structure and that the iframes are placed in the right positions in the file. This is done to make sure that when files are accessed in browsers by the targeted users, the files render appropriately, thereby allowing successful rendering of iframes.</li>
<li><strong>C&amp;C management panel</strong>: This is a piece of remote web management software operated by the attackers as part of their C&amp;C activities. This is a centralized place where information related to all bots and successful infections is stored. The attacker can issue remote commands to bots to update the iframe contents on the fly.</li>
<li><strong>Stealer support</strong>: Stealers are additional components in the bot that are used in conjunction with the automated iframe injectors to steal credentials that are used by the end-users to access remote servers. This is an additional behavioural feature in which the iframe bot can simply reuse the stolen credentials rather than perform network scanning. Stealer components use a technique known as hooking to control the execution flow across various functions in the libraries. <a href="#figureA2">Figure A2</a> in the Appendix shows the 'stealer.h' file used in the Auto-Iframer bot.</li>
</ul>
<p><span class="anchor"><a href="#table1">Table 1</a> shows a feature comparison of the different classes of iframe injectors. <a href="#table2">Table 2</a> shows the classification of a number of different iframe injectors.</span><a class=" anchor" name="table1"></a></p>
<table class="table table-striped" border="0">
<tbody>
<tr>
<td><strong>SNo</strong></td>
<td><strong>Feature comparison</strong></td>
<td><strong>Class S</strong></td>
<td><strong>Class E</strong></td>
<td><strong>Class G</strong></td>
</tr>
<tr>
<td>1</td>
<td>JavaScript obfuscation</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>2</td>
<td>Automated injections</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>3</td>
<td>Infrastructure scanning</td>
<td>No</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>4</td>
<td>Directory/file scanning</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>5</td>
<td>Mass infections</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>6</td>
<td>Directory privilege check</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>7</td>
<td>File filtering</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>8</td>
<td>Injected file verification</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>9</td>
<td>C&amp;C management panel</td>
<td>No</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>10</td>
<td>Stealer support</td>
<td>No</td>
<td>Yes</td>
<td>No</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 1: Feature comparison: Class S, Class E and Class G iframe injectors.</p>
<p><a class=" anchor" name="table2"></a></p>
<table class="table table-striped" border="0">
<tbody>
<tr>
<td><strong>SNo</strong></td>
<td><strong>Iframe injector</strong></td>
<td><strong>Classification</strong></td>
</tr>
<tr>
<td>1</td>
<td>NiFramer</td>
<td>Class S</td>
</tr>
<tr>
<td>2</td>
<td>ZFramer</td>
<td>Class S</td>
</tr>
<tr>
<td>3</td>
<td>Citadel Framer</td>
<td>Class G</td>
</tr>
<tr>
<td>4</td>
<td>Aibot</td>
<td>Class E</td>
</tr>
<tr>
<td>5</td>
<td>Wacked (Auto) Iframer Bot</td>
<td>Class E</td>
</tr>
<tr>
<td>6</td>
<td>FTPenetrator</td>
<td>Class E</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 2: Classification of different families of automated iframe injectors. </p>
<h2><a class="chapter" name="h2-conclusion"></a>Conclusion</h2>
<p><span class="anchor">In this paper, we have presented an analysis of various classes of iframe injectors. Class S, Class E and Class G are entirely different from each other based on the iframe infection mechanism. Class S infects web directories directly on the compromised hosting server. Class E harnesses the power of compromised end-user systems to infect web directories across vulnerable hosting servers on the Internet. Class G uses the gateway component in the C&amp;C deployment to launch iframe infections. We have also highlighted the outcomes of a comparative study conducted against different iframe injectors to understand the functionality at core. Obtaining intelligence at a granular level helps to build robust detection and prevention solutions.</span></p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a><span class="anchor">[1] Cova, M.; Kruegel, C.; Vigna, G. 2010. Detection and analysis of drive-by download attacks and malicious JavaScript code. In Proceedings of the 19th International Conference on World Wide Web (WWW '10). ACM, New York, NY, USA, 281–290.</span></p>
<p><a class=" anchor" name="ref2"></a><span class="anchor">[2] Sinegubko, D. Massive Admedia/Adverting iFrame Infection. <a href="https://blog.sucuri.net/2016/02/massive-admedia-iframe-javascript-infection.html" target="_blank">https://blog.sucuri.net/2016/02/massive-admedia-iframe-javascript-infection.html</a>.</span></p>
<p><a class=" anchor" name="ref3"></a><span class="anchor">[3] Cid, D. Malware iFrame Campaign from Sytes(.)net. </span><span class="anchor"><a href="https://blog.sucuri.net/2013/10/malware-iframe-campaign-from-sytes-net.html" target="_blank">https://blog.sucuri.net/2013/10/malware-iframe-campaign-from-sytes-net.html</a>.</span></p>
<p><a class=" anchor" name="ref4"></a><span class="anchor">[4] Sood, A. K.; Bansal, R. Beta exploit pack: one more piece of crimeware for the infection road! </span><span class="anchor"><a href="https://www.virusbulletin.com/virusbulletin/2015/06/beta-exploit-pack-one-more-piece-crimeware-infection-road/" target="_blank">https://www.virusbulletin.com/virusbulletin/2015/06/beta-exploit-pack-one-more-piece-crimeware-infection-road/</a>.</span></p>
<p><a class=" anchor" name="ref5"></a><span class="anchor">[5] Sood, A. K.; Enbody, R.; Bansal, R. Styx exploit pack: insidious design analysis. </span><span class="anchor"><a href="https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis/" target="_blank">https://www.virusbulletin.com/virusbulletin/2013/09/styx-exploit-pack-insidious-design-analysis/</a>.</span></p>
<p><a class=" anchor" name="ref6"></a><span class="anchor">[6] Sood, A. K.; Enbody, R.; Bansal, R. What are browser exploit kits up to? A look into Sweet Orange and ProPack. <a href="https://www.virusbulletin.com/virusbulletin/2013/03/what-are-browser-exploit-kits-look-sweet-orange-and-propack/" target="_blank">https://www.virusbulletin.com/virusbulletin/2013/03/what-are-browser-exploit-kits-look-sweet-orange-and-propack/</a>.</span></p>
<p><a class=" anchor" name="ref7"></a><span class="anchor">[7] Sood, A. K.; Enbody, R. Browser exploit packs – exploitation paradigm. </span><span class="anchor"><a href="https://www.virusbulletin.com/conference/vb2011/abstracts/browser-exploit-packs-exploitation-paradigm/" target="_blank">https://www.virusbulletin.com/conference/vb2011/abstracts/browser-exploit-packs-exploitation-paradigm/</a>.</span></p>
<p><a class=" anchor" name="ref8"></a><span class="anchor">[8] Is it the End of Angler? </span><span class="anchor"><a href="http://malware.dontneedcoffee.com/2016/06/is-it-end-of-angler.html" target="_blank">http://malware.dontneedcoffee.com/2016/06/is-it-end-of-angler.html</a>.</span></p>
<p><a class=" anchor" name="ref9"></a><span class="anchor">[9] Sood, A. K.; Enbody, R. J. (2013). Crimeware-as-a-service-A survey of commoditized crimeware in the underground market. International Journal of Critical Infrastructure Protection, 6(1), 28-38. 10.1016/j.ijcip.2013.01.002.</span></p>
<p><a class=" anchor" name="ref10"></a><span class="anchor">[10] Sood, A. K. Virus Bulletin – NiFramer Iframer Injector – CPanel. <a href="https://secniche.blogspot.com/2014/01/virus-bulletin-niframer-iframer.html" target="_blank">http://secniche.blogspot.com/2014/01/virus-bulletin-niframer-iframer.html</a>.</span></p>
<p><a class=" anchor" name="ref11"></a><span class="anchor">[11] Sood, A. K.; Bansal, R.; Greko, P. Inside an iframe injector: a look into NiFramer. </span><a href="https://www.virusbulletin.com/virusbulletin/2013/10/inside-iframe-injector-look-niframer" target="_blank">https://www.virusbulletin.com/virusbulletin/2013/10/inside-iframe-injector-look-niframer</a>.</p>
<h2><a class="chapter" name="h2-appendix"></a>Appendix</h2>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/4114/7644/6380/Sood-vb2016-figA1.jpg" alt="Sood-vb2016-figA1.jpg" width="845" height="506" /></p>
<p class="centered-caption">Figure A1: FTPenetrator C&amp;C panel. <a class=" anchor" name="figureA2"></a></p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/2014/7644/6411/Sood-vb2016-figA2.jpg" alt="Sood-vb2016-figA2.jpg" width="570" height="363" /></p>
<p class="centered-caption">Figure A2: Auto-Iframer bot 'Stealer.H' file.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/1714/7644/6443/Sood-vb2016-figA3.jpg" alt="Sood-vb2016-figA3.jpg" width="705" height="696" /></p>
<p class="centered-caption">Figure A3: Enumerate files on the compromised FTP server: AutoBot iframer.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/5814/7644/6474/Sood-vb2016-figA4.jpg" alt="Sood-vb2016-figA4.jpg" width="845" height="570" /></p>
<p class="centered-caption">Figure A4: Automated iframe injection code: AutoBot iframer.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/7414/7644/6505/Sood-vb2016-figA5.jpg" alt="Sood-vb2016-figA5.jpg" width="681" height="816" /></p>
<p class="centered-caption">Figure A5: Automated iframe injection and replacement code: Citadel iframer gateway.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/3714/7644/6647/Sood-vb2016-figA6.jpg" alt="Sood-vb2016-figA6.jpg" width="845" height="485" /></p>
<p class="centered-caption">Figure A6: Automated iframe injection code: Aibot.</p> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2016/VB2016-Sood-Bansal.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=The TAO of Automated Iframe Injectors – Building Drive‑by Platforms For Fun and Profit&url=https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit&title=The TAO of Automated Iframe Injectors – Building Drive‑by Platforms For Fun and Profit"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit&t=The TAO of Automated Iframe Injectors – Building Drive‑by Platforms For Fun and Profit"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2016/10/tao-automated-iframe-injectors-building-driveby-platforms-fun-and-profit"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>