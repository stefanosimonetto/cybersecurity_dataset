<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: BackDoor.Tdss.565 and its modifications (aka TDL3)</title>
<meta name="description" content="New BackDoor.Tdss rootkits are sophisticated pieces of malware. Alexey Tkachenko and Artem Baranov detail the BackDoor.Tdss.565 rootkit - which presented surprises within minutes of the start of its analysis." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 2151;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201003-Tdss"></a>BackDoor.Tdss.565 and its modifications (aka TDL3)</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2010-03-01</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Alexey</span> <span class="surname">Tkachenko</span></h3><span class="orgname">Doctor Web</span>, <span class="orgdiv">Russia</span></div><div class="author titlepage"><h3 class="author"><span class="firstname">Artem</span> <span class="surname">Baranov</span></h3><span class="orgname">Doctor Web</span>, <span class="orgdiv">Russia</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>New BackDoor.Tdss rootkits are sophisticated pieces of malware. Alexey Tkachenko and Artem Baranov detail the BackDoor.Tdss.565 rootkit - which presented surprises within minutes of the start of its analysis.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2010 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-3708" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-3708" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id4215096"></a></span></dt><dt><span class="sect1"><a href="#id4729757">The loader</a></span></dt><dt><span class="sect1"><a href="#id2715013">The rootkit</a></span></dt><dt><span class="sect1"><a href="#id4464340">The rootkit file system</a></span></dt><dt><span class="sect1"><a href="#id4113182">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4215096"></a></h2></div></div></div><p>The BackDoor.Tdss.565 rootkit presented us with surprises within minutes of embarking on its analysis. For instance, its non-typical method of injection into a system process during installation was completely unexpected. Though documented, the method has never before been implemented in any known virus, and therefore it allows the rootkit to bypass most behaviour blockers, install its driver and remain undetected.</p><p>The installation process continues in kernel mode. The rootkit searches through the stack of devices responsible for interaction with the system disk to determine which driver it will infect. The choice depends on the hardware configuration. If the system disk uses the IDE interface, it will pick out atapi.sys; in other cases it may be iastor.sys. There are other rootkits that infect file system and network drivers or even the system kernel to ensure their automatic launch (e.g. BackDoor.Bulknet.415, Win32.Ntldrbot, Trojan.Spambot.2436 and others), so this case is not an exception. Note that the file size remains unchanged because the malicious code is written over a part of the file&rsquo;s resources section. In fact, the piece of code only occupies 896 bytes (in later versions this is reduced to 481 bytes) and it loads the main body of the rootkit. At the same time it changes the entry point, sets the driver signature link to null, and recalculates the file&rsquo;s hash sum. Addresses of the API functions used by the loader for infection are located in its body as RVAs. This both reduces the size of the loader and complicates analysis of the infected driver in the system that uses a different version of the kernel.</p><p>Next, the malware assesses the available disk space and utilizes a small part (24,064 bytes) from the end of the disk for storage of the rootkit&rsquo;s main body &ndash; or, more precisely, for storage of the part of the driver that performs the installation saved as binary data instead of an executable image. The block starts with the &lsquo;TDL3&rsquo; marker, followed by 896 bytes of the genuine resource code of the infected driver. The malware also creates a separate virtual drive where its user-mode components and configuration file are located. It seems likely that this trick was inspired by BackDoor.Maxplus, which also created a virtual disk to deploy its components in the system. The process will be described in more detail later in this article.</p><p>One of the rootkit&rsquo;s later versions, BackDoor.Tdss.1030, stores original resources data and its body on the hidden encrypted drive in rsrc.dat and tdl files respectively, which significantly simplifies its updating.</p><p>Upon completion of the installation the driver returns a STATUS_SECRET_TOO_LONG (0xC0000154) error which informs user-mode components (<a href="http://vms.drweb.com/ search/?q=BackDoor.Tdss.565" target="_blank">http://vms.drweb.com/ search/?q=BackDoor.Tdss.565</a>) that installation has completed successfully and causes the system to unload the driver that is no longer used by the rootkit.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4729757"></a>The loader</h2></div></div></div><p>The viral loader starts working along with the infected driver. As mentioned above, its main task is to load the rootkit&rsquo;s body stored at the &lsquo;end&rsquo; of the hard drive. Since the loader starts working when the hard drive port driver is loaded by the kernel, it still can&rsquo;t work with the disk or the file system. This is why it first registers a notification routine for the creation of FS (FileSystem) control device objects, and only then does it load the rootkit&rsquo;s body. Early versions of the malware used the IoRegisterFsRegistrationChange function for this purpose, while the later ones resort to the temporary interception of the victim&rsquo;s IRP_MJ_DEVICE_CONTROL in DRIVER_OBJECT where the dispatcher waits for a certain request from the file system. Remarkably, in both cases the entry point of the infected driver is used both to start the original DriverEntry as well as for the FS standby (<a href="#figure.1">Figure 1</a>).</p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="The entry point of atapi.sys compromised by BackDoor.Tdss.565." src="/uploads/images/figures/2010/03/tdss-1.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;The entry point of atapi.sys compromised by BackDoor.Tdss.565.</b></p></div><p>Let&rsquo;s assume that atapi.sys is the compromised driver.</p><p>Now let&rsquo;s take a closer look at how the BackDoor.Tdss.565 loader works. Once it has gained control, it will go over the sections table of its media and modify it to make detection of the initialization section more complicated: it nulls the IMAGE_SCN_MEM_DISCARDABLE bit of each section, and replaces the first byte of a name with zero if it is INIT. It also reserves an auxiliary data structure to save the pointer to the atapi driver object. After that it uses the CDO (Control Device Object) to register the FS creation notification sent to the kernel.</p><p>As the file system request is received, the second part of the loader is started. It checks all object-devices of the port driver (e.g. &lsquo;\Device\IdePort0&rsquo;, &lsquo;\Device\IdeDeviceP0T0L0-3&rsquo;) and uses the disk offset placed in its body during installation to read the rootkit&rsquo;s body. Although using the ordinary ZwOpenFile and ZwReadFile functions for this purpose seems rather unsophisticated (as the malware has to check devices one by one), it allows the loader to remain compact and serves its purpose quite well. The TDL3 signature placed at the beginning of the data segment is used to verify that the reading has been successful (<a href="#figure.2">Figure 2</a>). After that, the notification is deleted (IoUnregisterFsRegistrationChange) and control is transferred to the body of the rootkit.</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="The first sector of the rootkit&rsquo;s body located in end sectors of the hard drive." src="/uploads/images/figures/2010/03/tdss-2.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;The first sector of the rootkit&rsquo;s body located in end sectors of the hard drive.</b></p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2715013"></a>The rootkit</h2></div></div></div><p>An encrypted drive with its own file system is certainly among the most notable technical features of TDL3, but the mechanism used to hide an entire file or the part of an arbitrary disk sector on the port driver level is equally remarkable. No other known rootkit has implemented these concepts in full.</p><p>It is well known that the main feature of the NT virtual file system is the availability of all input-output devices on the descriptor layer where the key element is the file object created by the kernel and objects that represent the device. An application opens the descriptor for one channel, hard drive, volume or file, and different layers of the input-output devices stack participate in the interaction. The kernel only needs information about a request to start a corresponding dispatcher function.</p><p>The authors of the rootkit used a similar approach and implemented their file system to work on the level of the device object&rsquo;s port driver so that the virus mounts its FS to the device object.</p><p>The atapi driver creates several types of device object (<a href="#figure.3">Figure 3</a>). The upper two are devices representing hard and CD drives, while the other two are controllers interacting with the mini-port driver implemented in Windows XP as a hybrid mix of a port and mini-port. To mount its hidden drive the rootkit chooses a device object with the FILE_DEVICE_CONTROLLER type.</p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Devices created by atapi.sys." src="/uploads/images/figures/2010/03/tdss-3.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Devices created by atapi.sys.</b></p></div><p>An ordinary (&lsquo;healthy&rsquo;) atapi driver uses only one IRP dispatch function to serve read/write requests &ndash; IRP_MJ_SCSI (IRP_MJ_INTERNAL_DEVICE_CONTROL). The client uses Srb and sends it to the disk device object. SUCCESS is always returned for Create/Close atapi requests, since the atapi doesn&rsquo;t use them. However, the Create operation is very important for the FSD (File System Driver) because it initializes FILE_OBJECT which is used for file operations.</p><p>The path to rootkit files located in the protected (hidden) area is as follows: \Device\Ide\IdePort1\mjqxtpex\, where mjqxtpex is an eight-byte signature generated randomly at system start-up. The hidden drive is used by user-mode components of the rootkit to store files received from the Internet or to read their configuration.</p><p>The following are some full path examples:</p><p>\\?\globalroot\Device\Ide\IdePort1\mjqxtpex\tdlcmd.dll</p><p>\\?\globalroot\Device\Ide\IdePort1\mjqxtpex\tdlwsp.dll</p><p>\\?\globalroot\Device\Ide\IdePort1\mjqxtpex\config.ini</p><p>In order to understand how the rootkit works with its file system, let&rsquo;s take a look at a flow chart showing how a create request is normally processed (ntfs or fastfat), how \Device\HarddiskVolume1\directory\config.ini is opened on an ordinary drive, and how \Device\Ide\IdePort1\mjqxtpex\config.ini is accessed on the hidden drive (see <a href="#figure.4">Figure 4</a>).</p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Opening a file on an ordinary disk drive (left) and on the hidden drive (right)." src="/uploads/images/figures/2010/03/tdss-4.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Opening a file on an ordinary disk drive (left) and on the hidden drive (right).</b></p></div><p>The rootkit has one shared dispatch function for all requests from atapi clients and user-mode components. Therefore it performs two important tasks:</p><div class="itemizedlist"><ul type="disc"><li><p>It hides data located in the protected area from atapi clients and provides clients with an original file as they try to read data from the disk.</p></li><li><p>As with FSD, it handles create/close/query information requests for files from the protected area, as well as requests from the rootkit itself, such as to read a section of config.ini.</p></li></ul></div><p>The rootkit replaces parameters in the dispatch functions pointer table as follows: it finds the end of the first section of the atapi.sys file in memory and writes the following template into the cave (the remaining free space in the section):</p><pre class="programlisting">mov eax, ds:0FFDF0308h
jmp dword ptr [eax+0FCh]</pre><p>In some cases the instructions can overwrite data in the adjacent section since there is no verification procedure. Therefore, interceptions are still directed to atapi.sys (<a href="#figure.5">Figure 5</a>). This fools many anti-rootkits, so the malware remains undetected. The rootkit utilizes a large structure for storage of all configuration information that may be required to perform its routines. The structure pointer is placed at 0xFFDF0308, i.e. a part of KUSER_SHARED_DATA is used. The request dispatcher is found at the +00FCh offset (invoked in the example above &ndash; jmp dword ptr [eax+0FCh]). Structures describing which sectors must be hidden and what should replace them are also stored there. If an atapi client requests data from the protected drive, it will simply zero-fill it or replace it with original data. Let&rsquo;s take a look at the pseudo code showing how it works:</p><pre class="programlisting">if( DeviceObject == ROOTKIT_PARAM_BLOCK. AtapiBootRootkitDevObj &amp;&amp;
  IoStack-&gt;MajorFunction == IRP_MJ_SCSI &amp;&amp;
  IoStack-&gt;Parameters.Scsi.Srb-&gt;Function == SRB_FUNCTION_EXECUTE_SCSI
)
{
if( RequestedStartSector + cSectors &gt; ROOTKIT_PARAM_BLOCK.HideAreaStartSector)
{
     if( IsRead )
     {
           Replace the completion function of the current stack location with its own function
     }
     else if( IsWrite )
     {
           End operation and return an error
}
else if( a request to the atapi or oep resource section, chksum, 
security data dir entry)
{
Replace the completion function of the current stack element with its own function
}
}</pre><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="Windows XP SP3 atapi.sys interceptions." src="/uploads/images/figures/2010/03/tdss-5.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;Windows XP SP3 atapi.sys interceptions.</b></p></div><p>So it is the completion function where the data is replaced.</p><p>When the first versions of TDL3 were found in the wild, some developers of anti-rootkit software made corresponding changes to their products so that they would at least detect the rootkit. However, virus writers were quick to respond and created new versions of the malware featuring new interception techniques which are harder to detect.</p><p>The dispatch table of the compromised driver remains clean. The authors of the rootkit used a non-standard approach. They simply &lsquo;stole&rsquo; from the atapi driver the device object that is working with the system drive they intend to use (see <a href="#figure.6">Figure 6</a>).</p><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="Clean system (left) and infected system (right) with the device &lsquo;missing&rsquo;." src="/uploads/images/figures/2010/03/tdss-6.jpg" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;Clean system (left) and infected system (right) with the device &lsquo;missing&rsquo;.</b></p></div><p>The abnormality can only be detected with a debugger (see <a href="#figure.7">Figure 7</a>) &ndash; an unknown device using an unknown driver. Moreover, the DRIVER_OBJECT header of the &lsquo;unknown driver&rsquo; is corrupt while the driver is removed from the system drivers list (as well as the &lsquo;stolen device&rsquo;). The driver object is created by the rootkit to hide sectors of the hard drive and provide the malware with access to the hidden sectors. It has already become visible, but you still need to find or guess a device with a name comprised of eight random characters.</p><div class="figure"><a id="figure.7"></a><div class="mediaobject"><img alt="Detecting the abnormality with WinDbg." src="/uploads/images/figures/2010/03/tdss-7.jpg" /></div><p class="title"><b>Figure&nbsp;7.&nbsp;Detecting the abnormality with WinDbg.</b></p></div><p>Developers of anti-rootkits will have to devise a new way to use a specified device object to find a real driver used by the device.</p><p>The debug output of the rootkit upon its launch is also quite unusual. It reveals that the virus writers have a passion for cartoons. For instance, it may display one of the following lines:</p><div class="itemizedlist"><ul type="disc"><li><p>Spider-Pig, Spider-Pig, does whatever a Spider-Pig does. Can he swing, from a web? No he can&#39;t, he&#39;s a pig. Look out! He is a Spider-Pig!</p></li><li><p>This is your life, and it&#39;s ending one minute at a time</p></li><li><p>The things you own end up owning you</p></li><li><p>You are not your f*cking khakis</p></li></ul></div><p>And in the later versions:</p><div class="itemizedlist"><ul type="disc"><li><p>Alright Brain, you don&#39;t like me, and I don&#39;t like you. But lets just do this, and I can get back to killing you with beer</p></li><li><p>I&#39;m normally not a praying man, but if you&#39;re up there, please save me Superman.</p></li><li><p>Dude, meet me in Montana XX00, Jesus (H. Christ)</p></li><li><p>Jebus where are you? Homer calls Jebus!</p></li><li><p>TDL3 is not a new TDSS!</p></li></ul></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4464340"></a>The rootkit file system</h2></div></div></div><p>At the end of the hard drive the rootkit occupies a certain area in which it stores its body and the virtual drive. The structure of a physical drive in a compromised system looks like this:</p><div class="mediaobject"><img src="/uploads/images/figures/2010/03/tdss-0.jpg" /></div><p>Sector numbers of the virtual drive increase from the upper sectors to the lower ones and the rootkit uses the negative offset starting from the sector that is used as a descriptor of the virtual directory (<a href="#figure.8">Figure 8</a>). So, expanding backwards, it can overwrite data in other sectors of the physical drive.</p><div class="figure"><a id="figure.8"></a><div class="mediaobject"><img alt="BackDoor.Tdss.565 virtual directory descriptor." src="/uploads/images/figures/2010/03/tdss-8.jpg" /></div><p class="title"><b>Figure&nbsp;8.&nbsp;BackDoor.Tdss.565 virtual directory descriptor.</b></p></div><p>File metadata and other information is placed in one file in the hidden disk drive. The size of the metadata is 12 bytes and it has the following format:</p><p>+00 Signature [TDLD &ndash; a directory, TDLF &ndash; a file, TDLN &ndash; a file from the Internet]</p><p>+04 an ordinal number of a sector with valid data</p><p>+08 data size, if the sector provides sufficient space for storage or if zero is not set for the preceding field, the offset from file data to the next sector where the file code is stored (i.e. +0xC for metadata, so the field usually contains 0x3F4, 0x3F4 + 0xC = 0x400)</p><p>In <a href="#figure.8">Figure 8</a> you can see three files written onto the disk during the rootkit&rsquo;s installation (config.ini, tdlcmd.dll and tdlwsp.dll) and the bfn.tmp temporary file downloaded from the Internet. All sectors locating the drive are encrypted using RC4. The same encryption algorithm is used by other components that are not involved in the operation of the file system. The file described above is encrypted using the bot ID stored in config.ini. After decryption it appears as a set of commands for the rootkit (<a href="#figure.9">Figure 9</a>).</p><div class="figure"><a id="figure.9"></a><div class="mediaobject"><img alt="Contents of bfn.tmp." src="/uploads/images/figures/2010/03/tdss-9.jpg" /></div><p class="title"><b>Figure&nbsp;9.&nbsp;Contents of bfn.tmp.</b></p></div><p><a href="#figure.10">Figure 10</a> shows a descriptor for the BackDoor.Tdss.1030 directory. Here we can see new file metadata fields and data for separate files of the rootkit body (tdl) and original resources of the infected file (rsrc.dat).</p><div class="figure"><a id="figure.10"></a><div class="mediaobject"><img alt="BackDoor.Tdss.1030 virtual directory descriptor." src="/uploads/images/figures/2010/03/tdss-10.jpg" /></div><p class="title"><b>Figure&nbsp;10.&nbsp;BackDoor.Tdss.1030 virtual directory descriptor.</b></p></div><p>The directory incorporates a metadata structure and subsequent file entries. The size of each entry is 32 bytes (<a href="#figure.11">Figure 11</a> &ndash; an entry on <a href="#figure.7">Figure 7</a> is highlighted).</p><div class="figure"><a id="figure.11"></a><div class="mediaobject"><img alt="File descriptor." src="/uploads/images/figures/2010/03/tdss-11.jpg" /></div><p class="title"><b>Figure&nbsp;11.&nbsp;File descriptor.</b></p></div><p>The first 12 bytes of the file descriptor contain metadata with the TDLF or TDLN signature, the number of the next sector and size placed at the beginning. For example, in <a href="#figure.12">Figure 12</a> you can see the specified file size 0x10C bytes.</p><div class="figure"><a id="figure.12"></a><div class="mediaobject"><img alt="Reading sectors of the virtual drive." src="/uploads/images/figures/2010/03/tdss-12.jpg" /></div><p class="title"><b>Figure&nbsp;12.&nbsp;Reading sectors of the virtual drive.</b></p></div><p>In the rootkit&rsquo;s file system, a sector containing data is followed by a &lsquo;trash&rsquo; sector since the rootkit works with 0x400 byte units (<a href="#figure.12">Figure 12</a>) instead of 0x200 (for standard systems).</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4113182"></a>Conclusion</h2></div></div></div><p>All in all, new BackDoor.Tdss rootkits are sophisticated pieces of malware. Their detection and neutralization pose a serious challenge for anti-virus vendors &ndash; and, as has already been seen with BackDoor.MaosBoot (Mebroot), Win32.Ntldrbot (Rustock.C) and others, not all vendors are able to rise to that challenge.</p></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=BackDoor.Tdss.565 and its modifications (aka TDL3)&url=https://www.virusbulletin.com/virusbulletin/2010/03/backdoor-tdss-565-and-its-modifications-aka-tdl3"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2010/03/backdoor-tdss-565-and-its-modifications-aka-tdl3'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2010/03/backdoor-tdss-565-and-its-modifications-aka-tdl3&title=BackDoor.Tdss.565 and its modifications (aka TDL3)"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2010/03/backdoor-tdss-565-and-its-modifications-aka-tdl3&t=BackDoor.Tdss.565 and its modifications (aka TDL3)"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2010/03/backdoor-tdss-565-and-its-modifications-aka-tdl3"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>