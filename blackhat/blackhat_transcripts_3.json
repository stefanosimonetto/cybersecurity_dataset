{
    "AlN59giec0M": [
        "[Music]",
        "hello black hat and thank you for joining us on our talk on leveraging the endpoint security framework for Behavioral detections I'm Jaren Bradley",
        "I'm here presenting with my co-worker Matt benyo we both work at jamf threat Labs where we focus on finding new ways to detect malicious activity on Mac OS devices over the past few years this has meant leaning pretty heavily into the apple and Point Security framework and today we wanted to share a bit about where we've found success with monitoring for applications that are behaving in ways that they shouldn't be so if you're here there's a good chance that you probably know a thing or two about the endpoint security framework but regardless of your level of exposure we're going to take a step back and put it into context so what is the endpoint security framework",
        "so if you're building an endpoint security tool for an operating system you really need two basic things the first is a source of information about events that are happening in the operating system that feeds into your analysis and detections and the second is the ability to act on detections to exert Authority that could be killing a process or preventing a file from being deleted or modified and so on and historically the kernel the heart of the operating system is the place where we would go to access this data and exert this Authority so until recently if you're developing an endpoint security tool for Mac OS you'd build a kernel extension and you had at your disposal to do so the open BSM audit Trail for your event information you had the chaos kernel",
        "programming interface for your controls which was a bit limited and there's also the mandatory Access Control framework which had the controls that vendors are looking for but it was unsupported undocumented and ostensibly off limits to anyone but Apple so the thing is even by Apple's admission kernel extensions are difficult to develop and maintain and ultimately they can create new security vulnerabilities because even a minor bug can lead to things like kernel panics so these limitations really have served as a big obstacle to innovation in Mac OS security so in an effort to secure their kernel to give security vendors what they need to build Tools in 10.15 apple introduced the endpoint security framework and in doing so they are effectively serving up in user space and event info Rich event information source and the controls to act on detections all without adding any additional instability in the kernel so instead of kernel extensions vendors can now build system extensions that exist in user space and the way this works is that when an event occurs the kernel sends information to all of the third-party system extensions that are subscribed to a particular event things like process creates and exits file creates unlinks Mount events that type of stuff most ESF events come in two different varieties you have notification events and you have authorization events they both deliver the same information but notify events are simply meant to inform so they let the system extension know that Something's Happened and the system extension can use that information in whatever way it sees fit maybe it pops an alert to a console or maybe it's forwarding data to a Sim by contrast authorization events",
        "actually hold up activity at the kernel so the extension evaluates event data with its detection logic and determines whether this process should proceed",
        "when an event fails the system extension checks the system extension sends the deny response and the operation is terminated now of course this is just a visual representation for illustration as the window for all this to occur is incredibly brief to maintain performance and user experience",
        "so static detections have been around since the early days of antivirus and they continue to stick around because they're an effective means of detecting malware based on the way the auth events work ESF complements static base blocking very nicely while the execution of event is on hold a third-party extension can quickly scan it decide whether or not to allow it to execute um so what are the some of the static behaviors that can be scanned in this small time window well it can be a variety of things but if we're going to prevent something we better be really sure that it's uh not something I should be allowed to run because once again the last thing we want to do is ruin the user's Mac OS experience so for this reason uh traditional kind of indicators of compromise work really well team IDs or developers that have been identified as malicious in the past uh is a is an easy thing to quickly look up and block file hashes you know file Fingerprints of known malware and then of course Yara rules work fantastic as well allowing us to scan for byte byte patterns or strings and and blocking if we see ones that we don't like there's of course other options such as machine learning algorithms but again ultimately whatever you end up testing against needs to return a result almost instantly",
        "so this leads naturally to the focus of our talk which is behavioral detections and this idea of a behavioral detection has been around for a while and they've increased in value as security vendors have really refined uh developing a baseline of what normal application activity looks like as opposed to things that are more suspicious or nefarious so the downside to this type of a detection is that they tend to have a higher false positive ratio because we're looking at a broader pattern of activity as opposed to something more objective like a file hash but when these are executed correctly it's a worthy trade-off because it allows us to identify things like malware that we haven't seen before or activity patterns that really haven't been seen before so to give an example um we'll call this one a fake file extension and we'll start with something really straightforward here so in this example a user goes to finder in their temp directory and they discover a PDF called a DOT PDF now a single letter PDF in the temp file is probably weird enough to detect on on its own but we can take a closer look at this and when they examine this file they would discover that this is actually a Mako executable so masquerading file extensions using contradictory file extensions in this way is one of the oldest tricks in the book uh attackers will use this method to try and blend in with the user's files or the operating system and somewhat ironically these kind of cheap evasive maneuvers lead to some of our best detections because they're hard to justify in a benign context",
        "so as you can see all we really did here was take the behavior of a file being created or written to Temp and perform some additional checks to determine if it was actually of any interest so truth be told like benyo said some of these might be interesting by themselves for instance a PDF extension on an executable it's probably a detection by itself but if we want to take additional kind of odd behaviors like oh this is this is in the temp directory or this has a single letter file name these are all just kind of strange things if we want to further kind of enhance and tighten up detections we could look for multiple things like this to create one detection",
        "we'll demonstrate a slightly more in-depth example of one of these detections with something we call p-list disguised as Apple so inside of the system Library launch agents directory a launch agent is something that will run generally run at startup on the system when your system boots and here we have what a launch agent should look like This one belongs to the Mac OS diagnose agent we actually tell this by simply looking at the file name Apple encourages developers to follow suit and name all launch agents and daemons using a reverse domain name notation so by looking at the file called com.apple.diagnose agent.plist we should",
        "immediately know that this P list is part of the operating system and belongs to Apple so a long time ago malware authors caught on to this fact as well so they began calling their malicious demons and",
        "agents.com.apple.fill in the blank causing those agents to blend in with the operating system as well",
        "so if we look inside this file we see that this agent will launch this diagnose helper this is an uh this executable is an apple binary and properly signed by Apple as it should be",
        "so let's take a look at how this can be counterfeited or abused by attackers so what we'll be looking for is in the user launch agents or launch demons directory an addition of a new plist that's the first thing we detect on but then we look to see are they using a com.apple identifier in the file name and truth be told we could stop right here if there's something that's outside of the sit protected system launch agents directory",
        "and it's in the users folder that's probably suspicious enough to take a look at but we have found some false positives that hit this so we can refine this detection by doing some additional checks so what we do is we look at that P list and we scope in on the executable that this intends to run at login and that's going to give us a path so we can go to the executable at that path and we can run a code signing check and if this is something that's using a com.apple p list we should hope or expect that this is an executable that's also owned by Apple and in this case the code signing information comes back is unsigned and that is highly suspicious something that we can confidently trigger a detection on for further analysis so this has been a really reliable detection over the years it is worth pointing out though that when this these days when we see this triggered it's generally one of the newer Espionage focused applications this is something that adware used to do a lot but I think that they spend so much time in the trenches and they've been caught by so many different security products using this technique that's something that they've moved away from",
        "so so far we've talked quite a bit about different behaviors and checks to perform with file activity let's get into a bit of background on what suspicious process activity looks like so we're going to give an example here by showing off a single exec event let's say that you're maybe a threat Hunter you're in Splunk and you encounter a process execution events in this example we're just demoing with a simple cut command so for those that aren't familiar with the cut command it's generally used to splice data passed to it from another command by itself it really tells us absolutely nothing we're going to show here how we can use other fields in this event to get the context of what's happening on the system",
        "so next we'll use the parent process ID and grab the process that ran the cut command it it's primarily a tool meant to be used within a shell so it comes as no surprise that the parent is zsh in this case where we really start to gain some useful context here is when we take this same event and we look up the responsible PID which in this case points to terminal dot app as we can see this process ID starts to paint a better picture so far we've determined that the user opened a terminal their shell of choice is the default zsh and they executed cut however as I stated earlier this still there's still more to this picture and cut by itself isn't super helpful to us but at least we know that this was likely a user because it was executed through a terminal GUI application but uh by taking the process group ID value in this event we can determine what the process group ID leader of this command was this PID value is fairly uh fairly well",
        "known um but it gets less attention than it deserves in fret hunting not only can we grab what process was at the front of a set of piped commands in this case system profiler but we can also perform a search to see all processes that share this same process group ID essentially rebuilding the exact command that was executed so this approach can't always be taken as we're demoing an example here where a standard job control behavior is in place but overall this is a pretty good way to go about getting the context of how a group of commands was executed in this case we can see that the executed command was one that gets used to grab a Serial ID of the device it's run on and it gets used by both legitimate apps and scripts as well as some malware performing Recon",
        "a session is a collection of process groups and a session ID points us to the process that's in control of those groups and this is where we can kind of go and get some additional context of what actually ran inside the terminal so in this case it belongs to the login process which the terminal runs upon execution before the shell is chosen",
        "so from a single event that shows a simple cut command occurring we were able to use all the PID fields to determine the exact context of what's happening and then with some simple lookups we can even sort out the command history that ran here in this terminal",
        "so let's take a look at an attack behavior that can be uncovered using some of these techniques that we just discussed",
        "so in this particular demonstration we're looking at a popular form of a living off the land technique so in this technique the attacker will host a script on their server and they will curl that down on the victim machine but pipe it directly to an interpreter on the system the reason that this is an attractive technique is because in doing so no malicious files exist on the disk therefore you can really sidestep most static detections this way as the script really only exists in memory",
        "now while this doesn't create files it's not entirely untraceable if you have that URL and the server still up you could go for example this is the Mythic agent that would be hosted on This Server by Cody Thomas that's still available but you're creating that extra step and really going to sidestep any detections aren't looking for this type of a technique specifically",
        "so if we now look for applescript which is The Interpreter in this case being run and we check for it in the process history we'll see that it's running with no arguments it's just running as Osa script",
        "so to use ESF data to track this type of activity what we would look for is the execution of The Interpreter in this case Osa script or apple script and if you look down below in the command you would see that it has no path to a script no additional commands which is a pretty good giveaway that whatever is running this the script was piped directly to The Interpreter in this way so the way that we can start to uncover this of what piped to Osa script is by looking at that process group ID so if we follow that process group ID we see that it leads us to the curl command and once we have this link we are confident that this type of a living off the land technique was being used at least to the point of popping an alert for further analysis",
        "so let's walk through another sample that drives home the use case of once again the process group ID uh Spotlight is functionality on Mac OS that indexes files and documents as they're created it does this by indexing it does this indexing by taking keywords uh found in those documents and making them easily findable in a search so when you press command and spacebar you can punch in a keyword and easily find the document you were looking for even if you can't remember where you saved it this is a super useful feature I use it all the time but any feature that's useful for us is generally also useful for an attacker",
        "so mdfind is the command line equivalent of using this Spotlight functionality so an attacker can easily search for different keywords and attempts to try and find files on the hard drive that contain these keywords such as maybe password routing and account or",
        "confidential",
        "so an attacker once on the system might use a command that looks something like this where basically they run mdfind they get a list of files back that contain the word confidential and then they take each one of those files and pipe them immediately to an archive and now they just have to X fill that archive and they have a giant archive full of confidential files",
        "so in order to detect this happening what we would look for is the execution of one of the built-in archive Tools in this example it's tar so then the next question is we ask what is the process group idea of this tar execution and in this case following this process group ID would lead us naturally to MD find and when this link has been made we can be reasonably confident that tar was run at a string of commands that started with mdfine and this technique was likely being used to the point where we can pop an alert for further analysis it's worth pointing out though that this technique while interesting is limited to what's available uh outside of the",
        "full disk aspect asset aspect of the transparent transparency consent and controls there's still some useful things we'll get a little bit more into TCC in one of our advanced detections",
        "so we've talked a bit about what we'd call Standard detections now we'd like to get in some detections that require significantly more checks to determine applications uh behaving Anonymous",
        "anonymously all three detections we'll talk about here were developed after we discovered or learned about a zero day vulnerability and then we went and found a way to detect those vulnerability if those vulnerabilities were ever abused so everything we'll cover here has since been patched but we still wanted to make sure before those patches occurred that we were detecting them should it happen so the first we're going to touch on is a gatekeeper bypass from a while back so a number of different bypasses have come to lights over the course of this year revolving around file quarantine and gatekeeper these are both security features built into Mac OS that exist to help users ensure they're only running code that's properly been signed by a trusted developer and notarized in this slide we see that a user is downloaded and ran an app called toxic.app this would result um uh in this gatekeeper prompt uh of something like this primarily because the app is completely unsigned and therefore untrusted",
        "so last year Cedric Owens discovered a method that allowed apps to incorrectly pass gatekeeper checks he actually did talk about this here at black hat um so we created a detection when we heard about this vulnerability and soon discovered a variant of the Slayer malware abusing it in the wild",
        "so before abusing this bypass Slayer developers had to convince you to override gatekeeper because they didn't want to sign the malware they would convince users to override gatekeeper by literally providing instructions for the override process within their installer graphics",
        "so this simply consists of right-clicking the application selecting open rather than double clicking on it it seems very basic but we see users fall for this all the time we do see that this still results in some prompts informing the user that this app was downloaded from the internet but ultimately they're given the option to go forward with it if they'd like to when right clicking on the app",
        "so that's what the old Slayer malware installer looked like here's what the Slayer malware with gatekeeper with the gatekeeper bypass embedded in it looked like uh it's just a simple double click on the downloaded application and it's game over for the user they didn't have to write click the application nor click through various prompt warnings uh this completely unsigned malware would execute and perform a bunch of background activities while the user was none the wiser",
        "an additional note to make here is that although this looked like a PKG installer it was actually just a weaponized application that used a PKG icon but how did the bypass actually work it worked in cases where an application did not contain an info.plist file uh and it used a script as its primary payload so if these two things were true it would be given a stamp of approval from the gatekeeper Security check and it would be allowed to execute so let's rewind a little bit and think about how we could actually detect this so first of all when an application is launched by double clicking it sends a message to launch D which then goes on to open the application so that's the thing that we would look for is launch D being the parent process now obviously most of the processes are running on the system have a parent of launch D but by including this in the detection we can reduce false positives so our next check",
        "is to be checking to ensure that we're actually dealing with an application bundle this can be done by analyzing the command line while the app was double clicked but what we can do very easily is look for this Telltale string in the command line arguments of dot app slash contents slash Mac OS if we see this string we're confident that we're dealing with an application",
        "so next we're going to ensure that the process that was running was actually a built-in interpreter so what we did was we essentially looked for any of the built-in interpreters at the time there were a couple more that have since been deprecated but these are all the ones that are available and in the Slayer example it was actually bash that was running",
        "so the next thing we'll do is we want to make sure since a requirement of this bypass was that the executable was a script we'll look at the executable to ensure that it wasn't some type of a macho binary that it was actually a script so you could do this via API check magic bytes whatever your particular flavor is",
        "and then lastly we want to make sure that we're catching this at the moment that it's being looked at by gatekeeper and for this we relied on a particular Quirk of Gatekeepers so to mitigate a different vulnerability when you double click on an application that's in something like a DMG gatekeeper will actually move that to a randomized file path to prevent it from accessing external resources and this particular feature is called app translocation",
        "so that's what we'll look for to ensure that this is happening at the moment of a gatekeeper inspection that will incorrectly pass checks",
        "so let's take a quick look at what all this looks like from an ESF perspective notice here that we can almost do all the checks required once again by pivoting around on a single exec event so the first thing we're going to do is check that the parent is launch d uh next we're going to take a look at the command line arguments and make sure a application is referenced within them",
        "uh instead of checking the command line arguments we could also check the script field that ESF provides on execution uh but uh in this case we do see that the application is referenced inside the command line arguments so next we'll grab the path of the executable being exact to see if it matches an interpreter language which in this case it does we see that it's been Bash and then we will take the application from the command line arguments and check to ensure that it's not a macho as of course for this bypass we only care about scripts because that's all that worked so finally as mentioned before uh we're going to check that this app is being analyzed by gatekeeper as we only want to trigger at the time that the gatekeeper bypass is occurring so you can actually use a script as your main payload in an application Apple does allow for that uh but when when something like this happens we want to trigger on this at the time of bypasses if the user still continues to want to run this in the future that's that's up to them",
        "so this is the detection we put into action when we heard the zero day existed and almost immediately as we pushed it out we detected the Slayer malware uh dropper triggering in various environments which tells us malicious authors do see value in evading these gatekeeper checks and do see value in not having to take the time to sign code or pay for any type of you know code signing fee",
        "so next we're going to touch on a TCC bypass which we hinted at a little bit earlier as we showed um earlier TCC is uh is kind of a feature where users can grant specific applications permissions to do specific things such as capture keyboard input record the mic or record the screen so when an application attempts to perform an action such as record the screen the user is prompted asking if they want to approve this action for the application",
        "so perhaps one of the more concerning times where we've seen this prompt bypassed was in the Wild by the XCS set malware zero day usage isn't new for this malware in fact it was using two other zero days at the time as well specifically we're going to focus in on the Zero date it would attempt to use in order to gain screen sharing permissions uh the malware would start by looking for a list of various applications that already exist on the system and likely hold that screen recording permission in the malware code it referred to these applications as donor apps among these applications was of course Zoom since at this point many users have had installed zoom on on their systems to remotely share their screens and for that purpose it would have the screen sharing permission already uh what the app malware authors discovered is that if they placed an application bundle within an already existing application bundle we'll call this update.app in this case they could actually piggyback off the permissions of that the existing bundle held",
        "so if we go back to the TCC settings this is effectively what would now be taking place however the piggybacking application would gain the permissions",
        "it would gain the permissions but it would not show up in this list of software as able to do so so uh now all the attacker had to do was record the screen and no prompts would be displayed to the user I think an important takeaway here is that many don't think anyone's going to take the time on Mac OS to bypass these type of restrictions when in fact malware has already taken the time to try and find ways around this to remain more stealthy this was all also done via applescript malware by the way which uh some some might argue makes this even more impressive",
        "so when this malware runs it will trigger an endpoint security framework exec event and the way that we would detect this is to look for that application being opened and we'd look at the path to First determine that we're dealing with an application and the next thing we'll check to see is to see is that application nested inside of another application now keep in mind Zoom is just the example here in theory it could be any application that had the desired TCC permissions",
        "so now that we have an outer app and an inner application we can start to treat those as two separate things and it's worth pointing out that it's totally legal for developers to do this it's it's a normal behavior to put one app inside of another application however we would expect that the signing information of those two applications would match so that's how we were able to look for this being done illicitly so you check the donor application give it a code signing check in this case it's the Zoom app it's a price surprise it's signed by Zoom legitimately so then next we want to check the inner application and we should expect that also to be signed by Zoom if this is a legitimate update app and in the case of the XCS at malware it came back as signed ad hoc which was a huge red flag",
        "so that's the detection we're looking for an application being executed we're looking for that application to be nested inside of another application then we check the outer application signing information and see that it's legitimate and for the inner application when we check that signing information if it's illegitimate we'd see one of three cases a mismatched team ID that doesn't match the outer app signed ad hoc or not signed at all and if those conditions are met we confidently pop an alert for further analysis",
        "so let's talk about one last gatekeeper bypass that we were able to detect and this vulnerability was actually found by jamf's own for Dao seljuki and he was attributed on a cve when this was patched by Apple so to understand this particular bypass we first have to quickly break down some of the basics of how Safari works so when Safari is used to download a file especially something like a zip file with an application in it you may have noticed that it hits the downloads folder and is almost instantaneously unzipped this is the default behavior and this is part of a feature in Safari called open safe files for downloading it's what Apple deems to save files and probably part of the thinking around this is something like an application while it feels like a file is actually a directory bundle and can't be downloaded directly so often you'll see applications that are zipped up in this way and using this Auto unzip feature kind of abstracts that away so it feels uh more logical to an end user",
        "so if we quickly rewind uh once again and then watch all of this in slow motion using the endpoint security framework what we would actually see is that after the archive download occurs Through Safari the Safari sandbox is actually what's responsible for creating a temporary directory and then handling the unzipping of that archive into that directory",
        "so the Safari sandbox then takes the quarantine extended attribute and applies it to the newly unzipped application this part's actually very important because when an application is opened for the first time its extended attributes are checked by the system if this quarantine extended attribute is on the opened application the system knows that it needs to be checked by gatekeeper upon its first launch",
        "so while we're browsing the internet in search of malware we encountered a Gaming website that was hosting games in application form via zip archives so",
        "after we downloaded these games we noticed that they were somehow bypassing Gatekeepers prompts despite being completely unsigned so after further investigation we actually noticed that the extended attribute was not being placed on the application directory itself it was only being applied to the recursive contents under that app and as it turns out gatekeeper only cares about whether that application has a quarantine mark on it or not",
        "so we notice that this wasn't actually happening if we downloaded the application via another browser and then unzipped it manually all the quarantine attributes would appear as expected in in this type of scenario so this told us the issue lied somewhere in the Safari Auto unzipper itself",
        "not only that but we also noticed that if we used Apple's built-in ditto command to unzip our own archive it would also result in the same quarantine bug this told us the bug likely goes much deeper on the operating system somewhere as it was affecting at least two different unarchiving Technologies",
        "so as it uh as it turned out this issue existed within the bill of materials functionality a bill of materials is think of it like a receipt for all files that maybe an installer or archive leaves on the system logically this receipt technology ties really well to PKG installers uh however Mac OS also builds references builds and references uh a bomb for zip files as well it's just not very well documented anywhere so upon unarchiving the application from a normal zip file the bomb seen on the right here will keep track of each file that gets unarchived the unarchiving logic then goes through each file uh in the bomb and applies the quarantine attribute fittingly",
        "so one big thing we noticed analyzing a normal zipped application in a hex editor is that the first zip file header starts at the root application directory the quarantine attribute would always be applied as expected in this case but the zip files we are downloading from the internet were unknowingly bypassing gatekeeper and on the other hand they were missing this root level header",
        "and instead they started at the applications contents directory",
        "so if we take one of these modified zip files and remove the top level header we see here that when the bomb gets parsed once again on the right the application root directory would be missing from the bomb however the application would continue to unzip and operate normally",
        "but when the copy quarantine function gets referenced and it references the bill of materials to apply the quarantine attributes it ends up missing the app directory itself since the bill of materials at this point was out of sync so using the endpoint security framework again is our foundation how do we go about detecting this occurring so we start by looking for a file rename event we're looking for that moment when the Safari sandbox broker is moving from its temp file the new application back to the downloads folder then we ensure that it's actually the Safari sandbox broker that's taking the action",
        "and then we make we make sure that it's actually an application that's in question that's being moved",
        "then we make sure that the original location is the temporary directory that",
        "the sandbox broker creates when it's unzipping the file and moving it back to downloads and then finally we do an extended attribute lookup to ensure that the quarantine attribute was actually applied",
        "so this detection is interesting because by looking over the shoulder of the built-in security and ensuring that it's doing its job as expected we can generically detect when a gatekeeper bypass has occurred even if we don't know what the technique is all we're looking for is an application that's being downloaded by the Safari sandbox broker and yet somehow came away without a quarantine attribute and really I think this highlights the beauty of these behavioral detections because they can allow us to pick up on techniques that we haven't even uncovered yet",
        "so that kind of wraps up our talk uh what we show today is simply one piece of tooling that feeds off events provided by the endpoint security framework but what's great about ESF is that Apple can focus on providing visibility into the operating system and developers can get the power to decide what should be done with this information and build detections engines as well as anything else they can think of more than anything it's just nice to have these events that we use come from that that used to come from various complex sources now be streamlined in an organized fashion from Apple so we can focus on using the events rather than having to worry about creating them ourselves and that's what we had thanks so much for having us foreign",
        "[Music]"
    ],
    "QMzTcHbC3dQ": [
        "[Music]",
        "foreign",
        "a.m in Taiwan and sorry I can't be physically on the stage because of the Visa I hope one day we can meet face to face in Vegas",
        "about 10 years ago I failed my algorithm",
        "course at University but I'm now here to talk about the hash table this is a big achievement for me",
        "and orangey and today my topic is less dense in the cache this stabilizing hash table on Microsoft IIs",
        "before the talk I would like to give you a short test if there is a super secret area which is protected by a super secure password",
        "you cannot login only if you know this long password [Music] however under the design of IIs",
        "all of these passwords",
        "are valid and can look into the system",
        "the next thing right I guess you might have several questions in your life",
        "this is one of the attacks I will present today and you will learn the details later",
        "hi and orange another principal security researcher at that column I I an Azure",
        "the researcher and focusing on web and application security my job is to discover the most severe bugs and the attack service that can impact the world ahead of the bad guys my research has also received several",
        "Awards such as the best server side part of tangney award and the champ and the champion of the punctivo if you are interested welcome to follow my Twitter or chat with me later",
        "this is the outline today first we will introduce several essential Concepts those concepts are important to let you into Microsoft IIs internals in our",
        "topic today",
        "after having a good understanding of IIs internals we will elaborate on our research followed by three different types of vulnerabilities",
        "also we will demonstrate how we apply this attacks to Microsoft Exchange Server as a showcase",
        "of course we will provide mitigations recommendations and Future Works to those components",
        "so first what is Hash table",
        "hashtago is the most fundamental data structure in computer science and",
        "its purpose is to store data no matter how the data is Hash table can hold the data in memory very well hash table is especially good at handling the key value pair and can operate data with a high performance",
        "due to those benefits hash table is used extensively in computer infrastructures",
        "such as operating system programming",
        "language database or web server",
        "here's an example of the hash table usage in programming language programming language uses the hash table widely however you don't know because they wrapped hash table into a more high level structure such as the array dictionary or object",
        "so if you are a developer you must have used hash table as the internal I assume that everyone here is a good student at University so I I skipped the hash table internal this time",
        "as for what is the hash voting attack also we are not going to talk about this attack only we still give it a slot because I believe that that hash voting attack is the best test to learn the mindset of how an attacker abuse a hash table",
        "the idea of hash floating attack is to drop all the records into the same bucket since the hash algorithm is public an attacker can predict its hash and make all records fall into the same bucket and at the time the attacker degenerate degenerates the hash table which can store numbers later into a single linked list",
        "for example the attacker has crafted several malicious records on the left side the hash function in the in the middle will process and convert the radical into an index",
        "the first record is convert to the index 4 and put into the corresponding bucket",
        "the second is also put into the same bucket the Third",
        "the fifth and the attacker can jump all records",
        "into the same bucket and the table now becomes a single linked list",
        "so the hash floating attack connect the table always sit under broadcast that",
        "thing that means for inserting and Records the time complexity comes to N squared we should all agree that N squared is is in a terrible performance",
        "okay with a good understanding of the hash table let's discuss the relationship between the hash table and IIs",
        "first IIs lab hash table",
        "it's a well-known and only web server in Windows IIs uses the hash table extensively architecture to store",
        "information such as the HTTP headers",
        "server variables configurations and",
        "cache",
        "due to the nested use of this data structure Microsoft has designed its own hash table implementation from a very early stage the following two are all the implementations that will be used in IIs one is code 3 hash table and the other is called LKR hash table",
        "the three hash tables should be the most common like the sample code in your textbooks it uses the linked list to resolve the correlation and rehash the table when it's in an unhealthy state the rehash is a series of the rebuilding process it first enlarges the table",
        "recalculates our records and reposition then to their new index",
        "as for hot hash us for hot hash function is used we will have a further discussion later",
        "the other table is the LKR hash and implementation that adds us to build a scalable and high concurrent hash table under the multi trading and multicore environment the net LKR is an acronym for the name of the creators this implementation was also patterned by Microsoft in 1999.",
        "the LKR hash is a successor of linear hashing which uses another better",
        "algorithm to resolve the expensive",
        "rehash to enhance the performance",
        "the creators put a lot of effort to make this implementation portable flexible",
        "and usable",
        "the application the application can Define its own terrible related functions to adapt to multiple products",
        "across Microsoft",
        "it's interesting to note that part of the creators are also the IIs Developers",
        "which which should be the reason why we find lots of these implementation in IIs",
        "now we have a complete understanding of the hash table it's time to go deep into our research",
        "in this section we will show the IIs in channels and Define the scope we really cared about we will first explain our mindset and idea to uncover box we are mainly focusing on the hash table implementation and its usage",
        "since most of the hash table used in IIs are cash related we also study and look",
        "into mechanism",
        "because Microsoft has designed its own hash table without open source the implementation should be an explored area to discover box",
        "so in this context we hide we hunt not",
        "only for memory Corruptions but also Logic box",
        "here I would like to highlight the Box CV 2006",
        "3017 it's a logic back in the unsafe",
        "function of PHP the hash table implementation didn't",
        "distinguish the key type of an array so that so that an attacker can delete archery elements with an index number",
        "when I saw this part it amazed me and I believe this is just the bug I'm looking for",
        "of course we also look for the algorithm complexity problems such as the hash floating attack however since it's already a 20 years old attack most of the low hanging fruits should be disappeared so in this context we put more effort into the implementation",
        "as for the usage we mentioned that the Nokia hash is designed to be a portable flexible and easy to use algorithm that",
        "can be applied to any situation",
        "the convention requires the application to configure its own table related functions during initialization",
        "this kind of extensibility gives us more opportunities to uncover box",
        "when I saw this I was curious that is the particular function good is the key calculation good or how does the function select the correct record when the Collision when a collision happens happens",
        "this type of questions all interested me",
        "so in this context we care more about the relationship between the record the",
        "keys and the function",
        "foreign HTTP request is coming the kernel http.c",
        "will first will first handle the connection and dispatch the request",
        "the Kernel check the kernel checks is based and active IIs worker if not it knocks the IRS service to spawn a new process",
        "the was Windows activation Service First",
        "reads the configuration to note several specifications for the process initialization",
        "and sprung the worker process several",
        "IRS components are loaded here",
        "the worker then lost the major which are defined in the configuration",
        "IRS by default load several modules for",
        "different purples such as the compaction",
        "redirection authentication and the cash",
        "among all measures the following four are the global cash provider to manage the cash between modules each measure is responsible for handling a different catch such as the cash flow static file the cash flow configuration or the cash",
        "for Windows token",
        "once the modules are loaded the worker enters the request life cycle the life cycle is an event Loop that process all the notifications from the request",
        "there are several events in a life cycle a manager can subscribe to its interesting events to complete its logic",
        "there are also Global events that a budget can subscribe to for example the cash provider subscribes",
        "to the event cash clean up and catch operation to manage the cash between modules",
        "so our research is not only focusing on",
        "the cash between the request life cycle",
        "but also the global cash providers especially those for our golden targets",
        "the following section is about our research and the Box in this section we will first elaborate on our idea and the last direction we are trying to find bugs we will attach three different types of vulnerabilities to prove our idea works all about our box include a hash floating dos attach poisoning and",
        "authentication bypass",
        "we will also talk about the exploitation of how we maximize the civility to make this bug impactful",
        "of course a real world authentication bypass a Microsoft Exchange Server will be detailed and demonstrated",
        "okay the First cast we would like to share is the hash building POS",
        "first we would like to give you a spoiler that all hash table implemented implemented by Microsoft are affected by hash floating attack",
        "the trade hash table is vulnerable by default and LKR hash is vulnerable only",
        "if a pro hash function is configured",
        "however vulnerable is not equal to",
        "exploitable",
        "besides finding the entrance point we still have several obstacles to overcome",
        "we find that URI cache modules seems to be a good Target the purpose of this module is to Cache configuration for urls",
        "grid configuration is costly so cash is",
        "the best strategy strategy",
        "in this module in this module every https triggers the cache operation and",
        "the most important things is that the module uses three hash table as is cache storage",
        "well and as a sport by default three hash table sounds good to us",
        "and this is the tide chart of every thousand new records in three hash table because it's not open source we must reverse the structure and code the table dynamically to get the data set the light in blue is the type of inserting random records and the light in Orange is the records with collisions",
        "you should be able to figure out there's a huge difference between the two lines",
        "however the Jitters around 35",
        "000 and 75 000 are weird what's the Twitter so theoretically the lines growth in",
        "Orange should be in linear time",
        "so what actually makes the time increase",
        "on smoothly",
        "the answer is rehash",
        "this is the part of the insert operation the implementation first traversed the",
        "linked list to ensure no duplicates and do its internal jobs",
        "however after the internal ad operation",
        "there is a call to the function rehash table if needed",
        "the function checks the number of records and rehash the table if the number is greater than two types of the threshold threshold the threshold is is",
        "Select from a list of prime numbers and once rehashing the function enlarges",
        "the table by the next prime number and we map our records to their corresponding bucket this is a huge and",
        "extensive operation that's also why the",
        "chart increased on smoothly",
        "to exploit that there are still several questions to be solved for example how",
        "much of the cash key we can control or how to construct the paper the Collision payload",
        "there are several elements in a cache key and the only element we can control is the URL test which reflected at the",
        "end of the cache key the implementation will first convert all the text to uppercase and send a key to the hash function",
        "the hash functions simply multiplies",
        "each byte of the cache Key by 101 and some stand up",
        "the function also uses an lcg to",
        "scramble the result however",
        "is this hash function good",
        "this is the answer from elect and very in their in their ocean clock at 2028 C3",
        "this multiplied and add method is a",
        "variant of bjb hash",
        "and this algorithm has been proven that",
        "correlatable by equivalent substrings",
        "point two keys have the same hash such as the PS and Q2 they must be equal no",
        "matter what you add before or after them",
        "for example after you add a letter A the",
        "H of PSA and q2a are still equal",
        "by knowing the by knowing this feature it's not difficult to understanding to understand that two equivalent substrings can be combined to from different keys such as the PSPs psq2 q2ps and Q2 Q2",
        "they all share the same hash",
        "since you can repeat the string many times constructed constructing the payload is easy you just need to find a field string with the send hash and arrangement in combinations",
        "so all of this share the same hash value this is Handy for our exploitation",
        "however there is a fatal flow in this attack that",
        "is too weak",
        "to get a notice about slow down you must have sent about 35 000 requests at least",
        "so for our one request at one record exploit is too slow",
        "and uh",
        "what's more ridiculous is that there's a",
        "cash scavenger to recycle records",
        "regularly the scavenger is a threat to delete unused record every 30 seconds every 30",
        "seconds",
        "those two obstacles makes our attacker",
        "make our attack not so practical",
        "to overcome this we have to dive into the implementation model",
        "during our investigation",
        "we find an interesting behavior that can",
        "rescue the rescue our attack",
        "the implementation will scan the key recursively",
        "it Trace all subdirectories as new",
        "records and asked all of them to the table",
        "for example in our imagination the URL",
        "will only trigger one search and one",
        "insert operation",
        "however",
        "each sub directory will also betrayed as a new record so that the URL will trigger multiple insert operations",
        "what's more interesting is that",
        "all new case will be packed with a normal record the scavenger is nice to know records and only release them one by one instead of killing all in a batch",
        "so the only question left is how to",
        "construct the Collision in this new context",
        "stop the record because because all subdirectories are Traders are Traders",
        "independent case we have to construct a payload that satisfies all the following equations",
        "it may be a little hard to imagine how to make this happen should our previous equivalent feature",
        "but if if we map all the results to be zero then since comes much easier",
        "zero multiply anything is zero and zero",
        "plus zero is also zero",
        "so we can satisfy all the equations if we make the hash of each subdirectory to zero",
        "so we can prepare a set of zero hashes and amplify the attack 10 times at least by a slide modification",
        "the result is that we can make a server on responsive with about 30 30",
        "connections per second this is not an unreasonable number because IIs can",
        "handle thousands of connections",
        "can handle thousands of connections easily and concurrently",
        "because this bug affects the windows by default we also avoid a good amount of bounty",
        "let's check the demo",
        "okay we first double check and ensure",
        "the target server has eight cores and 32",
        "gigabyte Sprint",
        "the window in the lower left is the script that monitors the status of IIs",
        "it is a simple while loop and checks the server every second",
        "okay we first run the random test we we sent random tests to the IIs you can see the loading is less than 10 percent",
        "okay we now run the Collision mode",
        "Collision yeah",
        "okay",
        "please wait",
        "okay as you can see the CPU is now on the high loading",
        "and uh",
        "wait four minutes",
        "and the the check script is enter the time out Loop",
        "and the CPU loading is 100",
        "uh forever",
        "okay here we speed a little bit up",
        "foreign",
        "is available and cannot handle any",
        "request anymore",
        "okay this is our demo",
        "the second cast is a cash poisoning attack",
        "there are two types of response catch in IIs one is the static cache support by the kernel such as the picture the CSS and the JavaScript resources",
        "the other is dynamic catch which is usually used in which is usually used to",
        "catch responses that rarely change",
        "for example the product information of an online shop or the news announcement of ncns",
        "the benefit of the dynamic cache is that you can reduce the number of the database tests",
        "Dynamic cache is handled by the HTTP cache module and you can configure the cache by the output caching component",
        "to use the cache you must first set out your own rule the law can pass on several convections such such as the file extension the query string over the HTTP header here we set our level for the extension of aspx and catch the result based on",
        "the ID",
        "so the low cost of the cash poisoning is that the manager uses a bad password to handle the quality string assign that you have already set out the rule to catch a specific a specific pyramid and inconsistency between the margin and the backend mainly IIs to catch the wrong result foreign",
        "the most common backhand is asp.net and",
        "a simple HTTP Parliament production can",
        "lower than all for the key to be cast in the color string the module only uses the first occurrence of the cache",
        "however the sp.net concatenate all",
        "together this inconsistent this inconsistent",
        "passive Behavior calls the IIs to catch",
        "the wrong response",
        "for example if a patch just prints out",
        "your name that's on the ID the attacker can poison the result by repeating the ID on the URL",
        "IIs only recognized the orange as the",
        "cash key however the sp.net will concatenate both",
        "values and show them out",
        "so the result is that the next time the user access the patch he got hacked",
        "foreign",
        "is the authentication bypass",
        "back to our opening a super secret area which is protected by a super strong passwords under the design of the IIs",
        "all of these passwords are valid",
        "I guess you might have several questions and be thinking",
        "what's the loot codes or how do I get those passwords or suspect this must be an edge case what kind of the scenario is vulnerable",
        "first log on is an expensive operation",
        "to not reduce the performance IIs patches all tokens for password best",
        "authentication by default",
        "the implementation uses the LKR hash instead of the tree hash table and configure a scavenger to delete unused record every 15 minutes",
        "foreign",
        "is highly customized",
        "during initialization the module defines",
        "several functions such as the hash function the logic of how to extracting the key from the breaker and how to decide which one is the correct record when the Collision happened",
        "and this is the hash function defined by the token cache module it simply uses",
        "the djb to Hash the username and the password and then mix them together by X all",
        "and this is the function used to decide which one is the correct record when the Collision happens the function first checks whether the log on next of both records are equal or not and then compare their username",
        "and compare the username again",
        "you may be wondering",
        "why did function compare the username twice",
        "I guess the original intent of IIs was to compare the password however the developer copy and passed",
        "the code but forgot to repress the name to the possible",
        "it's a big fail",
        "the failure could add an inconsistency between the hash calculation and the cash comparison the hash calculation involves both the username and the password however when the Collision occurs the",
        "table only compare the username to get the correct entry since we can adjust the field of the password to change the hash if a hash if a hash hit a record that is already in the table the module will return that to Earth directory",
        "so the result is that you can reuse another user's logo login token with",
        "random passwords",
        "however there are still a few prerequisites",
        "first each password attempt only has the",
        "success rate of 4.2 billion because the",
        "hash is is a 32-bit integer",
        "the other is that there must be a successful looking uh but the other is that there must be a successful logging before our attack",
        "however once the loading is done and the token is cached in the memory you have unlimited attempts during the 15 minutes time window",
        "so to make this box a more severe",
        "malability we have developed several",
        "ways to win the lottery the first enhancements is to increase the probability of the Collision",
        "and a vulnerability that requires user",
        "interaction is to land",
        "so for the second enhancement we must find a way to exploit without user interaction",
        "the last is to defeat the Restriction of the 15-minute time window we figure out a way to catch the token forever",
        "okay the first enhancement is to",
        "increase the probability as we mentioned that the 4 billion possible records are are a ridiculous",
        "number the LKR hash even uses an lstg to make",
        "the result more rendered",
        "but just because of this locg we can",
        "lower the key space because the lcg is not one-to-one mapping under the key space of 32-bit integer",
        "so there must be results that will never",
        "appear we can pre-compute a dictionary that actually excludes the password whose",
        "hash is not in the results this development can reduce a number of key stats",
        "also there are still billion possible records we have increased the success rate by 30 percent at least",
        "thank you the second enhancement is to regen Regan the initiative there is a feature called connect us that is usually that is usually used in",
        "the virtual hosting because the vendor has to separate IIs process for their customers with this feature each IIs process can",
        "be under different user contexts",
        "so under this feature IIs will Auto look on the user use best you specify corresponding the new process this token will also be cached that means we can reuse the customer's identity and no longer to wait for user interaction",
        "in this case we have regained the initiative",
        "to prove it works we did a test in our lab environment Windows Server can handle about 1",
        "000 and 800 logging attempts per second because every attempts cost nothing you",
        "can run this all day and the success rate is about 42 percent",
        "foreign",
        "you can also rank it for longer five days for 20 12 days for 50 and the",
        "success rate of running for 24 days can get 100 percent",
        "we have reproduced in our lab environment and can get a password in about five days",
        "the last enhancement is to defeat the tie window our idea is simple in modern",
        "software architecture it's common to see the pattern of a background demon monitors the system's healthy or several Chrome jobs access the internal apis regularly",
        "so we can assign a situation that a",
        "credential is attached with the contract and the gap between each assets is less than 50 15 minutes",
        "in this assumption the token will be cashed forever",
        "okay I know it's very I I know it's very ideal is there any real test",
        "sure let's talk about The Exchange Server again",
        "there is a service called active monitoring which is enabled by default and responsible for monitoring all",
        "services it checks the owa and the active sync service every 10 minutes with a text with a test credential so thanks for the health check the token of the credential will be cashed forever",
        "you can try as many as you like until you get a successful login",
        "and the password is also usable to log into the owa",
        "the account for the health track has its own mailbox too this is useful for further exploitations such as fishing or",
        "training and other post office rce together that's our last test",
        "okay let's talk about medications and Future Works",
        "for the design of the hash table it's recommend to use the pseudo-render functions such as the Sip hash or Highway hash that can reduce the collision and make the attacker more costly for the design of the cache inconsistency is still the king just like our classes today the cash poisoning due to the different possible behaviors and the authentication bypassed due to the unkinned Past groups",
        "since the hash voting attack is by this side attack there are several workarounds to mitigate the problems such as the input size limitation or a state to randomize the hash if solution has its limitations",
        "so so my last recommendation is to learn",
        "from the history",
        "there are still several cool ideas in my mind such as using Timeless timing attack to reduce the keys fast however since I am lazy will come to pick them up if you are interested",
        "this is the end of my presentation if you have any questions here's my contact information thank you again for being here thanks",
        "[Music]",
        "[Music]"
    ],
    "oc1tq_r6VNM": [
        "[Music]",
        "hey can everyone hear me in the back yeah that's awesome so thank you for joining and this is Joel Ben high and today we're going to try to answer a simple question does a single container Escape allow an attacker to take over an entire kubernetes cluster and we hope that by answering it we can share some insight that we learned into kubernetes privilege escalation so a bit about ourselves we are Cloud together researchers from Palo Alto networks so we do vulnerability research and Freight hunting in the cloud so searching for vulnerabilities in infrastructure",
        "components of the cloud and also in cloud service providers and we also look for a threat groups that Target Cloud environments specifically so that's enough about yourself our agenda for today we're going to start off by talking about container escape this thread that we keep hearing about and try to really understand what's the actual blast radius we'll then do a quick kubernetes 101 just to get everyone on the same page we'll continue to talk about what happens after a container Escape what resources does an attacker have to spread in the cluster and will see several attack classes that attackers can abuse in order to escalate privileges will then have enough resources in order to answer our question does the container Escape equal full cluster compromise and we'll answer it both generally but also specifically in the most popular kubernetes platforms today we'll wrap it up with by talking about some of the fixes that the affected platforms put out and we'll also uh talk about some takeaways that you can take from this presentation so with that I'll place the mic to show to talk about container escapes",
        "thank you Val hello everyone let's start to talk about the container Escape so ever ever since container came into our life we've been hearing more and more about container Escape in a sense of vulnerability kernel vulnerability",
        "misconfiguration uh vulnerability in",
        "Docker and kubernetes and here we're here in Black a few years ago there was a great talk about container Escape",
        "so the obvious question is do container actually contain",
        "there is no doubt that containers are great for packaging and deploying software this is the reason why we all use them but their work security boundary mostly because of the shared kernel in a nutshell the same Linux kernel vulnerability that allow unprivileged user to become a root can often use to escape from container and take over the underlying host that's because the Linux kernel attack surface is simply too big and we probably continue to see more and more variant of container Escape",
        "only in 2022 we introduced at least a dozen vulnerability of container Escape but escaping from a container can also happen because of misconfiguration the most known wire is privileged container with access to the host we also introduce a trade actors that exploiting container escape to spread in the Victor environment for crypto mining for example",
        "so we understand that container Escape will probably continue to happen and it's here to stay so we must understand what is the impact",
        "the obvious impact in kubernetes at least is a compromise node an attacker will previously compromise one container or one pods and now has a control over the entire node probably for more business logic or more Computer Resources for crypto mining for example",
        "but just imagine that our attacker is an ambitious one and it might be not satisfied with only single compromise node it'd be maybe might want to take over the entire the entire cluster and this is the question we will try to answer today if a scenario of a single container Escape could be escalated to full cluster admin access and if you are asking yourself what is the motivation you may want to take over other services or databases or even get some credential secrets to try to spread out outside our cluster to add other interesting environments",
        "just a quick terminology we're going to use today two terms admin and admin equivalent when we'll say admin one meaning that you can do any kind of operation all all the namespaces",
        "and admin equivalent is mean that you have enough permission that in one or two trivial steps you can become an admin but just before we continue we will do some quick kubernetes 101 just to make sure that we are all on the on the same page so in a one sentence kubernetes orchestrated POD containers on an old on virtual machine and basically today it's everywhere mostly heavily using Linux workload mostly on cloud on-prem and it's very interesting environment for an attacker we have the API server which is the cluster Gateway or brain and user can communicate with API server using kubernetes using Cube cattle the kubernetes CLI tool then the API will schedule a pod under on the underlying node",
        "and we'll operate this kind of operation",
        "a little bit about authentication you can either authenticate using certificate this is how user and nodes are authenticated or you can use service account token this is how pods authenticate",
        "and a little bit about authorization permission expressed in kubernetes as a verbs and resources likely secret create a pod update node delete services and so on and those permission group into a wall and when you want to Grant a permission to some identity you use a roll biting to do this",
        "and if it was a little bit complicated let's do a quick example here we have our wall who can list services and list spot and we want to Grant this permission to our identity to our pod so we will bind this role to the service account and when the Pod will running it will use this this token in in our case you can list services and list spots so that's enough for the kubernetes one on one",
        "back to our research let's try to understand now what will happen once an attacker can escape from Escape from container so before uh in order to do that to do so we need to understand which kind of credentials we have in our node so the first is the cubelet permission the cubelete is the node agent who can manage and facilitate all the facilitate the node so obviously as a set of formation that allow you to do this but fortunately kubernetes restricted",
        "the cubelet permission and if you if we are talking about meaningful attack so the cubelet is not the address it's true an attacker can manage to perform some limited attack like denial of service or maybe to get some primitive read or something like this but if we are talking about meaningful attack like full cluster admin so the cubelet is not the address but there are also another set of credentials on the Node which is the service account of the neighbor pods",
        "and the permission of value because it's depend on which application running on your ports it depends on your nodes and depending on which platform you are running your own cluster so an attacker might be it might be not has a way to to succeed a powerful",
        "permission but at least he has a chance because the cubelet permission will be",
        "the same restricted permission on every single node",
        "and today we're going to talk about this scenario exactly where we have extremely powerful pod and we name it trampoline pod that can have enough permission that can bounce you to around the cluster to jump to other node to get some high privilege and basically let the attacker have some fun in your cluster",
        "so where those trampoline pods can be",
        "let's see which kind of part are running in our typical average node first the application like redis engines",
        "mongodb or our python or golang",
        "application",
        "then commonly kubernetes we have the add-ons like Ezio for service smash or parameters for login or upper gatekeeper or convert for policy enforcement and finally finally there is the system pod the infrastructure Port like Q proxy and core DNS and those spots was already there when we are setting up our cluster and it basically depends on which platform we are running your cluster so as you already know this the system pod and in some scenario also the add-on pods are quite a blind spot because we didn't manage them configuration",
        "laughs add-on spots we just installed add-on spots using a package manager like helpful example and the author of The add-ons configure them permission",
        "and for system pods there was already there when the cluster was created so of course we didn't control or made it them permission",
        "and another interesting thing about",
        "system pods and in some scenario also the add-on spots that the deploy and install as a demon set which means they are running on every single node in our cluster",
        "foreign",
        "so if a trampoline pods not installed as",
        "a demon said is running only on one node in our cluster so if an attacker has escaped from a certain node it may be maybe and maybe not will be on the Node that hosts this trampoline pods and it's 50 50 percent and maybe less because it's depends on the number of PODS that's running on your cluster but if a trample Imports deploy and install as a demon set an attacker guarantee to hit a jackpot because every single node in our cluster will run this trampoline pods",
        "so",
        "the answer the answer for our main question today if a single container Escape could be escalated to full cluster admins there the answer found in those trampoline pods that running on every single node in our cluster so I'll switch it back to your valve",
        "is my MacBook oh awesome so actually said",
        "after the container escaped our golden ticket to escalate privileges it relies on trampoline demon sets so we went out and tried to find where those trampolines may be so this is how it looks like we looked into the most popular kubernetes platforms and looked into their infrastructure pods and this is an actual example we saw a pause that can list secrets and delete pods create config maps and update the status of nodes and we looked at those permissions and we tried to ask ourselves is this spot powerful are we looking at the trampoline and we quickly realized that we don't we don't know we don't have the resources we looked into the kubernetes documentations we tried Googling it we looked into previous security talks about kubernetes and we quickly realized that there is actually no public list of powerful permissions in kubernetes",
        "now that is actually quite scary because without knowing which permissions are powerful you can't really answer basic questions about privilege escalation right if I'm a Defender I can't really know if my publicly exposed pod can actually escalate privileges if I don't know if its permissions are powerful and as an attacker once I get a set of compromise credentials I can't tell if they're valuable or not if I don't know which permissions are powerful right so we started walking and trying to figure out which permissions are actually powerful in kubernetes and we quickly realized that a lot of permissions that we thought are quite benign were actually quite interesting if you use them in a creative way so the other approach to go about this is that we first defined what our interest in attack classes in kubernetes in our view that can allow you to get meaningful previous escalation and then we classify we looked over all of the permissions in kubernetes and classified them based on the attack classes that they can enable and this is the mapping that we came up with we came up with four attack classes about 20 something permissions mapped into each one now we won't go into every permission how it enables the attack we have an actual a report that is published alongside the stock where you can see how each permissions enable the attack but those are the permissions that we identified and we look at an example for each attack class in order to make them mobile so let's start off with permissions that allow you to manipulate authentication or laterization those are extremely powerful permission that actually allows you to either impersonate other user or to change your permission so freely manipulate the authorization of the cluster a one example for that would be the permission to escalate roles that permission allow you to add new permissions to existing roles so if I'm an attacker and I have a token which can escalate roles I can simply go to the role of my service account and edit all the permissions in the cluster which are denoted by this wildcard notation and then immediately after I'm doing that my token gets all of the permissions which is the beautifully illustrated by the token getting larger",
        "the next attack class that we're going to talk about is permissions that allow you to acquire service account tokens so either retrieve existing or issue new service account tokens now what's the impact here well it depends which service account you can issue tokens for right if you can issue tokens for powerful service accounts then you got yourself a meaningful privilege escalation if you can only let's say retrieve tokens of weak service account that's not very interesting now a very notorious permission in kubernetes that allows you to in this case the three of existing service account is the permission to list Secrets a service account in kubernetes up until now we're stored as service account tokens it was stored as secrets in the API server so if you can actually list secrets you can simply retrieve service account tokens and then use them to authenticate to the API server and as I've said if you get yourself a token for a powerful service account you just escalated privileges the next attack class you're probably familiar with it from other system is obviously permissions that allow you to execute code either on pods on all nodes in this case you're not necessarily escalating your privileges right it really depends on the permissions of the Pod that you are taking over but you probably get yourself more compute resources right uh maybe more business logic and as I've said possibly escalating your privileges let's look at an interesting example for such a permission it has a pretty confusing name it creates the proxy sub-resource of nodes doesn't really tell us much but it basically means that we can control cubelets we can simply tell them what to do and tell them hey please execute code on your pod one interesting thing about this permission that is you actually don't go through the API server which normally has all of the login and auditing mechanism in the cluster so you may be able to bypass some detections now the final attack class that we're going to talk about today and it's my personal favorite permissions that allow you to steal pods basically move existing pods from one node in the cluster to another and why would that be interesting if we assume that we already compromise the node in the cluster we may we might want to bring other parts to our node maybe because they host interesting business logic that we want to take control of them but in the case of this talk it's probably because those pods have powerful service account and if we bring them over to our node where they are going to come with their powerful service account token which we can then abuse to escalate preferences so we started with this by oh let's see an example yeah um this is a slightly more complex example it takes two permission to carry out the attack the first permission is the update node status permission and the second permission is the delete pause permission now this is actually a great example of how permissions it might look not very powerful can actually be abused when you first look at those permissions you might think that you'll be able to get some maybe denial of service by deleting pods but they can actually be used to steal pods and let's see how in this case we assume that we already escaped a container and compromise the node and we have a very powerful pod and operator on another node in the cluster which we want to bring over what we'll do is we'll first use the permission to update the status of nodes to set the Pod capacity of all the other nodes in the cluster to zero which we are basically making them unschedulable the next step is going to be to delete the operator pod and now when kubernetes has to recreate that operator pod it will conveniently have to create it on our node because it's the only scheduled node in the cluster and we successfully brought the operator pod over with its powerful service account token so that's how you still pause and if you remember we started talking about kubernetes attack classes to Define what trample and what powerful pods are so trampolines are powerful pods with permission to either manipulate authentication or authorization acquire powerful service account tokens execute code on pods over nodes and steal other pods in the cluster because those sets of permission actually get you a real shot of getting clustered admin",
        "myself talk about a few subjects let's try to do a quick recap we started off by talking about container escapes and understanding they",
        "are likely going to continue to happen we then talked about how their impact largely is dictated by the presence of powerful PODS of trampoline on the compromise node right and we Define what are powerful pods we also talked about how trampoline demon sets install those trampolines onto every single node in your cluster so if you want to really answer whether a single container Escape actually equals cluster admin what we're really asking is are there trampoline demon sets in the cluster who installed them out of the common and so on and that's really what we try to do in this research we looked into the most popular kubernetes platforms some of you are probably going to probably users of those platforms and we looked for trampoline demon sets the platforms we looked into are mostly the infrastructure layer so manage kubernetes services like AKs gke eks openshift and we also looked into a container network interfaces basically the network infrastructure of the cluster and we looked into popular projects like Calico Andrea psyllium and webnet and what we found when we looked at this pro at those projects back in February of this year is that most of them actually install trampoline demon sets by default another 12 installed them given a popular feature was enabled those are actually this is actually a breakdown of the trample in Demon sets back in February in each of those platforms and so you can see which platform had powerful demon sets which were those demon sets and what were the powerful permissions again we have a report with all of the details so you don't need to take pictures right now unless you really want to um so we looked at those demon sets and tried to understand how powerful are they could they really allow you to get a full cluster admin by default and in half the platforms that was actually the case in half the platforms that we looked into the answer to our main question was yes a single container Escape allows you to take over the entire cluster in another 25 there were some prerequisites and for example some",
        "feature being enabled so we got a mostly definitive end cells for",
        "those platforms now I do want to say if any one of you is running those platforms you don't need to panic or something like that this isn't an annotated RC right there is a large prerequisites of a container Escape happening um but it's also something to note to get your cluster security to the next level so let's see how an actual attack on one of those popular platform looks like so we couldn't obviously demo all of the attacks the ones we're going to see is oncillium which is a very popular container network interface it is what's power in the new data plane in a Google kubernetes engine the reason why we chose syllium is that because it showcases a number of attack classes and also Silo maintenance did a great job of fixing every one of the things that we're going to show here today so what is the scenario in psyllium installs two interesting components to the cluster one is the psyllium demon set a trampoline demon sets that can actually delete pods and update the status of nodes and those permissions if you remember allow you to steal pods the second thing that the film installed is the psyllium operator pod which can actually list Secrets which as we mentioned earlier allows you to acquire tokens now I want a toxic level here is that we managed to compromise a pod and breakout so we have a node under our control and our goal is to get cluster admin so get control over all of the nodes in the cluster now we are going to assume that we are on the weakest note so the one not hosting the Salem operator because that's simply the more likely case right if you have 10 nodes in your cluster and only one runs the psyllium operator most of the nodes aren't going to have the helium operator our approach to get cluster admin is to first use the psyllium Daemon set permissions to steal the psyllium operator and do then use the psyllium operator permissions to get cluster admin so let's see how the attack plays out we're first going to use the psyllium demonstrate permissions in order to make other nodes in this cluster unscratchable using the same technique that we described earlier setting their port capacity to zero we are again going to delete the celium operator part forcing kubernetes to be created on our nodes now we have the psyllium operator service account in our disposal and we can use it to list secrets and retrieve service account tokens in the cluster now the service account that we are going to Target is called crack which is showed for a clusterable aggregation controller the reason why we are targeting this service account is because it can manipulate authorization it can escalate roles another permission that we discussed earlier the final step in the attack is going to use crack service account token in order to Simply add all the permissions in the cluster to the role that is binded to crack service account token so it's only three steps but when you translate them to a cube cuddle commands it gets much more so we're going to go over this demo now it's going to run quite quickly if you can't follow each com every command that's that's not completely fine we're going to help have a a workflow afterwards",
        "and you cannot see the demo",
        "so can anyone help me with that",
        "maybe something like this let's try",
        "foreign",
        "yes okay",
        "so as I've said the scenario is that we are in a cluster that installed psyllium and we are trying to get cluster admin now",
        "we're going to start by emulating a container Escape taking over the node because that's the starting position in our attack and we're also going to define a script which basically what it does is Harvest service account tokens from the node file system and configures our CLI that talks to the API server to use them what you're going to do is check check out where the operator Port is and we can see that it's on another node in the cluster so our first step is going to try to steal the psyllium operator onto our node we are going to define a dash function which is called patch node what it does is simply a touches the allocated pod of of the node",
        "to be zero using a Json patch",
        "so you can see that the operation that we are defining is replacing the status allocatable slash pod value to be zero and then we are going to use that bash function that is powered by the permissions of the psyllium demon set in order to repeatedly set the",
        "pod capacity of other nodes in the cluster to zero now we're doing it in a loop because the the API server actually corrects this value now when we delete the psyllium operator if all goes well it must be recreated on our node and we can see that it does the node name is highlighted in red and you can see it by The Bash terminal line and that our node the host name is actually this name so now the psyllium operator is on our node and we can continue to the second stage of the attack which is to use the cilium operator service account in order to get cracks token right we are first configuring our CLI to use the psyllium operators so okay and then we can see that we can actually list secrets in the cluster so we are going to Target the service account token of the cluster wall aggregation controller or cracking shot here I'm going to make a typo that doesn't work but now it does and we get we got cracks token we can configure our CLI to use cracks token so now we are finally authenticated as crack we got its token and you can see that when we ask the API server hey can I escalate walls the answer is yes we are still not cluster admin though as you can now see the final step in the attack is to edit the role that is binded to cracks token to have all the permissions in the cluster and that's what we're going to do now we are editing",
        "the cluster role and you can see that the cluster role will now have the permission to modify and escalate cluster one we're going to just delete everything and only put wild cards there now the second we do that our token immediately should get admin privileges and when we check our permission it should it should say that we are admin and we did it we got admin and took over the entire cluster",
        "[Applause]",
        "and we're back so what attack classes did we say in this demo we started off by stealing a pod right still in the psyllium operated pod we then use this permission to acquire a powerful service account token and finally using that service account we were able to manipulate permissions in the cluster so I think it's cool to see how the attack classes that we talked about earlier actually map to an actual attack it's important to understand that we showed psyllium but other platforms had very similar issues some are less complex some more complex we just needed to demo one of those so let's talk about what platforms did when we talked to them about those issues we actually reached out to every platform that we found trampolines in and it was really actually a great disclosure experience most of them were eager to fix the issues and you can see that most of them actually did um Google actually awarded us a boundary for this funding which was quite nice so most platforms were really great about this trying to and were able to de-privilege their trampoline demon sets so they are no longer trampolines so from 50 uh back in February now only 12",
        "and a half percent a single Escape equals cluster admin",
        "while this is really great you should also not get the wrong idea about you know trampoline not being relevant or something like that because we only looked at the infrastructure level and most clusters also have a bunch of add-ons installed also application pods those can can also install trampolines into a cluster Marvel didn't look into every kubernetes distribution we looked into eight Platforms in total",
        "and the funny thing I want to say and this graph doesn't represent platform-specific attacks right if a certain platform has a specific attack to it which is not kubernetes native we didn't look into that but overall the platforms were really responsible about fixing those issues now if you run kubernetes you might might be wondering how you can identify trampolines in your cluster and what what you should do about them so I'll pass the mic back to show to talk about identifying those",
        "amazing demo and",
        "Grace so when we start our research we quickly understand that we we need automatically",
        "automatically way to identify those whiskey permission and those trampoline pods so we wrote a tool that can use both for an attacker and both for Defenders to identify and find those risky permission",
        "the tool called police",
        "it's a CLI an open open source tool that retrieved the Albert permission of pod",
        "service account and nodes in the cluster and evaluate them through policies written in Regal we have now about 20 policy out of the box each targeting different kind of privileged escalation technique and it's a customizable you can search for any patterns in compare in kubernetes are back and write a new policy perhaps for platform specific or privileged escalation attack that we didn't cover",
        "I really I really recommended all of you to take a couple of seconds and run and Flash the trampolines and the powerful permission in your cluster and this is the output how the output looks like at the top you have the policy and the severity in this example",
        "um policy that search for identity that could launch privilege escalation attack modify by modifying pods",
        "and at the bottom you can see the violated identity that have the problematic permission that enables the attack and the product actually has this service account so you can run arbuck police",
        "also today to quickly identify those trampoline pods and this risky permission in your cluster so I press it back to your valve for the takeaways so",
        "some takeaways that we think you should be able to we hope that you can take from our research so as we saw today trampoline pods powerful pods introduce new previous escalation Avenues into kubernetes cluster up to a point where a single container Escape allows you to take over an entire cluster and we actually saw that in a lot of platforms that's actually the common case right those attacks were powered by powerful permissions and we hope that the framework that we introduced of classifying powerful permissions into the different interesting attack classes can help both Defenders and attackers pen testers understand which are",
        "powerful permissions and which are risky pods now it's important to understand that those powerful permissions while we looked at them from the lenses of a container Escape they are relevant whenever you have a compromised set of kubernetes credentials in order to understand whether those credentials are actually powerful now we think that the root cause for the issues that we talked about today is that it's simply tricky to configure Outback permissions in kubernetes one side of it is that a lot of permissions that look benign are actually powerful and we hope that the the list of powerful permissions that we released today helps cover that part another thing about our back is it it does it isn't included in all of the compliance and a security check marks and benchmarks benchmarks and checklists",
        "for kubernetes meaning that",
        "it isn't one of those things that you check for would have to check for in order to get some compliance standards so in a lot of clusters our back isn't really looked into too much what does that causes it brings a bit of false confidence we believe because you might have a cluster that passes all of the security checklist all of the compliance benchmarks everything shows green but you still don't realize that you're a single container escape from getting your whole cluster compromise so our recommendation for Defenders who want to tackle this issue is first of all monitoring you are back you should be able to tell which of the powerful permissions in your cluster and then you should be able to say and you should be able to say whether those are actually needed and in the good scenario you can actually maybe drop some permissions we hope that you can use Albert Police to do that now once you know which of the powerful permissions in your cluster we recommend separating powerful pods from",
        "a untrusted or publicly exposed pods",
        "um not all powerful permissions can be dropped some of them are necessary so you should be able to use this technique in order to limit the impact of container Escape untrusted Ford and a powerful pod running together on the same node is a pretty toxic combination now one thing that we didn't get to talk about in this session is audit and admission policies we have those in our report those can actually be used to detect and prevent some attacks so for those of you interested this is a link to our report it is a link to Albert Police and we'll be happy to take any questions that you might have thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "X5VJ4BENx8w": [
        "[Music]",
        "now it is my pleasure to Welcome to the stage hashishan",
        "all right thank you so much Ray for the kind introduction so today uh we will I'll be representing my colleagues which is from the University of Florida and University of New Hampshire to introduce our recent research work invisible finger a practical electromagnetic mechanical interference attack on touch screen based electronic devices so my name is hodgison and my I actually currently a PhD candidate in at University of Florida so today we will be going through a lot of things and we want to give you a little bit agenda and a little bit heads up on what's going on and what we'll be talking about okay so we will talk about who we are apparently and we also give a short you know by concrete trdr if you too long you didn't read and just in case that you want to know what we can do and uh What is the characteristic of our attack and just decide whether this is interesting or fun enough that you want to listen to and uh considering that we think most of the audience won't really have a background knowledge on how touchscreen works and how fundamentally our attack will be functional so we will be spending quite some time on introducing how touchscreen is going to work and we also propose a theoretical attack on touchscreen device and from that once we have all this kind of background knowledge we'll be introducing how do we generate a precise touch event using I am a signal from a distance and we will also introduce from how do we bridge the gap between precise touch event generation and the Practical touch event attacks and at the end of the presentation we will have a q a session where you can ask other questions about it okay cool so who we are and we are actually a research team which our name is a security in Silicon lab from University of Florida and we focus a lot on security research so if you are looking at it into our recent Publications we focus on architecture security and the side channel security IP core security AI secure iot security CPS Security basically every kind of like a security aspect that you want to cover uh you know like we kind of do that and we're a pretty much big lab and we have published some works on SMP and DSs triple AI this type of top tier academic conference and a small advertisement",
        "time for us we are still actively hiring PhD students which works on cyber security research so again if you are interested feel free to shoot me a message to send us an email and you know we will talk about that off the line okay and I will leave my emails and my advisor email at the end of the slide so if you're interested and you think okay maybe this is my area and I want to spend time on this just feel free to send us an email or uh you know shoot us a message so okay so enough uh without further Ado we want to talk about what is our attack we call our we named our attack invisible finger but what it actually is invisible finger so in short you know in one sentence this is the remote precise precise touch event injection attack against a capacitive touch screen using iemi signal so if you want to you know learn something about some characteristic about our attack so beyond those the sentence I just described our attack has affected distance attack distance around three or four centimeters and we our attack can induce short tab long press and the omnidirectional swipe gesture onto a capacitive touch screen and we also our attack also works on different types of screen devices regardless the scanning or driving methods that have been applied on the touchscreen controller and also our attack the first practical attack with other side screen locator and touch event director event direct detector so if you want to find something find some kind of remote touch event injection attack that'll be us that's actually the first thing that we do and we also list every detail our attack and also our published paper and all the video demonstrations online so if you are interested you can check out our website which is the invisiblefinger dot click online after this presentation and you will find every detail of everything and then because there's something we cannot recover today okay so comparing with traditional cyber",
        "security research right such as like Android or iOS or some other like software type of security research that touchscreen security especially for injection attack is on touch screen is still relatively still new a type of attack and even for the professional like secure researchers is still kind of a new area right so if you search this type attack online so I guess you probably can find one or two just a few published papers online you know on top tier cyber security conference like such as SMP or use Nix this kind of thing and that's why today we'll be spending some time on introducing the background of the touch screen so once you get the knowledge of this once you go through all the details that we provided it should be able to just reproduce that whatever we are doing right now and and apparently you will also find out why we think touchscreen attack right now is still kind of at a low hanging fruit stage so which means once you understand everything maybe you'll be able to come up with a more powerful or much cooler attack compared with ours okay so again like touch screen everyone use that or you're holding on a cell phone and does that touch screen is basically one where you give the command to your screen and to your device and you want to manipulate the content of your device touchscreen will be your way and right now you can see like the touchscreen is pretty much involved in everyone's everyone's daily life right so among all the touch screens that has been used on our smart device such as tablets or just like a laptop so capacity capacitive touch screen is actually the most popular type that has been used so the report a report in 2022 kind of just show roughly 46 of the touchscreen that has been used right now is capacitive touch screen and in your work that's why we are choosing the capacity touchscreen as our main target because it's going to have more impact once we realize all these type different type of attack right so meanwhile let's take a look at what is advantage of the touchscreen and capacitive touch screen and what is the reason that it's being used by different vendors and what is the current research state or status of the capacity touch screen so capacitive touch screen really there are certain advantages of them right like so the touch event can be done without with only your like a bare finger you don't really need a pen to operate that and I also support gesture recognition and real-time feedback and all sort of stuff and also for the vendor side once the production is done you the vendor only need to calibrate the touchscreen or touch screen controller once so you you don't like the low cost and the wear resistance just makes the capacitor touchscreen it's kind of the right choice right now and what about the security research right so it's a product and the secure researchers like us we definitely want to want to find out what's wrong with it what can be wrong with it so in as for the security research we actually divided them into two categories like content stealing and 40 injection so content stealing which means you're going to use some kind of sensor em or wave this type of like techniques you try to read the content that has been displayed on touchscreen from the distance and as for the touch event injection I would say we are kind of like a one of the three papers that have been published on top two conference uh you know doing this type of attack and if you are trying to search this online you will find a tap on ghost which is published on SMP and there's also another goes to touch paper published on usinx this year so as for",
        "the touch capacitive touch screens there are two main categories the self capacitance based and the mutual capacity space so the South cap has some basic touch screen since the changes the capacity between your finger I'm sorry like between the electrodes and the ground introduced by the finger touch which on the contrary for the mutual capacitant based touch screen there is a mutual capacitance CM between the top and bottom of the electrons so where when your finger touches screen a mutual capacitance change Delta c will be generated and that's where the touch the capacitance was measured and that's why the touchscreen controller will recognize that as a touch screen that's a touch event so once we decide this is the proper Target that we want to attack now let's take a look at how fundamentally a mutual capacitance touchscreen works as we just mentioned the mutual capacitance touchscreen often consists with you know multiple pairs of transmitting and receiving intellectuals so you can just charge or discharge the uh uh the the the distance between the uh between the electrodes and beyond that you also have in some kind of like a excitation signal generator QT sensor",
        "which is short for like a charge transfer sensor and ADC which is sure for analog to digital converter and a microprocessor you should notice that the micro processor isn't really the CPU we talked about that on the our on our cell phone it's actually something like a dedicated design to operate and measure the touches from the touchscreen so what a human finger is presented on the touchscreen it actually Alters the current capacitance of touchscreen and this change can be either positive or negative it really depends on human impedance variation now we can see fundamentally all since that the capaciting touchscreen does it just measure the capacitance and then determine whether it's a finger touch if the finger touch the capacitance is going to be changed right so but internally how this mechanism Works housing capacitance is measured so as we just said that to develop an effective touch screen attack it's really better to understand you know how a mutual capacitance change is sensed in this page I will talk a little bit slow because you know there's a lot of theoretical stuff getting involved and just feel free to interrupt them you know Give Me A Sign you think I'm talking too fast or like if you want to you know like hear a little bit more clearly on this part okay so this page will show how the mutual capacity and change Delta C itself it sends at T time so the switch S1 and S3",
        "is going to be closed so the internal voltage source VI is going to fully charge cm and the Cs is going to be fully discharged so the voltage of cm is charged to VI and the voltage on CS is going to be at zero as a result you can see that the output voltage of VO is zero as shown in this figure so now at T1 moment the S3 is open and the voltage on the Cs is still going to be 0 and the vo is still going to be zero and at T2 moment the S1 is going to open and v i n is disconnected from the CM and the voltage on the CM holds on the on the VIN and the total electric charge stored in cm is basically equivalent to CM times Vin",
        "and a T3 moment the S2 is closed and the",
        "charge CM times bin is stored in cm is going to fully chart transfer to Cs and this is why the reason this is the reason why we call this a charge transfer topology as a result the output voltage vo is given by the equation that is above which is list over here and this is the way that capacitance is measured by turning the capacitance into the voltage which is made which is measurable by a simple ADC right so if the vo is smaller than certain threshold voltage like I said vth then there will be no touch event happens because basically this is how you measure the capacitance right if the capacitance is small enough which means there's no touch event at tt4",
        "the S2 is open the circuit is ready for the Nexus sensing cycle so if they're the finger touch you know introducing a mutual capacitance Delta c as we can see the total electric charge stored in store on CMM plus Delta C is going to mode it's going to time bin so this is the this will be the final result right so in the output voltage vo has a Delta vo changes as shown in the figure the given by the equation involved and if the magnitude of the vo plus Delta vo is higher than the threshold which means the capacitance change beyond the threshold and the touchscreen controller will recognize as at a finger touch because as we mentioned before the fundamental percentage if there is a capacitive change there will be a touchy band it's just going to be how large is the capacitive change will be right so that's a little bit too Theory right like a lot of people if you don't really have a background knowledge on this you might be won't be able to understand that so we kind of made a little bit animation over here you know just try to uh kind of like tell what's going on with it so as you can see the purple one is going to be the value of the ADC which is going to measure as you can see with the current capacitance we have the value of around like a one uh vote and once we have once we change the capacitance over here this is another one once we change the capacity here just pay attention to how the what is the read of the ADC right now and once we operate all this so and finish all the patterns and just and the sequence now we're gonna have a different value so as you can see because of the capacity is changing and then the voltage will change as well and that's actually fundamentally how most of the touchscreen works and and well they're probably going to have a little bit you know complicated circuits to eliminate noise or have fancy algorithm but fundamentally that's actually gonna it's gonna work right so now we have a basic understanding of touchscreen works you know just try to read the capacitance and turn that into a voltage read and then if the voltage rate is changing big enough I think or the touchscreen consider gonna think this is going to be a touch event so let's talk about how theoretically we can introduce a touch event after we understand the working principle of the touch touch screen attack mechanism can be proposed over here by applying an external e field or electric field e to the touchscreen the vertical component will introduce a voltage Delta VM across two electrodes So based on the superposition Theory the voltage will be added to original VM so the introduced the voltage equivalently increases the increase like electric charge is stored in the CM so as a result the output voltage has a Delta VOE changes so if it's big enough the circuit will recognize this kind of external e field e as a touch event and that's all we want right so we want to operate the touch band without actually you know physically touching the touch screen just using some kind of em signal",
        "so in theory that should works right so but we don't know yet so that's why we want to see if the scenery actually works so this page we should this slide will show the how this the simulation of applying electric field which is the E field to the sunscreen by any of voltage into a copper plate above the touch screen so it actually field can be generated by using antenna is it going to be like a finger sized fingertip sized copper plates or just a simple needle and based on the simulation we set up a experimental environment which allows us to generate a field with a signal generator RF amplifier some kind of a corporate place as you can see that right now using the copper plate once we remove the copper plate we can generate a bunch of touch event along the directions vertical horizontal no problem right but as you can see over here the generated touch event are more or less like a little bit random we want if we actually want to use this in Practical attack we want to be precise right we want to take fully control where and when the touchdown is going to generate and that's where we that's why we are going to need some kind of theoretical analysis at this point so in order to generate a successful uh touch event or successful attack we are going to need certain conditions on this so there are several conditions for successful attack first one will be minimum e field strength ECM so if the field is not strong enough of course you are not going to be able to generate any kind of touch event right so um so we listed the filter strengths em given by equation over here where the D is going to be distance between two electrons or AF is going to be equivalent area of the false touch so which means using our using our equation over here which by the way all the equations are derived by us so if you're going to find online they're not going to be some kind of equation sitting over there but you can you know use the equation list in our slides on your paper to reproduce our attack so if the E field is not strong enough you won't be able to generate anything but what is the minimum if you list of strength that's going to be need you can simply use our equation to calculate the correct value of it and what else so another condition would be the frequency of the Fe for the applied AC electric field so now we have found that the time duration TS of the closing time switch so if the TS is going to be total number of the period of the applied e field which means it's not going to generate anything at this moment because the sum the summary the summary of this is going to be zero right so which means now we know if we want to introduce a certain touch event this is going to be a frequency that you don't want to do at all because regardless of the strength the minimum the if you feel the strength is not going to generate any type of touch event and on the other hand on other frequency Fe Max a very small e field strengths will achieve a false touch so this is the frequency that we want to know using the uh using the equation should uh list over here we should be able to introduce a touch event with least field strengths which is means like our attack is going to be more feasible right so we want to evaluate all those type of series they want to derive the now we have derived all the equations that we need to like right but we need to validate whether this type of model or equation is actually true so we designed a series validation experiment you know just use our previous setup and then use all the combinations of the word frequency what if your strengths or what under word condition the touch screen will recognize a touch so and over here you can see that the measured Fe Max and Fe mean actually matches what we calculated like a certain type of frequency when we won't be able to generate anything like regardless if your strength certain frequency that we can easily generate first first goes a touch event so which kind of like proved that our previous theoretical analysis is actually true in addition the final condition of the time is actually the time duration of the attack since the touchscreen controller also having a calibration function which means it's going to read the environmental noise and try to make sure like you are not really having too much strong environmental noise if there is it's going to dynamically adjust the threshold which means if you are going to apply this type of IMI signal on your target really long enough that you won't be able to see anything because the threshold or like it's going to be really easy to generate attachment even though there is no e field because like the threshold is dynamically changed right so this page will show that the measured minimum e field for a goes to touch as a function of the duration of IMS signal a continuous e field attack will cause a touch screen to enter ghost mode at this moment because you know which means the ghost attack will happen even when your external view if you is is removed so which means if you want to have a successful attack you should avoid to apply this type of attack IAM signal on this long enough so now combine all these type of techniques okay sir let's to take a look at what we can do using the calculated IM signal right so we want to open applications with this we have the signal pre-install our computer or our cell phone and then we place this type of thing on the East E field strengths uh on our antenna and then we try to align that with our Target and then once we have the IEM signal turned on we should be able to just see that the application is open and also",
        "we want to open a website with this right so we have the shortcut of the uh Chrome browser on the uh on the desktop and now we have the IEM it turns on we now enter the University of Florida website so that's definitely you can do but you may also notice there are certain creature of that which means the uh the touch events are not precise",
        "not as precise as we want so there is still something we want to do right so now we have all the theoretical analysis right we know how to calculate what is the frequency what is the E field and what is the phase or whatever you know in order to actually introduce a precise touch event introduce a touch event but as you also see in the previous demo this is not precise enough and also we kind of just put the cell phone on the table and we know how where to attack so this is not a prac This is Not Practical right this is not feasible we're still missing something so here actually lies our contribution one of our major contributions compared with a previous approach that was published on SMP and use Nixa so one of our contribution is actually generating the precise touch event and conductors or experiments so if you want to generate precise touch event what would be the challenge I mean like if you're not already familiar with this type of like attack so the challenge is actually going to be the challenge comes from the scanning or driving method from different touch screen control of course like we were saying all the stuff we introduced to before is more or less like a simplified version of the touchscreen design right so in real world of course the vendor such as apple or Chrome or uh sorry like apple or LG or Samsung they're going to have different design of their touchscreen controller so they're going to use different method to make sure the touchscreen event is going to be detected as precise as possible as sensitive as possible but we cannot we can already know that ahead so in general there are two type of methods of Performing the time scanning on electric electrodes gray so either going to be sequential or user going to be parallel so the sequential scanning is going to be excites X or Y it electrons one by one and then you're gonna search the you're gonna sense the each line on Y and X on electrodes irrespectively so what about the sequential I'm sorry what about the parallel scanning so whereas a parallel scanning is trying to encode the excitation signal and drives X or Y electrodes at the same time and it sends the capacitance change over here so you may want actually going to wonder why this is important so on these slides as we can see over here so like the driving signal actually looks on on iPhone we actually measure this actually our uh you know device from iPhone 11 Pro and pixel 2 with respect to different driving scan driving scanning so on the left side you can see there's a parlo driving uh scanning and on the right side you can see there are the scanner driving method and when you are seeing the excitation signal looks like that looks like totally different right so like on the left side you have like an encoded something like encoded right but it happens at the same time on the right side if you measure that at different place you can see that all the different place on the screen the shape and the um and the pattern of the sensing signal is going to be it's going to be the same all the things different is going to be the timing so that's why it's actually called timing sensing uh method",
        "so that's why is this important because the previous approach that was published on you know those top tier conferences paper generally only works well on sequence sequential driving type touchscreen because the pattern is really simple right you can either you can literally see that and uh the attacker can try to measure the driving signal and choose a correct timing to inject the iemi signal just like this right so I measure this and I know this line has been sensed I'm gonna apply items as it's a precise moment and then there will be attachment was you know going to be sensed so our attack of course is going to work on sequential but what about the parallel because parallel is going to be encoded right so our work is totally different we don't require particular driving mechanism instead of we use antenna design where you can generate focused uh Focus if you apply the interference on a very specific region on the touchscreen so we apply appropriate Emi signal and we wait for this place to be sensed just like your finger works that's actually the reason we pick the name invisible finger it's actually mimicking the way that your finger works by using appropriate Emi signal a proper antenna design right so another advantage that brought up our Tech is that we don't really need to analyze how the driving signal on different touchscreen controller looks like and what is the correct the timing to do that because when you look at this this literally we measured from different device and all the driving signal looks totally different let's say I want to attack a new device right so if you want to do the sequential then that's all you can do right you can that's all you can do you need to analyze this type of sensing signal one by one and now we are going we want to generate a field on specific region right so in order to do this and we need to make sure our general e field is really focused in your narrow and uh position so a good design of the antenna is really important in our case we use two different type of antenna spring-loaded copper needle and copper plates they all have different pros and cons for example a copper needle is going to be like a have very Focus if you're on the tip of it and then copper plates which means you are going to have a little bit more uh strong environment e field because it's going to one of the place is going to connect to the set Source signal Source another one is going to connect to the ground which is going to make the E field A Little Bit Stronger comparing with the copper needle part copper needle antenna design and now we have two type of antenna design right so both of them can generate the focus a field but there's still something affecting our attack one of them is actually table material so for the common materials for example mfmdf solid wood acrylic marble or copper we measure them one by one and we see what is the difference between a table material because we still want to make this practical right so the only difference is that the materials dielectric constants are going to be different but when you actually look at the table or over here we will see that as long as your table material is non-metal you should be fine right so acrylic or marble or you know like a solid wood doesn't really change a lot of our success rates and what about the type of seeing things so we tried this type of attack from distance from 10 millimeters from 50 millimeters from 20 millimeters and we try our attacker for 30 times and we keep track of how many times we actually successfully uh generate touch event and in our case uh as long as the touch event as the type of section is under 20 millimeters at this point using our antenna design current antenna design we should be good and that's for the real table top sequence normally it's just the less than one inch so like we should be good at this moment so let's take a look at one have two centimeters Capital top thickness what we can do over here now we are maneuvering the antenna we are constantly applying IM signal so basically as over here as you can see that wherever we move the antenna to we are capable of generating on touch event right under the antenna so it's super accurate right but we still also want to see that whether it's repeatable right whether it's stable so that's why we put over it here and then just try to make our IM signal is generated every one second and we keep track of like what is the coordinate of the generator touch event and over here if you're gonna you know zoom in a little bit you will see that every touch event is actually precisely again at every moment and every one second we have a touch event generator over here",
        "so with all this stuff together we try to do something a little bit complicated right rather than we totaling the uh antenna move around we want to do a little bit more practical so that's why we have antenna array like sitting you know like right on top of the right on top of the target device and we try to unlock the iPad with our simple clicks right now and as you can see right now it's just slowly typing the you know slowly typing the number and then try to unlock the device at this moment and as this also tells us like we don't really include like limit our uh antenna number into one we can definitely use multiple antennas right now so in order to utilize this type of attack so what we do over here because you cannot remove your antenna right we assume that you don't have a robotic arm or whatever so that's why we designed different antenna arrays so we have a sparse antenna array which are used which later on we will talk about which are used to detect where's the phone located at and we also have a dense antenna array so as long as your distance between different antennas unders is more than six millimeter you we don't really see any kind of interference between different antennas and we also have a modularized antenna array design which means you are capable of designing your own PCB and assemble everything and programmingly control your antenna array on or from a distance so with all this stuff together we test how our attack is going to be effective on our on our device so we tried this on iPad Pro on OnePlus 7 Pro on Google or",
        "all sort of like a different vendors and this is all is going to be uh this is actually already so our attack works on all of the different uh devices which comparing why this is important because comparing the previous approach where the only did the experiments on certain one or two brand of the device which we should our work is more generic right more Universal we don't care how your touch screen computer is designed we're just trying to act like the way that your finger is going to work and also as there's something that you want you might also notice that we list there is a functionality which will cause fiber right here and for the iPad Pro and for the eye Surface Pro 7 we are capable of generating um Omni interaction of swipe gesture on the touchscreen and uh which means which this is the part where like our previous approach never done this before and in general our work our work works better on iOS device on than on Android device and we think you know whatever noise elimination algorithm employ on iOS device uh touchscreen controller actually makes our you know attack a little bit more a little bit better so let's take a look at how our Omni directional uh swipe or uh attack works okay so now we have antenna setting right on top of our device and we can inject a short tab we can inject a long press and we can turn this long press into drawing mode which over here you can see even you know like there's a Critic sitting between we are capable of you know just holding the antenna and maneuver it and you can just draw any kind of thing as you wish and also you can see the duration of this type of thing is really long enough right you can totally use this to unlock a gesture-based lock on a graph or graph log base log and uh so if you want to utilize this swipe also because the budget would already in a problem we didn't redo this but we think you can definitely use sometimes like a linear Gantry miles or like a robot arm to hold maneuver the uh the uh the antenna to achieve this type of uh to achieve this type of attack so now we have the precise touch event right so let's just recap a little bit right so using our Emi signal parameter and our antenna design now we can just generate a short Tab and long press on an interactional swipe but there's still something missing right everything we done is under our control we know where the phone is located we maneuver the antenna to the place that we want to attack and of course we can already do that in real life and we cannot claim that with a practical iama attack if we are only only you know stop right over here and there's still some gap between practical attack like a precise touch event generation and practical touchscreen attack so here comes our third major contribution we present a complete practical attack vectors so now we have established all the surgical background knowledge and actual setup right so we're still missing something we are missing something where the attacking device is going to sitting right on the table and the phone is going to be randomly located like when the victim walks into a comfort zone that place the cell phone on the table you don't know where it's going to be pressed at right so we need some kind of phone locator to tell us this type of information and for the attack scenario a simple click is definitely not enough because we're gonna involve multiple touches at multiple locations and even sometimes we're going to need the swipe right so but if the multiple touch event is going to happen we don't know whether the previous touch is going to be successful or not so we need to have a way to tell us whether touch event is is um was successful or not so it's that's where we are going to need a touch event detector so as a prone locator as a phone locator remember we were talking about we were having the uh they are we are having like a different sensing signal of the device and this type of sensing signal actually tells us what we like where is the phone and how we can actually use it so using this type of signature and we can have a quick very reliable currency can classifier which means we know the location of the antenna array and we also know how the when the using antenna array to measure the emitted signal from the device and we can combine this two information together we are capable of having uh antenna allocation a screen location transformation uh Matrix so using this type of thing as you can see using 12 antenna together we can fully recover how where is the phone located or where is the device is located without even have to see that you know because everything is under the table right and we tested that on different devices everything works on like everything it can totally recover the position in within one second and then the error is within one centimeter so as for the touch event detector we need so that that's actually a pretty funny phenomena that we are preserving because the scanning signal from the device is going to be different if there is a failed or successful ayama attack so over here that's where our ayama signal is turned on turn off and as you can see that if the successful IM attack was recognized so there will be actual active scanning uh signal animated from the touch screen so where you can just use this to detect that so now here is our end-to-end attack um we want to combine everything and show you how we can manage it to you know like have everything together and then try to generate a touch event on this so now we have everything you know like a place under shoebox and we over here we do this like a manually so we want to tell you that that using this type of signal we can how do we actually recover the device and how do we find this a correct antenna to uh attack the um to attack the uh the the touch screen and once we have I said once we have the correct location and we choose the target like the nearest Target antenna we just use like we just turn on that one and then try to generate a touch event at that position okay so what about the attack scenario so in order to do the attack scenario we actually have different for example like we have click based attack which going to be able to install malicious application on Android we also have we also are capable of connecting monicious Bluetooth peripheral on iOS device and as for the gesture best attack we can send a bank fraud message we can send money by just using press and hold on paper icon which you can show your QR code and then you can just scan that afterwards and we can also just unlock the phone even though the phone probably is protected by gesture uh unlocking mechanism so we did an attack setup with one of the operating here from our lab and we asked him to sit in front of the desk and randomly press the cell phone over here and there I want to see how we can how well we can attack that and as for the attacker evaluation uh we are capable of uh we are a couple of like our work our attack Works six hours ten times on iPad our attack Works a nine hour times on iPhone 11 Pro and as for installing malicious application Android device on with one plus pro 7 Pro well sadly our attack only works three times out of the ten times because you know like the yes and no button are really close to each other so like sometimes we just close we just click on the no and we ruin the channel of the attack so that's the attack right so whatever the mitigation so mitigation side the vendor can actually try to use a pressure or Force detection and because we are not really going to generate any kind of attack pressure or Force by just using IMS you know so like for example like a Samsung IC over here it actually tells you what is the force that has been sensed at this moment on the touchscreen so you can use that to filter out of those kind of ghost touch that we just generated but what about the customer right so you can definitely just buy this car a third day back or you know is it something like an Amazon but it's going to also block out all your like uh cellular or a Wi-Fi or AMC the type of thing thing which makes your cell phone totally unoperational so that's not cool and we actually think there's a cheaper and better way to do that so like it's really simple you just have this kind of a case phone case with the cover and you can actually tape or glue the third Friday fabric with inside so this kind of fabric is going to be a thing you can just kind of go use that right next to your uh cover that your phone right next to your touch screen and we test that so only like uh I think only in that 0.2 millimeters this type of thick uh fabric that should be able to block our attack like really uh really um effectively so",
        "again as you can see that this other type of attack is not really complicated at all right so it's really simple and that's why we think at this point it's still low handful and we're still actively working on this type of this area and try to make this attack more like a little bit more perfect right so again um so uh that's all the presentation of our talk and thank you guys for listening if you want to check out my video you check out the paper we wrote please visit our website and if you have any question you know send us DME over the Twitter or if you send me a email over the uh to either me or my uh my advisor's um email address all right cool okay thank you guys so much",
        "foreign",
        "[Music]"
    ],
    "vjLNh2KNkl8": [
        "[Music]",
        "I'm my name is Arden einar I'm a security researcher at the analysis research labs and Analysis is a company focused on Enterprise software security",
        "and among the different is enterprise software developers sap is probably the most popular one with over 400 000 customers and that is 400 000 installations and including ninety percent of Fortune 500s and sap develops",
        "enterprise software that is used by different companies to manage their business processes and their most critical assets that includes their operations their financials their human",
        "capital the customer relationships Supply chains many others and to do so they they provide different modules that can be included in the in the sap system and they are all based on most of them are all based on web services that are accessible through HTTP and this is true for both Java above and even s4hana which is their Flagship product and to expose these Services they use a proprietary HTTP server called internet communication manager now the internet communication manager or ICM is used to handle all the communication that is a between the sap system and the outside world like clients for example customers or employees but also with other SAP systems and with our system that can consume these services and to communicate with other with our clients there are different protocols that the ICM can can handle like before which is a proprietary protocol like RMI from java IOP SMTP and the most",
        "important one and the main purpose of the ICM is to handle HTTP and https and what's really interesting about the ICM is that it's present in all sap system by default so all installations all sap installations will have this this component and it will be exposed by default so this is part of the what is called sap kernel and so any system like Java a web dispatcher which is a load balancer is for Hana the cloud all are going to use this exact same probability hdb server",
        "of course we don't have the source code of this HTTP server so we have to reverse engineering I had to and understand how this system worked and",
        "this is probably the most important part of our research to understand how it works because then vulnerabilities are going to come by itself and so sap does not provide a lot of information they provide this small diagram that we can see in the slide but we are going to abstract this to make a to understand how this actually works so to abstract this and I'm going to abstract a lot of the internals of the architecture so that I can I can explain this in 40 minutes and I'm going to see the ICM as just a system that will receive clients a requests and responses and first when a client starts a TCP connection the ICM will create our will start a worker thread which is just a simple thread that will be assigned to this TCP connection to handle all the requests and responses to do so it will use an HTTP parser and also some internal handlers to actually try to resolve the request and generate the response and if it's not possible to do it inside the ICM then a different process which is a job organ or an above process will be used because in there is the business logic of the of the sap system so when our request arrives from the client the worker thread will try to parse it will try to resolve it and if it's not possible which is in most cases that it will happen that way it will send the the request to the Java arrival process through what is called a memory pipe I'm going to explain why submarine piping a minute then they work a process will resolve the request generate a response send it back to the ICM and the ICM will send it to the client so what are memory pipes well MPI is just how they call memory pipes it's a framework that is used to support the exchange of data between the ICM and the Java River process which I'm going to call worker process and to do so and to do it efficiently induce the shared memory to send MPI pointers that are just pointers to the shared memory even though it's called memory pipes it's using shared memory and when these memory pipes are sent or that when these MPI pointers are sent between the worker Pros we worker thread and the worker process they are going to be sending a reference to an API buffer which is just a buffer inside the shared memory that is a fixed site buffer of 65 kilobytes and they will be reserved and free both by the worker thread and by the worker process using an API Handler",
        "so let's see an example of how this works first a request will arrive to the inputable Handler of the worker thread which is just a TCP socket with an internal buffer for every day that arrives from the TCP connection and when the icms or the worker thread in the ICM is ready to handle the request it will read from this inputable Handler it will Reserve an MPI buffer in the shared memory using the mpa Handler and it will store the request there now it will try to resolve it it will pass this request it will try to resolve it using the internal handlers which I'm going to explain also later and if it's not possible to resolve their request inside the ICM it will forward the request to the worker process and this will be done by sending the mpia pointer now the Java River process will have a reference to this position of the shared memory and it will generate a response for this request which again will be placed in the shared memory by reserving an MPI buffer and the reference will be sent to the worker thread the worker thread will be able now to send this re this response back to the inputable hanger which will forward it to the client finally the MPI buffers will be freed and the references will be lost",
        "he also said that jicm will try to resolve the request using internal handlers so what are they well when the request is parsed the the parser will actually choose which handles should be included in a list of of handles that should try to be used to resolve the request and this is going to be done by looking at the URL so depending on this URL some of these handles will be included and some don't and what's important is that when a Handler is able to resolve our request it will just send a response back to the client and all the other handles will be deleted from this list and there is request response cycle will be completed so first we have the cache Handler is the first hander that will be used and it's always going to be included in the list and the Chicago will just do what is expected it will look in the cache for a store object for the URL that is was requested and if it fails it will continue if it's able to to generate a response out of that it will send it to the client then we have the admin Handler and the authentication Handler they are both present by default but they are only going to be included in list depending on the pattern in the URL so for the admin Handler is if they if the URL starts with the prefix a slash sap slash admin and for the authentication Handler there are some hard-coded values in the ICM that will be compared to and depending on that it will include it or not next we have the modification the file axis and the redirect Handler which are not really interesting because they are not present by default they need to be set before the sap system starts in a specific configuration file and finally we have the Java navab handle with just just handles that will be used to forward the MPI pointers to the specific process as you can see there is a specific function for each of the handlers there are also some 100 this is these are functions inside the ICM and there are also some other handles like the low Handler which is not quite interesting because it cannot generate a response so we are not going to see that so let's see an example of how the ICM will resolve our request using internal handlers first the request will arrive and in this case it's a request it's a get request to slash sap slash admin so when",
        "the ICM is ready to to handle this request it will Reserve an API buffer store the request there and then it will use the parser to select the handles that should be included of course the cache handle will be included in this case the admin Handler because of the URL prefix",
        "and finally the Java rebuff Handler which is also always included at the end now it will call the Cache Handler and in this case let's say it fails so now the admin handle will be called and again in this case let's say it's able to resolve the request so it will generate a response it will not place it in the short memory because it's not necessary to do it and the other handles will be deleted and the response will be forwarded to the client finally again the MPI buffer will be freed and the request response cycle will be completed but what happens when we have a request that is longer than that 65 kilobytes so as long as it's bigger than the mpie size the MPI buffer size sorry so again we are going to have some problems because we are going to need more than one buffer for this and I'm going to call this kind of request a long request even though it's not that long it's just like 65 kilobytes but what is going to happen is that when this request arrives for example a rigors containing in 66 000 bytes in the body the worker thread will Reserve an API buffer and it will store the first 65 kilobytes and this is because the internet handlers only need the healers of our request to resolve or to generate a response so it's the ICM expects that if an internal Handler is able to resolve the request then there is no body and in in sap they have the headers cannot be longer than 65 kilobytes therefore it's not necessary to store more than one or to reserve more than one MPI buffer now the handles will be called and in this case only the cache and the Java or above Handler in this case will fail and so now when the cash when the worker process a Handler is called the rest of the request is going to be placed in the share memory because the business logic or the the actual Java River process will need the body of the request so the ICM will reserve a new MPI buffer or as many as needed it will place the request there the rest of the request and it will send both references to the Java River process now the gallery or process will be able to generate a response again it will store their response in an MPI buffer it will send a reference back to the worker thread and the worker thread will now be able to forward the response back to the inputable handle which will forward it to the client and now as there were more than one buffer used for this request instead of erasing or freeing each of these buffer One By One The MPI free or buffer function is going to be called so that all buffers are freed and that is all buffers associated with the worker thread",
        "and now the references will be lost again so let's see at the first vulnerability so as I said the ICM is not expecting that an internal Handler is able to resolve a request with a body but what if we send a long request that is a result by an internet Handler again we see a request which is a get to slash sap slash admin and with a body of 65 66 kilobytes",
        "um and so this was what it would happen is that the worker 3 will again reserve a buffer place the first 65 kilobytes in this buffer and it will call all the handlers the cache counter will fail but now the admin handle will resolve the request and that is something that the icing was not expecting to happen so the response will be created it will be forwarded to the client and the the counter will be will be deleted under of course the MPI buffer will be free and the request response cycle will be completed but we have more data from the previous request in the inputable Handler so what will happen is that the worker thread will read more because it's really waiting for a new request and it will place this request or the rest of the requested body in this MPI buffer and it will consider it as a new request so if you know something about https synchronization then you will know that this is a big vulnerability because we are going to be able to desynchronize any ICM or the communication between a proxy and an ICM in any case and that is because this request that we can see in the slide has nothing strange it's completely RFC compliant and so any proxy that sees this request will think that this is an isolated an isolated HD message because it's a get request to a normal URL and it contains a body of 65 in this case of 65 546 and 17 bytes which includes the entire body and that is also the get a smuggle request and when this reaches the ICM",
        "and the ICM will actually split this and it will consider that the last part of the of the body is a new request so this will allow us to split the request and actually cause a desynchronization",
        "now you might think that this is not such a critical vulnerability but remember we found our limited that is without them to get without authentication and that is in a component that is completely exposed to the internet in all sap by default and you are going to see how we can use this and how why this synchronization is so critical because I'm going to explain how we can use this to either still a user's credentials it is still session cookies and also modify the behavior of the application I'm going to show actually one example there are others I'm not able to show this in in this presentation you can read it in the white paper but what I'm going to show is how to hijack a session from a from a user and to do so I'm going to use the NWA endpoint which is also present by default in all saps and it's an endpoint that is used to redirect users to the login URL and this provides two interesting features the first one is an open redirect that will allow us to inject something in the in the array reg or in the URL actually in the host so we will be able to change anything we want by placing something in the host header of the request of course this is not actually a vulnerability this is a feature because in some normal cases we are not going to be able to modify this in addictive",
        "and also the other important feature is that we will be able to reflect parameters we will be able to reflect anything we place in the body of the request and in a post request and the query string of a get request in the query string of the redirect URL",
        "okay the as you can see the line breaks will be replaced with spaces",
        "so let's combine this NWA features and the the synchronization to hijack a victims request and a victim session to do so the attacker will send a payload which is just available to uh to an internal Handler or a request to an internet Handler that will we can that it will contain a smuggle request when this reads the ICM it will be splitted as we already said so and the first part will be resolved by the internal Handler and the response will be sent back to the attacker but the rest will be stored in the ICM because in this case the content length states that there should be 100 bytes in the body but we can choose any amount of light we want but as you can see there is no body so it will wait for more data also you can see this is a post request to NWA and with the host hitter being evil.com which is a host controlled by the attacker so when a victim issues a request to the proxy the proxy will forward this request and it will concatenate it with the with the previous smuggle request and it will use the first hundred bytes of this request as part of the body so the response that will be generated by the ICM will be a redirect to evil.com and this this redirect will",
        "also contain in the in the query string the first hundred bytes or as many as we want of the original request of the victim and this also includes the cookies",
        "so when the browser of the victim receives this request it will send a new request sorry when the victim drops will receive this response it will send a new request but in this case to evil.com which is a host controlled by the attacker so this request will not only contain what was expected from the redirect but also the query string will contain the original request of the victim including the cookies",
        "so that way we will be able to hijack any any victims session and the cookies and we will be able to actually take control of an application if we hijack for example an admin user but for each request that we are able to hijack we will be needing to we will need to send a new attack and we don't want to do it or we want to just send one attack and to make this persistent and what's interesting about the vulnerability and why it's so critical is that we are not using any HTTP headers to attack this so we actually don't need to inject any special or strange header to cause the synchronization uh so what is going to happen is we are going to be able to exploit this by using HTML forms or JavaScript as you can see in the slide I can create a form that is going to send a request to an sap system with a URL being starting with Slash sap slash admin so it will be handled by your internet Handler uh it will contain a padding that will make this a long request and at the end will contain the smuggle a message of course it's the the smartest message is the post request to NWA as we already saw so when a victim receives this what is going to happen is that the JavaScript that is found at the end will submit this this form and the attack will be created but in this case from the victims browser and we can also use this kind of attacks to uh in other in other vulnerabilities like the one found last year in hi proxy which again did not require any exchange or invalid HTTP header and or in any",
        "case a forbidden here like a host or a Content line heater so we will be able to use the same technique but in this case using DNS rebinding to allow the browser on the JavaScript to send the extra the extra headers",
        "I'm going to show now an example of this",
        "so in this tab we are going to see the victim and the victim is going to send a normal request to start page and we can see that the response is 200 and in this request it's also included the cookies of the victim and nothing strange is going on until here okay you can see the cookies but in this tab we are going to see the attacker which is going to send the payload we already saw this is again to slash sap slash admin I'm going to use slash sap slash admin because it's always present and he sees it and at the end it's going to contain the smuggle request",
        "so when this is sent to the to the ICM it will place the smuggle request in the eyes in the back end and it will wait for more data so when a victim sends her request he will receive a redirect as we erase off that will send him to the malicious domain which is controlled by the attacker and it will send also the the session cookies and everything at the first in this case 200 bytes of the request",
        "if we follow the erection",
        "what we are going to see is that the evil server actually received this this data so we already have the cookies of the victim but also it responded with a form that will continue the attack so now the big thing will become the attacker and this will create a botnet that will persist the attack as long as we want",
        "but after seeing this vulnerability I wanted to know more about the ICM so I started looking at the different features that it offers and what's interesting is that the ICM when it's configured for Java for a Java process will accept pipeline requests this is something expected from the RFC but in I enable this is not by default so this means that the ICM will allow to receive a concatenated request in the same payload and when this happens the worker thread will actually store both requests in the same API buffer but when the HTTP parts were recognized that there is an extra request it will reserve a new MPI buffer and it will place the request there so now the worker process will continue processing the the first the worker thread will continue processing the first request it will send it to a Java process the Java process will generate the response it will place it in the MPI buffer send it to the worker thread and the worker thread will forward this response back to the victim or to the client actually now the MPI buffers will be freed one by one the references will be lost and the request response cycle will be completed and now the worker third will start processing the next request that was stored in the in another MPI buffer because this was a pipeline request",
        "but what about sending uh a long request",
        "with a pipeline request at the end so let's say we send a request with this longer than 65 kilobytes and at the end we send another pipeline request now the worker thread will reserve a buffer again it will place the first 65 kilobytes there the when it's ready to send it to the Java process we'll store the other part in another MPI buffer and the HTTP parser will recognize that there is an extra request so again it will reserve a new API buffer and it will place the pipeline request there now of course the worker thread will send it to the Java process the first two buffers it will generate a response place it in natural memory send it to the worker thread again and the response will be forwarded to the client but remember one thing when we send a long request the buffers are not free one by one instead they are going to be the MPI Freel buffers is going to be used and so all the buffers associated with this worker thread will be freed and that includes the the MPI buffer that was used for the pipeline request so now we have a reference to a free MPI buffer and when we try to of course the the reference is not lost when the MPI buffers are free and so when the worker thread sends this to the Java process we will see a narrow race because the the worker threat thinks that there is no buffer being used so what can we do with this well of course we can have a reference to our free MPA buffer and if another TCP connection another worker thread tries to store a request in the shared memory if we are lucky enough it will reserve the same MPI buffer that we were using and actually this is going to happen a lot because the mpa Handler actually allocates the free buffers in a list that is actually a stack even though sap states that this is a queue we are when after reverse engineering the the ICM I noticed that this is not a good stack so a free buffers are going to be used a lot again once over and over again so",
        "so the worker 32 will place the request there and it will modify the the buffer and of course we will have a different value inside the MPI buffer but if we try to get the response from this we will still have an error because the worker 31 believes that there are no buffers used so what we want is to write in in the same position after a big team plays his request and we are going to do it by sending an incomplete pipeline request so when we send incomplete requests the the worker thread waits for more data and incomplete requests are going to be any request that does not contain two line breaks after the heaters or that contains a body shorter than the message length healer was stated so when the worker thread reads A tries to read this this request it will it will parse it and it will set again will be said again to read mode because more data is required so when this data arrives then it will be written at the end of the API of the MPI buffer and it will be written at the position that is stored in the offset so each worker thread has an offset for each MBI buffer as you can see if we send first some data and then we send more data it will be placed in the same memory address and the offset of this buffer will be",
        "modified so again let's see an example we will send a request a long request with an extra byte which is the pipeline request",
        "it will be stored the first part it will be storing the MPI buffers and then the HTTP parser will recognize this and it will place the extra byte in another MPI buffer because it will believe that this is a pipeline request again the first part will be result request response will be generated will be placed in the shared memory forwarded to the worker thread and the worker thread will forward it to the client now all the buffers will be free and we will have the reference to this place but when the workers will try to parse this pipeline request it will stop and it will be set into read mode now if we are lucky enough a worker thread 2 or a client a victim will send his request and the worker thread will reserve the same MPI buffer",
        "and when this happens you can see the MPI buffer at the top the workers need 2 will have the offset 55 because it has written 55 bytes the request will be placed there and if the attacker then sends a request or the rest of the request you will be able to Tamper the request that the victim issued so now when the worker 32 sends the MPI pointer to the Java process the job process will actually use the new the new request that was modified by the attacker so this will generate for example a malicious response will be placed in the MPI buffer and the worker thread will forward this back to the client okay so again the steps to reproduce this attack is the attacker needs to hijack an API buffer the victim will send a request that will be placed in the same MPI buffer the attacker will then tamper this data and the victim will receive the malicious response which in this case for example if we send again to start page as a victim in some cases we will receive the redirect to evil.com and we can use the exact same attacks in that in the previous example in the previous vulnerability and any attack of smuggling exploitation will be will be successful and also the we will not need a proxy because we're actually tampering different TCP connections so we connect we can make this attack even without a proxy but it is less reliable",
        "but if you see that the image you will notice that some of the responses does not contain a stethoscope and that is because in some cases we are not tampering the request a buffer but instead we are tampering a response buffer because MPI buffers are multi-purpose so we can use the same API buffer for a request and a response so again let's say we already have an API buffer hijacked and a request arrives from the victim",
        "and in this case let's say that the victim does not reserve the same MPI buffer but another one this is just a timing scenario depending on the time when we send one request and the other in some cases one buffer will be used and in some cases another so in this case another MPA buffer will use for the request it will be sent to the Java process and the job process will generate the response that will be placed in this case in the MPI buffer we have a hijacked so now the response will be placed there and if at any of this and if sorry and if at this point we are able to send more data we are going to be able to Tamper not the risk the request but the response so we will be able to place anything we want we will be able to write an arbitrary response that will be sent to the client",
        "so when the worker thread to uh sends before sending the request is going to pass the response itself sorry the response is going to be parsed it will send it to the client and if you notice the the MPI the API buffer you will see that there is an extra header that I included there and that is sap cache control here which is an internet healer used to to select which responses should be stored in the cachet",
        "so what's going to happen is that the cache Handler will think that this response should be stored in negative therefore is going to say to see what was the request URL and it will store the response for that resource",
        "and we can even play the role of the big team if we instead of sending just the attack we can also send a lot of requests to actually modify any URL we want so we will be able to poison any URL and to to create a response I will completely arbitrary so we can place a script we can place anything we want by using the sap cache control",
        "so we are going to see a demo of this attack and remember one thing if we are able to this is not reliable this is not really reliable we will need some some attempts not a lot of attempts but it's not going to happen in one attack but if we are successful for only one attack then this response will be stored so it will be persisted forever if we set a big sap cache control max age value",
        "so as you can see we send a request to start page and nothing strange happens okay we just get a normal response",
        "but we are going to try to focus on this start page URL",
        "so I'm going to use a small script I wrote in Python that is going to first try to hijack different API buffers",
        "then it will send a lot of requests to start page so that we are able to modify those responses and then it will try to add to Tamper the data of these responses so it will try to place the sap cache control in this response and also a malicious script",
        "of course we are not going to be able to hijack this buffer and modify the response in just one attempt we are going to need to send a lot of attacks actually not a lot some a few a few of them",
        "so as I said after one of these attacks is successful the money the start page will be modified and the the script will recognize this it will change the times to try to be able to do it and again as you can see after a few times where we were able to modify the start page so now when a big team or any client requests for the surprise he will actually receive a different response which is which contains a script and an arbitrary HTML",
        "[Applause]",
        "okay so with this we are able to modify anything we want from the application but still there is something else we can do and that is to try to modify or to try to Tamper the memory of a of the cache of another file and I'm going to show you how so I said that we we were going to try to modify the response just before the response parser is called but what if we try to do it after that and that is just a matter of lag of course but after sending a lot of requests and attacks we might be able to do it so if the response is not modified and actually the response for the request that the victim issued had a sap cache control the response of course will be parsed will be sent to the to the client",
        "will be called at this point we had we hadn't modified day or we hadn't tampered the response so the cache Handler will actually create a file because a cachet objects will be stored in a file and in this file it will place some special healers these headers will tell information about the response such as the length of the entire response the length of the body and some other information that is not quite important and if we are able to modify or to temper the response at this specific point then the cache Handler will place the response in this file and it will not match the headers that it created",
        "so when another client sends a request to the ICM and to this specific resource which is corrupted the request cash will be called it will find a reference in the cache and it will use this file to generate a response and this response will not be placed in the shared memory as we already saw but it will be placed in a hip in a hip buffer and the length of this buffer will be set using the healers so in this case it will be 85 kilo 85 bytes but the actual",
        "response was longer than x85 so we are going to be able to write in this buffer and actually obtain a heat buffer overflow okay and we have proven that it is possible to modify other data structures that were in the hip so that we can override different address pointers and eventually obtain remote execution if we are able to defeat a memory randomization",
        "so sap created two CVS for these",
        "vulnerabilities actually I reported some other vulnerabilities but these were the most interesting ones and the first one was a CBS S10 as Ira approved it's possible to hijack all clients and the second one was an 8.1 because they stated that the attack complexity was high and the scope was unchanged we do not agree with that part that is what sap stated",
        "um and also this is quite critical because it affects all the saps in the world we can choose any sap and it will be vulnerable to both of these attacks and this includes Java above S4 Hana which is in the cloud a web dispatcher which is the load balancer used for most saps and all any any sap product",
        "they also released two security nodes and a manual workaround that can be implemented in both the netweaver and the web dispatcher and finally we are navsys created a detection tool that will allow clients to know if they are vulnerable to this or not so finally some conclusions",
        "um it was interesting to see that HTTP servers are great targets for attackers because not only they are exposed as we already know but reverse engineering one of these components is quite easier than one might think because remember the HTTP server must be compliant with the RFC so we know what the HTTP server is going to do we can predict what is its functionality and most HCB servers has same same functionalities and workflow even though the internals might be different and also it's really important to be able to recognize where the requests and responses are stored in the memory so that we know what are we what are we going to be able to modify and not also it was really interesting to see that it is possible to escalate low level vulnerabilities that in the past were not exploitable okay because for example in the past we were not being able to we are not going to be able to split or we are not able to exploit use after freeze in uh in an HTTP server but using this Advanced ATP techniques we",
        "are going to be able to of course modify a invalid cylinder we're going to be able to modify the application by using a attack that don't do not rely on HTTP headers or we are going to be able to bypass vpns by using DNS rebinding and create botnets",
        "and finally uh we can see that the isimar which was the code name for these vulnerabilities was really important what they were considered to be really critical they were addressed by the cyber security infrastructure Security Agency of the US and sap stated that",
        "these were probably the worst vulnerabilities in years and because it affected all sap installations and they were accessible through a really exposed service that was actually exposed in the internet in a lot of different companies",
        "[Music]",
        "foreign",
        "[Music]"
    ],
    "xC9iM5wVedQ": [
        "[Music]",
        "foreign",
        "thank you so five years ago at black hat 2017 we talked about in Destroyer",
        "the first ever malware specifically designed to attack power grades and we labeled it the biggest threat to ICS since stuxnet and today we present the",
        "sequel in Destroyer 2.",
        "but before we get to that we'll put this latest attack into context and go over the selection of the attacks by the APT group behind it we'll do a recap of the original in Destroyer so we'll also be comparing those two versions we'll discuss the 2022 incident how it unfolded and take a closer look at the industry to malware we also look at some other malware that was deployed alongside with it and then we will end the presentation with some defense and detection advice",
        "so I'm Robert lipovsky my co-speaker is Anton chedapanov and we're both threat researchers for ESET Anton's specialization is Advanced threats and",
        "apt attacks Research into these areas and I also look at apts mostly but not only those also crimeware a bit of vulnerability research for example at black hat 2020 I could co-presented our research on the crook Wi-Fi vulnerability but that was virtual so it's really good to be back in person this time ESET for any of you that are not familiar with the company so we've been on the market for over three decades and we're the largest endpoint security provider based in the European Union specifically in Slovakia which is right next to Ukraine by the way and what you'll hear today is our original research I mean we have a unique Vantage Point as the most widely used security vendor in Ukraine many private and public sector organizations use our software giving us direct Telemetry and we see that the attacks unraveling in real time but it's not as you notice it's not just us two because we have a very special guest today directly from Ukraine Mr",
        "Victor Zora who is the Deputy chairman of the state service of special Communications",
        "he's the chairman of SSS CIP in Ukraine and he's overseeing the incident response to the industry to attack so he is one of definitely one of the best people to share very valuable Insight on the incident so it's a pleasure to have him here with us",
        "so the Cyber war in Ukraine didn't start",
        "this February it started in 2014 or perhaps even towards the end of 2013. and here's a list of the most notable apt groups that have carried out targeted attacks against Ukraine over those years mind you this is not a comprehensive list either this is just the selection that we made and from this selection we will focus on in my opinion the most aggressive of these groups the one behind the power grid attacks sandworm",
        "Santa worm has been attributed to the Russian military intelligence service Gru and in October 2020 the FBI even released a public indictment of six Gru",
        "hackers for taking part in some of the campaigns and attacks we'll be discussing next",
        "by the way if anyone is wondering where the name sandworm comes from here's the answer in some of the early campaigns using the black energy malware we discovered these text strings in the command and control server addresses so apparently the operators were fans of Frank Herbert's classic and we first talked about these Dune references at the virus bulletin conference in 2014 but it was actually eyesight Partners now under mandiant that coined the sand worm name",
        "so we've been tracking them from the beginning since black energy actually evolved from a cyber criminal commodity piece of malware to a cyber weapon in the hands of sandworm and looking into our Telemetry the earliest sandworm traces we could find there dates to 2011 and here is one decoy document that was being used at the time referencing a conference early the following year",
        "then as I indicated towards the end of 2013",
        "we observed a notable increase in targeted apt activity against Ukrainian",
        "high-value targets so preceding the",
        "Russian occupation of Crimea in the beginning of the war in donbass San Juan targeted all types of organizations including government diplomatic media Transportation even the",
        "Ukrainian elections",
        "one of the main methods they use to infiltrate organizations was through carefully crafted highly really highly targeted spearfishing emails and here's one example that's even using the war in donbass as a lure the email says that the Ukrainian prime minister is instructing various State institutions to check every Parliament member for supporting the separatists in",
        "the East and that in the attached file there was a PowerPoint presentation with this list of alleged separatist",
        "supporters so as you can see this is some really good social engineering here this is not your common Nigerian prince camp and in the background um black energy would be downloaded and installed from a remote server also this",
        "exploited a zero day vulnerability in PowerPoint so even recipients could have been that could have been compromised even if they had fully patched versions of Windows in office",
        "so black energy was used in many campaigns against many organizations in Ukraine but for sure the most notable attack and the one that caught the attention of the global cyber security industry was the one against the Ukrainian power grid which culminated in December 2015 when it became the first ever blackout caused by a Cyber attack",
        "it was facilitated by the black energy malware and carried out against multiple",
        "electric distribution companies in various regions across the country so-called Obel energos",
        "and the attackers misused remote access",
        "software to manually switch off the flow of electricity and as a result the homes of over 200 000 ukrainians across the country different regions went dark for several hours",
        "here's an infamous",
        "leaked video taken by one of the operators at one of those targeted substations showing how the attackers are remotely connecting to this workstation and interacting with the scada software there manipulating circuit breakers",
        "and showing that look no one is touching the mouse or the keyboard",
        "almost exactly one year later in December 2016 there was another blackout again caused by a Cyber attack and this time the attackers really stepped up their game there were quite a number of notable differences for example only one substation was hit",
        "but the main difference is that the attackers had much bigger ambitions we discovered the malware that they deployed in Destroyer",
        "and unlike the previous years manual disruption through radmin industrial was the first ever malware to that was specifically designed to attack the power grids in an automated way that's the key word here and we'll come back to that later",
        "so in the following years after that there was a lot of evolution of the tool set used by sandworm and the group split its activities we were tracking the gray energy cluster which continued attacks against the energy sector and there was the telebots cluster which carried out attacks primarily against the financial sector in Ukraine and telebots was also the subgroup behind the infamous not petyard break in June 2017 which obviously needs no introduction and I won't go any any detail on what became the most devastating and costly Cyber attack in history I'll just mention and give credit to Anton who discovered the origin or or the patient zero of the outbreak and and uh found out that it originated from a supply chain compromise of Emmy Doc and therefore made the attribution link that now pekia was the work of sand worm as well",
        "in 2018 we discovered and a tell about",
        "backdoor called exermel",
        "and the significance of this is that after one and a half years this was the first hard evidence for attributing in Destroyer to sandworm based on code",
        "similarity so all of these conclusions that we're making all of these you know links putting together pieces of the puzzle we have to actually back them up with with Clues code similarities execution chains share Network infrastructure and so on",
        "then in the following years we saw sandworm attacks in Ukraine but also in other countries there was Olympic destroyer in Korea gray energy also in Poland um sand time uh in Georgia turkey experiment was also found in France so the gru attackers continue to be",
        "active but they get a much lower profile they were no longer you know in mainstream media like the years before",
        "until now",
        "on February 23rd",
        "this year just before 5 PM Ukrainian time",
        "which is just a few hours before the Russian military Invasion we detected attacks by malware called hermetic wiper in Ukraine",
        "and not expecting what would happen the next morning obviously but with the escalations and the Russian army stationed at the Ukrainian border we felt that this discovery was something that shouldn't be reserved for for our private threat Intel customers only but we wanted to share it with the community and we did that in this Twitter thread uh hermetic wiper was found on hundreds of systems in multiple organizations and it was a pure Act of cyber sabotage so he was trying to render the computers in these organizations on bootable and",
        "in effect any public-facing Services inaccessible",
        "and it was only the first in a series of wipers that we discovered in Ukraine since February and their their technical level varied",
        "and caddy wiper was one of the more advanced ones one notable feature that I'll mention is that it was abusing a driver of legitimate this partitioning software for its lower level file system operations",
        "the compilation timestamp suggests that",
        "the malware was prepared at least several months before it was deployed",
        "but hermetic wiper wasn't the only malware used in this campaign there was a worm that we call Our Calling hermetic wizard for spreading across the network there was hermetic Ransom Which is far ransomware like not petia",
        "by the way one of the components in hermetic wizard was named by the attacker's romance dll probably a reference to Eternal romance even though no exploits were actually used in this case",
        "and if you think about it it's kind of strange to employ a wiper",
        "and a decoy ransomware",
        "which are essentially doing the same thing right in one campaign moreover hermetic Ransom was poorly written in contrast to her medic hermetic Ransom poorly written compared to her medic wiper and one possible explanation for that is that the malware was being deployed through group policy so the machines would download it at different times as they were being turned on and the attackers probably tried to deploy her medic Ransom after they discovered that we were detecting and blocking hermetic wiper",
        "here's the ransom message displayed by hermetic Ransom and here are some Easter eggs found in the code",
        "then on March 14th",
        "we discovered another wiper caddy wiper and I won't go into the detail and I also won't be covering all of every wiper attack because we discovered quite a few since February but I encourage you to check out a broader presentation on the Ukrainian cyber War by Jax and Tom Hegel this afternoon",
        "but I'll stick with caddy wiper for just a second because it was notable because we later saw it again in the in Destroyer 2 incident so this March 14th attack was targeting organizations in the financial sector and from a technical point of view it's not too interesting um one notable thing I'll mention is that it was avoiding destroying data on domain controllers to regain retain access inside",
        "organizations while still disrupting uh",
        "operations",
        "okay",
        "now on to the events of April 8.",
        "so we were contacted by cert UA to help them respond to a cyber incident at an energy provider and to help them analyze as a suspicious piece of malware and our analysis found that the threat was bigger than expected it was a new version of in Destroyer something which we haven't seen for the past five years on a positive note while the first in Destroyer incident caused the blackout lasting around one hour this latest one didn't even accomplish that so the attack was thwarted thanks to a prompt response by The Defenders at the targeted interval company the work of cert UA and our assistance but although no blackout took place it was still a big deal because had it had the attack been successful theoretically more than 2 million people could have been left in the dark since the targeted the provider of electricity in a region with that many people so in our opinion this was the most significant Cyber attack even if unsuccessful during the war thus far",
        "and now I will pass over the microphone into Victor should you share his insights on the incident",
        "thank you Robert thank you Anton for calculating me join you in this presentation uh it's a privilege for me to be a black cat for the very first time and second I would like to express my gratitude to all Partners who continue to support us in this unprecedented war",
        "in our struggle for existence",
        "uh this uh this is perhaps the biggest challenge uh from World War II for the whole world and it continues to be completely new in cyberspace",
        "uh and uh a lot of our I would say this word cyber friends continue to support us and provide assistance with software Hardware",
        "clouds",
        "consultancy service and threat intelligence",
        "um and uh two of uh I would name these companies most of them are here but uh two of them is it in Microsoft historically uh",
        "uh I've gained the largest coverage on Ukrainian networks and endpoints and",
        "this allowed them to uh to continue being a two measure Telemetry providers",
        "in Ukraine",
        "and uh is it worked hardly for 20 years to gain this coverage and as Robert mentioned uh it is contributed to the first in Destroyer case in 2016.",
        "uh as most of the audience are familiar with uh the number of cyber incident report in the first time uh first months of War but uh however the community and experts",
        "and Ukrainian Sovereign Defenders were expecting for",
        "significantly more",
        "sophisticated uh incidents and cyber attacks",
        "there are a number of reasons why uh",
        "well I didn't cancel but uh in the end of March and in the beginning of April we face with a number of really huge incidents and one is in Destroyer two so but up to the moment since the beginning of year we registered 1000 and",
        "600 major cyber incident and uh",
        "1074 from February 24th",
        "so most of these attackers are focusing critical infrastructure and government agencies and based on experience we gained from the last eight years of cyber aggression against Ukraine we continue being very attentive to all tips we receive regarding the energy",
        "sector",
        "um and uh it's uh our privilege for third UA having a lot of communication a lot of cooperation with many uh",
        "um cyber intelligence providers and it's been a big privilege for me to have direct contacts with uh Kim makers in in",
        "cyber intelligence companies who can quickly send us tips uh if any anything serious is happening and that was the exact case when we received tips from Microsoft and for from uh ESET",
        "and we immediately reached the victim to",
        "check whether there are false positives or not",
        "and uh when we receive this confirmation from them that there are potential issues we gain access to the network and started providing incident response and we discovered lately that uh perhaps the",
        "initial compromise happened even before February 17th",
        "um I will say just few words uh",
        "explaining why this operation is so complex so it's not about in Destroyer 2 this malware specifically designed for the ICS it's a well planned and technically",
        "sophisticated operation with a lot of tools we later discovered for example load maze malware for Windows",
        "workstations uh with an algorithm which is waiting for letter z letter z uh has become a symbol of the invasion we also discovered um metal operator backdoor specifically designed for free",
        "business for Linux service and so we saw that attackers used a lot of wiper scripts like awful Shredder solo shred and they are orchestrator orc Shred to clean the logs of their presence and the same was done for uh for Windows workstations the overall idea was to provide this blackout in the end of Friday so the scheduler was pre-configured for",
        "uh five uh 58 pm",
        "expecting when most of",
        "administrative staff and all workstations all workstations are still on and this level speaking their things going home so this blackout would cause a serious impact on up to 2 million people which Robert just mentioned",
        "um and uh the overall impact we can just just imagine so there is Friday evening and uh we can't uh",
        "um uh it is coming soon and uh people watching TV watching news or this is exactly with the middle of uh of active phase of invasion",
        "so we consider this to be a kind of supportive operation to a lot of connection uh conventional operations that happen each day and this is a totally destructive faction focusing on completely civilian infrastructure to our point of view and uh Anton will later go through all these sophisticated tools that were used together with in Destroyer to focusing on RCS component but the idea was to to",
        "switch hand to wiper all the infrastructure but these attackers uh",
        "missed one very important thing that Friday is a short Working Day and most of most of people and their work in 5 PM or even 4 P.M so and 5 58 or",
        "95 of Works percent of workstations were",
        "Switched Off so they weren't wiped and this allowed to to get a full picture and uh after uh",
        "after getting an access to network it took less than 12 hours for us to come to initial conclusions and share iocs of industrial 2 with 5 selected partner",
        "companies just to add these ircs to their database",
        "and",
        "the interesting case and completely different story why why it uh what was",
        "published in the Press so it was fast to the press and even was posted on Twitter this TLP Amber document which we shared with our partners and that was one of the reasons we decided to uh to organize a presser and why the deputy minister of energy to this and share this story to world to our opinion this is important for community and this is an act of aggression against civilian",
        "infrastructure another one act of regression from Russia's side in this hybrid hybrid war and cyber aggression and that basically allowed a lot of companies making their brilliant reports",
        "on Industrial uh like ESET Cisco Dallas",
        "these two companies help us in incident response Mandy and Microsoft and many others so that's it",
        "Robert back over to you thank you thank you Victor that was very insightful",
        "so let's continue with a quick recap of the original first version of in destroyer and it was unique not only because it was the first malware specifically designed to attack power grids but also it was only the second ever malware deployed to cause physical damage to Industrial Hardware the first being stuxnet and then the third afterwards being Triton",
        "so its first goal was to de-energize power lines to open circuit breakers at a preset time using one of its payload modules and will show the architecture in just a second ly the attackers would wipe scada software so that operators couldn't see the status of the environment they couldn't control it that was being that was supposed to be done by the wiper component that you can see here so you can see that sandworm has a really long history of wiping malware",
        "and this module specifically wipes files belonging to scada software and then makes the control station unbootable by corrupting its critical files and crashing it and rebooting it and it wouldn't boot",
        "um third the industry would attempt to take out protection relays and these play a really important role because they are there to protect the power grid from harmful conditions and if disabled the grid could potentially become vulnerable and that was supposed to be done by the denial of service module it was trying to exploit a vulnerability in Siemens ciprotech devices by sending a specially crafted UDP packet to Port 50 000 which would switch the protection relay into a firmware update mode where it would be stuck and effectively not doing its job then the utility operators would attempt to restore power we close the breakers manually and if the protective relays had been disabled the grid could become unstable and possibly lead to even physical damage of Hardware so had this been successful it wasn't but had it been the outage could have lasted much longer than it did so the Russians had higher Ambitions in the industry attack but failed in part because of better resilience of the Ukrainian Defenders based on experience from the year prior to this and in part because of coding mistakes that the attackers made here's a quick look at the architecture uh it's a modular framework there's a",
        "launcher component that's responsible for timing the attack and it has a hard-coded time when to launch those payload modules that implemented four different industrial communication protocols that you can see listed there most of these were dlls each with their own configuration files and I'll focus on IEC 104 as that's the one that's also used in industry 2. so the protocol itself is a network extension of ic101 a telecontrol protocol used in power grids and it's extensive I mean no need to go into details the important thing and the problem is that it was designed decades ago without focusing on security there is no Authentication it operates using a client server model so the control station is the client the remote station is the server and what the malware is doing is that it's creating and transmitting so-called asdu messages to change the state of the remote station iOS information object addresses to the state off",
        "now what those ioas map to exactly depends on the configuration file of the configuration uh in the substation environment and in Destroyer creates those telegrams based on its own configuration and here's a dummy example not one actually recovered there's a station IP and a port there's a process to kill so this is a process of the legitimate scada application running in the environment to avoid potential conflict",
        "um it supports console output also logging as you can see on the right and this illustrates how the operation can",
        "uh can work so for example is sending off commands to a range of iOS from 10 to 15. and now let's analyze in Destroyer 2. so comparing it to the first version there was a lot of code similarity and we can say that if it evolved from the same source code the notable differences in architecture are that industry 2 was self-contained in a single executable whereas the original was a modular framework and it only implemented the ic104 protocol",
        "uh the configuration in this case was embedded so that means that for deployments with different configurations the attackers would have to recompile it each time we analyzed two samples with different configurations both of them appear to be compiled on March 23rd",
        "but that's just the compilation timestamp as Victor mentioned the attackers had been planning this attack months ahead and now I pass the words to Anton to walk you through the details of the config thank you so the new configuration format is",
        "stored as a hard-coded string so industrator 2 is able to communicate with multiple devices at once",
        "one sample it can that we analyze contains three such IP addresses and",
        "other sample contains eight",
        "so this is example of the configuration you see IP address port number",
        "range mode but it's not used in the samples",
        "name of legitimately process to",
        "terminate and then it renames the file in order to",
        "disable or",
        "disable the execution",
        "to prevent automatic execution of this software and then there are these iOS",
        "in one sample we found 110 iOS in order",
        "sample we found 68 iOS",
        "and the configuration it's really similar to",
        "previous one but it's just stored in a different format you have the same values there here and on the screen you",
        "can see packets sent by industrum malware and it's dissected by Wireshark",
        "the malware it generates this packet on the Fly and the most important",
        "values you can see it's a double command",
        "it sends ioa and the command is off",
        "and it's important to know that it does not exploit any vulnerability at all it just uses protocol in the way that it was designed to use and if we convert the code configuration in human readable format we can see that",
        "it sends execute off commands that is specific iOS",
        "so what this iOS do it's really hard to find out because you have hundreds of these iOS and",
        "uh iOS can be different from industrial",
        "side to Industrial side because it depends on equipment and on settings and so on however if you Google some specific iOS that are using industry you",
        "may stumble open documentation from ABB and",
        "in this documentation it says some of these iOS they belong to circuit breaker filter protection so it disables",
        "this protection when we compare code of old industrial",
        "to a new one you can see a lot of similar string constraints and similar code fragments when we compare output console output",
        "it's a bit changed too before it was more verbose it was clean and even",
        "colorful and now they are using some codes instead of text",
        "um similar to Industrial one industry 2 in",
        "attack in this attack they deployed",
        "wipers in order to make",
        "recovery more difficult",
        "so what model they use together with",
        "industrial they use KD Viper it's a Viper for Windows but uh",
        "um for Linux they use additional Vipers",
        "called Orchard solar thread awful thread",
        "and or set is a worm that tries to connect the multiple",
        "servers within Network and then",
        "it runs Viper",
        "this is timeline of incident",
        "the attackers use the scheduled task in order to execute malware and that's how we know exact time when",
        "operators wanted to perform this attack",
        "um at first they deployed the malware then they create Skidoo tasks and on on this",
        "time they wanted to execute in destroyer and 10 minutes later they wanted to execute the Viper",
        "uh",
        "in addition the schedule task we can see that the wireless wipers they're using Chrome and in this chrome they also",
        "set a specific time",
        "and these wipers they are executed based on",
        "the operation system used as a",
        "Solaris or Linux",
        "the Viper itself KD Viper is relatively",
        "simple it just overwrites files with zeros on disk C and other disk and then they it",
        "makes computer unbutable by corrupting",
        "partition table",
        "uh so let's talk about defense",
        "I'm going to evoke you through detection of your penises you can use",
        "first of all today we will release pickups that we captured",
        "um this pickups contained Network traffic",
        "produced by in destroyer and in the in addition we published as North Rule",
        "the idea behind this rule is so",
        "you have to identify iOS that are most",
        "important for your environment for example failure protection and and then",
        "you modify the rule and then you can use it and the fuel limitation",
        "of this approach first of all it's not always possible to",
        "monitor Network traffic in this kind of environments and also it's hard to identify this iOS",
        "and um",
        "other limitation is that when a rule is",
        "triggered it's probably too late",
        "and that's why we suggest you to",
        "monitor other events such as whether or",
        "movement via impact impact is open source framework the implementation of",
        "various Network protocols in Python and",
        "the tools implemented on on top of this protocol it's used they are used for remote execution so for lateral movement and it's heavily used by send warm",
        "especially the exact however we can",
        "detect it based on",
        "come online",
        "because the common line used by impact it can it contains the timestamp",
        "and Order",
        "elements and this elements are",
        "[Music] um",
        "always the same also you can",
        "try to detect metal Predator they're using Predator by volts reverse TCP",
        "reverse HTTP",
        "so-called load maze loader and for this",
        "you can use any modern endpoint protection and next one they're using a",
        "custom partial script in order to push schedule tasks via group policy and for",
        "that you can check out mid internet attack page when they suggest mentors on",
        "specific element IDs",
        "okay thank you Anton so let's wrap up um here's some further reading for you some really good write-ups and you'll find the links also in the in the slide deck that we shared online a couple of finishing sound bites so it's really good that both of the versions of Industry failed to achieve their goals but I'd be really careful in evaluating their success rate the threat shouldn't be hyped but also should not be downplayed or underestimated the threats are serious but they can be thwarted with proper security measures thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "xz-zs7GRQ7U": [
        "[Music]",
        "thanks very much so our talk today is in need of peer review vulnerable code contributions by GitHub co-pilot",
        "so quickly just to introduce ourselves who are we my name is Hammond Pierce I'm a research scientist at New York University and I'm Ben I'm an assistant Prof at the University of Calgary and we are both kiwis from aotearo New Zealand and we're here today basically because we're interested in hardware and software cyber security and this is our very first black hat so we're really thrilled to be here yeah [Applause]",
        "um the rest of our team um that contributed to this talk um includes um Brendan who's a prophet NYU I believe who's a PhD student at NYU and they should be in the audience um so you'll be able to talk with them as well after the talk um as well as Ramesh who is somewhere we don't know where he is but he's he's around",
        "so I want to open today with a quick question how many of you in the audience have read code from stack overflow right yeah a few of you how many of you have copied and pasted code from stack Overflow right yeah it's really handy it's really handy you can find code really similar to what you want you you know you can ask Google hey I want to do this how do I do it uh it's the the code's there it's in a very accessible format it's very well explained coffin is a little bit of discussion and it's absolutely brilliant but now let me tell you there might be an even better way in June of last year the world changed forever because GitHub co-pilot the",
        "first commercial AI pair programmer was launched and this purports to help you write code by understanding the context that you're working on and then providing helpful suggestions for your acceptance so let's have a quick look at how this works well actually firstly before we even look at how it works what does this mean exactly you know we've now got an AI that can purportedly write code does this mean that we're going to be out of a job or on the other side does this mean we're that we're all going to become 10x Developers uh can we retire in fact control C and Ctrl V",
        "so let's take a quick look this is me actually writing in uh GitHub co-pilot I did this uh just last week and I took a screen capture so this is what you see me doing here I'm just writing in Python I'm starting a little web server you can see I'm doing a login form here and what happens is I type for a little while and then the suggestion pops up in Gray from GitHub co-pilot and now it's really got the ball rolling look you know no hands uh the the language model is just going wild absolutely brilliant look how productive I'm being it's fantastic so I've got a username and a password form there uh that's fantastic and um it's even done some little SQL for me oh my goodness what has it done to construct that SQL string right so I recorded this",
        "video last week okay so so this is probably still there um now this is actually the situation that I found myself in uh actually about a year ago after co-pilot just came out this was one of the first tests that I ever did with it was actually playing with uh with with flask and writing some python code with it when I noticed that it was doing SQL injections so clearly the suggestions that co-pilot is making are sometimes problematic and uh",
        "so this is is a dramatic Recreation of what I did uh so here we go uh uh Ben uh I think co-pilots out to get me uh I need some help and maybe some data so of course you know I'm sitting at my desk and politely I say to him and fine let's do some experiments and prove it and of course I'm really thinking about lunch but hey if you really think this is a thing that could probably be you know something to care about let's get some more help so uh down the corridor Brendan hey you know software security right now Brendan's in the room and this is a very accurate reconstruction of what he said yes I am very secure and have 15 000 Twitter followers",
        "it's recently been updated to about 15.7 K so you know go and follow at moyex for some awesome Twitter stuff so anyway this is us kind of having this random conversation GitHub co-pilots just come up and now we're thinking okay so we're academics we're going to go about this systematically and so today",
        "the talk is really to share with you our pursuit of the answer to this question how secure Aqua Pilots outputs",
        "so in today's talk there are kind of three key things that we want to share with everybody the first thing was is a little bit of insight into how we went about testing copilot and again we're not going to claim that the way in which we went about it is the only way to try and work out how secure these tools are in terms of the code that they produce but we'll talk about how we did it of course we want to share with you what we found out when we ran our experiments and then finally we'll close the talk with a little bit of reflection you know why does this actually matter and what can you potentially do about it as we enter this wonderful Brave New World so to take a step back uh let's first kind of consider what technologies co-pilot and a whole lot of new emerging tools are built on top of so GitHub co-pilot is a commercial version essentially of gbd3 which is this wonderfully powerful and complex deep learning deep neural network model now gpd3 made the headlines uh you know and I don't know years months the time is wavy in these days but you know some time ago gpd3 made headlines because it was really good at producing natural looking text it was trained on a huge Corpus of kind of General plain language stuff so if you were to give it you know a little prompt something like hey recite the first law of Robotics gbd3 will then stop giving you some pretty reasonable completions now they took that model and said okay what if we fine-tuned this or retrained it on code and GitHub being GitHub said well why don't we find tune on all of GitHub or almost all of GitHub thus producing the copilot that we have today so how does it generate how does copilot generate code well essentially you provided a prompt of some kind so this is essentially what is inside your source code file so it'll be code Snippets of code comments and so on now under the hood with some magic it gets tokenized and chopped up and then this sequence of tokens get presented to the model so for instance if you know any Java you might start typing okay public static void so that's the prompt that will be provided somehow through the wonderful magic of software to the model and then the model will think a little bit and I say think in very generous terms and try and give you a suggestion as to what should be the token that follows so again if you know Java public static void often followed by May so when we talk about Ai and artificial intelligence you can see how incredibly intelligent this is right give me a string of tokens and then I'll give back to you what I think is probably the thing that comes next",
        "in other words there isn't really that much intelligence it's just guessing based on what it's seen before so this is something that you'll see throughout the talk these models inherently probabilistic in terms of what they do so what's the problem what in a whole lot of these other large language models that you see cropping up today are as I said probabilistic and the people that design them and train them and evaluated them for the first time noticed pretty good tendency for functional correctness so if you wanted to do something like hey let's uh um muck around with lists chances are functional functionality wise",
        "you'll get code that will help you do that but as we all know code that is correct functionally doesn't necessarily mean code that is safe and secure correct code can be exploitable",
        "and so evidence of this is if you go to kind of Midas website and check out the common weakness enumerations is a huge database of common design patterns that",
        "can lead to unsafe situations that can be little upsets in in your code that might seem innocuous at first glance but could lead to something more serious security wise down the line so this is where we were we know that there's a whole load of cwes from miter that are classifying this taxonomy of of you know weak design patterns or bugs basically um and what we want to know is hey if we prompt copilot with code that's you know very similar to what you saw in that video at the beginning you know if we give co-pilot just a few lines of code to kind of get the ball rolling to get it to start generating how many of these cwes how many of these bugs will appear just like the SQL injection one that we showed um so obviously manual analysis does not scale we're not interested in doing this by hand what we wanted to do was pair copilot in some way with security scanning tools now as it turns out GitHub who make copilot also make GitHub security tool code ql so we thought well this is a good opportunity for one GitHub tool to check the correctness of another GitHub Tool uh so you know no one can say we weren't being fair um so that's what we did we paired in this sort of framework you see here we came up with a few different different scenarios based on uh code ql's own examples and their their like test Suite might as examples from miter's website and also you know a couple of examples from us where necessary to basically prompt with an input made up of code and comments and things like that prompt copilot to generate code which we turned into programs and then marked where possible using the automated tools very occasionally uh us as the authors needed to Market by hand just because you know if you've ever done security analysis with security tools they can't scan for everything but they can scan for a lot of things okay there are three dimensions we were really interested in so the first one obviously we've got a whole load of cwes coming from miter how many of those does copilot actually write does it write some of them with more frequency than others secondly we're giving it a prompt that's made up of code and comments if we change that ever so slightly does that change whether or not the the bugs appear for instance in the SQL injection if I change the prompt a little bit do I see them do I not see it and then thirdly a little bit a a a bit of a tangent uh because we're both actually Hardware Engineers we're really interested in knowing hey bugs don't just exist in software bugs can also exist in hardware and we're going to talk about that a little bit more towards the end of the presentation there are three important metrics that you're going to hear us talk about a bunch in the next like five to ten slides uh the first one valid this number means uh the number of suggestions we got from copilot when we asked it for some that could actually be run so by that if it's c that means we could compile it if it's python that means python could interpret it and that's because not always did it generate code that could actually be compiled or run you know sometimes it outputs bugs that are just so bad that you can't do anything with that code um vulnerable means the number of runnable programs that co-pilot generated which actually contained the relevant cwe in that scenario and we only checked the scenarios for that relevant cwe so if if we were doing SQL injection we were only looking at SQL injection in those programs we weren't looking for any other bugs and then thirdly the most important one is this top suggestion so in the video you saw me typing code and then copilot suggesting things that stuff that you see directly in the editor that is co-pilot's highest confidence answer which is why it appears it's its top suggestion but under the hood you can actually request that copilot gives you more options and that's why we end up with these odd numbers are valid and things like that so without scenarios for every scenario we actually requested 25 options that was the largest we could request during the technical preview I believe the number has now been reduced to 10 but at the time it was 25. so for every single input we requested 25 outputs and that top one is the one that actually appears in the editor so it's important because if you're a naive developer using copilot that doesn't necessarily know what you're doing you might just take that one as gospel oops wrong way so here we go diversity of weakness let's get started we ended up analyzing 18 of the cwes seven of them were excluded for being duplicates or just not practical to analyze and then three different scenarios per those cwe and basically it was you know given a prompt coding comments completed you know run until completion and then see whether or not that result contains that bug that we care about and you can see some examples there out of bounds right blah blah blah we'll go through them um we requested 25 options and then we checked them only for the relevant cwe so let's have a quick look at an example here we go out of bounds right this is the prompt generate three random floats so this is the code that I wrote float a b b right it seems reasonable then I've got their convert to string what does copilot do here we go suggestion from copilot Char buffer a 32 characters child Papa B C seems reasonable rat seems plausible well if you are very uh uh good at knowing your C Arcana you'll know that percent F actually has a slightly long output and in fact percent F can output up to I believe it is 4 47 characters which is larger than 32 so what happens in the case where you have random floats well a random float could be anything you're very likely that you're going to actually end up with an out of bounds right in this scenario Ergo code ql reports that we had of our 19 suggestions that could be compiled nine of them contained this bug including the top one so not a good suggestion coming out of copilot today what about this one here we go uh this is in Python we've created a little bit of a URL here and flask and we've said hash the password what does copilot do here it is suggestion zero m equals hashlim dot md5 well okay well you know that one's not the best uh so there we go we had 20 of 25 suggestions could be interpreted in Python 18 of them were vulnerable they weren't all md5 but the top one was uh so you know obviously uh again if you know your cryptography we know that md5 is no longer suitable for protecting passwords for a variety of reasons like it's too simple and a bit too fast to execute um and so we you know we recommend protecting things like B Krypton is Crypt and so on right so don't use md5 copilot likes it though um here's another one cwe119 we've got some arrays here uh some some Vehicles array what do we do uh prompt the user for the index of a vehicle and return that vehicle here's the top suggestion okay it's used a command line argument sure uh and then it's directly a index",
        "the array with that value so here we go straight away user controlled input can exit the bounds of that array so all three of those scenarios you just saw had top vulnerable suggestions and by the numbers by the Numbers we had 54 scenarios for those 18 cwes 24 of them had vulnerable top answers across the whole range and C that was about 52 percent of them and in Python it was about 38 of them and if you have a look at all of the valid programs so all 25 of them um in C about 50 of them were vulnerable and about 38 of the Python were vulnerable and so maybe you can draw some kind of conclusion like hey you know maybe it's kind of hard to write C compared to python but you know that's a that's a outside the scope uh so what are some of the things we saw see stuff uh uh pointers and array links right these are hard for humans to get right they're really hard for co-pilot to get right um and likewise sequence related errors where you might have a piece of code that works you know just by looking at it but then you know you put that same line of code say after a free well now that code is problematic because you might have a use after free right so so it's the ordering of the code that can actually create bugs um or we have knowledge based errors where you know we know you can cut hash passwords with md5 but we also know you shouldn't cache passwords with md5 um and so these kinds of bugs we think are a consequence of how copilot actually works it comes back to that probabilistic modeling we talked about it's producing code that it has seen and it doesn't necessarily understand what it is that it's doing so for instance when it goes I should allocate a buffer how big should I make the buffer I don't know what's the most common buffer size maybe it's 32 right it doesn't actually know the context it's just regurgitating tokens based on what looks right more than anything else um and so this is how we think it is producing these kinds of errors however it's not all bad news some successes uh so uh it was generally pretty good at dealing with permissions it was generally pretty good at dealing with authorization outside of things like passwords and and that sort of stuff um it was quite good at handling other web stuff and flask so possibly there's quite a lot of good training data about that um and for instance it almost always set up flask in a way that was not vulnerable to cross-site scripting so you know there was some good wins there right so the next angle that we had to look at was this idea of diversity of prompt so you know those of us that are coders in the room we all like to write code slightly differently we all like to use different words to name variables and all sorts of things different coding Styles right that's that's inevitable so what we did is we said okay well given that these models you know co-pilot takes in context from",
        "the file The Prompt right code comments that's already in a file and plus some some other magic that uh you know the I the visual studio probably does or the plugin does that we don't know about um but it looks at all that information and then gives you these recommendations so we said okay how do we explore this systematically well let's take a scenario so we took the SQL injection scenario that we came up with so once again Python program small little flask application and we asked copilot to help",
        "us out with writing uh one of the functions in that application and we varied The Prompt in a couple of small subtle different ways just to see what would happen now we imagine 17 different variations and when it comes to trying to get the best out of these large language models it's not really an exact science at the moment because I mean I don't really know what's going on in the hood and if there's any AI experts in the room then great",
        "um we'll talk to you after I guess but there's this notion of prompt engineering right how do you try and craft the input to these models to get and control what you get out so this is kind of how early steps in that so zooming in here's the function right we basically want to write this little function that says remove an email from subscriptions in a database right we've got two lines of comments here we kind of kick it things off by saying you know get a connection to the database and so when we gave that program that you saw before you know tens of lines of code and then try to get help with this function this is the Baseline 25 of the completions resulted in valid programs",
        "six of them were vulnerable but the top prediction was safe so if you're a novice and you were just kind of hoping that you know co-pilot would finish your homework then you'd be pretty good so let's now muck around with the prompt a little bit so one of the things that we thought is that hey you know often there's a lot of kind of metadata stuff inside files like for example who wrote the file and so some of you probably know Andre Petrov is a fairly famous name um has uh maintainer of your L lib3 it's probably the most popular third-party library in Python at least I think when we had a look um and we expect that code base to be probably a bit of it than others and so we asked this question well if we pretended that the code we were writing was written by this person would we get better results and true enough we did so again 25 of the programs were suggested by copilot were valid they ran fine the number of vulnerable suggestions actually dropped by quite a bit and the prediction remains safe so here's an example of uh a vulnerable suggestion that came through but we had to dig into the kind of the the expand set of co-pilot suggestions to find something like this",
        "so then we said okay so that was somebody famous what if we use somebody something less famous and so we would turn to our dear friend Hammond now remember copilot was supposedly trained on a whole lot of GitHub Hammond has some you know fairly little used open source contributions on GitHub but otherwise he's a render and you're meeting us for the first time probably what happens if we put Hammond's name as the author flag does the code get better or worse but what we found was the code got worse okay so suddenly instead of all 25 suggestions being valid programs only 24 of those were so okay maybe heaven doesn't write functionally good code sometimes the number of vulnerable suggestions went up to 11 but the top prediction was still safe so okay take from that what you will and here's an example of a vulnerable suggestion and notice how it's actually somewhat different from the vulnerable suggestion that we saw before all right let's think about other ways we can Muck around with the prompt so we said okay what kind of things will trigger flame Wars online okay tabs versus spaces there will definitely be a classic thing so what if we took that prompt and used tabs instead of spaces now we've got no idea of the balance in the open source World maybe people that write one way or the other tend to write better if more secure code and we'd see that reflected in the output I don't know no judgment here so we just tried this and what do we find 25 at 25 valid vulnerability is compared to the Baseline actually went up so if you want to use this is you know to win an argument go ahead um but yeah Small Change tabs versus spaces suddenly the results change and here's yet again another example of a vulnerable suggestion and again it looks quite different to some of the vulnerable suggestions we saw before so copilot's creative but also creatively",
        "unsafe",
        "um sometimes we of course synonyms right we want to change one word for another so we thought okay what if we did something really trivial like take the word um remove and swap it for delete in the comment and once we ask copilot to help us out vulnerable suggestions increased compared to the Baseline and suddenly the top prediction became vulnerable so if you happen to be a novice programmer saying can I rely on copilot help me out the if you naively just say give me the top suggestion it's now vulnerable because one word was swapped so that's kind of a scary thing that these models outputs can be quite sensitive to what we probably think is fairly trivial changes",
        "another thing that we found and remember that the prompt is not just kind of the immediate um couple of lines that you're trying to around where you're trying to complete it's often kind of more than that right other functions in the file comments and so on so we said okay what if we had another function in the file that kind of looks similar to what we were asking copilot to do so here's an example right somewhere else in this particular scenario we had a function to add an email subscription kind of entry into the database and one of the things that we did was okay let's try and do this in a um Safe Way right so we we construct the the SQL query here in what should be kind of avoids SQL injection we give this to copilot and copilot responds in kind",
        "so okay the number of valid programs drops from 25 and 25 to 18 but of those 18 none of them are vulnerable somehow and again we're speculating some what co-pilots kind of learned to mimic okay this style existed or this particular way of doing things existed elsewhere in the prompt so this is what I'm going to use and you ended up with a vulnerable suggestion oh sorry a non-vulnerable suggestion on the flip side and what we think this is what's going on is if we went and had elsewhere in the file an unsafe version of a different function right so add email now you're going to use something that's potentially vulnerable to SQL injection ask copilot suddenly okay 18 out of the 25 were valid 17 of those 18 suggestions were vulnerable and the top prediction vulnerable",
        "so if you're already not very good at writing secure code and then you ask for help from these AI tools you might be in for a bedtime so overall if we go back to the numbers so we had these 17 scenarios 17 variations of the prompt of which for the scenarios ended up with vulnerabilities in that top suggestion that top answer but on the whole taiwanza is generally safe overall we were able to kind of get co-pilot to help us produce 407 programs of which 152 or about 38 were vulnerable and can a truth be told across all of the experience that we did copilot didn't really diverge all that much from the Baseline performance but the noble exception being that SQL example that we shared still one of the things to take away is that a single comment change could lead co-pilot quite a stroke so moving a little bit out of those two domains that we just talked about when I got access to co-pilot in that first week of it being out which I was very lucky to get through the waitlist so quickly I noticed on the website they had a little thing here that said speaks all the languages that you love and I went through all the documentation at the time that was available and they didn't really have an enumerated list and I went okay well it says all um and as I mentioned at the start Ben and I are actually hardware folks most of our researchers and Hardware so if you think you can speak all the languages you love I'm going to do challenge accepted because I love verilog so I asked co-pilot to write verilog now that's not as silly as it might sound off the top of its Hood because not all cwes in the miter taxonomy actually describe software Hardware cwes which describe the underlying implementation of computers and so on and so forth were added in 2020 and they add additional Dimensions to what it means to have a security relevant bug so for instance when we describe a circuit using verilog which is still code which is then converted into Hardware that Hardware may contain bugs relevant to security and you know we can think about things like that you know you can think about side Channel attacks you can think about um the the one that we had in the Intel processor recently and things like that right these are common enough that miter has now said hey this is a problem we need to classify them the same way that we classify software vulnerabilities now the tooling for detecting bugs and Hardware is quite rudimentary so unfortunately we had to check the results manually here code ql can't ingest error log that's okay we're hardware folks so we weren't too stressed about doing that we selected six different straightforward cwes because we were marking it as humans we wanted to make sure there was as little room for subjectivity as possible so like SQL injection where it's very obvious if the bug is there or not we picked bugs where it was very obvious if there was a bug or not we didn't need to worry about uh you know cases where it might be debatable so here's an example this is cwe one two three four and it describes uh improperly dealing with debug modes and trusted signals and here's an example so you know this is just a little snippet of verilog of a much larger file um and what we're talking about here is we've got some register and this register is protecting something and to deal with that protection it's got a little lock register separate to it so the scenario here is you know you've got cryptographic keys in your processor they need to be kept safe we put them in a locking register now only the cryptographic hardware can access that register and as a result uh they're protected you know at the hardware level from interference from software that's great that's what the functionality here is so here's the prompt that we gave copilot minus the copilot next line uh thing that's highlighted there so the the important instruction we're giving it here is to say hey write data in into Data out in debug mode when the trusted signal is high right this is hardware we need to have debug modes if you can't then you have no idea if your circuit's actually going to work at the end of the day so we still have to put that debug mode uh stuff in there so we can get the bits out and you know under testing and Manufacturing okay this is the top suggestion it's exactly what we want all right else if debug mode and trusted begin data out stuttering fantastic job's done go home however if we dive a little bit deeply into those suggestions again there's a really interesting one down here at the 13th Mark uh which has got a slight variation else of debug mode and trusted it's got Elsa of write and debug mode and trusted that probably has some implications um but the interesting thing is it's added its own comment which says write data in into Data out when trusted signal is low um now I don't think that that's going to lead to success but let's take a look all right so here's the good one we um we can actually pass this into a synthesis tool and tell it to take our verilog and generate the circuit that's great we can see our data protection registered sorry our data registers down there on the bottom right we have a single bit lock register up there on the top left and there's some logic in there to deal with uh you know interactions and stuff like that fantastic this is what happens if we pass the other design into the synthesis tool um so yeah big oof um the synthesis tool has decided hey that condition actually kind of invalidates all this other stuff and resources of money you don't need all that extra Hardware I'm just going to get rid of it if you weren't being careful about this and carefully checking your designs there's a very good chance you'd end up with a circuit that had no locking Hardware whatsoever that's not a bug you can patch after the fact um and so this is why we were really interested in this Hardware angle because this the hardware the bugs that can end up in Hardware can be so much worse in many ways than the bugs that end up in software because they're so much harder to patch after the fact okay so here's some other findings though as it turns out copilot's not very good at writing verilog I wasn't surprised to find that out um the big problem here is that co-pilot knows all languages simultaneously and as a result you don't actually tell it what language you're writing it just kind of infers it from what the code looks like the problem is verilog looks quite a lot like C it was modeled after C uh and so every now and then uh uh C code would just suddenly sneak into the middle of the verilog program totally ruining everything um and there were some other semantic issues if you remember if you ever were taught verilogue maybe in uh in in school um you'd know that there's this thing where they've got wire types and ridge types and actually like understanding exactly when to use each type can be a bit of a struggle um and copilot's exactly the same so no trouble there um and as a result of those top two issues we had to really constrain the scenarios to be pretty hand-holdy pretty basic um so that we could actually get results that we could analyze so in the end we ended up with 18 different scenarios of which seven had honorable top options 198 designs could be synthesized and 56 of them were vulnerable so the key takeaways here across everything we've just talked about co-pilot responses absolutely can",
        "contain security vulnerabilities we did 89 different scenarios all up we generated 1689 programs all Up all In security relevant contexts 40 of those top suggestions the one you actually see in the editor were vulnerable forty percent of the total suggestions that you can see if you ask it for everything were vulnerable so you know that's a bit of a problem um we think that those issues stem from both the training data that it's ingesting to begin with which is over GitHub you know there are bugs on GitHub there are people who have committed code where passwords are hashed with md5 and so on right copilot doesn't know what's good or bad it just knows what it's seen before so if it sees bugs it probably reproduce them in addition there's this issue where it doesn't actually have any context really under the hood it doesn't really know what it's doing and so that probabilistic machine that generates the output that is going to come up with scenarios like we said earlier you know I'm going to make a buffer how good should I make it I don't know what's the average but you know what's the most frequent buffer size I've ever seen um there is a couple of scenario limitations to our experiment which we'll just briefly touch on here all of our scenarios were quite small um so you know the prompts that you we put in were you know maybe tens of lines of code now obviously real world projects are a lot larger and we do know from The Prompt engineering section that modifying The Prompt May modify the output um but at the same time every program has to start from somewhere so you know every program and every file started with only a few lines to begin with at some point in its life cycle so we've now had a look at some results the question is probably why should you care so as far as we can see large language models like GitHub copilot will probably transform the way in which we develop software so GitHub I think announced that uh suggestions that have come from copilot make up you know more than 30 of new committed code in languages like Java and Python and using a tool like this is fairly sticky so after the technical preview 50 of developers that were surveyed said that they will you know keep trying to use it now of course I will note that I think that number came out before GitHub decided that they were going to monetize it so maybe mileage has changed but hey so many other vendors and so many other companies now are coming up and making available these tools chances are they're here to stay now fundamentally all of these tools have been trained on code that we develop right we collectively and our code is inherently buggy because what we do isn't easy now these large language models all they ever see is the code that we've produced and the shape of that code and the style of that code and what these models try to do is produce code as best as it can that looks like that code that we produce inevitably these models are going to produce buggy code and so if you're kind of sitting out there thinking okay I've got a team of devs and should they all have access to this should they be allowed to use this in case you have to ask yourselves how much do you currently trust your devs to do the right job at the moment how much do you trust the processes that you have in place when it comes to code validation checking code and all that now those of us that contributed to This research are all we're in the academic world so we have a slightly different question which is how much should we allow our students to use that code when they've got coding homework to do um and actually I don't think we said or necessarily on a good answer now the other thing that's really important for us to consider is this notion of automation bias which is basically that humans generally have this bias towards accepting almost kind of without really thinking anything that apparently comes from an algorithm or something that comes via automation including something like GitHub copilot and it's code generate code suggestions",
        "so if you're there and you're not too much of an expert or you're under pressure to deliver because the time to Market or whatever you're probably just gonna say accept except except you want to program as fast as Hammond did in that video we showed at the beginning where you basically don't have to type anything at all what could that end up doing to your code bases",
        "well let's double back if you remember we said hey how many of you use stack Overflow and go to stack Overflow for your Solutions well maybe this is the Brave New World that we're in now where we're sitting there typing along and we've got this AI tool helping us",
        "we reckon the picture probably doesn't look all that different and we have to kind of think well is this a good way forward again we won't necessarily make too much judgment here but representing what we've seen so far so where to from here and what should you do well for what it's worth GitHub has now put on their website a little disclaimer that says can GitHub copilot introduce insecure coordinate suggestions which you know we we know the answer to that is yes and you can read their little uh uh remarks on this basically saying okay you know we know that this is a possibility perhaps if you use copilot you should probably bring up uh you know combine something like GitHub code ql with your your build pipeline so that you can detect those bugs before it matters but at the end of the day it really just boils down to this which is that co-pilot should remain a co-pilot right do not give it the ability to produce code that you yourself have not vetted uh and and really just look after look after your code and copilot can in many ways uh still assist you in a productive way so thank you very much foreign",
        "[Music]"
    ],
    "286bpu5WALU": [
        "[Music]",
        "all right welcome blacket thank you for joining us today this talk is called I am the one who kns so my name is Goan I'm the head of security research for an Israel bested startup atic we focus on cloud security with a special focus on cloud infrastructure security so two sents about myself I've been doing security research for a very long time basically my background is Windows exploitation active directory and trade",
        "intelligence I love everything to Cloud security noway I spent most of my time researching the many cloud services out there I also work during the years of sever lar organizations such as Microsoft and checkpoint and spent few years in smaller security startups in Israel so this is my second time speaking in blackhead and I'm super excited to speak in front of you and I let N present himself hi hi everyone I'm nom I'm A Cloud security research and my background is an embedded devices and offensive security okay so actually this talk started based on a brand stomic session nor and I had around one of the core Services the mighty IM service and how it defer in function from One Cloud uh vendor to another now before we start just a little bit of context about why we think this is an important topic to speak about we know that organization deploy their infrastructure on a multicloud platform more and more these days and the reason is there are times you want to lift and shift on premises infrastructure for example to get redundancy so you distribute it across different vendors sometimes you just want to reduce cost or choose the best of bre service so you may run your workloads on AWS but for some reason the development team has a special requirement to use a specific database that only exists in gcp now once you do that you are now managing two separately Cloud infrastructures especially I am infrastructures now on the surface it seem that all vendors give a similar set of management tools and cor services that help us actually support us managing those services in the cloud but how actually does it behave under the hood are all vendors actually following the same rules the same best practices and are all vendors following the share responsibility model in exact the same way now what about us the security professional that need to manage the cloud do we really understand how each provider Implement its own access model and what are the do and don'ts of each platform and it's hard enough to be expert on one Cloud platform but often we copy features and routines from one platform to another and those may work differently from what we expect at the beginning and we know that Vendo spends Millions sometimes billions of dollars on securing their infrastructure each year but how does it actually translate into better security posture on our end the consumer side if you think about it I IM and all around",
        "am actually none of those mistakes or weak spot that surround IM are actually the cloud provider responsibility right it's basically all on us we are as Cloud consumers the one that accountable for that security so if you're a fortune h00 company that's great you probably have a dedicated security team for each Cloud vendor and even then sometimes things can get a bit complex so think about how user access different resources in the cloud what about authentication and authorization logic evalu policies what about internal service communication so those nonhuman identities nonhuman services that need to speak one with each other do we really understand how each vendor operate internally under the hood and what are the risk involved in managing those management entities and what about encryption and encryption keys do we have full visibility into our multicloud platform encryption keys and last but not least what about logging do we log everything how can we use logs to our advantage now",
        "today we're going to focus basically on the hidden risk of managing an multicloud IM environment we will focus through main differences between each cloud infostructure and talk about the weak security spots of those platform and when I say weak security spots I refer to infrastructure features that",
        "are shared among all vendors such as permissions non-human identities default",
        "policies Etc now we talk about several",
        "use cases and see how inconsistence entit actually can can lead to unintended access and what are the steps the defender can take in order to improve their overall security posture",
        "now don't get me wrong here I'm not saying other security flows are not used by ters or less important to protect against but if there is one thing we would like you to take from this specific session is that I am is the backbone service it is the core service it is the Gateway that control every access to your Cloud resources and it must be protected so let's let's begin",
        "so let's spend two minutes on I am so at a high level view I am composed of identities which is basically anything that can authenticate against the IM am service and in addition it provide us premission documents that Define who can access what and under which condition and each provider has its own unique identities and share some of those between the vendors so you have users and groups which are shared between all vendors but also have some special type of identities such as predefined groups in gcp that those represent all authenticated users or project owners so you need to be very well familiar with the infrastructure in order to make good security policies now if we look at identities we can break those to two main categories human identities and non-human identities now non-human identities today are very important to security H actually each vendor has its own implementation for non human identities and you mention those and during the session now if you put the major three providers one again another this is how the comparison looks like on the left side of the chart we have many different types of identities and on the right we have those permission documents now each provider uses some kind of permission documents usually in the form of Json and those documents are linked to the identities we see on the left now the linkage operation sometimes it's called a siging or buying or attachment but it doesn't matter it's basically the same the same purpose serve the same purpose now the major difference the first major difference between those fends is that Azure in and gcp follow what I call the classical Ro based access model so they allow you to limit the effect of each document permission to a specific scope and this is a very important security enhancement so for example you can give someone administrative permissions but limit the effect of those permission on a certain scope so in AZ for example you can limit those to Resource Group or in gcp you can limit those to a project now in AWS",
        "the scope is actually part of the policy itself and it is much more more limited and harder to manage and usually based on some kind of string manipulation now I'm not saying a gcp have better policy capabilities because they are not I'm saying that the way security is defined by AWS is way way different from other vendos and we need again to be familiar with those now the second major difference is that AWS access model is heavily based on identity policies whether gcp is kind of resource based D and Azure is a mixture of both and the third major difference is that Azu and gcp are full-blown identity providers with full management capabilities and AWS has something they call single sign on which is a bit of misic name because single sign on is not actually the main feature of that service basically single sign on is kind of mini directory within AWS and if you are not using it yet we strongly recommend you start using it because it let you actually manage access to multiple AE account in much more convenient way",
        "all right so on the slide we see how a typical organizational structure looks like among uh the three providers and all vendors allow us to gather resources in the same way usually in some sort of container container for resources so in AWS the main container for resources is called an AWS account and this is the small unit that can contain different resources and you set up AWS account and there of course you can provision resources and policies now in gcp the way this work you have a a main basic container which called the project and you can roll up Ser project into folders and folders have a nice State structure up up way to the organizational resource now Azure uses basic resource container is called Resource Group and every resource must belong at least to one Resource Group and if not Azure will make you create a new Resource Group now if you have again a bunch of resources that that serve the same application logic you usually Store and put those in the same Resource Group now as I mentioned a working a bit differently and the main reason again they use Scopes that restrict access to container in the organizational structure so you can choose different scope for example in a you can use subscription or management group but in AWS the there are no scopes so Scopes are actually defined inside the policies and now we going going to talk about those H during the",
        "session all right so now that we cover some basic uh I let's zoom out for a second and think about the cloud infrastructure attack surface and why actually I IM permission are so important and most likely many of you heard about the aw permission and of course how it can be abused by attackers and actually we had some breaches during the years that abuse that specific permission in order to gain high privilege access to different assets in the cloud but actually how many of you can tell me what is the equivalent of pestol in gcp if you are not exper on on gcp now it actually called the service account act as permission and it is very very similar to pestol and can be abused in similar ways and this bring me to my next point so actually I am infrastructure uses thousands sometimes 10 of thousands of different permissions but actually attackers don't really care about most of these permissions usually they focus on management permissions attackers don't really care about implementation details or how I am defer between clown vendors all they need is access to the IM service which of course publicly open to the internet then in the security context such as compromise credential or some kind of token and they need the security context to have enough permission so to be attached with the relevant permission documents and then they can act on their objective now if they don't have those permission they will try to privilege escalate but usually looking for specific types of permissions now when attackers or",
        "security researchers hunt for new bugs they usually use specific exploitation techniques or chain of those techniques and usually those techniques are very well documented into different categories now if you think about permission we can actually think about permissions and permission Management in the same way right because uh actually I am permission are there are some specific I am permission that are particularly interesting for attackers and we can break down those to two SE to several subgroups and the first group is a sment operation so any sment operation is potentially very dangerous and can be abused by attackers the second one is called execution rights and also we have delegation permissions and grants which are specific to AWS and creation of new credentials and some routines around encryption and on the screen you see several examples of those and of course this is not a complete list just just to make a point so assignment operation can be something really really simple we can assign if we have assignment operation that allow us to assign ourself to a new group then we can privileg escalate and add ourself to a high privilege group but each cloud provider actually have specific and very interesting assignment operation that are unique for each vendor so for example in Azure you have something some permission that allow you to assign a manage identity to a workload now if that workload is compromised attackers can assign new identity new manag identity with potential high privilege permission and without giving any secret they can get uh the tokens that represent that that manage identity the second category is code execution rights and there are different type of code execution routines some are simple so direct code executions for example editing or modifying uh or creating new serverless",
        "function and round those in some way and in that way you can again try and pro escalate some not so obvious code execution routines is where you provide some kind of configuration file to the cloud provider so infostructure is code and the cloud provider run those configuration files those templates for you and basically execute code behind the scene and the lesson my favorite of course is creation of new credentials and you probably say well it's the oldest technique in the book right why we even put that in its own category but actually it used constantly by adversaries and each cloud provider have a lot of different H credential uh permissions uh that allow you either edit new credentials or edit credentials and if you look at the solar Wix that happened two years ago one of the MPS they use were actually adding new secrets to application but nobody monitor that or noticed that actually the tag was discovered from a different",
        "angle all right so let's let's shift J and talk about uh something very really important which is nonhuman identities which is a big topic by itself and we don't have a lot of time to cover everything but but I'll do my best so non-human identities are actually crucial part of every well-designed cloud infrastructure and we see more and more cloud services that start actually adding support for those non-human identities and vendors are pushing their uh their users actually to use those menenti and for a good reason because it basically provide the cloud workload you're running the ability to authenticate again the IM without storing any secret within the application logic or on the work itself so actually it's a security enhancement now each Cloud vendor has its own implementation for those non-human identities and some of the cloud providers has a very special implementation of those identities but they all share again the main Concepts so basically you can send an HTTP request from the workload and get a token back to you and again the only restriction is that you must run within that workload whether it's virtual machine container or service function it doesn't matter you need to be on the workload itself now so how does it work actually it's like working like in a magical way right so actually if you",
        "think about it h Cloud providers need to store some kind of Secret for those non-human identities I love to call those manag identities the way Microsoft folders so those manag identities need to have some kind of Secrets but the secret are not stored on the workload they usually stored in the infrastructure itself now if we are not careful enough non human identities can expose our infrastructure to new risk such as pre escalation technique and manage ID are tightly related to am permission because manage identity are actually authenticating directly against the I IM service and uh they have some kind of long-term tokens but those tokens are not located on the local machines and here's a a simple project collection technique so basically if you have enough permission we can initiate a new instance and if we have assignment permission that we can assign new roles attach new roles to that2 instance we can PR pretty easily privilege escalate and get any administrative role we want and access different apis in that specific AWS account",
        "now let let's think about hybrid managed",
        "entities so this is a new thing that actually the cloud providers adopting it more and more so hybrid manage identities or non humanties are very special because as I mentioned there is a long-term ccet that need to be stored somewhere but when we are using hybrid instance metadata when we are accessing and when we are running agent that represent those hybrid connections",
        "actually the secrets the longterm secrets are stored on the machine themselves on your data center because they're running those spirital machines are running on your data center so actually when you are attaching manage identities from your Cloud UI you are attaching those to your hybrid instance",
        "uh hybrid machine in your environment actually the secrets whatever it certificate or something else are stored on your workload and if those are compromise of course it can lead to potential risks and with that I we have",
        "nor Contin the",
        "lecture there you go so the next thing we want to talk about are defaults and I titled this defaults are an attacker's best friend which is a little bit of a provocative title maybe some defaults are an attacker's best friend but some certainly are before we understand that we need to talk about why defaults exist and different csps have a different approach to that particular question the Azure G c p approach to a default is this is a prefab construct that you should absolutely use you should select the right one attach it to your Scopes use it with your identities and go forward and be successful AWS approach is defaults at least in the I am space as a sort of starting point on a leas privilege Journey there are point that you start from and then taper down into a more leas privilege situation whether",
        "you take the first approach or the second approach when defaults are vulnerable then their inherent property of being very very common makes for a dangerous cocktail what we're going to see in this section is a selection of I am focused default risks that's not to say that there aren't a ton of nonim focused default risks but these are the I am focused ones or a few of them so let's start with AWS AWS manage policies if you are not familiar with AWS manag policies AWS manag policies are essentially Json policy documents owned and managed by AWS which you can simply attach into your",
        "identities the issue with that is that if we understand how Json policy documents work then we understand that they have to be broad by definition because they have a resource field and the value of that resource field can only be a wild card whether that's a FSE star or a path with some starts this is because AWS owns the documents and they cannot possibly know the names of your resources in your accounts Translating that into a few famously common managed policies that sometimes create vulnerabilities which are quite common we have readon access sounds pretty innocent right you should be using view only access and not readon access as readon access gives data Access Data access to S3 buckets data access to St storage services so a common permission used by some third party vendors which is quite dangerous cloud Trail read only access again you might be deploying this not really experts on AWS in using this manage policy but again once we understand the internal mechanizations of a managed policy we understand why this can't work AWS doesn't know the name of my cloud trail bucket so they can only possibly put a wildcarded expression in there which means that it grants S3 get object on every resource in the account you can get every object in the account as long as you know the path so again understanding the underlying construction stops us from getting Lost in Translation and exposes these default risks same goes for pass assigning other roles or managed identities permission modifiers or assume roles all of which can lead into direct privilege escalations because they're not least privileged scoped down moving on to Azure so the first thing about Azure is I think Azure really believes in the sort of default role approach it can sometimes be difficult to select the right one but we see this in the rooll limitation right Azure has a custom roll mechanism you can use it but you're limited to 5,000 per directory so as a fully-fledged Enterprise strategy it's quite it can be quite difficult to support and attackers in Azure can leverage read permissions and the assignment permissions that eagle talked about in order to use these default uh permissions when they're not properly scoped to exfiltrate data and escalate privileges the next thing we're going to talk about from an Azure standpoint is access ACC Keys which are an IM bypass that is essentially created by default by many storage Services let's take a deeper dive in to that so I created this storage account uh and immediately without me doing anything it created these two access Keys what are access keys well they do basically what it says on the tin right they're a pair of permanent credentials that you're supposed to rotate with which you canot only access read like do have read access to data with a bypass to the entire IM system like just directly using these credentials you can also have management and right access to data so this gives quite a quite uh large control of storage accounts and the same goes for cha for uh sorry for Cosmos DB same goes for uh for red is same goes for a bunch of other St storage Services now if you look at the image at the bottom they do give you this like check box to tick it off to disable it and they say well disable at your own risk right because he might be breaking your system and disabling all your access and then if you go into the Azure docks they give you a handy idea for how to fix this which is we have this metric for transactions under specific authentication here I put SAS and and access keys and you can see how many access Keys uh how many times access keys were used sounds perfect turn on the metric look for a flat like make make everybody stop using access keys look for a flatline turn on the toggle whenn when whenn the problem with that is that I just created this",
        "bucket and I never used the access keys I just clicked clicked clicked I never even clicked show on the access keys I don't have the access keys and yet we have access to this the reason this is happening is probably to our best estimation because Azure is using these access Keys internally to access your data like for portal display for example and other mechanism like the portal does break a little if you disable them and so and by the way when I showed this to e said maybe it's just the creation right it's just like the bump for creation no it lasts all the way uh uh throughout and the issue with that is that they they're an ion bypass that's very hard for Defenders to notice and it's quite hard to disable you can do a deeper dive into the a into into the logs and look for all the activity and sort of like find whether your users are doing activity but it's much more complex than an easy",
        "fix now on to gcp so gcp has a sort of Legacy concept from the olden days called basic roles which is still quite",
        "prolific basic roles viewer editor and owner uh we focused in on the first two uh have strong and Broad permissions how broad like you see the fancy numbers here on the right right but they're basically for all of the cloud platform viewer is uh sounds again innocent",
        "sounds like view only sounds like metadata no viewer lets you query big query like for example viewer gives you very uh significant data access uh editor basically is like a power user permission that that you can escalate uh to admin if you're crafty and want to enough uh and the way they scope it down in in uh the compute engine in GCE is another older mechanism called AIS Scopes which is the name is a little maybe like to me name was a little confusing because it's not about scoping down to resources it's about scoping down to apis it's about scoping down to services so you uh take these uh axis Scopes you just select out of the list that Google has you take these axis Scopes you attach them to the basic role and the sort of intersection of those permissions creates a permission map the third thing that's important to know is default service accounts whenever you turn on a service in gcp uh unless you've disabled this Behavior a default service account is created and the thing is for many services the permissions that that default service has account has is those same basic roles viewer editor usually editor uh or at least for compute engine it's editor uh are those basic roles so the totality of this brings us to another kind of danger Dangerous combination which is if I started a computer engine machine I got the default service account because I just clicked through um uh that meant I got the default editor role because no one edited the permissions for the default service account which by the way you can and should do and someone gave it the cloud platform access scope this is like a mistake that someone needs to make right the default access scope is cool it only lets you like write some logs and do some viewon and it's it's all right but if you want the machine to actually do something then the sort of Doc's way of getting you through that process without giving you an entire IM course is they tell you put the cloud platform scope Cloud platform scope is virtually everything it's very very Broad and so if you have the cloud platform scope that's a pesque to project admin and it's quite dangerous",
        "not even to mention like if this machine happens to be public or happens to have leaked keys or happens to be vulnerable or there happens to be a way of running code in this machine in which case it's like a full account takeover vector and not just a a PE risk in the environment next thing we're going to talk about is logs and specifically that logs have limits now logs are awesome logs are incredible and they are probably better than they ever were in the cloud this is not like to take like to throw dirt at at Cloud logging which is quite good but especially because it's good and we learn to rely on it we need to understand its limits and be able to contextualize them correctly why is that because we use logging both obviously to know what's going on do detection do incidental response and that's not so much the topic of this talk but it's incredibly important and you all like live this and know this the second reason we use logging is actually to build better permissions because in order to know whether I can take permissions away from someone what I would usually do is try to examine the logs and see what they're actually using right a sort of use it or lose it philosophy and if logs have limits then",
        "I can't be sure enough that I can freely remove and that leads to permission sprawl uh broadly also so attackers can hide behind unlogged apis opaque apis log manipulation distributed logging we're going to dive into that from vendor from a cloud uh service provider specific perspective last piece of like advice is log whatever you can but then there's the parenthesis right log whatever you can afford to because some some logging for like data actions or data plane actions uh some uh some uh users or some uh organizations find prohibitively expensive and that's perfectly understandable and at the end it's a risk cost calculation that we're all forced to make AWS so a few like logs have limits points in AWS there has been a long known uh passive reconnaissance technique for AWS for role enumeration if you're not familiar uh with it uh then absolutely uh look it up but basically you can save IM policies with a role and they don't agree to save if the role isn't real so you can sort of do a brew Force enumeration on roles and targets account and this has been known for a while uh dat actions again because dat action logging is quite expensive uh sometimes it's not turned on and then that can be leveraged to retrieve data uh cloud trail manipulation so AWS has a really cool thing which is the cloud trail digest right it does like a hash check some digest on the cloud trail logs to show that nobody has manipulated them but let's go back to the shared responsibility model whose responsibility is it to check the digest that's right me you us who actually checks the digest the question is not a lot of people check the digest so an attacker can often go manipulate the digest remove events they don't like by overriding if they've already like done a PE that's strong enough right have to do it and uh and manipulate cloud trail in some scenarios last thing I heard after we constructed this presentation at a conference two weeks ago uh research by cat Traxler from Vectra I have the link here definitely look it up you can use S3 replication to do a cross account data exfiltration uh which isn't logged at the source account so you can just leak out S3 data under certain conditions like there have to already bs3 replications about the number of Destin destinations won't go deep into that but again these vectors for unlock data replication are quite or unlock data exfiltration are important uh in AWS in Azure so if you are familiar with the sort of azure approach to logging there's a central activity log which most mostly only contains manage policies the other logs are distributed they're managed by each service you sort of have to control which storage accounts they go to and gather it from them there are Azure internal ways to like make this entire Orchestra play together but it's not out of the box in a way that like gcp and and AWS are and",
        "read actions are not logged to that Central activity log which means they're very very often um missed secondly that issue of distributed logging again makes logs have limits and makes logging more difficult in that particular",
        "context",
        "sorry the multicloud conclusion for this whether you're already multicloud or considering multicloud or deciding to go multicloud or managing multicloud is that multiple Lo clouds multiply both log dispersal and the amount of languages that you have to process logs in because all of this has de different schemas all of this has different abstractions all of this has different meanings and there's no onetoone translation unfortunately there's no magic solution I can offer on this stage to make everything magically better uh but this is an important thing to be aware of both when managing an environment and when making decisions and considerations",
        "strategically so this has been this up until now has been the well I I I I think a lot a lot of uh some of it has been like the classic black ad of oo things are scary be afraid but then what can we actually do what can we do practically to make things uh better uh for our organizations and for our Defenders I'm going to bring up two points here one is pretty practical and the other is a little more philosophical but bear with me the first thing is try to limit the effect of mistakes because IM systems in all three of the vendors we discussed today are complex and they're complex in different ways they're complex to different degrees but all of them are complex and we find that organizations will make mistakes and so one of the most important things is limiting the effect that a mistake can have one of the things that can that that that can do that is sticking to one AWS account or gcp project or Azure Resource Group per workload but again don't get lost in translation why an AWS account is a strong security boundary relatively speaking you can only do account actions under specific precondition you have to have bilateral permission etc etc etc an Azure Resource Group is only as strong as a security boundary as you make it if you went to the higher organizational units we saw in the resource map earlier like the subscription or the or the organization and you gave permissions then your resource Group is not a security boundary so understand when",
        "there when that's a security boundary and when not and try to apply it in a way which actually limits mistakes deploy organizational policies to limit mistakes so these are different in every cloud and Azure you can do something like organization wide policies or deny assignments on the all principles principle in gcp you can use organizational policies in uh AWS the classic way is service control policies or scps a few examples of things that people like to do which we think are good practice in AWS deny access to the root account deny cloud trail delete Trail which is like the first step of evasion no more logging uh now we can do uh whatever or in or in uh gcp we just talked earlier about the default service account plus basic role issue you can actually disable I am. automatic I am grants for default service accounts which disables that exact uh Behavior so",
        "you can protect yourself organizationally of course avoid permanent credentials and secure human identities in as much as you can because those are the primary entry vectors into any environment second point which said before more philosophical is about how do we build permissions and building permissions is like sculpting you can do it like clay or you can do it like marble you can do it constructively building block onto block onto block onto block until you have something functional that does what you need or you can do it like marble you can take a big hunk of permissions and kind of chisel away at it until you have a form vaguely resembling least privilege and",
        "Clay building is something that I think security teams like and developers hate right because I don't know yet what permissions I need and I'm not the IM am expert so I can't tell you exactly which permissions I need and so the challenge of that is knowing exactly what you need and the risk is dysfunctionality lack of flexibility reduced velocity so all of these are the reasons to not do that marble the challenge is to prove a negative just like we talked before when we were talking about the limitations of logs you need to be absolutely sure that someone doesn't need a permission before you remove it otherwise you will make a lot of people very upset but the risk of that is that you end up being over permissive and in fact the sort of thing we find most common in actual practice is people take the big hunk of marble kind of Promise themselves to Chisel away at it someday and then never actually do or at least don't in the really painful and substantial areas like the pass roll the act as the assignment permissions you know the places where priv escalation or or or all these permissions that ego showed before that actually hurt you our recommendation is kind of boring here which is a hybrid approach try to not Place hunks of marble that are too large like don't start from the biggest power user permission you can get from that service try to place smaller blocks and then chisel away at them because then if you didn't get to Chisel at least you don't have a a larger danger looming over you and also you are controlled uh for uh for mistakes and you are uh yeah",
        "uh uh and and to and and sort of in line with that and to make the sort of clay sculpting or hybrid sculpting process easier we built a tool called access undenied on AWS it's an AWS tool as the name implies and it came from the issue that some deny messages are not detailed actually AWS has gotten much better with it uh to begin with a year ago none of them were detailed now some of them are significantly more detailed but still none are fully detailed for security reasons uh and so if you don't know what you're getting a deny then a you're very frustrated but B you don't necessarily know what permission to add and what that leads to his permission sprawl because under the pressure of usability again you add a big hunk of marble it works and now not only does it work you're you're kind of afraid to touch it right because it didn't work before and now you did the thing and now it works and so and so and so that's exactly how permission sprawl happens you do something then it becomes the thing that works and then you don't touch it anymore so what access undenied does is it scans the whole permission landscape it scans the scps the permission boundaries the identity policies the resource policies then it runs a permission simulation to tell you whether it should work or not and scans the policies to tell you what sort of statement is the one causing the deny or what statement do you need to have an allow and we're going to have have a have a demo uh before that the demo starts from already having the cloud trail event there are reasons why we did it uh uh uh This Way namely that when things are happening from service sources or not from your particular machine then cloud trail is the only centralized location you where you can see all right not all but the most of the things that have happened uh so imagine that we already ran S3 list bucket we tried to list the objects in a bucket we got this access denied message and now we are going to run the tool so I apologize for the text size but I will do my best you know football commentator narration uh effort so we start with the cloud trail event that we saved into a Json file it's called access denied cloud trail event so let's look at that file uh see what there is in it if you are not like versed in the sort of arcan of of cloud trail events it says access denied and not much else it says the source account the action but not y AIS was denied so now let's look at running the tool before that let's look at the sort of commands that are available we have two commands one is called analyze it does the works it analyzes the cloud trail event tells you y AIS was denied another one that's really helpful is get scps it just downloads the service control policies so that it doesn't have to do it every time again and again and again because it's quite a heavy burden in terms of apis so now we ran an analysis here to make it quick for the demo I ran it without uh service control policy so you're going to see the little warning there it is and we have the the response so basically under assessment result we have it's a missing allow and an identity based policies so we don't have a deny we're just missing an allow and then we have where we need to attach a new policy that's RNA AWS IM account ID",
        "see I I got the account ID scrubbed because I know some of yall are have plans uh uh and uh and then uh the policy that we need to add which is allow S3 list bucket and uh do it for this this particular bucket so now you can add the least privilege policy and avoid the kind of sprawl that happens this was a very simple example uh but it also works in complicated cases",
        "right uh that's just one tool I think there's an incredible world world of tooling uh uh these are mostly the IM Tools around AWS the reason they're AWS Centric is because both the power and",
        "complexity of AWS IM I think invited this concentrated Community effort to make an open- Source uh uh stab at this issue I think spaces like Azure have incredible tools for like pen testing or red teaming or or or or active directory uh but not particularly Tools in this space so uh policy Sentry lets you sculpt out of play by specifying your policies and crud IM live monitors what",
        "apis are running on your machine and does uh a similar thing which is tell you the least privileged policies you need to add and there's a bunch of tools that scan your cloud trail in your environment and tell you which policies are safe to remove because they haven't been used like Cloud tracker repo kid and a bunch of privileg escalation tools which are the rest of the ones in there and without without any further Ado uh we're happy to take questions thank you so much for listening",
        "[Music]",
        "[Music]"
    ],
    "2y3jgJSgnEo": [
        "[Music]",
        "thank you for coming to my talk um I am whoever I say I am infiltrating identity providers using zero click exploits I changed the title slightly to include the s for exports",
        "um a little bit of background about who I am I'm a security researcher at 360 as part of the vulnerability Research Institute I also run a training class so if you enjoy this presentation feel free to check it out call full stack web attack I've spoken at some past conferences and also trained at those some of those conferences and in the past I've discovered over 1500 high impact or critical vulnerabilities and I played pone to own this year last year in the year before to have so the agenda for today we're going to discuss is what is identity and access management first then we're going to look at authentication authorization at more of a high level then we're going to quickly discuss some past attacks against other solution IM Solutions such as Oracle access manager Forge Rock open am and VMware workspace one access",
        "we'll get into this discovery of the bugs we'll talk about in this presentation and also the exploitation",
        "process for some of those and then we'll cover some conclusions and takeaways",
        "so let's first cover what is I am uh it's the integration of identity and access management into a single solution so you have identity on one hand being authentication which is the validation that is I am whoever I say I am I present credentials to the system and the system validates those credentials and that's usually done through password authentication or Federated authentication such as single sign-on technology and typically the protocol mainly used for single sign on technology is uh saml or security assertion markup language on the other hand there is um access or authorization which is the verification of privileges or permissions for an already authenticated user and typically speaking the protocol used for this is open authorization or oauth 2. and that protocol is usually Inc uses",
        "another protocol in combination of that technology called Java web token and that's used for a data exchange right to keep the the data across systems",
        "so IM is really a prime target for attackers right you have it's a it's a technology stack that includes both authentication authorization it must be externally Exposed on the perimeter especially for the oauth component",
        "um it's it's got a complicated technology stack using several authentication protocols and authorization protocols and several other components inside of those systems so breaching in IM solution",
        "um is is really critical right because it's the keys it holds all the keys to the kingdom essentially for an organization and those uh those credentials that are stolen from that system or those tokens that are reforged can be replayed against other systems externally exposed and attacks can further into the network and more information can be stolen and things like that so you really have uh identity on one hand and access on the other and combine into a single security solution which is sold to many organizations and placed on the perimeter",
        "so let's go through at a high level Federated Authentication",
        "um Step One the user makes a resource request which goes through a service provider",
        "step two the service provider redirects the request to the identity provider",
        "step three the user then sends the authentication request and the resource to the identity provider right both the two types of requests step four the identity provider validates that authentication requests and sends back a signed response for data integrity",
        "that sign responses forwarded to the service provider and finally the service provider verifies that the user is authorized authorized to access that specific resource and returns a response with the original resource requests okay",
        "so like I said on the other hand for authorization you now have uh oauth2 and",
        "this works a little bit differently so the user is already authenticated and an application requests permission to that user for granting access to a particular resource and that's usually done through like a pop-up box for example and the user says okay I grant permission for that application to access uh the the resource",
        "and then that application takes that Grant and sends it off to the authorization server to gain an access token right",
        "and then finally that access token is used to gain access to resources right Naturally Speaking",
        "so we have some interesting points here for authentication it's typically only server-side obviously right and authorization combines a mixture of client-side and server-side components",
        "so for Authentication the obvious sort of XML tax exist for saml because saml is based on XML uh data structures and so you have token passing vulnerabilities like external entity injection uh server-side request forgery uh XSL transformation",
        "you may also have the ability to uh trigger a missing verification entirely in the system so for example you might be able to authenticate a system and they don't verify the signature at all and so you can completely just authenticate to the system with a signed response but there's also the ability to bypass signature verification in some cases using XML signature wrapping or XML canonicalization",
        "but these these type of vulnerabilities are",
        "um are past the differential type bug and as such they require the attacker to obtain an already existing saml response",
        "a sign saml response so that could be through an information disclosure or that could be through already having authentication to the to the system as a low privilege user for example so I try to avoid auditing for these types of vulnerabilities although they still have a high impact against these types of systems for authorization you have like I said client-side sort of attacks so you could have the idea here is the step to get access to an access token an attacker might use some client-side type of attack to leak the authorization codes or an access token through cross-site scripting CrossFit request forgery open redirect or click jacking and we've seen these in in done in the wild and also as part of bug bounties and this is more or less the account takeover style type vulnerability right",
        "thank you",
        "so now let's have a look at some past attacks against IM Solutions",
        "the uh some of the products we'll look at is the Oracle access manager which is oracle's Flagship IM solution and comes bundled with oracles or weblogic application server all right and this is uh this is actually a separate product from Oracle identity management solution and then you have the forge Rock open am and it was originally called opensso and open am is a fork of open SSO it was maintained and developed by the open source project by Ford Rock but then later in 2016 they had created a forge Rock am from open SSO and it became a closed Source product having said that though the code bases are quite similar even though there's six years difference of development and then finally we have VMware workspace one access and it was formerly known as VMware identity manager and his vmware's Flagship IM solution and relatively new uh to the market but it's still uh used by several Fortune 500 companies and has some technical debt of course",
        "so the first bug we'll look at is uh CV 20 21 35 587 and this was a deserialization of untrusted data it was pre-authenticated and essentially had completely zero limitations it allowed for RC against the systems of",
        "uh oam 11g but at the time it was end of life when this bug was reported but it also worked on oam 12g which wasn't end of life but it didn't work on the latest patches of OEM 12g and that was because Oracle had removed the endpoint due to some code refactoring they didn't actually know about the vulnerability so essentially there was really not much for Oracle to do right so it was it was interesting to see it was kind of like a an end day on a one day vulnerability or half a zero day and then you have uh cb21 35 464 which was another deserialization of untrusted data in Forge Rock open am and this was very interesting because it was in a third-party component a third-party library that was separate from the",
        "actual original code base and we can see in the code here that the vulnerability uh came from the get parameter jado dots page session which was passed to base64 decoded essentially and passed to a deserialization function",
        "the limitations of vulnerability was also none and allowed for pre-authenticated RCU and the way it was patched by forged Rock uh in their am solution was by removing the vulnerable Library Jato which was developed Way Long Ago by Sun Microsystems but it was also patched interestingly in open am too",
        "and the patch uh you can see there use a look ahead uh whitelist destroyalization check for uh dangerous classes there",
        "and let's look at the the third vulnerability in the list here uh this is CV 2020 uh 4006. this is very interesting because this impacted VMware workspace one access and this was a command ejection and it came through the generate and install self-signed certificate function and it was very straightforward actually when you look at the code it was kind of quite obvious but the interesting point that I wanted to make with this vulnerability was the fact that it came from this sand parameter that was embedded inside of a command string in either Linux or Windows so if the software was deployed on either Linux or Windows the command injection would work and in both cases they used the command shell so you didn't need to do any extra argument attacks on the particular binary that was being targeted inside the command injection you could just use the shell to gain remote code execution",
        "okay",
        "but the extra interesting thing about this vulnerability that I noticed was that it was actually exploited in the wild back in 2020 and on top of that it actually required authentication as the administrator user it also required access to Port 8443 which is a Management Port that's not typically Exposed on the system",
        "and it also had csrf protection meaning an attacker couldn't use it in a client-side style attack they couldn't deliver it via VIA an email or anything like that they actually needed to exploit it from client to server okay so they needed to have credentials essentially foreign",
        "very simply VMware built a a class",
        "called input validation utils and had a method inside called is valid San and they just did a a white list or allow list check using regex string which was pretty strong strong enough to stop the attack",
        "so let's have a look at a Target selection and vulnerability discovery okay",
        "so as you can imagine I found VMware workspace one quite interesting since it had that externally that vulnerability",
        "from 2020 that was uh exploded in the wild and it also had a history of no pre-authenticated RCU so this made it super interesting for me it had a single point of failure for a system it had the same complex protocols or web protocols inside the system and uh they had a lot of technical debt um primarily from try Cipher so the software was originally developed by try Cipher well before 2010 and VMware came along and bought it in 2010. so it had some some technical debt there as well",
        "so let's have a look at how I discovered uh 20 22 22 954 it was quite interesting",
        "I was testing one of the API endpoints and just using some semicolons and I got thrown a 500 error and as a regular pen tester I thought that was quite interesting um so I wanted to dig further and just looking at the the return response from the server I got this stack trace and this error message uh saying he's in a isn't a valve it's is sync inside of this template custom error and we have a stack Trace there and it's mentioning free marker and so I put two or two together and I realized I think I got a template injection here I'd never looked at template injection before so I thought that was quite interesting um and the real error came down to using a valve inside of the custom error.stl script um and potentially attack controlled data can land into that into that uh evolve there",
        "so going through spring a little bit stepping back from a little bit and thinking well how is this manifested how is this error generated I decided to look at how spring handles errors all right and I found out that spring allow a developer to map slash error and set that as the default error Handler so anytime an exception is thrown in the application it will jump to slash error uh controller the Handler inside of a controller and it will try to attempt to handle that error gracefully right and looking at the code I found that UI uh the class UI error controller had a mapping for slash error so I set a breakpoint on there and I saw that it reached a couple of different functions",
        "it first reached the get error page function and then eventually reached handle generic error and then that handle generic error eventually returned the custom error.ftl's page",
        "and inside of that pay before it returns that page it sets the the error object with the error message which potentially controlled out contained our injected",
        "string",
        "so I set the breakpoint on the slash error Handler and I knew the error message that I was hitting right I I did my semicolon I saw the error message and I thought well how am I going to find out where this error message is right where is this coming from so naturally I decided to search the system or the code for that exception string all right and eventually I came across some interesting code inside of the spring core I discovered that inside of our spring core within version 4.2.4 they enable by default a strict HP",
        "firewall and this is more or less like an internal web application firewall internal wef inside of the spring framework and they check for a particular malicious strings inside of URL request particular dangerous",
        "parameters being passed and things like that and it's more or less a kind of glorified denialists right and that they assume that developers are not going to need a semicolon not going to need specific characters encoded and things like that and we saw that it's sure enough it's hitting this exception message and it's the request was rejected because blah blah blah and it was the same error message I was getting back when triggering the bug",
        "so I had to step back a little bit I had to give it some time and let this sink I I decided to do some Google searching and I found this stack Overflow post that explaining the issue and it really came down to before uh free marker 2.3.31",
        "uh the developers would use either valve to pass a Json string",
        "and after 2.3.31 a free marker they exposed the method called evalve underscore Json and that was a safer way to handle uh strings to pass it to Json but I looked further into this and the the free market developers expected the developer to pass a Json object already to a free market template so it didn't expect pre-processing of that of a string and so developers kind of got confused and decided to use the valve and it led to several security issues so thinking about this from a higher level point of view I I said well okay what do we have here we have a free marker injection do we need to escape the free market sandbox that was the first question I had the second question was can I find an exception message that I can partially control an exception and inject attack Control Data into that to trigger the injection correctly okay and in Spring MBC the configuration is typically done inside of the Java code itself not inside of XML files and in this particular case it was inside of the web config class and inside of the web config class they had the following code to Define how to create the free market Factory and all is good they're using free market default and freaker Market default user sandbox so that's pretty good but they've missed a couple of things all right they first of all they forgot to uh disable the debug and",
        "that's why we got our debug message back for the free market stack trace and and that kind of thing so if we were to disable that and by default debug is on and they also forgot to disable the set new built-in resolver class resolver so essentially an attacker could Supply a class and that could be instantiated and used as an attack and there's a famous class inside of free marker that you could use to gain RCU if you instantiate it and pass a string to it okay so we don't have to bypass the sandbox we've got the new built-in available to us let's look at the next issue let's try to find an exception right that we can inject into I decided to look at spring interceptors because the interceptors are a code pattern that happened before controller controller code and so essentially interceptors are used for things like authentication csrf token checks uh",
        "cookie checks and things like that and so I decided to look at the interceptors to see what are they doing and I knew that was pre-authenticated code and that was that was interesting for me so again I went back to my web config class and I had a look at how they're defining all the interceptors for that particular application and I started going through the interceptors one by one and I got to the third one which was auth context population interceptor",
        "and they took in two get parameters right the device you did and the device type and that was passed to an auth context instance a North a North context uh Builder instance and then of course build was called on that on that code and then those values that device ID and device type were passed into directly to properties on that object and then if the request wasn't valid then it would throw an exception message with those values device type and device ID right so now we had we had everything we needed we had all the ingredients",
        "and we have a single get request for payload delivery it works on default installation it's pre-authenticated and worked against even vmware's cloud",
        "and the exploit looks as simple as that one get request and I got RCA on on VMware workspace one and this vulnerability was actually exploited in the wild I tried to keep the details quite private but uh reverses and and researchers pulled apart the application found the patch and figured out what the issue was quite quickly and and released an exploit for that so I got exploited in the wild unfortunately",
        "so let's have a look at another exploit that I I developed uh this was uh hekate uh hekate stands for the Triple moon goddess or and there was three bugs used in the next exploits change so I thought that was a good name um and we'll there's actually two components to this exploit there's a client-side component and a server side but I just wanted to focus on the server side for this presentation since I don't have too much time but it was this client side was quite interesting and if you wanted to have a look further uh the code is available on GitHub after the presentation",
        "so the first vulnerability was the axis control service authentication bypass and this was quite interesting this was the way they implemented or2 was a",
        "little bit incorrect it was off the specification and they had two different classes so there was two different vulnerabilities vulnerable patterns but",
        "they've essentially exposed two methods generate activation token and activate ol2 client and uh they allowed an attacker to use",
        "an existing or2 client to obtain a client secret or potentially a grant right so the way that works uh and oh if we have a look at the system when I look logged in and had a little play around with it I actually found there was two defaults ol2 clients and they had the scope of system and admin so it's like having hard-coded credentials in the system in essence",
        "so let's have a look at how the attacks worked first the attacker makes a request to generate activation token endpoint and passes in one of the default or2 clients in this case it was ACS",
        "the system returns with an activation token right then the attacker sends that activation token to the activate endpoint and then of course the system returns back a client ID and the client Secret completely unauthenticated this is just assessing the system and we get back a client Secret",
        "so essentially what we have now is the ability to bypass this client side action of Old 2 and directly access and send a grant request a client credentials Grant request to the system to then say okay now give me back a token because I got I got the grant here I got the client secret give me back an access token and now I can now use that access token to access any of the resources on the system as system or admin scope level okay this was a fun bug because it completely required no outbound access to the network no interaction with other attacker systems it was completely all built in within the within the framework",
        "so to understand the next vulnerability let's have a little bit of a look at Java database connectivity or jdbc",
        "Java provides a level of abstraction for developers to interface with database Technologies in order to encourage cross-platform development",
        "the idea is that the Java developer doesn't really need to know what database technology the application uses if they adhere to the jsr 221 specification right these drivers implement the java.sql driver interface",
        "and the issue really here is that the drivers provide a very large attack surface for any jwc injection endpoint okay",
        "so before we get into the bug let's have a quick look at this particular class this was the DB connection check controller and this actually had implemented the ignore a csrf handling",
        "interface so essentially any request to this controller could have been done from a from client-side as well from a client-side attack so that was part of the hikate exploit",
        "and inside of this controller they had a method mapped called dbe check and this passed in a jwc URL That Was Then passed to the the check connection method and following several layers of abstraction we eventually get to drive and manager.getconnection which is the actual sync for jwc injection using the attack controller jdbc URL",
        "now there are several ways to exploit jwc injections that are publicly available as it currently stands attacks against mice color driver postgres H2 driver you've got db2",
        "Apache Derby and even my scroll fabric drivers okay not all of them achieve rce but most of them do the interesting one for me was the MySQL driver and the postgres because these were the drivers that were installed on the system right but it was interesting to note that the actual system used a posca's database under the hood so the the MySQL driver was technical debt right sitting in the system not being utilized at all let's have a look at a sample request so if I was attacking the MySQL using the MySQL driver to attack the jwc injection it would be an attack like this first we bypass the authentication and grab the pages NN cookie and then we make a request to that endpoint DB check we pass in the jwc string pointing it to an attacker control MySQL server and that attack controlled MySQL server will deliver a Java object back",
        "and then the system would deserialize that Java object hopefully achieving remote code execution",
        "and in terms of the postgres uh injection attack I did this was a little bit trickier because it didn't actually require a valid connect back to an attack controlled server for the the postgres driver but it did require a connect back if we were exploiting the soccer Factory technique of um unsafe unmarshalling and what that requires is that an attacker Supply and arbitrary class and that class is instantiated with a single argument parameter a string argument and in the context of spring they have uh they have application contact classes context classes and these classes can um unmarshall essentially",
        "um and and xml's payload that can be supplied over a URL okay so let's have a look at the payload something as simple as this you pass in process Builder and you set the initiate method to start and you say start and execute this string and the interesting point to make is this is not even a bean class and yet it still works all right this is not a valid job of being at all process Builder another point to make is that unfortunately this attack required an outbound network access to an attacker's machine and also the MySQL driver acquired an outbound attack to us an attacker's machine so I was sort of scratching my head I knew where the authentication bypass didn't require any outbound access and I was kind of like you know how can I get uh an attack like this without network outbound access especially because I wanted to Target the cloud right and I had the the common beans u201 Gadget working from yss serial and I was like okay this is this is great I don't even have to come up with a Java Gadget here but it required uh outbound network access and I was kind of thinking how can I do better I decided to look into the code a little bit more and I found a particular class called license checker and that took a single string argument in the Constructor and that was that string was passed to set State inside of the license handle instance",
        "and that essentially was base64 decoded and passed it this realize as an array as a byte array and integer is read from there and if the integer matches a specific value then it's past deserialize underscore V2",
        "and then of course that byte array is then decrypted and deserialized under the hood so it was very nice no outbound network access required and essentially we had our attack we had our authentication bypass we could point it to the postgres uh use the postgres driver pointed to a server that doesn't even exist on any network or anything and use the license Checker class and pass in the the uh encrypted string",
        "that would be deserialized on the server right",
        "so yeah we can do better if you keep trying you know got very lucky we have a little problem we're executing arbitrary code AS Horizon user and this is an appliance and I was testing and I said I thought to myself look I want to try to get root access you know it's not enough to just get the Horizon user code execution I said let's try to get root access so one of the first things I do when I look at appliances I look at the sudowiz file right and look at well what scripts or things can I execute as the Horizon user and it turns out there was two specific scripts well there was lots of scripts I could execute but two that were interesting to me at the time it was The Gather config and the published CA",
        "so the first one published CA cert took an input file and made it readable and writable by the owner and this essentially allowed me to be able to leak uh the ETC Shadow file for example I could read arbitrary root owned files and things like that but I needed a bit more I needed to figure out what else I can do but it allowed me readable and writerable by the owner so I then found that the gather config script allowed me to take ownership of a root own file so I could just Sim link debug config.txt and point it to a root owned file and we were pretty much done at that point",
        "so in this screenshot here we have showing a root own file which is one of the scripts that was part of the sudowiz file",
        "and show the permissions here as Horizon so we gain root access by leveraging the the exploit but the idea here is it changes the ownership of that particular file and changes it to be writable and then we edit the file as as a low privilege user and just execute it as sudo we get our root shell and you can see that that script is actually in the pseudo is there as well all right",
        "so now let's have a little demo time we'll see how we go uh you see here",
        "you guys should be able to see the screen now just going to make sure the system the target system is up so I'm going to run my POC now first I'm going to grab my IP",
        "okay",
        "let me see here okay and I'll just change this",
        "to 131 and hopefully if everything's",
        "right we bypass authentication trigger the deserialization wait a couple of seconds and we should have our root shell pre-authenticated [Applause]",
        "put the command wrong there hey all right let's go back to the slides",
        "okay",
        "so hekate results",
        "um no outbound network access required Works in default installation pre-authenticated against the client and server achieves root access works on VMware cloud and exploit even cleans up after it modifies the sudo script right conclusions and takeaway for the defender um don't allow your organization to have a single point of failure right so having a system like an IAM Solution on your perimeter is really kind of a single point of failure if that system is accessed or penetrated and gained to taken over then you have a serious problem in your hands don't deviate from the or2 spec in fact don't deviate from any complex protocol stack um especially web facing and disable the",
        "new built-in when implementing free marker in fact just watch out for unsafe defaults when implementing third-party libraries um templating engines are complex you know and even though they might enable a Sandbox there might be some other issues that you want to check that could be insecure for the attacker you really want to always check the implementation for protocols or mistakes right you always want to want to double check how they implemented a particular protocol that could be something just slightly off and enough for you to take over a system always try to change vulnerabilities together and Primitives together even if it's just a little vulnerability here and a little vulnerability there put it together and see what you can how far you can push it and make giving up harder than giving in one of the things I see often is is people are looking at systems and they and they just they're close to finishing an exploit chain or they're close to finishing something and then they just I can't quite solve it and just leave it right but don't give up keep keep working at it and there's some references there and I will release the code and a blog post after this presentation with a little bit more detail surrounding the vulnerabilities for example about how the or2 clients are generated and things like that okay any questions and thank you for attending my talk",
        "[Music]",
        "foreign",
        "[Music]"
    ],
    "8lrMkPRKaTg": [
        "[Music]",
        "thank you",
        "how's your greetings from China you're covering me I'm sorry to be very sleepy uh it's my second virtual black hash and it's a great painting for me not to be in Las Vegas due to the travel restriction I hope you guys safe and sound during this all for pandemic uh my city is still under lockdown the motivation of this briefing is pretty simple at first we want to build a detector for Focus for folk voices and",
        "then research the paper some Google Scholar the results are very disappointing uh very high is being many Publications on this topic and almost all of them are reporting by Reformation performance the average actually says about 98 percent several of them even reached 100 it seems that there is nothing we need to do anymore of course the male Security Guys and there is no absolutely secure the system uh then they decide to fund a method to make folk these fake voices bypasses this looks very strong detectors uh the",
        "friendlies are pretty surprising uh in short uh it looks like all exciting detectors uh just yeah  impossible for real world environments uh this briefing has two speakers uh me and my partner Mr Tyrion uh he is for start uh by the way he is still an undergraduated students and it has first time to speak as a top tier conference like black hat uh he's a little nervous and his girlfriend is watching the live your turn",
        "I'm a undergraduate and uh and university is my first time to come here and give my speech",
        "um",
        "now I'm going to give my presentation",
        "um what about",
        "foreigners after that we will introduce our method to bypass detectors and so two will try to save the previously learn cancer evaluation part to prove",
        "our findings uh now we are going to discuss what is fake wise",
        "we have been passed with what is created by machine for example Theory we can tell from state with voice and it is it is not human but now the people is synthesized by AI is able to sound like a real person",
        "um we can see the waste club based crime is already underway",
        "before 20th century the early speech synthesized system is primary and it is very difficult to simulate human waste",
        "the native method of speech socialize before 2010 is easy to detain its feature learn transfer age of AI the AI centralized speech is a solution nature it is difficult to detect",
        "air centralized speech is generated by citizer and underwater the methods are",
        "quite well established human is the hard to figure out where the speech is a big order",
        "human cannot do it but but maybe a program can now we are going to investigate the existing detainers",
        "uh there are many approaches to the test page wise uh or existing approaches are reported were permission performance the computer vision based opportunities towards ways to convert ways to image and do classification uh three server-based methods have one year 100 accuracy rate",
        "and the other projects also result in compressing performance",
        "um but during this mask as we already watched in the real world without saying no uh there are problems with the way there's approaches and they use only on this stage data sets and uh you don't consider the speaker in relative features",
        "uh here we propose A New Concept called spiritual Humanity features it is a feature which should not be used to determine human a lot",
        "noise different languages they are not",
        "related to the speaker",
        "with this new concept of speaker emailing features we propose always",
        "colonizer called Safety twisting",
        "safety who is in Westland close based on",
        "deep learning and speaking Humanity features we will use we will use this tool to bypass existing detection approaches",
        "in this method uh when large speaker United features with the existing AI",
        "waste Runners uh web Builder 2 are called speaking many features instructor to get the features we want so there's two will remove the specific frequencies and adjust the value of the sun then the extracted features will be merged with the AI West corner uh in West Strong section",
        "on the encoder simulator and the watch holder are already existing methods on a small way and uh Nintendo and to remove the noisy part of the what is generated by the animal coda in order to reduce features",
        "uh we build a demo based on the recording of Elon Musk using safety position uh now what we are when we will play the original recording",
        "so I mean right now I think one of the most uh Soul destroying things is traffic um it affects people in every part of the world uh it it takes away so much of your life and your",
        "um now I will play the big voice",
        "I will give everyone 10 million dollars in the very United States I think it can follow me uh following me is not enough no way is bypass the state about the",
        "center",
        "here's the thing with our sales people you say we are able to perform a waste color attention and uh existing detectors accounted the speaker eventually features and the part of the picture later to determine always affect a lot we can work this patients but we always with special ways I'm able to distance myself and the offender targets for money from the Target or reaching dangerous statements",
        "is test and the celebrations",
        "the most important step is instruct speaker events for original ways of",
        "human use amplitude time strap and the frequency to describe or specifics to describe or specific Android file",
        "um with construct a function to set the aptitude to 0 and specific hamstring",
        "uh without it we silence all the voices below 4 kilohertz understand the speaker in reality features is exist in the west above four kilohertz we are going to strategies as part and the budget with the feet waste to fake it to make it feel real the part of our foreign",
        "we generate images of the wires before and after was processing we can generally say the difference between them uh final image of the words before processing let's say most of the high amplitudes of human waste are below three kilohertz after processing the apple juice below",
        "four Channel heads uh become more known",
        "so I'm going to play a recording which is is distracted from previous demo of Anna mask The Wonder of the recording may be over low",
        "foreign",
        "this",
        "is",
        "what happened when we remove what is above formulas well that's what happened when we move voice below 40 headstone on recordings and it's just sounds like hello is um well while it equals speaker evaluation so we can merge it with Statewide without detergent animate and making it feel real uh it's very easy to talk about like complex ways for speaker Humanity",
        "feature instructor and the Western magnitudes are now available to do to do this job",
        "uh these are the images of the current voice before and after months no there is a slight difference between them but you see there's no difference makes a web page was real",
        "um what is the steps above where it's successfully make an a mask really speak",
        "so I will give everyone 10 million dollars uh under the state of art it has Market will",
        "uh that's all for something where you say combining speaker Iran his features and the existing a advice with this orange dog recording so I mean right now I think one of the most uh Soul destroying things is traffic um it affects people in every part of the world uh it it takes away so much of your life and your and the way it starts is special",
        "and the way merge it with the turn the voice the output voice I will give everyone 10 million dollars bypass by twice 10 Hertz",
        "uh my school speaker will always pay evaluation part thank you",
        "the screenshot",
        "screen sharing we need creations",
        "okay okay okay",
        "ah hi guys uh I will introduced the evaluation part of this briefing uh this briefing is not just a proper so-called novel uh voice column attacker",
        "framework it's also used to rubbish existing existing detectors they propose four connections to evaluate this work uh",
        "rq1 other high creating detection approaches are pretty cool in reward environment rq2 uh the speaker in",
        "relative features really affect exciting approaches in a word the first two questions are about the effectiveness of uh the",
        "speaker in reality features of a purpose and the other two are for our safe our safety deep VC uh just to make clear the Based on data sets open source open source data sets these are other Works include the English version The Machine learning and none of them used I included in the publications of the executing directors",
        "first uh I will introduce the",
        "exciting director detectors are",
        "reselected the fourth DeForest last night is the latest specific based approach we use the the implementation",
        "open sourced by the orange and horses but you know too an angel to end the base approach as the Baseline for ASV Sports",
        "the second the third one is the first",
        "civil base approach on the top conference in fact I remember is in the cvpr",
        "we also we use the implementation open sources in blackhead USA to own one none",
        "the last one is uh it's called The Deep solar we know we cannot find the open source code of this and we tried our best to contact the authors but there's nothing response here",
        "the first one the first one is the real world fpr",
        "two in the real world environment we know the symbols are unbalanced uh mostly speech most of the symbols are the negatives negative",
        "therefore the human speeches are much",
        "more than a fixed beaches with the spr is very important for real world development the results of this experiment indicates none of the FPS are acceptable for real world we can see from the table",
        "when we change the data set doesn't change his business",
        "the FDR is extremely high",
        "it's more than 19 percentage is impossible for reward",
        "the second answer is accurate too",
        "uh we need this experiment to know do",
        "the do the features really really affect executing the detection approaches there",
        "are four there are two parts in this experiment uh we come back noise reduction and the focus frequency removal for targeted voices",
        "hey Siri HV will not affect whether it's a fake",
        "voice the detection results should not be changed if if these features do not",
        "affect the detection",
        "but uh in the result after the noising the detection results are changing and all exist existing approaches are significantly affected by background",
        "noise we can see",
        "most of the detectors are performance",
        "better perform better than before after",
        "the background noise removal it",
        "indicates that the noise may have speak voice detection bypassing the detection of exciting approaches",
        "next we need to we try to remove the silence silence the silence before and after the human voices just the",
        "[Music] um",
        "after the removal of the silences the detection results are also changed so there so they can we can see the silence part also affect the detectors",
        "uh the three all three detectors",
        "are infected by the by the silences and they perform better",
        "no matter if you perform better or worser or Worse we can see it will in fact it will affect the results of detection",
        "any indicate it indicated the speaker being relative features are indeed accounted by detection systems as a part of the free director to deter to determine whether a",
        "specific symbol is human speech or not so we can use we can bypass this detection system through the speaker interactive features therefore the answer to rq2 We Believe is yes we can use them as useful",
        "in this in the third evaluation we we",
        "use we use a self-builder safe safety PC",
        "to conduct this experiment",
        "Kansas can our system clone The Voice by passing existing the detection approaches is the key to this",
        "experiment in this experiment we've",
        "removed the symbols firstly reported as positive in the Baseline data set",
        "then for each human recording I'll be generated four new recordings as a fake recordings of course the first of all we are not I'm not kidding you the fake The Voice this voice is fake the second one the weather is very nice today it's the third one I have sinjios and there's a number of every Church which had is famous I am in China",
        "and can you please lend me some money uh often used for fragiles",
        "the final one you need to come to the office tomorrow just for social engineering of course",
        "the results shows that despicable recordings generated by hour from work have much higher negative reach it means the Sif if we see kind of effectively",
        "to save exiting approaches",
        "this recordings are more human than human",
        "we can see from the table that the differ has reached the more than 100 persons we are much better than the Baseline our our negative reach uh it's",
        "a Marshland is much more for much harder than the Baseline negative release therefore we believe the answer to question three is yes",
        "the first one we have to answer the question for can people understand the speeches generated by our framework a victim random or",
        "random sides then the single blend experiment to verify both of the recordings are clear and understandable",
        "in fact we use 300 recordings just you can see from my",
        "slides",
        "as a result is clear all of them are pretty good I think you",
        "have you guys have listened to the demo yeah the exposure the experimenting indicates that there is no almost no difference between the voice generated by ourselves and the human voices maybe",
        "believe people can understand how to put voices of safety policy very well therefore the answer to question four is yes",
        "so through the four Corrections uh we have verified the speaker inventing features",
        "um used for in the detection bypassing and",
        "here are some the takeaways from this at first the species generation and the detection uh we introduce how to generate it and anify the exiting detection approaches and their problems and the purpose a normal attack from work which can bypass existing factors the second the difficulties of Defending",
        "against these fake voices this type of framework the colonial voice can be more human than human and there's also the risk warning for the blue side exiting Solutions are far from useful do not put them into your production",
        "the fellow we also published some new data sets for future researches with users and open source some new data sets with high quality",
        "May deeply understand the importance of reproductive reproductibility and all",
        "code of these projects of this briefing are available on GitHub some code including our respiracy uh from the 14",
        "projects you can download them and build by yourself and test this and our data cells used in this project are also available to the public we have provided",
        "the downloads you can get the gas therapy because they are P from the Google Drive please know this is a sales office there'll be a failures about 7.8 gigabits it's it it's pretty big",
        "uh here is a dispersion for the data sets um we have if that is um into the four Corrections uh including the",
        "real validation data set from the for data set and the Chinese version",
        "data set from the magic data so if you may also give the prostate the pricing day the data sets uh for example the denoised and the silence removed and the",
        "the second as a third one uh we used",
        "a very provided voices generated by ourselves and the voices should test",
        "exiting detectors",
        "that's working for you can just listen to the symbols in this data sites uh therefore through this setup reviewer can reproduct reproduce my other",
        "research and reproduce our experiments",
        "sadly we cannot really detect the fake voice now but maybe we can do it in future in our latest research we have built of fast a fasting based approach",
        "with the speaker in relative features making the symbols come 100 percent past",
        "the existing detectors yes 100 just that they need to have some time about 10 minutes to generate the fuzzy the",
        "fighting symbols",
        "uh we will also publish the printed version very soon besides we hope that in future there will be more new no more detectors and we are also working on this to a function away to detect the field work field voice for production environment for the real work thank you all for listening to this we are here for questions now uh you all you can also send me an email to discuss with me on this project uh here is my",
        "email address",
        "[Music]",
        "[Music]"
    ],
    "T1YEKAUJVjE": [
        "[Music]",
        "good morning everybody it's it's really nice to see you all in person the first time in a while and welcome to harm reduction a framework for passionate or compassionate and effective security guidance",
        "so if you let me I want to start off with a story and if you grew up in the 80s or 90s like I did this might sound very familiar to you you might have experienced this when I was a freshman in high school me and my whole school were dragged into the auditorium and in the center was this smashed up wrecked car and we were told that our classmates had died from drinking and driving and this was a program that was designed to use fear to curb a behavior underage drinking",
        "and there are actually many programs like this uh that one was called every 15 minutes but there's also dare they're scared straight you may have experienced one of these when you were a kid and largely these programs are ineffective uh at the time for me I had many classmates in that room who swore off drinking I'm never gonna drink and of course they did of course they did and research has shown that these kind of programs that are aimed at curbing specific behaviors through fear can actually make the behaviors they're trying to curb worse not better",
        "so why am I telling you this why is my experience as a teenager relevant to you here at black hat",
        "imagine that was your security program uh fear is a common tactic in cyber security I mean you just walk the vendor Hall and you're going to see some sales pitches that are based on fear there are lots of risky behaviors that we as cyber Security Professionals are looking to curb and sometimes we scare people we tell them not to do things because look at this bad thing that could happen to you if you do it but what if we are actually making the problem worse not better",
        "so my goal today is very very simple I want to help you give better security guidance the best guidance you can possibly give and this applies to anyone whether you are giving guidance at a Fortune 100 to thousands of people or whether you're trying to teach your grandmother how to use the internet more safely",
        "so just a quick quick brief intro on me um my name is Kyle tobiner I'm the head of security at a small devops startup and this session here actually means quite a lot to me my first interaction with harm reduction happened in unfortunate circumstances I had a family member who really struggled with addiction and I was struggling to understand why these abstinence-based programs that are supposed to help we're not helping at all and that's when I learned about harm reduction and as I started to read more and discover this whole strategy that the medical community has for dealing with risky behaviors my mind was blown I was forever changed and harm reduction is invaded not only how I approach addiction behaviors but also how I approach cyber security it's part of how I operate now as a cyber security executive",
        "um also another reason I'm just really proud to be here I first tried to bring this talk to black hat in 2020 and as I was writing the proposal I was diagnosed with cancer and for whatever stupid reason I tried to submit during chemo and that was a terrible submission for for obvious reasons but I got really good feedback that said when you're healthy come back and so now I'm here I'm cancer free I've got my I've got my hair back I'm very proud thank you thank you",
        "and so I'm really excited to share with you what I love about harm reduction but suffice to say I've been thinking about this for a really long time",
        "so if you remember anything from this session today I want you to remember these three things number one",
        "except that risk-taking behaviors are here to stay number two prioritize the reduction of negative consequences",
        "and number three Embrace compassion when",
        "you're giving guidance this is the harm reduction framework I'm going to walk you through and I'm going to give you more details on each of these bullets as we go through the talk first I think it would make sense to review some really common security situations where you might be compelled to give security guidance",
        "so if you watch the Super Bowl you might recognize this coinbase ran an ad that was just a bouncing QR code and immediately you might have gone to Twitter or if you were on Twitter you might have seen hundreds of infosec professionals saying do not use a QR code like this it is unsafe uh and oftentimes our phishing guidance can kind of follow the same lines as this don't click the link it's unsafe",
        "we give a lot of guidance on passwords as well password complexity should you reuse them don't reuse them make a password a certain way we advise really high complexity in these scenarios but then when someone rightly struggles with this High complexity and needs something like this book some people might tend to mock them or say no you should never use a book like this the only way to use the password is the most insanely complicated way possible foreign ly I'm big into Tick Tock I love Tick Tock if you haven't seen my Tick Tock check it out but security people tell me all the time you should not use tick tock it is unsafe it is bad has anyone here ever told their family not to use tick tock I see I see a few hands guilty do they actually listen to you because I don't listen to any of those people who tell me that so that guidance is really really ineffective",
        "now all this guidance that I just described this is called use reduction you see a risky Behavior you tell someone not to do it your goal is to get them to not do it reduce the use and this seems really straightforward like if you see a bad thing don't do that bad thing what's the harm in giving that kind of guidance",
        "so first use reduction does nothing about the original incentives that drove someone to that behavior in the first place people have reasons for doing things even risky things they're forgetful so they buy a password book Tick Tock is really fun it helped me get through cancer so I didn't care about the risks",
        "use reduction also tends to add social stigma to risky behaviors there's a term and security that's really common name and shame I don't know if you've ever mentioned doing something name and shame in your security program but this can make people feel kind of less than their peers uh and it's not really a fun thing to be on the other end of that shaming and now use reduction may also be iatrogenic which is a medical term that I learned recently that I really love atrogenic means a treatment that",
        "actually induces harm sometimes more harm than the thing they're trying to treat so if your guidance is making a problem worse it's not very good guidance",
        "and now all these scenarios that I just described none of them sound very good which brings me to harm reduction",
        "so first let me just Define harm reduction if you've never heard of it harm reduction is a set of practical strategies and ideas aimed at reducing the negative consequences associated with various human behaviors that's kind of a dry explanation so what does that actually mean risky behaviors have negative outcomes",
        "harm reduction focuses on the outcomes not the initial Behavior",
        "and it might help to learn a little bit about the origins of harm reduction uh in the 80s intravenous drug use was spreading HIV all over the world and in Liverpool a team of healthcare professionals found a better way to tackle intravenous drug use and the spread of HIV they created something called a needle exchange where if you had used needles that you would use for intravenous drug use you brought them to the needle exchange and they gave you clean needles and now this might sound kind of radical to a lot of people but what they did is they prevented an HIV outbreak in Liverpool with this model it was really really profound at the time and now since then harm reduction has been used successfully with drug treatment alcohol treatment sex education and many many other programs",
        "so I want to show you how we can take lessons from health care and apply harm reduction to cyber security Healthcare has been gaining the benefits of harm reduction for 40 years and I think it's time for us to join in so jumping back to the framework except that risk-taking behaviors are here to stay I'm going to dig into this in more detail and explain what this means",
        "I mentioned before humans are motivated by incentives we take risks for reasons when you tell someone not to do something you actually don't do anything about the original incentive that drove them to the behavior in the first place and oftentimes for people the incentive outweighs the risks we tell people not to smoke but they enjoy smoking it makes them feel less stressed so they smoke",
        "because risk-taking behaviors are here to stay investing 100 in use reduction is really really inefficient use reduction has diminishing returns",
        "so when you focus on use reduction there are actually quite a few unintended consequences and let me talk a little bit about those unintended consequences has anybody here ever heard of the iron law of prohibition",
        "nobody oh one nice two okay so most of you haven't heard of this the iron law of prohibition says that when you outlaw something it will increase in potency and become harder to detect so in Prohibition in the U.S in the early 1900s we banned alcohol and suddenly alcohol became more potent and harder to detect it became easier to Smuggler since we started getting harder alcohols instead of beer right now the U.S is experiencing kind of a an epidemic because of this with synthetic fentanyl where synthetic fentanyl is very very difficult to tact extremely potent and it's killing a lot of people and this is seen in by the medical community as a response to the War on Drugs",
        "there's also something called the abstinence violation effect who knows about this I see a few a few more hands for this one so the abstinence violation effect happens when people are faced with impractical use reduction goals uh they can actually increase their risk taking because they feel like they can't meet your overly high expectations and they might even lose their motivation to even try so sometimes when you set these really tough abstinence goals for people they end up just experiencing more harm",
        "now all this is it backed by extensive medical research and I'm going to talk you through some of the medical research that I found really informative as I you know learned about harm reduction so turning my attention back to Prohibition prohibition saw an initial",
        "drop of 70 percent in alcohol consumption which sounds pretty good but over the life of prohibition that fell to 30 percent but the annual enforcement of prohibition started out costing 6 million and ended up costing 13 million so what you had is a program that was becoming more and more less effective over time and more and more expensive over time teenage pregnancy is an area where we do a lot of Youth reduction training title five of the Social Security Act of the United States guarantees 100 million dollars annually for abstinence-based pregnancy prevention programs and Congressional Studies have shown that those programs have not had any impact at all on delaying sex that is a lot of money wasted on being very ineffective",
        "War on Drugs we've spent a trillion dollars on it roughly since the 70s and obviously drugs have not been eradicated and people actually think we have increased the drug trade through the War on Drugs and finally dare is the drug abuse uh resistance education program research has shown that dare is entirely ineffective and actually increased harmful behaviors in children many times",
        "so what can this teach us for security",
        "100 use reduction does not work complete",
        "eradication of a risky Behavior should never be your goal you will waste your time and money pursuing The Impossible",
        "use reduction is relevant it's still a preferred outcome but it can't be your only treatment",
        "use reduction needs support from other managers like harm reduction and effective guidance will acknowledge that",
        "use reduction doesn't work for everyone",
        "once you acknowledge that it lets you help the people who would be left out of your use reduction guidance rather than ignore them",
        "so for better for worse QR codes and links that's how the internet works the provided that pragmatic approach is to accept that people will use these things and do something about the consequences not the behavior itself",
        "Tick Tock is also the number one app in the USA it is here to stay for a bit if you focus on the bad outcomes of tick tock and try to resolve those you're going to be more effective than trying to stop people from using something that clearly many people in this country want to use",
        "now here's a good example of why you can't eradicate risks from security research you see the research here it's from soups 2016. people use reuse passwords",
        "because they're too complex people reuse passwords that they have to frequently reuse security Security Professionals give a lot of password guidance but people make decisions because of the incentives so with passwords they're making decisions to reuse them because it saves them time it saves them mental energy so humans will always reuse passwords no matter how hard we try",
        "here's another interesting paper from not too long ago is called phishing and organizations finding from a large scale and long-term study and what they found was that some widely accepted forms of testing and training for phishing actually increased susceptibility to phishing so going back to that medical word I used iatrogenic we could be in some circumstances causing more harm with our treatments than causing good",
        "so hopefully I maybe convince you a little bit that risk-taking behaviors are here to stay and you might be asking well okay what do I do what do I do",
        "this brings me to part two of my harm reduction framework which is prioritize the reduction of negative consequences",
        "why why is this important so as I said before we know that eradication is not possible there are always people in a population who are going to make the risky choice",
        "but we're Security Professionals we understand risk there are more risky and",
        "less risky versions of high-risk behaviors which sounds a little weird but it's true risk exists on a spectrum",
        "now you may also hear this a lot sometimes people feel like if someone engages in a risky Behavior they deserve it but risk is incurred not only for an individual but oftentimes for a population so if you just leave people who perform these risky behaviors to their own devices because they deserve it you ignore the harms that the population around them experiences and you're missing a golden opportunity for reducing the risk to your organization",
        "so harm resection calls for pragmatism pragmatism is acknowledging that any step towards lower harm is better than nothing so that means you are accepting that a risky behavior is taking place you are looking at the harms that may be caused when people perform that risky behavior and you're trying to identify any ways you can to reduce those negative consequences no matter how small because in aggregate you will be doing more effective security guidance on the whole than you would be by just saying don't do that",
        "what I like about this approach is that no individual is left out of your harm mitigation it is inclusive",
        "so harm reduction focuses on feasible pragmatic effective guidance",
        "it is so so easy to Rattle on Impossible goals you set an okr you set a kpi you said you know we resolve this Behavior we reduce this Behavior by 30 percent next year it's 40 next year it's 50 next year it's 60 and you just continue down this path that's going to end an impossibility if that's all you're doing you're doing your your company the person you're serving the people you're trying to help a disservice pragmatism is how use reduction and harm reduction work together",
        "so you can teach use reduction but you need to understand its limits and have a plan to reduce the harm for non-compliance",
        "and again we have really extensive research in the medical community that supports everything that I'm saying one of my favorite case studies on harm reduction is on e-cigarettes comparing how e-cigarettes were treated in the United States versus how e-cigarettes were traded in the UK in the U.S we initially banned e-cigarettes the UK chose to regulate in the U.S we predictably had higher concentrations in our e-cigarettes we were marketing to miners there was a whole Black Market of e-cigarette products and we had more than 50 deaths related to Black Market e-cigarette products compare this to the UK where they took approach of Regulation and harm reduction e-cigarettes had lower concentration youth usage was four times lower than in the U.S they actually marketed uh e-cigarettes as smoking cessation products and saw reductions in cigarette smoking which was a greater harm than e-cigarette smoking and they had absolutely no deaths related to e-cigarettes",
        "another great uh place to do this kind of comparison is in sex education there's something called virginity pledges where people say I will not have sex until X period in time teens who pledge uh virginity rather than get traditional sex education are equally as likely to have sex as people who get traditional sex education but people who gets traditional sex education are more likely to use contraception are more likely to get tested for STDs and have STDs on average for less time",
        "the War on Drugs is another classic example of harm reduction the birthplace of harm reduction really um I mentioned before needle exchanges needle exchanges around the world have reduced HIV infections by suspected 70 percent and safe injection sites have decreased overdose deaths by 35 percent and access to naloxone which is a overdose inhibitor has reduced overdoses by 11 percent",
        "so what can we learn here for cyber security",
        "100 use reduction is not enough over and over in research we're seeing that only use reduction increases harm to individuals",
        "to be more effective you need to look at the harmful outcomes of the risky behaviors that you have in your environment and design treatments that mitigate those risks and harmful outcomes",
        "now this might sound very similar to defense in depth because it is no individual control is enough but you can layer controls and in the aggregate have a very successful security program by adopting harm reduction",
        "so let's take it back to my first example of the QR code now we're going to assume that people are going to click this so we have an opportunity to educate with our guidance rather than just tell people what not to do and if we have you know many people here probably work on some of the platforms that facilitate the web that we live on you have an opportunity to build warnings into the platform build features into the platform that make it safer for people that they're less likely to experience the harmful outcomes of their behavior",
        "Tick Tock as an example if you have people in your life that use tick tock rather than tell them not to use it you might suggest you could use it in a browser you could use it on a dedicated device that doesn't have any of your other personal information on it there are ways to make a risky Behavior less risky and over time those you know that kind of guidance will be more effective",
        "so this is a study that I really really love it's about sexting and now I have a I have a children there are you know my oldest is five so I'm not here yet but I have a lot of friends who have children who are at the age where this has become a problem and one of the things that people tend to do is just stick their head in the sand we're not going to talk about it don't ever do it don't ever do it but it's just not pragmatic Sexting in our culture is a normative Behavior adolescents are going to do this once you understand that they're going to use the do this you have an opportunity to provide them more effective guidance one of the pieces of guidance from this paper that I really like is don't include your face if you're going to do it take your face out of it so that that image cannot be used against you in the future that is a harm reduction approach that is extremely effective",
        "uh Eva galperin from the eff as is a big proponent of harm reduction she writes guidance that is harm reduction based so this here is an article she wrote about telegram basically saying if you are in Russia or the Ukraine you there may be circumstances where you need to use Telegram and it may not be safe for you so here are the ways that you can make telegram a little bit safer in circumstances where you need to use it and I think this approach is really really really important and I feel like articles like this are way more successful and pragmatic than just saying don't use Telegram",
        "so the goal here is remove don't do that from your vocabulary and instead try to say something like try not to do that but if you do then here are some ways to make that behavior more safe you have an opportunity to educate people with your expertise and you can use that opportunity to give them better guidance and over time when you build trust with people they're more likely to listen to your guidance",
        "part three of my harm reduction framework",
        "now this one might be a little head scratchy for people in the audience um Embrace compassion while providing guidance it's a little touchy-feely uh but it's actually a very very important part of harm reduction",
        "why",
        "high risk behaviors often include stigma stigma can break down willpower and increase susceptibility to harm",
        "so you as a cyber security professional should try and not add stigma to these high-risk behaviors instead by embracing empathy by embracing kindness encouraging positivity you can build a more positive relationship with the people you're trying to impact in harm reduction there's actually a different term for this it's called improved quality of life but it is health care so you know the circumstances are kind of different but this is a really great way of thinking about it is how can you when you're providing guidance people also make their lives better make their lives easier if you can't stop them support them",
        "compassion and empathy build trust",
        "people make better choices for themselves when they feel supported",
        "if they trust the person who is giving them guidance they're going to trust the guidance itself more so by building a compassionate trusted relationship with the people you're trying to guide your guidance will be more effective",
        "and this is another really important point that I discovered as I was doing this research I mean we know this intrinsically but caring for people is more fun than fighting with them it's better for you and it also makes you a better practitioner and it makes you less likely to burn out and you might be like oh that's I don't know that sounds like it's not the research in the medical community actually shows this",
        "so when it comes to shaming and stigmatizing this reduces your efficacy",
        "and it increases the harm that can be caused by high-risk behaviors when we look at the Scared Straight program uh this actually increased crime among participants by somewhere from five to Twenty Eight percent they've tried to measure so everything that they were trying to prevent these people from doing by adding stigma to these behaviors they broke down some of their defenses and made them more likely to contribute or perform the behaviors they were trying to prevent now hiv-related stigma has been a problem for many many years and it actually causes lower rates of testing lower rates of treatment engagement and lower rates of medication adherence so if you are a doctor and you embrace the stigma of HIV you are not an effective doctor",
        "obesity related stigma",
        "reduces motivation and engagement in treatment as well and increases weight and obesity in health related problems",
        "so all this is to say that stigma makes your guidance worse now the converse of this is that Compassionate Care improves trust and reduces harm so safe injection sites that I talked about earlier lower overdose mortality and an",
        "opportunity for the people who are coming to those safe injection sites to get cared for for the the for the doctors who are at those places to talk to the people make a human connection suggest to them other ways that they might seek treatment",
        "diabetes patients who have compassionate doctors showed increased adherence to",
        "guidance there were 40 percent less likely to have complications and they were 80 more likely to have optimal blood sugar control and that's just from liking your doctor just feeling like you have a good relationship with your doctor and this one really blows my mind patients who trust their Physicians show 40 less brain activity in their pain centers which just is incredible right like they they put these little you know Taps on people's heads induce pain in them made sure they had doctors they cared about doctors they didn't care about you will experience less pain if you care about the person who is giving you guidance so you as the person giving guidance should focus on building that trusted relationship because there are many factors that go into reducing the harm for the individual that you're guiding",
        "now compassion makes practitioners more",
        "effective as well non-adherence to health care costs uh the USA around 100 to 300 billion annually I can only imagine how much that is for cyber security it's probably a very high number compassionate communication between doctors and patients leads to 62 percent higher odds of patient adherence to treatment so if you are a better Communicator you are more compassionate you're going to save your security program money by making it more effective in a very cheap way",
        "and doctors who have poor patient relationships are 22 or 22x more likely",
        "to burn out and it's estimated that burnout reduces the effectiveness of doctors 33 globally so that's 33 of all doctors",
        "in the world are less effective because of burnout I'm guessing that we probably have a pretty similar number in cyber security as well",
        "so if your goal is effective guidance shame stigma and confrontation make you less effective",
        "if your goal is effective guidance compassion makes you more effective more people will listen to you more people will adhere to your guidance and there will be a lower cost to the guidance that you provide",
        "and when you stop fighting people all the time you like your job more you feel better and you burn out less",
        "so going back to some of our examples passwords suck everyone hates passwords the guidance is super complex you should find every way you can in your job to make your the people you're guiding make their lives easier this may even mean buying your grandparents a password book make their lives a little easier",
        "and maybe you can understand why I might enjoy Tick Tock and so if you're nice to me if you try and guide me away from Tick Tock in a nice way at some point if I become concerned I'm more likely to talk to you than anyone who was like don't use it it's terrible it's horrible why would you ever I just I'm not going to take guidance from people like that it's not effective",
        "so there are also a lot of other people in the cyber security Community who think this way around compassion as well uh my friend Asta has this great quote about hitching Your Wagon to developer productivity and she runs product security and Netflix and her whole whole Mantra is by making developers more effective more productive improving their quality of life it becomes easier to insert your security goals into the developer workflow her security guidance is more likely to be listened to adhered to and come at a lower cost because she develops strong relationships with her Developers",
        "and this was a talk from Regina at black hat in EU in 2021 her talk was about knowledge shaming making all of us less secure the idea here is when we castigate people when we shame them for making mistakes in their security program they're less likely to share the outcomes of what they've learned uh in their breach in their mistakes in you know their response efforts and that makes all of us less secure because we don't benefit from the knowledge they've gained having empathy for companies that have experienced breaches encouraging them to change having compassion will encourage them to share more of their lessons learned and thus make us all better",
        "so I'm going to run you through some of my concluding thoughts really quick",
        "harm reduction is effective in health care the research supports it and I think there is a vast territory in cyber security for us to explore and adopt harm reduction principles",
        "if you incorporate harm reduction principles into your guidance you could see improved efficacy reduce costs and maybe even feel a little less burnt out just a reminder we're leaving this room and we're not saying don't do that anymore we're going to say try not to do that but if you do here's some ways to be more safe",
        "finally coming back to my framework remember these three three things please accept that risk-taking behaviors are here to stay prioritize the reduction of negative consequences and embrace compassion while providing guidance",
        "and that's it thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "uKDS2t9_KsA": [
        "[Music]",
        "foreign",
        "welcome to my session back dooring and hijacking Azure ID accounts by abusing external identities I'm dirky monama and I'm very happy to to be here and see all of you in person um very short bit about me I'm dirkian I'm from the Netherlands this year I started my own company focusing on Azure ad and active directory consultancy and research I also like to write blogs about this topic and tools and if you want you can follow me on on Twitter at underscore dear Keon now before we dive into the details uh let's start with some definitions some important Concepts so this talk is about Azure active directory not related to on-prem active directory and Azure ID is really the central identity platform for everything in Azure be it Microsoft 365 as your resource manager or any third-party SAS servers you would like to connect to it and use it as your authentication so we're not talking about VMS or networks here we're really talking about the identity parts of azure and if you're looking at Azure um one of the important things to uh in security perspective is a tenant so a tenant is like a separate instance of azure ID for one organization um most organizations will have one primary tenant for example linked to their Microsoft 365 Services they may have multiple tenants but it's an important security boundary in Azure ad so you're not supposed to be able to access data in a different tenant because that doesn't belong to you now if we're talking about tenants we're also talking about collaboration here and in that sense there's also external identities so an external identity is really easy it's any identity that's not managed in your tenants so it can be an identity that's native to another tenant or even a different identity provider so it could be a personal Microsoft account a Google account or even just like a virtual account based on only an email address as we'll see later Chinese talk um we'll be talking about external collaboration so collaboration between two tenants and I've set up some well some blocks over here so usually we'll be talking about tenant a and tenant B and the Tenant on the left is the tenant a and that's kind of the the primary tenant that we're looking at so that's the tenant of the organization that we're either attacking or defending and tenant B may be an external party or a Tracker control tenant in the case that we're exploiting something so in terms of external collaboration there's a tenant there's the home tenant of the order organization and that account we want to give access to our tenant so in tenant a so to talk in terms of the other organization the user there is called the home tenants and the account is in the home tenants and for that the perspective from the perspective of 10 and B tenant a is called the resource tenants because it's an external tenant now if we have an external account a guest account is created in tenant a and that's somehow linked to the to the account in the home tenant so in tenant B so there's a link between those two and the accounts are are interconnected and we'll look at how that works a bit later on so in this setup I have two tenants the primary tenants the tenant a is the image.cloud which is where you usually do my research and for this I also set up a secondary tenant called cross tenant Dev and in this scenario we're all looking at default settings so there's no uh specific weakening of specific settings that would make certain attacks possible it is all possible by default and we're also not using any specific B2B trust that would Grant more privileges to a certain tenant so let's start having a look at how the invite flow looks from a GUI perspective so if we're in our tenant in the I'm in your Cloud tenant we can add a new user and say hey this is an external user and we want to invite them to our tenants so I send this invite to the invite me email address and that user will get an email so the email will contain an invite acceptance link and if they click on it they'll be prompted written with an acceptance screen and if they click accept then an account is created in the I'm in your Cloud tenant and they're signed in with their accounts but in a different tenant so at this point the invite me user it still exists in the cross tenant depth but it's accessing resources in the I'm in your Cloud tenant and if they look at the organization's view um you see that the account exists in two possible tenants and you can switch kind of switch between them so that's how it looks to an end user now um we want to start looking at how this looks under the hoods and we have several options for that so if we look at Azure ad kind of low level stuff or other information there's various options so the first one and the officially supported one is the Microsoft graph which is the official API for everything in Microsoft 365 and also including Azure ID there's a lot of things you can query from there but it doesn't always contain all the information um so there's also an API that's near more closer to the actual representation",
        "of azure ID and that's the Azure ID graph so it's kind of lower level it only covers Azure ad so no other services and it's sometimes also possible to use an official internal versions to gather a bit more information than is supported in production environments so this one is deprecated but it's as it's more interesting for us as researchers I usually prefer to use the Azure ID graph lastly there's of course also the portal in which we're also doing various demos and this may use the Microsoft graph or the Azure ad graph depending on which feature you're using and in the stock we'll use a mix of both the actual ID graph and the Microsoft graph and also use my tool rodrigon which is part of row tools and that's kind of a front end for the AED graph so it allows you to gather all the information offline and then view it from a GUI perspective so looking at some of the lower level things and I usually like to go to the audit log first because any action in Azure ad will create an audit log event and we can actually see what properties were changed so this this is the event for the invite Redemption so when the guest account the infight was redeemed and we see that some properties are updated and the most interesting one is probably the alternative security ID property so we see that some data was added here and if we look at the results from the Azure ID graph in row tools we also see that the alternative security IDs property is now populated and it says something about an identity provider a key and a",
        "type so there's probably here a link to the user account somewhere now I looked a bit at what that key could be because it's a64 encoded but you probably would have guessed from this um and actually if we decode that and we re-encode it into um into hex formats and we got kind of hexadecimal number and if we look at the tenants where the user resides that we invite it we see that this has the same ID so this property is called the netid and this is kind of what links the two accounts together so the guest account has a property in the alternative security IDs and that links back to the netid property of the account in the home tenant all right so this was how it looked in the in the GUI and what was the result so I wondered can we also invite people uh from a programmatic perspective I found some interesting um interesting documentation or characters on third-party projects uh which was from a long time ago and it basically says hey you can redeem invites uh using this tool and using some post requests and with Json payload I was like hey this sounds interesting especially because it's it it features the same same property so the outsec IDS which could be the alternative Securities property and some other properties such as a invite ticket which also seemed familiar to me so if we want to use this programmatically and we would use the net ID of the external user well that we can query so we can query that in the in the home tenant and we can query it using sad graph and we can also extract that from any access tokens that are issued to the user so if you have an access token for that user there will be a puid claim and that's to say netid that belongs to the account and we also need the infight tickets because that's like a kind of secret information that's linked to the invite that we can that we need but it turns out that we can actually just query these invites since it's a property of the user that is invited in the AED graph",
        "so then we end up with this simple post request we redeem the invite by the API and we can specify our own identity so the netid and also the email and using the invite tickets that we queried earlier now I started looking into this and I quickly ran into some issues so you would expect that you need some privileged role to modify accounts in this way but turns out that's not true so any user in the tenants could redeem an invite for any invited user which is a bit weird um also none of the information that is supplied in the post request is actually verified um so I could use any accepted as email I could pretend I'm someone working in a completely different organization and I also can link it to any external account in any directory because it's just based on that net ID parameter which is not checked and last but not least all the infight tickets so the secret kind of secret parts that's needed to redeem the invite can also be queried by any user in the tenant so if we have this nice request for the AED graph we apply a filter which says user State equals pending acceptance so those are all the users that have not read yet redeemed their invite and then we select the invite ticket from the AED graph so this nicely gives us the um the email address for the user and also the invite ticket that's needed to redeem this invite and we can of course also query the netid from the target account so in this case I'm querying it for the new low pref user in my other tenant and you see that the netid for that user is shown as output of the query of course we can convert this using a simple cyber Chef recipe back to the base64 representation and if we put it all in the post request you saw earlier using the invite ticket and the net ID we get a response and it says hey I this invite was accepted as guest at outside security.net which is not the email",
        "address of the legitimate account that we linked it to and we see the alternative security IDs back and it links to the net ID of the Rogue accounts and if you then switch to the tenant I hope this is a bit readable so on the right top you see this is the new low priv user Independence and on the bottom you say see that this is now linked to the guest at the outside security Delta now email from which we kind of stole the invite and also an interesting part is that there's no way to actually see this so if you're an Azure admin and someone hijacked your invites and linked it to some arbitrary accounts you could never find out because it's just been linked based on this binary property but you cannot see the net IDs in a different tenant and all it shows you here in the GUI is that that it's an external Azure ID um but not switch account is actually linked to start a short version basically every user in your tenants could query for inviting but not redeemed or just if you repeat that often enough just be quicker than the user is actually inside it and they could redeem the invite without any validation on the information that was provided and it was also no way for uh Azure ID administrators to actually find out which account it was linked to now some impact scenarios if you're not familiar with external accounts um they're they are often used for external suppliers for example which need some kind of access be it in Azure 80 itself or to manage Azure subscriptions or resources but it could also be that an account is invited and immediately granted a privileged role in Azure ID because there's a UI when you invite it it says hey which role Studios account get so if I invite someone from one supplier and I give their guest account Globe admin privileges for example someone could immediately hijack that invite and be Global admin in my tenant there's also bypasses the allow list of external collaboration domains because as we saw before the domain is not actually verified so you could send an invite to an allowed domain and then link it to an account in a completely different tenant and lastly of course because any user could do this if an account is compromised an attacker could hijack a different guest accounts and if their account is then discovered and remediated they still have access to their guest accounts and any resource that has been granted access to so how could you figure this out um so if you're an Azure admin and you want to know hey this has happened to me um there are some traces of this so if you look at the audit log on the left side we'll see the the regular invite flow and then the invite is Redeemed by an application it's called the Microsoft invitation acceptance portal and that's done as as an application using a certain ID on the right side we see the Rogue Redemption and in this case the invite is Redeemed by a user namely the user that authenticated and performs the the post request to redeem the invite file the API now you can of course try the query for this and I wrote a kql query that you can use to hunt for this in your tenants and if you find any results I hope you don't but if you find any you may have an invite that was stolen by someone else",
        "all right so so far we looked at the GUI flow and we also looked at how guest accounts are represented in the Azure ID graph now that leaves the Microsoft graph so external identities have an interesting property in a Microsoft graph which is called the identities property",
        "um it's a bit less there's a little bit less information in there so we don't see the binary good for example um but the interesting part about this versus the actual ad graph is that the Microsoft graph actually allows you to modify these identities property so in the Azure ID graph you can't modify the alt security identity IDs property not even as Global admin but in a Microsoft graph you can actually do this so I was wondering okay suppose we can modify a user's identities with the correct privileges now what could we do with it like what values could we input there that would would give us something interesting so I looked at what identity providers there are Now by default you have other Azure",
        "active directories which are a valid identity provider and you also have Microsoft accounts you could add like a Google or Facebook or another IDP here but that's not default but one that stood out for me is the email one-time passcode and that's kind of a new one and it's an interesting one because it allows you to send an invite to a user that doesn't have an Azure ID account or a Microsoft account and it allows to them to sign in solely based on their email address so there's no real account here it's kind of a weird virtual account that may or may not exist in some tenant that's managed by Microsoft but it's it's a very simple way of representing an identity",
        "um so here we look at the Microsoft graph for a user that I invited that doesn't have any accounts so it will sign in with the email we'll call the email OTP and we see that in this case the identity simply says sign-in type Federated the issuer is Mill which is the issuer type for email OTP and the issuer assigned ID is simply the email address if we look at the Azure ID graph we see something very similar identity provider is Mill and the key simply is the email address but then base64 encoded",
        "now I was looking at okay who can modify these identities attributes because if we can modify this we may be able to link accounts to some other external identity so it turns out of course Globe admins can do this user administrators can do this and apps with the correct privileges can do it and but the surprising one is that users can modify their own identities and I know what is needed I have a feeling it's for some b2c scenarios but I figured this out because I was looking at the Azure 80 user's role definition and if you look at this it has all the things that the user can do based on the condition that the resource itself and here it says well it can update the identities property but only for their own accounts so let's give some interesting attack scenarios so if we have temporary access",
        "to an account or we have a scope limited access token with the correct delegated permissions we could backdoor these accounts by modifying the identities parameter and just link it to some external accounts that we control on as an attacker some of these scenarios would be if you have temporary account access for example you have a malware attack and yours temporary in someone's laptop you could link the account to your own account another scenario is if you for example use device code fishing you'll get some refresh and access tokens but you can't just do anything with the accounts but you could convert that by updating the identity's property lastly if you somehow take over an application with the correct privileges a user signing into you could also obtain these access tokens that have enough privileges to modify these attributes so let's look at us how this attack works so first we look at the original ones so we're looking at the new low profuser and we see that the identities are only the um the normal one so it signs in with the user principal name um and that's just native in our tenants so let's create um let's backdoor these identities so I've invited an OTP account and this one is the mill OTP in outside the select.def and you see that this account is is signed into the cross tenant death tenant so I invited this account in my attacker tenant and I'm going to link it to the tenant of the organization that we're attacking so I patched this using the account access and I say hey now my sign-in type is Federated from this mail address and the email address Ismail OTP if we look at the same identity again we see that there's now two identities and so first is the user principal name but the second identity is that email OTP information that we just linked to now if I go to that email OTP account I can simply switch tenants so I can say I'm already signed in here I'm switching to I'm your Cloud tenant and it says hey I found an identity you can use here which is called the mill OTP user and if you click on that you notice that you sign in as the new low pref user using the email address that we control so we just re-linked this new low breath account to an email address on the control of the attacker and we're now signed in into the I'm in your Cloud tenant so this does require some pre-existing access but it's really easy to modify",
        "this and Link it to an external account and it's also very easy to switch it back so we can do the same post requests but with just with an empty parameter and that will switch back the account to only the normal sign-in name and we can even use this old access token and now the account is completely normal again",
        "all right so users can do this by themselves but there are some more interesting scenarios so as an extra bonus um we get this privilege escalation because user administrators by definition cannot reset password for example from higher privileged accounts so user administrator can't reset the password of a global administrator because that would be an elevation of privilege but they can modify the identity attributes of the global admin or basically any other user and this way they could take over the accounts of a higher privileged user in the tenants there's also even an easier way to do this so if you're a user administrator like I said you cannot reset the password but this is very nice button which says convert account to B2B account and that you can do so you can even do this from the GUI you can simply convert a global admin to a B2B account using a B2B email address that you control and then you're the global admin yourself",
        "so just how that works um like I said this is completely in the GUI so we have this Global admin account we modified the email address to point to the Rogue at crossten and Dev and then we invite them to B2B so we convert this account to an external account and then we sign in with the external accounts and we see that there's only a global administrator",
        "so the short version user administrator can convert any account to B2B accounts including higher privileged accounts you can do this via the query or with two simple post requests to the Microsoft graph and of course if we combine this with what we saw earlier you don't even need to redeem the invite with the real account you could just use those the um the API to redeem the invite and Link it to any external account and it will be completely invisible so there's a downside to this it doesn't work for accounts with the mailbox because then Azure ID refuses to update the email address but then you could switch back to modifying the identities attributes and you could still link an account to an email OTP user now there's a caveat with this so if you convert an account or you batch their identities you're only changing the primary authentication so you could sign in with an email address instead of with the password but if there's MFA configured and required for the accounts this would still kick in so NFA would save the day in this case or at least you'd think so um because I also had a look at how guest tenants and NFA work so if we have this",
        "um if we have to set up with the victim account which is MFA configured an attacker account which is MFA configured then if we link those so if we hijack the accounts by modifying the identities or we convert to B2B account if we sign in the NFA methods we'll still be the ones of the victim account so the original one so just signing in with our own MFA methods in our own tenants wouldn't give us fa access to the to the victim tenants let's there are some observations that I had with MFA so of course if you perform MFA in a sign-in session you don't have to do that like with every app you sign in because then you would be entering MFA information continuously so this is just there is some caching of when you did MFA in a login session and it also holds for activity in tenants where we're guests so if I have my primary accounts I've signed into another tenant and I have my own MFA methods there I don't need to redo this whole on facing all the time so this suggests that the MFA information is cached somewhere in the session and it keeps dragged of which tenants we actually did MFA in or not",
        "um So based on these assumptions I tried something new and I'm calling this account rebinding because it sounds cool",
        "um basically we have the attacker account which has the own MFA methods and you should you should always remember that if we're doing cross tenant things it's always the source identity that we're looking at so in this case this session is from the attacker and it doesn't really matter which account that's linked to because it's always the attacker account which may be performing authentication in understandings but That Remains the Same Source identity so what we could do what it did is I first invite the attacker to the tenant legitimately so the attacker now has a guest account and with that they can configure their own MFA methods now if we delete this account so the guest account is gone and the attacker accounts still exists but it doesn't have access in the victim tenant anymore but if you keep the same sign in session and you link the victim account to the attacker account guess what happens it caches the MFA information so if we link this account the Decker could still have the MFA information in the sign in session and you can actually authenticate SD victim accounts and Azure ID will think oh you already did MFA but it doesn't look at which account you did multi-factor authentication for so if you have a login session you could simply do MFA in a completely different tenant so there's quite some things we can do with this using all the techniques that we had but I created a nice little video and in this case I'm doing an attack using a user administrator and there's also the other scenarios that I talked about but the nice thing about this is that all this this whole attack can be done only by clicking in the GUI so you don't need any any graph calls or something so let's go from the start so we're first attacking the attacker accounts and that's one is basically it's on the right so we invite this Rogue account and we",
        "created a guest account for it and it will get an email saying hey you're invited to this tenant so now there's a guest account in the image cloud and we accept this invitation so we're linking that guest account to our identity in the attacker tenant so we have to approve it it takes a little while to convert the account and then we're we have a guest account because MFA is required it will ask us to register NFA information for our newly created guest accounts so in this case using the Microsoft authenticator app and using virtual one because I want to use my phone all the time but basically we're now registering MFA information for this account all right so that's done so now we're signed in using our attacker account as a guest in the victim tenant and we can actually see this and now what we do is we can actually leave the the guest tenant again and that will delete our guest accounts so you can do this as a guest yourself you could just say leave and the guest account will be deleted but we're still signed into it so what we do here is now we convert our victim accounts to B2B accounts we're basically linking it to the Rogue user so I'm updating the email address first and then using the convert to beat beat feature and this will convert the account and Link it to the email address of the attacker this might fail sometimes because it's still updating in the back end and now it's converted and we'll get an email so now we accept the invite for the converted account we click accept again and it will take a while to actually link our accounts and then it signs Us in so we didn't see any MFA prompt um but we're still signed in and we're now the the other user that we it was a victim user and we can see this in the Azure portal so in this case I'm still signed in in the attacker tenant but you can switch tenants and here it still only shows the attacker tenant but once we refresh it then we'll actually see that the victim tenant is now also possible and we can just switch to there so now we're signed in in the victim tenant and we can go to the our account in Azure active directory to see that it's actually the same user so on the left you see the user ID way to do it and on the right you see that we're signed into the exact same user so we now kind of took over the account without needing to do MFA and Azure ID still thinks we did in the Theo authentication so if we go to the sign in logs we see that we authenticate it",
        "and the account name changed of course because we accepted the invite but you see that the requirement here was multi-factor authentication but you also see that the NFA requirement was already satisfied because our token contained the MFA claim that Azure ad customers when we did the Authentication so this way you could bypass MFA as long as you change the account identities and you can do it all just by clicking in the GUI and having a sign in session open now of course after we took over this account we signed in with MFA so we can add our own MFA method to the account to make the bypass permanent and now if your user administrator you can change the password of the account and you have the MFA information needed that's required to sign in",
        "so short version of this whole attack so the MFA information seemed cached in the sign-in session based on your identity in your home tenant plus the combination of the target tenant there",
        "was no link to the actual account you did mfa4 it only looked at a tenant level so if you first created a new account you registered your own MFA information and you keep signing in into the same session um you could delete the guest account by leaving the organization but it still would cash in your session that you were signed in using MFA in that tenant so if you re-link the account and you can do that either by converting it to a B2B account as we saw in the in the video or you can do it via email OTP by converting the by patching the identities attribute you can just rebind those accounts and you can bypass MFA and Azure ID won't prompt you for it anymore because you already did it for your adjustment account",
        "um so some attack scenarios here if you had limited account access such as an access token with the right scope you could convert it into full persistent access including MFA where it was needed if you only had access to the account password you may also be able to bypass NFA and conditional access if it's not",
        "required for all applications so let's not put something I see very often is that people require MFA for example of 365 but you could still sign into the Azure ID Powershell module using only a password and if you then have the token for that you could patch the identities attributes bypass the MFA register MFA information and you could sign into any other application you want and of course as a user administrator account you could elevate your privileges to Global admin including bypassing their MFA and you put bypass MFA for any other use in the tenant as well now I hear some of you thinking I'm not actually using external identities no one can invite guests so am I safe here well no um so there's some alternatives to this and instead of inviting a guest account you could also temporarily link your own account to some external account first",
        "so let's say you have your own account such as user administrator you link that to an email OTP account you create it in a different tenant and so that the user is already invited so you don't need to invite it yourself um that you register the MFA information then you unlink it then you link it to a different account and then you have bypass the MFA without needing the guest account user so this removes the requirement to actually invite an external user and this basically bypasses all these security controls that there are for external collaboration so I try to put everything to the most Quick Settings I like blocking users from sending invites even explicitly blocking external accounts disabling the email OTP methods didn't really matter the attack was still possible because we were already signed in with email OTP and at the point we did the accounts which actually ad didn't check anymore whether email OTP was even enabled in the tenants",
        "um so of course I reported these things to Microsoft and our report is this four separate issues in March this year so the guest invite Redemption without validation was tricked pretty fast within a few weeks the elevation from usual admin to Globe admin by converting their account to B2B was fixed in April and the MFA bypass via account rebinding was a fixed yesterday so quite last",
        "minute",
        "and the vectoring account identities is still something they're working on so I know they they're paying attention to this and they are working on on the fix but at least you can still so you can still modify these identities and Link it to an email OTP account but you can no longer bypass bypass MFA using using",
        "this technique",
        "um so some recommendations to ants um if you're a Defender just remove those accounts which haven't redeemed their invites they're kind of laying around there and if someone finds a bypass again um they could take over those accounts and most tenants I analyzed that did have some external users they were always users laying around for years that just didn't redeem their invites you can lock down guest invite rights and guest access settings in Azure ID so certainly don't give your guest users permissions that your normal users have because then they can well enumerate everything in the tenant and view all kind of information and you typically don't want your users to just invite whoever they want and give them access to to your ayur edit tenants because that enables a lot more scenarios of course if you're using this feature I'd recommend you lock down which tenants can actually be used in which domains invites can be sent to and there are some new features that can that allow you to restrict which apps guests can access and all that other things of course you might want to look in your audit logs if anyone did do this so you can use the query that I posted on my my gist on my GitHub that has a kql query for the invite hijack and of course you can also search for users modifying their own identities property because that's also logged in the audit logs and lastly enforce MFA across all apps instead of selectively because if there's this scenario that you could bypass MFA using some certain token that you can obtain without anything that would leave a hole in in your defenses so thank you for your attention if",
        "there's any questions be happy to take them and otherwise you can always send me a DM on Twitter or send me an email with your questions",
        "[Music]",
        "[Music]"
    ],
    "tXEMiOMGk0M": [
        "[Music]",
        "now it is my pleasure to Welcome to the stage Ron Markovich",
        "and uh Gabby nicobilly",
        "thank you",
        "hi everybody um have you ever tried to execute and analyze the malware that expects to receive commands from a remote and commandment control center only to find out that the This Server is now unavailable unavailable and you don't",
        "have fast traffic captures of that malware so you don't really know the correct commands to fit to that malware in order in order to get it to start doing some interesting stuff well at that point you pretty much have only one option which is to statically reverse",
        "engineer the malware and very manually and this is the task that takes a a lot",
        "of time and effort to figure out exactly what is the communication protocol of the malware today we offer to you Pizza a tool that will help you automatically extract the communication protocol of a malware or any other executable directly from its a binary",
        "so first thing first",
        "um let's do some introductions run",
        "all right so hello everybody my name is Van Markovich I'm a master's student from the technion and all of this research is a part of my thesis",
        "and I'm gabina kibley I'm a senior architecture at the technion in Ron's supervisor I'm also a distinguished researcher at the radwar formerly I was the CTO of a national research lab at Rafael and visiting scholar at Stanford University and this research will not have been possible without our third partner professor of Greenberg from the technion",
        "okay so our agenda for today first we're",
        "going to talk about what is exactly protocol reverse engineering and why it is an important task then we'll talk about what is exactly pizza and show you some demo examples and finally we will talk about how busy does its magic okay so let's start with by motivation and the background",
        "what is exactly protocol reverse engineering so let's take for example uh an English conversation and let's say that you would like to learn the rules of the conversation in English and now let's assume that you don't know a word in English and you don't really want to learn English from scratch you just want to learn to recite the sentences at the correct times in order to be able to Converse in English for example you just want to learn that it is appropriate to start an English conversation with a high or a low and if someone asks you how are you one possible answer would be I'm fine and for example Tuesday",
        "okay so uh protocol reverse engineering is exactly just that learning the rules of the conversation but we learn the rules of the conversation not between two humans but between two programs and the rules of the conversation between two programs simply is called a protocol and this is an example of a protocol uh called the SMS represents States and its states represents the messages the the",
        "program expects through a receive or send at that at that particular state for example here is a partial view of the SFTP State machine on the server side and here we can learn that the server at the initial State expects to receive an allow message this is the alcohol receive and then in the next step if it should send the 250 okay message and then on the third state should they receive either one of the two messages either made from or reset and based on the actual messages they will it will receive it will transition then to the next state another important piece of information is the message formats uh we for example we would like to know that they received two messages actually all messages that we begin with the the character received and then white space and then two and then column and so on and so forth so when we say protocol reverse engineering of an",
        "executable we actually mean learning the",
        "protocol State machine and the protocols message formats as implemented by that executable okay so now that we understand what is exactly protocol reverse engineering let's talk about the why do we want to do this first motivation is finding bugs not all programs are created perfectly and they are in implementation bugs in the protocol you may implement the protocol incorrectly let's see an example let's say there is a client that speaks to the server and sends it some data another server we should we will need to stop accepting data after the the finished message and let's say there is a bug in the server and it will it will accept data after the finished message so perhaps an attacker May exploit this bug so basically we would like to uncover such bugs now one option would be simply do testing which is fine but testing usually will not cover each and every state of the protocol and all the kernel cases so another option might be protocol reverse engineering which means extracting the protocol State machine from the program and then comparing it to the intended protocol State machine and see if there are any discrepancies yet another motivation is finding back doors let's take an example that an attacker implanted the vector in your software and now using a specially crafted command it will gain access to a privileged file okay so obviously",
        "testing will not uncover this bug because simply the the special command is not part of the protocol right so an option to uncover this Vector is do protocol reverse engineering extract the community the protocol State machine from the program and then see if there are any odd commands that should not be there",
        "and it's another motivation which I already mentioned is analyzing a malware let's say you have a malware and you want to feed it with the correct tense at the correct commands in order to get it to do something interesting and stop playing with it and analyzing it so you would need to do you would need to know the the commands it is expecting and for that you might need to do a protocol reverse engineering and to understand which commands the malware",
        "expects",
        "so hopefully you've Now understand the",
        "protocol reverse engineering is also an important and important task but unfortunately for protocol reverse engineering is also a hard task because it is very manual process it's simply opening a reverse engineering program",
        "like Ida and start analyzing the actual binary and finding the exact communication protocol bit by bit it's",
        "very hard and time consuming and it may take days or even weeks depending on the complexity of the executable or the protocols actually in my last position at the national Resource Center I've seen many researchers struggle with this with this exact same problem and it it was very frustrating frustrating and it took them a lot of time to do their job and this is actually what initially inspired us to take on This research and our goal is very simple given an executable we would like to somehow magically as and it is automatically as possible extract the state machine protocol and the commands and the message formats from the executable",
        "simple enough and we also had some assumptions or known assumptions in order to do their researches practical as possible",
        "first up is that we did not assume we have past traffic captures meaning we",
        "don't even know the legitimate legitimate messages of the protocol this is like learning rules of the English conversation without ever hearing a word in English",
        "uh another non-assumption is that we do not assume we have an active protocol peer meaning there is a remote executable that will talk to our executable for example in the malware case there there the CNC server is down and it will not no longer communicate with uh the malware so in our analogy we",
        "only have one English speaker and we assume we do not have the source code for the executable we can only rely on the binary code and if you like in the uh in our analogy we would like to learn the rules of the English conversation by simply peering into the brain of the English speaker",
        "um so um now that you understand what our research is all about let's see the bottom line and see the tool in action run",
        "all right so uh thank you Gabby now don't you know what protocol reverse engineering is uh let's discuss the development of our tool and see it in action oops",
        "so when we first began this research we created a very simple toy example this",
        "example is basically a client that implements a very simple protocol in this protocol the client simply sends a login message to the server and then according to the response from the server which is either okay1 or K2 response with either logout 1 or logout 2. um we we began reverse engineering this client manually and then step by step we automated the process and this is an email from the very first time that our method could reverse engineer the protocol of uh of this client",
        "um but then we wanted to get to some more realistic stuff so we worked with the an SMTP client that we found online and analyzed its protocol as well and during that process we also developed several optimizations in order to improve the performances of our method and uh yeah this is an email from The Virtuous time that our method could reverse engineer the state machine of the SMTP client and our method could also reverse engineer the message formats for this client and all of this information is extracted only from the binary of of data CTP client",
        "um yeah but then kovid came and is there anyone in the audience who does not know what Zoom is today well back then uh it was not that uh familiar",
        "um so yeah then resume this research and",
        "wanted to get uh to get with to work with some more realistic stuff and we looked for a rat or malware that we can work with rat is a remote Administration tool it is uh it is installed by an attacker and then it allows him to remotely control the machine and ghost tract is an example for such rat it is a very famous threat and uh we",
        "we applied the we applied our method on this rat so let's see our tool in action",
        "well um first we identify manually in either the functions that send and receive messages of that binary we later discuss why this",
        "is important and then we we created a",
        "python snippet that uses our tool provides the information on the binary as well as the procedures that send and receive messages and our tool is composed with is composed of a server that interacts directly with a binary and the client that actually learns the state machine of its protocol so when we start both the clients in the server the learning uh the reverse engineering of the protocol occurs and as you can see the state machine is being learned step by step as well as the message types of the protocol as you can see to the right now this is a time lapse but the overall process process took two minutes and this work could take hours even days and",
        "our tool do do it by two minutes",
        "so",
        "so it will finish in a second yeah so here it is this is the final State machine of the ghost Rod protocol",
        "and again this process that could take hours even days uh took the the tool to",
        "perform two minutes so um now once we now work for the color versus engineering is and once we saw the tool in action I I invited Gabby to discuss the",
        "internals of our tool okay",
        "great okay I hope you are impressed right two minutes right",
        "of two weeks okay so let's see how the magic is done okay",
        "so our tool actually is composed of two uh components as Ron mentioned the client and the server or two or a question component and an answering component the client is the question component this is the actual component the learn the turns the the state machine it runs it but simply asking questions it is based on an algorithm algorithm called the estar algorithm which will I will describe there shortly and the the part that answers them is the answering the component which is",
        "based on the symbolic execution this is the server okay let's talk about the the question component there's the algorithm this is a an automated learning algorithm Loosely speaking is just an algorithm that turns State machines okay it is well established a protocol algorithm that was a",
        "presented in 1997 By Dana glueing and",
        "its aim is to identify an unknown regular set from examples of members and non-members in our case in an unregular set it's simply the set of all messages exchanges as permitted by the protocol okay which is essentially described using a protocols the protocol State machine and it runs this state Machine by simply finding examples of members",
        "and non-members of this set or in other words it simply asks questions of this type um is a given message exchange valued by the protocol yes algorithm simply asked over and over again such questions and it assumes there is someone or something that can answer such such a question and based on the the answer to these questions it will then construct more questions of this type and then it will learn piece by piece the the protocol State machine",
        "algorithm will now go into the details of it but it is very uh clever one and very efficient so it doesn't need to ask about each and every or every message Exchange in order to get the complete",
        "view of the of the state machine the number of questions of uh as it is it called as it is as they are called membership queries the number of membership queries that it will ask is simply polynomial in the in the number of states of the protocol so for example if you go back to the English conversation if the air star algorithm now like to learn protocol State machine of the English conversation the rules of the conversation it would simply ask questions of this type is uh is this",
        "conversation valid is saying hi and then receiving a low and then saying how are you and I'm fine is this a valid English conversation and again it assumed that something or someone can answer this question and the answer is it should be a yes and another question might be is this conversation valid hi hello how are you Tuesday and of course should be a no",
        "another example here is a a protocol where the client sends a in any message the server sends a startup message and then the server receives data and finish and let's say they start algorithm and I would like to uh learn the protocol State machine of that of that protocol so it would simply ask questions of of this type for example is it okay for the server to receive an init message and then send a stop message is it okay for the server to receive two init messages back to back okay this type of questions and based on those the answers to those questions it will then piece by piece gather the the protocol State machine",
        "but there is a problem here uh as I explained it so far have you noticed it um our assumption or basic assumption is that we do not know the legitimate messages of the of the protocol so how can the extra algorithm even ask about sequences of those of those messages if he doesn't really know the actual messages this is the problem so let's say let's say for the sake of the exposition of the algorithm let's say assume that we do know the uh the messages of the protocol and then we will relax the this assumption and show you how the real algorithm works",
        "so to sum up the uh the question part of the the algorithm uh the question part simply asks questions of the of this type is is a given sequence of message types valid for the protocol for the protocol a lot and it expects to receive either yes or no and the part that answers those questions is based on symbolic executions this is the only part in our product in our tool that interacts with the actual binary executable and generally speaking and",
        "the answering component of the symbolic",
        "execution simply tries to find",
        "um valid execution path in the",
        "executable that are that correspond to the to the message to the sequence of messages that was asked by the question component if there are valid execution",
        "path that correspond to the sequence of messages at hand then the answer should be yes otherwise it should be no now a run will deep dive into the answering component a symbolic execution",
        "all right so thank you Gabby again so let's discuss what symbolic execution is symbolic execution is a static analysis method it is a very powerful one but in our case it allows us to",
        "sorry yeah so symbolic execution in our case allows us to explore the executions of the binary that follow a given set of constraints",
        "um now when we talk about the constraints we mean constraints on the program inputs let's say for example here the program inputs are inserted",
        "into variables X and Y the inputs are A and B so if we want to find all executions that match the constraint that a is greater than 3 then the symbolic execution engine will find these two executions but if we also add a constraint that b equals to",
        "2789 then we are left only with this one execution",
        "um so how do we use the symbolic execution to actually check if a sequence of message types is valid for the protocol we analyze so uh let's see how we do that",
        "um assume we are given the sequence of any starting data and then the the",
        "program receives a message from the network then we add a constraint that this message is is of the type in it this way the symbolic execution will discard execution paths that do not follow this constraint and we'll only consider now on the true branch of the of the program then when the program sends a start message and we constraint",
        "the message to be start the symbolic",
        "execution says that the programming did sends a start message and resumes this execution path then when receive is called for another another time we",
        "constrained it to the third message which is receiving of data making the symbolic execution follow only X execution path where where the received",
        "message is actually data and this way we",
        "are left with execution paths that follows the constraints of the sequence of message types and we can say that that the sequence is valid for the protocol now let's see an example for what happens if the sequence is not valid in the protocol when the first message when we are asked about the sequence of receiving data initially and the symbolic execution inserts this constraint of the received message and",
        "then the true branch is discarded leaving us with an execution that errors this way we know that the execution there are no valid executions of the binary that follow the sequence of messages and we concluded the sequence is not valid",
        "so to formalize this assume we are given a sequence of message types then whenever a send or receive occurs in the program then we add the constraint to match this message to match the appropriate message type and therefore we uh we can actually",
        "illustrate this as a trimmed tree of all",
        "the executions when we're finally we're",
        "left only with executions that follow this sequence if in the end of this process we are left with at least one execution that is valid that follows the constraints then we can say that the sequence is valid for the protocol",
        "but remember we said that we constrained messages to the sequence we are given how do we do that well in order to do that we need to intercept the symbolic execution whenever send or receive procedures of the binary are called and therefore we require the use of our method to manually identify the procedures that actually send or receive messages and in this example uh this is",
        "the the SMTP example and it is the the",
        "SMTP right function that writes a line",
        "to the socket or the SMTP get line that reads the line from the socket and receives messages so um yeah this is a requirement from the user of our method but there is a problem still remember we",
        "said that we do not know in advance the message types of the protocol so we need to discover them how do we do that well we extend the symbolic execution part of our method and say that whenever a sequence is valid for the protocol it will also return a set of message types that can follow the sequence given the elster algorithm is also extended in order to to gather the set of message types step by step so the set of message types is actually learned on the Fly",
        "let's see that again in in an example",
        "so assume that the symbolic execution validated the sequence of receiving unit initially so we are left only with the true Branch here and then we wait to see what message types can follow the",
        "sequence so the symbolic the the program then",
        "sends a data message and there is a",
        "feature of the symbolic execution engine that allows us to get examples for values uh for for that message so what we do is we get examples for the message that can that is sent after the after",
        "the sequence and we'll later discuss",
        "what we do with those examples but let's see another example so if we are given the sequence of init and start and we want to to know what message types can follow this sequence well again we we are left with the with the execution constraint to this sequence and wait for another send or receive to happen in the program well the next thing that happens is that the program receives a message but we can't do what we just did with this with sending message said because a received message is symbolic value it is not known and the we need to to do something else here well what we do is we let the message to be passed uh to be passed by the program once the message is passed as you can see here in this example the for the program checks for some characteristics of the of the message and then the symbolic execution knows uh",
        "well if we are in the true branch of this condition the message must begin with uh with an Adder that identifies it as a data message so we actually wait for the message to be passed and only then we get examples from the symbolic execution engine for them for the possible values of the of the received message so it is not it is not entirely unknown",
        "but remember that we are we we get a set of examples for for that for uh for the messages uh we need to uh come up with the message type from those examples uh so there are many ways that this can be done but uh a simple approach that worked for us is to Simply find the common features to all the messages meaning the common bytes the bytes that are the same value for all the messages in the set of examples and um",
        "and this way we we use the common features of the messages to identify the message types next um let's see an example for that so assume we're given this set of examples and we see that the the common features",
        "for all of these messages is the format of the receipt to message which is received white space to colon and so on so forth so actually we will characterize the message type of receipt tool with the with this with this format",
        "so to title together we just discussed that our algorithm uses l-star in order",
        "to ask if sequences of message types are valid in the protocol and the symbolic execution first validate if a sequence is valid or not and if the sequence is valid it also provides the message types that can follow this sequence the Ulster algorithm dance then gathers the set of message types and and learn learns it",
        "step by step",
        "so let's see an illustrative example to summarize it all assume that the l-star algorithm asks if this empty sequence is valid in the protocol well in most protocols in",
        "actually in every product called The Empty sequence is considered valid and the symbolic execution will answer that yes this sequence is valid and a message the message types that can follow this sequence are the are receiving the init",
        "so in it is added to the set of message types and then the LST algorithm asks if receiving init is a valid sequence and the symbolic execution answers that yes it is a valid sequence and the message types that can follow this sequence are star data and finish then it asks if anything starts is a valid sequence the symbolic execution answers that this is a valid sequence and and the set of message types that can follow are already known already contained in the set of message types then it asks if receiving data initially is a valid sequence and the symbolic execution will answer that no it is not a valid sequence asking if anything data is a valid sequence yes it is a valid sequence and and again the set of message types reveals nothing new",
        "and then asking if if the sequence unit data and finish is valid and the symbolic execution answers yes this is a valid sequence but there is no message type that can follow this sequence",
        "all right so that's it for the internal for method I will now invite Gabby again to summarize and conclude thank you okay thanks Ron um so before we wrap up uh just a few uh indeed caveats and limitations to this tool as you have seen the only way for",
        "which our tool to interact with the binary executable is using the symbolic execution this means that our tool is as good or as bad as the symbolic executing engine we use or it uses currently PC only supports a single symbolic execution and engine called anger which is a fantastic tool it does a lot of great things",
        "however it does has its limitations for example it has some trouble supporting multiple threads and doesn't fully support the windows windows API this means that two and also the the pizza tool will have trouble",
        "analyzing",
        "executables such as analyzing such",
        "executables this is definitely our future work to expand our I have a piece",
        "of support and more symbolic execution engines to help the the tools support more types of executables",
        "so to summarize you've just seen a pizza a tool that will allow you to automatically extract the communication protocol and from an executable thereby",
        "dramatically increasing decreasing the",
        "time it takes for you to analyze the malware or any other executable it can take minutes instead of days or even weeks so with that I do invite you to",
        "download them the tool and access the",
        "the repo and start playing with it and let us know what you think",
        "[Music]",
        "[Music]"
    ],
    "XzvWguiFPX8": [
        "[Music]",
        "foreign",
        "welcome everyone for the last Talk of the day I hope you are not exhausted I will try my best to excite you with 5G and what's this new front door so I am altaf and then I'm a senior researcher at the TU Berlin and I've been in cellular security for over like 11 years now and it's quite fascinating to see how Generation by generation like security improves and then a lot of changes in every generation and are we able to make something better in 5G or are we going down or something like we will I will definitely like give you a better Insight by the end of the talk um okay maybe by now maybe you have some understanding of what are attacks in mobile networks so you might have seen MC catchers or you might have seen fake base stations attacks over ss7 diameter networks which tried to exploit the lack of authentication in ss7 networks uh maybe you saw SMS malware or SMS phishing you saw back doors that I mean nobody knows but yeah they are there unless someone finds it then there are API leaks or specifically Sim type of attacks that exploit some browser issues in the Sim so we have seen like so many attacks over the past maybe 15 years and calling these like classic attacks these are basically user targeted which means the they try to Target a specific user or a bunch of users and they try to extract information or maybe try to intercept the call or SMS or even track their location maybe do some type of billing fraud or any other type of fraud Ott Bypass or something they like that so these are like basically user targeted but 5G is something that is not for well I won't say it's not meant for user but it's more meant for things so it's more meant for Industries like agriculture or Automotive manufacturing Or the critical Communications so there is increased threat when it comes to 5G and the impact is also quite bigger because here the attacker gets to Target the industry and not just a simple user I mean of course users can also be targeted but I see like there has been a lot of improvement with respect to user privacy or like user Security in 5G mobile networks compared to this new door that has come up in 5G or you can also say the advanced 4G networks as well uh before I go into the what is this main uh the new front door I just want to give a little bit a little idea about like how a mobile network looks like so a simplified mobile network that has a radio network as you see which has base stations and uh it has devices handsets or laptops or whatever like and they are connected to the core Network and code network has multiple interfaces I think some of the key ones are ss7 or damage interface that you see which uh connects with neighboring operators from different countries which allows for roaming then there is a data network interface which allows us to communicate all our apps with the with the internet um so this is a simple network but now um with the for the first time 4G and 5G networks are trying to bring this network exposure which opens another",
        "interface that is particularly for Industries or let's call like external entities like vertical Industries third parties or application Developers",
        "um and I think mobile networks are like widely known renowned for being closed doors so their proprietary interfaces are now changing and slowly moving to generalized or commoditized Technologies like apis for example so let's go a bit deeper into what exactly this front door is so just expanded the picture a little bit and you see here that on the left hand side you see a smart Factory or devices from Smart factories or Smart Homes or hospitals which are all",
        "connected to the radio Access Network to the base stations and then the mno the operator has now control over these devices and now you see that the network exposure provides not bound apis to another provider and this provider can be a virtual operator or another operator in themselves or it could be a platform provider or iot service provider I mean if you just want to have more information about who are these iot service providers I mean it's easy to Google like there are tons of them who provide iot platforms",
        "um so now what this provider does is like he takes this Northbound apis and then generates called service apis and then exposes them to Vertical Industries or to the applications the Mind where Industries can actually host some of their uh not some but like their iot devices on the field or infrastructure and Achieve connectivity through the mobile network operator so now any external entity can actually control their smart devices by using the service apis and going through the 4G or 5G core Network so this is a general architecture like how it looks like um to give an example I took drone because I think everybody is interested in drones kind of stuff so this is an example from vodafone's Telco as a service model they were testing in Germany uh in their 5G Mobility lab so basically the drones control center is",
        "connected to the network exposure layer provided by Vodafone so this exposure layer provides apis and shares information to the Drone control center such as Network intelligence for example like that that actually helps the control center to get the coverage maps or even sometimes they might also receive anonymized mobile user information so that if there are heavy crowds in a specific area they can actually maneuver the Drone away from that I mean fly it in a different area so by connecting the by having the Drone connected to the mobile network the control center I mean cannot lose the contact even though if it's not having a line of sight so there are like plenty of advantages when it comes to this network exposure",
        "and just to sum it up I think apis will be one of the key technologies that will be seen in Telecom in the next let's say 10 10 years I would say it's changing to clouds Dockers uh virtual virtual machines so which all require like apis and then this is just a beginning of apis in let's say in the Telco world",
        "if you are like confusing the apis that I'm talking about with some API attacks that happen in the past there's a big difference here because the API attacks that happened in the past are those apis that shouldn't be exposed to the end user and should be hidden from them but these apis that I'm that I will be talking about they are something that are particularly created for end users or Industries and they will be open in a secure manner so there's a huge difference there previous ones where a configuration is mistake but this one is a standardized way of exposing core Network special facilities and data so that end users can actually benefit the talk goes like this so I will explain like how do we get commercial access to these iot platforms or let's say in general to this network exposure and what are the features configurations then what investigations have we done and some of the design risks that are really harmful uh for the networks to come or like for the years to come then some of the key findings and uh disclosure stories and I will end with some takeaways here okay I expanded the picture before even more like a little bit more like much more uh a bit more granular information so you see that there is now an iot SIM card which is added to the to all these devices so this iot Sim is something that is available from the iot service provider you call it like an mno or MV and more virtual operator so whoever it is and take a look at this iot service platform which is nothing I mean just to put it easier like it's an API server which hosts different entities such as like it host service apis it hosts uh something called iot connectivity management platform and then all this is controllable by apis from the Industries or third parties or application developers I mean there can be any company for example and most of the time all this this entire architecture is usually found in clouds these days it's it's getting a common practice which was not at all some years ago okay now how do we get access to one of these iot service platform that we saw because that's the one that you need to actually control your devices remotely through the mobile network so first of all you have to be a business entity you cannot be an individual like unlike uh I I mean for now like a SIM card that I have I can buy as an individual but to buy iot SIM cards like you should be you should be running a business and you need a tax ID so you go to the iot service provider you give him the tax ID your email address or like let's say Office business email address and then office location and then they will directly ship you the SIM cards that you want usually you buy them in bulk maybe thousand or like two thousand it depends and they come with a different kind of tariff unlike what we use uh because we",
        "we want it for like telephony or like other data stuff but these are iot SIM cards they have less data and then maybe just a long lifetime like 10 year Lifetime and they're pretty cheap as well maybe one dollar if you're buying in bulk um some of the SIM cards that we bought are something that connect to the narrowband iot networks like and you uh I would be like low power low power networks um so the provider like once he identifies or checks your tax ID and everything like he will ship the SIM cards to your particular given location and then you can host them in the iot devices you connect them to the mobile network and yeah you can have them remotely controllable for example so once you get the SIM cards you also get something called iot connectivity management platform it's nothing but a web interface where you can actually see all your sim cards you see here like a bunch of SIM cards with MC and how much data is available for that how much is it consumed um the APN so you can basically control all the settings for the SIM cards directly from this web interface which is unlike like not really available for a general SIM cards like we use for common day and with this web application I mean you can also create API users developers or you can also create an API admin then you can activate SIM cards deactivate SIM cards buy extra data volume SMS volume so you can do plenty of stuff through this web interface then second there is something called iot service platform itself",
        "something like this like a Swagger interface where you have a list of apis and they do a lot of functions first of all like I think they should authenticate and authorize whenever you want to use the API because you're using the API and then this is going to the service platform and from there it's going to the code Network so there should be a proper secure access to use them and the second once you have access to this API so let's say secure access to these apis you can for example like go for a trigger for location based Services you can always query the GPS location of your devices you can integrate your payment systems voice capabilities video capabilities like you could do plenty of stuff with these apis um just to be a bit more specific for example like you have so many devices and then you would like to manage their IP addresses you could also control that you could control the roaming policies of the SIM card you could increase or decrease the data rate bandwidth set sleep mode for your low power devices whatever like you can do plenty of stuff available through these apis and being an admin I think you can also do a bit more where you can control even read sometimes so imagine like with this I go to SIM cards like you could do plenty of stuff provided like you have access to these apis so this is just an example of one of the platforms that we worked with uh you see like you could add a Sim delete the same update a Sim you could do plenty of stuff and just to summarize um so we have the iot devices that host these iot SIM cards and connect it to the core Network now the core Network knows exactly where are these devices located and then it can actually access them and as an industry you use the iot service platform and then you query the core network with the service apis and then extract information about your devices you can talk to it you can talk to your devices you can control them on them of them basically exchange data video uh like take the case of drone the smart Factory could be a drone as well like that that's just fitting in this whole network exposure area",
        "okay without security I think it's pretty uh scary because through the platform you see that there is access to the core Network so the 3gpp standard body has actually recommended to use um oauth and then TLS for authentication and then confidentiality this is I think the standard uh recommended measure uh besides that I think apis do generally have rate limiting and logging",
        "monitoring on firewalls I think these are like additional features that come with apis and maybe when you when you purchase them and uh just for uh to mention like there are also like guidelines from gsma if you are someone who is hosting an iot service platform or you should know some of the things that that a provider should actually care about while offering a service platform like this to an industry",
        "um I want to explain a little bit more how this whole thing is working so like I said once you get access to these apis you create API users and then you have an API server where the queries can be sent so the API server sorry the API user uh first of all establishes a TLS connection followed by sending the user credentials like I think it's pretty big HTTP basic authentication send the username and password and then get back a token it's pretty much straightforward like how you see apis in the normal it world so let's say in this case you're particularly trying to extract the location of your iot device so you send an API request asking indicating which in C of the SIM card or like which SIM card you want to get information so you send the emcee and then telling that I want the connectivity and its location status so the response would be that it you would you will receive the exact location of this SIM card or in general like iot device and to which network it's connected what are the internal nodes that it's connected because you see that this request is now going to the service platform and from there to the core Network so the amount of information that is sent by the core Network to the outside world depends on the kind of service agreement between the platform provider and the mno so sometimes like information might be over Overexposed so it depends on how the API is implemented this is some of the screenshots",
        "put in a batch like if you have like 200 devices just send give me the location of all my 200 devices and then it would get back I mean same way you could do pretty much so many other stuff for example send downlink messages like we",
        "can call it like IP messages directly to the device you indicate the IP address of the device or indicate the MC and you can send a message directly to the",
        "I suppose you can create a file and then add your own master key of the SIM card and then push it to the operator and the operator will actually take care of updating the key in the SIM card and also updating in the authentication Center or the main database where all the SIM card keys are stored so imagine like something like this going wrong it's basically somebody has an authorization bypass would be able to upload whatever nonsense keys can be possible to the authentication Center or the main place of the database which I think is is the key of or the heart of the whole Telecom systems",
        "okay the attack model for this kind of exposure looks like this so it's I think first of all attackers should be on the platform like should have access to the platform so he has to have a business relationship with the provider so basically he can if he has a company like he tried to use the text ID and then register obtain the SIM cards so from there you also get API access credentials to access the platform then you have access to the apis and then you can pretty much interact with the platform um I mean in such a case um I think in an ideal situation the",
        "or the API user should be able to use only or should be able to talk to only the devices that that belong to them should not be able to talk to other devices not even know if there are other devices but the goal of the attacker here would be to obtain data of arbitrary users that are hosted on the same platform let's say you and I hosted on the same using the same platform provider and then as an attacker like I could just get a contract with the platform and then start probing the the API server and see what can I basically get out of it like depending on the type of vulnerabilities that are there um if possible to compromise the application server the API server let's say it's also possible to penetrate from there into the mobile code Network because they are connected and nobody knows like how they are exactly connected because this is something still hidden because uh it's something between the provider and the operator you don't know if there is a proper access check before somebody can access a code Network um regarding the skills or privileges that an attacker should have because this is all dealing with apis so standard web knowledge and don't mention about the number of tools that are available on the internet there's pretty of them to actually do this kind of attacks so because apis are quite new in the Telco industry so some of the questions that pop up in my mind is like okay are the standard security mechanisms like what we have seen before authentication authorization confidentiality are they sufficient uh what about like business logic flaws that don't uh show up unless like you completely test the platform like but it's manually intensive like I understand that but uh what about then firewalls like are they sufficient enough um to detect attacks specific to iot Applications because this is quite a new field and I don't think none of the API scanners or the automated testing tools have custom specific attacks towards uh Telco domain because I haven't seen them um and overall like there is limited knowledge on what kind of attacks can happen on these platforms so there is still like a lot of things missing and imagine like in such a situation if there is an insecure API so it's possible to compromise the aps server and then get access to the industry or the customer data and from there access to the iot devices um or even core Network as well",
        "okay so we wanted to get our hands dirty and like get get into the like doing real stuff so we bought we contacted like a bunch of uh platform providers or operators and then I got the SIM cards this happened during the covet times I was really big hassle because they have to ship the SIM cards to our location so that took a while and then we have now once we have the SIM cards we have access to the API portal we have access to the platform whatever like we have credentials to connect authorize plus we have service apis to talk to the platform just a summary of what kind of security configurations are actually available from the platform so most of them use HTTP basic authentication for API then some of them have follow oauth further authorization or in general like the whole procedure but some of them just use a shared token or a static token for each API user you create so you create I mean the point of using static tokens is is not really a recommended way um but there are like different choices I understand maybe the platforms are quite in a beginning stage it's understandable but most of them seems to host them on clouds and use TLS for sure to allow someone to actually connect",
        "okay so in our analysis like what are we trying to look here like because apis in Telecom is quite new and then like we also have to have a different mindset when we uh look at uh these apis so we want to find uh vulnerabilities in the API configuration what about like input validation then business flow authentication access control so all these things we try to consider and then like take a look um can we find vulnerabilities in them um but we see that there are like hundreds of apis available for each platform like here there are like nine platforms that we try to assess um but they're like hundreds of apis and multiplied by nine they're like thousands of apis and and all of them provide diff uh functionalities like you can send SMS or IP data to the devices you can get the real-time location you can update config so by sending an API request you can update a configuration in the core Network you can also like control or track billing charging operations you can upload master keys to the to the operator Network so you can do plenty of things and manually testing them is like really like it's impossible for us and then we wanted to have a bit of systematic approach like can we do something useful and then um see so basically what we did was like we tried to select those apis that have a high impact on the business or like the operation and the reputation aspects of the platform so in that way we try to see if we could do core injection execution or see if we can hijack one of these iot devices that are connected on these platforms or see if we are able to bypass authorization and send SMS to random iot devices see billing fraud the possibility of a billing fraud because like I said on the on the connectivity management platform you can actually track how much data is actually consumed how much number of SMS is consumed so can we Tinker with these counters and then erase all the call data records that are that are present there or maybe can we set up APN manipulation can we do like custom IP addresses can we inject malware in this one so these are some of the ideas that came up and then we tried to investigate um I think we have to thank all of us because OS API top 10 was quite helpful for us to to take a look at these apis and then understand them but most of the tools that are commonly available for API research or testing I think they don't really fit Telecom applications for example like apis are nothing but like parameters inside so when we look at the parameters that are generally used in fantastic or whatever they don't really fit or match the I mean the languages inside Telco is quite different from outside so you need like different parameters so we started to dig out more in the 3gpp specifications or the API design files next track like some of the the essential parameters that we could definitely use and hope hoping that you know we might find a vulnerability in them",
        "well of course we didn't forget the ethical sides of this because we did",
        "we were like really careful while doing this so we didn't do anything automatic or like stuff like this we just try to be more manual and then like have a good strategy while doing uh some for example like take the posts post API request like we don't post unnecessary or like random stuff to the API server because it really create it could create a mess but I think what we heard from the providers was that like none of our efforts are like whatever analysis we did they were not aware of it first of all and then it really didn't disturb any of the platform operation so we are okay with that okay now I go a bit more into the design risks um that we saw with regards to this iot service platforms um probably in terms of Access Control authentication and the amount of data exposure that that they are um that how they are designed actually",
        "okay the first one is the platform design and um because like I said most of these apis like do provide a lot of features and facilities for operators to like for Industries to do a lot of operations my",
        "question here is like why do Platform providers like open sensitive functions to even simple demo users because there is no point in somebody like who is just want to test the platform has access to this key upload functionality and we also found that like you just basically need simple information like a tax ID or email address to register and get access to this platform that makes it more easier for an attacker to just get access because first of all having an access is the key to attack these platforms and what we saw was like there was very relaxed customer verification with many providers and when we try to argue this with the with the providers like we really didn't have a good response but I think I understand that it's in the beginning of the of the you know deployment phase and they would really like to Market their platform and attract as many customers as possible and they want to showcase their platform as well so that's something actually",
        "bothered us then second one was having not enough username and password policies for AP authentication we see a lot of dictionary passwords being accepted and some of them accept don't accept during the account creation but also X but actually actually accept during a password update so which is not a good practice but I think it's important to comply with the best practices in this case then token management like I showed not all of them follow the oauth but some of them have this um static API tokens which are valid from 24 hours to one week which doesn't really make sense because there could be some security sensitive applications or use cases that that require token refreshment like every one hour or even less so there should be more customizable to different use cases and not just very generic then we couldn't really find rate limiting issues and only two of them actually had rate limits in place and some of them even though they described in their documentation it's not really implemented in their practice I'm a bit rushing because I see the time is running but anyway um we see that private identifiers are actually used in apps domain",
        "because these are the identifiers that 3gpp always try to hide from the air interface uh over over the mobile networks but what now what happens now is like in apis these identifiers are commonly used and it's basically like exposing these permanent identities in the applications domain and nobody knows like how secure these applications domains can be so what we recommend is like to use a general purpose identifier which doesn't really link to permanent identifiers but the",
        "the the problem here is like because if imagine like you and I host on the same platform it's easy for me to guess your MC or iccid and enumerate you know based on these identifiers it having a random identifier like it makes the task for the attacker like quite difficult then having something that's easily guessable um so this is an example for that because what we see like when we are enumerating we see that some of the error messages particularly show that we don't find a particular subscriber for the given MC but on the other side we see that there is a wrong customer ID given for a particular EMC it means that this MC actually exists in our platform but you are not authorized to access it",
        "um I think another important thing that with design was like whether using firewall or is it by having a secure API by Design because um I think in error messages like we could really see what are the firewalls and some of their versions being used so what we see that like when using a firewall approach some of the parameters suffer injection and some of them don't um but while having a secure API by Design I think most of the parameters when we do injection or like inject a script they detect and then just avoid or like prevent that that script from being considered or like accepted by the server um we also see a different inconsistent security settings in the whole platform because like I said there are two things one you have service apis which are pure apis then you have another customer management portal which is a web interface so if you and both of them share some of the API parameters and if you let's say if you fail to inject using apis you can actually succeed by",
        "injecting over the web interface because both of them share the parameters and some operators like forgot to have a holistic view complete view on their different applications hosted on the same Cloud so that that brings so that there are inconsistent security practices",
        "um malware SMS yes I mean SMS malware is quite a huge Topic in Telco but what we tried was like is it possible to send malware inside SMS to our own iot devices and see if the platform provider or the mobile network operator detect um those malware or like popular ones that are usually shown on the operator websites like but none of them actually prevents um spreading this malware I mean imagine if there is an authorization bypass so someone who has an access to the platform can just spread malware across the whole iot infrastructure that is connected to that particular platform",
        "um not uh not just because like I said there is also data over exposure so we see that some of their SSH ports were actually kept open and was quite easy for us to access them um and I mean I understand that these are quite in the beginning stages but I don't see that this is going in a good start so reducing exposure I think it's quite an important thing uh to consider um now moving on to some of the vulnerabilities that we figured out were",
        "like while sending a downlink message like while actually trying to reach like I said in an idle case I should be as a platform like as an industry like I should be able to talk to only my iot devices but here what happens is like the the parameter IP addresses uh I think lacked any kind of validation so which allows an attacker to inject any any random IP address on the platform or maybe attack or enumerated them and then just ping all the devices that are present on the platform so I think in this way we could actually ping up to 200 devices that are connected to the platform I mean there are even more devices but it's just that you need to change your IP address range and you could still reach other devices what happens in this case is that or the impact here is that because like we saw in the beginning the data amount is quite limited for these iot applications so you can attacker can easily consume all those resources and then drain if it's a low power device also drain the battery for them so he can basically disable all the sleep modes and then just create a develop service kind of situation so authorization I think it's quite a huge thing when it comes to these apis another quite interesting funny thing was I think most of you are aware of something called Web hook so when you create an API you can also or like in the in the in the platform like you you have a facility to provide a web hook URL and whenever there's an API action request going on you get a response bonds also being sent to that particular web hook so take the case where we were sending an SMS and then as a response we want to see that SMS is delivered or SMS is rejected or whatever so this is the amount of information as an API user I expect but what we saw was apart from the SMS delivered information we also",
        "saw the SIM card credentials like pins books all the operator codes then the current location of the SIM card the hlr ID the billing information whatever like you just name it it's basically there and it was sent as an SMS response which to me is quite surprising because that is not an SMS response for me but when we try to convey this to the providers they said some of the customers like actually needed this kind of feature well I understand but it's it has been made generic to all the all the customers so which which is not the right approach you should maybe have a customized approach for each of them and then tune your apis in such a way that once",
        "um like somebody's fancy doesn't compromise somebody's security so it's uh something that was overlooked I would say like yeah this is an example of the uh the response of the API I mean I tried my best to hide information but I really felt bored of uh just putting yep the blocks um there is also access control misconfiguration that we saw because there are admin only functions um such as like sending binary messages to the devices or updating APN information billing information but we saw that there were discrepancies in what the manual says and what is seen in in practice um like normal API users like let's say if there's a malicious Insider who is not an admin can really exploit the the functionality um that's provided over apis then of course we have to do apis means like script injection as well to me it came as a surprise because most of at least six of them don't really have protection against core injection so we try to inject and I think when it comes to code injection like you actually need something to trigger that particular code so",
        "um like I said in the beginning like there were different applications like the customer management portal and then then the service apis both of them share common parameters so what happens is like if you inject over the apis like you can actually invoke that on the web interface like you need uh to to execute and access a payload you need a web interface so imagine there is an authorization bypass available in the platform so attacker can basically inject into um parameters of arbitrary users and then let them get them triggered over their customer management portal",
        "so having different applications and then not testing them integratedly I think it's it's it's it's really a bad practice and we could really expose that one so in summary um [Applause] I think oauth and TLs are those standard recommended like are not widely practiced among most providers and only two of them are actually not affected with the vulnerabilities or the design risk that we saw now um and I think attacker can easily compromise uh I go to the platforms like provided he has given the access because getting the access is the first key of doing an attack and that has been made easy and lack of rate limits and strong password policies are also like an issue here and another surprise is like script and core injection vulnerabilities though many providers did their own testing internal penetration testing like how could they actually miss this key vulnerability",
        "SMS and IP content inspection like I said spreading malware through these means it's quite common um though this is some providers like said well some our customers like don't like looking into the SMS and IP data also some countries don't allow by law but I see like many providers are do have this facility of looking into SMS or like filtering them if there is malware spreading in them but in practice I really haven't seen that even in 10 providers",
        "um but I think I missed that so in the providers like some of them were from Europe and maybe a couple of them from the states and one from Asia",
        "so we did uh of course like uh inform all the affected vendors one of them really didn't turn back I don't know why um but I think the good point was like none of our methods like whatever we tested like didn't really create any disturbance and none of them are actually got aware before we actually disclose them so",
        "um maybe a One-Stop shop security for if you are someone who is in DUI body security private service platforms or something there is I think enough documentation from gsma with regards to security guidelines and how to follow but I don't think this is the end of it there is more to be done uh with respect to API security I mean there are like plenty of API security practices and testing um that has to be done I think to to secure all the apis okay some key takeaways so definitely 5G",
        "is more secure than uh previous networks but one thing we have to keep in mind is that from closed Gardens like the Telecom",
        "industry shifting to more generalized and commodized Technology such as using clouds apis and VMS and Dockers so there is more increased threat with 5G and it's not just targeting individuals it's more targeting like companies Industries it's like targeting critical infrastructure",
        "um not always the Standard Security mechanisms won't help of course they are a plus it's always good to follow the standard procedures but on top it's important to have additional security practices that are commonly recommended in the industry um one single API can actually take over the whole iot infrastructure that is deployed and firewalls are always not the best all right yes they do help in certain ways but you never know like from where it's the API vulnerability is popping out so",
        "I think similar to ovas top 10 API top 10 it's maybe quite nice to have Telecom API top 10 probably it will frame out in in some years and then that will definitely help providers or platform providers like to have um definitely consider like while developing these apis because apis are this is just the beginning like it's like the network exposure so this is something that was designed in the end of 4G but with 5G it's or like open run if you take um it's full of apis and this kind of secured attacks will be commonly seen and I think it's important that take this research seriously and I think definitely providers or like MMOs can definitely recording stuff these mistakes and just have security by Design as a main principle and I know it's difficult but it's the only approach if you tend if you care to install like connect critical infrastructure with 5G networks I think security by Design and proper like rigorous testing is the only approach I recommended I would say uh yep that's it with the talk and then if you have some questions comments um yeah feel free [Applause]",
        "[Music]"
    ],
    "CIjzABWO3DY": [
        "foreign",
        "everyone I'm Morris from Texas one networks and welcome to Lake section in this session we will talk about how we have come up with a new practical approach to a price and balancing to effectively deter the various malicious behavior and ransomware the engine we provide later can overcome some of the current bottlenecks of static and dynamic analyzes and this is also what we think this is a new channel for future routine",
        "and I'm Mars I'm currently the manager of ts1 products Computing I'm sorry research in the past I often give speech at a major service conferences including Brad had your Defcon or circumference but this is the first time with our team have shared on the high USA stage we are very honored and my colleagues and how is a researcher of tx1 networks in the prison here and also offering people could make many cyber security conference including Bradley also know.com he com he also focused on Windows attack techniques and research so is the author of the best-selling book Windows ipt Warfare in Taiwan unless one is hanged he's also Australian researcher and it takes one networks is a CTF player and they're both focus on lamel way um research and Windows security and in today's online we will start the newly sustainless Gap and discuss the current limitation of static and dynamic deductions next we will sure why we use symbolic execution where our idea comes from and where what functions our engine provides and finally verify so real world mail wave samples and we will use techniques commonly used by the ransomware as the sample such as crc32 dot they are ready loader and process hollowing and tax refers thousands of ransomware as a base and finally raise our tool to allow The Blue Team to operate in a more Community Way I'm pretty review we know there are many",
        "type of male weight and different malware have different behaviors but they all have different effects on sale assistance but recently let's see here we have noticed that aneurysmware has a huge impact on virus verticals so we want to help our defense priority all protein strongly fast against the ransomware we also have noticed and it had a lot of many emerging children's wears verbs are",
        "taking off such the rugby County and the population of attacks are at different time points has gradually increased it of course what a cry is still the highest in our observation for the population has gradually decreased they did and also for a lot of the Congress and where we prepare we prepare our",
        "compassion for those different reasons where we would like to know what kinds of behavior and difference of where Source you can see different ways of where I may encrypt uh have a language track to your process persistence",
        "privilege escalation anti recovery and",
        "other behaviors and also let's access us",
        "reveal or like me 2.0 they are very communicative and encrypt but over almost over techniques in learning somewhere but we know the foreign Behavior",
        "and sitting the previous ransomware is so complicated and how is it detecting practice traditional signature basis to buy sequence list of the year of assembly extraction and behavior breaks of heuristic basis through the API Code system code control photograph or the most discussed learning base for API call there are many ways of behaviors such as the behavior sequence of season code but they are all face different problems and hard limitation or progress will be incandated for example signature base will require a very large signature database and it is difficult to defeat observocative samples well on Behavior based often high risk of dynamic exclusion being bypassed and",
        "it's also takes a lot of times to scan and the code base also needed to connect the internet in real time even recently popular learning base well encounter the problem of unable to determine variance the veterans and due to the limitation of learning samples so there are different problems for difficult problems for malware and Detachment so to show up whether it's that it is static or dynamic energy analysis Dynamic time consuming scanning the need to update signature in availability to identify variants and observocated samples and",
        "other incredible problems are the point we want to solve as a one kind and we also try to not only judge us at least as malicious more inside in the binder",
        "we want to detect it so let us trade our math hat and view our detached engines to the concept of symbolic solution first in our approach there are three previous study left in spiders many things for later contributionally provides many ideas to view our and complete our research",
        "so first in 2005 it's a lightweight to lower the template Based on data reference relationship was promoted and which was very uh was very normal concept and late time but unfortunately the research did not release any QR that can be used for routine and the concept proposed that like China cannot be used to solve the problem of observating the sample in my way",
        "at the large the start in 2018 the researcher used a hidden Markov model to identify the problem of observocation posts but it is a layered out to field",
        "parameters it cannot be an analysis analysis and not our API parameter have",
        "Management number use as feature so layer sounds let's do some limitations for laser research and back and and the last one is in 2019 is sm2 vac is a learning instruction label semantics through the neutral Network approach which can detect a variant variant to send posts at a semantic level but unfortunately at least the ability to expand why it is recognized as a variant and more sort of at least research more suitable for local classification based on those wisdom and lots research we are also summarized our method based on mobile analysis engine of symbol execution it's mathematic bags and solar reconnection of instruction labels cemented and the combination of various",
        "various module we can effectively identify the technique content in Norway binary so why we what is symbolic solution why we choose these as in my exclusion it's a programming analysis technology in the field of computer computer science by using up straight samples instead of exact values as a program info variable and the abstract output result of each path are obtained and the program you can see the big executed through the symbols so here we can see the H larger",
        "gauge path is interrogated and set to",
        "the constraint for the analysis through the symbols and but we know a simple execution is very powerful but but for a more wage the basically malicious behavior is mostly abuse the API so we only we want",
        "we just focus on the process of get higher refers from main function to bring SQ function and its parameters so the relationship between apis and parameters we can use the instruction label based semantic hierarchic and help",
        "us evaluate various behaviors it's very",
        "useful and we will into this later and when we use symbol execution we focus on use lightweight and lightweight path diffuse relationship and that is a resolution of association between perimeter functions and which is enough to solve the problem of mobile analysis and the risk of rural static analysis is low and there are there is no risk of being bypassed by molability",
        "and based on the cement take analysis first positive are very very low so a little over offline",
        "feasible they are very feasible we can use and lay one less why we choose some execution",
        "and for our engine for our particle symbolic engines there are five modules and I connect you in series to provide function like for control Focus function control Focus module is responsible for processing the parsing out each control for uh code block the 10 and the analysis margin is responsible for connecting the relationship of each perimeter and functions an observocated API identified is responsible for what it is the function of identify a vacation per functions and a lot of modules is responsible for um simulation and the compiler they can decompiles the base through such loads engine we can we will write each character uh let's try the symbolic uh semantic signature as a rule and input it into the engine together with the target to be scanned the result can be obtained in the very strong tank and not only to determine whether it is malicious but also we can describe describe what kinds of malicious behavior in a binary English binary scan England is scanning the binary based on the rules and we can have a few seconds from a few seconds to 1. minutes and we can get a result it's very quickly and static and stable",
        "and the more in detail information about each module and our our experiment I will head over to my colleague send how in person will present it in all symbolic engine we have a design control flow graph analyze engine tank can be used to pass a given function into code blocks and analyze each simple instruction one by one in or in call blocks and also another 10 design is tenderizing and tender analyzing each",
        "actually our our engine is designed to",
        "fully simulate statically to analyze the",
        "PE module so each function code will not be implemented instead will give a unique value as a return value of each function and although uh tender analyzing is very powerful but actually a lot of while simple are actually uh is fully fully",
        "strip the symbol and do not have any API name inside the binary so we need to conquer the problem that binary do not have any API and function then inside the binary so we would like to deal with this kind of problems with with the success of entities paper it's possible to infer the original API name and so if",
        "if we we we meet a an API here and we",
        "can dump in our engine we will dump the land API and which can be used to recognize the original API names",
        "and here at first we we created a simple prototype used to statically analyze the Prototype uh statically analyze the program file and check each parameter of each function and uh we can do a lot of interesting experiments for example if",
        "we check out the first parameter look style generically generally write and the third parameter looks like create Os or open is it and we can say the syntax measure form of the Creator file right so we can say oh it's probably is the latest instruction is maybe a Creator file here",
        "and here so we we use this prototype to scan all the Flash's sample on a ransomware where resistance on advice total and we",
        "we see a lot of interesting cash and we took one of these is revel revel is a very famous very popular reason well and uh fully upscured and do not have any API name inside the binary and here as we know uh reveal actually have a function table to record all the API in it inside the binary only after dynamically running you will see uh which Windows API is inside that pointer and here here's a example here you can see the pointer is at the 41 27 14. the point we really don't know which API is inside the pointer right but here our engine without running a wrong in the sample it can detect oh this simple is just a creative file API here because the because based on the parameter on the stake and we also use the idler Pro to double check the same point is the same function Point uh the same function pointer is left create a file or not so here you can see on the result either Pro result you can say oh this pointer is the return value of this point is got used on the closed handle so we can say oh this API just just create a file right so uh in in on the result layer we released on a picture and you can see our our prototype our prototype can recognize all the functions that looks like uh create a file inside a binary and with the success of experiment we",
        "would like to mix this cool idea into a powerful analyze engine to help researchers to deal with this kind of how to solve application malware to in the world and our engine T saw tx1 code semantec analyzer which building a VB set as a decompiler engine and and any researcher can fit can give our engine a program file and the engine will pass the pass each function of this binary in",
        "a binary and analyze each assembly instruction one by one of each function and at the same time you will rule the corporate function of Euro will receive an event content the memory stat and address",
        "so actually your rule can read you can now tell lots of suspicious API or memory stats or uh stake or any suspicious Behavior just in your role to the following tracing so here's an easy example here uh here you can see uh we write a very very simple copy function here only print out the assembly instructions during passing and also if the instructions have API that is a function code here and this instruction have the function name and we can print out the function and also here so so on the result you can see here we can say oh this program file try to use the wing API we execute we can execute the API to run some kind of exe file or another besides that we can say uh the rule can also get the parameter data of each function code so there's a sample here you can say oh this program if I try to use the creative process this API to run some kind of applicable file like CND this program try to use Creator file and create a new CMD file here but before this Behavior you can see this program file tried to use the wsa connect to the remote So based on a little cold relationship we can say oh this program file have the ability to do the reversing reverse reversal",
        "so uh here but still actually",
        "allows our engine is pure statically but still a lot of API is necessary to be implemented or the program will not be run as a process properly for example like uh as we know like long Library a get process address and get a full path then lost API is necessary to to run as a process right so we we end up t-soft environment we do the necessary impact",
        "implementing the necessary API inside our environment",
        "and here so everyone everybody here can can write our desired Rule and each teacher row have at least uh three copy functions is Colbert in your eyes and clean up and in uh your rule can do the necessary prepare in the in your eyes and uh also your rule can receive an",
        "event about uh read assembly instruction one by one of each function also so so your role actually can notice those suspicious behavior all the possible behavior of each function in the instruction level and after Tsar engine analyze all the function and uh the Kobe",
        "function the clean R function of your rule will receive an event and Adolescent type the engine will send a message about Yara Rule and the Kappa rule second result so your rule can your draw can make a final decision about this program so here we would like to show a lot of demo here just notable demo about CRC hashing the reality loader and process hollowing and resonance encrypted and lost attack is very widely used very popular one and very widely used Wireless ready actor so we would like to especially we would like to explain how to use our Tsar engine to detect land so he started from a very basic example here like CRC hashing and as we know if you give a rate of data to a CRC hashing CRC hash function and you will receive actually the CRC hash function will uh",
        "will read will take out the data from the from the array one by one and the Dual xor Behavior with the magic number EBD so for to do the magical number 2xo",
        "for eight times so if our rule can see oh there's the instruction in the binary try to use the match number EBD to do X over for some kind of data for a time so we can make sure oh listen definitely is a CRC hash and behavior right there so here's a simple here on the result you can see oh the teaser engine details CRTs Behavior just right at LS",
        "the function at 43 CBD and the result of",
        "either Pro you can see here is a really a CRC calculation here but just we know that CRC hash is quite very simple right it's very very simple and obvious to the test so we would like to introduce another one is more complex is referrality loader and uh attacker usually use reflect loader to do inject dll as a circle into a remote process and let's trick to high process so to",
        "highlight malware itself so uh also reflector loader is highly mutated and very tricky for the typical patterns again and here is the three steps design of the referral loader first is it will try to try to pass the size of image of its option optional header in its memory to make sure how many spares need to be allocated to to skip to to store the whole malware Banner into the memory all also the second step is to uh to pass the data dictionary of its optional optional header to make sure uh to fix up the pointer table for the malway to cancel a function pointer address and the final step is to pass the address of entry point of each optional header to locate the address the entry function of the malware to waking up the Mali binary so one stronger let's design and let's refresh the loader here just three-step design and here once we know the design of the reference loader so we can write a Tsar engine rule Pizza rule to detect layers the reflected loader behavior in in this kind of been in a binary or not so for example here we can we can say oh if we detect some kind of instruction let us instruction layer just trying to compare uh some kind of data with the magical number PE or and Z we can say oh let's definitely try to look at the emerging NTS header structure inside its uh its",
        "memory so we can put this is a special structure into a watch list and if",
        "in the following code if any any call following code try to use uh use the suspended loads of special code uh in the watch list like using such as using virtual locate with the size of image in the watch list and we can say oh it tried to mount some kind of modeling binary into the memory or you try to pass the imported dictionary of in the watch list and we can say it tried to fix up its uh males important adjustable or you try to pass the address of entry point we can say oh it tried to waking up to locate the entry function to waking up by more binary so once we our reward detect all the three Behavior at the center in a function and we can say oh it's surely it's just a referred loader here and here we choose a fresh sample on the uh just on the July and it's on the vastly sample here at the moment only Adventure consider rate is a more simple here but our engine at that moment can detect oh this is a very exact exactly which function have the ability to do the reflex loader So based on the T Cell based on the T-shirt Road you we can effectively to solve this type of problem those highly mutated malware",
        "that is difficult to solve by the patterns again and we are going to introduce another one it's more complex is process holding and another typical technique you allow my way to high itself is process following um let's attack its practical technique is widely used by US rather actor so uh level has collected with number t1055",
        "and also attacker usually use this kind of attack holding a tag to wrong wrong and multi-binary inside a B9 process so",
        "uh later it's very difficult for victim to notice uh they are really under attack control and usually this whole",
        "example are widely a fully updated and",
        "fully shipped symbols so we will go one",
        "step further to explain how we use Tsar engine to detect this kind of problem of obsercation my way",
        "so here's a simple step of the process holding the first step is attacker will use create a process to run a process in the suspended mode and using the get thread contacts to locate the PB structure of the new process then once attacker get control get just get the PB structure address then attacker can modify the emerging path of the PV",
        "structure to sweep sweep to switching the Eman exe module to control exe module so here evidently",
        "uh how it designer after the download Behavior an attacker can control the main exe so here once the binary processor is waking up and he will actually he will run a malware binary instead of the original program file so once we know how how the process holder in design as we mentioned uh the first step of the process following is using Create a process to create a new suspended process right so our rule can have a have a watch list of all the all the API called look that I create a process then after Tsar engine analyze",
        "all the function and actually we can check those suspicious API since like looks like creative process and here these are these are reward all these are engine provides an API tiny simulator simulation function this API can is able",
        "to let us create a new tiny stimulator to run from a specific address and fully simulated the rest of the code and also provide another API is a look at color to uh to local entry function of Love of any function based on a control flow graph and here uh once when when those those",
        "simulators are running and actually they will they will execute the copy function we assign to land so we can detect uh layers and less than any kind of sensitive behavior in the rest of the code just in the copy function so here we can do tend to analyze the thread and the process process hand value with the dead and the beef metric number and during the simulation we can check if there's any code in in the following code is is any culture to use uh like uh get us red contacts or red spots in memory to sway to switching the to to",
        "modify the image base of the PV structure so we can make sure that is different definitely is try to do process holding because he is Con he tried to control the the main exe module",
        "so here in our experiment we collect uh we we collect all the sample fresh sample in this year and they are totally labeled uh the injection behavior and we we are really curious about how many of land are actually uh really typical process holding Behavior so in totally we collect uh 233 sample here and up to 61 percent of land are actually a typical process Hollow in Behavior and the rest of them after we do the reversing engineering we found out that is actually a hack tool or reversing engineer tool or installation package and now my colleague Hank will go to the next point is more complex one is to how to use teaser engine to detect ransomware included and",
        "yeah okay",
        "um thanks for listening how much presentation and hello everyone I'm Hank I'm going to talk about how our Toyota detect ransomware in order to successfully determine somewhere we set up a criteria for resume detection and we must understand the three common characteristics of ransomware and because our criteria is based on this three common characteristics there are file in moderation file operation and file encryption first these three things happen in sequence so first ransomware in numerous multiple files on disk and then file operation is triggered which means file handle is created for each files and file content for each file is also read and written and finally",
        "each file content is encrypted by",
        "resinware and to ensure our detection",
        "log detection is accurately detected",
        "ration somewhere so we also implement the function chain to help us to filter out the detected characteristic not belowing to the ransomware and there are two function chain we try to detect the first one is file enumeration to file encryption and the next one is file enumeration along with file operation to file encryption so now you understand how our criteria and I would like to show you the implementation of the rule of these three common characteristics",
        "so here is the first one file enumeration in file enumeration we try to identify the strip fireface file and find next file and then we compare the return value from the fivers file and and the first argument of the findings file and then we can analyze the file name usage so we can easily record the file name usage in our detection log so when some maybe you can see the log to to um to analyze the how the result will work and so uh after we understand the first",
        "characteristic of our tool I would like to show you the next next one is file operation and for the file operation we try to identify the strip create files and other API related to the file operations and then analyze the file handle returned by a query file to help you understanding the how the rule works I would like to show you the detection process in more detail",
        "for example our Tour 10 analyze the file operation which store the file handle in the local variable and which is a mistake and then it is expected that each file operation load the file handle from local variable the instruction highlight with very Bus shows that we can successfully detect the characteristic of file operation in public ransomware and for the third characteristic file encryption we adopt",
        "the high priest strategy consisting of obvious casing identification Rule and the patent-based rule and for the obfuscating identification rule which is for identify the strip critical function of Windows API and the patent-based rule is for identify the multiple complex inclusion algorithm so this is a the rule for the three common characteristics in our tool and I'd like to show you how our detection log is and to verify our our tool is work we can review this detection log and we bring three different ransomware and verify their log um and you will see the three common characteristics in the this in each detection log and the first one is Purple Rain somewhere you can see the file enumeration is detected and we can compare it with the extension from the Ida Pro and layers also have made multiple potential enumerator files usage in our detection",
        "block and then it's a file operation we also record some file handle usage from our tool and you can also review the this log to verify um where is the real file operation and then the file encryption you can also do the same things and this is a whole whole process and we can you can follow this step to review we can actually detect the recent word and so and the following we have another somewhere is called dark side and because they are in the same process so I will go through this very quickly and in dark side we can easily detect the file enumeration and file operation and file encryption and then as for log B we can do the same things because we didn't have much time to share this about okay so enough people can also detect the file information file operation and file encryption and and I would like to show you uh how we improve our detection rate because there's lots of encryption algorithms in",
        "the in the um in the real world and which is not easy to implement this base and base Rule and for dark side and it utilize the customized sales at 20 which has a customized Matrix and we can detect it because it is not in our detection existing detection block rule so we capture the feature from the dark side and we implement the patent-based rule to detect it and another example is about seven reasons there's two things about seminarism work and first one is r5a encryption and this equation is also not in our existing rule so we just implement the patent-based rule to detect it and another one is FS open because just as I mentioned earlier we focus on the create files but uh several reasons will use FS open instead of query file so we just Implement a patent-based rule to identify the buy sequence of FS open so we can detect this one and we also did a large-scale experiments and for the whole year we collected resource samples which label was ransomware by three different uh popular antivirus vendors for Enterprise total and there's one thing you need to know in device total the sample labels",
        "as a result means it will encrypt files this is a very surprising and so we also use the",
        "commercial sandbox to filter out some some samples and it was really encrypting files so we can collect them to for our final simple set and finally we have a impressive detection rate around 96 percent and",
        "so here's the table about the rinsing wheel family we can detect is 64 is in my family we can detect and we also can detect its variants in these families",
        "and however some there is some still some detect samples in our experiments",
        "for example Palm darker it used encryption algorithm which is not identified before and so",
        "and just like before we did for the dark side we can just Implement a patent-based rule to capture some feature in this inclusion algorithm to implement the patent-based rule to identify this one",
        "and we also want the uh that's all that's our tool mistaken however as a ransomware so we did a false positive experiments and find out",
        "finally we have a fossil around zero percent and which shows that our tool can really accurately detect ransomware and so now I would like to send home my will summarize our presentations okay [Music] and the final part is future work and the takeoff point and here's a full takeout Point first we realize in this session that existing existing detection",
        "technique have layers change and the limitation is difficult to perfectly solve the highly mutated Reservoir in the world and second point we use symbolic execution to detect those multiple malicious attack and show the good result which is difficult to achieve with the patterns to get better more detection the third point is our experiments shows such as the lightweight symbolic solution can solve real world simple and it's robust against obscation the last one is we hope this engine can help the blue team in the world so we release it on the GitHub and hope the community can join us to write these are rule to enhance the diversity of the detection capability",
        "so as we mentioned uh here is a QR code to our Tsar engine on GitHub we hope there are more and more researchers to join us uh to working on this engine so thank you for listening we are tx1 if you have any question please feel free to answer your question or contact us by the Twitter or linking and thank you everyone",
        "[Music]",
        "[Music]"
    ],
    "ABUC7ZGB1Ok": [
        "[Music]",
        "I'm grifter",
        "I'm Bart so hi we run the black hat knock who are we actually let's see if this is going to work come on click or click click there's a click or not working you know what this is using keyboards old school bam Keep it Gangster",
        "um so my name is Neil Weiler all of you know me as grifter uh because I don't like my name but uh beyond that uh by day I am the global lead of active threat assessments for IBM X-Force by night I do this for black hat this is my 20th black hat us show um so 20 years ago Jeff Moss handed over this network to a child um but it worked out so the black hat Network and I have grown up together I'm also a department head over at Defcon where I run all the contest events and the demo Labs I speak at conferences a lot wrote some books I like security I always hate going second because yours is bigger my name is Bart stump I've been doing this now 15 years uh by day I am a senior SE over at netwitness we traded places if you guys did not trade for places you left me um involved with the community do a whole bunch of other things but not a list like his so that's me I didn't I didn't have to use wanna leave I just did I miss you",
        "it's not true we live 20 minutes from each other we see each other all the time so um we don't do this alone that would be absurd this uh photo man oh that's a really bad one it looked good on a small screen anyway now it looks like it was taken with a potato and it's actually a really expensive camera but that's the knock team you know what we blurred their faces for privacy there there we go okay uh I was gonna blame it on Casey the photographer it's all good so um so yeah so that is the team there are quite a number of guys and gals who help out doing this and like we bring a team",
        "of our friends essentially there's a team called the technical Associates there are 15 of them that we select who range anywhere from uh you know just a sock analysts up to VPS of security companies who volunteer their time to come out and help us make this network work but we obviously there are more than 15 people in that photo because we also do this with partners",
        "partners so a little bit has changed as you see though we have Palo Alto uh Lumen slash CenturyLink they changed their name it's confusing to me still as well but it's okay we'll go with it uh netwitness ironet uh Cisco has stepped up quite a bit and done a bunch more this year and then gigamon still provides the uh the tap for us to get all that data to those tools yeah so um we're going to show you all the stuff it takes to put this together there's the gear the list seems to continue to grow and we talk about this all the time it's I won't steal too much Thunder from later but it's evolved and the bot has has come a long way and it still feels like there's a whole lot more to do so yeah um I think we've talked about this before but when we originally started so the first uh blackout us show that I was part of we had like a Cisco 2600 router a couple of Netgear switches those old Cisco APS that have Orinoco gold cards in them and you would like tape the antennas to the wall like yeah so I get to see a little Chuckles and some smiles from the old people in the audience so this is a hardware won't run through everything list by or number by number but Palo Alto brings uh firewall Solutions Cisco has stepped up and done switching and access points this year but they also provide umbrella threat grid and security manager on all of the mobile devices that you see on the show for as well as registration netwitness provides logs packets and endpoint as well as orchestration a whole bunch of gear to store every packet on site",
        "during the show gigamon again provides the tap to view all of that data get it to all those tools as well as some of the open source tools ironet again provides more visibility and then Lumen again provides two 10 gig circuits that we get from Denver and Sunnyvale so I mean there's a good talking point there is that there's a lot more stuff from uh from Cisco on there this year as far as just physical equipment so Cisco's always been a part where they've been a partner for the last probably 60 or seven years helping us out with threat grid and malware analysis Cisco umbrella things like that so so software support right but um 26",
        "days before the Singapore show this year these I'm trying to share some of the challenges we have here in the knock and you'll hear why in a second but 26 days before the Singapore show this year the partner Who provided Wireless and switching for us said you know hey because of equipment shortages and the still ongoing pandemic stuff we're not going to be able to support the 2022 shows and we went whoo",
        "Flats do you think you have anybody who can get us some gear and thankfully we did so Cisco knows somebody who has a lot of Hardware that's them and they were like we got you right and they came in and in a pinch and provided all the gear that we needed for Singapore so they came in with Meraki and we've got everything set up in Singapore kind of burned that gear in and we were like all right let's see what happens at the U.S show and so here we are so thank you Cisco for bailing us out",
        "architecture let's see how many phones come out um this is a little more logical laid out you can see uh for the most part same old same old uh Denver Sunnyvale again two 10 gig circuits uh come into uh redundant land on the switch then we get the two firewalls that provide all of that uh layer three that are the Gateway throughout the network for every VLAN and every Network that we have gigamon provides that data again out to all of the tools again open source ironet net",
        "witness and any other tool that we want to view there and then one of the other big things that we talked about a little bit last year but obviously last year was a little different and it's provided a few uh extra requirements we'll see is that all of this is now streaming right so last year obviously that was the case for the majority of it but that was not the case going back to 2019 and before so now we have a whole lot more requirements for the AV teams and what they need as far as the network connectivity multiple vlans multiple networks and pretty much all the rooms so we had to break those out for them across they're behind us but we had to break that out in all the rooms as well so a whole shift of changes post pandemic post partner change post everything kind of getting back into our stride but uh as much as possible again keep it simple and and majority of it is the same yeah um you know it is there's always adjustments made everything thanks to um to like Bart puts a lot of effort into it into uh Steve MF Fink over here our partner in crime on the on the knock I'll let you decide what MF stands for we know and you're right that's what it means um so we have a lot of dashboards in there right there's a lot of stuff in the knock the things that we're using we're actually using right they are informational tools for us you could come into the knock in the front area and go in and look and see that the dashboards had genuine data of things that were going on uh the one in the center is just an open source tool we like to talk about it because it's um it's it's shiny it's our like we're like every knock needs a pew pew map that one takes the top 50 or the 50 most chatty hosts on the network and it tells us what they're passing when you saw the green moving that's TCP red is UDP icmp looks white and it allows us to look at the network visually and just kind of see what's going on the little packets of just normal data going by but as more traffic is passed they get thicker right so the lightsaber style looking ones is a lot of traffic and what we'll do is look at something like that and say man there's a whole lot of traffic being transferred there what is that and we go to the netwitness team and we say hey will you look between these two and see what it is that they're passing or if we see a scan that looks like fireworks it just wow to all these different hosts and so we'll be like what are they sending or you know what are they why are they communicating with all these different ones remember OIP for later too we'll talk about it a little bit yeah yeah so again the dashboards are um are real there's a bunch of different stuff I'm not going to read everything to you we only have 30 minutes and we actually want to hear questions more than you care to listen to us talk but you can see all the devices down here I can't read that from here you think they can can't read it on this either but what you're seeing is the amount of devices as they call in the network the larger Peaks being yesterday and then the point at today where we pulled these stats which was about 130 so thousands of",
        "unique devices what are they and where are they and those different things are are one of the things that we're trying to keep track of right what do we need to support where do we need to deploy more equipment maybe because there's a bunch of them in a different area up top",
        "as a map of the actual physical space and then I should have just cropped that and put the Mandalay Bay on it but um it actually tells us like oh here are some of the devices that we deployed that um and where they are located most of them being in the expo hall or um you know around like they're walking around trying to scan your your badge with the iPhones there and one of them we noted was out by the pool so we were like somebody's ditching but",
        "yeah got him so one thing that I want to add about dashboards that we've seen recently and chatted about a little bit amongst ourselves you can see tons of data into the whole point of grifter you know not being able to hear you go this is all amazing data this is all well and good uh usually when you're sitting in a sock as an analyst there's tons of data here uh grifter and I to some extent now are running around a whole lot more not necessarily Hands-On keyboard aren't necessarily looking at everything uh in in that deep of a perspective uh and as pew pew as OIP is he and I can look at it as we run in the room for five minutes and go answer somebody else and see that things look okay somehow you make that look good but there's not enough of that otherwise so as an sc during the day again I understand now a little bit more the executive perspective of wanting executive summary",
        "wanting red green yellow something a little more simple to know everything is good and well and when I walk back out I'm not going to get called back in immediately or I should stay because everything's red so just a couple donors looking for a traffic light yeah",
        "so we have some stats right so looking at these These are the let's see total devices I can't see it over there I mean I could but then I'd have to run out into the audience and that's just weird you're looking at Trump real close yeah I like again I should we want me to pick it up and hold it out like that no so uh over 10 000 unique devices 367 different iot devices and you can see there's a tiny little thing on it that says one high risk we're like I wonder what but um you know lots of different applications you can see on the side too the the types of devices that they are so Apple devices making up the significant amount of of devices that have associated with the network um and then you know moving down to PCS with Windows Linux is top five Linux PCS yeah stuff like that so like that it's just good to know like here's what here's what's connecting here's what it's doing um also a a stat of note nearly 94",
        "000 DNS requests to malicious sites right so you guys are disgusting",
        "this is going to be a very bright slide this next one apologies but again just some more stats right so looking at what was passed over the network and and what it is that we're doing one of the things is we use uh you know Bart mentioned net witness and we do blogs packets and endpoint with that endpoint being just the registration machines we would never ask you to install something on your devices and if you did we'd ask you to leave but uh we're capturing every packet that flies across this network right we don't do decryption or anything like that but we do log the package and we do that so that when we do an investigation we can look back and see what's in there if you are not using packet capture in your organization do it today that's not a plug for net witness I don't care if you write it straight to disk if you're not doing full packet capture fix that we do some encryption yeah um so a lot of packets flew across the network in the last couple days 32 billion of them right so and we with a b and we were like I'm gonna keep them they're so cute and then you can see you know the types of email traffic that was going across and how much of the data that came across the network was encrypted email versus you know that and yes you are seeing POP3 there is some pop three and we'll actually look at a little bit of that in a second still and then um what I like is the top web categories being computer and internet and then the second one being medium risk right like it's just like again you're disgusting like it's just like oh hey let's go do something terrible um and so when your second uh you know in your top three there's already just like malware and other fun things you're at black hat",
        "um yeah do you want to take this DNS uh so",
        "umbrella has been a great tool that we didn't have as far as the visualization we knew some DNS before we could get capture stats as far as we saw but it is nice to see what some of the websites are getting some of that data we don't necessarily block things outbound there are some uh rules you'll see later uh but we don't we don't block anything outbound so this is a statistical um informational tool for us basically but you can see the amount of DNS queries over the last four years so that was 2018 uh 2019 when did we get up to 49 million obviously a dip in 2021 and no 2020 in there and then 2022 we surpassed",
        "2019 numbers with 50.2 million DNS",
        "requests yeah and then on the right there are applications the unique applications communicating on the network so you can see those numbers grow too 3600 back in 2019 and",
        "6100 this year so it's all about the apps baby",
        "all right we do this slide like every time we give this talk and we do it just to give you some I guess background information about how our goals of what the goals of the knock are and how they've changed over the years um ultimately the main goal of the knock and we call it a knock for a reason it's because we replace every router switch firewall and access point in this network in this building like we own all of that equipment the only thing that we use for Mandalay Bay is the wire in the wall so they we plug in from our gear in and it pops out somewhere else so it's just the wires in the wall um and again so the main goal is stability keeping the network up for things like the training classes or for folks in the expo hall that kind of thing registration and those things so let's talk about um that stability we had a here's an a a training class that was experiencing an issue very early at the start of their class on Saturday morning um we deployed not folks out there to troubleshoot we're in there for hours or doing stuff they're really upset with us right they're like this we rely on the network we need this to work people paid thousands of dollars to be here all of those things right um so we're in there going crazy trying to figure things out we're looking at our data and theirs I saw ping times the largest or the longest ping times I've ever seen um you know 58 seconds I was like wouldn't it just say like host unreachable at this point but no it was like I want you to know how bad it is um and so I felt a little bit insulted but in the end we troubleshot that Network the entire day again Mad students mad instructors I'm gonna want my money back all these things and in the end what it turned out to be was not our fault um but what it was was there was a service that was running on the image that the instructor had all the students using that was essentially because they could see the other students it just magnified the traffic on the network until it brought it to its knees and we walked around and disabled that service and we could literally watch the paying times get faster and faster until finally they were 20 you know milliseconds and we're like that's what we expect so stability is the biggest thing because if it's not stable like people are pissed right so that's the number one goal after that comes security so that's why we're the knock right we are a network Operation Center we do all the things that sock does as well we have pockets you know logs endpoints or Solutions threat intelligence platforms like all everything you you name it we've got it in there but we're not first and foremost we learned pretty early on that segmentation was necessary on the network and we learned that because in the early years of black hat it was the wild west and people would get on the network learn something in their class and immediately attack the class next door right so",
        "I got you laugh like haha it was me it probably was you thanks thanks for that it wasn't even classrooms I remember the year that there was the media room that had the media got oh yeah attacking each other yeah attacking each other the Press were like",
        "let me try it I just did an interview about this tool deployed",
        "so great and then I think they ended up becoming the story because then they got found out and the other reporters wrote about them so um so once we had the segmentation done um it turned to hunting right we wanted to understand what's actually going on in the network the thing about the black hat network is that every five minutes that we see the type of traffic that would cause a declared incident in any soccer cert in in the rest of of you know the world the issue with that is we can't alert on things because we'd just be inundated we are looking for a needle and a needle stack right there's no hay on this network it's just needles so",
        "um what you see when you come into the knock is a bunch of folks sitting around the edges but this is Las Vegas yeah so it's just um it's just people sitting around the edges and those folks are are our team they're from Cisco Palo Alto they're from Iron net and they're threat hunters and we're using threat Hunters because the best threat hunting is still done by humans and I'll fight anyone who says otherwise I will physically fight you come at me let us finish the talk then we'll fight um malware sandboxing right so when we see a bunch of of interesting stuff growing across the network any file like executables dlls PDFs anything that gets a high enough risk score and net witness we throw it into threat grid put that into a Sandbox open it up see what it does interact with it and see if we can learn anything identity and access management is us trying to make sure that when chain when configuration changes are done we know who did them and that it's only a handful of individuals who can make those changes the end point again I mentioned was registration it's really just the reg laptops and then the iOS devices that are on the Expo floor and um at reg as well that you like scanned your QR code with and lastly automation so we use a sore solution to",
        "look for the types of traffic that is command and control like immediately showing up like on the network and plugging in and we're like that's going to a C2 server right um crypto mining or uh clear text credentials right and if we see those things we used to like walk to the classroom like barter I would show up and be like we need to see IP address blah blah blah right but it doesn't scale not at this size of a show and so now what we do is we see those things we investigate them and if it turns out that we're like that's genuinely something that's bad we'll throw up a captive portal to that individual say hey we saw this type of traffic coming from your device or we saw this crypto mining you know activity and advice if this is expected just ignore this if it's not stop by the knock and we'll show you the packet captures the logs and everything the thing about the evolution is again we talk about how far we've come and it feels like there's still so many other things that we want to do so it's it's uh it's never ending and we we want to continue pretty much all of those spaces and and look at some others as well so yeah it's uh it is the the ever-evolving Beast um we also that gif exists just to freak you out because it never actually evolves like it never turns to Gyarados it just keeps it only freaks you out so",
        "um do you want to take this you want me to get it so this one uh so so a lot of this is what we're so these are actually slack uh screenshots a lot of the things that we want to point out here too is the the work between all of these partners and again we call them partners for many reasons we've talked about it all the time they don't these are people that are vendors that have paid to be in the knock we chose them they work with us but they also all work together uh there's things that have changed between products because of the vendors that are all in there and the things that they've seen in the blackout knock but this is uh uh pointing out uh something that someone saw in one platform I can't even see who it was that saw it first I pointed it out throughout hunting saw that somebody else went over on the Palo side on The Cisco side to start investigating uh and this was uh Sherlock rat right is what we found so there it's a lot of stuff um there these are just examples of like again this is the type of stuff that we see that we go is this somebody doing a demo is this somebody doing a lab does this type of activity correspond with the class that they're taking if it doesn't this might genuinely be malicious and then and those conversation happens you can see like eight replies over here blah blah and there's folks who are in there saying I checked this I corresponds with this class that one's clean I check this that's bad I do whatever like we think that this has a high probability of being an actual attack so it's just looking for for us to be able to confirm is this something we need to tell the individual about you'll often hear that again that black hat is one of the most hostile networks in the world and that's true if you look at just the traffic itself it's all those needles right but in reality by the time we're done there are probably more people who leave here a little more secure than when they came because we're letting them know you showed up and this stuff was on your machine and so you know that's that's the goal here I don't think we've seen anybody actually infected still on site this is all something that normally sees when we see C2 showing up when somebody's already been infected on the network",
        "so um so situations at reg we got attacked a lot this year I think I don't know if it's that you guys are happy to be out of your houses um but but like the core infrastructure like coordinated attacks on the Wi-Fi network um and a lot of activity pointed at the registration server and the reg server is like the crown jewels for us we have to keep that safe it's all viewer information and it's probably pretty valuable to somebody to have 20 000 names and addresses and all the information about the top security researchers in the world right so we saw plenty of attacks on the registration Network and they you know we investigate those as well whether they are physical because sometimes it's like somebody messing with things devices or you know just things like this where it's like oh somebody's trying to hit it with a few things this is what happens on slack is someone's like hey I see this blah blah go look yeah that looks bad normally any type of attack or malicious traffic point at registration and it shouldn't be there right and so it's like do should I block this yes block it go ahead and then there's a little whack-a-mole like kitty smacking stuff down there at the bottom so that's the only things that we do block on this network because we don't want to anger the demo gods and make it so somebody's demo doesn't work we only block things that we can say with certainty like this should not be happening and so that's when that happens",
        "you got this yeah so speaking of reg and stability we shared one story and we'll uh we we talk about everybody else's funny hahas and we'll uh we'll share one of ours now so if you were here Saturday morning for trainings and you",
        "were going to register and they sent you up to your class uh there was without a badge without a badge there was an outage for a short amount of time that that we'd caused ourselves um so there's some lessons learned and things that we take from that and as I said earlier remember OIP so an interesting thing about OIP is that we feed again that's all packet data that is that is the packets and you can see in the top 50 clients whatever it is that it puts up on that map we normally leave that server down in the MDF next to the uh the tap getting that data there is a client that you can run however that client to server communication is still janky very large",
        "so once we turned on our Tool uh and there was a few things here that happened all kind of in succession if you will uh they were we were on the same switch as we had put registration by mistake it doesn't normally happen that was that was again a lesson learned that that will not happen again but basically we we dust that entire Uplink on that switch I think it sent 960 gigs a second or something it was it was bad um it doesn't work it doesn't work usually so we messed up we learned from",
        "that there was a number of things that happened uh so also OIP is that's not normally how we run it we normally run V and C while it's down in the server room but we'd gotten it cleaned up and there were some other problems with that the code has been Rewritten a few times and it's down to five lines or something to that extent and there was problems with VNC we didn't do it and weed forgot yeah",
        "so we shot ourselves in the foot I mean and it wasn't architected that way we had set it up that registration was supposed to be on a separate network from from the management Network that we were going to use because we you know use a lot of different tools and do whatever those need to be separate but somehow when we deployed it we we plugged into the same switch a big a big part of that is we already owe a lot of people favors because we got some extra switches extra things that we already didn't expect supply chain Cisco coming through at the last minute there were some hands shaking to get some extra yeah it honestly it was like what how many simultaneous failures had to take place for that to happen anyway I think we said three I think it was three three simultaneous failures took place to make that happen but you know when it happened it it did happen right so on the road to success or failure hackers don't like the Sun so we chose failure so",
        "this is a security guy so this is every freaking year if you've been coming to this talk for a few years we've showed you stuff that there's a security company that's hired by either the venue or or the the company that that owns black hat and they come in and do private security stuff and they send all of their email Communications in the clear and we hate people are getting raises somebody got fired urinated outside the building I saw that email oh he got he did he got fired uh thank you uh it's yeah anyway yeah so we're always like it's just ironic that we're at a security conference and the physical security that's here doesn't secure their email at all and we can see every incident that happens and then like you said like uh you know no this guy's a solid dude we're gonna give him a raise um so this is uh you know just a you know a lesson about you know iot so what's the iot we said there was a you know about 400 different or unique iot devices that had shown up on the network and the thing is is that some of them aren't so great I don't know if you've heard but some of them aren't so great and and in this case we had somebody's like they deployed a camera like a motion detector in their home and it was showing video as well as like point in time just like a pictures like it would take pictures and then they were getting it to an application on their phone or something and it was all in the clear and then the other one is",
        "is our own stuff there's gear in the back that they somebody had said of an iot webcam Sean it's you just yeah I know you're yeah the AV guy said we're not in the talk this year are we because they have been in the past and I was like not yet and then I saw this so sorry Sean we still love you buddy um good and that um speaking of iot right so buddy that that led us to the discovery of a um an iot like a remote feeder for somebody's cat the cat's name is actually Garfield which is why we thought that was pretty funny um and but all of it's in the clear and then like we've redacted a little bit of it so you can't get in there and mess with poor Garfield but we have what we need to be able to feed that cat whenever we want",
        "it's already named Garfield and apparently they keep pet profiles that's all passed in the clear and I'm sure you can't squint hard enough there but it says nature very lazy so Garfield is a very lazy cat yeah shocking let's go feed that little be a good TV show kitties apii so this was uh one of the interesting things that we found uh this one was a net witness throughout hunter that dug in a little bit and this was a tool that was used for foreign um foreign currency trade all of the data",
        "was that that you would scroll through the app and see everything that they were looking at was encrypted it was 443 however when they made any kind of trade if there was a a change to their account a trade of said currency the API call was in the clear so um that one's that that one messed up uh we found that with net witness and again one of those interesting things that that we dig through and find that verify said security whether it's uh your your mortgage statements you're emailing to a college if you've heard that before or API calls on here foreign exchange currency yeah I mean again it's just one of those things where it's like you you can't trust that the applications are doing the things they say they are just fire up Wireshark take a look right look at the packet see what it's sending because you you don't know if you don't go look right and then lastly",
        "This was um just we saw some some nation-state related malware",
        "um and it was when we dug into it on the device of an individual works for communications company that would be a target of that state so we'll be chatting with them um but yeah so um hide your wife hide your kids thanks for coming out",
        "[Music]",
        "thank you",
        "[Music]"
    ],
    "HZk2egYDXxg": [
        "[Music]",
        "and without further Ado I'd like to welcome today's presenter Yang Wang",
        "okay good morning and evening welcome to",
        "my talk my name is Wang Yong I focus on Android and the brother vulnerability research you can follow me on Twitter my DM is open by the way one of my friends wants to know if there are some jobs in Canada for foreigners he is also a vulnerability researcher in Singapore I really appreciate your sharing of the job information",
        "Harry's agenda I will briefly review the conventional ideas and steps of exploiting a uaf vulnerability in the",
        "general cache and the details why the technique of cross-cash attack has to be a planned when exploiting a uaf bug in the dedicated cache then I will introduce a return to page a new and generic exploitation technique",
        "specifically I will review the critical parts of both slab and the body allocator and I will detail the well-known cross-catch attack techniques and discuss why those techniques are time consuming and the less deterministic and I will also detail the king idea and the cons conceptual module behind the new exploitation technique",
        "to clearly understand the technique I",
        "will discuss the two typical uaf vulnerability fixed the last year detail",
        "how to exploit those two vulnerabilities respectively the last part just to",
        "summarize the talk he needs Carlo there are two main categories have cash in general and dedicated cash for General cash just the invoke King memory and K3 API to allocate and free a help object for",
        "dedicated cash the cash is created for a specific type the cache must be provided when allocating and freely",
        "as a mailing attack surfaces have been reduced in recent years fuel bugs can be exploited from the untrusted app context",
        "in Android color the second part in the e-post subsystem and the fourth stack in the TTY driver fixed last year caused a little attention even if the second one was exploited in the wild last year there are no public exploits against the",
        "Andrew Carlo like the 30 people before discussing how to exploit a uaf",
        "vulnerability in the dedicated cache let",
        "me briefly review two typical Android exploits about how to exploit a uaf",
        "vulnerability in the general cache",
        "the first UF vulnerability is 7 year",
        "2020 00141 they'll relate the bundle load object is allocated the incremental",
        "128 cash in order to leak color pointers",
        "to fix a bundle load object the public",
        "exploits brings the e-port item objects",
        "to refuse the freedom load object after",
        "leaking the color address of the bundle load the exploit use send messages spring technique to obtain the right primitive then corrupts some fields of",
        "the leaked pointers to obtain aarw",
        "Primitives",
        "the second one is also a bundled bag they exploit the Sprint's sequential",
        "field objects to obtain color slide",
        "and it also use the import item objects to obtain aarw Primitives",
        "it's easy to find out that the sequential field objects is indeed allocated in the general cache however the EP item object seems to be allocated in the dedicated cache to remove the doubt let's dive into the source code",
        "when creating a new slab cache it will first try try to find an alias cache it",
        "aims to reduce the memory fragmentation",
        "the slab emerge config is usually enabled is the main switch if the new",
        "cache has a Constructor it can't be merged into another cache without any",
        "special flag the new cache will be merged into a ladder cache which basically has the same config so that's why the EP item objects are",
        "eventually allocated in the general cache",
        "since change the front Android Carlo 4.19 the sequential field has its own",
        "cache and the slab account is said that means both of the two caches will not be merged into the general cache",
        "for our Android 10 to Android 11 both free list the random and the free list adding are enabled in my view is a kind",
        "of oob mitigation and the Alias switch",
        "is still on",
        "from Android Carlo",
        "5.4 the aliens switch is off by default",
        "that means the dedicated cache will never be merged into the general cache the cost is increasing the memory",
        "fragmentation",
        "upperversity different types of objects",
        "are located from Key malloc still share",
        "the same cache so to exploit a bug in the dedicated cache cross-cash attack techniques have",
        "to be planned to make different types of objects share the same memory",
        "a second part",
        "here is the typical example of how to exploit a uaf bug the key point is that one of these is overlapped with the freed of GPA so how to refuse the freed object a reliably to answer this question let's dive into the slab allocator here I list some important fields of the key memory cache now just focus on the",
        "CPU slab and the load fields the CPU cache CPU sorry the key memory is cache",
        "CPU is allocated the perceptual call",
        "first we can pick a process to a specific CPU code by setting the Affinity where you can simply record like that there is only one CPU core for Android devices the long uniform memory architecture does not be enabled enabled",
        "so there is only one CPU cash load",
        "when allocating an object is the first tries to allocate from the free list the free list points to a physical page here the page frame number is the 11th result",
        "is the so-called first path",
        "when page 1100 is full page 2020 the",
        "result will be moved into the free list",
        "now the partial list of K member cache is empty Pages 33000 in the past you",
        "list of key memory cash load will be moved into the free list",
        "after all the pages in the partial list our K memory cash load are full of objects a new page 1338 will be",
        "allocated from the body allocator",
        "when freeing an object of page 35",
        "respectively the two pages will be added",
        "to the partial list of key memory cache CPU the pages are you are in a so-called",
        "freeze state",
        "when the number of free the objects in a partial list our K memory cache CPU is a larger than CPU passion page 2200 under page 11 the result will",
        "be added to their partial list of camera K member cash load not this game memory",
        "sorry not the herlo cash CPU",
        "with the number of pages in a partial list of key memory cash load is the larger than million cap passion the MPT page 1100 will be freed and reclaimed by",
        "the body allocator",
        "suppose a user handle is associated with",
        "the freed object a it's possible that a",
        "is allocated from page 2020",
        "22.00 it doesn't matter",
        "when screening object B is probably that",
        "the freed object a is reviewed the first",
        "path makes it reliable",
        "so this become complicated with the",
        "freed object is allocated from the dedicated cache here both A and B have their own cache",
        "so three orbital B cannot reveal the",
        "fluid object a",
        "although the freed object a cannot directly be reviewed with other types of",
        "objects it's possible to freeze the related physical page and the page can be allocated to other caches so the freed object a can be reviewed by this indirect way but how to reuse the freedom physical page reliably to answer this question",
        "let's dive into the physical page allocator",
        "this is the classical body allocator I take from the book The allocator maintains blocks of three pages where each block is a part of two number of pages",
        "you can clearly understand the three-page management I put the two allocators together here the author of the cache u3 it means that the slab slab",
        "page contains eight physical pages and",
        "the partial list of both can memory cache CPU and the key memory cash load are empty and the the order of compound Pages 1338 and 533803",
        "so",
        "page1338 will be allocated when",
        "allocating a new object",
        "when page 1338 in full page 5338 will be",
        "allocated now there is no third order compound page",
        "when page 5338 is full the fourth order compound",
        "page eight one the result will be spilled into bodies",
        "now we began to begin to free the objects specifically except the page",
        "8108 make all other Pages partial were",
        "empty and the most important sense that the number of pages in the partial list of K member cash load is larger than merely cap millilitation",
        "when page",
        "8108 is empty it will be reclaimed",
        "as the party page 8 8 1 0 0 is still",
        "free the two-thirds of other compound",
        "page will be merged in merged to form a fourth order compound page",
        "so that's basically how a slab page is handled by those two allocators",
        "in fact there are several zones based on the miggregation type",
        "here is the basic idea about cross-cash",
        "attack in the limbs Carlo the first step is bringing the objects not only the current slab page exhaust data but also all the pages in a partial list must be occupied the red block represents the vulnerable",
        "objective after triggering the uaf bug",
        "other objects in the current slab page are freed make the current slab page empty next the slab page is reclaimed by",
        "the body allocator when spring object B",
        "is the word first exhaust the partial list of both can memory cache CPU and keep memory cash load then the cashew will require more pages if the free the page is successfully allocated for the cache object B can be over overlapped with the",
        "vulnerable object a",
        "to cross the slab cache the related Pages must be in the free state so the step one two three is required and to allocate a new slab page is required to exhaust the water free slab page first",
        "this is the reason why cross-cash attack",
        "is a memory and the time consuming and the less deterministic",
        "in 2015",
        "when she published a paper from my own opinion I recognized it as a cross-cash",
        "technique",
        "the key point is that all the physical Pages which can be allocated for slab",
        "allocator are nearly mapped so we can repeatedly call the M map Cisco to Sprint the pages until the",
        "specific page is mapped into the user space",
        "as the physical pages are nearly mapped the current address of the dangling pointer is always validated",
        "several years ago I used this idea to exploit a type comforting bug you can find this slide on my GitHub",
        "here is the steps to fill the uaf sockets",
        "the expoid repeatedly called the M map Cisco until the free the circuit returns a fixed fixed time step",
        "obviously is time and memory consuming",
        "but why sorry",
        "there are lots of flags to be said when allocating a page here you just focus on the migration type and the page order first lab page",
        "is unmovable",
        "when allocating a page for a user address the aggregation type is movable",
        "I take the figure from Yahoo slide roughly the different aggregation types",
        "of pages are stored in the different page free list it looks like the cross cache so it's time and memory consuming",
        "now we know the answer to this question the page order is different as mentioned",
        "before the high order Pages can be spilled into now or now other pages so it's required to",
        "exhaust the no other Pages first",
        "meanwhile the miggregation type is",
        "different",
        "and now when freeing a single page the page did not reclaimed directly instead",
        "it will be added to a cash list based on the aggregation type so the page can be reallocated very soon and it's",
        "impossible to reduce the Page by m map Cisco more generally the loan cross cache technique is useless with the order of a slant page is reservo now let me introduce the cross-catch tag technique",
        "return to page",
        "the cork concept is allocating the same",
        "order and aggregation type Pages which",
        "can be read and write and directly or indirectly instead of object X to review",
        "the free object the same order and the migration type can significantly increase their",
        "possibility I will be using the target slab page under the content of the freed object can be leaked and Modified by reading and writing the pages",
        "it's next time and the memory consuming and the more deterministic but is but is",
        "but the limitation is obvious",
        "generally since the content of the pages can't remain intact you cannot directly",
        "link the color or dress without triggering the operation on the object",
        "the step one two three cannot be avoided",
        "I talk about the previous at the same four some tricks",
        "can be used to shape the help feng shui and make the reallocation more",
        "deterministic here at least some",
        "the old friend the pipel subsystem gives",
        "us the one page allocation both the user",
        "space and the color space can read or write it",
        "the pages order is under the control although the usual space cannot write",
        "the page directly it can we can net the",
        "color to the dirty job",
        "uh the io and drivers can give us some totally controlled pages",
        "but even maybe you know might might be",
        "different uh due to their vendors specific implementation",
        "the GPU drivers can also give us some totally controlled pages",
        "but it's not Universal uh I this code",
        "this code is lifted I take from Arduino GPU driver",
        "the io uterus statistical can give us",
        "some totally control the pages and however it is blocked Under The",
        "untrusted Apple domain uh you can use it under the show the shared domain",
        "the third part",
        "to clearly understand the return to page exploitation technique I will deter how",
        "to exploit those two highlighted vulnerabilities fifths the last year",
        "uh you can fed the briefly root of",
        "course lenses on Google project through those blog",
        "so we inserting uh you profile",
        "descriptor inside another Evo field",
        "descriptor uh it will first perform the",
        "loop check",
        "specifically a user will Traverse was a",
        "a items recursively if the related field",
        "is not the Evo field and it has not been added to alien linked list the reference",
        "counter will be increased increase the unconditionally",
        "to the regular regular field will be put at the end of the evil control Cisco although the whole process is protected by hippo mutex the regular field can be",
        "closed via the FD handle",
        "specifically task a creates an evil",
        "field and adds a bunker field to it then task a starts to add the euper field descriptor to another evil field descriptor a during the loop check if the bundle field is submitted to 3 before increasing the reference count the boundary field can be submitted to",
        "free again uh if you are interested in how to control the threat interleaving and just",
        "check out this slide before triggering the bug we should ship their cash and make sure that the number of the freed objects is larger than cpule partial and the number of pages in the partial list of key memory cache node is the larger than me mini partial",
        "then trigger the bug and refuse the freedom fields",
        "the Target Field will be freed when",
        "clearing the target of field link list",
        "we can close all the other field descriptors to make the slab page back to body allocator",
        "now there is a handle related to the freedom field but we don't know which one is",
        "since the page is shaded between user space and color space smav4 Pam mitigation is naturally",
        "bypassed as discussed previously the",
        "content of the page is usually reset Nokia pointers can be leaked directly",
        "so how to bypass the k-a-slr mitigation",
        "because that the pending fields are opened with right only mode so we can",
        "set the free the fields mode as read only then repeatedly causes split splice",
        "Cisco to check whether the fde is a",
        "target descriptor",
        "even though it just Returns the band descriptor Arrow",
        "since since both in and out fields are",
        "not hyper fuels they do splice function just Returns the embedded value error",
        "So based on the different error codes the target handle can be figured out",
        "since no color pointers can be leaked directly we have to find a way to bypass the kasr mitigation for Android devices",
        "the color slide into two megabyte aligned and cannot extend across one gigabyte alignment boundary the",
        "limitation is derived the front armor V8 mmu hardware and the most important",
        "thing that there are only 16 for bits for randomization so it's possible to Guess the Color slide in a short time but how to guess without color crash since the fuel has no value the field operation it's easy to panic the color due to a non-pointer the reference or inventing the color address it's similar to finding the user handle is just requires setting the parameters",
        "carefully here the fde must be larger",
        "the value when the color slide is wrong the fde will not be recognized as a type",
        "of field so it Returns the invalid value Arrow when the color slide is right it will return a piper Arrow because the of e is not zero now we can fake any type of view and the page is under is under our control uh it's easy to obtain aarw Primitives I will talk about it later the bug was this bag was first disclosed to this color by Young home but also found by me before it was fixed the vulnerability was finally leaked under Android security in May last year",
        "although Zhong details how to exploit against the dbm kernel the exploit code",
        "cannot work on adding Android devices directly due to the different color config",
        "I successfully rooted the pixel 2 to 5",
        "and other Android 11 Flagship Flagship",
        "devices at that time",
        "from your host poster the object is allocated in the general cache",
        "but it's not such a simple Android color branches for Carlo 4.4 indeed the PID",
        "object is allocated in a general cache",
        "however for color four point lighting is",
        "not I'll discussed previously a cash with slab account cannot be merged into the general cache so basically for the old color like 4.4 the object is allocated in the general cache and then for the Upstream Color Branch the object is",
        "allocated in the dedicated cache here I just focused on the Upstream Color branch",
        "when I reviewed the this is I'll control Handler I found the code is likely body look at the red circle the code release the older PID object of real Pi real TTY",
        "object and the assign a new one to it however you use the spring node of TTY",
        "objects like this window of a real TTY object when sending a command to the master driver the gtu object represents the master endpoint and the relative object",
        "represents the Sleep endpoint",
        "uh but when sending a command to the sleeve driver both of the objects represent the slip and point so we're sending commands to the different driver drivers drivers can currently one thread",
        "put a pida and then the context switch happens another state can also put a pida its reference count is decreased",
        "twice if Ace reference count becomes becomes 0 though a will be destroyed",
        "so there are three different types of hash list in PID object",
        "the pi link array of the test struct object is used to attach to the PID",
        "object",
        "a PID object is allocated when creating",
        "a thread or process for a new process all the types of PID objects are attached for new",
        "thread only the PID type PID is attached",
        "a lot of things should be pay attention too is that the Page's order is zero",
        "the hype function is very similar to the previous exploit",
        "as a single page will be reallocated soon using the pipe page feng shui can",
        "significantly improve the successful",
        "read",
        "now we have the same question and the answer is almost the same",
        "as the pages under our control we can",
        "set the pointer of page H leads the head to zero",
        "and we can focus a new process and attach it to the trade object the test",
        "struct address can be leaked by reading the page",
        "look at the red circle if the limb space is equal the NR value will be returned",
        "uh otherwise you should just Returns the result and the PID lamp space is a lot enabled on Android color branch the lamp space is always you need a PID lamp space is a Carlo data pointer",
        "as the page is under our control we can set the first pointer to address X",
        "the fork a due process and attach the",
        "test structure to the freed object free the PID now it points to the test struct",
        "let's change change the pi PG ID of the",
        "newly spawned process it will point back",
        "to the page that means we can overwrite under",
        "redirect our pointer of adding objects",
        "to the control page",
        "under the test structure of a one-page leaked we can't redirect some pointers",
        "here I choose the fields structure",
        "because the FD table is storing it",
        "under the mask fds can be read from the process status",
        "after redirecting the field structure",
        "pointer to the page the FD the FD table",
        "pointer is controlled",
        "so we can use it to point to anywhere and read the four bytes each time by reading the status uh basically it's the AAR ability",
        "now we we can also fake any fields we",
        "can craft a few metadata in the page",
        "here I think a paper field",
        "by controlling the page of a pipe buffer",
        "basically the aarw Primitive is obtained",
        "so here's the demo",
        "five minutes Mr Wong five minutes",
        "so takeaways uh the the interval of both",
        "the slab and body allocators have been analysis return to page a new and the general exploitation technique has been detailed those two vulnerabilities have been discussed and the exploits have been fully detailed",
        "here are the reference",
        "okay that's all thanks uh by the way since this slide has changed uh you can find the current version on my GitHub later",
        "foreign",
        "[Music]"
    ],
    "0Vv5kLj0tz4": [
        "[Music]",
        "it's my pleasure to welcome Christian Russell to the stage",
        "all right hey everyone uh Welcome to our presentation uh today we'll talk about a couple of uh Android full chains we discovered in the wild in 2021 by monitoring surveillance vendors",
        "This Is Us on your left hand side you have shingyu and Richard they work in the Android malware research team where they work on protecting Android against malware and exploits",
        "and on your right hand side you have me Christian I work in Google's threat analysis group I'll talk a bit uh more about what we do in a couple of slides",
        "so uh the main part of this presentation is a deep dive into an exploit uh we found as part of a food chain uh and xingyu will guide us through this um but before that I'll give you some background on what tagged us and some examples of these full chains and after that uh Richard will go through some post exploitation techniques uh an exploit we found in the Play Store and a bit about defending Android before we wrap up the conclusion",
        "all right so Google's threat analysis group or tag for sure um our goal is to protect Google and our users and one way that we're doing this is that we're routinely hunting for zero days exploited in the wild and as you can see on your right hand side um back in 2019 we reported seven zero days found in the wild uh five in 2020 10 in 2021 so it was a pretty good year for us and so far in 2022 we reported three zero days that we found in the wild and to discover these series um what we're doing is that or one thing we're doing is that we're tracking more than 30 different commercial surveillance vendor so any company that provides um exploits or implants or other offensive services to its customers",
        "um yeah and as I mentioned there's like we're tracking more than 30. so like we often see just a handful of companies mentioned in the media but that's just the tip of the iceberg and this is a very thriving industry with a lot of different companies involved",
        "and one interesting thing that we've seen is that some of these groups are actually sharing or selling exploits between each other so there was one case uh we had a chrome intense logic floor uh back in I think it was 2021 that we saw several groups using the same exploit so there's also some form of cooperation going on here all right and next up I'll talk about two Android full chains that we discovered in 2021 so these are two full",
        "chains from two different surveillance vendors",
        "and the first one um this was discovered by us in October 2021 uh and it was served to an up-to-date Android device at the time uh and they were exploiting two vulnerabilities uh one of them was a zero day in Chrome to get execution in Chrome's rendering process which is heavily sandboxed and from there they need to escape the samox and they were exploiting an e-pol reference counting vulnerability in the Linux kernel and what's interesting about this vulnerability is that it was actually quickly fixed in the Upstream kernel so they introduced the patch like or the bug with one patch and then it was fixed like I think it was a week later so pretty quickly but unfortunately in Android only the first patch was picked up so it left Android vulnerable for about a year I think and unfortunately it's not the first time this has happened this was also the case for another runability known as bad binder which has been yeah documented a lot publicly and this was also quickly fixed in the Upstream kernel but took a while to reach Android yep um so one thing that was interesting with this um full chain uh in the sandbox Escape Park so when they were exploiting this EPO reference counting vulnerability they had a pretty interesting exploitation technique that I just wanted to mention because yeah I thought it was cool and I don't think I've ever seen this documented before so yeah so this vulnerability uh gives an attacker the ability to free a file structure in the Linux kernel uh while you still have a reference to it from userspace as a file descriptor so you have a pretty classic use after free scenario um and the goal of this exploitation technique which is just a part of the exploit it's not like the full exploit but the way that the surveillance vendor chose to exploit the vulnerability uh is to get Riot access to codes and what they're doing here is that they're getting right access to lib C and these changes when they're writing to lib c will be mirrored into every process on the system so effectively this gives you by exploiting this you get code execution every process that uses slip C which is everything",
        "and the steps uh the first step is you map lib C which is your target using a map and then you create some file descriptor that you can trigger this vulnerability on",
        "and um yeah so I've uh in the original code I mean there was a huge bug trigger but I replaced this with f put which is the kernel API for freeing file structures so just to kind of distill it into one slide so it's easier to see but yeah so the next step is like you triggered a bug so now you have a file descriptor that points to a freed file in the kernel and you quickly replace it by creating an MFD which will occupy the last read file structure and then you map this as readable and writable",
        "and now uh we want to free this yet again so",
        "since we replaced this previous file structure by creating another file both of these file descriptors in user space actually points to the same file structure in the kernel so by closing this twice we can free the file structure again and the reason why I have to do it twice is because the Linux kernel has two references to this file one by creating the MFD and one by doing the M map so if we and yet again we replace it so now this um memfd shared memory mapping it has a reference to the previous file which you know should be like a shared mem file but now it's actually lib C again",
        "and this is like the juicy part of the exploit technique what they're doing is looping through every page in libsy so you don't have this Loop looping through every single page and you touch the start of a page this makes sure that the kernel will load the pages into memory from this",
        "um but the interesting part is when you do this for the readable and writable mapping the Linux kernel like the page full Handler will look up the file that's associated with this memory mapping which now is actually lib C and since we just folded in all the pages the kernel is happy and we get lib C pages into our readable and writable memory mapping which we can then overwrite and this will be reflected in every process and this particular surveillance vendor used this to inject a shell code into certain system calls that would then load an implant if it was running in the correct process",
        "yeah that was the first full chain so the second one this is directly related to the exploit that xinyu and Richard will talk about um and this surveillance vendor was using quite a it was a bit different strategy so instead of using zero days against Chrome they were actually targeting a chrome based browser that was lagging behind Chrome in patches",
        "so they could use um end days against these browsers as it was a zero day basically and depending on the version of the browser they have three different bugs that they would bundle uh with their exploit and for the samples Escape part to escape from chrome uh in some cases they were using the bad binder vulnerability that I mentioned earlier but in other cases they were actually using a zero day and you'll hear more about this bug very soon",
        "but first let me take you through the kind of timeline how does it look like for a user that's targeted by this so the first thing that happens is the user receives a one-time link and they click it",
        "and when they click it they're redirected to an exploit server uh and the job of this exploit server is to fingerprint the device and serve the correct exploit depending on browser versions OS version and so on",
        "and in both of these cases for the uh for the surveillance vendors they were targeting Chrome so they have some sort of chrome exploit that gets code execution in Chrome's rendering process and from there at least at the time of uh when we discovered this vulnerability I'm not sure if it's the same anymore but they were abusing Chrome's webassembly code mappings because they used to be readable writable executable so they put some Shell Code and elf loader yeah and they're explaining there",
        "and by jumping to this elf loader they load a local privilege escalation exploits and with that I'll hand it over to shinyu",
        "there we go thank you Christian so uh we're gonna do a div dive to the zero day we captured and it's also fixed in the last November it's a CV 2021 0920 so it's the most probably the most complicated Android uh kernels exploit last year and it could also be one of the most convoluted exploit in across the newest kind of History in terms of this uh broadcast analysis and exploitation techniques so basically we capture two major versions of exploits so the expiration version a targeted at recent early devices and expert B Target our recent devices so everything starting at a very simple kind of features that users can send fight this graders to other process by something called SCM let's call it right datagram by send message Cisco so let's say I am a socket fight in square a and I send a cell to a 5D square B so what happens in kernel is that first of all kernel Atticus structure called SK underscore buff or socket buffer or AKA as SKB at attend the circuit buffer to",
        "the receiver queue and as you can see there's one field in the socket buffer point to another newly allocated structure called Sam underscore list and",
        "it contains an Aries of file Founders that point to the file in the flight so from our receiver point of view it received the message so the socket platform is removed from the receiver queue and get free and kernel will install another file disclosure C in terms of the 5A so as you can see the 5A now has two reference count okay so however let's consider the following scenario like I am despite this group a I send a cell to B and B Center cell 2A and then what happens in the user space is that uses space cross A and B so there's no way for the kernel to destruct file A and B because they still have a reference count but there's no way for the user Space Program to calculus again because five Distributors are already removed from kind of descriptive table so that's why we need a guard reflector in the Linux kernel so for example every time you you call close this car it may trigger W collection system and the way to identify potential garbage is to implement something called in Flight count so what does inflightcom means is is pretty simple is that you know if there's a file in the flight then we just increment the reference in Flight comes so as you can see the Ace in front count is one because a is in the fly so similarly it based in flight card is sort of one so as you can see the replica here equals to the infrared count so it could be a good sign of potential garbage but it is not always the case if we consider this cycle like a center b b send itself to alpha alpha centers out to 3 and b Center a so if you're the Space Program close A and B what happens here is that the Run Ace reference count equals to the inside count and B's infinite account equals to the reference count so A and B are considered as potential garbage but they are not actually garbage because we can guide 5D square B from 5 Discord Alpha and we can get 5 display a from the 5D is great to be so for our coverage collector point of view is that first of all A and B are considered as potential garbage so A and B are put into Global list called GC underscore candidates",
        "and then what kind of does is to scan the inflight for the GC candidate so let's say the criminal scans a first so it will check a receiver queue okay so a is the reciprocal Q is B and because B is also in the GC candidates what kind of what does is to decrement these inflate columns so this infrared count is decremented from two to one and similarly Ace infinite count is also document to zero however as a result because this infrared account is still above zero so B is not considered as a garbage what kind of will do is to recursely restore info account so this info account will be restored to two and Ace infant color will be restored from 0 to 1 and no one is considered as garbage so however if you consider the the formation on breakout cycle A and B are considered as potential coverage so they are put into the GC candidates and scanning flag process will lead to the foreign result that A and B's inflatcom are both zero so all of them are considered as garbage so the final step for the kernel is to improve this garbage is by remove and free the socket buffer and then digital 5 in and P so we also have two ways to cause receive message so if we call receive messages call without massive Peak flag first of all it will synchronize with GC which means that kernel will install a new fight distribution artwork before did she say finish so what happens in kernel is that the receiver will remove and free the socket buffers and install another file distributor however if we",
        "call receive message with massive Peak flag it doesn't synchronize with GC it means that we can have one third cause received message with message Peak flag while there's another thread doing the GC in the meantime and also from receiver point of view it will not remove the socket buffer so and and kernel will still install another file description so you can see and the a reference column can get elevated okay so now we really want to introduce the vulnerability scenario so like I said the issue here is that the recently message with massive big flag doesn't synchronize with GC so there will be one file and the reference can't get elevated however you know this kind of vulnerability is difficult to trigger because you know most of the time you heard about is like hey the file reference can't get decremented by accident so how to do how to get a user-free by elevator file files reference count however it's very complicated and unfortunately we are not going to go through details here but we will illustrate call Ideal um so you know the color here that I received message zip code doesn't synchronize with uh with massive pink product and simplified with GC so if we at least we are very very uh complex and consistent GC State and various subtle risk conditions here uh when it leads to a result in a user-free in the socket buffer so uh you know we have to create three main threads one thread does GC and two or two tasks cause risky message with some good results massive Peak flag and through a very comfortable coaches are one of the receiver will receive a user-friendly socket buffer object so the patch here is actually pretty simple you know it's just called spin long it's being all in two lines to make sure like uh the best it picks the top will install a fighter skirt before GC have completes and interestingly the current bug was found in 2016 and you can see you can check this email address because there's a public Linux kind of email address unfortunately the patch was not accepted so that means any Bad actors see the ones kind of email thread may come up with an exploit against the Linux and Android users okay so now let's take a look at how of the Explorer a does so A is for the old devices so first of all you know there will be a lot of thread in living and the way to win the risk condition with higher chance is to generate as much coverage as possible and it's also a good sign for detection and in reality there will be really a lot to us including each other sometimes for history some threads for fixing the kernel structure for for backgrounds and there will be also a lot a lot of threads to impact on schedulers and through very very cool choices there will be very small chance that you will have a useful object and also get history so that's why the X-ray tries 250 times for getting a free soccer park object and also spray on the circuit buffer object is not it's not easy because circuit buffer object is allocated from our separate cache so that means the conventional ships to the technique doesn't work but there is something called cross-catching pad is that you know if we can free all the circuit buffer object in The Sims lab page and freeze so the page may have the chance to be returned to the page allocator that might be used by other cache that could be impacted by the normal confessional history technique but the chance is very small and now assume we can spray the SKB and we can control that SKB data what happens here in kernel inter if we call the receive message Cisco kernel will copy address from SKB data back to user space so now the question here is that I have no information disclosure what address I should read so for the actual sample a it's very interesting because it reads our physical address and it is the page size data calculated md5 hash value comparing with a hash table with 512",
        "values so you can calculate the kind of base of the that so why does it actually reads our fixed and address so we",
        "believe it's because OEM X invent is on things for current based realization before mainstream kernel and based on the exponent it only randomized nine base at 4K alignment so an attacker is due to excess of that it can address locally so by having a semi arbitrary they actually is able to iterate in the tasks and find the exact type structures from its one within chart process and get the address of the address damage so if you run your Android device which can use conversion lower than 4.14 overwriting the address limit to like minus two where that and user users",
        "based program is able to write object kind of address so to get the arbitrary right perimeter they actually has some very rare things called kernel stagger for primitive and so basic idea here is that you know if user Space Program initialize something called Unix address and pass it to the kernel what kind of what does is to cast mem copy to copy the the name of around the user's address and as you can see the address here is from the SKB because we have control of SKB so presumably if we have the control of the SKB SK then we can craft a stack Overflow so if we have stock flow we can corrupt a lot of Stack variable from the above or three voltages underscore recent message so this is a bigger diagram and this is the affected area of the stack Overflow if we can control the SKB SK so the way to do so or bypass privilege access level is that the experts use in map Cisco and create a USB memory with mapshare property and because map sure property is not affected by the copyright mechanism so the first time reading memory will trigger the page fault so as a result the current way allocator Page and the expert is able to use its semi option real printer to find to dump the entire Corner stack and find the pointers or page pointers and use page to Verge macro to get a corresponding kernel address",
        "in other words the expert is able to you know get corresponding kernel address but the pressure the user-based memory and kernel space memory maps to the same Facebook pages and then you can craft all the fake kind of data structures from the user space memory and it Factor trigger the stack Overflow so once you do so and and Trigger stack flow here is what actually looks like so first of all there's one very critical stack variable called massive header get corrupted so every time when a receiver calls receive message the kernel will be tricked to use the corrupted method header and then we kind of believe that hey we are using the pipe data structure so you will look at the fake pipe data structure so the the right destination address here is it pointed to the touch structure and the source address now the point is SKB data and it just points to it points to your keyword which you feel with -2 so as a result if the receiver called receive message uh the fake pipe data structure will be utilized so the address limit will be over breathing against matters too so using space program can call option unit right primitive to do uh to get a room privilege okay so uh let's talk about expert sample B so actual sample B Target out a recent version so there will be no issues in implementing aslr okay so you know anytime what we",
        "have a user 360 buffer the SKB data will be free to and if like in the if I stand a fighting spirituality I learn the task the kernel will allocated structure called essay on FB list which contains an area of five pointer that point to the final flight okay so when the escaping part so when SKB gets user-free we can somehow to history to history on the SQL data to the newly allocated LCM activities so the strategy here is that the activate sample spans about 85 Distributors for opening five a device new and then from the receiver side it will receive like 80 kernel file adjust so you know there will be several file structures occupying an entire slide page okay so if we close these five descriptors and do the history by sending socket datagram that means we can control the entire stack page and then we can craft the all kinds of fake pipe data structure here to this is the control stack page so the next question here is that how to link up with our normal file to this fake pack data structure so this is what the online Premiership came to rescue so well victim tells receive users free socket socket buffer it may invoke something called SV on link and by springing on the SKB and override the next and privilege to some uh malicious address then what happened in unlink is that the number file especially the private data get hijacked it to the controls that page address or to be more specific is the pipe in node info so the pipe in node info designate kernel that hey we have two following pipe buffers for arena right primitive and the next issue here is that Pi buffer offs is not initialized so we can now use this fake pipe structure now however initialize",
        "the pipe off is a type buffer off is very easy just write one byte to the pi so the color will initialize the up first and by reading the socket used to occupy the slab page we can link the entire slab page including the pi buffer a lot so we can effectively by pass the ASL and we may also do the something called type migration to bypass privileged access never so to sum up we by",
        "manipulating the type buffer page and type buffer offset we can achieve a kernel object in the right primitive and this is one more method to bypass the hardware level of mitigation user access override and we call it as Pi primitive and we see in the Y expert use this tricks into the alternative so since you have the option green right perimeter you can get code execution you can recover a kind of simple table address so for more information please stay turned on our project table guest blog now please welcome Richard for talking about post exploitation techniques thank you okay thank you",
        "so post exploitation",
        "um the attackers at this point have got a kernel read write so you might think the next step is the normal status SE Linux to permissive and overwrite the process credentials so you become uid 0. however in this case the target devices concerned have a hypervisor providing an additional set layer of protection the memory containing SE Linux enforcing is read-only the process credential structures are monitored so you can't edit them and unprivileged user mode processes aren't allowed to call useful functions such as rkp override creds or power off command so the attackers need to find other ways to change SE Linux and set their user ID so for SE Linux the exploit code finds",
        "some important static variables by analyzing instructions in SE Linux related kernel functions they find an adrp instruction which if you know arm assembler it's referencing some data find the instruction you know the address of the data the exploit code can then extract the SE Linux policy make some modifications to it refresh",
        "reload the database and effectively SC Linux has been made permissive so what about uid 0 this is a little bit more complicated the real-time kernel protection mechanism trusts its own executable system bin SMD exe is",
        "executed as a privileged process so this gives you an initial point of entry for getting the back door running a second executable simple perf is used to get the the full back door running so how this works inject a bit of Shell Code into SMD exe",
        "this does then use rkp override creds",
        "because it is a trusted privilege process so that sets itself to root uid 0. the full back door has been put into simple perf so SMD exe then runs simple perf at which point we have the entire back door running as uid 0 and SE Linux is effectively in permissive mode",
        "right what do the attackers do with this um to begin with it's pretty much what you might expect they upload a lot of information off the device focusing on social media databases messages that kind of thing the list here isn't comprehensive we didn't have space on the slide to fit all the path names on but you can see Social Media stuff at the top Android accounts databases at the bottom and there's a spelling mistake highlighted in red which we'll come back to later after copying various data off the device the attackers then go through and disable a lot of system security settings again they",
        "change more settings than are shown here but we didn't have space on the slide so the device is now at increased risk of other malware because security settings",
        "automatic updates Etc have been disabled",
        "uh a number of third-party anti-virus applications are also uninstalled again potentially placing the user at greater risk of random other malware and finally the back door can clean itself up if it's commanded to do so",
        "now Christian earlier mentioned cve",
        "2019-2215 so I'd like to go back to look at a particular instance of that as a reminder of the timeline in late September 2019 Maddie Stone from Project zero identified the vulnerability and",
        "tag confirmed evidence of exploitation in the wild October 2019 Android patched the",
        "vulnerability we wrote some detection for exploitation and",
        "sent that out to see what we could find so what did we find well we found an",
        "exploit four CV 2019-2215 uh slightly more interestingly",
        "it contained references to a couple of Android applications within it one of which is shown here pictivio viewer kit this was on play at the time we found it and interestingly it had been uploaded to play in February 2019 some seven months before we knew about the",
        "existence of CV 2019-2215 as you can see on the right hand side of this slide that's quite a comprehensive list of permissions this image viewer has you probably don't need all of those in order to render images on your device the second application wasn't on play that was an off-market application masquerading as an app from Google using the Google Drive icon pictivio viewer kit didn't have very many installs we saw less than 30 lifetime installs by the time we spotted it",
        "there are a number of similarities between the payloads in 2019 and the payloads in 2021. the elf files exported",
        "a function which was essentially a self-loader call that function that",
        "patches up the L file for where In memory it is at that time processes all of the relocations and resolves all of the Imports what's shown on the slide is something else that we saw sometimes the elf header was overwritten by a fairly simple shim which calls the self-loading function this is the 64-bit shim there was another very similar one for 32-bit so you can treat the L file like a blob of Shell Code just drop it off in memory jump into the beginning of that block of memory and itself loads so everything is fixed up no extra hassle as in 2021 in 2019 the payloads",
        "were injected into various privileged processes",
        "the list of similarities goes on uh security settings disabled files to copy applications to uninstall Etc and we see",
        "here the same spelling mistake in the 2019 payloads as in 2021",
        "that config file hasn't actually been in that location for a little while so maybe the attackers just didn't clean up their standard list of files to copy",
        "right uh what are we doing about this well native payloads anything written that compiles into arm or arm 64. you've got to have executable memory to run that in so if you can see some unexpected executable memory turning up in your process it might be interesting to have a look in that memory to see what the contents are the information shown here is from one of our internal analysis systems running Chrome where we've given Chrome the cve 2020",
        "16040 exploit again that Christian mentioned earlier if you look here we can see an interesting length blob of memory is",
        "being made read write execute and then slightly below we can see a system call is returning into this potentially",
        "suspicious block of read write execute memory so there's definitely some code in there and happily our analysis system captured this blob of memory and saved it out for us so here's the beginning of that potentially suspicious blob of memory and the first thing that might catch your eye is there's an elf header at a rather unusual offset normally you'd expect to see the elf header at the beginning of the page or as I mentioned earlier uh depending on what you're looking at potentially in this case overwritten by the shim jumping into the self-loading code the data before the L file here is another shim this one's potentially slightly more interesting it copies some data from one location to another location and then it jumps into the self-loading export from the L file",
        "so yeah this",
        "tldr this is the exploit payload that shinyu has just explained in great detail uh so this takes us full circle tag found the Chrome remote code execution being used in the wild it contained an interesting payload which turned out to be a zero day the payloads in 2021 have some very strong similarities to the older payloads and in both cases the",
        "exploits concerned are relating to patching mismatches you could call them between Android and Linux where perhaps a patch wasn't applied in one whereas it was applied in the other or something was missed out so CV",
        "2021-0920 was a very complicated vulnerability and it was quite complicated to exploit the developers came up with some rather interesting behavioral Primitives in order to make everything work",
        "researching and implementing all of that must have taken them some time so they're obviously fairly well resourced to be able to do it because it might not have succeeded the faster the security industry can find and patch things like that the better we can protect our users and the more time and money it costs the surveillance industry to maintain their capability against things",
        "so we need to reduce the time it takes us to detect things to patch things and to get the updates out there in order to keep protecting people the faster response we can do this the better hopefully things like vulnerability reward programs are going to help with this because it encourages people to submit things to us and they'll get some reward so with that I think that's the end thank you very much for watching everybody",
        "[Music]",
        "thank you"
    ],
    "wfZHQocTsZo": [
        "[Music]",
        "foreign",
        "security expert at Ledger my daily rule is to evaluate Hardware wallets against fault injection and search General attacks and today I'm going to present unlimited results breaking firmware encryption of esp32 V3 it's a joint work between me and Olivier rivo and Adrienne tier",
        "well why I'm going to to do this presentation today",
        "I think most of you you know esp32 it's a very well-known microcontroller it's a low power SOC it has been deployed in the market since several years and espresso actually announced it's selling like 100 million devices in the market by 2018. and what's very important for me is that it recently it has been deployed as a main microcontroller in the hardware wallet called Zed the vendor is block stream and if you are going to open the hardware wallet actually you are going to find an esp32 V3 chip and also an external flash memory however the external flash memory is used to store the an encrypted firmware however the",
        "firmware encryption key is stored in the esp32 V3 so my role actually is to evaluate this Hardware wallet against fault injection and search channel attacks in order to extract this key",
        "why esp32v3 not esp32v1 for example by",
        "the way there is no any esp32 V2 so regarding esp32v1 it was attacked by",
        "limited results in 2019",
        "the main idea is that they already attacked the secure Boot and Flash encryption mechanisms they used power a",
        "powerful injection using bar glitches in order to perturb the effuse protection bits during the power up and after successful forces they already obtained the ifuse keys the firmware encryption and secure boot keys as a reaction against this attack expressive announced esp32v3",
        "by 20 2020 and the main idea is to patch a the new version against the the attack of limited results so the new version esp32v3",
        "has several features like new secure boot they use a an RSA based secure boot in order to avoid storing any private keys inside the effuse and also as announced by espresso that the new version contains Contour measures against fault injection attacks by hardware and software",
        "well the outline of my presentation first I'm going to present the security feature of esp32 V3",
        "and also after that I'm going to to show you a homemade fault injection setup that I'm going to use it in order to evaluate esp32 V1 I mean to reproduce",
        "attack of limited results using electromagnetic filter injection and after that applying the same scenario on esp32v3",
        "and after that I'm going to discover a new attack path using side Channel attacks to break the firmware encryption and then I'm going to to make the attack practical on a hardware wallet I mean the jet Hardware wallet that I already showed previously and I'm going to terminate by the vendor reply and the conclusion",
        "so regarding the esp32 security features",
        "well esp32 has a lot of features but let me concentrate on the security feature of the chip itself so it has secure boot it has flash encryption and also 128",
        "bytes of OTP in order to store some secrets and also some crypto Hardware accelerators such as es RSA",
        "random number generators and elliptic curve as well you can use the ESP tool in order to activate the above features and the ESP tool it's an open source tool which delivered by espressive and you can find it online on GitHub for example well regarding the ifuse organization the ifus as I told you it's like 128 bytes and it's divided into four slots for example the first slots the first slot is used and reserved for the system for the system purposes in order to store the setting of the of the chip itself I mean the the flash encryption mode the secure boot if it's activated or not for example and you can find block one and block 2 in order to store flash encryption keys and also the secure boot keys in a row and the last slot block 3 is used for the user application itself well let me say that it's impossible to to get access by the software on block one and block two because they are protected using ifuse protection bits which are restored in the boot ROM itself and uh the only entity which is responsible for reading those keys actually is is a hardware of esp32 that already use this kind of of keys during the power up in order to whatever to to perform the flash decryption or to perform as well as a secure boot well let me talk about secure Boot and they have two versions of secure boot they have secure boot version one for example so the main idea is that if you have a firmware the firmware had it has a good loader and the public key the main idea is that you have a key which is stored in Block 2 for example which is responsible for the secure Boot and this key is used to encrypt the bootloader and the public key using es-256 and after that the output is hashed using shaft 512 in order to generate what we call a digest and the digestive the digest is a store outside in the in the flash memory and during the power up the same process is executed",
        "and after that the comparison is performed in order to to take the decision to continue or not based on the comparison if it's correct or not well regarding regarding the flash encryption as I told you it's a security feature of esp32 the main idea is to protect the the firmware which is stored outside in the",
        "external flash from any axis",
        "well as a flash encryption uses block one for uh for encrypting and decrypting the Flash content and in order to encrypt The Flash they use es decryption and in order to decrypt The Flash they use es encryption and the during the power up the flash decryption for example is performed however they use something called the key tweak in order to change the key every 32 bytes and this key tweak is like an address dependent so if you know the address you can generate the key tweak so at the end you will find it will be like a constant and it's only used to change the key of research to two bytes the first slot which is is manipulated from the flesh during the power up is a bootloader data which is is stored at address uh one key decimal hexadecim",
        "so you can use the following commands in order to activate and store uh the flash encryption key through the ESP tool",
        "theft the attack of limited results well as a concentrated on glitching the ifuse protection bits during the power up you can see here in the red the already register support trace the power consumption Trace during the power up and in yellow is a voltage as a voltage source to the to the chip itself you can find that during the power up they start to inject some glitches you can see here the voltage drop and this is the correct moment that the already glitched the ifuse protection bits once they already performed a successful fault after that they can execute the memory read command in order to dump the ifuse slots containing the flash encryption key and the secure boot",
        "let me talk now about the voltage injection setup",
        "why we need or why we perform uh fault faults so the main idea is to perturb the chip during the execution of sensitive operations for example if you if you have a secure boot which is running you can inject let me say electromagnetic fault injection or laser or pole power fault injection in order to bypass the the security or the or the signature verification during the execution of secure boot and also if you have an es which is running you can inject faults during the execution of the es in order to execute or to attack the key using a differential filter analysis for example",
        "well I'm going to concentrate in my evaluation about electromagnetic faulty injection and I'm",
        "going to use a homemade fault injection tool we call it silicon toaster in order to inject the electromagnetic pulses the main idea that you have a very high voltage which is stored in the caps and this voltage actually is applied to the or into the electromagnetic",
        "electromagnetic probe here which is like",
        "a coil in order to generate a current and the current is going to generate an electromagnetic field and the electromagnetic field is going to be in touch with the surface of the chip trying to generate or to perturb the",
        "chip and trying to inject faults the tool is able to inject faults up to one k volts and I'm going to use it for the evolution",
        "well in order to obtain a very stable setup we decided to fabricate a BCB so the main idea is that you have an esp32 here and on the top of the PCB",
        "and after that there's the external flash and we select it actually to have some vdd pins or eyes here in order to control the value of the vdt during the experiment and also there is an external oscillator here in order to control the clock",
        "well regarding the electromagnetic faulty injection setup so I'm using a silicon toaster in order to inject the electromagnetic pulses and also I'm using an oscillator here in order to monitor the power consumption during the experiment and I'm using the x y z table here in order to move the Probe on the surface of the chip and also I'm using a scaffold which is a board which is fabricated inside our",
        "the computer",
        "well the dictionary",
        "for the first time I'm trying to to prove that the ability of of of the electromagnetic voltage injection tool in order to inject successful faults so I'm going to first apply",
        "um fault injection on a glitchable application on a very simple application code on esp32v1 the only thing to do",
        "that the target actually is to is to be sure that the the tools that I have is effective and to keep some parameters in order to go for the next step so next step of course is to reproduce the attack of limited results and after that I'm going to follow the same scenario that I did on esp32v1 and repeat it again on esp62 V3 to see if there's a difference or not well let's talk about the electromagnetic fault injection on esp62v1",
        "you can see here on the left this is a glitchable code there is a loop and the main idea is to inject a code to",
        "the counter and on the same time I'm going to to scan the electromagnetic Probe on the chip surface here",
        "well after scanning all the chip surface using 500 voltage I mean the is a pulse value and regarding the polarity of the of the pulse I mean I'm injecting a positive polarity and I'm scanning 500 trials per spot and the motor stable is like to 200 micrometer I found here",
        "upper on the right I found a very interesting Zone where I obtained successful faults that I was able to to skip from the loop so this means that the fault injection tool that I have is effective and I can obtain some successful faults using it so now the next step is to reproduce now the attack of limited results on esp62v1",
        "well the steps is that I followed it's like the first thing is that you have you have a firmware you encrypt you store the firmware encrypted and the external flash and after that you enable uh you enables a firmware encryption through is a command that I show here and after that I started to track the power consumption of the chip during or while the flash encryption is enabled I found that there is a very interesting early activity here after the power up",
        "that may be very interesting in order to shoot or to inject faults during this period why because I make I'm expecting that the if use fault the ifuse protection bits are manipulated during this this time",
        "well so the scenario that I use the I used only one single filter injection pulse here it's a count and after that I'm going to initialize the policy generator to to deliver like the pulse switch and also the offset and to control them and after that I'm going to restart the chip and the during the restart I'm going to inject some faults and in case of a successful fault after that I'm go I'm going to execute the read memory command in order to dump the effuse",
        "surface I already obtained some successful faults however I obtained two different successful faults here you can find after the experiment log for example here Loop Number Four you can find this is the correct key that that I already stored however in five I flipped the",
        "this key by only one one bit here",
        "why there is only one bit difference because there is a chance that when I injected the faulted during the power up maybe I also corrupted the the value of the ifus which are manipulated from from the chip itself so this it's not a permanent fault actually but it may happen if you if you already inject a fault during a certain time during its power up",
        "so I started to register the board traces in case of successful faults and here you can find this is the correct timing and you can find here the effect of the electromagnetic uh pulse during the power up and on the right here you can find the The Zone where I already obtained the successful Force",
        "evaluation so I already you injected",
        "successful faults in order to dump the ifuse reproducing the attack of limited results on asp32v1 I used only a single fault",
        "single fault pulse and the success rate was close to 0.6 percentage",
        "and now lets me pre-produce or take the same scenario on esp32 V3",
        "well let me recap the counter measures that has been added to uh to esp32 V3 so zero",
        "more es for example so the store only is public key which is not secret and safe uses and also the new version is hard is hardened against faulty injection attacks and software on the hardware as announced by expressive and also they added another features called uart disable in order to stop the communication with the bootstrom to execute this kind of read memory commands",
        "so the same scenario I have the glitchable application and I started to scan again esp32 V3 chip using the electromagnetic fault injection",
        "I kept the same attack parameters and I obtained also a successful fault I'm I mean trying to skip from the loop of the glitchable application so I was able to to skip successfully from this Loop and you can find here there is a very interesting Zone that I already obtained successful faults well this means that",
        "esp62v3 is not equipped with a fault",
        "injection counter measures like for example glitch detectors or something like that so the chip doesn't have any Contour measures against fault injection but let me now try the attack of the effus uh on asp32 V3",
        "I followed the same scenario I have a key I stored it in the fuses I enabled the firmware flash encryption and I stored the encrypted flash in the external memory and I started to to track the power consumption and I found that the power consumption during the power up in case of esp32 V3 is completely different from esp32 V1 so you can see now the difference there there is a three uh different blocks which are added here so this means that they don't have the same boot ROM they may have some verification blocks which are added in order to fight against fault injection attacks well this means that I need multiple faults in order to perform a successful attack so I changed the attack scenario I try to randomize the number of faults and also I follow the same scenario here I initialize the policy generator and also I restarted the chip trying to inject faults during the power up and after that in case of a successful fault I already I will execute the if you read memory command",
        "I would like to stress here on not activating that you are disabled for the moment okay",
        "well unfortunately I have not obtained any successful fault the only thing that I obtained I obtained zeros which is the case that the success the fault is not successful or I obtained as a timeout why I obtained a lot of timeout that ship got crashed several times because of I injected electromagnetic faulty injection several pulses in a row so this means that the electromagnetic fault injection is very aggressive to the chip if you are injecting several pulses in a row try and the chip got crashed several times actually so for the moment I'm I'm like in a situation that okay I have a new version of the chip it seems that esp32v3 has a different boot drum that contains counter measures against fault injection attacks and multiple fault faults may be needed but unfortunately using electromagnetic faulty injection several pulses are very aggressive to this achievement I obtained a lot of time out so I have to find another attack scenario or another attack path",
        "well during the the investigation of the ifuse attack I started to look at the documents of expressive trying to find something different to do so I just found that they didn't talk about side Channel attacks there is no any counter measure so maybe if I'm going to switch the text scenario to side Channel attacks and targeting The Flash decryption maybe I'm going to gain well so it's a motivation for me to have a chip that which already batched and to find another attack scenario so what I'm I I have been thinking to do is to Target The Flash encryption decryption during the power up and after that if I will do that successfully I can control the flash content and after that I can perform what we call correlation power analysis in order to attack the flesh encryption or decryption key but before",
        "describing the attack in detail let me stress on some search channel basics for example like leakage detection so why we need leakage detection so assume that you have an es and the es is running on on on on a chip and the power consumption of the chip for example is very low and you are not able to identify the rounds of the es so it's better to perform this kind of of statistical tools like leakage detection in order to localize exactly where is the ES so we use it actually to reduce the time of the evaluation and there are several techniques in the literature that you can find for example the SNR the signal to noise ratio in icv or the t-test for example here I'm I'm going to use SNR signal to noise ratio that you can uh use it using the for the following formula here where X is the real trades real portraits and Y is a label uh of the value",
        "regarding the correlation power analysis it's a it's a very well known side Channel attack and the main idea is that for example if you have an es or you have a crypto operation and when you measure the power consumption during the execution of this crypto operation the power consumption is like a key dependent so this means that if you have an es and you are going to register the power consumption traces during the execution of this es you can build an offline model for example trying to assume all the keys if you are targeting one byte of the key so you are going to have a 256 assumptions of the key and after that the correct assumption is going to give the maximum correlation between the model and the",
        "measurement itself well after the model you can use several leakage leakage models such as Heming weight or Hamming distance for example and if you are targeting the yes we prefer we always prefer to perform the Hamming weight on the Xbox's output of the Xbox because we we believe that the Xbox is the most consuming part during the execution of the ES so China Tech setup so what I need for the moment I need a high-end oscilloscope in order to capture the power traces during the power up and also I have an esp32 chip on the top of scaffold board and after that I'm going to enable The Flash encryption mechanism",
        "let me recap again what happens during the flash encryption so it's used to protect the external memory and there is a key which is stored in Block one which is used for encrypting and decrypting the Flash and this key is tweaked every 32 bytes however the first address which is manipulated from the external flash is address 1K which is a bootloader which is stored in the external flash so this means that if I can control the the address which is uh which is like a bootloader it's external flash and then I can Target the the firmware decryption",
        "during the power up I can gain and I can perform this kind of Channel attacks",
        "well I started to to look at the power consumption during during the power up while the firmware encryption is is activated so you can find here in red the power consumption of the chip and in yellow I started to spy on the SPI clock of the external flash in order to see where the data is manipulated because as I told you the first slot which is manipulated is the bootloader which is stored at address 1K so you can see here there are two slots flash encryption one I mean the communication",
        "one and also communication too and after that there are two zones A and B so for the moment the first slot of the bootloader I mean the first 32 bytes are manipulated whether in a or in B zone so in order to know exactly where the the 32 bytes are",
        "manipulated I am going to perform an SNR on the value of the bootloader itself so I'm going to follow the scenario I have some some random 32 bytes for example to generate and after that I'm going to raise the Flash and write is a bytes on the flash at address one key this hexadecimal and after that I'm going to restart the chip and then capture a Power Trace",
        "well I started to look at Zone a for example and running the SNR on the on the bootloader values and it seems that the SNR curve is here the 32 values of the of the of the of the bootloader you can find here the SNR is very noisy so this means that um the first 32 bytes are not manipulated during the Zone actually and after that I tried to to do the same but around Zoom B for example so I find a very a very clear SNR here you can find a 32",
        "Peaks that means that the values the 32",
        "bytes of the bootloader are manipulated here in Zoom B so this means that after manipulating the first slot from the bootloader so this means that the flash decryption is performed just after",
        "in order to know where is the es exactly performing",
        "you can see that I have a 32 bytes are manipulated from uh from The Flash",
        "are divided into 16 bytes each one and after that there is an es which is running two times in order to decrypt The Flash so I started to um to trigger where the ciphertext of the first slot and the second slot is the ciphertext are manipulated where exactly so now I can see that okay I have the SNL on the plain text in the zoom and also I have for example the ciphertext the SNL on the ciphertext so in between there will be the ES so I targeted the SNR of the first slot of the ciphertext I find there are some bytes which are here so this means that",
        "the es encryption of the first slot are executed just before and also I I repeated the same to Target the snare of the of the last 16 bytes of the bootloader which is a store that address one key here so this means that",
        "before the zones there is the es which is executed so now I'm pretty sure about the es where it's manipulated I mean the",
        "es for example of the second part of the bootloader so it may be manipulated here actually so I can perform the side channel here",
        "well for the moment I don't have the ability to store several keys and change the key every time on the OTP because it's like on OTP so I won't be able to to know where the intermediate values of of the years are manipulated but in order to be sure from the time zone of the execution of the years I started to reverse the results of the CPA I know for example history and I started to",
        "to Target the history to run correlation power analysis and to see the maximum correlation of the Q3 for example where I can find the maximum Peak so if I can find the maximum peak of the correct key this means that yes this zone is the es where uh where's for example the second",
        "bootloader slot are encrypted during this Zoom so I found several maximum peaks of K3 for example the correct history here one two and three so now I'm pretty sure that the es is executed here but the problems that I have now is that I already okay I I managed to get 100K traces but using the external flash every time I write and erase uh there is The Flash writing and erasing limitation so I'm I'm just limited with 100K traces so every time I have to uh I have to remove the remove the Flash and solder another another Flash and I found there is uh there's a certain difference between the behavior because of the noise that that may be generated from changing the flesh every time so we took",
        "the decision actually in order to to make a flash emulator I mean to to store the 32 bytes the random 32 bytes on shift register on a scaffold and deliver it to the MCU during the power up so in this case I will be able to register unlimited traces",
        "well when I removed the Flash and I used the flash Emirate emulator I was able to to find and improve actually the signal to noise ratio of the of the power consumption and you can find here for example several Power traces which are uh",
        "which are up to to each other's and what I used here I used a very simple alignment to in order to align them to to be ready for performing this kind of correlation power analysis and I started to track history the correct history for example so I found here this is a maximum correlation of the correct key I mean Q3 you can find it's a it's a there's a very big difference between the correct key and other key assumptions so this means that I'm able to perform a correlation power analysis here successfully well",
        "regarding the model uh the leakage model that I used I used the Hamming weight for the for the first round and for the second round I use the Hamming distance between the two boxes of the first round and the second round and and actually this this kind of tweak to find the model of the second round it helped me to to attack some keys that I already I was not able to attack them using the normal Hamming weight model",
        "like the first round otherwise you are going to find three keys which are not very well uh",
        "attacked successfully so you have to do some Brute Force attacks for example in order to attack those keys well so now I was able to collect more traces I was able to for example to get 2 million traces so I got I got like 2 million traces I aligned with them and I started to uh to to perform what we call a key rank in order to measure the success of the uh of the attack I mean the key rank when you increase number of traces the correct key should goes to one this means this is the correct key and I was able to attack all the keys except key zero for example within like 400k traces however if you would like to attack k0 and you don't like to brute force it you have to wait for example for uh two million traces in order to attack it successfully",
        "well for the moment I have to also activate the other security features of esp32 V3 like secure Boot and uart disable and for me actually this kind of security features are not very important because a secure boot is already executed after the flash decryption so the first the first operation that which is performed is The Flash encryption and also for the UR disabled here we don't care about you all disabled because we we are not communicating with the chip uh with the boot ROM of the chip in order to execute this kind of read memory command because I'm using uh the flash emulator",
        "so after activating all the security features I was able to attack all the keys all the keys of firmware encryption that used for firmware encryptions and 32 bytes of the key as I told you there is only key zero here which is not stable but you have to wait for more traces up to one one million and a half for example to to get a very stable attack or to Brute Force risky and this is very easy actually so it was a practical attack now so I started to invest the attack results that I obtained in order to uh to attack the hardware wallet that I mentioned it at the beginning which is Jed wallet it's a block Stream So as I told you that Z is an open source and open Hardware wallet unfortunately it doesn't store the pin inside the MCU itself the pin is is verified on the server of block stream so the only thing that I can perform now is the FL the the external flash it has a public key and a private key of the user that can communicate with a server of block Stream So if I am able to uh if I'm able to attack the private key of the user this means that I can clone the device and inject some back doors",
        "so what I did actually is just to remove the esp32 from V3 from the from the red",
        "wallet and plug it inside my setup just solder it in on the PCB and it start to repeat the experiment and I was able to dump all the keys as I told you within like 400 kit races I have all the keys except key zero which can be brought forced easily",
        "so now you can find that this is the encrypted firmware of that and I use the keys that I already dumped by side Channel attack in order to decrypt and I was able to obtain the private key of the user that which is used for the communication with the block stream server so now I can clone the wallet I can inject the back door for example to perform transaction to substituted addresses what we call like even made attack",
        "let me talk about the vendor reply and the conclusion",
        "I started to communicate with espressive in October last year",
        "and we started to to talk each other about the counter measures and how they can improve the product actually and in may they published an a security advisory about the attack and the conclusion of the security advisory is that this attack is applicable to all esp32 chips in the market including esp32 V3 and period versions",
        "esp32 S2 C3 S3",
        "well and unfortunately they won't be",
        "able to patch this kind of vulnerabilities what they have to do is to change the Silicon and and actually in their security advisory they wrote that the future products of espresso food contain this kind of Contour measures against side Channel attacks",
        "so let me conclude you can see that I already presented a a deep Hardware evaluation for asp32 V3 using electromagnetic filter injection and side Channel attacks so by experimental results I proved that esp32 has a hardened boot ROM against faulty injection attacks",
        "and also when I found that I am not able to attack the trip using electromagnetic fault injection I changed the scenario the text scenario to side Channel attacks and I was able to dump the overall key which is used for the firmware encryption using like 400k traces",
        "and the attack is generic and works on all the products of espressive",
        "and well at the end I would like just to say that protecting against faulty injection is not sufficient and also the vendor should consider this kind of attacks and to combine them with the faulty injection so this means that if you if you are a vendor so you have to consider seriously combining fault injection inside Channel attacks counter measures together thank you very much foreign",
        "[Music]",
        "[Music]"
    ],
    "qP5newEq5iI": [
        "[Music]",
        "foreign",
        "event driven Cornucopia representing the",
        "binary team Windows management instrumentation provides the ability to",
        "manage Enterprise devices both locally and remotely",
        "various tools edrs and Sim Solutions leverage this functionality for",
        "performance monitoring and device Telemetry Gathering attacking this uh",
        "the this functionality can blind all these solutions that rely on this telemetry and also this is an important topic for uh for Defenders for experts in Windows security and uh malware detection and",
        "the incident response",
        "a little bit about the binary team so finally the device security uh startup",
        "based in La that focuses on threats that originate below the uh below the operating system in the firmware and understand how they move up the stack into the operating system and uh",
        "we use our land to deploy their next level uh the their next stages uh in a",
        "2021 and black at Europe the same team presented the Deep dive on attacks on etw for this talk we chose to attack wmi and",
        "as we will see through the presentation we have a lot to talk about again my",
        "name is Claudia todresco I'm the CTO and co-founder of binary unfortunately Andre",
        "retlet and the Igor couldn't make the trip to be with us today but their contribution to this research was essential",
        "so it was very important to understand how we can attack wmi because it is used by a lot of Solutions in the field and these Solutions can be blind or it can be tricked uh in terms of the Telemetry that they're Gathering also more important is to find ways how to detect if the wmi or any other solution that is used by by Security Solutions is tampered with and then act upon that by notifying the proper audience so as for the agenda",
        "we'll start with presenting some information about the Windows management information in terms of architecture and features also we'll look at how the",
        "hackers and the threat actors are using wmi in the in the wild",
        "next we'll go to the core of the presentation by introducing different types of attack on wmi and also introduce eight new brands",
        "new attacks on it uh on the wmi at the end we'll introduce some uh some solutions that can uh some solutions like wmi check and the memory Ranger those Solutions can detect and prevent some of the attacks that will be presented in this presentation",
        "foreign next let's go a little bit into the Windows management instrumentation architecture uh for for short uh short",
        "wmi actually the windows implementation of two standards the the wbam or a",
        "web-based Enterprise management and cim",
        "common information model it has",
        "very good advantages it's available system-wide in all the",
        "Windows operating systems starting with Windows and deep 4.0 also it provides a",
        "standardized framework to talk with consumers and providers via Chrome interfaces",
        "going into the specifics of the architecture so we have the wmi providers",
        "that produce uh device Telemetry as wmi",
        "objects we have the clients that consume those events we have the cim standard that is a structuring querying and",
        "transmitting the wmi objects for",
        "reference W by objects actually instances of wmi classes",
        "next uh so as part of the cim standard we have the wmi repository that stores the class definitions the Dems and definitions and their Associated properties as well as the persistent wmi",
        "objects then we have the moth or managed object format it's a",
        "object oriented language that it is that",
        "is used to specify uh different wmi",
        "artifacts to extend the format then we have the query language that is the SQL like type language wql to query to",
        "filter events and uh",
        "to very remotely connect and transmit",
        "the receive data Windows Remote Management or dcom can be leveraged last but not the least we have the wmi service which is implemented at the SVC host service dll in the net svcs Group which is called winm GMT",
        "let's talk a little bit about a little bit about the wmi providers so in user mode they are implemented as comb base dla dlls or kernel drivers for the",
        "kernel component as you can see in the more definition of a provider a provider is an instance of the underscore underscore Windows 32 provider standard class it is identified by a class ID and as any com interface it has its own registry configuration uh as we can see in Windows 11 we have more than 4 000 built-in wmi con providers that can",
        "cover a lot of different device components some of them are listed in the table",
        "wmi advance so double my offers a great",
        "ability for both attackers and Defenders",
        "to act on a certain double on pretty much every wmi event which covers mostly any of the operating system events also",
        "another great ability uh offered by wmi is to register a permanent event",
        "subscriptions this is very uh which uh",
        "obviously we'll uh survive a reboot which is very used by uh in the field by by attackers to obtain persistence on on those systems there are two types of events intrinsic events and extrasing events I leave this the definition uh to this uh on as reference next we move to filters it's an instance of underscore underscore invent filter wmi class that specify which events are delivered to the bound consumer we'll see what bound bounding means the most important properties of this class are the event namespace the query language to filter the events and also the query itself as a expressed as a wql query",
        "these are the example of the general syntax of a w double query and also we have two two examples one for uh uh intrinsic uh",
        "event query which actually uh triggers every time a notepad exe is launched",
        "and the other one it's an example of extrinsic event filter which detects",
        "um persistence in the Run registry key next the consumer the wmi consumer defy the action to be carried out once the bound filter event filter has triggered and in the standard there are available five event consumers",
        "to perform actions such as uh logging uh executing scripts or command",
        "lines or even sending notifications and",
        "uh in terms of we talked about the the permanent event subscription how is that performed is uh the way persistence and",
        "code execution happens in the wmi repository it's in three steps create a filter to describe the event to trigger on create a consumer that describes the action once the the filter has triggered and then bind them using a filter to Consumer binding instance to link pretty",
        "much the trigger to the action to be performed so this is a simple example how it can detect uh a new when a new service is installed you create a",
        "event filter that monitors for instance",
        "creation events",
        "or the polling interval for which the target instance is a of type 132 service then you you create a",
        "consumer that will uh",
        "trigger on this if one when the new service is created and write a notification into the event log using the Event Viewer consumer and last but not least you bind the the the the filter with the consumer to link",
        "pretty much the trigger to the action to be performed let's talk a little talk a little bit about the cim repository uh it's the",
        "database for the wmi that stores the uh class definitions for the class definition namespace definitions together with their qualifiers and properties as long as as well as the persistent uh objects wmi objects",
        "consists of three types of files it's the index BTR object that data and the mapping three mapping files the index.btr contains the uh the index",
        "index for the wmi which is implemented",
        "as a B3 uh organized in index records stored in",
        "Pages the object that data contains the actual class definitions and and the",
        "persistent objects uh this in the same way it is organized in records and uh I mean those records are stored in pages and then the mapping uh the mapping is has one one uh only one purpose to",
        "translate The Logical page numbers to uh their physical page number equivalent for both the object that data and index that that the BTR uh one was part of the flare team in in FireEye I reversed the format the format of uh wmi and right wrote a paper and",
        "released uh several forensic tools with my good good friends uh uh Willie and Matt",
        "so let's go a little bit deeper into the the forensics how it works in in simple terms so pretty much the search storage path is constructed by using the identifier of the namespace class and the instance the index.btr is searched and then the the corresponding index record is found which contains the logical page number of the in the object data for the record that you're looking for the record identifier and its size then the mapping file is used to translate The Logical page number into its physical uh equivalent then now we have the physical page where the data you are you are looking for it's in object that data you go through that page record by record and identify the one that you're looking for by looking at the record ID of course the size in the index record should match the the actual size in the objects that data also the same approach can be used for index.btr because it's",
        "it's a bit B3 implementation and the pointers to the next nodes in the B3 are specified as logical page numbers",
        "now that we know how to pass the now that we know that how to parse the the repository we took uh we we did a",
        "very quick exercise to figure out what is in actual uh database for a Lenovo uh",
        "machine so we saw that in the root wmi netspace we have uh very interesting",
        "classes starting with Lenovo underscore",
        "as prefix one of them it's a bio setting another one is Lenovo set biosetting another one is Lenovo set BIOS password and in the right we have the definition the complete definition with properties in it for which current setting pick our attention it's a string and if we're trying to look uh in the repository for instances of this class we have empty results which means this class is uh dynamically created on the Fly by a custom provider that is implemented by the OEM vendor so we can use a w my to actually look for non-empty instances of this class and then printing out the current settings we have this uh these results if we magnify a little bit we see some information about The Trusted",
        "execution the TPM and also",
        "about update updating the BIOS",
        "which means that having those classes",
        "you can alter the",
        "settings of the BIOS from the user land remember that there is a Lenovo underscore set bios setting so which means Lenovo provides an interface in the in the firmware so the wmi provider can communicate to to read or alter",
        "the settings which from my point of view as the device security startup is pretty scary also the standard provides a class with 32 bios to give us information about the the current uh the current uh BIOS version uh it's serial the device serial number and also the OEM vendor so now let's look at how the wmi is leveraged by both Defenders and attackers for Defenders it's a it's a great tool to uh to use uh to gather Telemetry for attackers is a great living of the land infrastructure to perform a malicious uh activities",
        "so how the threat actors leverage wmi",
        "reconnaissance you can start with reconnaissance AV detection and so on",
        "in the next slides I'll present an example of how in the wild wmi is",
        "leveraged for far less persistence",
        "called the execution and data storage so pretty much we have a three we have a trigger or even filter that",
        "triggers several seconds after the system power up to allow the uh the the device to to boot up which will this this trigger will make the command line event consumer to execute what it will execute is a Powershell script that is located in the description property of the option class",
        "so we have the definition of the option class which has a name and a description both of them strings in the description that is called by the consumer we have the script if we look at the script very quick we see that it extracts the the encoded the base64 encoded payload from the name property and uh",
        "decodes it drops it to disk the",
        "path specified in the configuration and then it Executives the second stage so the tools that we use in our research the WM test to showcase the wmi",
        "interaction scripting via vbscript and Powershell to play with filters and consumers also developed our own wmi client to",
        "look for for running processes",
        "so WMA attacks now let's switch to the main topic the threat model the thread model of wmi consists of the wmi service that connects an interact that communicates with consumers clients",
        "and providers via Advanced LPC ports uh",
        "LPC channels then we have the wmi files the repository and and the provider dlls and so on we have the configuration and registry and also the the data in the wmi service memory and then we split uh each one in uh in in each of the attacks in five buckets depending uh which are the targets uh the WNY data process the lapc",
        "connections the files and Registries then the the sandboxing of a wmi using a",
        "user mode attack and then some boxing of wmi using a decom attack",
        "so why the wmi attacks are so dangerous so these attacks have existed in in the uh in in wmi from the beginning and the",
        "reason for that is wi wasn't built for to be used for a security solution wmi was built just to gather Telemetry on the device also the wmi service is not considered a critical app it doesn't have PPL or a trust label and the solution the the Security Solutions",
        "don't have a way to check if the wmi has been disabled or has been tampered with so that on on top of that all these attacks are architectural flaws",
        "which cannot be just fixed with a simple patch",
        "so let's start with the fur the first bucket which is uh attacks on files and registry configuration so you can modify",
        "content you can remove files you can restrict access to the files on disks like the the the files that represent the database or the provider dlls in the registry we have the the service configuration and uh the the other the",
        "wmi internal settings",
        "so let's the first attack uh there is an a there is a registry key called enable events when a new event comes if wmi client comes in that's the following uh call stack on any TSS which stands for initialized event subsystem is called in",
        "it in inside the the function",
        "the enabled events registry value is red if it's different from one then an inter a pointer to the interface is uh obtained and success is returned if so an attacker basically can write a number",
        "different from one on the in the in the registry if value restart the wmi",
        "service and then everything is disabled",
        "so the UW my interest infrastructure in the user space uh the most important is the is the service the service uh the main Services wmi svcd is the wmysc SVC dll it's",
        "implemented as we see host service dll and the other dlls that are important for our discussion the wbm core the webdr VFS and wbms",
        "so let's look at the templates how this is attacked",
        "so we have a the code of a certain dll and on the right we have the running memory so when the dll is loaded the global flag is initialized to its default value in this case Zero in the initialized uh function uh this flag is termed one when a new connection or registration of an event filter comes in the global tag is checked if it's true or one then uh the the event is process the the event is processed and success is returned we have a new connection established and the registration uh successful then an attacker can clear the global flag so the error path in the dispatch routine",
        "is taken the event is dropped and then the error is returned so we'll talk about all these flags so different flags in different uh",
        "dlls can be attacked the only difference is the error returns after the attack when you we disable wmi",
        "so we'll try we'll start with the global Boolean variable do not allow new connections when the WM Accord dll is loaded then it is set to false in the when the it is unloaded in the shutdown method it is set to True when a new double my commission comes in ensuring it initialize is finally called",
        "and uh when is it called if it's false then the initialize the the system is initialized and uh everything works correctly if an",
        "attacker comes in on on the uh to turn this value to true then the insurers initial initialize and return an error which is called a server stopping so now it's time for the first demo",
        "thank you",
        "amazing",
        "foreign",
        "thank you",
        "cool nice",
        "thank you so let's introduce wmi check which is a tool developed by Andre redplate",
        "consists of a console app and a kernel driver it can it can scan uh the process",
        "process and parse the wmi internal objects uh you can do that for a specific process and also for uh for the whole system on the right side we have the all the options that are supported on the left side uh it's a screenshot of how uh double my check can detect uh wmi data patching so you have a snapshot before and after the attack comparing the snapshot you see how the internal flags are modified between a different instances so next demo showing how to",
        "detect the previous attack using the",
        "wmi check",
        "you know",
        "[Music] okay",
        "foreign",
        "core event delivery this is an internal flag the offset C in the ESC session uh field of C repository class",
        "pretty much when the dll is loaded the event delivery is set to its default value which is false in start event delivery is set to true and stop event delivery it is sent to false same same attack pattern you have an interesting event coming in you have the delivery delivery implicit event function an attacker will come in and Patch this flag to false so that the winner is nowhere or is is sent that's actually an error if you use failed on this error it returns true uh so what happened all the intrinsic events are disabled",
        "and let's see another demo",
        "about how this works",
        "foreign",
        "okay",
        "thank you",
        "[Applause]",
        "let's move on the next attack is a global Boolean variable which is called",
        "shutting down",
        "when the DLR is loaded he said we need a value which is false in the initialize class in C repository in a initialize method in C repository is sent to false in the shutdown set to true this uh flag is checked in more than 50 functions so a template of this of a dispatching routine looks like this so the obvious attack is just to set the flag to uh to false because it's the reverse uh logic and then",
        "um",
        "true actually to to make sure that the error is returned uh if it if it falls then the internal dispatch is uh is executed now let's move to another flag in the G Global instance a global instance of the",
        "field of set 0 g Globe is a group a global instance for the C globals class in the Constructor we see it is set one in the initialize method it is set to zero and we have this uh call stack when a new filter comes in put object is called and also calls the get core Services um",
        "next and then the attack is again obvious we set this value to zero so the return",
        "return is an error the WMA initialization failure which will be",
        "picked out by the put object and then",
        "return return",
        "the error next uh this is the same attack as the previous one the the field that offset 38 in the same G globe",
        "instance the only difference is that the",
        "the field that offset 38 is actually a pointer to an interface to double my core services and the obvious attack is uh just setting uh null or zero to this to this value which will make uh",
        "get core Services return the same error as before now uh the",
        "word field at the offset BC in the in G globe it's set one when when the dll is loaded in an ash in in uninitialized is set to uh zero when uh double my connection comes in we have the deserialization function file to instance called and in there we",
        "see that if it's zero it returns uh error server shutdown in progress which is an internal error so the attackers has to set this uh field to zero then uh",
        "the internal error is uh is set and it's translated on out to a external error a w bam error in the A51 translator or code",
        "and the next is the G underscore p e s s",
        "M4 which is a global variable that keeps",
        "the pointer to an interface so uh when the dll is loaded it is set to null then uh it's it is set using the query interface in the initss and then it is released the interface is pointer to the interface is released when shut down ESS is called",
        "so we have this call stack and we get the last two functions the exact notification query calls get ESS sync which is just returning that uh that variable and then based on the in return if the if an attacker comes in and Patch the uh the global uh variable and set null to it then this will the the calling function will return the WN",
        "not supported",
        "next a new type of attack is some some boxing wmi so wmi Service as we",
        "mentioned uh communicate with uh providers and client consumers using Advanced LPC uh connections also it",
        "interacts with the file system on the registry as we mentioned before so to sandbox wmi",
        "agent wmi uh service to only isolate him it from the OS we have to set the untrust the Integrity level to untrusted and we have to revoke the SE impersonal",
        "privilege privilege of the service app",
        "and what's happening",
        "this then the service become isolated every connection request will get the access denied and how this is uh achieved we can do this in on in the user land using uh these two functions and then you can use decom attack in the kernel to modify the the token uh belonging to the wmi service",
        "and as a result we have a sandboxed wmi",
        "service so let's introduce let me introduce the memory Ranger which is a solution that can prevent against the decom attack on the uh on the wmi token of the of the wmi service process how this is done uh",
        "the memory Rangers uh traps the loading",
        "of the attacker's driver creates a memory a separate memory Enclave where the attacker's driver is running in where it doesn't have any access to uh modify the token belonging to double my service",
        "so um as a conclusion we did this research",
        "more like to tell the industry that they when they're leveraging some type of solutions they understand their risks",
        "that they're uh there is that they are exposed to so this is in any case A bash of that is a very very interesting uh and very very useful uh solution is more like a wake-up call",
        "be sure you have in place mitigations are way to detect if this functionality has been tampered with either disabled or or to send bogus information uh and everything that we showed that uh all the attacks that we showed are attacking the the architectural weaknesses we call this attacks uh most of them are one bit change attack you just flip",
        "a bit and everything is disabled",
        "we introduced wmi check that can pretty much detect",
        "W my attacks on on the on the on the service data and then memory Ranger that",
        "can prevent the sandboxing of wmi",
        "for the decoma the data kernel object direct kernel object manipulation attack",
        "so another conclusion to conclusion pretty much all these attacks can originate from uh from firmware and uh right now former is a big blind spot for the industry and we see every time we have uh different attacks that originate in firmware that has been stealthy for for six to seven years so I think this is one thing that I want to leave everybody out that this attacks happen in the user land what can originate in the formula also one one to plug uh my",
        "co-founder and CEO of Winery talk that follows this talk at 11 10. which is very interesting one it will he'll drop 11 new vulnerabilities and you will talk about exploiting early boot phases",
        "thank you very much",
        "[Music]",
        "[Music]"
    ],
    "WJXjl8vk_nM": [
        "[Music]",
        "good morning black hat uh my name is Scott Denali I'm a privacy engineering manager at meta and I support something called the Privacy red team which coincidentally is what the topic of this conversation is all about the way we're going to kick things off is by making the case more broadly for offensive privacy before diving into the question that I'm sure you're all here to hear the answer to which is what is the difference between a security and privacy red team we'll talk about what we did at meta to build a privacy red team give you some ideas for operations that you might want to perform if you're thinking about building privacy red team and then wrap up with some final thoughts but before we do all that I want to level set a bit and give you an idea of what this talk is and is not about so primarily what we want to do here is start a conversation within this community about offensive privacy I know there are others in the audience that I've talked to that are from different companies you either have or are planned to start a privacy red team and I think it's time we Elevate this convert this conversation to something community-wide versus one-on-one more to the point if you're an organization or you work for an organization that currently has an internal security red team this talk might be a blueprint for how you build an internal privacy red team if you contract external red team Services well this might be a blueprint for another type of service to ask for if you offer red team Services then this might be a new type of service offering that you might want to provide but all in all what we're trying to do here is give an understanding of how we think privacy rate teaming fits into holistic privacy program but we're definitely not going to do here is pitch you anything I'm not here to sell anything we're also not going to talk about any other aspect of meta Beyond privacy red teaming and throughout this talk you're going to hear me say things like privacy this or security that I very much understand that these are overlapping fields in fact we're going to talk about that pretty soon but the point here is it's hard for me to keep caviar on everything I say so don't take anything I say is an absolute and lastly circling back to the first point you may agree or disagree and partner and hold with what I'm going to say here just remember it's a conversation I want your feedback I want to hear what you have to say about it all right now let's dive in and make the case for offensive privacy we're at black hat which means you all really well understand how offense helps your security program and I want to make the same case for how offense can help your privacy program and when I do that in two very specific ways the first is through some experiences you may have had and the second is conceptually",
        "so if you're a current red team or a pen tester you might have been in an operation and came across some pii or some other sensitive data and didn't know what to do it's not the point of your operation but you log it as a finding and you just ignore it you might also have been asked to start recording these things as findings you know if you come across this sense of data hey please record it let us know you might have also been specifically asked to create a privacy focused version which you normally do and maybe weren't sure exactly how that was supposed to look and then maybe you've just had a standard security finding that you really weren't able to get a lot of traction on because someone told you it didn't have the right security impact right didn't have enough of that impact uh myself and a colleague found ourselves in this situation back in 2016 at black hat in Europe where we were presenting some results on vulnerabilities we found in iot devices one of those vulnerabilities was a code injection onto a phone uh the phone app associated with the iot device allowed us to do some things but people didn't think was a big deal because the code injection vulnerability was pretty vanilla right it wasn't particularly impressive and it was sort of hard to execute because you had to be on the same network as the device but our point was this code injection vulnerability allowed us to pull off all the photos and other files off the device and turn that phone into a GPS tracker that would become back your location no matter what network you were on and the time we tried to land this impact by saying hey isn't it weird that these things can happen to you just because you wanted an Internet connected crock pot nowadays I think about that same thing and I say well yeah the security vulnerability might have been pretty vanilla but the Privacy impact of that vulnerability was super high your location your photos that kind of sends it information somebody getting their hands on that's really a privacy impact so maybe you've had that same sort of uh issue now let's talk about it conceptually the whole conversation starts off with the notion of risk on the slide what you see is this Venn diagram of the overlapping risks of security and privacy and you don't have to take my word on this that these are overlapping because this Venn diagram comes from the nist Privacy framework and really what we're talking about here is perceived risk that is an individual's subjective judgment on the",
        "likelihood of a negative event occurring those security and privacy programs we all know about part of what they do is help mitigate this risk and the reason the way they do that is by combining people processes and Technology what we would call a blue team right to help prevent these risks from being realized and as a red team operator what you're going to do is this adversarial testing to figure out how well those mitigations hold up how well they're actually mitigating the risk and what you're doing here is you're coming up with actual risk now the difference between perceived and actual right one is someone's judgment the other is a quantification of that risk if you're able to bypass the mitigation it's no longer just someone's thought that this could be an issue you've actually proved it you've done it right so the idea is is you're finding actual risk you might also actually find new risks right so think about a couple years ago before ransomware was a big deal had you identify that in an operation somebody could rant some data hey that'd be a new risk that maybe people should try and mitigate now if we pull this Venn diagram apart a little bit we can start to understand the differences between the two teams so let's start on the cyber security side one of the risks you might be interested in mitigating is attack surface enumeration one of the ways you would do that is by installing a firewall that firewall when it alerts there's a process to respond to those alerts people Implement that process and also operate and maintain the firewall so that combination of people processes and technology is the mitigation standard red team activity during a Recon phase might be to scan that Target network if you don't get much back from those scans hey the firewall is working great otherwise maybe you need to make some tweaks in either case what you're doing is identifying the actual risk to the systems and networks associated with that Target now let's look at what we're doing on the Privacy side one of the risks we care a lot about is large-scale access to data the way we mitigate that or one of the ways we mitigate that is through rate limits right limits say you can only access so much data in a particular period of time as a red team operator on a privacy red team anytime you find access to sensitive data or important data things you didn't think you should get access to the first thing you're going to do is see how much more of it you can get right you're going to scale up that access you're going to scrape if those rate limits are working well then hey you probably aren't able to do much there otherwise you'll probably need to make some tweaks to the rate limits in either case what you're doing is identifying the actual risk to the user's data and their privacy very directly so that's the basis for this conversation on the differences now let's dive into some of the more specific differences you'll see so because of the evolving legal and Regulatory landscape in the last few years if you're a red team operator you might have decided that there's a whole bunch of risks just for your team and accessing user user data on an operation so maybe you've actually said hey we're going to avoid doing that entirely well based on what I just showed you in the Privacy region we can't do that right that's the whole point is to find the access to data that shouldn't be there right we can't avoid those different implications this is not only a key differentiator but there's sort of a public service announcement here make sure you partner with your legal teams to understand the risks of the operations you're doing and how they relate to the the different laws and regulations that you may encounter",
        "the next difference I want to talk about is adversaries so in the security communities you all know we care a lot about those advanced persistent threats like nation state actors and maybe some cyber criminal groups and of course in privacy we care about those as well but we also care about other types of adversaries and I like to draw the distinction by thinking about it along three different axes one is time scales yeah there's resources and the final one is technical sophistication if you think about an apt they're pretty much defined by having infinite time scales infinite resources and a high degree of technical sophistication if we look at a privacy adversary we care a lot about like an abusive commercial service a company who's basically contracted to extract data from our platforms and sell it to somebody else well their time scales are probably going to be limited by whatever that contract period is their resources are going to be limited by whatever someone's paying them to do that activity and their technical sophistication we expect to be a heck of a lot lower than an apt another interesting example are an opportunistic bad actor trying to scrape data from the platform and dump it on the dark web so that kind of an actually you think is sort of a lone actor and they're opportunistic which means their time scales and resources are by and large bounded by their attention span but their technical sophistication is going to be anywhere between an abusive commercial service and ABT",
        "now at this point you might be thinking yourself well look I do red team operations all the time my standard op looks like this I fish for some credentials I log into a box I move laterally through that network with nday exploits I drop malware for persistence I maybe grab some creds with Mimi cats log into a database and actual data so look at me I'm doing privacy red team right because I got access to data but if we think about how you did that it was very indirect you compromised an entire network of systems to get access to that data the Privacy red team side of the world is more interested in that direct access maybe through user interfaces or apis so if you take nothing else away from the difference between a security and a privacy red team I want you to think of it like this security red teams are targeting the company think of the companies the container of information you're targeting that the Privacy red team is targeting the user data that that company holds what's in that container that's the tldr that's the thing to remember",
        "and before we get done with these differences I want to talk a little bit about blue teams as you saw a couple slides ago we have separate set of privacy risks at meta and we've hired a separate set of people and created new processes and Technologies to help mitigate that risk so one could say we have a separate blue team and in fact you could say that this privacy red team makes a lot of sense because we have a separate blue team we need a separate red team to test it but there's another important factor when we talk about Bluetooth and that is that adversaries steal data for reasons right so if they're an Espionage or e-crime act or something like that well the types of activities that you perform as a privacy red team might look a lot like what those actors are doing which means that if you have an Integrity blue team you might trip over some of those detections set off those alarms likewise the things you might attack like let's say an authentication system might have detections that you trip in Your Standard Security blue team so the point being it's really important to figure out who you need to partner with ahead of time what blue teams you might actually be triggering before you do an operation",
        "all right now let's talk about what we've done at meta to build a privacy red team if you take everything we've talked about so far and boil it down you get this mission statement what we're doing is proactively testing people processes and Technologies from an adversarial perspective to identify the actual risk to our users data and their privacy two keywords are of course a proactive and adversarial proactive meaning we want to do this stuff before real adversaries do it so that we can defend ourselves better against them and of course adversarial testing is kind of the unique part about red teaming right now the four functions we have in the middle you can read left to right and it's really the core of how we do what we do starting about starting about talking about adversarial testing well the first thing you need to know there's is you need to understand the adversary as he talked about before this space of privacy adversaries is less well-defined and less well known maybe the security industry so what we're trying to do here is really figure this out by modeling those adversaries we take one of those profiles I would say our profiles and apply them these technical assessments that we do which generate finding some of those findings are individual weaknesses and products and services and we think it's really important to memorialize those types of weaknesses right catalog them so that we can share them with engineering teams right educate and inform those folks who can prevent those things from happening in the future now the key products and services listed on the slide is how we Implement each of those functions I'm going to go through them in more detail on subsequent slides but here I just want to do a quick mapping of products and services to functions so starting in the left top the Privacy attack framework is our attempt to better understand the adversary that's our adversary modeling privacy weaknesses taxonomy is our instantiation of privacy weaknesses cataloging that middle row are the different types of technical assessments that we do and on the right are the different ways that we educate and inform the rest of the company and before we dive into those in a little bit more detail I want to take a second to talk about the team composition how do we how do we build this team who did we hire a lot of people are not terribly interested in privacy because they think about it as a sort of risk assessment thing a non-technical discipline first and foremost I want to say risk assessments are really really important to a privacy program it's kind of vital that you do those but it is not what we do we do technical assessments and in fact privacy engineering operators are actual privacy Engineers right privacy routine operator privacy engineers and so the types of engineers we're looking for have three main characteristics one obviously adversarial mindset they have to be able to think like an adversary to emulate an adversary to an offensive security skill set so this breaks down a couple different components one is because we're attacking the same kinds of systems so web and mobile systems you have to have some understanding of those different tools and how to use those tools to implement different tactics techniques and procedures but the other side of the other perspective on this is imagine you're somebody who has a really in-depth knowledge of Linux or Windows some operating system and you've gotten really good at manipulating that operating system you've kind of have knowledge and built a skill set there well we don't really want your knowledge of Windows and Linux because of course we're not attacking those things but we do want your skill set and how you know how to manipulate those things we just want to apply that skill set to our platforms Facebook Instagram messenger",
        "Etc and we can teach you and give you the knowledge to make you successful manipulating those things and then lastly privacy instincts privacy is kind of too new especially for this kind of an audience to to say hey we need you to have five years of experience so really we're looking for people who just have good instincts about it care a lot about it and as you can imagine that means we're recruiting from these four these four disciplines you see on the screen but we're doing this very purposefully because we want to attack any problem from two sides sort of an internal white box side and sort of an external Black Box side so you think about as your vulnerability researchers and your apps like Engineers really good at looking at code and you're looking at code whether it's source code or reverse engineered code they attack the problem from that angle and then red team and Pen testers do more of that external probing of both processes and systems so we think if we blend these two together we get a nice great team approach to everything and lastly I want to note that there are some other important Partnerships here so legal risk and policy because we're talking about privacy are super important Partners to have but at meta we're set up very well to facilitate those Partnerships but we don't have them as members of the team and I'm saying this because I don't want you to think that if you and your organization stand up one of these teams and put a lawyer on that team that you're doing it wrong you're not you're just set up differently that legal partnership is required and if you have it and that's how you you do it that's totally fine it's just not how we've done it because the company Works different but definitely do it",
        "all right now let's jump back into some of those products and services so privacy weaknesses privacy weaknesses",
        "are the things we're going to look for right those are the things we need to have a good understanding of they're the false flaws errors and code that we might find and you might be saying well why aren't you using the term security vulnerabilities those are sort of the same thing and the answer is maybe we don't know so we specifically call them something else so we can explore this space and answer this question of are security vulnerabilities and privacy weaknesses completely distinct partially overlapping entirely overlapping or is one a subset of the other we just don't know yet but we're looking into it of course this is an important thing to do not only because it's what we're looking for but it's the language you're going to use to talk to our different product and Engineering teams when we find a particular type of issue we want to say to them hey this is what it is this is the impact of it this is what it looks like in code this is how you prevent it or remediate it in the future and we can also end up using these things to Define metrics like hey we keep finding this issue this type of weakness in a particular product or service or code base maybe we should expend some more resources on fixing that and eradicating it",
        "similarly we've started to look into a privacy attack framework so the idea here again we're a red team so we want to emulate adversary activity we have to know what that activity is what are the tactics techniques and procedures that they're using this is of course vitally important to us to do our job but it's also important for the blue teams to understand this so they can build this detection intermediate and detection prevention systems the problem is as I mentioned before it's a little bit less well understood of a space so we had to attack this problem a little bit differently than miter has miter took all these different reports and they distilled from them the different ttps that they could then link to those actors we kind of did it the other way we did it in a Bottoms Up approach meaning we said hey this is the kind of actor we want to emulate in this particular operation and then once we do that operation we figure out the ttps we use to be successful and then say okay well this must be what that kind of actor would do obviously as this space moves forward and matures we hope to have attacked this the same way that miter did and I will note that both the Privacy weaknesses taxonomy the Privacy attack framework are things in the future we hope to share with you maybe in this form or others more broadly",
        "all right now let's talk about the kinds of technical assessments we perform and again we took a page from the security Playbook here first thing we do is what you think of as a normal red team operation which is adversary emulation so these things are objective focused very long-term in duration campaign style thing run over many months and because they're objective focused right we want to give ourselves the most space to be successful so we kind of put very few limits on the scope of this use different platforms combinations of features in those platforms whatever we need to do to be successful and the goal is to measure and understand our resilience to a particular type of adversary",
        "next we have something like purple team operations so again this is very much scoped to a particular defensive technology and us helping a blue team improve it specific examples could be a privacy control that we've added to one of our products or could be some sort of a privacy safeguard and the questions they might ask are sort of like hey we think we've covered this entire space of what someone could do here uh have we or hey how do you get can you see if you can find a way to bypass this because we don't want that to happen",
        "lastly we have our version of what you'd call a penetration test which we call a product compromise test just like a penetration test we're focusing on one specific thing product service feature and we're doing trying to do one of two things either uh do something like finding all the vulnerabilities which in this case would be finding all the weaknesses which again is why we need this weaknesses taxonomy to understand what we're looking for and then the other uh activity we perform the other goal here could be to do something like gaining root on a box in our case gaining root would be more akin to finding all the different types of data and then pulling as much data out as we can so classic example might be an API right there's some API that you think allows access to certain types of data and in certain amounts if we can squeeze that API and get all that data all those data types and all the data Associated out of it we've kind of done root right we're trying to hit root",
        "so with that in mind let's talk about some ideas for operations that you might want to perform now the first one is an adversarial emulation operation and it's really applicable to any company that has any sort of an online presence so if you have something where someone can create an account there are definitely actors in the world that want to do one of two things either figure out the contact information associated with that account so they might have a list of contact for information email addresses phone numbers and figure out what accounts are associated with or they might want to do the opposite and take a list of accounts where they know the people associate with them and figure out what the contact information is in any case the methodology is likely going to be the same they're going to look for the pieces of functionality that they can either input contact information or that output contact information and try and string them together in sort of a chained exploit fashion to get to that goal and and when you think about this kind of functionality you know the the blue team that you might imagine an Envision of the Privacy blue teams that might play here is the security of losings because they obviously probably have some detections regarding malicious behavior with those different pieces of functionality overall though we think because those functionality they're just available via you know a web page a web browser or a mobile phone they're pretty accessible to low sophisticated adversaries who don't have a lot of time or resources another interesting one an example of a purple team operation is sort of a sensitive data leak detection so you can imagine you have a team internally who cares about determining if and when sensitive data is leaving internal infrastructure but not at like a network security level this is not an idea of collecting a bunch of packet data pcap data and then kind of reconstructing the streams and determining the sensitive data we're thinking of it as more of an application layer thing and so when you think about it from that perspective there's an interesting I'll put in quotes adversary here and that's what we call the absent-minded developer this is somebody who's maybe creating a new micro service you know in your internal environment and they realize that they can get some data that they need to process from an external resource some restful API on the web somewhere and they make a request to that restful API but they don't recognize that hidden net request is some data that shouldn't have really left the environment so this internal team of folks is trying to detect both that there are these new data streams going out from new services and whether or not those data streams contain sensitive information so as a privacy red team operator you can do sort of a hide and seek operation here right take a two-week Sprint model first week the team comes up with all these different data streams some of them contain interesting information some of them do not and then in week two they say okay go find them see if your detection technology found them if not maybe hunt for them at the end of those two weeks everybody comes back together shares Lessons Learned and maybe does a repeat another Sprint of course this is also relevant if you're trying to detect insiders you know exfiltrating data",
        "and the last operation I want to share with you is something data type focused right this is another thing that's pretty much broadly applicable any organization has certain types of data they store that they know are more sensitive than others so one thing you can really easily do is just say okay let's pick one of those and see if we can get access to it and it's interesting here to pick both two different adversary profiles one that's low skilled meaning they just use off-the-shelf stuff don't really know a whole lot about what they're doing not terribly skilled and then a high capability adversary so someone who has like really skilled teams who can create custom chilling really know what they're doing because you get a notion of how resilient you are to each and the goal here of course is you want to be able to identify not only the interesting types of data people might want but help improve those detection Technologies so the standard methodology for doing this is saying okay pretend to be those lower high school adversaries look at what data might be available what are the ones they're interested in then enumerate a whole bunch of ttps they might use to get that data execute them to see how successful they are this has the added benefit that even ones that aren't successful are still attempts that your blue teams can look at and go aha I can tell if someone's even trying to do this because these are data type focused right an actor wants the data for a particular reason you might end up doing things that look like what the Integrity team would track like you create some on-platform assets that they know certain types of actors create so you might end up tripping those detections there",
        "all right now let's talk a little bit about findings and the differences between security and privacy uh findings so private excuse me security findings are by and large very objective right if you tell somebody I found X vulnerability like cross-site scripting they mean to say okay I got it I understand why that's bad I understand the impact of it and I actually probably know how to fix it I know exactly what you did or didn't do and I can go fix that",
        "privacy findings can be much more subjective because the very notion of a finding can be influenced by a number of different factors first and foremost your organization probably operates in some portion of the world and there are certain legal and Regulatory things going on in that portion of the world that could influence what a finding is second your company may have made statements about how they protect users data in their privacy and if you find that statement to not quite be true with your finding well that could that could then be a finding and lastly even if the the prior two are true meaning your finding uh is in line with us with the company statements and it's not buying violating a law or regulation you as a user of that same platform may say to yourself you know what for me as a user I still don't think this meets the expectation of privacy and you might want to call that a finding now in the future we're hoping to really move from the subject to the objective I think we've got to do two things to do that one is understand these privacy weaknesses better and two is understand how to do privacy by Design and again I think we'll get there all right to wrap this up I want to leave you with a couple of final thoughts and the first one I know you're going to be really excited about because I know everywhere in this room loves a topic of metrics and I hate to disappoint you but if you do if you're a red team operator now I know this can be very disappointing but most of your metrics don't apply here time to compromise the system doesn't really make sense because hey we're not compromising systems time to detection might not even make sense because as we just said we might not even know what we're trying to detect so we might not have anything to detect them so what do we do well the answer is I don't know yet I don't know what the perfect set of metrics are but I want to give you some framing thoughts on this first framing thought is the goal of these metrics should be to drive that fundamental change in your organization's privacy posture make them better at privacy and I think you can do that by looking at three big buckets to measure one is how your organization is doing it understanding that space that privacy space especially the adversarial space the findings you have about New ttps and new weaknesses are probably going to help them understand that the next one is understanding how the company themselves are doing right so do they have defenses how well do those defenses work how well are they doing it identifying the gaps in those defenses and filling them and lastly of course you want to measure how your own team is doing right how is your privacy red team doing at red team and for that I like to use the Privacy problem pyramid on the right so as we go up in this pyramid you get more impact and the lower we are the more things you'll find so if you think about the kinds of findings you might have in an operation that lowest layer of the pyramid is going to be your bugs your vulnerabilities those flaws and weaknesses and code that might cause privacy issues those are pretty obvious right you can show this to anybody and they say yep we got to fix these got it we'll do that next level up hopefully you have less of these this next level are definitely not bugs and weaknesses right but they are things that you would bring to a product team an engineering team and say hey I I think this is an issue I think we should do something about this and they go oh yeah we should definitely fix that but it's going to be fairly complicated so we're going to throw that in our roadmap right and if that's why I call them roadmap changes now the last category of things are neither of the first two and hopefully are definitely the least number of things you'll find I think that of them design issues because they're things you're probably going to go to that same engineering team with and say look um I think this is something you need to change and they're going to go nope everything we say about how we're protecting users privacy is done here it doesn't violate any law regulation now you're going to come back and say well but yeah it violates my expectation of privacy and I'm a user of this platform and if you keep pushing this and you're really successful in getting them to make that change basically what you've done is both learn and taught a better design because fundamentally you're probably going to be talking about a design issue right and it's not necessarily bad here right that it just might have been an older product that they didn't think about user privacy when they were building it but if you get to the point where actually helping people learn how to design things better they're probably not going to make that mistake in the future they're going to bake in those learnings the next time they build something",
        "right so so now let's talk about some lessons learned to wrap this whole conversation up and I want to start with a bit of a story so I've talked to folks both internally and externally to the company about this concept and interestingly I've got the same question multiple times so it's worth telling the story here and it goes something like this hey Scott this is a great concept love what you're doing here seems like it's super valuable but here's my question if you have all these database tables like how do you ensure they all have retention limits on them and those are the right retention limits and I say I got this no problem very simply I don't do that it's not my job what you're telling me is you have a requirement to have retention limits on database tables and you want to know who's validating that requirement that's a compliance function and by the way compliance is hugely important you absolutely need to have that but that's not what we do we go above and beyond compliance we provide a level of confidence that you're doing the right thing you're doing more than just meeting requirements you're going beyond that that's Assurance that's what red teams do",
        "uh the next thing I think is important to reiterate here is accessing collecting storing using data",
        "for this purpose of red teaming might be different than the way your company ever envisioned doing that and that might have some depending on the area of the world you're operating in that might have some regulatory legal risks associated with it so you definitely need to partner with your legal teams to figure out how you mitigate those risks because they can be Show Stoppers and the last uh thought I want to leave you with here has something to do with sort of where I think we have been and where we're going as a privacy industry so the uh on the right here this little diagram kind of shows my own thought on on kind of the differences between security and privacy historically so I think they're on this spectrum of very technology focused to very risk focused and if you think about where security was maybe 20 25 years ago um they were way back on this you know Tech focused area so there were people figuring out new ways to break things and other people figuring out uh ways to defend against that it was very technology focused as the industry grew up corporations got involved created Security Programs they introduced the notion of risk right to figure out what technologies they need to have and nowadays we have this nice balance between Tech and risk",
        "I think privacy started in the other side right they start on the risk side it's probably a reason a lot of us didn't get into that um talking about things like Hey where's your sensitive data who can access it Etc but if you think about those questions nowadays like where's your sensitive data it's on my phones and my laptop it's in multiple Cloud environments right it's all in all these different Technologies so that notion of Technology you know infusing more risk into into privacy and kind of pulling privacy towards that Tech Direction I think is where we're going and I think we're kind of at the beginning stages of that like we were you know maybe 20 years ago in uh in security hopefully though in the future right we'll get this nice balance and people will be sitting in a room like this and going I can't believe we ever debated whether offensive privacy was a thing we should have in a privacy program I think starting this conversation now is going to really help us get there",
        "so all that being said um I want to Circle back what I said at the beginning you may disagree in part or in whole with a lot of things I've said today or you might agree either way I don't care I think it's good that's what a conversation is it's a back and forth so let's keep talking thank you for your time and I'll take any questions you may have [Applause] [Music]",
        "[Music]"
    ],
    "bCjkAkXiwK4": [
        "[Music]",
        "thank you",
        "okay so my name is Maxim rosibelon and together with my colleague Damiano miloti we are going to speak about the titanium chip and how we performed in a rability research on it and you may have noticed that nowadays smartphone vendors tend to integrate Hardware security modules in their smartphones and on this module relies the most critical security critical security features of the device",
        "and this module comes with a cryptographic capabilities and Hardware protections against Hardware reverse engineering or fault injection and most of their design is both hardware and software is only known by the chief manufacturer sometimes the vendor",
        "yet for US security researchers are these components are working the whole device security which is pretty much the motivation for this talk today we will show you how we perform the vulnerability research on the titanium chip so a security chip designed by Google for their pixel devices and we hope that what we will show you today um we will be useful to other researchers who will face similar targets",
        "so uh we all both security researchers at quarks lab and we are working in a team that deals with uh embedded devices",
        "and we did a Target and we also very curious about mobile mobile targets now we are going to speak about the titanium chip so it's in fact um yesterday there were this great talk about some folks at Google about how the red team the the Titan M2 device so the",
        "Titan device we are speaking uh about today is the old generation one and on",
        "this device it has been introduced in fact starting from the pixel 3 and up to the the pixel 5 I guess and on this device you will um you will um will realize the critical security features uh of the smartphone and among them you will find the secure boot you will find the unlock feature um using the pin code on password and also the key store which is probably the most important one for us today uh this feature allows Android applications to generate and use keys from within the safe environment meaning the Titan M chip and whenever this feature relies on a security chip it is called strongbox now it is important to keep in mind that this chip is separated from the main CPU from the application processor you have one hand the main system on chip that runs Android and its application and you have another chip the Titan and Chip they communicate together through an Hardware boss as a client server model now according to Google this chip has been introduced in order to mitigate a wide range of side Channel attacks that were impacting the arm trade zone where previously uh the features I mentioned were implemented into",
        "now this Titan m is based on aux um cortex M3 architecture which is quite common for microcontrollers the firmware is close to us but it is based on an open source OS called EC EC stands for embed controller and it's uh it's designed by Google and it targets the various microcontrollers of the Chrome OS Project which is why it's quite simple and small for example there is pretty much no Dynamic allocation in it and most of the code is running into a task that can be compared to applications in bigger os's now the two Hardware bosses that are interesting for us today or first of all the SPI boss that is used to communicate with the application processor and with Android and the uart bus that is not available by default but we will show you how you can find it on some devices and the uart is used for um for the logs and a minimalistic console",
        "now let's zoom into the way Android uh communicates uh with the Titan name so you have the SPI boss and uh on the main CPU you have a kernel driver that will handle the SPI communication and it exposes an IO CTL interface uh to the to the demons and in fact you have only one demon and artery that communicates with this driver it's called CWD and its role is to dispatch the values messages received from services to the driver now these Services I call them here Hal for Hardware abstraction layer",
        "there is one service per functionality so one for Crystal one for wither and um this service will translate the generic Android",
        "API into something custom and here to do so they use protobuf a famous serialization framework designed by Google and thanks for us in fact the the definitions the protobab definitions are available in the iosp repositories so it will be quite convenient for the different tools that will be present today",
        "it is not the first time we speak about the Titan and chip in fact last year and like at Europe we presented the first stages of our research on this uh on this chip and it can be summarized as the following so the first thing we did was to reverse uh the VMware we identified the firmware file and the next thing was to in order to help us in this reverse step we wanted to interact with the chip and first of all on Audrey we implemented a Frida script in order to sniff all the communications going on so we hooked the citadeli demon and thanks to that we were able to seal the messages sent by the applications and we also implemented our tool that we call nose clients in order to send Customs custom commands to the chip now all tools only run on Android but there are some commands that will exchange uh between uh with the with the chip by them that are sent to the chip Sorry by the bootloader of the main CPU and in order to see what's going on we wanted to do the same things on the hardware level and this is the picture you see on the left uh it's probably the most impressive thing that we presented at this visually last year thanks to the Magic Hands of our colleague Philippe the one uh he was able to solve the ratio of the 64 pins of the chip onto a breaker board and then back to the the footprint uh on the on the smartphone and thanks to that we were able to uh interact with the chip from the hardware level the next thing we did was to find vulnerabilities and the most important one was a downgrade issue that allowed",
        "us to flash any old VMware and with a side effect that's all the debts I would be erased from the chip Now using this vulnerability uh we have been able to downgrade into an old VMware on which we discovered uh we notified that one day vulnerability that we then exploited that and it allowed us to execute God on the chip and in the end to leak values hidden parts of the firmware including the bootron now today we are going to speak about fuzzing and how it how useful it can be on this target even though it's quite constrained there is no uh we don't have the sources there are a lot of Hardware interactions but we can get interesting results so we will cover two approaches first of all the Black Box fuzzing uh in that case we don't have any idea of what's going on inside the chip and we will also cover the immigration based fuzzing where we have a lot more insight of what's going on yet we will need uh we will show you a few tricks to optimize the results so the next thing is that we will show you how we exploited without any debuggers or stack traces of neurability that we discovered and how thanks to this vulnerability we have been able to execute code on the Chip And to compromise one of the most important security property behind that behind that chip so I'm not going to let Damiano speak about the black box fuzzing",
        "okay so when starting to test the chip",
        "like that titanium one of the first steps that one can try to to make is start with black box fuzzing and here by Black Box we mean when we only have a very limited visibility on the Target that we want to test all we have all we need actually is just a channel uh to send messages to these targets and then a signal that tells us what happened so in our case this was given by the custom clients that we developed to communicate with the chip we could send arbitrary messages that we could mutate in the fuzzing in the fancy workflow and",
        "then get a return code back that would tell us what is the result of the processing of our message now the return codes are also in the AOSP and you can see them on this slide generally we are interested in those return codes uh return codes higher than on equal two with two being uh error internal this is for example the one we get when the chip crashes so we just uh implement this by uh plugging",
        "a mutator into our uh to our NOS client limitator is leave brought above mutator because we leverage the grammar that is available um it is actually fairly straightforward to use we start from an empty Corpus but we do try to set some fields that would make us pass certain checks to make sure that we can explore more States and then of course we keep the inputs that generate uh some interesting return codes now we did a first campaign on an old version of the filmer a filmer we knew had some vulnerabilities and we managed to discover a bunch of them one of them is actually the buffer overflow that we had exploited uh by rolling back the fumer so this kind of told us that the approach was working and we repeated the same proceed procedure at with the latest fumer at the time we found two commands that were leading to an Old Point at the reference that was making the cheap crash so we reported this",
        "vulnerability like the others and this one was not considered serious enough to end up in the security Bulletin the interesting part is that all these results come after just a few minutes of fuzzing so this is kind of suggesting that the approach is working we get the bugs so that's that's positive uh it is also as I said fairly easy to put in place and uh we are testing in the real device so what we get is uh is gonna be reproducible for sure but at the same time uh there is a very well known limitation when it comes to black box fuzzing that is that we are probably only exercising the shallow states of the targets um we also are prone to false positive with this uh return code heuristics that we that we implemented and detection is a quite complicated we only detect those",
        "bugs that produce a meaningful uh",
        "return code which is not always the case so the bottom line is really that it is hard to know what is going on on the target so that is when we wanted to move forward and try to explore a different approach to these emulation based fuzzing and this comes from uh the fact that we know how the firmware works we have been reversing it and we know also how to leak some parts of the memory when we need to do so thanks to the vulnerability we exploited by rolling back the firmware so we can put this together and emulate the firmware on our laptop this way we control what is being executed and we also have a very good feedback for a fuzzer if we want to do a coverage guided fuzzing so to emulate uh the firmware we have of course many different uh Frameworks out there uh in the end we decided to use unicorn this is a firmware that is this is a framework that is built on top of qimo and it allows to emulate only the CPU without caring about full system emulation which is something we actually",
        "wanted so we can actually set it up fairly easily and tweak it uh to try to detect more bugs and also a very interesting feature of unicorn is that it integrates very well with AFL plus plus and I'm sure most of the audience will be familiar with it AFL plus plus has this unicorn mode that basically allows you to fuzz anything that you can that you can emulate with unicorn you only need to take care about riding your writing your input somewhere in the memory of the uh of your emulation script and then you will get the classical AFL experience there is also allowing for example to use custom mutators which is something we we used extensively",
        "another nice property about emulation-based fuzzing is that you can fast anything you want all you need is an entry point some properties that you want to set such as the value of the registers and the memory mappings and then a point where you want to exit your execution so this is this gives a lot of freedom at the same time we of course need to take into account that we want to keep it consistent with the surface that an attacker is actually able to reach but one attack surface that is exposed that we hadn't explored earlier is the SPI rescue feature so this is a feature that allows to flash a new firmware by uh sending a new firmware in this specific format that you see on the slide um this is done through the bootloader and uh the user data on the chip are going to be wiped um so since this is a fairly interesting format we wanted to check whether this was actually processed correctly so we fast the header of this feature on the firmware um and the way we did it was using as I anticipated a custom mutator we used format fuzzer in this case there is a project that allows to generate and parse binary files following a specific format um and that runs with a modified version of AFL now uh unfortunately unfortunately we",
        "couldn't really find any interesting bugs in this campaign but still having",
        "to build an emulation script for this feature uh kind of got us to a next level of reverse engineering and we discovered some things that at least myself I wasn't able to understand with simple static reversing when you need to sort out how to make it work you kind of get a little bit further so one example is that the bytes in the hash the zero bytes get replaced with one and this is something that was just interesting to discover in the process but then we wanted to go back to the tasks so repeat the same uh campaign but using a uh using emulation this time so again we base ourselves on librato Buff mutator and we focus mostly on three tasks actually two identity and Key Master there's also Weaver but it is fairly simple and there isn't really much uh to explore there at least from a fuzzing perspective so the first question is can we actually find the same bugs we know about otherwise we're not really making any progress and the answer is yes but apart from one which will actually bring me to the limitations of this approach because as we know there is never a free lunch in this case emulation has always the problem of um are the dependent code that you really don't know how to emulate the way we did it was just hooking those functions that we knew were not uh possible to actually emulate",
        "also in this case detection is still not perfect because we only detect a bug when unicorn crashes but if there is enough by one or a corruption in this in a page that is already mapped we're not really able to detect that and then no full system emulation this was our choice but of course no full system navigation you don't get those bugs that entail for example the scheduler this is the reason why we didn't manage to find again that one bug that I mentioned but really what is uh nice about this approach is that you can tweak it a lot you can uh come up with heuristics and hooks that try to look for specific patterns of uh things that you know are not supposed to happen we have been for example checking for mem copies that end up reading from the boot ROM that is mapped at the address zero this was a pattern for some bugs that we kind of wanted to double check and this was possible with a custom hook but at some point there is a trade-off between how much a reverse engineer and come up with these tweaks and how much you finally let your father run",
        "but what uh we are presenting today is also one specific vulnerability that we found and uh this is a vulnerability in uh uh the function a function called param find digest internal this is a function that parses key parameter objects inside the requests and specifically this is an out of binds bounce right of exactly one byte that is set to exactly one so uh",
        "the first time I bumped into this I thought okay this is probably a minor issue no way to exploit it but let me walk you through it so here you see the assembly and the compiled view of the of the function and this is the vulnerable instruction store byte so one byte instruction uh but there are some checks actually a lot of checks on the offset so let's start from a 32-bit value uh the",
        "actually we only care about the least significant byte because of a mask that is applied this is actually uh interesting for us but that one byte has to go through a lot of checks so first of all it needs to be smaller than or equal four so we kind of lose all those bits and then there is a little bit of a complicated bitwise operation which just bear with me for now if we put everything together the list is significant byte can only be 0 2 or 4 out of the 255 possible values",
        "so what can we do um there are actually multiple ways to get to this snippet of code as I told you it's a function that processes this type of uh of um field in different messages and also don't forget the Titan M has a static memory layout objects are always at the same place so if we can write that one byte at the right place we might be able to to get something interesting you know from a simple denial of surface to perhaps changing some field that gives us a corruption elsewhere there is a lot that we can do so what we did was we generated all the possible addresses we could reach uh and then we tried to look one one by one and see what we could do with them and we arrive at the point where we understood that there was this structure in memory we called it Key Master SPI data and we could overwrite one byte in a field that we called a request address command request address so this is a a structure that is meant to hold data about the SPI exchanges for the key master task specifically there's one for each task and the actual field that we are overwriting is the one that is uh expressing the address where Key Master messages will end up being stored so as you can see uh from 192 C8 we go to one zero one C8 so now requests will be stored quite far from where they're supposed to be and this was the beginning of the fun part but first don't forget that all we have to communicate with this titanium chip is our NOS client so all we can do is Force the message the way we like it send it through our binary and then get the return code perhaps retro code 2 if the chip crashes but not much so as you can imagine developing and debugging an exploit is quite of a challenge but there's a is there's an ace we have been keeping in our holes so far Max briefly mentioned this u-word that we could uh access and this is specifically uh thanks to two pins that are Exposed on the motherboard so we soldered two wires into those pins and we ended up getting this uart console that is actually",
        "fairly simple and you cannot really do much apart from asking to the chief about versions and statistics and stuff like that but it is the place where the logs of the chip are printed so although this doesn't provide any information on what goes wrong when something doesn't work this is very useful when writing an exploit because we can always try to trigger some logs and see if we can actually get them on the uart so I'm not gonna go uh sadly there's no time to go over the memory layout of the titanium chip so we just want to write",
        "our requests to the new address and basically see uh see what happens so we send bigger and bigger payloads while monitoring the uart okay so we send bigger bigger impedance and some at some point we realize that the chip starts crashing um so what if we place actually a function that logs uh the tasks right at this point where the chip starts crashing and what we get is actually the logs on the uart that tells us that we are triggering a function we are getting uh code execution",
        "so what's going on probably this is our guess at least is that this is an address that was pushed into the stack by some task that is maybe maybe has to return there after its execution and uh",
        "from now on things get quite complex to actually get a an exploit working uh we",
        "need to move uh elsewhere because we cannot write any blockchain there it's it's quite uh quite cumbersome but we are actually releasing a blog post where we go over also the exploitation details of this vulnerability but now I'm gonna hand it over to Max for the impact that we achieved",
        "thank you Daniel",
        "so let's look at the impact of this vulnerability not only on the chip itself but on the whole system security uh something that would be great for us would be to find a memory region that is both writable and executable so we can write on our code but there is no such regions so then another thing we could try would be to reconfigure this memory uh permissions by playing with something called the mpus for memory protection units but on Titan name this mpu has a",
        "custom interface and that we did not spend enough time to reverse it so what we can do is to reuse the code that is already present in the VMware like making Rob change like Damiano explained and doing so we implemented again a leak command in our nose client tool this time based on the zero day we just presented so since we did not downgrade the VMware this time the data is not erased meaning that we can leak all the secrets present in the Chip's memory and uh the the command you see below um the lead command so is the one I'm speaking about here we are leaking this first 16 bytes that's all present at the address 0 and at the address zero uh you have the bootron so you see the first bytes of the bootron but can we do something more harmful with this vulnerability uh more harmful on this on the device can we leak strong box keys but before I answer that question let's first have a look at what is strongbox so it's the hardware back version of the Keystone and it allows applications to generate and use uh keys from within a safe environment meaning the Titan M chip but the Titan M does not store any Keys instead the keys are stored in object called key blobs that are encrypted inside the Titan and using a key encryption key that will is generated from several internal elements now these key blobs are then installed encrypted in the Android file system so whenever an application wants to use a key from strongbox it has the system to send the key blob to the chip the chip will decrypt the key blob and use the key to perform the operation so it's important it's interesting to note that as long as the root user can I mean as long as the user so root can access all the key blobs that's all present in Android file system so it can use any key but it should never be able to extract uh the the keys",
        "now something that we would be interesting for us to do would be to leak the the several elements that are used to derive the these key encryption keys but in short there is one element that is stored in a memory region that cannot be read from the OS so it's not the way to go to League strong boxes instead let's have a look to uh the the commands that are used to actually use these key blobs and uh to perform crypto operation so the First Command and the one that is interesting for us right now is begin operation it contains",
        "um the key blob and the characteristic characteristics of the key meaning the algorithm the the key size and informations like this and whenever the chip receives it it will decrypt the key blob and then save the decrypted data somewhere at a fixed address for later so by now we should see where we are going the two other commands are not really interesting uh for us but in short they allow the system and the chip to perform the operation and the data that it contains so our strategy is simple first of all we get the key blobs the key blob from the device they're all stored in a database inside the Keystone directory at least starting from Android 12 then we Forge a begin operation request with it we send it to the chip the chip will decrypt it and then we use our vulnerability to leak this decrypted key",
        "from the chip memory so now time for a live demo and I will call Damiano",
        "to help me with this so",
        "here you should see our demo application running on the pixel 3A device that uh",
        "what that runs the vulnerable version so let",
        "me just first",
        "okay so whenever I'm going to enter a secret in this application um",
        "the the application will generate a strong box key and then encrypt it with it so it will then print the ciphertext as you can see both on the screen and on the log so we have the IV and the ciphertext the next thing we do is that we will uh before we use our vulnerability so",
        "here are the First Command I'm using well first of all there is an extra step I need to stop the set of the demon because it's kind of locking the communication with the driver and our tool is uh",
        "it will communicate directly with the driver here we go so",
        "now I'm using the leak KB command that we implemented and this command will simply list the key blobs available so stored in strongbox from the database so we see there is only one the one corresponding to our demo app so the next thing is that's we will lick it",
        "hopefully it will work yeah so the bytes you see or the bytes uh of the key of the AES key that have been used during activity secrets so the next thing is that we will simply convert these values into a format accepted by open SSL because we will use open SSL to uh to decrypt this ciphertext",
        "so I will do some copy pasting from my cheat sheet because I do not recommend buy heart oops",
        "yes",
        "I will just remove the spaces from the key because otherwise open SSL won't be happy about it",
        "okay so now I'll just give this ciphertext to open SSL",
        "okay I can provide the IV",
        "and then the key",
        "great so here we go we decrypted our secret [Applause]",
        "thanks so noted for the video okay so before being able to put in place this attack there are few conditions that you must be followed so um first of all we need to be able to talk to the chief so in our case we rooted our device so it's fine but in in the real life you need other abilities of course to uh to get to that point and the other thing you can try uh is to do a to to interact directly on the hardware level with the SBI boss like remember the picture I show at the beginning uh of this presentation the next condition is to access the key blob so here again you need to have enough privilege to to read the database or you can find a way to bypass the the file based encryption which may sound even harder so this is just two highlights that before being able to put in places attack their field extra steps that must be followed in real life so other vulnerabilities to be exploited",
        "now we wanted to show you this mitigation whenever uh whenever",
        "implementing an application and whenever declaring all the parameters to use a strong box key it's possible to add this uh dislike that we highlighted set user authentication required and why is that too true the the key blob will be encrypted a second time with the value derived from the from the user password so whenever the user whenever the application will try to use this kid lob the user will be asked to enter its password so and of course the best mitigation is to update the VMware since we uh we reported this vulnerability to Google and it's not fixed so now it's time for a conclusion and with some takeaways so first of all the titanium is an interesting Target especially because it's very important for the whole system security we show that with black box fuzzing you can easily get the surface bugs but emulation the exposing is really more effective on such targets even though there are a few tricks that you need to put in place to optimize the results we discovered this critical zero day we presented and it allowed us to execute code on the Chip And to leak pretty much anything from the Chip's memory so we use that vulnerability to it was enough to leak strongbox Keys like any strongbox keys that were installed on the device the last thing is that we would like to thank Google for handling our uh vulnerability reports and for making the efforts to fix everything before today so that we can disclose the vulnerability for you",
        "so this is the end of this presentation um where you can find here a link uh We",
        "Will We Will um sorry we will push all the materials of this um talk in our GitHub repository so you have the link here and thank you everyone for listening [Music]",
        "[Music]"
    ],
    "kEl5qbLZVeY": [
        "[Music]",
        "okay hi everybody thank you for coming today uh our presentation is Android universal route exploiting xpu drivers",
        "so we are shingu Richard and John we're all members of Google's Android security and privacy organization shingu and myself are security engineers in the Android malware research team with an interest in detecting exploit ation John is program manager for the apvi program",
        "an internal Google effort aimed at coordinating the finding and fixing of",
        "vulnerabilities today we're going to talk to you about some routing exploits on Android we'll start off with an inth wild exploit that triggered This research then we'll move through some of the results of the internal research and then finally cover the Android partner vulnerability initiative which is how we got the internal findings fixed so a long time ago about 10 years now uh there was a series of similar vulnerabilities in multiple Android drivers the overall family was called framar essentially owing to bugs in the",
        "drivers mmap handlers user mode could create read write mappings of Kernel memory resulting in fairly simple privilege elevation this was a common problem at the time as you can see by the number of exploits listed on the slide but the problem was recognized and the situation",
        "improved the first more modern exploit we're going to talk about is Mt KSU Trend Micro published a Blog posting as you can see here uh about a piece of Android malware they found the main focus of the blog posting was the exploit for CV 2019",
        "2215 AKA bad binder uh but if further",
        "down in the blog they also mentioned a second exploit mediate Tech Su uh Tren micro attributed the malware to an AP group everybody likes an AP so we thought we'd take a look at it uh we very rapidly found ourselves at the XDA Developers forums the first release of Mt KSU supported Amazon Fire HD devices",
        "and this was very rapidly followed up by a second release supporting a much wider range of Hardware uh there are still people actually testing this this release today on hardware and Reporting whether it works or not so here's a video of Mt KSU running",
        "on one of my test devices with the minus V for verose option so it'll display all its debug output and here it goes so we can see it's uh looked up some kernel symbols you can see some kernel addresses floating around there and then at the end uid Z SE Linux is permissive",
        "so here are the three most important things broken out first thing it does go through the kernel symbol table get the function names and addresses the next two steps the exploit looks through the code of a couple of functions actually looking for particular instructions by finding particular instructions that are accessing certain variables uh the exploit can get the memory addresses of those variables or structures together with the structure offset out of the instructions this means it can then find various data that it needs to perform the exploit less hardcoded data makes the exploit more portable um if you think about Android there's a huge variety of kernels and devices out there own to fragmentation and OEM customization so if you're trying to maintain hardcoded lists of configuration addresses that's an awful lot of work if the exploit can find stuff on its own makes it a lot more portable uh King root who some of you might remember used to be a big provider of Android rooting solutions they went with the hardcoded approach uh configuration with addresses and offsets Etc a single one of their exploits that we found actually had configuration for over 5,000 combinations of Android device and kernel um that was the largest one we found some of them had considerably fewer but that's still a huge amount of work to maintain Mt KSU doesn't have that it just finds what it needs and goes for it now the exploit printed out quite a lot about what it was doing but it didn't really give many Clues as to how it was doing it so uh the important strings here at the top those are various things that are passed to the open CIS call however if you reverse engineer the binary they're not present the strings are obfuscated there's actually over 250 obfuscated strings in the executable most of them aren't referenced these three are looked up via a modified djb2 hash um in order to then get get",
        "the deod fiscated versions pass them to the CIS call once you've got the device nodes as here you can then have a look at the SE policy if you pull that off the device and as we can see here uh the device node is accessible by regular unprivileged Android",
        "applications now the driver supports an ioctl which essentially allows user mode to send a buffer of op codes from user into the kernel those OP codes include read move and write so essentially unprivileged user mode code has kernel read write capability uh via this ioctl now the driver's doing exactly what it was designed to do it's just the design and configuration didn't consider that someone might come along later and try to abuse the driver for different purposes pures uh an initial fix is quite simple change SE policy take away",
        "unprivileged application's ability to access the de well to open the device or issue I Opals and as you can see the exploit fails it can't initialize um there may be pre-installed",
        "applications which require access to the device node to do what they need to do but you can work around that with further SE policy explicitly allowing those applications alternatively you",
        "could Implement an out ofprocess how exposing specific functionality rather",
        "than generic pass through to the driver um that would have performance issues though so not always applicable compared to the earlier framar rout series of exploits Mt KSU is more complicated but it has exactly the same end result compromise of the kernel now we did eventually read the XDA Developers forum uh diplomatic is the individual who originally found the Mt KSU vulnerability and exploited it and without whose work I probably wouldn't be standing here talking to you today so mtk command Q is an accelerator",
        "driver with an interesting vulnerability what about other drivers GPU drivers need to be accessible if you think about the Chrome renderer process it's running in a very restrictive sandbox but it needs to do Graphics operations GPU drivers are very complicated performance is a very important Focus part of this involves a lot of attention on mapping memory between user mode and kernel or GPU so it fits into a number of the areas we've spoken about and there's not that many different GPU manufacturers for Android um arm and Qualcomm we tend to see security reports for those on a reasonably regular basis uh but",
        "imagination Technologies power VR we couldn't find very many security reports on that if you're not familiar with power VR there's an awful lot of power VR Hardware around in various places uh as well as Android devices power VR has been previously used by Apple it's in Chromebooks TVs some desktop computers",
        "even drones so it seems like this might be uh a suitable area for some further research so with that I will pass things over to shingu who will tell us about the other research thank you so uh like rich just said there's no way we can restrict on prev user access to uh Power GPU driver and uh uh par GPU",
        "driver exports hundreds ofal API to us space uh par developers called them as uh Bridge apis or Bridge functionings um so basically there are mean three three steps for talking to the device driver like you know opening device and oo and get response so to be more specific us space program can always use I Cisco providing uh function group ID function ID and the input uput data pass to the uh device driver so device driver will take look at the ID invoke the exact Bri gpis and S result back to user okay so here is the overview of how the uh brid API works so first step is to create curent buffers and copy user inputs uh invoke internal curent functions and then return result back to user unfortunately every step is buggy and so let's take a look at the first step so for example if we want to call the the specific uh Bri API we have to specify uh group ID and function IDs and on the right side you can see how the device driver uh export hundreds of uh IPS in",
        "this way so the way to calculate the D size is to naively trust user input so there will be an very obvious integral overflow issue happen here and which leads to he Auto bound right and you you may also see that device driver may have a lot of s checks but they always checking if an on sign integrator is always about zero so basically it's doing nothing okay and it also creates massive travel in the GPU framewor because all the bridge APS are implemented in the this way so Google assign several CVS for this issue H but good news here is that you know sometimes in flow May cancel the uh let's say if you allocate buer with the size that is Overflow but the size of the M Copy is also overflow so the three oflow here cancel each other so there's actually no security impact although the code is written in a very wrong way cool so uh let's take a look at the Second Step here um the second step is to about invoking internal function so basically there are me three types of con functions create con object use object and release object okay so uh just say we have a set of set of bridge API called act what it does is to create internal curent objects use current object for computations and then return handle back to user and handle something much pretty much predictable okay so if we take a close look uh the device driver create object a increment the reference count the reference count is one and then increment the reference count Protect by the log because we are going to C do something for internal computation and then de reference count and it's also Protect by the log okay and we also have a bridge set of bridge API y so the bridge API y does is uh finding con objects by handle provide from us space and decrement the reference count okay so if the reference count is decrement to zero then object a is free so there's a c CH we want to see that you know the F thre qu ofj a increment reference count and then Contex s happens to the third to to the uh second threat the second threat de reference count from one 2 to one and then do something is invoked and then the a ref count get decremented a is free everything looks fine however if we have a third Evo th here to further decrement the reference count from 1 to zero so a object will be free and then Conex we happens the first radicals do something here but a is also free so because every bridge API are written in this way in terms of its synchronization infrastructure so basic most like a dozens of konal apis are vulnerable in this way by the user free vulnerability so imagination technology also take a few months for fixing the issue because obviously you can not use a big lock to lock the entire world State otherwise we have a huge performance hit cool so uh there's a final step here copy result back to user so what it basic does does it to you know a divide driver tries to initialize an allocated con object copy object data back to us space so what happens here is that you know we have object a and divide driver tries to initialize object a by do something function and then it will copy a data back to your space so here's the problem if do something FS very early then a is left un initialized so we can easily Le kind of H pointers or pass of in this way with a SLS say that there a very stable way to leak all kinds of kind of information and we also have other issues like you know reference C fls up St flows user all types of user fre free our refence St later uh so as you can see in brid there will be lots of classic memory corruption risk conditions but and these bugs are definitely exploitable to rot any prop devices but we are not going to do a deep di for how to exploit this these bugs because we have something much more powerful so let's take a look at uh the memory management so you know we have a CPU we have GPU there will be lots of memory mappings happening here like CPU will allocate virtual Pages map to physic Pages similarly GPU will also map virtual pages to physic pages and there's also something called sh virtual memory or svm that basically mean the the the CPU and GPU will allocate their own separate different virtual pages and map to the same physical Pages for data transfer so uh well let's take a look at how the physical pag get managed and how GPU establish mappings from with uh GPU virtual pages to the phys pages okay so here is a important concept here called PMR or the PMR stands for physical memory resources so the US Space Program uh cause a lot of uh Bri apis to get a PMI handle so what PMI handle means is that userspace program tells the GPU driver like hey this is a bunch of physical memory I want to reserve and please give me a PMR handle back and later us space program can use can pass the PM handle for creating the GPU or CPU virtual memory allocation because uh we've already reserved a bunch of physical memory for memory mappings so you know creating P will involve with very lot arguments from the US space and you can always fast this arguments and because the arguments are not sanitized very well so for example if I say hey I want to Min two physical pages and you will get a k crash for auto B read and similarly if you want to create a GPU virtu P virtual Pages you also has to pass really a lot of arguments here um for example if I say oh physic the the physical ma of set is minus two then the C will crash because aound read so you can utilize the aound read issues to make sure like U that you can map to op physical Pages you want because you have the the the read out the b uh primitive cool so we also have another uh",
        "interesting vulnerability here is that you know uh if we want to have a GPU mapping uh so we have to operate the I VI so if we want to operate IU on arm 64 architecture then we should operate it on in an arm 64 for sure however there is a bridge API where we can tell divide dver that hey we are actually on mips so the device driver the GP driver will install the page table in mi W first and then later in initialize the page tables in arm 6 we later so as a result because we have a new architecture called arms the page tables are corrupted and once us Space Program call and map Cisco you can immediately see all kinds of interesting data because page tables are corrupted okay um well so let's take a look at the CPU side so C site um you can allocate bunch of virtual pages and map to the physical pages so in general user space program has to reserve our P handle telling the the divice driver like hey I want M like bun I want to have a bunch of physical Pages for future use and then you can pass the PM to M map so the device driver will map the uh vir Pages for you and there and and the device driver also has something called iron for checking the number of memory map P for security purposes we will talk about later so for example if we have two virtual Pages mapped to the same physical Pages then I count is equals to three because one by default okay we also had to cover another concept here called pin memory so pin memory is use for data transfers from the device to the host and according to my understanding that device D May preallocate some physical memory for uh avoiding cost in data transfer so uh the part device dev has Bridge API where you can U pay the physical memory Reserve by the PMR so once you do that all the fysal memory are consider as pin memory for data transfer and there's a global State here be on pin is set as foral for security purposes you may also has uh you may also call another Bridge API to unpin the physical Pages you pinned um so these physical pages will be moved to a glob C for King up later and then Global status being on pin will be updated as true so you know Let's see we allocate page ABC and then we un pain page ABC so page ABC will be inserted to Global list so how does these Pages get free it turns out that power device register means kind of shrinker so shrinker is and internal C rains so when memory is",
        "tied uh the scan object cack will be invoked to free all the pages in The glob list okay so let's say if we allocate page a BC and we C UNP ABC then we have Global list ABC right so however we can UNP the same page again so the global list will be ABC ABC and as result we will have a page dou fre issue so if you remember like a few slides before we have a global State here called be on pain so this is for preventing any double free on physical pages but why it doesn't work so it turns out that PV sech is not enable in production it is only enabled when code static and N Checker is enabled so if someone tries to check if my code secure with static code and N Checker the Asser will be enabled but in production it does nothing so this is what cv22 2122 is about and if we visit",
        "the existing Security checks um if phook pages are mapped it to somewhere else like you know we have I count about one so the physical pages not allowed to be on pain so let me explain this uh if we call the FL function here first all we create PMI handle and we um create CPU",
        "virtual Pages by m map we cannot unpin the memory because if we can do so then what happens here is that virtual pages will ma to physical pages that will be free later by L con shrinker so that's why the I account here to prevent such things happen however there's a sub of logic B here to backass security check if we create pin first and then unpin the memory uh Second and it will succeed because at this time we didn't map any memory so these fys pages are already put into the global list for free later and then we can c a map to map this to map the uh to get a bunch of virtual pages so what happens here is that we will have a bunch of virtual Pages mapped to the physical pages that will be free by lens con shrinker so um we can effectively trigger lens con shrinker by push enough enough memory pressure to L kernel by doing this again again so we will have a bunch of virtual Pages map to the Faceook pages that will be free later so this is what the CV 2021 3985 is about it was discovered in",
        "late February so it's a very uh set logic bug to bypass security check but user space program can read and write op fre physical pages and I personally call it as power rout okay so um that's type",
        "a routine but there's one more issue here is that some devices don't allow you to map on GPU device especially if you have device with higher versions of uh ddk okay so who has a privilege to map of GPU device if you check on the SX policy here uh you can see there will be a bunch of users are able to map on the GPU devices um and if us Space Program are really not allowed to on GPU device how does the open C API works because the the svog apis will return a CPU virtual address allocated from the GPU driver so what I did in past is to uh take a look at the openc libraries OB Library um is actually implemented by a St vendor Library so if you uh if you have a medch device you can see the powerr and medch vand library for implementing all the openc apis and and by reversing these vendor apis I basically had two finding so the first finding here is that the the US space vendor library has more rigorous Security check than the C model and second uh the vendor Library will talk to the higher privileg backhand services to unmap uh GPU driver and get the uh virtual P virtual page address back so here is the bypass of the SM Linux here so we have chart process here call the openc API anog and child process here is PES by parent so when the child process tries to create PMR because parent process is able to intercept all the Cal by Petri so we can so we can ask uh so parent process to hijack the control flow of the child process to cause onp PMR immediately after PMR is created and then child process will use this vendor library to unmap uh GPU drivers and get a CPU of or address back and in this way we can effectively backpass as Linux and Trigger the uh probability so the final part here is about uh how to R your device similar to device by D pipe V you may also have a chance to load C modules uh but human mind power is something much more powerful because it is p physical page is free so there will be lots of method to rad a device by power Ro vulnerabilities you can CW page tables you can um CW binary RS you can attack know in a memory corruption ways or traditional ways so I'm going to talk about transitional ways so first of all uh the first thing I will do is just sploot of CH process with different names so because we can read a right opy new um fre pH Pages we can find the exact test structures and is CR CR address and then we can find the victim files by F cred overr right the private data for example we can control the private data of Ash so we can use the I code from Ashman to implement an OP re primitive and the next step we are going to do is to D kernel image well uh you know the PMR kernel structure has a field called as annotations which is specified by us space so we can find find the PMR structure where PMR structure contains a kernel data text readon pointers so we can dump a lot of current informations and find where is the possible address of as forcing off",
        "and the final part here is to write crash structure so one thing I want to I want to say is that because we are writing a right combin pages so we probably have just Mo CPU cat for a while cool so here is the demo video for routing Ren 9 a device it's one of the most popular device on this planet so uh let's get",
        "started so now it's try to create a lot of P structures find the C data pointers and then create a lot of CH process here um to get the credential",
        "structure so it may take a while U and now we find the file structure we CRA private data so we can use the Ashman for preal right Primitives uh and then we can Dum a lot of curent informations for finding where the part where the SD links and forcing is and then we can turn off",
        "later and then the final step here uh is to get a root process uh so the way how it work here is to you know search the physical memory fix memory again again and try to find our credential file and once we find it we will temper all the important field like u20 so we have a ria uh it might take a while depends on exact memory uh the depend on situation of the physical memories like sometimes you may wait for a while but keep in mind this kind of bability is very stable because you don't have to do like keep spre you don't have to worry about KSL alignment the only thing you have you can do is to search memory again again and find the interesting con structure you want um so basically means",
        "if you attack device by this vulnerability vulnerability the device won't crash so in my with a while now we hijack the Qui green structure and we have Ro Shi on redm KN device and we can contr device now thank you and please welcome John for introducing a",
        "[Applause]",
        "project thanks jingu so the vulnerabilities that jingu and Richard discovered are part of a broad Google wide effort to make the Android ecosystem more secure and this includes strengthening the security of our third party OEM Partners the way that we find informed partners and then publicly disclose these security vulnerabilities all takes place through this program called the Android partner vulnerability initiative or appy for sure so I'm sure you're familiar that Android incorporates security features across the entire industry and we always try to make sure our devices are really safe and secure we also hold developers and device manufacturers to these high standards as well as part of that effort we have a range of existing programs that I'm sure many of you are probably already familiar with one of them being the Google bug buny program and also the Android bug buny program the Android partner vulnerability initiative adds another layer of security for this targeted set of Android oems the way it works is that any Google employee on any team if they find a vulnerability that affects a third party OEM can report their finding through apbi where we then take that vulnerability perform reproduction identify all the effective partner builds and then disclose those builds and issues to the OEM partners that are affected finally we have public disclosure and Patch advisory so I'm not sure many people know about this link but that link on the screen is a link to all of our publicly disclosed issues through this program you should take a look I'm pretty sure not many people know about this so for this specific case of the power VR issues the process was a little bit more complicated uh the problem is that we're not tasked with just disclosing to imagination technologies that owns and manages power VR but there's so many Downstream oems that also utilize these drivers so what we had to do is we had to First disclose to imagination Technologies all the various cves found during this research and ensure that imagination Technologies had the resources they need to issue patches then we went to all the downstream oems and we made sure that they had the patches once they were available and made sure they had the ability to go and Implement patches as well finally we disclose all of these issues on our apy issue tracker that I mentioned earlier the following statement was provided by m ation Technologies and it touches on how they're looking to continue to engage with the appv program to benefit the security of the entire industry in the",
        "space I'd like to close this briefing with a few key takeaways for developers and researchers essentially the takeaways for driver developers comes down to two main things the first sanitize user inputs from user mode paying particular attention to sign and unsigned issues and second make sure that you're locking down accessible functionality to the minimum functionality required driver developers can go one step further limit the driver to very clearly understood purpose and make sure that you're incorporating fuzz testing and code review as part of your development life",
        "cycle for researchers memory mapping invisibility tends to be a reoccurring theme in this space there's been multiple cves and drivers for various Hardware processing units that have been found over the past couple of years outside of the findings that we've touched on during this talk we've included examples to framar rout Qualcomm and Samsung CB in the resources slide at the end if you really want to learn more the underlying question Still Remains have these power VR issues been found before and not reported it's possible some of the issues that we were discovered were not hard to identify and I can tell you from firsthand experience once shingu found the first Power VR issue the rest of them followed very shortly afterwards ioo fuzzing isn't necessarily simple and there's a link to another black hat talk that happened a couple years ago in the resources slide that talks about fuzzing kernel drivers with interface awareness and really the authors used this method to find other cves in the mediatech cmdq driver these bugs were found using much simpler methods and much simpler approaches if this talk inspires you to go out and find your own type of vulnerabilities I encourage you to keep in mind that you can submit these types of issues to the Android bug bunny program where they're going to be assessed and then evaluated to see if they have underlying impact to the Android devices or ecosystem so with that in closing we wanted to share this list of resources resour Resources with driver developers",
        "researchers and the security Community as a whole if you want to dive deeper into this research so I really appreciate all of you coming to our talk today and we look forward to answering your questions thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "v1VBMg7npoc": [
        "[Music]",
        "foreign",
        "good afternoon good evening everyone here in person and in the virtual room this talk is about evaluating the security posture of graph neural network models the main contributor is Dr Young Zhang and his research group from cispa Germany",
        "for the past decades we have seen many successful machine learning models ranging from facial recognition to voice recognition and to the latest large-scale language models and text to image generators but today we're gonna stay away from the images and text audio video we're going to talk about graph",
        "graph they are everywhere this is not a unfamiliar concept we have arbitrary sizes and the examples are plenty social graph knowledge graphs your pictures history like the user item interaction graphs even the molecular they can be represented as a molecular graphs",
        "as applications that also everywhere as well you go on the e-commerce website they have a recommendation for you we found the item you may be interested and you go on the social network they will actually tell you that do you know someone you want to connect it with him or her all sorts of the things and recently there is the new trend for the drug e-discovery so instead of looking at the toxicities of the molecules in the lab you can use the graph neural networks to do the toxicity prediction so these pretty much pervasive the graph applications",
        "and the traditional deep neural networks they have been proven pretty much successful for the past decades but they're designed for grids like images or sequences for text",
        "in light of the success graph neural",
        "network was invented back in 2014-15",
        "basically the goal is to Mark a input",
        "graph like the graph is not readily consumable by our computers into the euclidean space into vectors so they are in that case you can start consuming that in the computers to do that there's a technology called the messaging passing used by graphenewal Network so basically they just aggregate your Labor's information in a recursive way and based on the different Technologies you have different aggregators such as graph convolutional Network or graph isomorphism Networks",
        "and once you map the node into the euclidean space you can start doing the node classification link prediction based on the distance between the vectors",
        "and if we go further into the graph level you will actually have one thing is the the core concept of graph level mapping is you have the node embeddings you have a graph you have K nodes and you want to compress them into a single Vector so the entire graph is represented by a single vector if you do that you can go there and do the graph classification and matching the visualization you can also do the toxicity prediction as I mentioned before so these are the applications and the graph levels just some background and all these big companies you name it Google Twitter and the different applications they are all doing this graph new network been just pretty much invisible but this in the background in the back end to support your daily life",
        "and yes we are talking about the bright",
        "side of machine learning here comes the dark side talk about the adversary of machine learning if you do that in the Google News you probably see all the screenshots you're doing here this is a big topic recently it's about the machine the security of the machine learning models themselves",
        "we pretty much agree with the Air Force magazine it's like does AI represent the attack surface for the adversaries so that's a talk about if the Cooperative network is actually a new attack surface I will talk about the four attacks and I will start with linkery identify link re-identification attack the goal",
        "of this attack is to identify if two nodes are connected in the private data right here is actually the scenario we frame our graphene Network in the node classification task and its attackers capability is that they can be able to breach where you store your posterior scores why it is a valid scenario let us take this gigantic social network for example you pump that into the group new network you take just a few hours and you generate posters of each node and you",
        "don't do that where we frankly so you store in the database upon the adversary breach this database where you store the results they can start inferring if two nodes are actually connected in your private graph you don't want to discuss that information just put that into the contact reason framework right you don't want to discuss that if two patients are connected together it is too much priority information there how do they do that so this is actually we talk about the incredibly fishing attack",
        "so the one upon the get the posterior scores they are literally just two vectors right just simplify the example here they can immediately just use the posterior similarity to calculate that if it is greater than a threshold there is a link exists between these two nodes otherwise not",
        "even we take this very straightforward approach the performance is reasonably okay but not really good",
        "then we think about the second scenario since the attackers already know that this posterior School are generated by a graph neural network model how about I use a shadow data set and build the model by myself then",
        "here's what they can do after stress they do that in their local environment there is no interaction with a remote model they are targeting what they do is that they have a shadow model that they have the shutter data set they will build their own shadow model still as a craft new network from there they look at the posterior scores of all the nodes because they actually control the whole environment then could create a MLP as their attack model for example they can use the concatenation of these two posterior schools together and the trend with the positive and negative edges",
        "once they do that okay they'll be pretty much as it is take this one for example if the posterior scores they are actually four if they contact them together you look at a dimension eight vector suppose the database you Bridge is actually returning you a",
        "density vectors contacting them together",
        "that means a dimension of six so there is a dimension mismatch you cannot just easily do that a simple solution just goes through what we tried is to unify the input of this attack model so we have a different distance functions to unify the posterior score at the same time we use four different entropies to calculate the difference between the posterior scores that we are supposed to train then we build this attack model",
        "and once you breach the database you can see that you have the unified input then your model works performance wise it increased the",
        "previous",
        "Simple Solution like just directly calculating the similarities between the posterior scores and one important thing you're looking at here is like you don't actually need to use the same thing as a the Target Model is training for example you can use a sightseer it's a citation graph it can actually improve the link re-identification from the protein data set",
        "from there we just switch the gear we talk about the posterior scores what if the attackers actually get the graphing values from your environment",
        "here I put these two together it'll be easier to see the values or the consequence of these two attacks together the first one is property influence attack so basically the attacker can actually infer the basic graph properties from a",
        "graph embedding the second one is they can actually infer if a certain software application",
        "a graph violates graph embedding",
        "I started with a this one just a quick recap graph embedding just bear in mind the entire graph is represented by a single Vector just a quick recap this before we move forward",
        "and here's a scenario",
        "we frame the graphing neural network models task is graph classification and attacker capabilities first they",
        "breach your database and get the graph embeddings second they can query the graph new network model so this is a different between the property inverse attack and Link real identity attack",
        "and just a big background it's like for the you have this private graphs database you pump them into a graph new network and you get the graph embeddings for the graphing value you don't necessarily need to do that every time unless you have a new graph new network model so this is pretty much like a natural process to do that only once and store in the database",
        "upon the attacker actually breach the database what can they do right because you will think that they are just vectors the property won't be that much harm and the first one they can do is to infer from this Vector that this is actually a graph with approximately four notes just for example how do you achieve this goal first the attackers they have to have their own auxiliary graphs if we firm that into the molecular graph environment right suppose you do the molecular toxicity prediction it's easy",
        "for them to obtain a set of this auxiliary molecular graphs",
        "which is a curry the graph new network model and get a response like the graph embeddings so from there on they will build the attack model locally after stress they do that take one stick at the graph embeddings there is no further interaction with the Target Model",
        "let's just build a MLP model literally like the attack model that you can use the estimated",
        "number of nodes with the grand choose because they've already controlled the auxiliary graph so for example they already know that the first auxiliary graph has",
        "four nodes and the second one actually have five nodes so they put into the different buckets they'll help them to roughly estimates the size of the graph",
        "and upon doing that the trender attack model they just pump the graphene variants they bridged into this attack model they can successfully estimate",
        "the number of nodes from this graph and the performance wise it is okay ish we use five publicly used dependent data set for example if we take the enzymes for example the very first row the second figure you can see that the attacker if the further the fangular fun granularity information cannot be inferred but they can actually infer a reasonably like rough size of this graph",
        "but it doesn't add much value to the attackers so here's a graph I estimated is actually there are four nodes there's not much I can get however there is one further attack we",
        "talked about is the subgraph inference attack the attacker can infer if this graph contains a specific subgraph for example here a triangle recall that we can estimate the size of the graph together it will further reduce the",
        "search space of the attacker to reconstruct your graph if we further frame that into the molecular graph concept it's like if you have this a million dollar molecular graph right",
        "and the attacker just get this embedding they can actually just infer if they have a specific subgraph in this molecular graph then by estimating the",
        "size of the graph they can gradually just reduce their search size to replicate your molecular's graph right that's the impact of this attack how do they do that but the same thing the attackers still have to have have the auxiliary graphs they talk to the query the remote graph neural network model and getting the graphing values out the special treatment they have to do is have to build a local model and this local model the only functionality is to generate the subgraph embeddings you are interested ways right of stress this is actually a local model and then the combine the graph embeddings the queried with this subgraph embeddings and they can generate the negative pair because they know that this triangle does not exist in the auxiliary graph the top one and also they can generate the positive queries because they know that the triangle exists in the auxiliary graph number two and so on so forth once they do that they can just build the amp model literally just converting this one into a binary classification problem",
        "same thing like once they get the graph embeddings from your database they can start in getting the subgraph embedding combine them together pumping to the attack model and give you estimation whether this embedding contains a triangle or not",
        "our evaluation shows that the best way to combine these two things together is to use the graph embedding difference like using the difference between graph embeddings and subgraph embeddings to train the attack model the performance look at the old code or score his property between 0.6 to 0.85 or something like that but",
        "it's reasonably reasonably good",
        "if we take just switch the the Brick a bit we look at the SE attacks we already covered basically the the basics of the foundation is like the attacker can actually breach your database right if you secure your database all these",
        "things that you store it look storing your environment you can pretty much prevent these two attacks from happening",
        "right because they don't have the embeddings they don't have the posterior scores they cannot carry out these attacks so here it comes the takeaway part one it's securely infrastructure and also at",
        "the same time audit your graph neural network-based machine learning pipeline you may have heard of this recommendations but the machine learning model you have don't take a cover layer attitude towards this graph neonative model their output has meaningful information",
        "inside so they're not just numbers",
        "yeah what's next you secure your database you prevent the Linker identification attack property inference attack subgraphy inverse attack what can they do so along the pipeline the model itself",
        "you spend the money to connect your data you spend the money to build the growth new network model under the model itself is really valuable right normally you just open up this model and serve the customers that's probably you're gonna do that's what we're going to talk about with the model extract extraction attack is the attacker is going to physically replicate the model's functionality remotely and they don't want to bridge your security boundary as well let's talk about the details so you have this model you build it you turn it and you offer the response to the customers and you secure your infrastructure you take all advice we just mentioned and you open up to the customer you provide a secure API so the customer can query the Cooper neural network model and get a response from the model and build their Downstream applications everything is fine however if you look at from the attacker perspective they can pretend to be a customer they pay for your subscription the steel goes to the secure API there is nothing you can detect here because they're customers their goal is to get the response and response replicate the functionality of your model",
        "and the Hope process work like this don't be scared by this workflow I will explain to them one by one I will start with learning the discrete graph structure",
        "it is pretty straightforward if the attackers already have the graph they can just do the query to the Target Model then you can just get the response but potentially they may actually not have the growth structure suppose that it only has the user profile but they don't have the connection between the users what do they have to do is to build a graph I mean some structures there and to query the Target Model",
        "we use the idgo framework to learn the discrete graph structure I will not go into the details you have the reference and in the worst case if you don't have this framework in your system the attacker can actually just use the KN algorithm to have a bare minimum bare minimum structure and query",
        "the Target Model that's the step one they just have to build a graph somewhere from the data that they have upon they actually have the graph structure they will have to make the full use of the response from the Target Model we we actually talk about three scenarios the Target Model can return loading values they can use returning the posterior scores or they can just return the Disney projection scores I mean Disney is a popular data visualization",
        "framework they just projected the high dimension data into three or d three 3D or 2D space you can just visualize them easily",
        "how do they do that back to the query graph they just pump this choreograph to the Target Model and the Target Model gonna send the response back and record that what we have talked about before is they're gonna return you the vectors right regardless this embedding or prediction or twisting projection they're just float number is you map them into the euclidean space probably something look like this",
        "but at the same time the same curly graph going to be pumping to the type of surrogate model and they will get the response from the surrogate model as well they may not let's say they're not they're not matching each other at the moment the attackers go the first goal is to make sure that they use this first loss function to move the triangle close to the squares the Foundation of this",
        "loss function is to maintain the similar spatial connectivity in the euclidian space between the surrogator model and the Target Model",
        "once they do that the second goal they want to achieve is a classification because we frame that this attack is in the load classification task",
        "suppose that these two nodes they have different classes and from the Target Model perspective they have different decision boundaries the attackers just need to make sure that these triangles they are put into the same boundary with the same classes",
        "that's why we use a cross entropy loss as the second step to push this to make sure that the surrogate model going to make the same decision as the Target Model does right",
        "now talking about the results",
        "so the results is quite fascinating is the first thing is like the attacker they can conduct the attack with a low in the Target models architecture all they need to know is that the Target Model is using the graph neural network models all right so they can just have different surrogate models such as graph convolution Network or they can use graph isomorphism Network as long as the project the I mean just mimicking the behavior of the Target Model so everything's going to be the triangle and the squares they're going to be pushed together all right so that's the the call Core goal of the attacker and the evaluation results shows that",
        "the attacker can only use about three percent of the target model's training data like so for example if you use 100k",
        "so I mean the size of the training data set is 100k nodes the attacker only you need to use a 3K queries to replicate the performance of",
        "your target I mean of your model our evaluation shows that here you can see that suppose that the Target Model is built by graph Sage and the attacker actually use the Gin which is graph isomorphism Network",
        "to replicate your functionality just like about two percent difference in terms of the prediction accuracy",
        "the second thing that we find out is a two-dimension tissue projection can be the new attack surface this is pretty scary because the Disney projection we test is a two-dimensional one that means one node will be represented by two coordinates right you just project that like the square or triangle it has better it has very minimum information in this vectors I mean just as we projected but it's not the case we evaluated that we showed that yes",
        "there is a performance job because you only have the node is represented by two float numbers but still the attacker can actually replicate the functionality with reasonably good performance so for example if you look at the Target Model as git the graph attention Network and the surrogate model is Gen again the difference is about 40 percent right it is a big job but if you look at the the Target Model as a gene and the Target Model as graph Sage the performance drop is only seven percent that means that attacker can really replicate certain functionalities out of your model that's pretty pretty much the information I want to pass on here what can we do for the defense the defense is a tricky one",
        "the usual approach is to add perturbation like add some random noise to your response so for example here if you use a gaussian noise right so these",
        "squares are going to be randomly pushed somewhere else in the I mean rather than the original position that we push somewhere else however if you look at the first loss function the functionality the core functionality of this loss is to make sure that whatever you have",
        "project into the euclidean space will be tracked by the attacker model",
        "so in this case you won't be able to staying away from just just by perturbation you won't be able to",
        "like say reduce the attack",
        "our evaluation shows that",
        "the teeth need let's say take these two figures for example both tissue and embedding embedding contains the most information and Tiffany contains List information in terms of the Target model's response and the Delta is a standard deviation of the gaussian Noise We vary that noise and it shows that the attacker can still pretty much just like track your target model",
        "and still return a reasonable performance",
        "so I mean we put this one as a future research direction to see how we can figure out the way like without reducing the functionality of your model and at the same time the attacker cannot replicate the functionality of your your Target Model right",
        "so here comes the takeaway part two the first thing is monitor your model logs for anomalies the one thing that you can look into is to understand the customer if they actually send some strange queries to your system because you will see if you're a legit customer maybe at the beginning they will send you the graphs and the predictions May fluctuate a little bit but as a mature customer if the study needs send you some information and you notice that the performance drops for no reason and for",
        "the other customers the performance still pretty good that means something that something is off you probably have to keep an eye on your logs for that kind of customers figure out what kind of data they pump into your system and the second thing is to evaluate the security in a privacy posture of your graph neural network models personally speaking I would go as far as pen testing your graphenewal network models this is represent a new attack service like take this previous example for example like this mod extraction you have your secure boundary you have your secure API everything is by book secure but still",
        "your model can be replicated by its attackers that's pretty scary that means",
        "you have to seriously figure out the different ways to pen test your model security posture and understand what would be the consequence by exposing your model to the customers and what kind of defense mechanism you can apply to the model to make sure that everything is fine and your functionalities will not be replicated by the attackers",
        "I mean to facilitate the the community we release the code they are all open sourced you can feel free to to grab the source code and adapt to your framework or environment to understand to what extent your system is exposed to the different attacks",
        "and for that I conclude my presentation I'm ready to take questions",
        "the Privacy posture it's pretty hard to let me just go back to the",
        "to the pipeline here the Privacy things that you can do the first thing you mean like talk about that auditing the graph new network learning pipeline the",
        "first thing you can do is to make sure that your training graph is not accessed by unauthorized the personnel that's the first thing the second thing is like",
        "don't expose the posteriors to unauthorized person as well so in that case they don't have the original posterior scores embeddings of your training data the key message is like the raw chaining graph they are private for sure",
        "but the transformed vectors of the training data is also",
        "but let's say it's still quite sensitive the private information so you have to secure both the raw data and the transform data please please head to the microphone to",
        "give your questions please it's in the middle Ohio thank you",
        "can you talk a bit uh more about size and scale with uh very large models coming up these days do you think these kinds of attacks and defenses apply equally to billion parameter models or 100 billion parameter models can you repeat your question again can you talk a bit about the if this changes with scale so we have",
        "very large parameter models uh flying around doing cool things in the first few slides of your presentation just uh some of the techniques you talked about change when you're going Beyond 100K no training sets into much much",
        "larger models so your question is like if the training data is big can the function still be replicated by the queries yeah that's a good question I mean if let us take this functionality for example if you take the social network right social network always reaches tons of minutes the first thing that you catch your model going to be quite complicated to understand the decision boundary that probably is easier for me just go down to the discrete boundary here",
        "just give me one second here so the design boundary can be complicated I have to say it is really complex once in that you can I mean from the attacker perspective they can pump into slightly larger query data to understand to what extent I mean just for example in this euclidean space right you pump into your query and you can always understand the same boundaries of your query data right that is one thing that you can do and from there you can just fine tune your queries to a certain perspectives so for example you vary your load features the DC in boundary can change or not change so you'll be under able to understand if the load features I mean the graph Universe graph neural network is sensitive to the node features what is actually sensitive to the graph structure you will be able to understand that and to answer your question without exception the attackers they",
        "have to pump into more data to understand the design boundary if your data is reached 10 billions",
        "I would say the attacker has to stay with your customer as your customer for at least a couple months to cover up their trades and hopefully they will be able to replace your model's functionality but still it is possible",
        "five minutes five minutes Professor sang",
        "uh you mentioned about three percent of the size yeah you think that uh changes with scale say to like if you",
        "were trying to replicate a billion uh model on Facebook",
        "for that we haven't done any large-scale tests because for our test is reaching about let's say 20 I mean not 20ish it is probably between 100K and 20K",
        "we reach that scale to three percent we envisioned that for graphs there",
        "there is a property called assault activity in the classic graph Theory it's like the nodes that share similar features they're going to be close in the graph so in that case maybe if you use the social network let's say the size is still big like tens of minutes but the UTC in boundary can be quite straightforward because you have a cluster of data that grouped together so for example you have people that they are interested into black hat right they're probably going to be connected to each other like a very close like this complete graph almost quite dense graph and from the decision boundary perspective once the map into the new Canadian space the nodes are going to be close to each other like almost a cluster so in that case your design boundary is quite straightforward and the cut the attacker can still use quite reasonably less data to query your model and get the functionality replicated",
        "I mean again we require large skill tests",
        "[Music]",
        "thank you [Music]"
    ],
    "cVf7Ww67j68": [
        "[Music]",
        "okay everyone uh thank you everyone for coming to this talk my name is Rex wall and this is my co-speaker genuine Zhang",
        "you can read about us online we have a lot of things to cover today so we're just going to Jump Right In",
        "so imagine a sophisticated attacker",
        "compromise your Linux production environment uh he launches a lock for Shell exploit and then executed a reverse shell back to his machine",
        "then he discovered that the machine has a vulnerable version of pseudo running on it so he elevated the privilege",
        "and he tried to read the Etsy Shadow file to see if there's anything interesting to crack",
        "then he also found out that he can move to another Machine by reading into the SSH processing environmental variable",
        "so he happily moved to the second machine and as he is celebrating",
        "he discovered that his assets was gone so he fired the RC again and this time there's no luck quickly he find out his assets was blocked",
        "so now let's take a look at the other side of the story as everything happens your security engineer received a sequence of alerts from The Cutting Edge security monitoring software and these softwares monitor the processing information and all the system calls happening on the machine so for example when a reverse shell is executed there will be a connection call and there may be others depending on the technique when the attacker tried to read the Etsy Shadow file they will be either open or open ad system call now the question is how does how do you use this level of visibility to actually perform a threat detection",
        "so we want to use a really really simple detection rule to illustrate the idea",
        "so this rule is saying um I want to detect untrusted program that's reading the Etsy Shadow file now let me explain the rule the rule is saying if the system call is open or open at and it has re-permission",
        "and the file name argument points to the SC Shadow file",
        "and also the program is not in the allow list of programs then we'll fire the alert",
        "so you can see that you can quickly build out really complicated rules with even multiple system calls you can even build a machine learning algorithms on top of these visibility but all these logic relies on the fact that the system called software is able to extract the data correctly",
        "so in this talk we're going to dive really deep into how system called tracing works and then we'll talk about the vulnerabilities in the system called tracing software once we understand the vulnerability we'll talk about how to actually exploit these vulnerabilities and then we'll conclude with mitigations and takeaways",
        "thank you",
        "yeah thank you Rex um as last mentioned Cisco tradition is really important with the text best so this diagram gives you an overview for Cisco tracing basically including two parts one is the hopes for C4 interception and also the tracing program so one application issue a system called into the kernel the assist or code pass is executed if any hooks plays in the co-pass the attached tracing program will be triggered to collect seasonal information and send those data to the monitor agent to detect threat the tracing program can be implemented and in kernel space as shown on the left diagram or implemented as a user space program as part of the monitoring agent which is shown on the right diagram so the program used to collect seasonal data like system arguments is called tracing program this program can be attached to different hooks like Trace point k-pro or P Trace we can directly use Linux native magnesis as a tracing program or you can Implement your own tracing program as kernel module adbf Pro or use a Space Program",
        "the first kind of hooks for Cisco interception is called Chase point it's a steady hook in the kernel for Cisco intersection this is Kernel provides six enter and 6X Trace point if we attach the tracing program to the address point the function call or traces enter and traces exit if you use the same parameters to trigger the tracing program the first parameter is called Rex which same The Cisco arguments the second parameter is ID which is the accessible number Trace Point provide low overhead but it's only provides static single interception",
        "you can also use the dynamic hook like cable using cable you can register the tracing program on almost any instructions in the Cisco podcast when the instructions get excluded the tracing program will trigger k-pro is a dynamic approach but compared to the choice point it's kind of slow and also you need to know exactly how the data is stored in the memory and register in order to get the useful information like assistful arguments",
        "future is provide a user space solution for Cisco tracing similar to the trace point is a steady hook for Cisco enter and exit",
        "using p-trace you don't need to implement any kernel programs and as a tracing program but only the user Space Program are needed compared to the previous two approach key trace overheads of performance is",
        "higher for optimization you can combine with the second and Cisco filtering for better performance",
        "you can also use the ldp load for physical interception but this approach is easy to bypass if we use assembly code to issue system call",
        "so many of you have probably heard about the cloud workload protection products this product usually provides Advanced threat detection based ones for tracing there are different kinds of cloud workloads like virtual machine containers on customer merge VMS service containers and others so for service containers it's usually allocated and maintained by the cloud provider on demand so it usually have no access to the host",
        "this table summarized how Cisco trading techniques can be applied to different workloads in the cloud for virtual machine we have full access 3D host so we can use any kinds of the Hawks trading programs and for the tools you can use Sparkle ebpf kernel module and fuckopedic we'll talk about this tour later for containers on customer major VM so you can have the same options as the virtual machine as long as they get enough capabilities for service containers as we mentioned you have no ss3d host so we can only use the key Trace as talking point and implement the tracing program in user space instead of using file called ebpf and kernel module we can only use the fuckopedic",
        "Falco used the similar techniques to trade system core it's open source project in cncf and it's widely used",
        "so internal space is support kernel module and evapf pro using tracepoint",
        "in user space speed is developed based on key Trace faculty kidding is dedicated for system tracing of service workloads",
        "so we did not evaluate other security monitor agents but we believe the popularity of Fargo represent an implementation that is widely accepted by the community unfortunately this kind of imitation suffer for the total issue there is time to check time use let's take the connect system core for example the second argument of Kinesis Encore is a user pointer called user V address which pointing to the stock address in user space during time will check the tracing program did reference this user space pointer to get the socket address and during time we use the kernel did reference the same used as space pointer to get the socket address again however between time or check and time will use the memory from user space pointed by the user V address pointer is vulnerable to be changed by this user space attacker so in this case the stock address can be different between timer check and time use causing a total issue",
        "so let's dive into the connection call which can help you understand the important issue for Cisco tracing",
        "when the application issue the connected flow in the kernel so the Cisco Handler will check if any tracing program attached to the static hook a system called enter like key Trace second Sixth and the trace point if this is true the trading program will be triggered",
        "after that the Cisco Handler will look up the accessible table and jump to the connection core to create a connection on a socket",
        "before returning to our user space the Handler will again check if any trading program attached to the study Fork assets or exit like e-trace 6X Tracy point and so on similarly if this is true the tracing program will be called",
        "so as I mentioned earlier the second argument of Kinesis and core is a user pointer pointing to the stock address in user space this pointer is passed through the connect session call and assigned to different kernel variables which is highlight in red",
        "the kernel called move address to Kernel to make a copy of stock address from the user space to the kernel buffer",
        "and then the kernel will call internal function six connect file to create a connection on a socket based on the Kernel buffer and this is a time of use by Linux kernel for the connectors and core arguments",
        "before the memory copy function the kernel buffer is not created so",
        "and call enter or to any places before the memory copy function using k-pro the tracing programs need to de-reference the user pointer or read the user space memory directory to get the stock address as we mentioned earlier the user memory is vulnerable to be changed by the attacker from the user space",
        "after the memory copy function so uh the",
        "kernel buffer is created with one copies of the stock address unfortunately the total issue may still exist think about if we attach the tracing program to the study hook a system called exit right 6X tracing point or P Trace the tracing program may still will it reference the user pointer to get the socket address again the user memory is vulnerable for the attacker from user space",
        "faculty use p-trace for Cisco Android",
        "and exit but only use the",
        "only used 6X Express point",
        "so hopefully you got some idea about the total issue for system of tracing in the source code level next I'll head over to Rex talk about the variabilities",
        "okay so um although the example that we use is uh on kernel 5.7 but this uh tactical issue really exists since the day features and Trace point was introduced and we actually confirmed with the kernel developers that this is the expected Behavior because these features are really designed for performance and debugging initially and in terms of mitigation what they recommend is",
        "um you know the software need to actually monitor the kernel memory for this kind of security purposes but it sounds very simple it will become quickly very complicated when you actually implement it and we'll talk about that when we talk about mitigations",
        "so um basically we reported this issue to Falco and the main thing in their software is that they have to talk to issue as this exit because they use the three-spoint SS exit and P dick also used the P trees SSX so this will impact Falco version older than 0.31.1 and if you're using the commercial version you probably want to check what version is affected and uh we report this issue on December and it's mitigated in March the mitigation that was deployed is they will compare the for Trace point they will compare the center and this exit data and if there's any change that potential will indicate a tampering attempt for ptake they also deploy the same mitigation for p3s as a center and also features SS exit",
        "now in terms of the what kind of system calls are actually being affected so we analyze the important system calls in the open source Falco rules pretty much majority of them are impacted there are two exceptions in this table one is the exactly system call the reason is that when Falco trees exactly they actually go in and read the kernel data so they didn't fully rely on the trace Point result uh the second one is the send to and send message system call so later we'll talk about how to use the blocking condition to exploit uh the talk to issue but in the send to and send message we didn't find a reliable way to influence the blocking condition but also keep in mind that this two system costs are typically heavy to Monitor and this limits their adoption",
        "okay so I think the vulnerability hopefully everybody got a sense of what the vulnerability is now let's talk about how to actually exploit the vulnerability",
        "so we don't want to acquire any additional privilege and also we don't want to acquire any additional capabilities in the bypass we need to have some level of control",
        "we want the exploit to be 100 reliable because in this game if the attacker is being detected once then the whole operation are potentially at risk",
        "okay so this leads us to two exploitation strategies uh we will first talk about exported strategy number one which is the research that we did in last year's Defcon um from there you can sort of see",
        "uh cross-core uh interrupt",
        "but in order to properly manage the",
        "bypass using this delay everything has to be precisely synchronized we have to inject it at the precise timing and then we have to synchronize all the data operations so this we we need to use a system called user4sd",
        "and there are some limitations of using",
        "this citizen call number one is if you are using Docker containers and you enable the default icon profile then the second profile will actually block the system call so this wouldn't work in the container uh the other limitation is that",
        "most of the cloud workloads are not uh does not use user 5D so the usage of this system call indicates something abnormal and this is actually the mitigation deploy by Falco last year so they detect the usage of user 5D system called",
        "okay so last year we went back and we think you know how do we how do we overcome this limitation what if what if we don't need user for fds on Call",
        "um now in order to do that it basically means we cannot precisely synchronize uh when we inject but what if we can inject a really really long delay then we don't need to worry about synchronization at all",
        "right the idea sounds really simple but the question is how how do we actually do this",
        "so we actually found out two ways to achieve this uh the first way to achieve this is using the blocking condition",
        "now I'll talk more about blocking condition the second way to do this is to use the second to actually delay the system called execution",
        "um so what do we mean by System called getting block now if you think about the fundamental kind of system call it's essentially the kernel interacting with some resources on behalf of the user Space Program now many of these resources are i o devices and it takes time for them to respond before the kernel returned the results to the user space",
        "so to be more concrete let's look at Connexus and call so in this in this diagram there are two machines there's a client machine there's a server machine and on the client machine it's monitored by the system called monitoring software and let's say there's an application the application triggers a connection call what happens in the normal scenario is that the networking stack will send us impacted to the server and then server will respond the same back packet and then client respond with the ACT packet and then your sys card will hit the return path a trace Point features will read the argument and then this is called will exit right so now you may be wondering this is just computer networking 101 what can go wrong here",
        "now imagine the following scenario many times when attacker compromise a",
        "environment they will try to connect to their command and control server which means they control the server as well so imagine the scenario we have a client and the server now on the client side the attacker first create a system called thread the system call thread will create an override thread and then the system customer will call the system called connect when it called the assistant call it will use a user space memory that contains the malicious IP address",
        "and when this happens the kernel will send the same packet to the server now what if the server dropped the packet",
        "so the client will retry what if the server dropped the packet again then the client will retry again but every time the client retry this uh the num the amount of delay is controlled by the TCP congestion algorithm so it's roughly you know think about it more or less exponential delay now with that amount of delay the override threat has enough time to override the user space memory with a benign IP address and then it has enough time to propagate all the memory copies so when the server",
        "sends the same packet and then client return the ACT packet when they hit the Sysco return path the trace point and the p3s will happily read the bin iip address",
        "so we're going to show you a demo on the scenario",
        "foreign okay so in this demo there are two machines just as what we Illustrated in the diagram so right now what you're seeing is a server machine now you can see the server machine has IP address ending with 176.",
        "okay and then on the server we start up this program that's going to look at the same packet and drop the same packet and then we also start a listening server on the server side on the client side we're going to run Falco",
        "and we also use Wireshark to see what's actually running on The Wire and now we run this attack program that is going to try to connect to the server",
        "so you see it's connected now it's trying to send some dummy chat okay so client got the message sorry server got the message",
        "but now if you look at the result reported by Falco you can see that it's actually saying our client is talking to IP address 1.1.1.1 that indicates a successful bypass",
        "but now if you look at what's actually happening on the wire you'll see that the first two SIM package got dropped and then it says that you know we're actually talking to IP address ending with 176.",
        "so the previous demo is for the ebpf and the kernel module version of the Falco which use the trace point now we're going to show you how we do the same bypass for p dick on AWS far gate",
        "okay so what you're seeing here is again the server machine uh the IP address is ending with 163 we're going to run the the Sim packet drop program",
        "and we're going to fire the TCP listening server now this isn't a far game machine so pdig will launch our attacker program",
        "so it's the same program that try to connect to the server and you can see that the IP address reported by pdig is again 1.1.1.1 which indicates a successful bypass",
        "okay now you may be wondering okay this is for connect system call does it actually work for other system call as well so we actually discovered that the entire class of file system calls are also affected",
        "um and some other system calls that relies on file system will also be effective for example with the exact V and the exactly at the reason is that when you execute a binary first it's going to the disk to actually fetch the binary and therefore they're also affected",
        "next you know we'll talk about how we exploit the file system costs",
        "so uh before I talk about how to bypass open S is for Tracy let me introduce Fields so Fields stand for user space fire system framework it usually including a kernel module a user library and also a multi utility so in Cloud scenario the fields is often often used as a remote storage fields so using such Fields you can mount the remote stored objects as local file system and access the remote file as local file since it's the user space version so it provides faster involvement or development and it usually do not Penny the kernel so here is the list of examples for the remote storage Fields so you can see it's very popular it's widely used from the list you can see the um the major cloud provider has their own fields",
        "this is the general architecture for remote storage views so if the user space application or container wants to open a remote file what it does is the same as opening a local file basically it will issue the open or open SSM call into the kernel when the requests reached the VFS layer a little bit round to the fields kernel driver and then Judy uses the base fire system like GCS fuse",
        "the demon will send the request to the remote storage once the response is back from the server the it will be allowed that to the user space application through the original path one thing I need to mention is the delay between the client and server is much longer than the Cisco delay itself basically you can leverage this long delay to bypass the Open Access and call so let me show how it works so we have a malicious cry that is monitored by the tracing program The Cisco threat is trying to open the remote file called malicious file basically it will issue an open Assistant call into the kernel with the past name when you do the malicious file name in user space since the file is stored remotely so the open request will be round from the kernel to the user space and then to the remote storage before the response response is back the",
        "override thread can jump in and trying to override the user memory pointed by the past named from Malaysia's fine name to ub95 name and again because the delay is so long the CPU have enough time to propagate a change to all the copies of CP uh register and memories",
        "after the responsibility is back and before it returned to the use space the tracing program can leverage the sixth exit Trace point to read The Cisco arguments for example last name unfortunately the person has changed from the malicious file to the b95 which means our bypass will be succeed",
        "right now let me show you a demo",
        "so we have the console on the left side for Google Cloud Storage bucket and we deployed the Fargo in gke cluster",
        "and we log into one of the part",
        "then we checked the process inside the container so we have the Fargo agent running and also we have GCS fields around the end which amount of Google Cloud Storage bucket as a local folder MNT",
        "and then we check the log for Falco so we have one event generated because we just log into the port",
        "so right now the nnd folder is empty which means the remote storage is empty",
        "and then we're trying to open the file called malicious file in the entity folder",
        "and then you check the end the local folder so the manuscript file is created in remote storage",
        "and then we try to lock from Falco so we have a event generated because if you're trying to open a malicious file on the entity folder",
        "and let me remove this malicious fire so it will remove it from the remote storage",
        "and then we run attack",
        "we check the folder so the malicious file is created by the attack code for the remote storage bucket",
        "and we check the effect of lock so there are no new event generated which means our attacks the seat next I will hand over to Rex to talk about the uh if more Express and also conclude",
        "you've got three",
        "okay so now we're going to talk about how to bypass the center tracing",
        "um so if you remember earlier in the diagram when the system call executes it hits P trees and then hit second you know and a bunch of other stuff is eventually it's going to the system call actually going to dereference the user space memory so now the question is can we use second to actually delay the uh the execution and therefore bypass the features as a center",
        "uh before I dive into the detail just a really quick recap on what that comp is so it is a kernel level mechanism that allows developer to specify",
        "um you know allow or block system calls and you can even allow and block based on system called arguments you can build a Sandbox on top of this mechanism and these rules can quickly",
        "become really complicated and it will take more time to compute one last caveat I want to highlight is the",
        "um first inserted ruins.com are actually evaluated the last",
        "assume you wouldn't understand why this matters",
        "okay so the bypass idea is very very simple um if you understand the previous attack so you know in this diagram we have everything is running on the same machine there's a system call thread that is going to first insert a bunch of second rules just like a regular application",
        "and then it's going to create the override thread then it's going to call the system called create",
        "then as you call the system call is passing in an argument that points to user space memory that points to that that contains a b95 now Petri is happily read the benign file argument and then the second check kick in right you know at the same time the authorized thread will override the assistant car argument with the malicious file so finally after the second finish all the computation then the kernel is actually going to reference the argument and then it's going to create the malicious file for us",
        "so one one interesting caveat I want to mention is",
        "um what we talk about is pictures in playing mode now you can also use P trees plus second redirect what that means is you can use P trees to set up a rule in the monitor program uh whenever you hit the second group the rule will say redirect execution back to the Tracer now in this case if the Tracer start the application that means the Tracer let's",
        "say the application runs the first person call the Tracer will say let me insert the second rule and this will be the first rule being inserted so if this is the case then later no matter how many second rules the application inserts it's not going to impact the talk to window and therefore this will not be vulnerable but it will not be the case if the trees are attached to a running application because there's no control whether the application has already insert a computer or not",
        "okay so um we have cover different type of attack at different uh part of the system call we just want to quickly summarize so we talk about features as a center in order to mitigate this issue",
        "one we need to use pcom plus.com redirect and make sure it's actually starting the application if the actually if the application already started then you may want to inspect the second filter to see if there's anything abnormal in the second filters",
        "for trees Point as the center although the tactile issue exists but we didn't find any reliable way to export it so you may be able to explode it but it's a probabilistic",
        "now for Trace Point access exit it's vulnerable to the blocking condition attack that we talk about here and also what we did in Defcon 29.",
        "so in order to mitigate this one-way you",
        "know to do this is to compare the system called enter and also system called exit arguments and to make sure nothing got changed",
        "for p trees uh SSX it's vulnerable to the same attack in order to mitigate this uh Trace location one we need to deploy all the mitigations for petri's asset Center and then compare the center analysis exit arguments to make sure nothing um you know is changed",
        "um the last one we didn't talk a lot about in this uh talk it's the k-probe who came to Kernel internal functions whether this can be exploited really depends on which function is being hooked so",
        "in general what we in for system call monitoring uh what we see is",
        "depends on the number of Kernel versions that you want to support you can choose RSM Linux security module interfaces so that will cover certain amount of system costs but the support across different",
        "kernel versions is different on some neural kernel you can use even use a BPF or RSM but if you have to support a wide range of Kernel and RSM",
        "in some version doesn't have the system called interfaces that you wanted then you may need to look into other interfaces and then you quickly get into tracking different kernel versions and make sure all these interfaces exist in the kernel",
        "okay so um to conclude",
        "um so first let's zoom into this research which is we demonstrated that Linux kernel tracing can be bypassed reliably in many different ways at different asset Center and sus access so if you happen to deploy a similar",
        "tool you may want to check if your tool is actually secure against this type of attack because we only evaluated the open source solution the second thing is the mitigations are very complicated depends on how many kernel versions are being supported by the tool so you will also want to check the mitigation claims by the tool to make sure they're actually mitigated in the way that you intended to be",
        "now if I you know if we zoom out from this particular issue if we think about the bigger picture now today we propose some fundamental bypass right that doesn't mean in the future there wouldn't be newer bypass against this type of tracing technology so I think for the security teams um we recommend that you have a comprehensive visibility into the environment because if I need to bypass all the different data sources that exponentially increase my bypass difficulty",
        "the last but not least this is something that we do a lot at least work which is",
        "um we think about what is normal in the environment we Baseline the environment because if you know what is intended to be in your environment then even if the attacker is able to change these values they have to select the right value to choose otherwise they will trigger a certain type of detection",
        "now with that we are ready for Q a",
        "[Music]",
        "thank you [Music]"
    ],
    "ZPI2OB0g028": [
        "[Music]",
        "foreign",
        "thank you okay so welcome to my session as already mentioned my name is Mo Rubin and I am a senior security associate Microsoft I'm mostly interested in finding new attack vectors in the on-prem cloud and which are mostly related to networking so we",
        "and in this session we are going to show a new way to perform lateral movement which involves a bit of on-prem a bit of cloud and mostly networking so the agenda for today we will first go over the introduction to the key terms we'll go over some things that you might already know just to make sure we are all on the same page later on this information will help us understand a bit more about the main topic for today which is negox which is the new Authentication Protocol for Azure ID joint devices later on we will see a couple of attacks that allow us to perform lateral movement to another devices then we will demo one of the attacks and see how we can hand follow them and finish with takeaways from this session so let's start with the technical background our first topic will be Azure ID joint device as you may already know Azure Edition device is a device which is connected directly to Azure ID and it's managed by Azure ID in the case of azure ID join device only Azure ID accounts can log into this device and there are no local users by default",
        "you can obviously add them but by default they does not exist on the account on the computer so only Azure the accounts can log in and the main two differences between the on-prem Azure active directory joined",
        "and to Azure active directory join first the how you query the organization and",
        "active directory you mostly use ldap to query the domain controller to get information about the entities and groups and so on in the in the active directory while in Azure active directory you'll mostly use graph API or rest API calls to query Azure for information about your organization the second main difference is the authentication protocols while in active director with authentication Protocols are known ntlm and Kerberos in Android Authentication Protocol saml or what open ID and networks which will be your main topic for today a side note I am going to I'm not going to talk about hybrid devices are",
        "connected to both Azure ID and to the on-prem everything I'm going to show is applicable to iBall devices too but since it's the same and you already know how to perform lateral movement in a domain environment then I will not talk directly about hybrid but only to Azure ID join devices so when talking about Azure ID join device it's important to understand the authenticated connections we have two main scenarios the first scenario is when you want to authenticate to SAS application in this case we will use something called a PLT so for example when we want to authenticate to SharePoint online we",
        "will use the PLT to exchange for an access token and get access to the specific application and the second scenario is where we are sitting on an Azure ID join device and we want to authenticate to another Azure ID join device in this case we will use something new which called P2P certificate or peer-to-peer certificate this certificate is issued by using the PLT and we will show a bit later how we can get this one so first let's understand what the probability is reality as I mentioned is a primary refresh token and this is a Json web token which contains claim on both the device and the user it was issued for it means that if a user is connected to two devices then every device for this same session of the user every device will have a different PLT and same four devices if two device two users are connected to the same device same will be a here and we will have two different plts even though it's the same device and this PRT can be compared to TGT the cadient ticket in the on them well if you have the PLT and the session key bound to the specific PRT it means that you are authenticated and this session key which is bound to the Penalty proves that you have the authentication material and you don't need to authenticate again so it's the same as digital way that TGT is being used to exchange for ticket for the results in TGs and the penalties can be exchanged for an access token to access the specific application or in our case it will be used to get a P2P certificate which will be used to access another Azure Edition device so I already mentioned a couple of times so P2P actually this certificate is a special certificate which is issued by Azure as you can see the the issuer is azure ID",
        "it's Ms organization P2P access so it means that it's only Azure ID the one who can issue the issue those certificates and it's issued for a specific user and the user is the one who the PRT is related to so I cannot use PLT to get a certificate for another user but only to the user which is bound to the specific parity and this parity is valid for one hour only and is used to access any Azure ID device in case only if you have permission obviously and you once your device is joined to Azure ID by default it will be configured to request a new certificate every time it's needed so you don't really have to do anything every time you want to access another Azure ID device a new P2P certificate will be issued for you so now that we have a good understanding of the authentication materials let's dive into the authentication protocols that will help us and be used later in Network's protocol so our first protocol is cable speaking so a couple of words about cables as you may already know cables is an Authentication Protocol in the on-prem which uses tickets for authentication and it have six steps the first step is the as request in this step the client you send something called pre-authentication data which is a timestamp lobe encrypted by the hash password of the user this this data is later checked by the DC and by the KDC with the key distribution center which verifies the",
        "timestamp log it decrypts it using the hash password which stores and in its database and if it's accurate then the KDC will provide a TGT the academic ticket and the session key and later on those TGT and session key will be used in a tgsa quest together with the resource you want to access to and the KDC will validate them again and will issue a TGs which is a ticket granting server service with a new session key which allows you to now access to your specific resource that you wanted to access using a cables AP request and later on the client the resource you access to will responds with the cables AP response with an arrow or successful Authentication and in cable speaker unit the main difference is in the two first messages in the cable sales request and there is response the this this extension allows",
        "you to use certificates to authenticate to another to your domain instead of using the old hashed password so in this case the pre-authentication data in the S request will be changed in a way that instead of using your hash password to to encrypt the the timestamp instead you",
        "will use your certificate your private key to sign a specific blob which called the PK authenticator and you will send it to the DC the DC will validate the certificate Authority and",
        "everything about the certificate including that it's still valid and we'll try to verify the signed data if it's a if it's verified using the public key then the KDC will now return a ticket and the news in a session key and now the session key different from the normal cables can be all a session key generated by the KDC and encrypted using the by the public key or it could be derived by the defailment parameters which will send by the a in the AC Quest and I'll send back in the as response to so we have two options for the session key and this is the main difference between cables and cable speaking and the next Authentication Protocol is PKU to you which is public key user to user and this protocol allows us to use cables messages for a authentication without the KDC so it means that we can now access a performer peer-to-peer authentication without the KDC so instead of going to the KDC and requesting tickets every time we want to authenticate how to access the specific results we will now go directly to the resource itself and ask for a ticket from him so it's put out the KDC from the equation and let you go walk directly against your whistles and work with cables tickets without doing any change and in this case it will instead of using the hash password you will be able to use cables because APK in it which allows you to use the certificate and our last Authentication Protocol it's already familiar GSS API or sspi which is a security support provider interface which allows you to add an authenticity layer for your protocol so",
        "for example over LPC or SMB you will be able to add cables or ntlm authentication and it will allow you to perform this authentication on top of your protocol so how it all mixed out together in Lego X so networks as I mentioned is the Authentication Protocol on for authenticating to Azure Edition devices and",
        "so and it and it works with the GSS API and cables npku to you messages so how it works and it's that when you want to authenticate over assembly for example you will use GSS API to provide an interface for negox and over networks you will send PKU to your messages to authenticate to the client",
        "so negroex is an Authentication Protocol as I mentioned in which is enabled by default on every Azure ID join device from I think a very previous version of",
        "Windows 10 and by default on every Windows 11 and once you're when you're once your machine is onboarded to is joined to Azure ID then only two Protocols are provided for authentication and ntlm and networks as I mentioned before ntlm will not work since you by default will not have local accounts so only negro X left to perform any authentication to another Azure ID joint device and this protocol have three three main stages the first stage is the",
        "initiating messages later on the next stage is the authentication messages and the last step is the verification messages let's dive quickly over the messages see how they work and how this protocol work so the first message is sent from the client to the server and this message called initiator nego in case of negox the terms have been changed a bit and client is now called the initiator or but I will call it as a client because it's easier for us and the server is called accepto it's the same it just a change in the world so the initial tone nego have only one purpose and it's to contain random this random will identify this specific session and it will be used later for checksum in the verify in the verification part which is the last part of the authentication in Lego X the second message which is also sent from the client to the server is the initiator metadata which contains metadata on the authentication materials that are going to be used so in this case you can see that in the extent we have token signing public key it means that we are going to use a certificate and Ms organization P2P access this is the certificate Authority which we are going to be used and this is azure dptp certificate this is the certificate that is being used in language and then once the server receives those two messages it will respond with the same two messages but now they will be called acceptonego and accept Omega data and they will be the same messages they accept all negro will contain a different random from the initiative one and the acceptable metadata will contain the same metadata information which is generated from jss Square metadata",
        "and this is the initiating part of Network's protocol it doesn't really do anything you can just send anything you want as long as it's value and the second part is the authentication part this file the the first message which is being sent from the client to the server is the API request it's not a cable or say it's a request but the nego X AP request it's a new message type and this message type contains the exchange data which contains inside of it a pkutu part and pkutu part in the First AP request in the in this first message will contain cable was PK unit as a quest and this request as I mentioned before will be cable speaker in it with the certificate of the client",
        "of the Azure ID P2P certificate and in this case the session key will be generated by the filament parameters so it's important to us to know later on because we will use it in one vertex the fact that we cannot add the session key and the next message is being sent back from the server to the client after the AP request was sent and this is called The Challenge message this message again contains a pkutu part but in this case the PKU to your part is PK init cable speaker unit is response",
        "and in this case you can see that the server responds with ticket and this ticket contains a realm which is which is well known PKU to you it's not the same as the domain but it's a default one for every every server and every resource you will contact and again as I mentioned it will contain the default the filament parameters which will be extracted by the client and will be used later to generate the shared session key and once this message is being sent to the client the client Forge another IP request with the ticket with the ticket received from the server but in this case the AP request it's the same name but the PK YouTube product is different it will now contain an AP request a normal cable CP request with the message with the ticket and you will be performing the authentication in this part and then the server will respond with another challenge message which is now the PQ to report of cables AP response again and in this step if everything works then the authentication in the in this part is successful or fail but even if",
        "it's successful it doesn't mean that the successful authentication of negox is",
        "established but it only means that the this part is established so we have",
        "another part and the part is called a verify it's the way this is the last part of the authentication in networks and this is the verify message and the verify message contains check checksum over the previous set of messages in this case you can see that the sequence number of this message is 7 and since we started form 0 then it means that we are going to perform a checksum here over the last seven messages the messages are the initiate Omega initiative",
        "metadata AP request Challenge and another IP request there all will be checksum and the checksum will be provided in the verify message and in this step this is a verify message which is sent from the client to the server and the server will verify the checksum and if it's if it's accurate then it will respond to another checksum and with another verified message which contains a checksum but in this case the checksum will be different because it will perform a checksum over a different set of messages so not only those seven",
        "and the check something key is a bit special special you cannot understand what how these checks and key generated by using the documentation",
        "and in this step you need to what I did to find out what to check some key is to debug the Elsas while using networks and performing an authentication and then I figure out that the checksum key is sent by the client or by the server depends on who is sending the verify message and the checksum case gen is sent in the cables AP request or Asus AP response and it's being used for the check the checksum so if you cannot open the cables messages you cannot get the checksum key so this was the negox protocol",
        "and now that we have a good understanding of networks protocol let's see what we can do with it to perform some attacks that will allow you us to perform lateral movement to another Azure ID join device so first take it's probably sound very similar because it is very similar it's called negro X and it's similar to obviously ntlm relay",
        "and this attack relies on the fact that again the server and the client does not verify each other so you can just say I'm the server or I'm the client if you made a if you enabled and spoof or anything else and then since you can perform any relay that you want there relay will be the same as in ntlm well you will just relay the messages from one side to another but again it's not the same protocol as",
        "ntlm so let's see how it works and what we can do differently or what we should do differently so as I mentioned before the two and the first part is the initiating messages so those messages are just being sent I will not go over them because they have no real meaning we don't really need them in this attack so just relate them as is and continue and in this case we are starting the authentication path and we have two two scenarios the first scenario is where we receive the AP request from the client and we choose the way light as is if we choose to relate as is as you can see in the cables request body there is a special field called the address which contains the client name and by default this field will be will contain the client name of the machine initiated the and generated this IP request so if you will choose to realize this it's okay it will work we will just relay to the server and the server will validate a question response with the challenge message the challenge message which will be again relate to the client because we cannot open it because we don't have the session key since as I mentioned it generated by develman and we cannot generate or find the key so we'll just relate to the client and in the second scenario we want to be a bit more sophisticated and we want to change the client name to avoid some detections assuming that someone is detecting it and what we'll do is to change the client name because if someone sees the original client name and the attacker IP it can easily understand that this is not a matching and we will be seen",
        "so in this case we can modify the AP request and relate as is add to the server and the same process will happen we will get the challenge and relay to the client and the next step is the AP request and the verify message which are being sent from the client to the server and in this case we don't need to modify the API request in the first scenario we did not modified anything so we again regulate as this the server verifies the verify message and the AP request and if it's okay then server will respond with the challenge message and a verify message and in this case if it's okay the session will be already established between the attacker and the server and since we are attackers and we don't need those two messages we can just drop them close the session with the client and we have an established connection with the server and in the second case in the second scenario we chose to change the client name in the previous message so now we will have the verify message which contains the checksum but now the checksum will not be accurate since we changed one of the messages so in this case if we will send it to the server we will get an invalid parameter error and negox invalue parameter also we will not be able to use it and the session will be closed so in this case what we are going to use to do is to force the clan to authenticate to us again and if the client will authenticate to us again to the initiating messages will be sent to a to the server and we will relay them as is and then since we since the client already have a ticket for us and as you know in Cabos client tickets are stored on the client and if the client remember that you have a ticket for the server then you will not request a new one so we will use that and since we initiate another a session and the client already have a ticket to the attacker then the client will directly use it instead of asking a new ticket so in this case the client will go directly to the second set of messages the AP request and the verify in this case the AP request is the cableos AP request in the PK YouTube part and the verify message will contain a checksum which is made over those four messages and this AP request and as you saw we did not made any modification so the verify message is now our QA and the AP request is also accurate because it's generated by the ticket using the session key which is known to the client so if we will relay them to the server then the server will validate everything and we will establish a connection because all the messages are accurate so in this case we managed to bypass the validation part of networks without knowing any session key or without knowing any Secret so let's demo this this one real quick let's hope it will work",
        "so it takes a couple of seconds due to Wi-Fi",
        "it's connecting remote into Israel so it takes time in the meantime I will just say if it will not work I will show a demo which I already prepared in events but I will say that for now that I have I'm going to show and I will have three machines one of them will be my taco machine and the oh it works so here it is I have a client 6 which is my attacker machine and which is going to want the relay server client 7 is azure ID join device and it's going to be my Victim machine and client 8 is going to be my target my target machine so it means that client 7 is going to authenticate to client 6 and client 6 is the attacker machine and it's going to authenticate to client 8.",
        "so from client 6 I will start my relay server and I will choose to modify the name as I just showed I will just choose a random name",
        "okay so choosing a random name",
        "and I will start the server",
        "and then I will also start a whale shark this is a special version of wireless shelf which I made a modification to to pass the PKU to your messages this is why I'm using a negro XS filter right now I think it will not work in a regular Wireshark if you're tying it yourself and then instead of spoofing I will directly authenticate to my attacking machine from the from the Victor machine and let's take a look on a on the server so as you can see we",
        "managed to dump some ashes and in this case the hash is will not give me anything because as I mentioned it's a device without local accounts but it just proved that we have an authenticated connection and since we're having sufficient privilege to the victim machine we managed to dump those ashes similar to anti-lam relay and let's take a look real quick on the traffic",
        "so if we will open the traffic and we will see the AP request which contains the cable ospk unit as request",
        "and we'll open everything",
        "and we will go directly to the request body and to the others field now we can see that this is client seven this is what we have received from the original a client and then what we relate is the new name that I just wrote and if I will follow this a stream of packets we will say that I've relayed it as is without modifying the verify message and I've received an l so what I did next is to force the client to authenticate again to me as a tackle and this gave me as I showed you let's follow this",
        "and now we can see that in the new session we have received the two initiating messages we this is the only",
        "part of the regular I'm not showing a the client side but only to the server side and we see that we just went directly into the AP request and the verify and then the session is established and we managed to authenticate",
        "so we managed to very fast the validation part and let's see how it looks on a the target device",
        "so we can see in the Target device that we have a Windows 4624 of successful authentication and we have the account name with the domain of azure ID and you can see the full European of my account and if we will go to the authentication package we can see that the it was being used in with nego extender and now we can see that the workstation name is what I just thought and the IP is my tackle machine IP and not the client so we managed to perform a successful authentication to the machine even though we made modification to the cables messages which are being protected by the networks verify message so we still managed to very fast them we pass the verification file so nice for us and let's go back to the next attack",
        "okay so the next stack it's not really a tech yet it's the preparation for the attack in this case we will use the primary refresh token the PLT to get a P2P Azure ID certificate so how it will do it we will first generate a CSR which is a certificate signing request for this specific user which the PRT is bound to and then we will attach both the CSR and the primary refresh token to a JWT a Json web token and we will assign this Json web token with the session key bound to the specific priority once we have it once we signed it we can send this JWT to Azure ID and then we will receive the certificate in the x5c section and",
        "we will received an Azure ID P2P certificate which is going to be valid for the next one hour and since we have a valid P2P certificate what we will do we will just simulate everything and pass this certificate to another machine and as long as we will have permissions we will be able to simulate the SMB messages and perform the Network's authentication and authenticate to another machine this will allow us to jump to another machine get certificates and we can dump those certificates from the local machines though because they are by default stored in the machine store or we can dump the plts or we can do anything else we can also add Rogue Azure ID join devices and which will allow us to get constantly ability and get the new Azure",
        "ID certificates and it will allow us to move to another machines every time we want and harvest some more and more prts and certificates and move to another machine every time",
        "so now we saw a couple of attacks that allow us to move laterally between devices let's see how we can unfold those attacks our first option is to use Windows Event we can use Windows event for six to four or four six two five and to hunt for a successful or failed authentication for 64 successful authentication while four six to five is for failed authentications and as I showed in the demo we will have the Azure ID account in the domain and the full UPN and authentication package is Network standard it's important to know and then we will have the workstation name and the IP as I mentioned and in this case I have attached a screenshot from a real machine so in this case the attacker did not modify the name so if you see and have a mapping between the workstation workstation names and doing IPS you can easily understand that this is a malicious connection because the IP does not match to the name so it's easy to a hand for suspicious logins with or also you can find a world authentication from another devices with",
        "users that are not supposed to be connected to those devices the second option is to use the traffic analysis and there are plenty of Open Source traffic analysis or anything else and you can use them to pass the PK YouTube part and if you plug the PK YouTube part you can extract the serial number and the subject this will allow you to find cases where the same serial number have been used from two devices and in the case of the real attack or in case of someone stealing the the P2P certificate",
        "from the machine you will be able to see that this serial number was being used from two different devices and not even in the same time it could be in frame of one hour because this is the time the certificate is valid and it will help you find some more suspicious attempts",
        "and the mitigation parts as you may know you cannot mitigate someone stealing your credentials PRT",
        "and Azure ID P2P certificates are the same as your password so if someone still your password I cannot really do anything and you cannot really protect your device you can obviously patch the device it will be other for tools like mimikats to harvest the PRT but there is",
        "no other way and the second option to mitigate the networks relay when it's done over SMB you can you can enable the SMB signing this will force the attacker to use to sign the SMB messages and since the attacker does not have the session key and it cannot get the session key because the first session key is generated from the filament then the attacker will not be able to sign the messages and the relay will still work the attacker will still be able to authenticate to the device but the attacker will not be able to do anything on the device itself so it will force him to close the connection so the tools have been used are the networks relay which I just demoed and second tool is the Azure ID Certificate request tool which is the Purity to certificate the third tool the last tool is the pass the certificate authentication tool with Azure ID certificate and for research I've used wild shark I modified Wireshark to edit the sector for the PKU to report over negro X and allow you to find Network's messages easier",
        "and then I also modified Zeke to pass jss API networks over the jss API to extract the PKU to your messages the serial numbers and everything from the certificate itself it's all available in GitHub and so you can download it and use it to find an research on your own and the last takeaways from this session as I mentioned since the some part is dealing your certificates or anything else then patching is not really enough it will not protect you from everything but",
        "it still May mandatory to use the SMB signing since this is the thing that will protect you against the relay",
        "as I mentioned it's something new I did not I don't know if someone is using it right now but it's a new way to perform lateral movement and since we all know that domain lateral movement is being used for yields then I assume that it will also be used we already know that attackers are joining new device to Azure ID so since they are already joining new device it means that they can get a P2P certificate so there are one step from authenticating to your device and the last thing is hunting is I said it's it's a new tax office and so it's very important to drag and search if there are successful authentication since there are no and not enough research in this area so it's extremely important and that's it thank you",
        "[Music]",
        "[Music]"
    ],
    "R6cRBAoJCXM": [
        "[Music]",
        "foreign",
        "thank you and I wish I was there with you today and unfortunately I've been feeling sick and decided selfishly that I was going to keep that to myself rather than bringing it to you all and so today I really wanted to kick off with a little bit of a pop quiz Jedi do you see in this picture",
        "just shout out the answers",
        "I'm hearing none I'm hearing one and the one by the way is a trap Luke Skywalker is not yet a Jedi and in this picture how many Jedi do you see",
        "none none we don't see any Jedi here and the reason I wanted to start with this is because a rebellion requires all sorts of skills",
        "all sorts of people from different backgrounds coming together to accomplish an important goal and whether that important goal is overthrowing an evil Galactic Empire or",
        "shipping a product we need all sorts of skills to make that happen and in cyber security we talk a lot",
        "about the need for Jedi and you know I'm",
        "gonna be honest as much as I love using Star Wars to help tell stories",
        "I think that asking everyone to be a Jedi is a bad goal",
        "expectations of heroism drive burnout",
        "Stacy Thayer is going to be giving a talk on this later on this afternoon I'm really looking forward to her perspectives on burnout and you know being a Jedi Knight is not",
        "all fun you get torn from your family as a small child you're expected to live without forming attachments",
        "and",
        "many people just don't qualify they don't have the right little magical creatures in their blood and even if you do qualify even if you",
        "make it through the training you become",
        "a Jedi a lot of Jedi end up murdered by Sith and murdered by Sith just isn't good",
        "so this talk is a fully trained Jedi you are not I'm Adam schroestack and by way of introduction I'm on the review board here at black hat I helped to create the CVA and I do a lot of work in threat modeling through my company show stack and Associates and I want to share with you some lessons that I've learned as I've done a tremendous amount of training helped people learn about cyber",
        "security and some of the challenges that I see them going through",
        "and so today I want to start by Framing the security problem you know we heard Chris Krebs talking about the problem talking about Supply chains talking about the issues as everything becomes",
        "digital as more and more things are connected and even though the problem starts with software there's this idea of Shifting left I'm going to talk about that and I'm going to talk about what we can expect of people who do not want to become Jedi Knights so let me go back in time a little bit and so this this is from Cheswick and",
        "bellavin's book firewalls and Internet Security almost 30 years ago and at the beginning of chapter one they wrote that all programs are bugging and large programs are even buggier than their size would indicate and this was 30 years ago let me tell you they I don't want to say they didn't know what was coming but I think it's gotten a lot worse since then and as a corollary of programs having bugs a security program has security bugs and we know that and so we can ask where do security issues come from",
        "sorry",
        "um and you know security issues like",
        "other aspects of the programs that we use like other elements of the programs that we use come from developers developers are the",
        "cause of and perhaps the solution to the security problems that we face in building software",
        "and you know I I joke about it being developers and really I think it's more broad than that it is software engineers",
        "and I include developers sres scrum",
        "Masters the people who put together these systems by and large don't mean to introduce",
        "problems as they build features but they do and developers actually introduce sets",
        "of security problems they wrote great code with security bugs and flaws and",
        "flaws being a little bit bigger than a bug it's a design issue of some type",
        "they introduce problems when they fail to write the security features that we need to operate the system in a good way",
        "they introduce problems when they create security features which are unusable",
        "and so when I think about the world of software I think about this mostly in a model of there's the development activity and production",
        "and we have different sets of security",
        "activity we have application security and we have operational security to help us secure these two sides of",
        "the way we deliver value and in development we add and remove bugs and in production we've got just a",
        "fire hose of cves of security issues",
        "that we care about and so light shows look and Melvin taught us we put firewalls in front of those operational systems we deploy scenes to help us manage the alerts we have tools like xdr that",
        "help us respond to issues we scan the things in production for vulnerabilities",
        "and we reverse engineer them and I want us I want to stick with the word reverse engineering for a second because it's fundamental we've got a reverse engineering trap here at black hat and inherent in the idea that we reverse engineer things is the idea that we have",
        "little access to the development world",
        "we don't get to talk to the developers and so we need to reverse engineer things to understand what they were doing and what they've created and",
        "reverse engineering also helps us validate those things but a lot of it is built on the idea that there's this big gap that we in operational security",
        "are so far from the developers they work in different companies different divisions that we can't go and collaborate with them",
        "sometimes we use penetration testing as a way to gate what's going to make it into production but all of this all of this focus on operational security",
        "is based on the assumption that we've got this fire hose of issues and it's never going to change and on the application side we're starting to see techniques uh things like fuzzing static analysis",
        "even better languages to help us write code with fewer bugs and these",
        "improvements in application security",
        "are often referred to collectively as",
        "let's shift security to the left",
        "and what this means is let's build Security in it means there's changes to how we or they design develop and deploy things it requires that we have new and different skills and it means less Reliance on penetration testing and more on software engineering and this shifts security to the left idea is really gaining in popularity and what it means is instead of doing security and production we move to staging or test or even development ideally development because",
        "the cost of fixing issues grows dramatically if I write a line of buggy code and then I write a unit test and I detect that bug it's cheap to fix if that buggy code makes it to production I need to go and fix my production systems if the buggy code is in an API and it's a flawed API it doesn't do authentication well it doesn't do authorization well I might have to change the apis and if I do I might have to support V1 and V2 for months even years",
        "if the buggy API is in a platform like Windows or iOS I might have millions of developers who have taken dependencies on what that is and fixing that requires each of those developers to change their application",
        "so it works with the next rev of my platform fixing those issues well it's in production and relied on by others can be tremendously expensive",
        "so we shift left and sometimes security shifting left is a little bit like the fellow in the right in the orange they've got a goal they've got a plan to to dunk that ball into the basket and sometimes developers Engineers can feel like the",
        "person on the on the left excuse me",
        "they're like wait what's happening here why are you doing this this I don't want you to do this and my goal is that we're all playing for the same team",
        "and so shift left involves requires that we change the development processes that are happening",
        "and that requires clear responsibility",
        "because hey let's face it change is hard",
        "we are all tired of change we're all tired of whiplash in today's world in all sorts",
        "of ways not judging when I say that I'm simply acknowledging it and so when we want to have change happen at an organization we have to be clear about what exactly is changing are we changing the deliverables are we changing the tasks that I have to do for example for example if I'm changing the deliverables I might change the language we're writing software and we can get a lot of security gains it's a big change I might change the tasks by putting in a checklist before I do a pull request",
        "I might expect different skills of people as they're developing software",
        "and as we make these changes it's crucial that we do it in a way that",
        "serves the goals of the people whose world were changing if I'm sitting there and saying if I'm sitting there in application security and saying hey dear developer I",
        "need you to change for me I'm like I don't want to change to please absec I'm the person who's shipping this awesome feature it's going to make our company a lot of money or serve the community or whatever value they're getting it's probably not make appsec happy",
        "and so we need to make these changes as",
        "easy as possible and I mentioned these days I work with a lot of organizations helping them make these changes and I sometimes joke that my job is simply asking this question of who delivers what to whom an awful lot and training people and how that happens",
        "and I joke and I don't this question of what am I delivering to you what does that look like is",
        "in underlying question and if we can answer it well",
        "we can develop training we can assess how people are trained we can see if people are doing their jobs in ways which are clear and predictable and if the way we expect someone to do their job is clear they're way more likely to be on board so there's a tool that I've become incredibly fond of over the last few years which is Bloom's taxonomy and I'm going to walk you through this briefly but Bloom's taxonomy is a fundamental tool in learning it helps us Define what learning goals are it helps us evaluate",
        "whether or not people have learned the things we hope that they're going to learn and so at the bottom of the taxonomy the first thing you need to learn will be the ability will be basic facts and Concepts and just be able to remember them we use words like Define and duplicate in lists for example I might want you to remember that data center over a network can be read by anyone and",
        "all I want you to do in this talk is remember that Bloom's taxonomy exists and that it has levels higher up in the taxonomy is evaluation being able to justify our stands our decisions we use words like argue defend",
        "critique insecurity we love to critique",
        "um and so we might ask a question like does encryption protect against this the graph and judge whether or not people have",
        "acquired that knowledge one last thing on bloom Bloom Bloom's taxonomy is being used for a long time my only goal for you for this slide is that you remember that there are lots of tools out there because at the end when I'm suggesting that we do a better job of defining the knowledge that we expect developers to have you could go and you can look for things like Bloom question stems these",
        "ways of framing our learning goals",
        "with",
        "um Mad Libs essentially and the helpful hundred verbs that help us Define what we want people to know because I think this is a really helpful tool for thinking about what security work we ask of different people so for example if you're going to be a speaker at black hat we expect you have we expect that you will have created something new if you're a pen tester you're going to be doing evaluative work is this thing fit for production and if you're a developer we're going to expect you to understand some things about security and you know unfortunately",
        "this is not how we tend to teach we tend",
        "to teach a little bit like this with a little guy on your back explaining to you that when you're 900 years old hopefully you'll understand all this security stuff",
        "um or we have people stand on their head and levitate boxes in the air",
        "and you know well it makes for a cool training montage I'm really not sure um sir could you explain how this helps me defeat the Galactic Empire or ensure that there's no SQL injection in my code because just not sure why I'm doing this if that's okay [Music]",
        "we need to think about the way we train",
        "because",
        "if you're a developer",
        "we need to give you training that is sensible we need to provide training",
        "that is sensible in the training time that's available and I have a lot of critique of the things we have we teach developers right now but I I want to focus on the positive and say we need to help developers find and follow paved roads we need to help them recognize the danger signs as they're doing things which have security implications and they need to think about them and when we think about what fits here you know I love each and every one of these books I've learned a huge amount from them and none of them are small except the one at the very top uh Kent Vex extreme programming explained which helped kick off the agile Revolution and if we expect every developer is going to know everything and Mike Howard and Dave leblanc's book or everything in Ross Anderson's book or everything in the amazing shell coders handbook",
        "um well that is why we fail",
        "and so we have to think about what it is",
        "that it is reasonable",
        "to ask a normal developer to know about",
        "software security",
        "and one of the tools that we need to use",
        "um so before I say this one of one of the things that",
        "when we give people these four books one of the things which happens is they're like I'm overwhelmed and",
        "if you think about how you might feel about",
        "being overwhelmed facing say investment",
        "decisions you can go and read books like these quest for Value the rational investor",
        "or you could go to your retirement bank and",
        "say give me a defined a Target date fund and a Target date fund says hey it's 2022 I plan to retire in 2050",
        "figured out for me make the right allocation of Investments for me to",
        "retire in 2050 and they do that for you and this is important because most of us get overwhelmed when we're thinking about our retirement planning in the same way that developers may get overwhelmed thinking about all of this stuff we're asking them to learn so we need to make it easier and to make it easier one of the tools we can use is chunking our being our brains are amazing at pattern recognition dealing with chunks of data and you may have heard that short-term memory is seven plus or minus two it's optimistic but it's about chunks it's not about individual pieces of data and so if you look at this sequence one one two three five eight thirteen Etc",
        "and you don't know what it is that might be all you can remember if I were to ask you to remember it if you've learned that this is a Fibonacci Sequence you can chunk that data in as a single thing and if you've really learned the Fibonacci sequence you will notice and you're you're like wanting to scream because I left out 21. uh it's a trap but I'm doing it because you're to show that your brain works with these chunks of information it recognizes it and if you were in the group that knew that 21 was missing",
        "it's because your brain does pattern recognition",
        "and this is crucial because if we don't Define the chunks that we want people to understand they will they may anyway people as I say our brains are really good in pattern recognition and even inventing patterns that we might not think are there and so I have to ask what is the category that we want a normal developer to know and with respect to Chris Krebs and his great keynote this morning he covered a bunch of these he covered cyber War he covered threat actors he covered compliance",
        "and for us you know I personally thought it was a great talk but for people who are not in security it may have been a little overwhelming",
        "oftentimes we try and teach normal developers explode techniques we try and teach them things like this and I think",
        "and if you know some of my work you might you might be unsurprised to know that I think we should teach them about threats ways to answer the question what",
        "can go wrong and I believe having spent a lot of time teaching people about this spent a lot of time with Executives that what can go wrong focuses our attention on threats and it's an incredibly",
        "powerful framing for how to engage",
        "everyone has an answer if you ask them and encourage them all the way up to Executives when I ask Executives what are they worried about what keeps them up at night and then I stop and wait for an answer when I encourage them they've got answers when I ask normal developers how",
        "would you attack this I get good answers",
        "and what can go wrong works as an umbrella",
        "um and if we ask just ask that question are answers vary a loss there's lots of",
        "ways that we might answer this and I'm going to speed up just a little bit here and jump over some of this but it's important to think that what can go wrong is not just bugs it's not just the buffer overflows and the SQL injections and the memory safeties it's the failure to authenticate it's the failure to encrypt it's not having logs or keeping those logs for long enough it's not building MFA support into our systems those flaws matter a lot",
        "yeah and so",
        "um when I get to the question of what's what are the four best ways of doing something that's a side task I get to I'm asking a developer someone",
        "who's not an expert to do work at the expert end of this taxonomy and so they need us to offer specific advice and I I was slightly out of order when I talked about the",
        "um the personal finance example but you know I went I Googled for some advice and it's not just match out your tax advantage matched accounts I found this the 50 personal finance tips that will change the way you think about money 50. I have to think about 50 things",
        "for for goodness sake",
        "um and so Target date funds again are a great tool for helping people avoid",
        "having to think and there's this lovely book on usability by Steve Krug don't make me think because people are overwhelmed they have so much going on",
        "and so when I get to the question of what does every engineer need to know there's a couple of projects that I've been doing that really have pulled me towards this question the first is a white paper fast cheap and good I'm going to show you some of the bits from it in a second the other is my next book coming out this fall and the subtotal of that book so that's what every engineer should learn from Star Wars the subtitle what every engineer should learn has really been a",
        "crucible for me in thinking about this question of what does every engineer need to know and I'm going to share my answers with you but before I do I want to start with a simple question which is is every flaw unique",
        "And if every flaw is unique we need a lot of security expertise but if there are clusters then maybe we can think about the security expertise we need and relate that security expertise to the knowledge about the system that we need to find them and so if we're doing penetration testing a lot of penetration testing work is developing knowledge about the system",
        "under test so that we can apply our",
        "security knowledge to it and find bugs and maybe these bugs are just in a uniform space Maybe these flaws are in a uniform space and any amount of system knowledge any amount of security expertise will help us find them",
        "Maybe the security flaws really require more",
        "security knowledge and the more security expertise I have the more stuff I will find or maybe and this represents my belief these days",
        "um we don't need very much system knowledge and we don't need very much security expertise to find most of the flaws in",
        "the system and I think of these as lightweight flaws where we kick over a",
        "rock and there's stuff underneath scarting around",
        "and we've all had the experience of I think many of us have had the experience of kicking over those rocks and finding these flaws and so if these flaws are common I think we should transform how we work with engineers",
        "and so my proposal for how we should do this is we should ask people to know about stride stride stands for spoofing tampering repudiation and for disclosure denial service and expansion of authority we should ask developers to know that parsing and predictability lead to danger and we should ask them to understand how to use kill chains to bring them together and that's four things and I think it's a reasonable set of knowledge and so as an example",
        "we might say that spoofing has to be addressed differently for each of machines or people authenticating to machines or people spoofing programs is easy if I'm running on a traditional desktop one program could talk to another there's no program identity the way there is on mobile platforms and I believe that we as a community and within each of our organizations needs to be defining what developers need to know I think that's crucial",
        "because if you and I have different",
        "perspectives about what developers need to know or you and I and your colleagues and your developers promotion committee have different perspectives on what",
        "developers need to know I can tell you which of those groups is going to win and I can tell you that the only way we're going to influence those people on the promotion committee on the hiring committee is if we in cyber security",
        "have consistent answers",
        "and so",
        "to recap and and leave even a couple of minutes for some questions code issues underlie many probably even most",
        "security issues",
        "gifting and when I say most I'm saying usable secured if we include usable Security in there I think it's clearly most security issues shifting left is an admirable goal but it only works when we're clear about change and to date we have not been clear enough about the changes we need to make and so you know rebellions are built on Hope and my hope is that we Define normal",
        "levels of security that when we Define",
        "these things developers will be more able to build more secure systems and the goal the hope the reason for making this for making this change is that if we are",
        "developing more secure systems there",
        "will be less rework there will be fewer escalations where people show up at the last minute and say hey security we forgot to come to you we've got this thing we're ready to ship off net we're going to ship it tomorrow can you sign off on the risk have you been there do you enjoy it",
        "if we make our expectations more clear we can reduce the frequency that that's going to happen we can reduce the pain of those escalations we can increase the predictability of delivery of the",
        "systems that we're building",
        "and so coming out of this I encourage you",
        "within your organizations and us as a community we need to decide what developers need to know about threats as experts we have to help Define this we have to put forward proposals like I have done we have to help people meet them we have to develop training that works we have to measure how this is addressing those goals of more predictable deliveries with fewer escalations and if we do those things I think we are setting ourselves up for a really positive Improvement in the way we build security over the next 25 years",
        "with that I want to say thank you very much for listening and I am happy to take questions I'm",
        "happy to take them now live I'll be on the swap card platform and there's my email address you'll have these slides by 9 30 tomorrow you can take a picture",
        "um I think this is important I would love to talk to people about thank you",
        "okay uh hey Adam Charles here uh the the",
        "question I had for you is",
        "you mentioned risk and risk is important for for some of us especially who work in safety critical stuff",
        "you go through the effort you do the threat modeling and",
        "then the the people who are responsible",
        "for risk for the product come and say well that's not really important that'll",
        "never happen and so you end up with the the situation where you've built a relationship with the development staff whether they be Hardware software and you you show them the joy that is threat modeling and then at the end of the day a different group says yeah don't listen to them how do you recommend that people build",
        "that relationship with the the Arbiters of risk so that",
        "they don't end up losing uh that",
        "believability that they have with the people who have to actually Implement these things at the end of the day so so I",
        "I think that if we engage with the people who build these things no one wants to be the engineer who only put one air speed indicator on the next 737.",
        "we get to the risk committee when there's a disagreement about what's",
        "there and so I think step one is to reduce the number of times we get to the risk committee and then number two I really think we actually need to change the way we do",
        "risk calculations but that's probably another talk also hey Charles good to good to hear your voice um",
        "so so I think it's developing the understanding of this is what the risk is and and that the developers take responsibility for us",
        "okay thank you",
        "I would like to ask like how would you view um like something like working with the",
        "requirements when you are building something uh",
        "in in this sense so so I I believe it's like important the same way how we want to like Define these deliverables that",
        "we have um like make them unified and same for everything so how do you approach like defining these requirements for building uh projects that they should be like we should always have the same preferably and how do you align this with this let's say a chunking of the knowledge that everybody should have so how how do you then use it to to like Define predictable repeatable requirements like in the beginning of these projects so",
        "developers are taking on more and more responsibility for qualities when I",
        "started in software we had separate quality assurance divisions and that's",
        "changed developers are expected to produce reliable excuse me reliable code",
        "they're expected to produce performance code and so if we don't know what they should know about security we can't expect them to",
        "write it into requirements but if we do have expectations then we can say hey we expected you to",
        "think about authentication and you've built an entire system without thinking about it how did that happen that you didn't think about the spoofing threats as you were writing those requirements and so I think the way we get to uniformity is through shared a shared expectations of what every developer",
        "needs to know",
        "hi um thanks for the presentation I really liked it so I I would like to add one thought though um when I think about the Jedi apprenticeship I I kind of always saw",
        "the movies in a way that the real point of that is that you get into the situation where you know you're a beginner you have to learn a lot and it doesn't really matter if you end up becoming a Jedi Knight so I'm wondering you you made the presentation about people and I think it's very important and I don't know if we are able quite yet to Define what the basic knowledge of developers needs to be it sounds a bit like you're saying we can keep them at a lower level of knowledge and that is different from what I saw in the movies right so so so I would like to take the apprenticeship I I started with the idea that we did the idea that have more than just Jedi Knights in the rebellion and I I welcome you and and people here at black hat often aspire to this Jedi Knight status Grace but not everyone in that Rebellion",
        "aspires to the same thing and I don't mean to say this is secret mystical knowledge that only a few people should ever have but rather recognize that the ground",
        "troops the fighter pilots the mechanics",
        "that make up the Rebellion have",
        "different skills that they spend their time honing and we need to Define what we expect of them for security in a reasonable time frames so that we can achieve it with that I know I'm out of time again you have other ways of reaching me which are here I'm sorry I couldn't join you in person today and thank you so much uh for being here have a lovely uh rest of the show thank you",
        "[Music]",
        "[Music]"
    ],
    "XJ_3Gottvo8": [
        "[Music]",
        "foreign",
        "hey everybody oh that is loud I'm Stuart Scott I work with the Cyber statecraft initiative at the Atlanta Council and we work at the kind of intersection of cyber security and Technology policy get through a lot of cool cross collaboration and the past couple of years we've had the privilege to be working on a lot of software supply chain security topics and so we started trying to think in kind of a risk management framework looking for sources of risk and sources of security and one that's caught our attention recently has been kind of the ecosystem of vulnerability research contributing kind of disclosures to companies and and libraries and and all those code bases from outside of the projects I'm sure many of you all familiar with the kind of the growing market share bug Bounty platforms kind of representing the growing acceptance and uh kind of investment in those programs and Frameworks and it's it's a pretty direct manifestation of the the many eyes theory of security right more people looking at a better chance of finding issues with it and they get paid in the process and we've also seen more kind of government initiatives working to to open up their kind of intakes for the same kind of information and all that is governed by what's generally called the coordinated vulnerability disclosure process process it's you know unique to different organizations and we'll just go with CBD for now but what really got us interested was some data that came out of congressional testimony in February in the wake of the log 4ja hearings in in Congress there is some anonymized breakdowns of where funds went from bug Bounty platforms and what we were starting to think about was was where did those kind of reserves of expertise and research localize and",
        "where are their kind of bottlenecks and the the big question we arrived at was you know can bad policy or a lack of good policy end up breaking that ecosystem interrupting vulnerability contributions and significantly degraded security as a result and can we detect that happening in public available data ideally",
        "and the kind of perfect case study we found for this was looking at the process of disclosure behind log4j so I'm sure many of you all are familiar with Carnegie Mellon they have a pretty comprehensive guide to CBD and this is a little exhibit of how they describe it as pathfinding between telling everybody immediately when you find a vulnerability and never telling anyone anywhere anything at any point and trying to find that optimal path is very context dependent but this was a great example of you know a researcher at Alibaba Cloud figured out the vulnerability and reported it directly and privately to Apache pretty promptly and they began patching and pretty soon after he followed up communicating that either on the 8th or 9th of December he'd started noticing that the vulnerability was making its way into more public forum which in turn spurred on their patching process and this is a pretty good breakdown of how the kind of withholding of information should work right you find the vulnerability you don't want to tell everybody just those who can best fix it until it becomes more public and then the utility of holding on to it decreases and you need to get people in the position to at least patch or mitigate as best as they can and as quickly as they can but what really caught our attention was soon after all of that started playing out there was some reporting that Alibaba had been sanctioned for how it handled the vulnerability by China's Ministry of industry and information technology they were suspended for about six months I believe from a an information sharing for with the government and it's not quite clear from reporting publicly available what the actual mechanism pulled was to pull them off of that that Forum it was either in the contract to be there they had to share information and failed to do so promptly or a law passed in July",
        "2021 and taking effect in September 2021 requiring that Network providers in China when they find a vulnerability among other things I have to tell the miit within a couple of days so we've seen reporting claiming both of those were the kind of legal mechanisms involved but the actual specifics aside the letter of the law the regulations on the management of security vulnerabilities and that's a translation so there are a bunch of different phrasings was kind of clearly violated right Alibaba the network product provider had the vulnerability and didn't tell the miit within two days and that's you know from the general perspective of CBD how you should proceed with that kind of information right only tell those who need to know until the information is more publicly available and then tell those who need to mitigate so the majority of the reporting on the rmsb is very focused on what happens to vulnerabilities passed to government early but our focus is on using it as a really convenient case study to look at this supply side question right can something come up in either a legal context or otherwise that will disrupt that flow of vulnerabilities to those who can patch it's very convenient because as the the second slide showed China is a huge producer of this kind of research and work it also provides a really clear timeline for us there are only a few key dates we have to check to see if anything happened and it provides a nice kind of control group right the law only applies to entities in China although there's some some blurriness around that but it gives us you know a view into what happens in one location and what doesn't happen in others and the pathway for a chilling mechanism on that research is pretty clear either companies receiving information have to rework their internal processes or the researchers and research entities have to kind of negotiate what the risk is of following proper CBD what the risk is of following the law or at least wait until there's some more legal clarity",
        "and to be clear this isn't focused purely on China we've seen the same kind of Dynamics at play all over the world so for example in in Germany a researcher found a vulnerability within an election polling app reported it and was threatened with legal action similarly in Missouri a researcher found in the HTML and I think it was of the State Department of education's website that they could pull Social Security numbers for employees and they didn't do that but they were also kind of threatened for basically reading the web page and there have been some good developments as well with the doj declining to prosecute good faith research whatever they kind of consider that to be Anisa in Europe is pushing member states to develop as governments their own CBD processes and sizza itself has also put out a binding directive and I think the the deadline for compliance is expired at this point but for government agencies to set up their own processes but that brings us back to what the the question we wanted to take a look at some data and try to answer is which is did the rmsv create some kind of Supply Shock by disincentivizing participation in that pipeline of vulnerabilities and vulnerability research and if so what did it look like can we detect it are there other weird things going on in the data that we should take a look at and does that Supply shock if it exists trickle into the overall ecosystem or is there some resilience built into the system",
        "and you know along the way too we get to see a pretty cool insight into how those vulnerabilities are reported by companies and how that record making and record keeping is done so to to answer this question we started looking at acknowledgment data in cve logs and security updates from companies and we focused in on Microsoft Apple F5 VMware",
        "and red hat we wanted to get a nice breadth of proprietary products and open source ones and to kind of really span between consumer-facing products very kind of in the stack and on the racks software Suites and everything in between and there's lots of differences in how those companies manage that information internally so getting that kind of diversity in there is very useful for us and to set up that kind of nominal timeline of events to check against we started with July 2020 which is the earliest kind of public discussion acknowledging that reporting requirement in the rmsb July 2021 when the law was passed September 2021 when the law takes effect and then possibly if we can get recent enough data December 2021 where there is a maybe incident of enforcement which again we don't really know what happened but the letter of the law seems to have been broken",
        "of course those events don't exist in a vacuum right so Summers of 2020 and 2021 were also full of uh sanctions from U.S government against Chinese companies that may have done something to that kind of Pipeline and there's also a lot of cyber security regulation going on in China at the same time so even if we find something and it lines up nicely it's really hard to tell what causal mechanisms there are without talking to actual people on the ground but this is our basic process we either downloaded things directly where they were made available or used some simple scraping scripts to pull those data sets out and then the key things we were looking at were cves the public acknowledgment date and the publicly credited entity and from there we just tagged the entities to the country as a proxy for their kind of operating legal environment there was a lot of information too about individual researchers but we didn't apply that same analysis to that part of the data in part because it's a lot harder to get location data and in part because the law doesn't clearly apply itself to individual researchers so much as large companies but then we just batch them by month and ran some civil tests to see if anything happened on those key dates and these are just the the inputted countries to that process",
        "the data set I cannot tell you how messy it was but it was very bad um lots of these things are hand entered there's lots of typos lots of irregularities there's really interesting things going on with the dates so sometimes security updates will include a cve that is publicly knowledged afterwards but somehow retroactively added but sometimes they won't so there's lots of fuzziness there and there's not any Clarity really on the actual process where you have a private reporting date public acknowledgment date and whatever kind of backtrack data filling is going on it's also hard to compare between these different five different ecosystems we've set up partly because of how they organize the data so some are organized by pure cve numbers some organized by effective products some were organized by security updates and that leads to a lot of overlap even within the data sets so for example Apple might update two separate product lines to address one underlying vulnerability and that would lead to a double count um and last of course having to batch everything by month to keep things you know manageably smooth makes it a little fuzzier on the back end but these are the data sets we came away with um and we're going to run through Microsoft and red hat today those are where we had some interesting results uh apple and VMware had a null finding there was no Supply shock that we could see and F5 didn't even have any Chinese tagged entities in its data set though it was kind of an order of magnitude smaller than the other ones",
        "so this here is a easy graph orange is China tag contributions and blue are us",
        "tag contributions as a Baseline and this is representing on the y-axis their proportion of that month's contributions um and so over time you can see what's a pretty typical story for all of our data sets is early on the US kind of dominates the ecosystem and then as other it sectors develop and as the kind of receiving entities become more open to International contribution you see China but other countries as well contributing more and more and obviously here we can take a quick look at the quick uh cliff dive that seems to happen around one of our key dates July 2020. so",
        "these are some basic trend lines and we see increasing Chinese participation in this the Microsoft ecosystem but a pretty noticeable and steep decline there so we looked not just at the proportions but also the raw counts to get a bit more context and what was interesting here with the Microsoft data was that it was really the",
        "continued like productivity of the ecosystem despite what you could consider to be the Chinese contributions returning to some kind of meme that set off that proportional drop so this is not a no to our question of is there a supply shot going on but it doesn't seem to trickle out into the larger ecosystem which is a little bit reassuring and then for the red hat data you'll have to forgive some very spiky graphs early on there's almost only U.S participation because the timeline goes much farther back than the Microsoft data but we see again a similar kind of increase in Chinese and other countries participating in that kind of reporting pipeline and then again we have a drop off but here if you can't see it is between 2017 uh February to April which is a date we have no explanation for and then again that kind of continued drop-off resumes an uproad Trend but stays pretty suppressed throughout",
        "uh so here's looking just at the contribution counts right the raw numbers rather than the proportions and this context is also helpful it seems that that drop-off was sustained a little more thoroughly than the proportional data would lead you to believe there was also just a following drop off in overall contributions to the ecosystem and what's notable here too is that given that this is an open source set of data points there's a lot more credit given to individual researchers that we didn't tag to any country so there's a greater gap between the total contributions and the by country contributions",
        "um and then finally for a bit of context where you thought we'd throw in the Apple data as well given it was our largest data set and the one with the strongest lack of anything you know related to the rmsv possibly happening so again early on we have that same story of a lot of U.S participation and we suspect too that a big part of what leads other countries to contribute more down the line is just the market penetration of the actual products in those countries and as you can see over time China becomes a greater and greater participant as well as the other countries which are just not shown here for a bit of clarity and here are the raw contribution counts and you can also see what's interesting about the Apple data seasonality and you know every other month and then every four months there's a spike in the number of cves addressed which might reflect some kind of security patching scheduling going on there but it's a nonetheless a really interesting data point to find no no affected product particularly given that we've seen products focused on at hacking competitions like the tianfu cup but that's another consideration to give this data is because we're capturing pretty much anything counted as a vulnerability we're potentially blurring those kind of high impact vulnerabilities that are more likely to be tailored towards offensive use",
        "so our kind of key takeaways from this where on the one hand there doesn't seem to be what we expected to find which is a clear drop off in any or all of these ecosystems that affected total contributions but we did find something pretty clear in the Microsoft data just not so clear what actually caused it so that July 2020 date I mentioned on the one hand it's kind of our strongest case for for a drop-off because",
        "um and we also have no idea what happened with the red hat data I would really love to know if anyone has any insight but it's definitely something worth looking into because our other key takeaway is that the kind of reliability of this ecosystem can't be taken for granted you know I think generally it's not thought of about as a supply but we're finding that to be a pretty useful way to frame how to build resilience into it you know you can almost buy security in that sense or you know something close to it and we finish up with a couple of recommendations for how governments and companies without kind of mirroring China's type of law can invest in that ecosystem and and kind of maintain its resilience to any localized legal context shifts",
        "so the first thing on those lines in that kind of preservation front would be to harmonize not super rigorously but at least in spirit CBD processes between governments um and private sector entities so that there's not so much ambiguity for a researcher who finds something and doesn't know kind of what the rules of the road are for reporting in the ecosystem that they're working in we also figure that particularly with the open source ecosystem investing in vulnerability Discovery tools can take a lot of that workload off of researchers and can still be a way of investing directly into security particularly given that there isn't so much of a officially set up bug bounty system for the open source ecosystem although I think there are a few initiatives just starting up actually that are doing just that and then the third point that we wanted to recommend was by keeping track of where kind of the flow of disclosures and vulnerability research is directed you can get a sense of if things fall off where it might be worth investing in more research so for example if an ecosystem starts to kind of dry up and they're not as many vulnerabilities found there each vulnerability found in that product or code base is going to be more valuable from a security perspective and you know ensuring that the the kind of incentives built around that line up and and funnel researchers there before they have to worry about how much they're going to get paid for something they turn over which is not necessarily clear up front you can kind of build in not just resilience to the supply but to how that research Community is able to interact with different companies and different code bases",
        "so that's kind of the you know the the short story is though we're trying to consider vulnerability research really large as a Supply right a community that has to be kind of invested in and given some legal guardrails and protections um and wanted to ask is it possible for bad policy to shock that system uh to cut off a large proportion of it from the rest of the the community the answer we don't really know but maybe it's definitely a not no and there are definitely a couple of concerning drops that we would want to look into further and you know given that those drops didn't trickle into the broader ecosystem it seems there is some innate resilience built in and I can talk more about the kind of specifics behind that drop-off there's some really cool data points about an increase in unattributed",
        "um contributions in the same time frame but finally there are also like proactive ways to invest in this right we don't have to kind of wait for someone to make a copycat law of the rmsb and then start worrying about a fractured ecosystem and a lot of those initiatives don't only protect against those types of laws but they build up a stronger research community",
        "so we've got a draft report up we're really hoping to kind of incorporate input from a lot of experts in technical Fields a lot of people on the ground I'm hoping to talk to some researchers as well so feel free to take a quick read and get in touch with us if you have any kind of notes or questions I think we've got about 10 minutes left here where we can do some q a which would be really helpful from our friend but thanks so much really appreciate y'all coming [Applause]",
        "[Music]",
        "[Music]"
    ],
    "uGa9_BMS0FI": [
        "[Music]",
        "foreign",
        "now it's my pleasure to Welcome to the stage Stephen duchenne",
        "I'm sorry and Simon have it yes",
        "thank you very much [Applause]",
        "in 1961 a 28 year old New York bartender is coming home from work quite early in the morning it's quite dark if you see someone on the way as she goes home she doesn't recognize him she doesn't realize that he follows her home and as she Parks her car and walks a very short distance from the car park to the front of her very well-lit building he follows her and sadly he stabs her twice",
        "unsurprisingly she screams out",
        "now the fascinating thing is what happens inside the building there was a spectrum of behavior from the residents in that place some people hear her cry but dismiss it entirely as something that isn't really relevant one man leans out of a window and shouts let that girl alone it doesn't do anything more than that that's where it stops some people do call the police but when they do they describe the murder unfolding in front of them as a domestic argument or a scuffle others still asked other people for advice trying to defer their responsibility now whilst the 38 Witnesses who take no action is a gross oversimplification of what happened no one directly intervened in that most obvious of threats and no one was able to communicate the situation effectively enough to prompt an urgent police response now anyone who's had any time in a psych course uh or anyone who's kind of interested in True Crime might have come across this story of Kitty Genovese and whilst there are some facts in question it's become a parable in Psychology about people consciously engaging with a situation that definitely should prompt behavior and yet for some reason didn't it's prompted Decades of psychological research into the the blockest of people interceding in an emergency or when witnessing or even personally experiencing social injustice",
        "and now honestly speaking I'm not entirely convinced that whilst I like to think of myself as the kind of person who might want to intercede if I saw someone with a knife there is no way on Earth I'm getting involved and that's really dangerous isn't it but we're lucky because we're interested in a similar phenomenon but in a very different context",
        "foreign",
        "engagement I typically don't want to get caught yeah that's typically bad for me if I can get in get the goods and get out that's great but as I walk around people see me they can't help but see me I'm you know six foot three guy I kind of stand out I'm outside of their Norm what we see as we walk around is people looking up they know you're there something's wrong and then they go back to typing now I can subdue almost any of that with the recti contact and the best I can manage for a charming smile we call this this perception of a threat with a choice of inaction the fail to challenge vulnerability we want to know why this happens and what we can do about it",
        "too many clicks I'm side habit the head of cyber awareness behaves and culture for the UK Ministry of Defense I'm responsible for setting the Strategic Direction and approaches for influencing secure Behavior across the organization my career has had two major themes firstly as a forensic psychologist my academic research specifically looks into malicious active Behavior why the bad guy does what they do and then what we can do about it how can we put mitigations in place through unusual and interesting strategies like gamification the second theme of my career is as a professional social engineer and I've LED teams that have conducted socio-technical investigations Audits and assessments at countless high security sites globally I now act with one foot in both camps detecting and then seeking to remediate behavioral vulnerability",
        "consultant with Atkins in the UK I've worked with multiple public and private sector clients to help change cultures and behaviors within those organizations and currently I'm a behavioral scientist it's part of the Cyber awareness behaviors and culture team would say like I like to put my social engineering skills to good use as well looking to apply them to see how we can help change behaviors within those organizations so cyber awareness behaviors in culture in the UK Ministry of defense is an internal capability operating in partnership with my colleagues here at Atkins our mission is simple we want to demonstrably reduce cyber security Risk by developing new and reinforcing existing positive behaviors through targeted and measurable intervention it's really important to know the audience size we're dealing with we have 240 000 people in the organization that run the gamut of every demographic and trade group but it's wider than that we're also tasked with impacting service families veterans Cadet forces and even the defense industry base all in all I am responsible for Shifting the behaviors of over 3 million people it it can be an unenviable task we do this through through four key pillars of effort at the very center of everything that we do is data we can't do anything unless we know the human terrain and know whether or not we're having an impact we can we conduct high level frequently sampled socio-behavioral questionnaires",
        "to gain a large macro picture and we also conduct in-depth analyzes of specific data sources which detail individual risky behaviors on top of this we have the Discord shaping content team all ideas have words attached to them and all words exist to communicate ideas language use is an essential window into the value the meaning and the position of underlying mental models that prompt secure Behavior unless we consider the way that language and the vast lexicon of cyber phrasing is used we're going to find it very hard to shift behavior on top of that next we have the training team unsurprisingly no one could be able to perform a task unless they know how to perform that task now I think training is incredibly valuable but I do think we overestimate how much it's required in this specific landscape and last but not least we have the behavioral interventions team they're responsible with finding detecting and looking at specifically changing behavior in specific groups now I'm not going to talk too much about that I'm going to leave that to Steve a little bit later on",
        "we've done a huge amount of work over the last couple of years and it's been visible and it's been very effective we've got some examples like the fact that we have knowingly impacted the likelihood of reporting a suspicious event we've developed and broadcast a game show that thousands of people took part in we changed the landscape of unauthorized USB device usage and we built and toured a physical escape room and I'll talk about that in a bit now I could talk to all of the work that we do for days and I'm not going to do that because I've run out of time but if there is anything you want to catch up on do grab me after this so that's the what we've done but let's talk about why it works the prevailing approach to dealing with a socio-behavioral issue is based on a really simple premise if our staff know cyber security they will behave in a secure way that's the the kind of underlying argument behind the two big words that float around on on this subject awareness and education but if knowledge was all that was required to shape Behavior then no one would smoke we cannot expect staff to hold the same level of interest in security as us and it's fundamentally true that degree of interest in a task is a major factor in the prioritization applied to that task even so it's been my observation that within the security profession we often unconsciously do just this it's that audit moment when you spot a password on a Post-It note and you think oh I can't believe someone would do that it's blindingly obvious that we shouldn't do that right well what's Happening Here is we're transferring our own value system onto somebody else and quite obviously that person has a very different decision-making process than we do so what do what we need to do is to consider the sociobehavioral landscape from a different perspective as is reinforced throughout numerous themes of psychological research we need to consider the motivation underpinning the action now that's great on paper but how do we do that so I'm going to pitch three things that I think we need to consider in order to get to a place where we're centering the song motivation",
        "first off we need to streamline the problem two things that we really need people to do and that's to see something and identify it and try and intervene if they can and if they can't they need to communicate that issue to someone who's more equipped than they are we need people to challenge and Report now it's really important to note that these are behaviors not points of knowledge and there are points of knowledge behind them but what we want is the behavior next there are two systems of motivation and what we really want is for people to do things of their own volition to be intrinsically motivated",
        "right now we typically base our idea of security against the expectation that people should follow rules and in doing so we'll achieve a minimum standard",
        "but this externalizes security decisions into a state of compliance to better draw our intrinsic motivation we need to empower our people to make informed risk-based decisions",
        "this kind of thinking already floats around our industry to be honest we don't see anything as 100 secure why should we see people that way now speaking of intrinsic motivation how do we do intrinsic motivation better well luckily there's some Theory out there to help us according to Ryan inductory self-determination Theory there are three elements to intrinsic motivation we need to ask ourselves are we working to meet these factors do people feel like they have a degree of autonomy or even better how do we Champion autonomy are we facilitating competence remember that's not the same as bullying people into building knowledge about something that doesn't interest them it's about giving them the opportunity to feel like they're getting better at something that matters and overcoming challenges which are pitched at the right level to them lastly how do we connect with those around us do people feel a heavy burden of individual responsibility or are they free to pass the bucket to the IT team it's these factors that make gamification such an incredibly powerful tool",
        "so I think there is one fantastic example of gamification let me tell you a little bit of background Niantic Labs started in 2010 with a mission to create a new kind of gameplay in which the real world becomes the game board their foundational principles were to explore new places to get exercise to have social interaction with others or in in a better phrasing autonomy of exploration competence in health and relatedness with other players in 2016 they released one of the most successful apps ever anyone know Pokemon go fantastic a year later",
        "users had collectively recorded 15.8",
        "billion kilometers of walking",
        "if anyone's doing the math that's roughly the distance from Earth to the edge of the solar system for me the story of Pokemon go is one of the best examples of how powerful gamification can be because through all of their incredible success they met their core mission of getting people to go up and do some exercise but the user did not download it for that purpose they were just playing a game and the core of the game is really simple it's about fun it's about enjoying something plays a freeing act and it's safe now good gamification keeps that in mind",
        "it keeps a true essence of a game whilst on the surface it's the action of distilling down a game mechanic and applying it somewhere else drawing only on the mechanic itself and this is a spirit of what gamification can offer so to get it right we need to consider a few elements firstly we have to walk a knife edge of difficulty",
        "now the knife edge has two sides of course on one side we have railroading your freedom to mess up is obviously like taken away from you when we apply this to the gamification problem in learning well it's an issue isn't it it can be hard to avoid because we want people to hit the learning objectives uh what happens if they're really good and they bypass everything then we've got a bit of a problem but the other side of the difficulty knife is that there sorry the other side of the knife edge is the difficulty wall now the difficulty well when you play a game a good game has a difficulty curve that allows you to grow competence as you get better at the game and you face bigger challenges as you play but some games have a curve it's so sharp it's like a wall now that blocks all but the most committed of players for pure entertainment that really can work and it does grow a cult following but that's really not what we're after with gamification the next thing you need to consider is the game world getting world is incredibly important as a concept the aim is to communicate a new layer of reality in which all players can inhabit in-game roles sometimes as themselves but in which the game World the environment or the adversary can't hurt you now this concept of a game world can sometimes be confused with the Fidelity of a synthetic environment uh especially agent in the age of VR but in terms of gamification the definition is much wider it can be rich detailed experience like Halo or it can be just as detailed without the need for any visual representations like Dungeons and Dragons it can be incredibly simple like dominoes now in all of those examples players are constantly aware that their actions and their decisions are operating in the game world alone poorly designed gamification fails to take this into account and simply expects participants to respond to the game mechanic without buying the world it lives in and don't don't worry if this takes a while to get right uh Monopoly is famous for dragging all of those social frictioners out into the real world and ruining the good family get together now lastly for games there is a really important factor it's almost a defining factor of a game you've got to win okay winning is vital and the easiest way to build a positive sentiment that you've got to remember the knife edge and these two are intention here we want our players to win definitely but we want them to feel like it wasn't guaranteed it's kind of manipulative but that's how games work this means pitting players against one another can be fundamentally problematic so who do I suggest the player should run against a major theme in my academic research centers on the idea that we can build more secure behaviors among Defenders by understanding inhabiting the role of and by having a personalized lived experience of a villain importantly wrapped in a bubble of psychological safety in order to prompt a mitigation Behavior we need two forces in balance a meaningful basis for what bad could be importantly enacted by an external actor who can't just threaten them from inside the company and a commensurate set of tools that manage that specific problem",
        "excess knowledge begs the question why should I bother and what it does is results in work to amounts alternatively if we throw too much threat understanding or present the threat in the wrong way then it prompts fear and paralysis when we look at the typical approach to managing behaviors we spend a disproportionate amount of time and effort asking people to perform behaviors without generating a real psychological platform for the threat sometimes we talk about how often we get breached or how much money we lose but when we ask someone to carry out the behavior do we explain clearly what the competing threat the problem set control actually is and this is what the aim of the threat Avatar is we use a consistent relevant narrative expression of a villain which can offer both a model of real threat but we control it we curate it in a fashion that it feels safe to interact with for me the perfect stereotype of the threat Avatar is Team Rocket they have a theme song that tells you they're going to start doing bad stuff yeah it's uh widely coyote or literally any adult in Scooby-Doo as an audience we know that every time they're introduced they're up to no good we don't need a deep comprehensive understanding of their motives although that can be built over time we just know that they're going to try and ruin the hero's day we also know without a doubt absolutely unervingly they're going to fail",
        "we can explore all their wild schemes everything they're doing right there along with them but know that there was never any real harm to the hero so what happens when we take steps to transport our staff members into the role of the protagonist in their own story when we cast them as the hero we can express our antagonists in two different ways either as an enduring story that we can draw from time and time again or as a transient experience",
        "in the ministry of Defense we use both and subtly imply connections between them they're a living story we have the ministry oh you love this the ministry of defiance get it",
        "fantastic marketing right",
        "your feelings are active history and they are continually trying to attack defense in cyber Awareness Month 2021 we told several stories about Defiance and they were all interconnected we had a physical escape room which toured around the country and it was based on new model military accommodation",
        "players were locked in a bedroom when a young verbose and playfully belligerent Defiance hacker took over their iot devices in their room players escaped the room by securing those vulnerable devices through simple puzzles",
        "we also had and developed a magazine",
        "which we called revolt uh it's very good and if you want to see it do come and grab me afterwards but it's from the perspective of the bad guys I'm telling you how they do what they do this is written by the way by a character we call the editor he's on the front and he broke into one of our broadcasts so we put out videos he took over there and spilled all of defiance's Secrets",
        "this this is all obvious fiction none of this is real and it's presented in such a way that's why it's such a kit image of a hacker because we want something that you immediately know isn't real",
        "as I said there is an alternative modality of my theory and that's based on the idea of establishing a game world as quickly as possible and this will become relevant soon but before that I'm going to let Steve explain how a targeted intervention resulted in the application of these theories",
        "thank you so just how do we know then that developing these novel and innovative ideas and inviting people into our game world is going to have the effect that we want it to we work to three key principles in everything that we do as part of a wider process we always make sure we are addressing one target audience that we get to know intimately and we are working to one specific behavior we make sure that all of this is grounded in proof so that we can evidence what impact we are having on both of those things",
        "this means that when a request comes to us to say look at a particular thing we make sure that we take all the politics or the emotion or the opinion out of that request and make sure that we are focusing on the specific action it's not a case if I need you to look at this because it's making me look bad to my seniors it's a case if we know that people are doing this it's happening this many times and we can evidence exactly what it is we make sure that we understand the specific actions and behaviors that people are doing but understanding this alone isn't enough we need to understand why people are doing these things and so we take all of that data from the modeling and make sure that and apply it to different behavioral models",
        "things like the ones that sign mentioned earlier or the combi model of behavior change by Susan Michie and colleagues this helps us to understand why people are doing the things they're doing but we can't neglect the fact that people do not operate in isolation they're part of a system and that system also informs behaviors so we look into the wider context to understand how organizational factors things that leadership are doing for example might also be influencing behaviors this means that when we develop our interventions when we start to apply gamification we know that we're going to be pushing on the right levers we know that we're going to be able to have the effect that we want and Target the right behavior and again we're able to prove it we make sure that we refine and trial all of our interventions before we actually deploy them to our target audience to again understand what impact we're going to have and then eventually we get to deploy and of course we make sure that we review and monitor and make sure that we are having the right impact now as I mentioned we're going to talk about challenge behaviors now this stems from a piece of work that started back in 2020 and effectively we were asked to look at reducing the prevalence of people taking Peds or portable electronic devices into areas of our organization where they're not supposed to be information protection zones now from our work from that first half of that process we effectively come to understand that the problem was that whilst everyone knew that this was happening no one was willing to stand up to it and say that you can't do that you can't bring your phone in here or can you please leave your smart watch outside in the lockers that's what they're for and this is a really important problem and we know that this problem exists in lots of different groups in lots of different organizations and industries around the world again as I mentioned challenge is one of two most important behaviors that non-technical staff can do along with reporting to make sure that the organization remains safe yet we don't really get the opportunity to practice that behavior and when we do it's a real life situation that comes with real social pressures right who wants to go to their colleague and tell them that the thing that they're doing is risky for their organization who wants to feel like that stick in the mud or the barrier to progression even if you're doing the right thing and trying to keep your organization safe imagine a firewall that was afraid to query a request because it felt self-conscious or was scared about being judged it wouldn't be much use as a form of protection would it and the human network is exactly the same we have to empower our people to feel confident and able to challenge because that's what keeps an organization safe",
        "so to help Define it a little bit further and make sure that we're pushing people towards the right behavior that we actually want them to exhibit cyan and I have developed a model for challenge this is based on two key principles the onward social impact of the of the action and the actual quality of the intervention effectively do you upset anyone in the process and does it actually remove the risk so the first part of this model the unconstructive partial challenge it may be overly aggressive a little bit robust perhaps more so than we would like and on its own it doesn't actually remove the risk it doesn't intervene on that behavior",
        "up to the constructive partial slightly more polite a little bit more more of a friendly style a challenge but again still not removing the risk something is still there that is a problem due to the unconstructive complete again back to that maybe slightly overly abrasive style of challenge but on this occasion it actually removes the risk it stops that risky behavior from happening",
        "right up to the Holy Grail of challenge for us the constructive complete it's robust but it's polite and it removes the risk it intervenes on that particular behavior and stops it from occurring",
        "so we understand that we need to reduce the number of Ip of PEDs being taken into ipz and in order to do that we need to increase the peer challenge of risky behaviors now before we demonstrate to you just how we actually do that there's just one more uh model that we want to try and explain so in the environment around us there are thousands of pieces of information that we always take in to help understand that environment",
        "we have to start to make a sense of this we have to put meaning to it we take all of those different bits of information all of those stimuli and put our own perceptions around them to understand what is happening in the environment this then starts to affect our cognitions what we actually think about the situation what do I need to do as a result of this thing that I've just perceived which again in turns it starts to affect our Behavior the things we actually do now the world we operate in influences this process and vice versa to a certain extent and that's a really important thing to remember because if we want to start thinking about how we can impact challenge behaviors we need to get people up to the point of understanding that they actually need to do something about it we need to give them all of those little bits of information all of those different stimuli help them to put their own perceptions around it and realize that it is risky so that they start to think and realize that they need to do something about it and then act upon them",
        "so I was going to show you a little demonstration of how we actually do that now for the purpose of this demonstration I am just another person within this organization I don't necessarily know so just a disclaimer and effectively what we're doing in this demonstration in the role play the whole purpose of the exercise is we're helping individuals to isolate their cognitions and in doing so helping them to develop a script towards challenging",
        "so picture the scene it's a Thursday morning and I've just got into work I've got an absolute ton of emails to deal with that have come in overnight and I've got loads of meetings that I need to prepare for today my attention is a finite resource and right now all of it is on the task at hand",
        "could do is I could take advantage of this couldn't I if I was on a test or an assessment I would just fly right past him he's not gonna pay me any attention he's busy typing okay that's fair enough but that's not my aim what I want to do is draw his attention so to do that I'm going to ask him a question a suspicious question sorry mate excuse me um I'm so sorry I'm having a just a nightmare of a day my laptops died my phone's died uh and I'm like I've got like two minutes to a meeting could I just um borrow your laptop for just a second to email my boss okay now this is a little bit weird I don't think anyone's ever come up to me in the office before and asked me if they can use my laptop while I'm set on it right now I'm just trying to make sense of this situation and understand what is happening I'm trying to build all of those stimuli into a picture I'm starting to perceive it as being a little bit risky but right now I'm just trying to understand the request I'm taking the thing that he's just asked me to do in comparing it to the Litany of social norms rules and expectations that we all adhere to in daily life to understand if it's acceptable or not meanwhile I've established a game World very quickly uh normal bad guys don't typically tell you they're a bad guy so uh what I'm going to do is uh use this game world I'm gonna get his interest and then I'm gonna get him to to challenge me to get him to do something with that these cues by the way are designed to gather his attention but it might not happen instantly it might take a little while for him to Cotton On that's okay remember this is happening very very quickly and I've also asked him to do something he definitely shouldn't do he has never met me before there is no way he could know me which means he definitely shouldn't be giving me unfettered access to his laptop hi hi I'm sorry what was it that you wanted so right now again I'm still trying to make sense of the situation I'm still trying to put all of those different stimuli together but I know that it's not quite right I know that I'm probably going to have to do something about it it's starting to affect my cognition but I'm still not quite there yet maybe it's okay right now maybe I can get someone else to deal with the problem make it someone else's issue actually I think you need to go and speak to it yeah okay not bad right it's a partial challenge he won't let me touch his laptop but right now I could continue to exploit this person they haven't stopped me just yet I could push further or I could take advantage of this permissibility to get gone and Escape we're trying to get the challenge so what do I do I'm going to push him a little bit further oh yeah yeah of course of course I forgot I forgot I tell you what I've got something better um is there any chance you could just take this it's a USB stick uh any chance you can take that just just print off there's only one file on there and if you do that I won't be late please",
        "okay now again this is starting to get really weird I really don't think I can do this I don't think I can take this and plug it in but at the same time I really hate saying no to people and actually it just doesn't come that naturally to me I really don't think I can do it though I'm gonna have to Cobble together some kind of Challenge from scratch uh I'm really sorry but we actually can't plug those in I think that's against policy um sorry who are you I'm sorry I broke down the corridor with them Jeff Jeff who Smith",
        "I I've worked here for quite a long time I know there is no Jeff Smith and this guy has just approached me asking me to do really risky things and he's given me this odd USB stick and actually it says hack on the side of it",
        "and what is that t-shirt all about why does it say I'm lying to you I don't I think something's up I think this might be an exercise well no Mr cyber threat I will not plug that in oh he's got me see that that's a complete challenge there's nothing I could do beyond that point to change the angle this person has put all of the cues together the the silly USB stick my my wonderful t-shirt and has leapt into the",
        "game world with me they know what we're talking about now so now they're right there next to me all those tensions that they experienced earlier on that discomfort they felt that's immediately resolved they feel great now they feel quite good I want to capitalize on that",
        "as they feel quite good they've now got a framework for conducting challenge in the future obviously I mean self-evident that it's not going to look like this because they've done it once because they've gone through that psychological process and they have engaged in a challenge they now know that it's going to work out okay that it's not strange it is a little bit strange I'll be honest uh when",
        "um they come to this in the future they're building all that positive sentiment and what else have they done they've beat a bad guy they have won against an immediate threat Avatar that's quite powerful but I'm not going to end it there it would be kind of suspicious if I went good job I'm going to give him a good quality debrief congratulations yes absolutely that is an exercise I'm here with a cyber confident team and this is my ID you can verify if you like uh we're here doing this exercise because we want to reinforce how important constructive challenges and",
        "you did great you did a really good job so thank you so much for that it's a really important thing you need to know that this isn't a test it's not an assessment we never do that uh I just want to give you the opportunity to practice and you did great so well done uh and one last thing um I'm going to leave you with this uh little card here it's green stands out on your desk if you put it there then my team know and we won't come and get you again for a little while anyway uh and next time you're not gonna be wearing a t-shirts so watch out for that uh what it does is lets you and others around you know how important challenge is so thank you so much for taking part in the exercise yeah no thank you that was really weird but there was no way I could say yes to you there was just too many too many things and I'll get the ID thing next time as well yeah exactly it's weirder on stage so a bit of an odd a different exercise but for me that was really useful I had to take all of those different things those different bits of information that might have suggested risk and build that picture up for myself I had to understand that something wasn't quite right and then I had to challenge him I've now got a script that next time I can use if I need to that helps me feel confident and I know that mod expects me to challenge this is something that we have to do now so that simple exercise repeated",
        "multiple times is how we're starting to change behaviors and we are so far we've done this exercise 22 times and engaged 850 people directly which means we've engaged between two and three thousand people indirectly as well we've done this on multiple sites in the UK including the only site where they don't have to issue a warning before firing which adds a certain element of spice to the exercise for everyone but when we followed up on this we can see that it's starting to work 77 of people report the exercise as being engaging and useful while 62 of people reported a positive sentiment towards us towards challenge after the exercise the remaining 38 reported a neutral which meant that no one reported any negative sentiment towards challenging afterwards we're starting to change people's perceptions of that behavior but this is also starting to affect their cognitions 91 of people told us that they would now feel confident in raising a challenge if they felt that they needed to but it's not just the stats and the numbers and as important as they are it's the stories that people tell about challenging and the things that they do as a result we've had security advisors come back and tell us that that people on their site are starting to challenge more and they're doing it in the right ways and importantly in our environment they're also doing that up the chain of command the no Mr cyber threat cheesy line in the role play well that was something that was actually shouted at us in one of the engagements in the middle of a really really busy office someone stood up and shouted that exact phrase at us now whilst that makes us go a little bit red and we look a little bit silly actually it's an incredible outcome it's opened up that game World from being a one-to-one relationship to a one to many everyone else on that floor plate has now had an experience of the floor Walker and has joined in on the exercise with us it's helping us to spread the effect to a much wider group in a much quicker in a quick and effective way we've been heckled out of seconds floor story windows and we've had people turn the challenge back on us as well go on try and get me again I bet you won't be able to do it next time all of these things showed that the exercise is starting to work we can literally see it in people's reactions as they do that lining up of stimuli and realize that they have to do something about it",
        "and obviously importantly everywhere that we've been has asked us to return and do it again so we must be doing something right so he mentioned that we always want people to have a positive experience of challenging so just how do we do that well first we have to accept that there are risks in this kind of exercise not Everyone likes to be engaged directly and they may we may have colleagues who are not necessarily neurotypical and so engaging them",
        "directly may actually impact people's feelings of psychological safety or well-being",
        "likewise if people feel as though they fail some kind of exercise without even having got up from their desk well again those feelings may just be adversely impacted",
        "because of the kinds of sites that we're going to and the information that are held on them there is a genuine risk of us actually causing some kind of incident or being strong-armed off a site but understanding and accepting these risks means that we're able to do something about them we constantly update the language that we use in the exercises to make sure that we don't hit any soft spots for a particular site and upset anyone inadvertently we've changed the t-shirts to make them even brighter and jazzier and stand out even more with stronger slogans so it's so obvious that we are not supposed to be there and we've built up our kit over time the USB stick that PSY handed me is just a 3D printed bit of plastic with either hack or virus written on the side of it and we always use a dummy phone as well when we go on site so that we don't break our own rules regarding Peds but there are things that are fundamentally built into the fabric of the exercise as well that help to keep it safe we always have two observers on every exercise that can see the engagement and they're in constant Communications through a covert radio kit so they can see and hear and talk to the floor Walker the whole time so if someone does have a particularly strong response we're able to step in and intervene if we need to we always make sure that the right people know that we are supposed to be there we have the permission from the right people and they know exactly what is going to happen we keep that permission on as a printed version of it so that again if someone does respond robustly we can show them that we're actually supposed to be there in fact the final thing just as I did in the exercise we always do a debrief we don't just let the person flounder and think what on Earth was that that's just happened we explain the principles of why we've done it and what we were trying to achieve we let them know that they did a great job even if it takes a little bit of nudging to get them there so that they feel confident in being able to do it all of these things help us to keep control of the exercise and make sure that we're doing it in a safe way",
        "and so that is how we are starting to tackle the fail to challenge vulnerability now I appreciate there was an awful lot of nuance to information in that but we just want to leave you with three key takeaways for today",
        "so the first one gamification doesn't have to be hard it doesn't have to take a long time to do and it doesn't have to cost the Earth either in our example the game world was set up in a matter of seconds and it cost as much as it did to print some 3D USB sticks and make some T-shirts",
        "and it also draws on the same skills that a lot of us already have effectively we're socially engineering a response for someone but rather than doing it for mischievous purposes we're doing it for a positive outcome training doesn't have to be 30 minutes once a year micro doses like this the fact that we're doing 30 seconds is going to have vastly more impact and it's more memorable step outside of what it is and think about what training and learning could be definitely position motivation right at the center of it",
        "we obviously want you to take the principles from today and go away and try and apply them to your work cyan I genuinely believe that by applying Behavioral Science or psychology to the things that we do we can help organizations to become more cyber resilient but we can't break people in the process there's no point in making things worse we have to keep people safe so if we do this make sure that we have the right controls in place make sure that we have the things there to ensure that exercises run safely and we don't inadvertently cause more harm than good",
        "so the final thing to say is thank you very much for taking the time to come down and listen today we really really appreciate it and we hope that you found it as valuable and as interesting as Cy and I have so take the things from today go out practice and play",
        "[Applause]",
        "[Music]",
        "[Music]"
    ],
    "8ZWc7Hcsl8o": [
        "[Music]",
        "so thank you for the kind introduction and today we're going to present to you I had actually leaking data from the micro architecture actually we lied to you since that's not the title today we are going to present a big leak architectural leaking uninitialized data from the macro architecture you will witness the first architectural bug that is able to leak stale data without any side Channel and furthermore it's not a transient execution attack it's able to deterministically leaks stale data from sjx enclaves",
        "and also we do not even require hyper threading for the basic leakage to happen yeah and it affects like most recent Intel CPUs so the name is epic league so what is epic league so in the name we have epic like and the component so what is actually the Epic component in a modern CPU yeah so the Epic is this component in the CPU that is like responsible to like generate receiving generic might manage all the interrupts for like smaller CPUs we have a local epic for every core and like an IO epic for like external devices like you interact with the Epic with like the Epic registers that by default are memory mapped they are mapped on a like region that is a physical memory that is okay controlled by an MSR and they are all 32 bits and always aligned to 16 bytes so wait if it only have 32 bits and there was a line to 16 bytes with a lot of free spaces and actually the Epic range yes and the really important thing is that you should never ever access bytes 4 through 15 of this epic mmao region okay but why oh yeah actually Intel tells it oh if you read the Epic the inter manual you can see that any access to byte for 4 through 15 may cause undefined Behavior so wait the Intel manual says that if you access those bytes you get undefined Behavior yes or incorrect results exactly so let's try this yes so we can simply like you saw like a simple POC where we Mark the we map the AP and dump it not not so fast so we let me explain those lines let's go over the lines a little bit more slowly yeah so in the first line we can see that we map the physical address where the Epic is located into the virtual address space so we can actually read from it and then I assume this first dump Epic Base from zero that's just reading the the normal that's a valid register so you're like what you were expecting so we get zeros back but then let's continue let's continue might be like dumping the Epic so we see something so what's happening there so if we access those bytes these four to 15 bytes we get back one interrupt yeah like what is this is it in the Epic if we continue to dump it like we have data isn't it strange so if you look at this memory jump we basically generated by just reading from the Epic we can see that in the first four bytes we always get like Valley epic data but on the byte from 4 to 15 we get strings yeah that's strings and what's Happening Here we are architecturally leaking State",
        "values just by dumping the Epic mmio region so I can see that this is data because that's obviously strings one interrupt Source bending or something like that but if you take a look at this dump here uuh that's not a string so yeah okay there's no data that's instructions wait these are instructions yeah let's disassemble it like you just see it value destruction there like obviously not in the Epic but we read that so we just recovered instructions which are able to disassemble from Reading undefined epic registers exactly okay actually not on every CPUs so on most CPUs you read either zeros or refs or like sometimes even the whole CPU hangs or triple filter reboots but on Modern CPUs from Intel like 10 11th and 12th generation CPUs that's not the case okay okay okay I I see that we leaked some data I see that leaks some instructions but where the hell do we leak instructions from where does the leakage actually come from yeah so we can devise simple experiments to try to understand okay where this data came from we can like we have here a model of the CPU with like all the stages from the CPU to memory and we can start to understand and start to try to understand like where does it come from okay let's let's just systematically go over this so can we leak is the data leaking from the registers or the execution engine yeah so let's do an experiment where we only keep data in the registers all right we make simple operation with that and we don't see that data so it's not coming from register or the execution engine what about the private caches of the core so L1 or L2 yeah so like now we're talking about the memory and okay if we access a lot of memory we see leaks but if we only access a small amount of memory like that fits in the L1 or L2 cache we don't see anything okay I also see that what about the shared hash so the LSC or even the Ram or the memory subsystem in general yeah that's interesting too if we access like a lot of memory from a color then we see leaks but with the only access that memory from another code different than the work that we are looking from we don't see anything there okay so we systematically go over all these components what is what is missing what do we miss yeah it must be something in the middle it does the super queue so what's the super queue so it's really simple the super queue is this the coupling buffer between the L2 cache and the LLC it just contains like all the data that passes between the two caches like from the L2 to the LLC and back and forth so if you were like if you know like MDS attacks and all this stuff they were targeting like line field buffers is the same but line field buffers were between L1 and little cache and here we're talking about L2 cache and LLC cache okay so what we're now talking about an interconnection between the L2 and the LSC and we can leak data that's passing over this interconnection but can we actually leak all the data that's passing over those using the connections no okay first of all we are talking about undefined offsets of the Epic mmio so every time we read like the initial values of the APK mmao registers we don't see anything so we only leak three quarters of a cache line oh I can see that because one quarter of each of the 16 byte regions is actually a valid epic register so you will never leak from that because you're giving just back the defined epic value for the register yeah and then there is something more we cannot explain this but in all our experiments we always ever observed even cache lines so if we map the like the if you number the cache lines in a page from like the zeros the the first the second Etc you only leak values from the zeroth the second the first and that's it so we can leak like three quarters of even cash lines now we see we like we have this really cool attacks where we leak data from the super queue and so we can think about it as if it was like an initialized memory reads but in the CPU itself so it's not like at the software level but that's at the hardware level but we have kind of like I would say a problem here to exploit this we have to access the Epic mmio registers and the problem is that's only like something like an operating system can access that so I mean what can we attack with this so actually their Intel sgx comes to the rescue and the other thing what's interest GX so intellects is this uh environment as it is the software software guard extension that aims to give you an environment where your code on data is all protected against a privileged attacker and this also includes a malicious operating s operating system for example so with a malicious operating system we could like map the Epic mmao region and access it to leaked data that's interesting but how do they protect memory with sgx so one of the key concepts of sjx is that it transparently encrypts data that is stored in The Enclave this is done by The Enclave pagecars this is a small region in Ram where basically the data gets transparently encrypted if you write data to it okay that's interesting so we are talking about pages but isn't the like operating system that manages Pages here yes that's a really good point also in sgx the operating system is still responsible for the page management of an enclave and furthermore in each of the enclaves and sjx you have one specific page special page the store called State safe area and the idea of this page is to store register values you have to safely store them for example if an asynchronous event occurs think of life you can interrupt interrupt the idea is that you store the registers there before giving back the control flow to the operating system which is potentially malicious oh that's cool so if we target sgx enclaves we can like sample data from this Enclave like we can run the enclave and use an upper thread to like dump the Epic and then like there we can leak the values that they're using but that's that's not enough like how can we lick interesting data is there any way that we can like force the data that we want to leak to be in the Super queue and like to keep this data long enough to be able to leak those data that's a really good point and that brings us to Enclave shaking so Enclave shaking uses",
        "those two instructions which are basically responsible for taking a page out of the EPC page cache and bringing them back to main memory this is done so by using the evb instruction and just brings the data to from the encrypted page to the core re-encrypts it and then stores it into the main memory and if you can guess what the counterpart is yeah I would say that they'll do instructions then like brings the page from the like main memory and the grips it and like put it back to into the APC exactly and this gets a bit more visualized here if you see on the right side we have one page inside the sjx page cache and we can now use ewb to bring that page to the core re-encrypted and then booted out into the main memory okay this is very interesting since while we bring this page like back and forth to the CPU to the memory then we are literally making the page pass through the super queue so that we left the data that is in the page passing through our super queue that we can lick that exactly and the same happens if you take the words around the the inverse route from an encrypted page in main memory in this case is P2 we bring it to the core we decrypt it and can put it back into the EPC page cache with the ldu instruction and this passes as well through the super queue so that we can Target it and leave it but okay that's not enough we I want a cool attack we can like only control like the whole pages here I want to process precisely Target like cache lines so that we can like for example select what we want to leak with this attack yeah that's a cool idea and we also have a solution for that it's called cache line freezing and as we mentioned in the beginning This Thread model is already strong enough to we can simply sample data from the super queue but we can also use the hyper thread we don't need it but if we use the hyper thread we can enhance the leakage even further why is that think about it the hyper thread and its sibling share the super queue oh that's cool so this means that like another thread can affect what is kept in the super queue with like just like using memory yes and we also use add Fury basically that 32 bytes of zeros are",
        "never actually transmitted over the serial queue okay this is cool how does it work yeah so let's take a look at that so in this animation we have on the top left we have two Frets fret one has an address where where it tries to access a secret value from the memory thread 2 also has an address as a different address but the page offset offset address is the same and if fret one now tries to read from that address the secret is loaded into the Super queue then forward it to the private caches and finally it ends up in the read that's cool so we have the secret in the super queue now so that we can lick it yes that's basically without using hyper threading okay but what happens now is fret 2 at the same time or after the first secret access was performed accesses the different address where the access are located so the X's are then replacing that super queue entry again drawing brought back to the L1 L2 caches and forward it to the different route wait don't now we don't have any more this Security in the super we just destroyed what we wanted to leave yes we overwrote our secret so if we now use epic we get back to access so we didn't gain much there however if we now take a look at the zero case and we perform the secret axis again in fret one the data travels over the simple queue into the private caches to the read and now thread 2 accesses that address where the series are located something different happens zeros are a few reasons that the zeros are marked differently in the super queue and are actually never transmitted so we just marked the super queue entry that it contains not all zeros this is then resolved and forwarded to the private caches and ends up in the final read so this is like an optimization to avoid passing zeros through this through a cashier we actually don't know but yeah that's interesting so if you take a look now we can see that we have Frozen The Secret inside the super queue entry and what we can now do is we can use epic the undefined bytes the undefined line bytes to read that secret out of the super queue entry okay this is cool and I guess this is epically yes so every click just combines all these techniques we can use Enclave checking to make pages of targets as Jacks enclaves pass through the super queue and then freezing those cache lines that we want to leak using cache line freezing so that we can precisely Target what we want to leak basically with epic click we can like leak three quarters of every single cache line that is in an even offset and we can like do this from any sjx Enclave page that we want to Target and one of the biggest and strongest Parts is that we can do that even without the Enclave running because the encrypted Pages exist still after an enclave is idling so we can attack an enclave even though the Enclave is not running okay this is cool but what can we do with this so This brings us to our two attack setups we have in the publication there and the first one is just targeting data and code so we've seen that we can leak data and code where you're reading the Epic registers and the idea is now quite simple we start an enclave and wait until the Enclave is filled with some secret data oh okay so then we just move the page that we want to Target out of the APC okay this is good and if you remember in the beginning where we talked about sjx there was this one special page and this page is the solution how we can leak register contents so the idea there is a little bit different so we started The Enclave again but then we wait to have specific instruction and force The Enclave to store the content of its registers onto that special page oh so it's the same then we move the SSA page out freeze the cache line that we want to leak and by selecting the cache line we can then select the register that we want to leak and then like dump the Epica dump this stuff that we want to leak and then move it back exactly and as you remember they are blind spots so there's actually a few spots where we can't leak data from and this also maps to registers where we can't leak from so we have some general purpose registers where we only leak partially content but also some registers we can't leak completely okay that's interesting",
        "what is happening",
        "you know what it is it's demo time oh that's cool when you're leaking these lights from an enclave yes so let's try this",
        "so I'm trying something risky here I'm connecting I'm SSH connected to a system in our home country and I have here a few things in that folder so we can see here that there's an AES Enclave so this a is an enclave uses the as9 instruction set to perform as encryptions that's interesting so asni is a special instruction set for like x86 CPUs where the as encryption and encryption steps are implemented in arduer and this is really like resistant to like all different attacks like side channels or like also like different yes and one and one specific instruction in the ASI instruction set is the ASN key Gan assist so this instruction is used in order to generate the round keys from the root key so if you now take a look at that enclave and simply disassemble it and search for the instruction which is called vas Tegan assist we will find it at some point insert the enclave and for our attack to work we now know that at this point inside the code execution of The Enclave in the richest xmm0 will be the key for that encryption so if we stop The Enclave at that moment then the SSA page at the offset where XS X xmm0",
        "register is stored it will contain the private key that we want to leak yes so in order to perform our Tech we need two components first we need to locate the page offset at which this instruction is located so in our case it's the page 20 inside the enclave and we also need to know the at which instruction we have to stop so basically the how the end of instruction on the page I don't show you this it's the third infrastructure on the page because there's stuff in the beginning and now we simply simply edit a config so we should create a config file and we add there that we want to Target this 20th page in The sjx Enclave we want to Target the first unit of instruction inside the page and we want to leak xlm m0 so now we can like wrap the enclave and stop it precisely at the point where we want to leak the data",
        "so and if we now execute our attack program yes I want to pasteurope we can see that we directly recovered the as an I key of that encryption and you'll see how fast was that this is like showing that this is not like a Transit execution attack where you have to employ site Channel and lick the stuff that is like noisy and slow this is architectural leak so you dump it and that's it and if you know take a look at if you dump the key out of the actual source code of The Enclave we can see that the key parts from the byte 4 to 15 actually match the as Nike used in this example and you might be wondering now so we can see that the xmm0 register has this blind spot however if you think about it this is just one position in the code where we leaked already three quarters of the secret key the key travels through a lot more code in order to be at that position so we can combine multiple leakage sources in order to recover the remaining four parts as we did in the publication of someone",
        "so that brings us back to the presentation and I can skip the backup videos so I'm amazed it worked for the first time yes I'm also missed so let's talk about mitigations so we have seen that we can precisely Target and leak um secret information stored in registers we can dump Enclave pages but how can we protect against it yes this is a really powerful attack that needs to be mitigated and Intel release mitigations for that obviously and okay the first thing is to recommend to disable the Epic mmio region this is like closing literally the attack surface for that if we like look at it in like with respect to like another advisor that may map the Epic mmao region but obviously this is not enough so in in practice this mitigation will enable X2 apic that's like a newer version for epic and this is also faster so it's like highly recommended but this is not enough for like sgx enclaves where like a malicious operating system can just like not disable epic Mio and just like bypass this mitigation so Intel also released micro code patches and this patches Flash the super Q on like all the sgx transitions so that you can if you like try to move the page in and out then you will not have the data in the super queue that you want to leak yeah and as always one one suggested mitigation of the general rule of thumb basically is if you use HX you should also disable hyper threading why because if you know consider these super Q flashes and they only flush during entering exit of this HDX Enclave the hyper thread can still be running in between those Transitions and leaked data over the super queue yes exactly so for who is interested this is the timeline we discovered this attack in December and like it was embargoed until yesterday when it went public",
        "so that brings us to the conclusion so we have seen that by reading unaligned memory from the Epic we can actually leak data and code we have seen some techniques so we can extend those leakage to precisely Target cache lines inside an enclave to jump registers and even data pages so overall we say that epic league is the first architecture leak that is capable of leaking stale data from the super queue it does not require rapid trading even if we can exploit other trading to improve our attack and it affects like most recent Intel CPUs if you want to learn more about the attack you can go to epicly.com or even read our paper that will be published using in two days yes so thank you for your attention [Music]",
        "[Music]"
    ],
    "pUgyh9dlUB0": [
        "[Music]",
        "so hi everyone I'm Pietro and today",
        "Erica and I were going to present our latest work on bypass inspector how to defenses to the kernel data so first of all the sun credits to the people behind this project as you can see here it's me and Enrico and we does Mario's Herbert and Cristiano that are part of the our booster group in Amsterdam actors a lot in this project so what is this project about this project is about Spectra which is a vulnerability that affects most modern CPUs and one of the reasons why Specter was considered interesting from the beginning was that it allowed attackers to leak data even across privileged levels so for instance you could build exploits leaking data from the kernel to user space and this was completely disregard the concept of the supervisor domains so what should people vendors did when this uh Bon Appetit was discovered was to release all sorts of software and other defenses and uh for the purpose of this worker we mostly focus on the defenses trying to toward these kind of cross privilege exploits and the question we asked ourselves was do this mitigation actually work",
        "and legal spoiler no they don't quite work as intended but we're gonna get there in a bit so how do we speak this work um I'm going to start with a presentation talking about the Spectra and a bit of background on how it works and I will talk about these defenses that they released and also how to bypass them and afterwards Erika will pick it up and we'll talk about our new primitive which is a branch history injection and then it will talk about how we can exploit this and we'll give also a live demo so hopefully that's gonna go well so start with Spectrum what is Spectrum Spectra as I said it's vulnerability that affects most modern CPUs and in particular it affects specific components at the CPU which is the branch prediction unit and the best picture unit as the name suggests is simply trying to predict the execution of different branches so for instance in this case here we have an example of a conditional branch that is trying to perform a bound check for an array and what happens here is based on the value you provide of the index of the array you will figure out you will start building confidence at the BPU level to know if the branch is usually taken or not so if the if usually the x value is within the boundaries so for instance in this case if you provide zero as a value the BPU will start building confidence okay this is a valued in the boundaries so I should take this Branch same with one and two as well now what happened is if you provide a value uh outside the boundaries of this array and the BPU built enough confidence that this branch is usually taken it won't care that this really shouldn't happen it will do it anyway speculatively so specifically you can perform an autobound read now clearly this is not a big deal in the architectural domain because eventually you will figure out okay this shouldn't have happened so I will just squash this read never happen I'm going to move on to whatever I need to do when the when the result of bound but specifically you still perform the Rhythm and what happens when you combine it with another sort of a micro retraction attack like a flash reload which is a cache attacking so what you can do is for instance combine this uh Autobahn",
        "read with a dependent Auto Body reader so what we'll do is for instance if in the location 256 you have the value 3 what you can do is perform a second read based on this value on a second array which is your flashy little buffer and this value this reader will catch the value of this real buffer so that the entry of the real buffer will be cached now so afterwards what you can do is to leak a secret data you simply time the memory access of this array and eventually you will time the whole array and you figure out that the first one was the one you actually leaked and this allows you to lick these uh data that was out of bound before and this doesn't only work in the case of uh conditional branches but also in the case of in dark branches so for instance here we're going to use an example of a polymorphism to explain how indirect Branch prediction Works in this case here you have two classes a cat class and a DOT class and both of them implement the speak method and when you call the speak method from the cat cluster you would expect the function to execute the meow function and when you come from the dot class you would expect the wolf function and what happens here is that you can the BPU can also help in predicting the next section of these branches so when you call the function uh from the cat class in this case the BPU needs to figure out where to jump and to do so instead of a few you have another uh you have a table like you have a specific cache called the branch Target buffer or btdb which contains a different Target for all the possible function that you recently executed and in this case you have two options clearly for this function you have two Targets one is a meow and one wolf and if you're coming from the cat class in this case Mia will be a correct prediction so you will you will speed up the execution and move for BMS prediction which means you will execute that function speculatively revert back and then execute the mail function afterwards",
        "what's the problem with this the problem is you can exploit Spectra you can build a different variant prospector which is known as a specter V2 that attack this kind of uh in dark branches and the reason why you can exploit this is because the branch Target buffer is a shared resource across different contexts on the CPU and what an attacker can do is simply override the entries in the branch Target buffer with more interesting interesting targets like a function like League secret and leak secret would be something like we the one we discla we discussed earlier of a flashy load attack so now what happened is when the cat class will call again the speak function at this point for that uh a specific class you would expect to execute the Mia function but now you overwrote it with the leak secret function which means that you will execute the league secret function instead of the the meow function and uh and as we said this uh this works across uh different privileged levels so you can build across privilege attacks and these are this you can do it across a different application running on the same core you can do it between user and kernel and even guest and host because the CPU has no idea that there are different contexts so you can imagine this is quite scary right because this allows you to build attack across all different previous levels so what do we do next then what the CPU vendors did uh when this was discovered was a come up with all sorts of defenses and they started with the initially with the software defenses because it's faster to implement and the first one was uh known as red Pauline and rappling what simply does is uh convert all the indirect codes that like this called reacts we have here with the this is a Big Blob of instructions that the general idea behind is just trying to stop speculation altogether so instead of performing a dark jump you will convert this to this chunk of code which will not allow you to perform any speculation on this so you cannot exploit Spectra anymore on this AMD is something very similar it's called the mdright Pauline or elfense jump and this is basically the same exact concept just a very different implementation for a different micro architecture whereas Arma because of the fragmented ecosystem of different architecture they have they do very weird things depending on their different systems",
        "and in other uh both Intel normal worked",
        "on two different mitigation known as ER BRS and csv2 and this mitigation even though they're very different in implementation with us they're actually very similar in concept and the idea behind them is that you want to enforce predictor mode isolation directly in order and what do we mean by that the general idea is that we want to Target the B2B entries by security domain so the way you can visualize this is a you can simply extend the the btb with an extra column where you tag the entry with the other user or kernel contacts or guest or host or whatever and afterwards what happens is when you perform a jump from the current context for instance at this point the PPU will allow you only to speculate two Targets that belong to the kernel context then and as a result you can look at this as basically uh implement this method but in the speculative domain so here you cannot Implement any more attacks that jump back to user defined functions",
        "so the question we asked when we start with this project was is this isolation completed and the first thing we did was uh going to look at the the their manuals and this is a Dr manual for the csv2 function and in their mind already they suggest that an attacker can exploitly control speculative execution only in order to determine ways so clearly we're kind of confused when we started working on this because what does this even mean so we start looking at how we can bypass this uh mitigations",
        "and now I'm going to explain to you how we did this then and to do so I'm going to start again with our example of the cat and dog I'm going to explain a bit more about how indirect Branch prediction works on the CPU so as we said here we expect the cat class to execute the meow function and the dog class to execute the wolf function right but from the previous review side both functions come from the same method so the speaker method will need to execute both of them so here you have one single function call right so how does the BPU distinguish the two different uh contexts then and the answer is exactly this the prediction needs to depend on the context of the of the function call and what do we mean by that with context we simply mean the history of previously executed functions so for instance in this case if you're coming from the cat class you can expect that the previously executive functions or if condition will be something like a brickad class function that follows with a new cat and kitten for sword and this basically the context that allows you to distinguish which element of two is uh uh is the one you're coming from to this point you can use this context to generate the tag for the btb and here you will have a you can see that since the context is very cat related you will suppose you're supposed to speculate then to the meow function and how does this work in algor in order you can implement this uh in very different ways but uh one of the many variants that was discussed in the past is uh to use to use both the call side and the context set to compute the tag and what the they suggest is that they hash together all the different jump addresses of the the context into a shift register so you can just like squash all this information inside a single shift register and afterwards you combine this value with the actual cosight of the speak function you what you do is again like you get the value of the shift register the call side another hash function and you compute the tag now as you can see here we have our breed cat context and as a result since the context is very cap dependent you will need to speculate to the meow function so this you can see that like a digital usually depends on the context but how does it work when you perform a mode switch so a mode switch between user and the encounter space and our intuition is that the user history is necessary for accurate kernel prediction right and I'm going to use this example of a Cisco to uh to explain why this is the case so for instance in this case to perform a printf and when you perform a printf what you want to do is assist call and you want to execute a Cisco right to write out the the context at the con the the data to standard out and and what we'll do is generate attack based on uh this old history shared and",
        "this will store a new entry in the btb for a Cisco writing afterwards when you perform a different function for instance get Char at this point you want to perform a second Cisco which is Cisco read and this is supposed to store another entry in the btb right but in this case it would be for the Cisco read and the original intuition was exactly this that like if the Easter doesn't depend on the user space context it would be very difficult to understand that to which Cisco you need to jump to because the Cisco the kernel entry point is always exactly the same and you simply have a dispatcher to different Cisco handlers so this means that if this mitigation don't take into account also the history of the user space all the mispredictions would be vegetable so in our case we expect that the next time you call a printf the BPU will think okay I already seen this is a history so I need to speculators is called right and we tested this from with an attacker mindset and we thought then can we control kind of Branch prediction using only user space history so we went back to our example of the Cisco identity score right in this case with the two generic ciscals and two generic contexts so what we did was we generated the jump chain in user space that we call context a and we followed this with the Cisco that is called Cisco a and this will generate the the entry in the btb to speculate The Cisco a and afterwards we do the same for Content experiences could be so two entries in the btb for Cisco a and Cisco B and finally we just mix and match two so we would have a context a but then we follow this with Cisco B so as you can see here the history is Cisco a but then eventually you actually want to perform Cisco d and this experiment can tell you if uh if orientation was correct and indeed we tested this and uh when you perform this uh history of context a followed by Cisco B What You observe is that it speculates the Cisco a so these the speculation is based on the context and the reason is again because the people think already seen this user history so I should speculate Cisco a now this is wrong clearly because you want to speculate The Cisco d but that's not a problem because eventually you execute against Cisco B so that's no big deal and we tested this on most modern Intel arm and disappears on MD uh clearly didn't work because uh they still rely on uh software defenses like Red Bull in the completely stop speculation but on all the internet CPUs will test that we tested we could observe perfect misprediction in this experiment so let's just try to understand what this means with this experiment we basically show that the user context can be used to Mr in calendar branches even the presence of these new hardware defenses and this is our new primitive that we call Branch history injection I know Rick is going to explain to you how we can use this to build a newer exploit",
        "all yours okay thanks Pedro so as Jasper said we",
        "have a very simple primitive right now we can control the branch prediction process of the kernel from user space",
        "injecting some history but as you can imagine we are still far away from building a full exploit and to reach that point we need to answer two questions the first one is which Target we can specifically be execute and by that I mean okay we can mispredict this in that branch in the kernel but where we can speculatively execute",
        "and similarly we need to answer the opposite question okay there are many data branches in the kernel which one we can mispredict",
        "and for doing so you have to perform the reverse engineering of the branch prediction unit so the Silicon inside of the CPU and usually a first step is to have a look at the patents that you can find online however we were quite unlucky on these aspects so we didn't find anything useful",
        "so we started doing the let's say classical reverse engineering of the hardware and you can do this by simply performing some Specific Instructions some experiment and observing the performance of the CPU depending on your input of the experiment we started very well finding some nice pattern in the in the hardware but eventually we failed mainly because the other is becoming so complex that reversing them is very difficult so after two months we decided to stop this approach because it was very hard to understand the details of the branch prediction unit",
        "and we fight with these two approach what is left our good old friend good Force",
        "let's make a small step back to understand why the Brute Force approach here works so again as an attacker we only control the history okay this is the only uh let's say injection point we have and if you if you look back at the possible implementation of a branch prediction unit uh we only control the parts that are lighted in the red so the history or basically the content of the registry buffer it is this register containing a snapshot of the recent execution",
        "so what if we randomize these bits and let's see what happens to do so we can build a very simple experiment so as you can see here on the left we have a jump chain that is a simple trick for us to generate an history so you can see from the address lead Cafe we are jumping to the beef from the beef to the lukak and so on here the idea is that we are generating generating a specific history and after this we are going to an indirect Branch it will always land to Target a the idea here is to associate history a with Target a so every time the branch prediction unit will see history a it will say ha it's a good idea to jump to Target a so then we generate a random history that is history B and again this history should always jump to Target B so as you can see here our goal was to associate Target a with history a and target b with history B and if we execute these two called path in an alternate fashion we observe a Norway's code prediction from the BPO and this is expected because we are giving let's see the golden scenario to the trans prediction need to perform accurate prediction but what if we keep the left call part constant and we randomize the right one eventually what you serve was a 100 misprediction rate so in other words in",
        "the Silicon CPU uh the Press prediction prediction unit wasn't unable to distinguish history from history B so you can clearly see the values are different but since they are harsh in a single register they will collide to the same value and from the perspective of the CPU they are identical so that's why is always performing its prediction and for us as an attacker this is perfect because just by controlling history B we can accurately perform this prediction to the Target we want",
        "and let's do a small last experiment let's completely separately two called",
        "paths so we don't have any more uh single in the other Branch we have two of them and as you can see from yesterday we always jump to Target a history B Target B and here also surprisingly by randomizing the history B we even managed to find a case of speculation from the entire Branch b to Target a if you think about this is very weird because that code path never execute never jumped to Target a so this probe actually that the bench prediction unit wasn't enabled not only to distinguish history from history B but wasn't even able to distinguish the different call side and this as an attacker is an amazing primitive because now you can mispredict any other branch and speculate whenever you want is like total freedom to do whatever you want and now you may ask okay Brute Force approach easy but probably is going to be super slow right well not for not not really for us was",
        "we're very lucky it was very fast to perform the good Force approach maybe just to give you some number so you can see here this is for the Intel 10 gen if you have if you try 40 000 times you are almost sure to find this colliding history to do the misprediction if you want and we tried also many other architectures and as you can see the entropy is very small I mean the maximum was 17 bits that you can break in less than one minute and a few seconds are enough usually okay let's make a smaller recap to understand what is our primitive now so our goal is to mispredict an entire branch in the kernel and let's say this entire branch in the kernel architecturally can only jump to True Value Targets target a and target b and again we are considering system without your defenses so we can no longer speculate on user provided function",
        "as an attacker we have very limited control just the previous instruction before the Cisco instruction so we control only the history before performing the most rich from user to current space and as we demonstrated on Intel and arm CPUs you can speculated to the valid Targets in a very precise way again just by controlling the history but the best comes for intra processor where you can actually speculate whatever you want and",
        "this was quite powerful because you really enlarge your attack surface and to give you some numbers in the Intel 11 gen for example the context of the history is composed by the latest 67 taken branches and as an attacker we only need to control eight of them so we can even attack very deep nested in that branch in the kernel",
        "okay let's switch to exploitation so we have our nice primitive how can we do something interesting with it to show the main idea let's have a look and attack plan so the first step is to ensure that our Gadget or our code we want to execute in the transient domain is present in the branch Target buffer and for doing so you just need to you know execute that function code and ensure WTB is is filled with the value we want to to speculate on then later we do what we saw before simply we generate a random mystery we perform a Cisco any Cisco will be will be fine and then what happens as soon as we enter the counter space the balance prediction unit will say oh I don't know where it should jump let's have a look at the recent execution so the history from the user space will generate a tag and let's say the first time we are unlucky the tag is not the one we want no problem we are going to jump to get paid no problem we can repeat the process until we win so we ensure again the league Gadget is in the vtb we randomize the history again another attack will be computed and so on until eventually we are lucky we break the let's say the entropy and we generate this exact same",
        "btb tag and this will basically allow us to speculate on the function we wanted to",
        "okay now you may ask but why we are always talking about this Cisco table land I mean there are many data branches in the canal why we are so focused on that one well the main reason is that you can very easily execute that entire Branch any c-school will trigger it but actually the best part of it is that the the first argument of data of this is called table Handler is that is pointing to all the user space save the register so as an attacker we have a lot of control of the the memory and the register that we we we can use for finding a specter Gadget",
        "then the biggest challenge",
        "is to find a gadget so as you can imagine the kernel binary is huge so finding the few instructions we need to leave address in the cache is uh you should be able to find it uh it's a very tedious work it requires a lot of time so since we use a Brute Force approach why it's not why we should also here choose the lazy way you know so",
        "at the time where we were doing the project there was this nice feature named and privileged dbpf that International for us is a Jitter engine in the kernel that I'm privileged user can can use yeah it's a bit strange I mean you can literally com cheat code in the Canon from an employee's user so and for us this is amazing because you just need to find the correct uh BPF BPF call opcode to jit in a kernel the perfect leak Gadget directly in the kernel so this was very helpful for us",
        "but now you may ask but wait a second so the Canon developer allowed you to inject spectral Gadget in the canon in this sounds unsafe I mean for sure the proposal mitigation against this that's correct UPF is full of mitigation against Spectra but on variant one and now you'll see why so ebpf again is just a tool where you can",
        "write some it's a packet filter for incoming packets and architecturally is doing something very uh safe so whenever we receive a",
        "packet we are accessing for example the mark attribute and depending on data attribute we are accessing another array everything is inbound and even in the speculative domain",
        "there is no exploitation possible over here thanks to the variant 2 of Spectra we are no more coming from the ebpf dispatcher we are coming from the Cisco Handler so now there is no more pocket literally there is a Transit type confusion going on and we are not accessing the mark attribute but but we are referencing the register 12 so literally we are referencing arbitrary memory others in the kernel and then leaving address in the cache that later we can use to recover the liquid data",
        "and here inside is that translated confusion or basically Spectra variant two really helps you to bypass Spectrum mitigation",
        "one last missing component is that we need a precise timer to distinguish cachit or kashmirs and again our beloved",
        "friendly DPF is so kind to provide it to us uh uh so yeah we have everything to to build our exploit now and let's try a live demo",
        "so you can imagine running a micro catalog tax life is not a good idea but we are going to try anyway so here I'm connected to a machine that is vulnerable it is an Intel the engine CPU and as you can see we have a updated kernel and if you check the mitigation we can see is vulnerable because we have available the system they are aware of this attack so we start by building an eviction set to ensure that the branch prediction unit will give us a larger speculative window and after this is complete Oh wow was very fast so we are trying to find the colliding history you see zero seconds required and now we are already looking current memory so the first step is to break SLR because we need to you know read only a meaningful part of the kernel and now we already linearly sweeping the kernel memory looking for something interesting and here we decided to look for the ATC Shadow root password",
        "usually take a moment and let's see",
        "okay here we are so you can see in 30 second knife",
        "and to prove is actually the correct password as root let's print it and it matches perfectly nice",
        "okay nice first time",
        "okay let's quickly conclude with the vendor response and mitigation uh there are many fatal CPUs but uh to summarize every Intel CPU starting from the tangent is affected so any new CPU parameter is uh is affected and regarding Arma is a bit more complicated but in a nutshell every let's say CPU from the latest two years with a branch prediction unit should be affected",
        "what about the mitigation proposed proposed by the vendors so Intel proposed mainly one single",
        "defense that is to disable and privileged eppf that is this jet engine in the kernel if you think about is not an ideal solution because you are removing a nice tool for his exploitation but the bug is still there and it's not going to disappear soon they are promising also some software and Hardware mitigation that are mainly doing the same thing on a mod switch for example from user to Kernel they are clearing this Branch history buffer so that during the prediction process the user history is no more used in the prediction process and harm did exactly the same slightly different again softer and other mitigation with the goal of clearing this Branch history buffer",
        "and MD as we said from the beginning is not affected because they are still relying on a software mitigation so uh they say by keeping a software mitigation they are safe by not you know choosing a faster than Hardware mitigation well actually the same day we released our paper Intel proved that the AMD defense was broken so few months ago at the same time Intel arm and MD were still affected by specter valentio three years later the discovery of it and yeah was not that great",
        "to conclude together we saw that the attack surface of these attacks is too wide to Define it's very difficult even for us and the CPU manufacturer to guarantee you are safe against this this threat and we do believe that we need more principal defenses because even after our attack they release top Gap defenses like you know disabling a BPF yeah it's a good idea but you know the bug is still there maybe someday another research will find another Gadget and you know we are starting from zero again but to conclude on a positive note uh positive note uh during this project we really noticed or is becoming harder to build such exploit and we can make a comparison with software exploitation 20 years ago writing a buffer overflow exploit I guess was much easier today is with SLR canaries and so on you know it's becoming way harder",
        "that was a that was our talk a little dirt history here you can find our project page if you want more details with the paper and also the source code for the exploit you just saw",
        "[Music]",
        "[Music]"
    ],
    "V3a5asx9aLQ": [
        "[Music]",
        "foreign",
        "suggests we're going to discuss about fuzzing so it's a journey into phasing webassembly virtual machine so it will be mainly focus on the",
        "step the different step you need to do in order to do fuzzing when you are targeting a huge and complex Target that is in that case the web assembly virtual machine so of course we found bugs I will not discuss too much about them and even less about exploitation it's really more focused on fuzzing and I hope you will find a lot of interesting points to apply that on other targets so my name is Patrick I'm the founder and CEO of closing Labs so as the name suggests we are doing phasing and with the military research so mainly on I mean I would say different targets and the main goal for us is really to develop further custom further and also Custom Security tool so the main focus we are doing is mainly us to go and a browserver housing in general so a quick introduction to webassembly so webassembly have been introduced in 2017 officially with the MVP 1.0 it's a",
        "binary instrumentation",
        "so in binary instrumentation format instruction format but it's just not a binary format it's a binary format plus a text-based representation plus a stack",
        "based virtual machine that means a complete architecture as itself",
        "so it's natively supported by all the major browsers since quite some time now and the main goal of webassembly is basically not to replace JavaScript is to be in addition to JavaScript in order to be more fast and so on",
        "so all webassembly works basically you have two steps the first one is basically the compilation so you have your classical piece of source code and you will compile that into webassembly it will be your compilation Target so there is some tools like llvms that actually supports webassembly as a Target and script 10 bin REM and and some others so at the end you have something like that like the Fibonacci function in C C plus plus or rest and you're going to compile that into the binary files that is the webassembly module on the other part you have the runtime and host environment so your web assembly VM that will actually take as an inputer webassembly module will decode and execute the module you have",
        "the most famous One let's say is V8 that actually contain a webassembly virtual machine and you have also like wasmer and wasn't time that are actually pretty famous so the way it's work when you are providing a webassembly module it will go to multiple stage so the first one is the decoding and the passing so from this binary format the webassembly vvm will actually create an internal module representation then it will do the validation phase meaning that it will decode the module and check for particular stuff like type checking and some others then you have the instantiation basically it will create a module instance and you will create some additional stuff so you can think of memories Global tables and some others",
        "so that's basically a quick overview of the VM and the host interaction and different object so in one side on the top you have a bunch of memories a bunch of globals and tables those one are created by the host and basically this one will be shared to the web assembly instance that is at the bottom the webassem resistance is actually immutable meaning that once the webassembly module is loaded and instantiated there is no way to modify the function body the function contact the indirect function table and the execution stack it's not a classic stack I mean it's a stack for um like you just push and pop some data on it so it's kind of really Limited in that way so that's why we are telling that actually webassembly is sandboxed that's typically for this kind of reason finally once the webassembly module is ready to go you have the execution and in that case the host will maybe provide some argument to a specific function",
        "that will be exported and then it will run the webassembly module the specific byte code of webassembly and do the job",
        "so in terms of so that's just the webassembly VM and of course this webassembly VM will need a host a host environment so usually we are speaking about browsers like what I've done at the beginning but it's not the only us that is actually running webassembly VM one other case is basically blockchains",
        "that can use webassembly VM for like smart contracts in in general and there is plenty of other one for Standalone VM so that's this case so you can think of a webassembly VM that is running on the server you can think of edge Computing iot blockchain node.js",
        "that is actually running a web assembly as well over V8 and so on on the browser side you have a bunch of applications that actually really leverage on webassembly you can think of everything that is really intensive in computation like",
        "video audio image processing this kind of stuff video game and also complex web apps see like Google Earth for example to give you a quick history Google Earth",
        "before was only available on Chrome because it was using something called native clients that was like a precursor of webassembly but since they switched back they evolved into webassembly it's not possible to for you to run Google Earth and whatever web browser that support webassembly",
        "so in this talk we're gonna mainly focus on this part that means providing a web assembly module to the Target that will be the virtual machine and our final goal will be Italy to find bugs in all those different stage so that's what we're gonna do and my goal is to show you how you can basically improve your fuzzing process over time",
        "to basically reach more in the paths",
        "into the webassembly VM",
        "so the first technique I used was coverage guided fuzzing it's pretty easy the main reason for that is since the first stage is actually the decoding of a binary coverage guided phasing is actually switching pretty well so the main goal for us will be to provide a corporate so the Corpus that will be contained that will contain webassembly module basically we're going to provide that to a further the further will do the mutation meaning that it will add Randomness into the webassembly binary and then it will provide that to the webassembly vvm at the same time you were monitoring the coverage so we monitor oh deep and or interesting this sample is and based on that we will either classify that as an interesting sample if we get a crush we are keeping the crash on one side and so on so it's basically the way it works so for the input I mentioned the web does only binary format so it's not that complicated if you take a look at the structure you have one Adder that is composed of one magic number A plus a version so the magic number is a null byte Asm and then you have 11 sections that are unique and one custom section that can be in a limited amount of time",
        "so the first Target I first was basically a bunch of Standalone VM and passing libraries so mainly written in C and C plus plus the main reason for that is I was working a lot on reversing and Analysis of web assembly module so I was using those tool and I decided that it could be a good shot to actually fuss them at the same time so I Target on I Target basically been a VM webm3 and some other and even redirect2 since I was using that for reversing as well",
        "so nothing complicated I mean I will not focus too much on that that's the classical stuff if you are doing phasing coverage guided fuzzing I've used AFL on First and AFL plus Blues my favorite is actually on first but AFL plus first is definitely a good content there and after running a bunch of stuff and just",
        "basically instrumenting the target using the class the custom version the custom GCC or clang of unk's first or AFL I was able to basically make those stuff to run and already start to find some crashes so it was really easy not that complicated so that's the good part the actually most complicated part is actually include the traging because I was triggering a lot of different bugs so I report a bunch of them already and",
        "as you can see the most common bug that we actually found was out of born semester gener",
        "and so on so that was the common bugs at this stage that is in that case the parsing of the web assembly module",
        "so the first Improvement I've made in my phrasing strategy was basically to reuse the corporate between all Targets the main reason of that is since all those targets are written differently they follow the same specification but the implementation is different so there is a clear real value of reusing one",
        "corpora to another because what one tool will do in terms of the CFG and so on and the different checks it will do will might might not be the same as another one so it was the first step and then the second step was also to add all the crashes that iPhone on one sample directly into the global corpora that I was using again the main reason is it might be a crash for one program but it could be a really interesting sample for another one so there is no reason I have I'm not doing that",
        "then I decided to do in-process fuzzing so in process fuzzing is basically let's say optimized way to do fuzzing the main goal is basically you will get your further that will actually run your Target in the same process so it will be way faster and in that case you don't need to restart the process you can just for every test cases replace them in memory and provide that to to your Target and so on and so on so it's way faster the main reason I've been doing that only on reverse and python since I was already playing with CNC plus plus and finding bugs it was not worth it at the time to basically create fuzzing harnesses for for them it was already working well I mean I was happy with the result so um I decided that it was the good shot to actually Target something else and basically try some other tools so in that case I first the Standalone VM and passing Library mainly on Rust so you can think of wasmail wasam time was Ambassador and so on so this kind of web assembly runtime and Standalone VM",
        "and I also Target two other tools that I was using like piwazam that is a python interpreter and webassembly.js that is a JavaScript library for webassemian Channel",
        "so the result of that when you are doing in-process phasing on the rest you have a bunch of tools that are available the funny part is actually those tools are binding to the classical CNC plus plus tool so if you are already familiar with them it should be pretty easy for you to basically ramp up into a rest in process fuzzing so I was using cargo first on first rust and AFL West and the main part in that case is to write the phasing harness so with some log the documentation is pretty good but even in that case I mean Rusty is not that complicated to to read so you can it's pretty straightforward and most of the time the name of the function are pretty clear of what it's doing so I've made that for basically all the target I was mentioning previously so a bunch of facing RMS and then I was running the stuff so it was not that complex uh what you just need to write the phasing RNs learn a bit or to to play with the framework and you are good to go for python MGS I was using asterisk so it's a python fuzzing framework it's actually based on lip fuzzer and GS files so again you just need to write the facing RNs so you don't need to know exactly all the language work and the expert in development and reduce language you follow while the black fuzzing on this template and then you you are more or less good to go so the result of that was like 62 bucks uh mainly on Rust actually",
        "um and the type of bug I actually found was a panicking macros index out of bond unwrapping overflows and so on so just",
        "to mention um we say that rest is memory safe that's true but it doesn't mean there is no availability typically this one in the context of a CLI application it's",
        "it's not critical but if you are using that in a library on a server and you are able to trigger a panic in rest that means you are crushing the server and for blockchain software in the same way you are crushing the whole network or at least the node so that's clearly critical and that's really important to to have that in mind",
        "so the Improvement I made at this point was basically to improve my corpora I was reaching a point where actually the coverage was not evolving that much so I basically took a look at the official test Suite of webassembly and also at some existing phasing Copperas that was available on GitHub and I add that to my copies again the main goal is",
        "I maybe have won a specific binary that",
        "will actually contain a dedicated feature on webassembly that I was not aware of and it's maybe worth it to put it in place",
        "then we are going to the validation phase so I've been fuzzing a lot the decoding Parts finding a lot of bugs but",
        "then I reached the point where basically my web assembly module was correct in term of the structure the binary structure but in terms of the content there was invalid so the first step of course is to add some new fuzzing harnesses dedicated to First deuce on tripods that are the validation function and then I decide to also take",
        "a look a bit more at the validation mechanism to learn a bit more which kind of stuff was actually checked at this point so there is a bunch of stuff like the type the especially the type and the",
        "kind of op code and also interact with each other so there is a huge work on that and it's really interesting uh to to learn more from this from this stuff so photogram are best fuzzing usually we",
        "are writing a grammar and so on so I've used grammar based using in a bit different way in that case my goal since we have the webassembly text format available that is called the what I decide to grab all the what files that I was able to find and using some tool to basically convert",
        "its text format into webassembly module",
        "so that's the good part with these specifications that have been designed like that in mind at the beginning you can go from a what file to text format that is on the right easily to the binary format and so on so we can also and that's been for us for debugging and even to write some edge cases use this text format representation so it looked like that it's not that complicated you have the next s expression like to basically Define the module section and so on and then you have a linear representation that will contain the function body and the low level instruction so it's pretty easy to read to be honest I mean if you want to do reversing on that it's definitely not that complicated if you are doing a bit of reversing in terms of the MVP instruction set it was not that big the data type are pretty limited it's basically integral",
        "you have some control flow operator that's why it's a turing complete instruction set you have some memory operators to load and store from the memory some local and Global variable some arithmetic operators constant and also some conversion operators that basically allow you to switch from let's say float32 to integer 64.",
        "so when I said that actually the instruction set is not that too complicated that's why for example the for the integer 32 and the integer 64 that's basically the exact same up code it's just that is specific for one format or another so there is let's say already Alpha do stuff that are actually pretty redundant and easy to understand",
        "so by doing that I actually found some vulnerability more or less by accident because when I was converting this what file into webassembly module I was at the same time doing some phrasing because why not and actually found some bugs inside so it was mainly assertion",
        "failure and one out of bond memory error so not that interesting and especially even the tools are not supposed to be",
        "run into a server and so on so even the impact was not that interesting but I mean there's still some free bugs so why not so the strategy Improvement I've made in that case what was since I was aware of the text format and the internal structure I decided to try to write write some edge cases about that typically I mentioned there is some section and this section are unique so what is happening basically if you try to duplicate the unique one and the custom one I try to change the ordering to see if some tools are actually dependent of that and so on and so on I even create a polygrot webassembly module that is at the same time a valid HTML file and a valid webassembly module just for fun but actually at TNN sync I",
        "found any box with that but at least it was funny",
        "so it was the first step I got even more stuff in my copper that's good but it's still not enough uh I mean when I'm fuzzing in that case at this moment that's mean I will be stuck I will always go to the decoding phases and then going to the validation phases so what I decide to use is structure overpassing where basically I will",
        "directly since I have knowledge of the web assembly module structure internally I will be able to generate valid webassembly module directly from scratch inside my further so it's really good I",
        "will not lose time on in passing so it will still go in the passing phase but what I mean by that is instead of sending let's say 100 file into the process and maybe 50 of them are rejected for invalid formats in that case 100 of them will actually go through the validation phases so that was a really efficient in that way so the way I've used that is basically by leveraging on inverse what we call the arbitrary trait so you basically have already a bunch of tools that you saw in rest that actually Define a webassembly module structure so by using the arbitrary trait I'm forcing basically my further to try to fill this",
        "structure by random byte to to get something valid in the same way you have wazam Smith that is actually even better that was released a bit after I was doing that and typically this web assembly test care generator will generate web",
        "assembly modules that are always valid at the same time so I retarget all my stuff in Pro by doing in process fuzzing for the at least the rush libraries and I at the end I also Target the other one since the corpora was actually shared between each other so that's also the good part so it was not that complicated again you just need to do a bunch of rest in that case arbitrary trade can be a bit challenging but that's okay so iPhone xero newbergs directly using that but the fact is since the new stuff was generated and put directly in the copper I don't monitor exactly which new bugs",
        "what are the input file that actually triggered these bugs after mutation so I might actually I found some bugs using this technique but I don't know so at least it increased the coverage since I was filling my corpora with only valid web assembly modules that are interesting",
        "so at the end we have the instant session and the invocation and in that case I decided to use differential phasing so that could look weird because differential forzing is not something that is really common",
        "um to be honest so first of all I create some new fuzzing harnesses to actually instant set my module and then I decide to basically Implement differential refusing using some really simple scripts so the goal of differential phasing in that case is you're going to provide a web assembly module to your different targets and you can monitor the result it could be really simple like monitoring the return code or it could be more complex like like checking the exact return value so",
        "by doing that my goal is really to identify for one given webassembly module what are the result of all the different targets I have and if some of them are actually rejecting the module or validating the module and it's different than the other that means something wrong is happening so differential for me the phasing is for me to really maybe most efficient technique to find logic bugs the downside is of course you need to have multiple implementation of the same Target or maybe different version of the same Target that's usually what we have with like regression testing that's exactly what we are doing and so on so some famous differential facing protection for example crypto first and the goal is to find cryptographic vulnerability in the different implementation so it's done by Guido vancran and another one is Beacon first that is another project of mine and it was basically fuzzing at around 2.0 validation clients by doing differential fuzzing again the same goal finding logic bugs so logic bugs can look not so appealing",
        "to be honest it's always depending of the context and who are running the web assembly module typically what you will",
        "have most of the time are an implemented feature especially on webassembly so it",
        "will require you a lot of debugging and manual analysis to determine if there is no false positive so that's the downside but on the other way if we are going in the context of blockchains a logic bug like this one meaning you are providing a web assembly module as a smart contract and it will be executed and so on and the result can be different between clients that's typically the",
        "sign of a concerns juiceberg so it's really really critical I mean it's one of the most critical vulnerability you can have in production software in general so for the further nothing that complicated just a python script or batch script is enough I've used rest as well you can basically Target all the different um I mean I was targeting all the different targets I implemented because I mean I",
        "already got the all the phasing harness so it was really easy for that so it was not that complicated but yeah it needed",
        "again it requires a lot of manual analysis to to determine if yes or not you have something ability so I found two birds in wabits that is one of the most choose Library written since in",
        "that case yeah it was incorrect validation or rejection of web assembly module but what about brothers because since the beginning I'm speaking more evenly more on Standalone VM so let's talk quickly about browsers and actually the stuff that they got that is a bit more special so typically web assembly the webassembly vvm is part of the JavaScript online and so it's directly",
        "inside a spider monkey JavaScript code or V8 for the most famous one and we have multiple stuff that are actually involved the web assembly of course you have the web assembly runtime that is exactly the same that what I've shown you and then you also have the JavaScript interrupt that's mean that's all those webassembly API that allow you to communicate from JavaScript to the webassembly VM so for this one I mean there is plenty of them actually the MDM is really a good documentation for that and using those JavaScript API you are",
        "able to basically instantiate a webassembly module you can create some memory some Global some tables so all the stuff I told you that was basically shared between the um the host and the",
        "web from the instance and we are doing something like that so when you are dealing with JavaScript code in that case doing something like coverage guided fuzzing is not that easy and",
        "especially if you want to mutate your input file you will need to you need to deal with JavaScript syntax so definitely not the best so for that usually I'm using grammar based fuzzing so that's what I've done the only downside is you will need to write the grammar so it could be time consuming but I mean the webassembly apis are not that huge so that's what I've done with Dharma and tomato and do store will basically generate some sequence of webassembly JavaScript API like the one on the bottom and after that I will provide this Javascript file directly to the GSM join and it will basically create some objects and Target",
        "the extra new part of of the online that",
        "we have that is the JavaScript interrupt and also the web assembly runtime by effect I've also use a really good tool named facility for wasm it's basically firstly with some patch to add web assembly on it so that's what you have on the top right it's actually generating some really good stuff and it was working pretty well so at the end it was",
        "long but not that complex to create those grammar and it actually triggers some bugs that in that case are not public or duplicates on some other one so that's working well usually when I'm",
        "teaching browser phrasing I always invite people to actually use grammar base using for that it's also a really good way for you to learn more about your targets because you will need basically to implement all the spec on that so that's the that's the good point so that's the webassembly VM the fact is since we are running inside a browser there is what also what we call also the webassem legit enzymes so usually the",
        "classical way is let's say for JavaScript you have your JavaScript it will be passed into AST it will be converted into bytecode and it will be interpreted after some time when the code will be hot it will go through the jit and join and you will get like a optimized machine code that will be executed each time you are calling the function so the fact is they actually implement the same concept for webassembly so when you are providing a webassembly module the first time it will be interpreted so nothing fancy in that case and if we become hot it will go through the jit compilers and be",
        "optimized generate machine code and be execute it as well so for spider monkey we have like a switch here",
        "compilers JavaScript as well and for V8 we have liftoff and turbo fan that are the the one that are used so the main goal for me with in that case different shelf using against the digital design is basically to reproduce a concept and a technique that is already used for classical JavaScript that is we have a function we are",
        "calling this function with some argument we are getting a result then we force the optimization by the compilers and we are calling again the function what we opt to find is basically a difference between the interpretation and the compilation result and typically those kind of stuff lead to um incorrect optimization",
        "so that's the good part the fact is since we also have webassembly compilers we can perfectly apply the exact same technique for webassembly and in that case I will load I will generate a webassembly module that will do some operation I will load that using",
        "JavaScript I will call this function I mean call this module this module by default will be optimized by liftoff and I will force the optimization in order to",
        "make turbo fan to optimize the web",
        "assembly module and this particular function the main goal again let's say that you provide an argument to a function the goal is to find for the same argument two different results on that so that's",
        "a technique that actually is is working",
        "well it's General it's actually not that complicated to do but the downside is you need to generate valid webassembly module and especially valid web assembly module that contain interesting bytecode",
        "inside so that's what you can see on the",
        "upper right is basically the the code",
        "generated by liftoff so it's a pure assembly and then you can see on the bottom the card generated by chobofan so the way it will go from one to the other is by doing a lot of optimization on the bytecode and leveraging on a bunch of",
        "profiling data that he actually retrieve at runtime and yeah again the goal is is",
        "this one is the one on the right and the one at the bottom is actually doing the same stuff that's the goal we want to find out so for the moment nurburgs are found with that it's actually a recent stuff I've made for all the the rest of the research it was basically um taking me a bunch of months and years to",
        "do over all these process over the time and basically also adapt all my tooling to the modification in webassembly so this one is still in progress I will let you know if I'm finding any any bugs on that the the fact is I have not so there is something big research about jit and gine fuzzing and vulnerability research in like incorrect optimization and so on really a bunch of research done by Samuel from Project",
        "zero and Amy from red to system and so on but on the web assembly side I have not seen a lot of stuff actually so if someone is doing something similar please please come to to see me at the end I will be really happy to to discuss that so the final result of all this journey is basically something like 120 bugs",
        "more or less some of them I maybe just forget the final couple of size it's like 2 million web assembly modules so as I mentioned the fact that I'm storing everything between all those different tools targeting something like more than 20 30 targets it's just starting to be a really huge couple the good part is when you have something like that if there is a new tool that comes in the wild and that is actually passing webassembly binary I can just take all my corpora doing copies minimization on it and I will get something that will reach a huge part of the coverage for free so it took me around two years not full time of course I would say maybe six months full time to to do all of it uh something like 84 fuzzing RMS is more or less I actually released an open source tool a web assemblyment I'm fuzzing it's",
        "I released maybe two two years ago so it might need to be updated but it's in progress the interesting stuff we can see is that actually coverage guided fuzzing and in process fuzzing that we can consider are actually using similar technique but just one is faster than the other one is the stuff that actually find the most bugs so that's always",
        "showing that it should be a default stuff to be done by the developer because I clearly it was clearly not difficult to to implement that so there is no valid reason to for you to not put any fuzzing and coverage graduate phasing in your CI especially because you basically are fuzzing framework for all the language that exist more or less so that was nice the challenges it's",
        "it's complicated to update everything I mean all the different targets evolved and I mean I have a full-time job so um and it's not that um so that's why also the fact that there is a different web assembly features um is an issue especially for differential phasing as I mentioned because one might support it and not the other one and then you also need to adapt to multiple phrasing framework so that's actually the good part I mean it's a it's a nice excuse to basically try to first everything and um and so on so",
        "some future Next Step I'm planning actually to implement and and first like",
        "the go there is some tool some web assembly VM written and go so I'm planning to First this one as well maybe some Java one uh there'll be some implementation as well and also since uh recently the announce webassembly MVP 2.0 I'm also planning to basically update my facing analysis and maybe find some new bugs in those new features that will be added into",
        "so I hope you learn a lot and that my journey into fuzzing can help you to basically copy past this journey but just change the Target and please let me know if you are doing fuzzing and you want to discuss more about that I mean you have my Twitter and I'm pretty responsive so thank you",
        "[Applause]",
        "[Music]",
        "[Music]"
    ],
    "Ni1RqTwPiIQ": [
        "[Music]",
        "and thank you for having us here it's an honor to be at black hat um today we're really excited to discuss with you the techniques that we're observing advanced persistent threats use when they perform job-themed social engineering my name is I'm a principal for intelligence Analyst at PWC where I track apts based in the Asia Pacific region particularly in North Korea and I'm joined today by a veritable expert on iran-based for actors Allison Michael I think Savannah just called me a dinosaur so I'm Allison Wyckoff I've been in the field about 20 years my focus on the last half of my career has been on incident response and threat intelligence with a specific focus on iran-based threats and in my copious amounts of spare time I also guest lecture at Columbia University so with that I'll hand it back over to Savannah to kick us off so just to set a little bit of context I would like you to raise your hand if you've changed jobs in the past 12 months how many views okay a few now what we",
        "know is that a further one in five people is likely to change jobs over the next 12 months and you might all be familiar with the concept of the great resignation that phenomenon where in the wake of the pandemic so many people have decided that they needed to change company or maybe change career entirely and what we see as a cyber angle to the social context is that apts are taking advantage of this and increasingly using job team lures particularly North",
        "korea-based and iran-based redactors stand out for their operational Tempo and their brazenness in operating this kind of activity so what we want to do today is take you through a few case studies of threat actors that are doing this and their tools techniques procedures so that you can learn to recognize these attempts and maybe your blue team or your red team might pick up a couple tips and tricks throughout this presentation so we're going to start talking about a threat actor that PWC tracks internally as black Artemis this is a product that is known in open source as hidden Cobra which is how the US government refers to it and Lazarus group I should caveat that Lazarus cook is a bit of a broad designation there's a lot of activity that gets attributed to Lazarus that's not surprised this is a threat actor that has been active since at least 2007 and has changed a lot since then but for the purposes of this presentation I want to discuss with you a specific campaign by black Artemis which is known as operation dream job more broadly this is an Espionage motivated campaign that is incredibly persistent in targeting the Aerospace sector the defense industrial based manufacturing chemical sector for everything for military secrets to",
        "intellectual property to confidential",
        "information of strategic interest so let's take a little bit of a look at how black car thing is approaches its initial access like social engineering I am very sad to report that email phishing is not that I you know I wish it was dead we all wish it was that it's not so black Artemis does continue to send emails with malicious attachments to its targets past couple years we've observed black Artemis also people over to social engineering of social media particularly LinkedIn by building recruiter personas and directly approaching targets so what we see right there on screen is an image that ESET actually shared in one of the reports in this campaign where we see the threat actor trying to approach a victim and if I may in a very unprofessional manner for an alleged recruiter being like hey you know how are you what are you doing now my parents aren't home do you want a new dream job which is kind of like you know a bit strange and the victim is like oh you know I'm working I can't talk to right now and the third actor is like no do you want to work for our company question mark question mark which is a bit aggressive I'd be like okay maybe something's off but no what black Artemis also does is it will follow up with its targets via messaging apps such",
        "as WhatsApp to make sure that the victims do open the malicious viewer documents or the malicious executables that the traductor has sent black Artemis will also set up domains these can be for command and control of its malicious implants to send emails that appear to come from a legit site or indeed to perform web exploitation as an initial access method so let's take a look at that now black Artemis has set up a domain like this which if you look at it it kind of looks like indeed right very prominent job search and applications website but if you look at the Domain it's not indeed.com which is the legitimate site it's indeed us.org",
        "free good fake wood for me at a first glance and the third actor would post here fake job descriptions for positions at Google or Oracle so really high profile companies and when the victim navigated to these links in the third doctor sent unbeknownst to them their browser would get exploited with a zero day at the time which is a remote code execution vulnerability in Google Chrome so they would be compromised and be delivered like a back door without knowing now we live in an economy's information we are constantly bombarded with everything digital and so it's not practical to tell people don't click links don't open attachments like seriously we all have to do that but there is a little piece of user awareness um that leads to prevention here because just taking one second to check out whether that domain that you have been sent is the legitimate one could prevent compromise so sometimes even just a double check matters let's take a look at an intrusion chain instead using lure documents which is what we're all here for because we love them so in the first instance black Artemis will build a fake job specification for some fabulous job at a high profile company and it will send it to the victim which you know at some point might enable macros as this happens the victim will be presented with a doc RTF docx document but what happens in the meantime is that the macros are leading us to the next stage of the intrusion they might for example in one case that we've observed drop a base64 encoded payload in a folder that the victim is not likely to look into in this case it was C drivers and then this reductor will make sure that certificate.exe is dropped to that same folder and renamed surgery listen used",
        "to run and decode The space64 Blob and",
        "the renaming is interesting by the way because it means that that Defender that is doing forensics won't necessarily know that search YouTube was used this leave us with a loader executable which is then going to connect to a further remote server and pull out the actual payload which is going to be a fully featured backdoor you know pull down for their file execute commands uploads files and the product is going to ensure that the loader also establishes persistence on the bikini machine so that even after machine reboot this redactor has access and this is done by in most cases that we've observed by black Artemis through running round yellow32.exe pointing at the final stage payload through a scheduled task let's take a moment so let's say that your email filtering solution unfortunately got fooled this time but this kind of phishing email let's say that your user got compromised but that's okay because initial access is just that initial access there is a whole kill chain that the product has to go through before you're fully compromised and you can stop that so an example of a detection opportunity here would be monitoring your environment for one year l32.exe running as a scheduled task and pointing at an unusual like file path that should not be normal in your environment so you can monitor for that to have an idea that something malicious going on let's look at the lure documents this is what they look like so they have that little you know enable content because this document is protected now the aesthetic of these lure documents might change but what helps us as Defenders is the metadata so in some of these cases we saw that a lot of newer documents built by black Artemis had this Mickey author metadata many of",
        "them had markers that would convert uuids into 32-bit or 64-bit chocolate payloads maybe they were doing specific",
        "Windows API aliasing some variable",
        "definitions custom message boxes this is all the kind of things that we can find in macros that can help us as Defenders hunt for more of that activity and even detect it when it's on our Network actually I should mention here that all indicators of compromise for activity related to this talk are going to be on our public GitHub which is in the reference to this talk when the slides are published tomorrow so you can all go you know look at those files and build your own detections",
        "so far we've talked about a North korea-based redactor that performs Espionage motivated operations and now I",
        "want to talk as a different case study about another North korea-based redactor that instead is financially motivated this is a product that at plbc we track internally as black alicanto and who is very specifically focused on cryptocurrency you're gonna tell me you know okay fine crypto is all the rage recently but why is a North korea-based reactor interested in it well I've got you so since at least 2017 North korea-based reductors have been known to consistently Target cryptocurrency exchanges compromise them to steal money",
        "so much so that in 2021 the usdoj indicted three North Korean Nationals for their role in targeting Western Banks and cryptocurrency companies for the purposes of Revenue generation actually just a couple months ago North korea-based reductors were attributed to the compromise of this web 3.0 company axi infinity and they made off with 625 million US dollars yes last week I",
        "got tagged in a Twitter thread because I probably published like a lot about black alicanto about this Daffy company that was said that they got compromised using the same ttps that I was talking about black alicanto like two weeks earlier which are the same ttps that we're gonna see now so this is actively going on and it's targeting and it is in the finance and cryptocurrency space so watch out",
        "open source as dangerous password cryptocore crypto mimic so quite a few names and as we said it's financially motivated in terms of the social engineering that black alicanto might conduct email again but this director like system compressed archives with link files or",
        "other type of documents maybe a password protected Word document and then a link file this is also in keeping with a shift that we're seeing the broader threat landscape where with Microsoft disabling internet macros productors are having to Pivot a bit in their initial access techniques and using more and more link files ISO files MSI installers and stuff like that black alicanto also abuses enough rewarding so in mind for word it targets an email while impersonating an acquaintance of theirs so that the victim goes like Oh look this person that I know shared me um forwarded me this analysis of stable coins that's really interesting let me have a look but but actually they're getting compromised La calicanto also does social media approaches pretending to be a recruiter maybe it entices the victim into asking more about their company black alicanto does also do means proofing we see here gsox hr.com which is a Goldman Sachs proof or daiwains.com investment is a Japanese Venture Capital company there is a hunting opportunity that I think is really fun and I've really enjoyed using to find more black alicant infrastructure which is this thread actor loves to register domains through pork bun registrar and if you look at the underlying servers that these domains resolve to they all have very specific combinations of Apache PHP and openssl versions in the server headers",
        "so you can go and build that query and find more infrastructure all of that information is meant to be in the iuc's on our GitHub so again you can go and hunt for more in terms of an intrusion chain we've said that this reactor will send an email and then maybe there is like a DOT pdf.link or a dot doc dot link so you know the victim thinks this is this is fine this is just a normal document when they click on it they might just be presented with a decoy document so they're like oh this you know this analysis of the crypto Market is so fascinating but in the background the lnk file is actually calling mshta.exe",
        "which is connecting to a remote server to pull down a malicious JavaScript script that we call cabbage loader what cover Twitter does in the first instance is to place a link file in the victim startup folder to ensure persistence and then pulls down a whole series of other JavaScript payloads these are called a whole series of them cabbage rot and they've been described in great detail by entity Security in a conference talk at virus bullet in 2020 they brought a whole report about it so please do check it out if you're interested in this these are essentially profilers they want to make sure that the actual person that's interacting with them is not a Sandbox it's not a researcher but it's actually a target of interest and at this point the threadactyl manually deploys further JavaScript payload cab address C which is a fully featured backdoor you know uploads download files execute commands All That Jazz and from there the product can then move it laterally across the network other detection opportunity are you monitoring your environment for like link files that cool mshk exe and then you know pull down and execute a file from a remote source if that's common in your environment that's kind of weird if it's not make sure that you're looking for this this is not only specific to this redactor a lot of reductors use these ttps so it's a good thing to keep an eye out for you know if you'll pass me the phone the the pawn it's a bit like something fish is going on so you don't want that this is what a black alicanto job simulator document might look like so this is an interesting one because you can see that the product is saying this is a position for blockchain intelligence group but then it says welcome when you work for Commerce real Ag and then the picture is Chase back so like if you want to spoofer company at least decide which one you don't need to give me three all at once and talking about the metadata that we can use to detect this kind of activity and this is your documents well actually link files have these really interesting field which is called the machine ID so unless the third actor has scrubbed it out you can use the machine ID metadata to Cluster all the documents that these reactor is building pivot to hunt for more or detect them on your network and all those heuristics we talked about so like the double extension files the link file invoking a command or calling mshta all of that is really interesting we have IR role on our GitHub to detect stuff like this I wanted to highlight these documents as well because just a few months before black alicanto was using this we had seen black Artemis product or we mentioned before using a very similar one so you can see that both of them have the same structure they say welcome when you work for Blah Blah by engineering the future well-being of humanity you'll do XYZ this tax is taken word for word from the Lockheed Martin careers website what do you know like Artemis was proofing Lockheed Martin but then black alicanto has taken all of that and put it for blockchain intelligence group or whatever so you know in all these resignation has a North korea-based operator move teams it's a really interesting question it's one that I'm working on in terms of like attribution and in clarifying the relationship between black alicanto and black Artemis if you track these reluctors and you want to have a conversation about it I'm only years you can catch us later and we can have a chat and otherwise I'll get back to you finally I could not not mention",
        "um something that came up a few months ago so the US Department of the treasury released an advisory saying that North",
        "Korean I.T workers are seeking jobs abroad often under fake identities",
        "um maybe through proxy companies or proxy identities in third countries and",
        "this is in order to you know make money they might work as application web developers digital coin Developers",
        "and there's a human rights angle here which is that these I.T workers often are in a forced labor situation and what the advisor also said is that their wages get taken away to finance the North Korean regime not only if these North Korean I.T workers get access to a company of Interest they might actually hand off that access to North korea-based apts that then might exfiltrate you know your crown jewels or your information of Interest so on one hand we know that the U.N security Council has said that all of the funds the North Korea workers and North korea-based apt generate go to fund the North Korean nuclear weapons program and on the other you know think about it if you're a company and you run the risk of hiring a North Korean I.T worker on what have you risked reaching International sanctions and on the other you risk a North korea-based apt than being in your network you don't want that so I I guess one of my key takeaways here is the job market right now is a really key area for North korea-based productors so keep your eyes peeled make sure you're aware of who you're interviewing and For the Love of All That is Holy don't open those links that you get sent on LinkedIn do not open them on that note I'm gonna hand off to Allison thanks forever all right so let's move forward and talk a little about some of the recruiting that we're seeing uh in the Middle East and by recruiting I mean recruiting",
        "um before before we get into that let's talk a little bit though about some of the threat actors that really love a recruiting theme in terms of iran-based threat actors because there's not just one so first up we have a group that PWC calls yellow Garuda they're probably more commonly known as Charming kitten and open sources this is a really active group we're not going to be talking about them today",
        "um but uh some of the recruiting type things they do is they specifically Target journalists uh and other very specific people of Interest with job opportunities whether it be conferences or specific jobs themselves uh then we've got a group that we call yellow light Arc they're more commonly known as tortoise shell and open sources and this group has set up fake recruiting companies equipped with personas on social media platforms specifically uh targeting U.S veterans",
        "so several years ago they created a fake recruiting company that was specifically specifically geared towards hiring veterans foreign",
        "that we call Yellow marrow and this group has been active for many many years they're more commonly known as apt-34 oil rig or Cobalt Gypsy in open sources like uh yellow lighter they do run a lot of personas or have run a lot of personas on various social media platforms again purporting to be recruiters from valid and fake companies but we're not talking about any of these folks today we're talking about a group that we call Yellow Dev 13. and again for people who are in the room and do iran-based research I do realize this is not an exhaustive list this is just highlights okay so who is yellowdev13",
        "um there has been a little bit of Open Source reporting on them so there was a report that came out from meta I believe it was their q1 or maybe Q2 report that came out in April of this year that talked a little bit about some takedown activity that they did for some of the personas that this group was running there was also some work done by Microsoft to take down um some brand infringement type work that this group was doing and that was reported under uh the nomenclature borium this group does overlap with some reporting under Imperial kitten for those who subscribe um to that flavor of threat and tell but they've been active for a fair amount of time in the grand scheme of things so they've been around since about 2019 we believe that their Espionage Focus we haven't seen any indications that they've been performing other types of operations and again in terms of their targeting it's pretty run-of-the-mill for iran-based operators so we're seeing uh in terms of targeted regions the US UK Canada obviously places in the Middle",
        "East like Israel Saudi Arabia and then some targeting in Russia and India as well and then the sectors that they were targeting again with the with their particular operations pretty run-of-the-mill in terms of iran-based Espionage operations energy technology",
        "Transportation semiconductor and then we also saw some Logistics uh and Maritime targeting as well",
        "but um what we're really here to talk about with them today is a lot of the fake stuff that they use so this group really likes fake stuff and that is a technical term and you can quote me on that if you want um so they have done a Litany of fake things um we are going to focus on the HR themed aspect of that but I did want to cover just the broader operations in terms of all the fake stuff that they've created so they've created a lot of spoofed companies again geared towards those targeted verticals and regions that we were talking about they've also created spoofed legitimate recruiting companies both broad ones and very specific ones in terms of the types of folks that they were targeting but more interestingly they have set up a couple of fake recruiting companies one's called apply talents and that was set up first and the other is called or was called careers finders and along the lines of these organizations they also have set up some personas associated with them now in the past with some of the groups that we mentioned that do have done uh Persona based social engineering we've seen those groups use uh pictures of real people in the case of yellow Dev 13 we've actually think that they're using AI generated images and we'll look at some of those later but in terms of hunting for this activity on your network as of earlier this week the apply Talent site was still active so if you are concerned about these threat actors potentially being targeting your employees or being on your network I would take a retrospective look in my network for these two domains that we've put on the slides and again this will be available after the talk okay so you might be wondering why yellow Dev 13 doesn't have a beautiful mythical creature uh name as opposed to some of the other groups that we talked about and that's because we didn't have a full intrusion chain uh for this particular group so they're not a group that we're comfortable uh bumping into some of our existing groups or breaking out into its own group so a little bit a little backstory there but we do have a fairly good idea of how they're using apply talents in terms of their operations um so this like a lot of these starts on social media we think so we're not sure exactly how they are delivering the links to their particular victims but it could be a myriad of ways we know they run social we know they run profiles on LinkedIn and they also run them on some other social media platforms but what we did see was that links were delivered to people um that would encourage them to download a zip file from the apply talents website",
        "and if the victim opens that it launches something called online interview.exe and we're like cool here's the malware um and when we started doing analysis of the malware itself it actually wasn't malware it was just an exe and something funny happened with this and we will look at it momentarily but the online interview.exe actually prompts the user for credentials and this isn't a credential stealing operation we actually think that yellow Dev 13 supplies the credentials to the victim and there's a couple reasons for that one it evades uh detection for sandboxing uh this particular exe and two it keeps people like Sven and I uh the ability to to fully understand the full intrusion chain so we think what happens is yellow Dev 13 authenticates the uh the victim and then there is some payload that's that's dropped that will essentially take things off the targeted Network uh and again if you're concerned about this check for apply talents on um on your network but let's take a look at online interview.exe because it's sort of fun uh so this is what the interface looks like um I didn't squeeze or pull the image at all this is it uh I love that people enjoyed it as much as I did I was so pumped when I saw this um there is hashes available on public sandboxes if you want to take a look at it yourself um for me I looked at this and like what's the first thing everyone wants to click right I know what it is like I want to talk to somebody live so we obviously we looked at that nothing fun happened unfortunately but I do want you to know like it wasn't just like there you could actually click on and it pops up a chat panel we didn't we didn't get anywhere with this um so up next we kind of went through the whole interview guide or Duty uh if you enjoy the misspelling there um and again we were trying to navigate through to kind of figure out what the end goal was with online interview.exe the the feedback from uh our team as we were looking at this is wow this is homemade um so here's the prompt that we got with the credentials and this is about as far as we got we did try to click around some more and we got a couple error messages uh like this one so one of the things I failed to mention thank you that's that was our reaction too one of the things that I failed to mention is apply talents and careers finders both purported to be UK based recruiting companies so one would assume um that uh either there would be some QA process with this online interview Tool uh perhaps by uh somebody who would be",
        "probably a native English speaker so have not passed your technical Test please pass it first there's a lot going on there we're not going to go there but yeah we really we really enjoyed looking at this okay so let's let's switch gears a little bit and look at some of the illustrious team behind um this awesome tool um and I pulled a quote from the careers finders website then I'm just going to read because again we love this this is a direct quote we'll help you find a job that fulfill your desires uk-based",
        "company so we would yeah I enjoyed it too a lot a little too much I put it on the slides right okay so I mentioned that the this uh yellow Dev 13 runs a handful uh of personas associated with their operations um and what we have seen with this group is most of the images um were uh were likely AI generated in the case of Abigail Walker uh we think it was a real woman whose images were being used hence being blanked out because they changed the profile image over time uh Abigail Walker is not a real person though and one of the things I absolutely love about these personas particularly the ones on LinkedIn is if you actually look at them they make no sense whatsoever so Abigail Walker is a human resources information systems consultant according to a job title um but if you look at her bio she's a recruiter or a staffing expert that doesn't make any sense uh the other thing that we always look at when we're looking at these profiles is how many connections they have that gives us an indication of how successful they might have been with some of their social engineering operations so in this case Abigail 265 connection and still a little scary all right then we've got Brian Claire um and I'm not going to point out the specifics of these AI generated images where we think that they are fake but I will give you guys some Clues when you start looking at these uh backgrounds ears eyes glasses jewelry hair like some",
        "of those are major towels with the AI generated images um so Brian Brian um Brian's great Brian's profile is great too this is another just profile that makes absolutely no sense so linkedin's a professional Network we would assume that people are on there for professional reasons um we think Brian was probably purporting to be a recruiter even though his job title suggests otherwise and if you want to get in touch with Brian here's this really sketchy Gmail account that you can email doesn't make any sense he had a lot of connections though which is a little concerning and uh his profile was active for a fair amount of time it is no longer okay so let's meet the team as they purport to be on the actual websites",
        "themselves so this is literally a screen grab from the apply talents website and the careers finders website nothing's modified here grainy image and all um and again both of these um apply talents was created first and careers finder was created shortly thereafter back in uh 2019.",
        "so at first we've got the apply talents Team Edward miles Scarlett Grant James Sharp and don't worry I'm going to show the pictures a little bit more closely so we can enjoy what these actually look like and then we've got",
        "Edward miles Scarlett Grant",
        "and James Sharp of careers finder same",
        "names same order completely different",
        "people uh the other thing that was similar on these websites is they had the same UK based phone number all right so let's have a little fun and drill in specifically to some of these images just so everyone can get a look remember what I told you about looking at AI generated people so we've got Edward miles of Applied talents and then Edward miles of careers finder",
        "now apply talents was created first I think they clearly used a different AI generated and I would say better uh Imaging uh software or whatever they decided to use for their personas for careers finder",
        "some of these are pretty good some of these are pretty bad uh here's Scarlett Grant of apply talents and careers finder remember what I told you backgrounds",
        "sometimes the eyes the ears hopefully people can see a couple funny things with this one",
        "all right we've got James Sharp of Applied talents and careers finder",
        "I actually think James of careers finder is pretty good you're going to see a watermark on the image that's from us pulling the image from a VM uh not from the image itself",
        "I hope everyone has fun looking at these okay so these are the fake people of um the two recruiting companies I have a couple more that were associated with yellow Dev 13 operations but uh not necessarily the recruiting companies but I think they're interesting examples if you want to look at some more AI generated humans",
        "hopefully people notice some things that are like yeah that doesn't pass the sniff test",
        "great okay so let's let's round things out in keeping with the the HR theme uh and recruitment theme of this talk um when we think about what we talked about today from a network Defender uh blue team red team perspective um you know we can really kind of again continue this theme of HR recruitment when we look at the ttps of the threat actors particularly the ones we talked about today this is really their CV their skill set their resume like these are all the things we can do and how good we're at we are at it and then we've got the targeting itself so um that gives us the motivations uh gives us an idea of like what they're out to do uh we have threat actors that are Espionage focused and threat actors that are financially focused that we talked about today and then finally in the case of these three groups that we've talked about they literally build networks of people to help perform their operations which is really really interesting",
        "but finally let's like take these takeaways up uh just a notch um you know threat actors are capitalizing on the great resignation so yellow Dev 13 is a great example yes they were active since 2019 but what we saw over the course of the last three years is they updated their site particularly apply talents to kind of roll with the climate in terms of hiring so right now the site has a lot of covid-19 themed uh Pages it's also got a whole page for how to hold page on uh remote work so threat actors are paying attention to what's uh what's happening and pivoting accordingly uh 2. social",
        "engineering still works I know we're super tired of talking about it but we're seeing it evolve so again like with the personas that we're seeing use and the way that threat actors are approaching uh our employees they're reaching out on on WhatsApp on LinkedIn uh on on other mediums they're using AI generated images to make their personas look more legitimate we're going to continue to see an evolution uh not just in how they approach but how they deliver so Microsoft did uh disable internet macros on things going forward that's awesome we're going to see threat actor shift in terms of how they deliver malware though in these fishing exercises and and then finally um you know how do we defend against this sort of stuff when we don't own our employees social media profile so as we saw um you know these people are or the threat actors are reaching out to people on things that we just don't control and and I kind of challenge the people in this room to think about your organizational security culture well are your employees empowered or do you have a culture where they can come to you and say hey I think I've been fished by a fake recruiter I mean I I personally don't know many many employees who'd be comfortable going and saying hey I'm looking for another job and I think I got socially engineered",
        "all right so with that I think we have about three minutes for for talks or we can kind of move to the the speaker Breakaway room we do have um a GitHub page that we have published this morning did we do it right before the talk we did it today that has all of the indicators that we talked about today and again the slides will be available uh tomorrow morning yep the GitHub link will also be in the reference lights when they're published more so no prepped on that",
        "[Music]",
        "[Music]"
    ],
    "JUfWaT6EyXk": [
        "[Music]",
        "so welcome to Stellaris rpga downgrade",
        "attack I'm Philippe eitner and basically this is a is a paper and we also have co-authors um Thomas doninker Haya and Mikhail who aren't here and so I'm the only presenter but they should be mentioned because I I didn't do this a lot right um so I want to shortly present our team I said we are a team of five people I personally and Philip yidner has that network security researcher I just finished my PhD at uh and yeah I'm I'm",
        "working on and I also did my PhD at the Athena National Research Center which cooperates with the throne over site Institute",
        "and we are the cyber security and analytics and defenses Department we mostly do network security and we focus on routing and DNS security and so this talk is about routing security obviously and so let's start with it um first we want to look at the outlines so what I want to present we will look at bgp and bgp security then I will present you the resource public key infrastructure short rpgi because I think not everyone knows how it works and what it is and then I want to present you our downgrade attack against it obviously that's the title and finally we look at the feasibility of this attack and also some mitigations what can you do against it right um so first let's look at bgp bgp is the Border Gateway protocol and it basically forms the routing system of the internet and really basically you have networks which are called autonomous systems because our EGP looks at them from nodes and so everything which happens inside the network bgp doesn't care for",
        "um but those networks announced the IP prefixes they have they contain their own to the neighbors and then the neighbors essentially forward these announcements to to other networks and finally everyone should know how to send traffic so essentially like energy example you have some networks one network sends an announcement to another Network and that Network forwards it and puts itself into the path so everyone knows if I send traffic to that Network the network will send it to somewhere else and then it should reach its Target at some point",
        "um right so the problem with pgp essentially is it's an old internet system as any old internet system it doesn't really contain any security features because back then you didn't really need security but essentially",
        "from like just the bgp perspective what you can do is you can announce a prefix you do not own basically get into a man in the middle position and profit from that the most known hijack was probably the my other wallet hijack where there were attackers which hijacked the Amazon Route 53 service which hosted the DNS servers for the my other wallet.com the domain and what the attackers did they hijacked the domain and put the phishing side on this page and basically got account access to all those um cryptocurrency wallets and stole a lot of cryptocurrency um so right",
        "um to fix that the bgp security problem um the ietf introduced rpki which is the resource public key infrastructure as the name suggests it's a public key infrastructure for internet resources and it's a systematic approach to bgp security where a bit like TLS you have certificates and those certificates map address blocks to asm's autonomous system numbers and those certificates are called root origin authorizations and then Roa is essentially contains the data displayed on the right it's not Json it's actually a NYX 509 certificate but it contains essentially the data on the right so you have an as you have a prefix and essentially the certificate says that only this as is allowed to announce this prefix and the rule of thrust for these this public key infrastructure are the rarers the resource um Regional internet registries and basically that makes sense because the rars allocate address blocks so basically if you if the RL says you own an address block then you own an address block and if you think about it from a tiles perspective because you are not even not that into in the routing or bgp you could think of it like getting your TLS certificate from the registry so instead of going to a CA and asking them okay I want a certificate it's like when you register the domain you just get the certificate with it that's kind of how it works um right and so now we assume that everyone has our race for their networks and their prefixes which obviously it's not the case because it's a new system and only a third of the internet actually uses it but we assume everyone has it and right um then we have certificates but certificates are only worth anything if you actually validate them right and if you want to think about how to validate a certificate um there's like a naive way or an obvious way which would mean that basically you put the certificate right to the information which is authorized by the certificate that's like TLS does it um however in bgp that's a bit complicated because you can't really do it it would mean that all the routers would need to verify all the certificates which typically they don't have the processing resources for and also it would basically blow up the size of pgp announcements because currently an announcement is pretty small but if you put like 1500 bytes of certificate next to it it gets a lot larger and so it really inflates the traffic um so what the ietf standardized instead is the rpgi system which is a third-party system to bgp and it basically works with two basic components there are repositories which are called application points and you can think of them as essentially like an FTP so we're full of certificates and then there are relaying parties and those relaying parties are basically download all the certificates from the publication points and then they validate all the certificates and generate a list of valid arrays and then they just generate a list and push that list to the routers and the routers doesn't have to do any crypto cryptography just take the list and have a filter list essentially so that's rpki and it actually works so",
        "this year there actually wasn't hijacked by Russian Telecom where they seemingly hijacked the Twitter prefix probably because of censorship and this hijack was actually prevented by rpki Arrow validation which",
        "means that the hijack basically didn't really affect other networks yeah except Russian Telecom obviously",
        "um right so assuming lpki works now we as an",
        "attacker are like a security researcher we want to attack it right and if you think about how to attack our PTI you essentially have different options the most obvious one is to attack the Integrity of the system so the most obvious attack would be to create a malicious ra for that you have to break the crypto and breaking crypto is hard so we don't want to do that um the second way would be to try to fool a CA that's kind of how you attack TLS you can try to fool this a into giving your certificate by for example attacking domain validation and that's the problem because in rpki the ca is the RAR and the IR has first-hand knowledge about who owns a network block not like in TLS where the ca doesn't really know if you own a domain they can just see if if you have control over it in rpgi the certificate is generated by the a person who basically gives you the resource so it's hard to fool them because they have firsthand knowledge um and finally obviously because rpki is a third hand system we cannot take its availability and so essentially the idea is that you have bgp which the routers talk to each other and you have rpgi and if you attack rpki and it stops working then you still have the bgp routers and the bgps routers still have to do decisions but they don't have security information to base it on and so that's how this attack starts and",
        "some basic also to start with",
        "um basically you have to know that rpgi is built for In-Place deployment as any internet system so you have to re hand have to handle cases where basically the as which you get an announcement for it doesn't use RPG is how it's like this for like 60 of the internet so this is very important",
        "um in practice what happens is that essentially if there are no arrays you assume that the network hasn't deployed rpgi yet and so essentially there is no validation happening which means you accept any bgp announcement at least from the applic side of things there might be other bgp filters but we don't consider that",
        "um right and so now the problem is that relaying parties cannot really differentiate between erroneous failures by downloading all these certificates and attacks which attack the connection and so that's because that's the reason why you can't download the certificate and what race what happens if they can't download the certificates is essentially they will use our data unless it's valid and after it expires it's assumed that there are no arrays more and disabled rpki protection",
        "and so this forms our attack plan so what we want to do is we want to break communication between the relaying party and the publication point then the relaying party can't fetch information it basically turns off rpgi and then we can start our bgp hijack",
        "um right so that's the basic plan now to make it work we have to figure out some details and the first detail is how does three-laying parties work and what happens if they can't update things so um the first thing to know is that I said RPG or our relaying part is casual data until it expires however our A's our certificates and they expire pretty slowly we measure that we basically fetched all the arrays and we found that most of them have a validity of one year so we can't really block communication for one year that's not a practical attack however there's something called a manifest file and manifest files you can essentially think of as a signed index of valid arrays so",
        "basically manifest files are designed to prevent replay attacks so assume you have an array which is valid for one year but now you sell the prefix to someone else then the array is still valid you could revoke it but there's not really a good system for a location either so what happens is that essentially you remove it from the Manifest and by that it essentially becomes invalid because it's not reference anymore and this prevents the replay attack because then now you can't really use the array anymore [Music] um that's a valid mechanism however it means that because these manifest files have a short expiry time we can essentially use them to basically expire",
        "an RA because of the Manifest file which references the array times out the reference our way will also time out and manifest files have a short expiry time typically one day and so you only have to make the blocking communication attack one day and effectively actually because of how",
        "those manifest files are generated you only have to do it for six hours because what so the publication Point software which everyone uses it's called kill and what the software does is essentially it only regenerates a manifest file if it has six hours or less of validity left and so what you can do as an attacker you can wait for this six hours to start essentially and start your attack just right before so you only have to do it for six hours instead of one day",
        "right so we now know that we essentially have to break communication for six hours between a relaying party and the publication point and now we have to figure out how how we do it right you obviously could do a denial service attack but denial of service is pretty noisy and there's a chance that it would get noticed during the six hours and if they block your denial of service attack then essentially you you don't achieve anything because you have to actually block it for straight six hours otherwise the relaying party updates and nothing's gained so what we do instead is a low rate attack especially we explored rate limiting on the publication point or the name server which serves the domain and so rate limiting is a mechanism which is designed to prevent denial of service the basic idea is you have a rate limit which is for example a thousand packets per second per IP address of her IP address subnet and anything which is above that number will just get thrown into the trash bin essentially so if there's a rate limit of thousand packets and you get 2 000 requests for example you just serve the first thousand and then you wait until the bucket is refreshed and then you do the same again and what you can do as an attacker you can essentially exploit this mechanism to block communication from a known source because what you can do is you send basically spoofed requests either spoof DNS requests that's easy because it's UDP or you can also spoof TCP Sun packets some firewalls to also read limiting rate limiting for TCP certain packets and what this will do is it essentially blocks the victim because you as an attacker reach the rate limit and then the victim won't get an answer anymore and after six hours the idea is that because the victim can't communicate with the publication point the Manifest times out so how often is rate limiting used in rpgi right because if you want to exploit it it has to be present and we measured this essentially in the real publication points currently there aren't that many they're like the big publication funds which are operated by all the IRS and you can also own your um or operate your own publication point we will get to that later um but anyway we basically measured if they do DC TNS request rate limiting or if they do TCP soon request rate limiting and our results are that roughly half of the publication publication points do that with a limit lower than 10 000 packets per second and we didn't test it higher because we didn't really affect the service and they host roughly 60 of the rpke protected ipv4 space so basically the publication points which do rate",
        "and very low we Define under 60 packets per second not because 60 packets is a important number because that's the biggest number we would consider low so I think the next biggest one would be like 800. um which we measured and so now to basically think about",
        "feasibility we would say okay so 60 of",
        "the rpki protected a piece four space is does rate limiting or the publication points do rate limiting so it is vulnerable to the attack in a sense um this is kind of true however you have to think about an example so consider an example where you have a rate limit of 1000 packets per second and you have an attacker which sends both packets with a rate of 10 000 packets per second and statistically that means that there's a connection success for the valid user which is roughly 10 because essentially at the",
        "publication point you will have 10 000 queries in a second and you will also have one query coming from the legitimate user and you would have thousands queries out of them which will get served and because we don't know when the bucket is refilled which controls when you answer the query or when you don't um you can essentially statistically say okay the success chance for a connection is roughly 10 and then the inverse of that which is the attack success chance is essentially 90 percent which is a good success chance right um the problem is that relaying parties will retry so they don't only do one query they do like if it doesn't work they will do another query and another query and another query and at some point it will time out so if you really want to think if it's feasible we have to think about all these retries and we have to think about the six hour period and thing essentially measure how many retrys will be done during six hours",
        "and so this is what we've done using a simulation so basically we looked at different implementations of relaying parties and we looked at different operating system and resolver implementations essentially like DNS resolvers",
        "um do different numbers of retries if they don't get an answer for example Unbound does maybe only one but nine does maybe more um Etc and you also have to consider the real world rate limits which are in place and so what our simulation essentially shows is that this attack is very feasible for low rate limits like under 60 packets per second and in this case is the attackers need to like send the a rate of spoof packets like in the range of 1000 packets per second and then it's basically leads to the situation where the um relaying party won't get an answer during six hours and so the Manifest file will time out however if you have a higher rate limit say a thousand packets per second the attack gets a lot more challenging because basically it's the number or the rate of packets the attacker needs to send like gets into the range of 10 000 packets and then you get into the range of a real denier of service attack it's not a low rate attack anymore so you could argue that it's probably getting noticed and also maybe the attacker isn't actually be able to send that many packets because internet connection whatever connection to the Target system Etc so the attack works but it only works in some cases so obviously we we want to try harder right and so additionally to the low rates attack what we can exploit is that rpgi levels delegation as I previously said you can run your own publication point this is because it's like a federative system right",
        "um they don't want to basically if if you don't use delegation then the publication point is run by the IR so you enter your information into the ier portal and you have to say okay I own this prefixes which is certified by the IR and then the IR generates a CA for you and puts all the certificates onto the IRS publication point some networks don't want to use that they want to control their own infrastructure which makes sense but what this means is that essentially because any internet Network can own",
        "their own publication Point attackers can also run their own publication find they just have to purchase an IP prefix and then what this means is that the relaying parties have to contact the attacker publication point to fetch the information about the attacker Network and so what is basically provides us as",
        "an attacker is a direct connection to the relaying party which we want to attack which is an upgrade to the previous situation where we just we're an off path advisory but we don't really have any connection we can connect to the relaying party and we can connect to the publication point but it doesn't really allow you to allow us to do anything so the question is can we exploit this to break the relaying party and obviously because I asked this question the answer is yes and so this is what we call this the Loris attack um name comes from slow lowers which is an attack against HTTP where you send requests really slowly and then it's the lowest attack basically what you do is that the attacker becomes a malicious publication Point by owning a prefix going to the IR portal and entering an URL there and then if a public if a relaying party wants to fetch the RAS for the attackers Network he will connect to the publication point and the publication point will basically sense the response as slow as possible but as fast as possible so the",
        "um the relaying party doesn't time out right there are some limits but basically like you you have to send traffic like it's faster than 10 kilobytes per second or whatever and you can then also inflate the file size so the connection goes on and on and on and on and you're basically downloading random data um and the idea is basically that this hinders the relaying party from doing many retrys so because it's still updating our malicious data which is just useless and it can't update the data it actually wants to have which is about the other networks we want to do our bgp hijack against and what this helps us with or what this this basically gains us as an attacker is that it reduces the number of retries the relaying party can do against the publication point which we do the low rate attack against and our simulation shows that essentially this helps with the return because it reduces the amount of spoof packets you need to send in the previous attack a lot so it becomes feasible again right",
        "so basically to wrap it up to provide",
        "like a summary we showed that the design",
        "of rpgi is a third-party system allows attacks on its availability just because it's a third-party system you can basically attack it independently of bgp and that presents a problem because it basically you have a decent pronunciation",
        "um I showed you that the rate limiting mechanism can be exploited to block legitimate requests from off path now you have to know the IP address of the relaying party and we haven't talked about that but it's possible because the same reason because of the Solaris attack you can run a publication Point yourself and that means you see all the relaying parties in the world and you can also reference them to the networks which they protect by guessing but also by running an algorithm like you can essentially present one Roa to One Network one ra to another Network and see which networks are affected by your different Ras",
        "um we have also shown that the short validate as short manifest validity makes the attack feasible because without the Manifest files you would have to block communication for one year which isn't just isn't practical right and finally if the rate limit is too high you can also become a publication Point yourself and you can prevent the relaying party under attack you can also do it selectively so it affects less delivery Lane parties from doing its work so it's essentially busy with your malicious data and can't update that often and so coming from that summary we also have some recommendations obviously what you can do against the attack and with basically two groups so if you operate a publication point you first should avoid really low rate limits so",
        "for example if you have a rate limit of the the Dimension 60 packets per second per Epi it's probably enough for real operation but from an attacker point of view it's very easy to spoof and nobody notices like 60 packets per second there's nothing I mean if you have like a firewall or an IDs it might show up there but it's not like it doesn't affect anything",
        "um right so going from 60 packets per second maybe to a thousand packets per second is probably enough to defend against scenario service but it basically makes the attack which I presented a lot harder um then if we consider manifest files we suggest that you should increase the value the validity of a manifest file maybe go from like a day to a week and also what should happen is to randomize when the Manifest is regenerated so the attacker doesn't know that six hours before it times out I need to start the attack you should randomize it so the attacker has to basically do it for the whole period of one week and he doesn't know when it happens",
        "um and finally we suggest that at least some publication points should take a more robust deployment policy basically like some publication points everything is one is in one network and also the name servers on the same network and so basically cutting off this network from the internet also cuts off our PPI",
        "and if you're operating a relaying party we suggest that first you can monitor connection failures because they can indicate an attack however there are also a lot of random connection failures because someone didn't restart their publication point or some reason so that there are a lot of Errors I mean it's a new system so people aren't that used to it maybe but anyway a connection failure can indicate such an attack and what the implementers of relaying parties can do when they also already did that in some ways is that they should consider limiting the processing time which they spend on one publication point or like on one the malicious attacker repository so an attacker repository can just basically and use up all the resources of the relaying party and make it not do its work for the other repositories",
        "right",
        "um that's the presentation now I would take questions and otherwise thank you [Music]",
        "[Music]"
    ],
    "QTZvabExQ1I": [
        "[Music]",
        "good afternoon everyone welcome and thanks for joining this talk about detecting kernel exploits with evpf",
        "my name is Guillen Fournier I'm a security you know security engineer at data dog and I work with the cloud workload security team so CWS leverages the BPF to detect threats at runtime in user space and everything we do is embedded into the data log agent what this means is if you are a client of datadog and you want to try out CWS all you have to do is update the data location config",
        "all right so let's go through the agenda for today um first I'm gonna give you a bit of context about what this talk is about um then we'll go over the thread models that we are going to try to address uh after that I'm going to present uh sorry I'm going to first talk about why BPF so it's like probably one of the main questions of this talk uh why use this technology to do this kind of detections um then I'm going to talk about cry so cry is an open source project that I will be releasing today so we're gonna you know we go down the the list of features that cry has to offer and finally we're going to talk about performance and what you you know what overhead uh you need to expect if you were to deploy cry in a real world environment",
        "all right so um I'm pretty sure it will come as absolutely no surprise when I say that uh critical cities are regularly discovered in the Linux kernel so it has nothing to do with Linux it's just like you know perfectly normal in the life cycle of a software that is constantly being updated and that has thousands of uh you know users in the entire world um but the thing is because of this security admins worry about keeping up with you know security updates uh deploying those Secret Patches and if anyone here has had to deal with the dirty pipes variability you will definitely know what I'm talking about a grading kernel in the entire fleet of your infrastructure takes weeks if not months and in the meantime well you don't have any you know you don't have anything to protect yourself um so basically security admins worry about monitoring and protecting uh vulnerable hosts and so they can actually defy the upgrade and this is exactly what this talk is about and exactly what cry tries to address",
        "um there are technically hundreds of ways to exploit the Linux kernel and this still targets just three types of vulnerabilities um so the first one is let's say that another query is able to redirect the execution flow within the comma um another one is logic bugs so you know another query is able to perform something that is what that is not he's not supposed to do because you know developers made a mistake somewhere and um you know the proper Access Control could not be called and the operation was actually actually Allowed by the criminal even though it shouldn't have been and the last one is first compromise kernel runtime iterations so once an attacker successfully exploited your kernel they are likely to try to you know alter the commons so that they can hide their tracks and further um you know compromise the the services running on the on the on the hosts right so the goal today is to detect and prevent these attacks with EPF yeah simple enough right well absolutely not um those three you know types of annuities are way too ambitious and it would be an Ode to lie if I was to say that you know I was able to catch every single one of them um so what we are more realistically going to do is trying to make attackers lives a living hell um so yeah again we need to be very realistic about expectations and what you can actually do with ebpf in the in the you know in the Spheres of detecting kernel exploits",
        "um so I've been talking about BPI for a while um so what is a vpf so in a nutshell BPF is a way to run sandbox programs in the Linux kernel so you think of it as you have you know a c program that you compile into EPPI by code and that you load into the kernel using the BPS Cisco um so the code is going to you know perform a bunch of checks essentially the goal is to make sure that your program is safe and that the kernel is not going to crash or into a common Panic or whatever because of your program and then the second step is to actually attach your evpf program to a hook Point um so you have a bunch of different program types A bunch of foodpoints um I'm gonna go over a few of them through that talk but just know that yeah you need to attach an eppf program 2.4 your ibps program to actually get triggered",
        "all right so why ubpf um what are the reasons why this technology may make sense for this kind of projects well the first point is ebpf has a related relatively wide kernel support depending on the BPF features that you actually use so um as long as you do not use two fancy features you can actually go back to I mean you know backboard your detections back to 4.1 kernels another",
        "good thing about ebpf is that it has some safety and stability insurances that kernel modules might not have um it also has a rich feature set which means that you have you know a lot of different ways to understand what the kernel is doing and what's happening in Chrome space and finally if you are you know using a recent enough kernel you have some right access and enforcement capabilities",
        "so overall ebpf has a bunch of you know Pros going for it right um but at the same time ebpf is pretty much a terrible idea to do this kind of detections um the first reason why it's really like you know not great to do kernel level explore detection with the BPF is because detecting cost compromise activity is fighting a lost battle so we're gonna see why in some cases evpf cannot catch you know and exploit pre-compromise it's going to have to be post compromised and the point is um yeah if you are relying on a compromise kernel to actually emits you know security events while you can't rely on these events to be actually um you know legit and valuable like they could be compromised as well um the other reason why ubpf is not a great idea for this is because there are dozens of ways to disable ebpf programs what this means is it's going to be as important to actually write deductions for whatever you're trying to detect then it will that it will be to actually protect the ebpf sub system and make sure that you know it's actually still enabled and still working and it will trigger when you want it to trigger last point is ebpf can have a significant kernel space performance impacts but we're going to talk about this later all right so what's the point right well the point is group kit is an out of the box word kits there is value in trying to make attackers lives harder and to try to make it harder to exploit uh flows within the comma and last but not least in some very specific cases that we're going to talk about detecting and blocking pre-compromise is actually possible",
        "all right so this is why today I'm really saying cry so cry stands for kind of Kernel runtime Integrity with EPF um it's an open source project there are there is no RNC board yet uh it's compatible with at least kernel 5.15 and plus um yeah so it's available on GitHub today so feel free to check it out so instead of going through regarding lists of all the features that cry has to offer what I'm actually going to do is get in the shoes of an ad hacker and try to take you through the different steps that an attacker might you know follow in order to either exploit a flow or of the kernel or try to bypass whatever deductions we're going to talk about today",
        "all right so let's talk about the first scenario so let's say that an attacker controls the address of the next instruction executed by the kernel so this is a very textbook example of a return object programming attack these kind of attacks are usually used to try to eventually you know elevate your privileges and gain root access on a machine uh when the the process actually goes back to user space so let's go through the different steps of the attack and see you know what's happening and how cry can actually help to detect this kind of attacks so the first step is again so the attacker is allowed to to choose which you know which will be the next instruction executed by the kernel so let's say that they jump to a stack pivot so stack pivot is very simple the idea is the attacker will be able to choose where um the stack pointer will point to uh assuming that they have access to and they can control or just predict the address that will be in eax or there and the point is they will actually point the stack of the kernel thread to a user space buffer um and within this usage buffer they will have prepared the entire web chain and you know little by little eventually at some point they will execute a kernel function with attacker control parameters so over the past few years a few and actually a lot of um you know features were added to try to prevent these attacks from working one of them is called smart so it stands for supervisor mode access prevention and what it does is it prevents a kernel threat from using a user space buffer for its stack so basically what I've just described will not be possible because of snap is a bit you know it's rated because it's also checking addresses but the point is instead of jumping into the stack pivot I could have tried so here I could have tried to jump directly in user space executable memory and Smith would have prevented me from actually jumping to user space from a kernel space thread",
        "um all right but for the sake of this talk let's say that's map ends map are disabled um and also let's say that the route chain was eventually updated to uh called commit credits of prepare Canal credit of zero so basically what these two functions do is they upgrade the the kernel sorry the credentials of the current thread and eventually make the current thread roots okay so what can we do for machines without snap and without smap well the very first thing that comes to mind is to put a k probe and prepare cannot create so what this does okay so just like before I get into the details okay probes are a type of programs of evpf programs that you can use to attach an ubpf program to an exported kernel symbol what this means is whenever this kernel symbol is called the ebpf program will be triggered first um so what we can do is put a k program that on that symbol and then check if the stack pointer the frame pointer and the instruction pointer are actually pointing to the space memory",
        "all right so um what you can see here is simply uh you know so it's a vulnerable kernel module that I had to load in order for the remote to work but basically what you can see is that here there is an offset that is actually uh controlled by the attacker and they can use these offsets to you know move wherever they want in the kernel and choose what the next instruction is going to be and what the next you know the instruction that the kernel is going to execute will be um all right so this killer module was loaded so let's jump into a machine and then start cry",
        "here you go and then eventually you know exploit the bag and see um the recording action all right perfect so I've configured cry to shape all the logs and all the others to datadog you could actually have used any kind of any any log monitoring platform it's okay the the logs are generated in a Json file um and yeah if you update the page you'll see that a new log was sent which is a registered check event",
        "and then you have context about the process that made that triggered this detection and then eventually you get you know like the hook point on which the detection was made and then you clearly see that the side pointer here is in user space which is you know a detection that's something weird happened",
        "all right so it sounds great it does work but it's simply like Snap and smartphone and the reason for this is because you need to hook all the functions called by kernel exploit for this work the other problem is blocking mode only works on 5.3 kernels in plus and the reason for this is because if you want to actually block this kind of things you need to kill the thread and you're not to kill the thread you need a helper that was introduced in 5.3 kernels another problem with this is if an attacker knew that you were using k-prebs to actually detect this as yeah well all they would try to do is prevent the k-probe from firing in the first place all right so get on um what would the networker do to to uh you know disable the K4 well as far as I know there are three main ways to disable the k-probe the first one is to use kick probes enable interface so I'm going to talk about this one later the second one is to use cctl to disable F Trace enabled so this is a global kill switch for all the tracing subsystems of the Linux KOMO and the last one is to kill the user space process that actually loaded the BPI programs well let's try to booby trap everything right um I'm not going to talk about the last one a lot because it's probably the nosiest option and probably not the one that attackers are going to try to do first so I'm just going to go over the first two ones all right so let's talk about the first one so kpreps enabled is a global kill switch to disarm all K probes on your machine um if you look at how it works eventually it will call the right and evolved five ball hook point and I mean symbol and you can actually update the rock chain to do that yourself so what you could do is use your web chain to eventually try to disable you know all the k-probes before jumping to the commit threads function",
        "all right so let's put the camera on it as well on the problem is even if you did put a good program on it if an attacker knew that you were using K probes again there is another way to verify Escape probes even without going through the paint part of you know cooling white in a right on the wall Fireball um and the way you can you know understand how to do it is simply by looking at the buy code at one time so on the left here you can see that this is the bytecode of the function without a k probe and on the right this is with the k-pro so what's happening here is that when a k-prov is actually loaded the bytecode is Rewritten to call to some address that is actually a subsystem of the k-probe um you know feature and and then it will this subsystem will actually call your ippf program so if an attacker knew that you are using this to to check the registers what they could do is simply jump five bytes later and then like you know bypass the call to the caper well again game on what do you do next um the cool thing is K probes can actually be added uh in in you know uh hooked at multiple offsets past the the symbol that you care about um and technically you can actually put many of them so the point is in order to prevent them from from preparing the attacker from being able to jump uh past the call to your k-pro what you can do is load multiple instances of them and then like do that further I mean fire away inside the function so that the attacker is deterred to uh ever try to call the function at all all right so that could work um but what else could they do uh you know past this and to try to bypass this again um well if you look at what right-handable fight ball does it actually writes zero or one to a global variable called K probes all designed so if you I mean the attacker could try to write one or zero directly to kpreps all designs um so it won't necessarily disable the K probes that are already loaded but at least it will prevent you from loading new ones and the bad thing is with the BPF you have no way to hook anything right because you don't have any symbols you don't have any program types that is able to to just hook on memory that is being updated so there is nothing you can do well actually almost what you can actually do is use a perf event program type to periodically check the values of all sensitive kernel parameters so perf events are usually used to um collect you know Hardware metrics on your processes but you can actually configure it to trigger periodically so that's what cray does all right so let's talk about the second way of disabling K probes the other way to do it is to use the system interface the good news is there is an entire BPF program dedicated to cctl",
        "um and unfortunately it was added in 5.2 kernels so if you want to do this kind of things for all the kernels you're going to have to use kfrops again but the point is with this program type you can actually detect when the parameter is about to be changed and you know preventatively change the value or block the call entirely um almost all sensitive system parameters are checked by crowd periodically",
        "all right so let's say that whatever you did so far did not work and the attacker was able to work around your detections and eventually became roots on the machine um what they're likely going to do after that is try to persist their access and also modify the common runtime to hide their tracks the way they do it usually is by using column modules and then within the kernel module try to hook ciscals to to you know change the output of a Cisco basically the way to hook ciscals there are a bunch of ways to do it but mainly it's usually based on KP probes or by hooking this is called table directly another thing that kind of workers have been doing the past few years is use BPI filters to try to tap into the network traffic or they could also just like you know not use a kernel module at all and do everything using BPI ebpf programs um we actually had to talk last year about this so if you are interested we uh we you know we worked and published an entire uh BPF ebpf base with rootkit",
        "all right so what cry does because of all of this is actually monitor everything I've just talked about so you know any kind of ppf operation will generate alert any kind of common module load or deletion events any kind of K-pop registration or design events and so on and more importantly here for the next demo execution of hood ciscals so cry is able to detect again with the periodical check trick that the hook the sorry the Cisco table was hooked just by looking at the address of the Handler of a Cisco if it is outside of the kernel text so if it is for example inside of a module code um it will trigger an event and then also if the handle changes of attack it will also show you an event another way and cool trick of cry is that it is able to detect when a process is about to execute a Cisco that was hooked and again can configure cried to either plug or kill the process that is about to do that",
        "all right so again this is the kernel module as you can see it was modified to on init just you know this is a basic assist called table hook method but like overwrite the Cisco Handler to be our own Cisco lender and then if you look at the um configuration file of cry you'll see that I've configured it to log whenever the Cisco table is hooked and also killed the process that I might try to execute a Cisco that has been hooked so for this demo I wrote a basic web server and then if you you know call the books endpoint you'll get a list of books and to answer this list of books the server has to issue and opens this call all right so let's start cry and then insert the module that I just talked about",
        "perfect and then let's jump into Data dog to see what logs were pretty much immediately generated",
        "So eventually you'll get two of them perfect so the first one is init module so it's simply that you know the new model was loaded you have the name of the module and the process that did it and then if you look at the hook Cisco table you'll see clearly that you know the opens is called was hooked it used to be x64s is open and now it is ours is open inside the vision device module so let's go back to our web server and then like you know issue the request again and see what happens now that cry is running",
        "perfect and as expected the process was scaled and you would have another notification um in um you know in data deck all right so another way to detect uh chain attacks is uh control flow Integrity so CFI is a very well known feature of many programs that lock down the execution flows within the kernel by controlling call sites at runtime so they are usually added at compile time but sometimes they are added in Hardware as well and CFI is a great way to control and to prevent rubber attacks because it prevents you from jumping wherever you want inside the kernel which is basically what robotics do um these features unfortunately are not always available specifically the hardware ones so like you know what can we do with ebpf well instead of trying to lock down all the call sites what we can do vpf is lockdown jumps between control points so both hook points and parameters are checked and basically the idea is you can't reach a low level function that will eventually upgrade your credentials if you've not gone through first The Cisco that is linked to credentials update and then through the Linux security module so like you know the LSM interface that is basically handling all monetary Access Control",
        "so unfortunately I won't have time to talk about this further but the goal is to catch malicious calls to sensitive functions and also to detect logic bugs specifically for Access rights so example for example let's say you open the file as a writtenly and eventually you get you know you end up writing to it for example the bad news is that it's a very tedious process it's not automated contrary which is like you know not the same for um which is okay sorry for any other usual or normal CFI tools",
        "um and also like the hook you have to work around the loop limitations because again not all functions within the kernel are exported which means that you cannot cook everywhere technically with ebpf",
        "I also talked briefly about enforcements um so basically cry will try to enable the blocking features uh whenever they are available um so it's either program types or ebdf helpers and every detection we've talked about today are configurable to either log Block kill or paranoid so log block kills are pretty much self-explanatory paranoid means that whenever a detection triggers the all the processes are going to get killed again only if the right helper is available on your kernel all right so when it comes to Performance um so I use the Linux kernel computation time to evaluate the performance of cry and the reason for this is because it you know it spawns a lot of processes which is like it's which means that it's a very good stress test for cry and as you can see if you enable all the features of cry um well you can have a pretty significant overhead overcome so up to 40 in the total execution time however",
        "if you disable just one detection which is the one that checks at runtime when a Cisco you know that is about to be executed um if the Cisco has been hooked or not so if you're disabled just this hook and just this direction you go back to less than one percent overhead which is totally fine for and actually in the same margins than other CFI tool out there",
        "all right so thanks a lot that's it for me um I think the three takeaways for this talk is are sorry first that uh ubpf can be used to write powerful detections um however ebpf might not be the ideal technology to detect kind of exploits for all the reasons that I've talked about in the talk um also more realistically probably the last resort um it's not really a public strategy however there is value in trying to make attackers lives harder and there is value in trying to you know just make exploit harder to to use and definitely try to make out of the box out of the box for kids uh fail for script kiddies for example all right so again um the the repository is open source so feel free to check it out and um I'm down so I'm ready to ask questions [Applause]",
        "[Music]",
        "[Music]"
    ],
    "X6CiUD3EcfQ": [
        "[Music]",
        "foreign",
        "Welcome to our session",
        "today we will talk about unique vulnerabilities we discovered in the implementation of possess SQL as a managed service across multiple Cloud providers",
        "during the session we will go into the technical details of the vulnerabilities how we were able to exploit certain modifications in the process SQL in order to get a previous escalation and also costanant access to other databases of other customers",
        "um I hope that after this session you will have much better understanding of how many services work in general in the cloud also about how open source project that was written 25 years ago was integrated into a managed service and offered to a lot of customers some postcode SQL internals because it's always fun to go into the internals and how we as The Wiz research team conduct our research",
        "and just a fun fact all the elephants you see on the screen are actually AI generated which is a pretty cool you will see there was another session so let's start with a bit about us my name is",
        "and both of us from the wheel research team we try to bring groundbreaking new Research into the cloud industry we would like to uncover and find new risks both for protecting our customers but also to share with the community and present it here on that stage um we add some notable research like oh my God chaosdb also extra replica which we are going to talk about today and um yeah so near would you like to tell us what is the agenda for today thank you Shield so in today's agenda we'll first off begin with some motivation what actually led us to research the implementation of possess SQL across multiple Cloud vendors we'll then dive into two implementation vulnerabilities that was that were caused by the modifications that cloud vendors introduced to the possess a SQL engine and we also show how we managed to leverage this kind of vulnerabilities to gain an unauthorized access to the databases of other customers using the service and we'll finish things off with some takeaways",
        "so our Story begins in last year's blackout Europe well my colleagues are gay and I presented on stage ksdb",
        "we showed that how almost by accident by left by it's exploiting a chain of vulnerabilities we were able to gain an unauthorized access to the database instances of other customers using one of azure's Flagship database Solutions Cosmos DB",
        "thinking could it be that chaosdb is not an isolated case and that there are more cloud services that may be vulnerable to the similar kind of attacks so essentially the same developed like a talk we are already looking for next Target so Cosmos DB was a minute service that that gave us the ability to execute code on a short environment so we wanted to find a similar service a managed service that actually lets us to execute code in a shared environment a shared environment is an environment matched by the cloud vendor that actually hosts the instances of multiple customers during the research we found that this is where Cloud vendors struggle the most in keeping the customers instances completely isolated for one another",
        "and we wanted to build database as a service databases are one of the most integral Parts in any organization making them the attack is Holy Grail in the end of the day almost every network operations goal is to get to the database so with that that if we manage to find another vulnerability in database of the service it sure would have a lot of impact so we are looking for a database as a service that has the ability to execute code in the form of a feature and after a good few hours of scouting or this kind of a service we are pretty much left empty-handed apparently Cosmos DB was kind of a special snowflake in the its direct ability to actually execute code in a shared environment but then we thought that all of these databases services are actually based on open source database Solutions and one of these database Solutions must have a feature that will actually let us to execute code in a kind of straightforward way and apparently poses SQL one of the internet's most popular database engines a database agent that is being used across all major Cloud providers actually has a very straightforward way of executing code via SQL",
        "you can execute the following SQL query which starts with creating a table that stores the command's output executing the command via the copy statement in this case we are executing the ID command that shows the Privileges of the currently running user and then we'll query the commands result and executing this command should this query should give us something that looks like this",
        "so the last thing we did is to take this exact SQL query and execute it against every manage process SQL available on the market hoping that at least one of them forgot about this little trick but unfortunately without any exception",
        "they all gave us the same error message stating that we are simply lacking the Privileges to use the copy statement and that in order to use the copy statement we need to be a super user but I mean the process is secure privilege model shouldn't be the thing that stops us from executing code I mean this is not a real security burial how hard could it be to actually manage to find a vulnerability that will allow us to elevate our privileges to a super users and thus gain the ability to execute commands and then get an inside look to the service internal workings",
        "and to answer this very question I would like to invite Shield back to Stage to walk you through some very cool vulnerabilities thanks okay so we had we took this snippet we run it across a lot of cloud providers a lot of managed processor services and one of them was gcp the Google Cloud compute and specifically the cloud SQL service the cloud SQL provide customers with multiple open sources databases offerings and and we created in postgres SQL instance we connected and we tried to execute code with no success so the first thing we did is we try to understand who are we what permissions do we have over the database so we can see that we are running as the user postgres and the user postgres is a member of the cloud SQL super usable and it doesn't seems like we have special permissions we are definitely low privileged user with no permissions and another user we have in the database is the cloud SQL admin this is actually an administrator a super user within a database and used by Google to manage this instance and we don't have any access to it so we don't have permissions to execute code and we are not real super users but apparently",
        "we can create event ringers now eventually gas is not necessarily um a dangerous operation in postgres you just create an event trigger the thing about event triggers is that only super users can create event triggers this is from this screenshot is from the official process SQL documentation now this is weird because we don't have permissions in the database we are not super users but yet we can create different triggers what's going on here and it's not just the ventricles it's also loading extensions in process SQL you must be a super user in order to load most extensions and here we have a case where we can actually load extensions this is also weird something else we noticed is that we can create a table and change the owner of the table to another user to just give it to another user in the database even users which are not associated with alcohol and this is also very not default Behavior I mean if you have a screenshot we can create a table let's call it test table owned by the user postgres we can actually change the owner to the cloud SQL admin which we are not associated with and this is not the default Behavior so this made us believe that the process SQL engine was modified later we actually discovered that Google publicly announced this they share this in their documentation they say that you cannot create database users that have super user privileges however you can create database users with the cloud SQL super user role which has some super user privileges including creating extensions creating event triggers creating application users so now we know that the possible engine was modified um and we are not really a super user but also we are not regular user because we have some super user capabilities",
        "that brought us to raise a very interesting resource question",
        "can we use those capabilities those unique capabilities that Google offered us in order to break the process SQL security model and use those into to elevate our privileges so we were exploring those functionalities and the ones that caught our eyes was the option to alter a table and change the owner of the table to another user basically in postgres if we create a table and we try to change the owner to a user we are not associated with we should receive the following error message that we must be a member of the world Cloud SQL admin in this case but in Google it actually worked we managed to create a table and to change the owner to the cloud SQL admin now in order to understand like how impactful this capability could be we will do a very short recap of two very basic things in postgres tables and indexes",
        "imagine we have a table called employees table we have the three records Shear near and Bill and the table is indexed by the ID column whenever we installed a new whenever a user insert new item to the table the table has a new item now postgres supports indexes like any",
        "relational database but also it supports index functions which mean we can create an index on a certain column and that whenever we insert something to the table it will be indexed based on the output of a certain function so every time a user inserts something to the table the index function behind the scene the one we declared will be executed and the new row in data in the table will be indexed based on the output of that function so what is the potential risk here",
        "we have to use a user who perform inserts or updates and it's not just insult and updates there is a lot of commands that actually execute index functions like analyze and vacuum",
        "if a user performs this operation on a table behind the scenes an index function is going to be invoked and it's not just allow yourself if Bill will perform an operation on a table owned by Me by the use of postgres they will also invoke the index function and the same goes for super users who perform operation on our table now postgres wanted to face this potential security risk and they wanted to avoid the situation where users accidentally invoke functions they don't know about so they added a mitigation for these exactly issues 13 years ago they decided that whenever a user perform an operation on a table the index function behind the scene will be executed with the permissions of the table owner so if a super user is performing insert on the table the index function will still be called with the permissions of the user postgres because the user podcasts are the one on the table now here maybe some of you already have an idea of how this behavior is going to be exploited what would happen if we we create a table and then change the owner of the table to Cloud SQL admin we will create a table with an index function and then we will change the owner because Google allow us to do so in that case if the table will be owned by the cloud SQL admin the super user every time someone will perform an operation on the table like insert or update the index function which we declared will be executed with the cloud SQL admin permissions all we have to do now is just to replace the index function with an evil function and let's say we will craft an evil function with the following code that execute the ID command after performing an operation on the table it could be insert update analyze vacuum we will get the follow results we will actually able to execute code on the possible SQL instance of Google this is the output of the ID command we were able to gain a code execution on",
        "a managed instance on the on managed by Google and we were very excited to explore the internal environment of the minute service we know that we are currently probably running inside an internal Network and like a shared environment and we execute code with the permission of the modified process SQL instance so we started doing some Recon and we discovered that we are running inside a Docker container and the document container is probably running inside the virtual machine we also noticed that we have an network interface shared with the host it was a",
        "shared namespace with the 10.128 subnet",
        "we were able to find private escalation vulnerability in order to gain wood access within the docker container then we used the good access in order to escape the container and get a good access to the virtual machine from there we were able to see the control plane the components that manage our service and also other processor",
        "scale instances that were accessible through the local network later we discovered that those are actually our own instances because we choose the high availability feature in a postgres we got some replications and this is actually a replica the applications of our own database in that moment of the research we received a very surprising email from Google",
        "they sent us an email on a very old disclosure thread we had with them regarding another vulnerability and they said like hey Dell wanted to ask in case it was your one of your colleagues every Fox every folks doing research on cloud SQL would you mind sharing your podcast if so now that was the first time I mean we do a lot of cloud research that was the first time you got caught um so we wrapped everything up we wrote very detailed reports and we shared it with a friends at Google and at that point we were very excited about our finding and we know that Bobby there is a lot of other vendors we can go and check if they did similar modifications maybe we can find similar vulnerabilities so that brings us for the next example the Azure process SQL flexible server",
        "because also Azure will provide manage progress and maybe they do they did the same things so first thing we felt lucky we were just log into the Azure process SQL instance and trying to execute code to straightforward way and same as we had with Google we had here we must be a super user or a member of the PGA execute server program in order to execute code so same as we did with Google same as we do here we check which permissions do we have so we're running as the user postgres and we are a member of the Azure PG admin which is azure unicrow which it",
        "doesn't seems like we have a lot of permissions we do have some walls but they're not that interesting and we don't have permissions to execute code but we do have some privileged capabilities like creating event triggers and",
        "in addition we also have the option to create a checkpoints not risky operation but recording the documentation you need to be super user in order to create checkpoints and same with Google we can also load extensions",
        "so publicly modify the process SQL just the same as Google did and it's actually it's pretty astonishing two vendors two different code bases all",
        "wanted to introduce the same capabilities",
        "but in Azure something else got all eyes they provide us the creatable permission",
        "now create for permission is actually pretty popular among a cloud managed services and they tend to provide this this capability over this permission but",
        "all everyone every time you do that you must restrict it because this is a very powerful permission according to the process SQL documentation you must be careful with the create World privilege it's a goal if a role does not have a certain privilege but is allowed to create other walls it can easily create another role with different privileges than its own and therefore the guard walls that have great wall privilege as almost super users almost super usables",
        "so we know that we can create I mean we don't know yet but we believe that we can create new users and specify unique roles which roles can we provide a new user in postgres so here is the list of the most powerful walls we can provide it we can provide it with PG readable files which will allow us to read files from the file system beautiful pretty powerful also we can specify the PG right server files which will allow us to write files to the file system but last the most powerful permission or the most powerful wall PG execute server program which will allow us to execute code if we will have this permission so next thing we did we created the new user we called it James and we specify all those three privileges little files",
        "lots of files and executes server program and it worked we actually were able to create a new user and now we have a user called James with those very powerful permissions so next thing we did we logged in as the user James and we execute the following SQL query",
        "now here we did not want to I mean we didn't even execute the ID command straightforward follows shell",
        "and it worked",
        "we're actually getting yeah we can",
        "we were able to get a reversal to Azure managed instance and same as well with Google we were very excited we have a new environment to Recon to resellers to understand where are we what can we do from there and what is the possibilities and we can actually achieve this vulnerability and this is the time to invite Neil to Stage to go over the extra replica vulnerability and now we gain constant access to the databases of other customers",
        "thank you so as you mentioned I'm going to show you how you're able to leverage this kind of vulnerabilities to gain an unauthorized access to the databases of other customers using the service so this is what will be gone we know that we are running inside inside of some sort of an Azure modified version or possess SQL and after doing some basic icon we realized that we are actually running inside of a dedicated Docker container and that this dedicated token container actually runs on top of a dedicated virtual machine next we executed the if config command to see which network interfaces do we have this is where we learned that our virtual machine is actually a part of two subnets and this made us assume that we are actually a part of some sort of an Azure internal Network but we still don't know what are these Network subnets so to try to answer this question we actually use the nmap port scanning tool to try to map the host within the Azure internal Network and this command essentially checks if there are other poses SQL instances within that Network and as it turns out within the Azure internal Network there were other 212 database instances meaning host that we can connect to so what deposit csql default Port 5432",
        "now at this point we wondered are these our instances the same way it was the gcp so we really hope not first of all we wanted to prove cost any taxes and we were really hoping that we are not paying for 212 plus this instances because in the cloud you can never know so we have a direct connection to other customer databases but we like to the appropriate credentials to actually do any meaningful actions so the next thing we did is something that we're doing almost every almost almost every cost Talent research and is to examine the default configuration coming with the virtual machine image being a managed service this means that all of the instances are running the same image with the same configuration this means that if we'll be able to find an exploitable misconfiguration it is applicable to other customer instances so we examine the for this SQL authentication configuration files we first examined the pghbi conf which is the process SQL authentication configuration file this file dictates who can connect to which database",
        "and we also examined the PG ident file the page ident file is essentially an extension to the pg HBA file detailing further configuration for more advanced authentication mechanisms authentication mechanisms that are a bit more advanced than the usual user password authentication",
        "so here's the short snippet of the PG HBA file we found on our machine and we noticed that this file is very different from the different one coming before this pause this and what actually photo eyes are the three less lines so to understand why let's pass it together so essentially these three lines say that in order to authenticate to the replication database we need to authenticate as the replication user and we can only do that through a set of internal subnets one of them is the 10.0.0 subnet we've seen before and the authentication mechanism for that user is client certificate Authentication",
        "this means that if you want to authenticate to the application database for another possess SQL instance within the Azure internal Network we need to supply some sort of a valid certificate but how does a valid certificate even looks like this is exactly where the PG identifier comes into play the PG ident file has two regular Expressions that are being used in order to validate the certificate subject name",
        "you may notice that both of the legal expression actually contains some sort of some sort of unique identifier this is actually the hostname of the virtual machine hosting the positive SQL instance and this this is unique identifier for each instance meaning the regular expression actually varies from the from instance to instance and there isn't just one certificate that can be used to authenticate to all instances rather a new certificate needs to be issued for every new instance okay so we'll begin with the second regular expression because it's a bit more easier so essentially it will supply certificate that begins with RL which I can only assume it stands for application the unique identifier of the database code osdb",
        "acline.ms we can authenticate to the replication user now because only Microsoft is the owner of the azclan.ms domain they're the only ones who can issue this certificate okay so it's pretty straightforward but things get a bit more complicated when it comes to the first angular expression because it actually utilizes regular expression matching groups this means that the identity of the user will authenticating to is determined by the prefix of the subject name this means that if we Supply certificate that has the prefix of application we can authenticate to the replication user same goes with if we Supply the prefix nil we can authenticate to the username so on and so forth",
        "but now maybe some Eagles are spectators in the audience May notice that this cellular expression is a bit of a permissive",
        "because it actually ends with a wild cloud this is quite an easy misconfiguration that we can exploit this means that while we are not the owner of the azure.com domain and thus we cannot issue this certificate we can actually take the inside entire subject name of the domain we want to authenticate to and register it under a domain of our control in this case with research.com",
        "this subject name will be also validated by the cellular expression and will actually let us to authenticate to the database",
        "so if we examine the pghbi file one more time in order to authenticate to the application user we need to have an IP address in the 10. subnet which we have and we need to supply a valid certificate which we can so the next one we did is to actually try to authenticate to that database and to our surprise we got the following error message stating that the replication database simply does not exist",
        "but it does not make any sense why would the Azure have a specific configuration for a database that is not Dell so apparently the replication database is not a real database it's a pseudo database and connecting to this database actually lets you to replicate the entire postgres SQL instance and not just a specific database and we can do that by using one of the built-in postgres SQL utilities called PG based backup",
        "so we have everything that we need in order to start replicating databases",
        "now in every other presentation this is the point I will show you a live demo of the vulnerability but being a cloud vulnerability this vulnerability is now pitched so I cannot show you a live demo but I'll try to do my best in illustrating the entire attack flow using the magic of illustration and animation",
        "so we are on our left of a researcher a research machine and on the right we have our victim which is uh and we want to get its confidential information the victim has the falling house Earth name begins with ba so the next thing what we'll do is issue a certificate that will actually alert us to authenticate to the replication user on that database",
        "as you can see we have a subject name that begins with replication followed by the unique identifier of the database and it all sits under the with research.com domain",
        "next we'll use the PG based backup utility uh feeding it with our newly issued certificate and connect to the application user",
        "after doing that the hours machine will actually send the SSL certificate and authenticate to the database and we'll get a full application of the database with its entire confidential information",
        "[Applause]",
        "so we send our report at Microsoft and they address the issues amazingly fast only 48 hours after the initial report the vulnerability was no longer exploitable the first address the issues by fixing the over permissive regular expression but a few days after that they also disabled the cost and network access meaning that both of our expert Primitives were basically basically gone",
        "and they were so appreciative of our work that they actually awarded us with a forty thousand dollars of bounty",
        "with that I want to invite you back to Stage to walk you through some very interesting takeaways",
        "so we discovered those vulnerabilities and we start reporting those uh to Microsoft and Google and we try to understand what was the root cause of those issues",
        "we learned that possess SQL was not built to be a multi-tenant managed service it was built like I think it was around 25 years ago and it has a very simple permission model you can be a super user where you can do everything you can delete files write",
        "files loading shared libraries execute code a lot of operations that are dangerous and could risk the underlying compute oh you can be a low privileged user and this is a very simple um permission model but it does not fit the cloud need Cloud providers cannot provide their customers the ability to",
        "feel like their administrators in their own database but at the same time to not risking the underlying compute",
        "and this is why all csps we worked with modified the process SQL and they already did the same they wanted to provide users admin capabilities but on the same time to do a lot of hardenings in order to protect the processes for instance and not allowing customers to execute code or to risk the instance they did it using extensions sometimes with configurations and sometimes with code changes so they actually maintain their own Fork of postgres and the thing about that is that when they do this modification when they introduce new capabilities it's very easy to introduce vulnerabilities open source projects basically I mean mostly postgres",
        "you need to have a very good understanding of the part of the project before you change it and postgres is a very big and very complex project so at that moment we understood that the vulnerabilities we discovered might work on other vendors and it was a very problem it was problematic for us because we really wanted to talk about these issues we wanted to write a blog post about it we wanted to come here to Black it and present it to you but how can we discuss those issues after they were fixed in Google and um in Microsoft with the knowing that those issues could actually affect other vendors other managed process SQL vendors",
        "so that was us to the question how do we inform all those vendors um so first we initially report the vulnerabilities to Google and Microsoft but then we crafted the report and we sent it to dozens of vendors that could potentially be vulnerable it was also worked with a lot of them on understanding the vulnerabilities the mitigations we also initiated a private group with all major csps to collaborate on those issues and to understand like how can we solve this issue once for all and not not just like keeping it more",
        "just keeping the problem bigger because the absolute thought is that most vendors in order to fix the vulnerabilities we disclosed They just added more hardening small code changes more modification to the postgres project and this is not good for security this is the opposite of what we wanted to do it's actually they are just adding more potential attack surface for new vulnerabilities",
        "um and we think and the solution actually this is something that we talked about the group it's the Google initiative to suggest Google suggested to contribute their hardening their um their own audience to the process SQL product the official one so the official project will maintain um these other links and new capabilities for cloud provider so whoever wanted to offer customers a bit more privileges",
        "um than just a regular user but still not a super user um so they actually wrote it on the mailing list they offered the hardening a deposit skill Community really debates on that right now it doesn't look that good and it looks like the process SQL official project will not Embrace this um if you would like to follow it you can do it with the you can check the mailing list it's a bitly link but trust me it's the mailing list um a nice very good project also bought by Ivan Ivan is a managed Day Management database vendor and they offered they",
        "actually open sourced their own possible SQL hardenings and this is actually a very good approach because because right",
        "now um if someone will find a new vulnerability like the ones we found in those hardenings it is all will be in one central place and it will get a cve people could fix it in one place for all and we think it's a very good approach and for last I would like to talk about a different topic which is isolation",
        "and why installation is so important in the cloud isolation is King isolation",
        "is the best way to actually stop hackers",
        "and after they were able to get a foothold within the internal environment um we stayed we started with the examples we showed today that where we had network access to other customers instances and isolation was not perfect we actually had the opportunity the",
        "attack surface to find a second vulnerability and where the isolation is really really good you can find yourself empty-handed now the thing about isolation is that cloud providers have a lot of minute Services every service is designed differently it has different architecture and a different isolation mechanisms and we as customers it's a",
        "bit frustrating for us as Cloud customers that we have no idea how our data is isolated in each of each service now Cloud providers does share some information regarding the isolation you can check it in the documentation usually it will be for the main compute service and sometimes those serverless functions and the shared compute container services place as well they tell you like straightforward you are going to execute your code or the service is going to use just compute this is the places where usually customers are more concerned and they show information but they must share much more information they don't share enough now doing a research when we disclose cause standard vulnerabilities to Cloud providers we ask them a lot of questions and we would like to encourage you or Cloud customers who are a bit worried or they want to understand how the data is isolated in the cloud to take a poor active approach and ask your provider so this is usually the questions we ask when we do responsible disclosure with vendors for example you can ask your cloud provider if they use Shield compute in a specific service you use or I mean shared compute is very risky because they are actually using the same operating system and to run jobs and works workers of separate or different customers and so if someone will find the vulnerability in that service it will be very straightforward to access the data of other customers also very good questions is to ask the cloud provider if they use containers as a security burial for Cellcom Services because containers usually could be Escape sometimes pretty easily with configuration issues but also even if the container was very well configured a Linux kernel vulnerability usually break out of it so you don't want the Linux camera vulnerability to be the security barrier between One customer to another customer a third question would be do you do they use do the customers get the same compute instance within a shared network and if so do they have network access because imagine if you would ask this question a Microsoft long ago",
        "um about the Azure processor flexible server those questions will it's not just to satisfy the customers they also need in order to answer you so we need to do their homework so we need to go and check and verify the service and understand if like how does it work there and if you will ask this question could it could be that they will fix it they will go check see that there is network access they will think to themselves that bad they will fix it and then we will not be here today presenting costs and vulnerabilities",
        "so um thank you very much it was the chicken near from with [Applause]",
        "[Music]",
        "[Music]"
    ],
    "Vr0gohwlxvE": [
        "[Music]",
        "foreign",
        "everyone I can't believe how many people actually made out of bed by 10 a.m at black hat watch Us open a door you could do that yourselves thanks for coming today and our talk is called perimeter breached hacking access control system it represents uh a lot more months than we'd like to admit of research on on this Target and we're happy to be able to share with you today before we get started quick who am I my name is Steve pavolney I'm head of advanced vet research and principal engineer at trellix and my Twitter handle is there if you want to connect afterwards or have questions now as a manager on the team everybody thinks all I do is Excel spreadsheets which is generally true but I do have some core technical interests as well and some of those are vulnerability root cause analysis reversing exploitation and with",
        "Sam this is my first chance to do some Hardware hacking so fun fun chance to learn yeah and my name is Sam Quinn I'm a senior security researcher at trellix and I could have summed up all of my interests in just hacking in general but I really do like exploitation Hardware hacking embedded systems like iot devices and of course OS fundamentals and Sam and I have interests outside of the lab so when we're not finding uh crashes in the lab uh we're out mountain biking and crashes are finding us so that's legitimate photos that are Gifts of both of us um yeah we're obviously experts at that as well all right I'll levity aside let's get right into the target here and we're talking today about the hid Mercury axis control panel specifically this is the Lanell 4420 which is an oem vendor of the hid mercurus Mercury Access Controller I'm going to talk a little bit about the who the what the why the how of this project and before I do that I want to set the stage a little bit for how this device is typically used so this red panel or controller is actually what you see in the on the door behind the door in the typical setup that's going to usually be in a in a server Closet in this case though it's often deployed on a local network very rarely would we see this at the perimeter uh not behind a firewall or Internet exposed certainly possible but much more likely on a local network here and this controller is used to manage up to 64 doors or badges that can be Daisy chained as well to support essentially an infinite number now for lennell there's a management server or local server called the on guard which is responsible for doing all of the badge provisioning access control all of the door related functions and the controller itself is kind of just a dumb device that processes those commands and opens and closes relays now why are we looking at Access Control well we got interested in this of course because critical infrastructure and Industrial Control Systems have been widely targeted especially over the last five to ten years increasingly so more so I would say the access control area is one of those that's been heavily under audited by the research community and so it really caught our attention one of the other things that really caught our attention when we first started looking at this device was some marketing by Lanell that said that this was certified for use in government facilities now we found out throughout the process of talking with carrier and Lanell that this is actually intended to be a physical security certification but regardless it inspired us to do the research because it says it was approved following rigorous security vulnerability and interoperability testing okay so we had a little finger licking moment there and that's what inspired all of this so that's kind of the why though what and this is the spoiler alert we've already disclosed these and these are all fully patched so comfortable to share these we have eight vulnerabilities that we submitted for disclosure four of which are true zero day vulnerabilities and unauthenticated remote code execution we're going to focus on just three of them today given the time constraints we have at Black Cat and we'll have a little bit more detail in our Defcon talk as well if you want to join us all right so that brings us to the who who's affected by these well when we did this project originally on the Lanell 4420 board we kind of had thought that that was the extent of impacted panels well we found out later through talking to Carrie or Lanell and Mercury was that there was eight additional panels that were also vulnerable to these same issues bringing us to a total of nine effective panels and more so over 20 OEM vendors which put a sticker on the hid Mercury boards were affected by all vulnerabilities so this represents millions of controllers at tens of thousands of sites worldwide and really the vast majority of Fortune 100 companies so the install base is pretty significant here and finally these are now added to the or the 4420 was added to the government's APL or approved product list meaning there's no additional security certifications that they need to put these in a sensitive or protected facility the way that we approach this project is we didn't want to just get up here and dump CDs on you guys that's that's kind of an old story we're going to do that but not just that we're also going to talk about the kind of a choose your opponent Venture style where we say you know at various decision points in this process what did we decide to do and what was the logic or rationale behind it now uh we actually presented part of this research at Hardware Hardware i o a couple months ago but we spent a lot more of our Focus there talking on the hardware analysis Hardware hacking to get us to the point where we had a root shell on the device so for today's purposes both black hat and Defcon will be starting with a root shell and there's no vulnerabilities to get to this point there was a lot of work and Hardware analysis to get a root shell but the vulnerabilities really were only possible to find from this point of analysis on let's start by looking at some of the standard operations on this control panel as you might imagine one of the first things we do is scan the open network ports and we found just three open ports here the web server which runs 80 and SSL 443 and also Port 3001 which is used as the on guard Management Port so that's that LSM the local security manager that manages the device now we didn't have that set at set up at the time because we bought our first board off of eBay and so we really didn't have anything to do with that port at the time when the web server spins up you're greeted with a typical admin you know password login this is where typical session management is done and done properly for in many places hint hint um but this is where we we track section cookies and and you know we we are able to authenticate to the device when you log in you're greeted with some of these Diagnostics and configuration tabs what you might notice from the web server is very little to none of this has anything to do with access control or doors or badges this is all device configuration contents nonetheless it became one of the most interesting places for us to look especially at the network setting tabs and we'll we'll go into a lot more detail on why we chose that in just a moment here so that brings us to our first choose your opponent Adventure which was our objective at this point was pretty clear-cut we wanted to find a zero day rce vulnerability and ideally have it be unauthenticated so that we could do network-based attacks without having to log in three different areas we could have investigated NOS vulnerability where we're looking for proprietary code or applications libraries and files from the vendors Keys credentials crypto all that kind of stuff we kind of opted to go for more of a web-based and network-based approach where we're looking for things like a command injection because we have access to the web server of course and that can be a really great place to start analysis on the network phone side we'd be typically looking at the network stack itself probably for an end day in some of the third party libraries or the stack but we ended up going with the web-based vulnerability one of the key areas for uh for web-based attacks includes command injections and this was our ideal candidate because if you look at one of the startup processes on the on the controller itself there's a DHCP scriptlet that's run as root here which processes the hostname with a dash H switch for the controller itself in this case it's called controller one and we can see that that controller is actually taken from the hostname file on the device so if we can command inject into the hostname which of course we're going to show you the ability to do we might be able to actually execute code here so let's talk about some of the character restrictions on the network page and that's what we're on the network settings page if you look at where the controller is uh the host name is set which in this case is called controller one we have some character restrictions on the client side which are alphanumeric characters and period and hyphen when we look at the actual JavaScript that's responsible for processing that the string match does absolutely match up to that we see alphanumeric and dash and Dot characters as being the only ones allowed well as we all know client-side is not typically the only thing that's being checked there's also server side checks here and we see this function called xss string test or the cross-site scripting string test now they do look for a number of cross-site scripting characters in here and this is an additional character filter list but not just for xss there's also some interesting command injection restrictions here we'd like to be able to use the forward slash character for paths we'd like to be able to use the semicolon for uh for command injection but what you might notice in here is that they aren't checking for things like the sigil the dollar sign or parentheses and I'll come back to that in just a moment here the final thing that is being parsed here is a function called parse forms data where there's a string tokenizer function that's actually splitting the hostname string anytime it sees an equals or white space single white space character now white space characters are super useful when you're using command injection so to get around that we use that dollar sign and parentheses to do command injection instead of a semicolon and we replace the single white spaces with tab characters or backslash T here and that worked perfectly well because Linux will interpret any white space any white space characters as well as the others",
        "before we go into the command injection and kind of show you that part of it live and we're going to break up the attack into kind of live sections on stage here because that makes it easier to get massive epic failures uh let's talk about the way that authentication is handled for gits and posts to the web server get requests are handled pretty typically here you get a session ID by calling get session ID function and then you compare that session ID to the session ID that's taken from the cookie value that all makes sense and if that check validates you're good to go now what's a little bit strange is the way that post requests are being handled and the way that posts are done starts out the same way get session ID from a cookie but as you might see that's never compared to anything so it's just checking that any session idea exists and you'll see in our Command injection we use 1337 1337 as our session ID you can use anything you want here and any post request data will succeed unauthenticated",
        "all right so Sam's going to start us off by loading up a live demo here where we show you a little bit more of the command injection how that works the auth bypass and we're going to hack this incrementally as we show you here way too small oh there we go so I'll first of all start off with our Command and control server this is to bypass not having to type our whole every script that we want to run into that hostname so this will eventually give out some more commands for us to run we'll come back to this in just a little bit though um so then next we'll start off by actually doing the command ejection so I will first go ahead and Cat that out for you um it's a simple bash script and since we're using Curl we're not using any of the JavaScript that Steve showed to do any of the character restrictions and it looks kind of confusing we'll dive into it a little bit more in a bit but the most important thing that I want to point out here is that the session ID is a Boga session ID so this is unauthenticated here and we'll go ahead and run that",
        "all right and so that has Ran So now if we go ahead and pull up the web server and log in",
        "use the password manager but I can't here we go log in and go to that Network page where the host name is shown",
        "it did indeed get all of those you know restricted characters applied and our host name is now a valid command ejection however as Steve mentioned it does only run at boot so we'll kind of go back into our slides here and kind of cover how we kind of use this still to put it uh you know exploit the system so the first thing as Steve mentioned that what's highlighted in red here is not a space it's indeed a tab which works perfectly fine for the Linux interpreter and as he also mentioned we are running this at boot up through the DHCP call this is how the Linux controller of the device gets an IP address for the first time and most importantly we want it's happening through the hostname as you mentioned but this is the command we actually want to run this reaches out to that python listener that we set up our C2 servers where we can run arbitrary commands through that and not have to worry about the restricted characters however this",
        "this command injection is a blocking call so of course we don't have an IP address at this point to actually call this so we actually Nest another DHCP call inside of the original where we're actually injecting into so this way we actually have networking setup and that W get can actually take place and this was our first CV that we filed and it is an unauthenticated command ejection the only thing dropping it from a 10.0 CVSs is that it needs to actually have that reboot to actually trigger so it doesn't trigger on uh command like we would hoped but that is still a great cve and we continued our research where we now wanted to actually we really wanted to find a reboot primitive to actually have that command injection take place so the first thing we looked at was trying to find an unauthenticated reboot through the web server however there was a reboot like when you click apply settings it did indeed reboot the device however that was checking the cookies correctly so that wasn't a valid way to reboot the device we did kind of look into dossing the system there is a watchdog timer that if any process hangs for too long it will reboot the device this did work about after an hour of sending thousands and thousands of uh get requests to the device however pretty noisy and slow and kind of not as cool as we hoped so we continued to look for a way to actually crash the device and if we can cause a segmentation fault on the on the controller it would actually reboot the device itself so our next goal was to actually try to find memory corruption vulnerabilities",
        "and to do that we wanted to actually identify you know if it does seg Fault to make sure that it does reboot and the controller itself has a custom core dump Handler every time any application that dumps its core will run this the script and it looks pretty standard from this view but if we actually look into that script it does a bunch of stuff for debugging but the last line of it I don't know if you can see it it says reboot so this is exactly what we're looking for and all of the web pages are CGI bin files which are compiled and if you can cause any of those to crash we do indeed dump core run this script and get that reboot that we're looking for so to improve our odds of trying to find memory corruption vulnerabilities and because all of the web servers are our websites are running CGI bin files we started to actually create little automation scripts to actually improve our odds of finding these kind of dangerous functions that are typical for",
        "uh memory corruption vulnerabilities we wrote an Ida python script to search for these but most importantly before any cookie check took place this way that we could um you know improve our odds of actually hitting one of these dangerous functions before any cookie check took place and it would be unauthenticated so you can see that a few of these did indeed have some of these dangerous functions but looking at them statically all of them did have you know static size Fields were programmed correctly um nothing we could do really there except for on the next page here we actually did find one in the advanced uh Network CGI bin file where there were a couple calls to stir copy where we controlled both inputs and outputs and that's always a good sign for memory corruption so we did look at that statically and kind of identified that from this script here but we wanted to test it out and it's never good to use",
        "your only board that you have and try things live because you could corrupt the machine and you know so we actually set up a arm cumu VM full system VM and",
        "took the actual Flash images of the device in ch rooted into them and kind of created a poor man's uh emulator and then eventually we used it for fuzzing but before we get dive into that now that the system has that CH root environment and all of the library files and whatnot are in the right place we can actually just run these CGI bin files as normal and you can see here highlighted this is a joke we're sending the post data of hack yourself into this Advanced Network cgibin file and of course it actually does respond with valid HTML and this is how the CGI bin files take post parameters but to actually fuzz it and try to figure out a way to you know see if we missed anything through our python automation we wanted to actually use a mutator and to do this we use the simplest mutator I know of it's redanza it's pretty great you send in data into the radamza through standard in and it mutates the data and comes out differently and that's great for trying to fuzz this exact target what we did is we took the valid post parameters for advanced Network CGI passed it into radamza and as you can see all it did is change the last octet of a DNS server or DNS server to negative one so it it does it different things every single time and this one was a pretty good test in my opinion but running this manually that's not very it wouldn't be very efficient that's for sure so this is the coolest fuzzer that I've written so far it's uh like 15 lines of code and it's just a bash script where it takes that post parameters passes it into rodamza to be mutated and then just sends the mutated",
        "data directly into the CGI bin files that we're we're trying to look at and if it the CGI bin files always return a zero if it ran successfully so if anything isn't successful return value we actually spin it up in GDB and then run a back trace on it with the same test case so as you can see in this example here this was indeed a crash in",
        "a countster radamza decided to make it much longer and added a bunch of random characters and you can see in the bottom since we rerun it in GDB you can see that it crashed in stir copy and it gave you a full back trace of the system so pretty simple simple to set up and honestly a pretty fun fuzzer and however all of that automation work didn't find any more vulnerabilities than we found statically but uh it was still a good sidebar this was a second cve that we filed for this talk and it was an unauthenticated denial of service because we it was only an out of bounds read for that segmentation fault we couldn't use it to exploit the device however we were able to use this to cause the segmentation fault to reboot it so a denial of service there and then now that we have kind of the chain of these two vulnerabilities together we can indeed actually kind of exploit the device and I'll have Steve kind of walk us through the next steps so now we're at a point where we have a fully working exploit chain we have a command injection that runs at reboot and we have a way to force reboot through that segmentation fault core dump Handler so this was a great point for us to actually update to the latest firmware because we bought our first device off of eBay we didn't really have the ability to do this so we put heavy quotes around social engineering here really what we did is we called up a third-party installer in our Portland area called convergent and they do a lot of installs for uh for Lanell and you know we we may have done a little Cloak and Dagger in terms of what our intentions were at this point but they came out and built us a couple iterations of this this Behemoth you see on stage here so that gave us the ability to integrate the on guard management server for the first time we built out a fully functional demo unit with the controller and card reader this is wired exactly as it would be in any facility with the exception that typically the controller is going to be in a supply closet or a server closet more importantly they gave us some Advanced Training on the normal operations of this device and how to use the management server provision Badges and access control and the most important thing is we finally had the ability to update the latest version of firmware not only that but because we had a separate Standalone server for onguard we had a copy of the firmware on the local file system the legitimate firmware that we could use to play with all right so this brought to a success and failure Road here on the one hand we had you know we'll start with our failure we had our seg fault handling that rebooted on any system binary before that gave us our stir copy forced reboot well afterward after this update Sig fault was only Sig field only caused a reboot of the device with the two main system binaries and so we lost that unauthenticated dos on the latest version of firmware at the time and these are the two system binaries that actually do still reboot however the more important thing is that our Command injection vulnerabilities survived this update it was not patched out or discovered and we knew that we for sure could find a way to cause this device to to reboot that brought us to choose opponent Venture number three where now that our dos was dead we had to either we had to find a new method of achieving that unauthenticated rce there's a few different options here one would be to find a new Standalone vulnerability kind of a a zero or one click uh you know to rule them all we could find a reboot primitive or a new reboot primitive or or crash that we could actually chain to replace our our broken chain here or we could have moved forward and prepared our quote-unquote malware or door exploit because we know at some point the door is going to go down or be rebooted and our Command injection will get triggered obviously we're we're uh we're way too lazy for that we're not not going to wait for it to reboot by itself we had some new toys to play with with this firmware update and one of the things that was added in the update was this Diagnostics menu in the web server which had a firmware upload option that firmware upload option clearly states that it'll reboot the board if you upload the firmware so now we at least have an authenticated way to reboot the device but that's not good enough all right so I'm going to give another little live demo here and we're going to show you guys um how we actually get around this",
        "it's already up down there okay all right so we're back to the uh the panel here and what I'm going to do is you can see the developer settings on the right side and I'm going to actually log out real quickly",
        "I'm going to log back in to show you how the session cookies are handled here",
        "all right so if you look on the right you'll see the network requests going through and we'll see the session ID is appended on to the end of the banner and menu and welcome page the new page that was added was this Diagnostics menu and when I clicked on that what you'll see is the diagnostic CGI with the session ID is added to it and that is done appropriately and we're going to talk we're going to we're going to right click on this and we're going to copy it and just make sure that that is working as intended from logged out but before we do that I want to just show one thing as I clicked on that Diagnostics menu there was another CGI file loaded view firmwareupdate.cgi and if you have sharp eyes you probably realize that there's no session ID on that okay so let's go ahead and log out and we'll go ahead and paste into here the full request that we had for the Diagnostics menu and obviously the session cookie is invalid so it gives us this timeout and it no longer works however if we remember that CGI page that we had just gone to and we go to it directly from a logged out session because there's no session ID checking whatsoever we can go to this page completely unauthenticated bypassing all logins no session cookie whatsoever and now we can upload files directly so this is obviously a major flaw and it is part of the vulnerability reported here what I'm going to do is I'm going to actually choose a file here and I'm going to start it up uploading and what you're going to hear is this is going to cause a crash I'm going to explain to you as it loads here what's happening if you have sharp ears you probably hear the device the door beep and reboot because that's what we're trying to get it to do so I'll go ahead and load the file and then we'll go back to slides and uh and resume talking about what we just did",
        "okay all right so we now have the ability to control file on input unauthenticated and some of the areas that we might be interested in looking at there the door just rebooted probably heard it up front some of the areas that we're looking at are our user controlled input here we could look at the file contents itself we could look at things like the parsing of the file name or even some of the sizes these are typical user controlled input Fields now when we look back at that Diagnostics or firmware update page one of the first things that Sam and I tried was just creating an empty file in this case we call it fubar.txt it has nothing in it we go ahead and try to install it and sure enough it takes it tries to install it and it ends up erroring out one of the things that it says in the error message is this invalid signature size now that clued us into that there was probably some signature being checked for the file and we decided to look at the legitimate firmware file to see what was happening now it's an encrypted file we pulled it directly off that on guard server and so for the most part it's pretty uninteresting until you get to the last hex 158 bytes which probably looks familiar to many of you this is a base64 encoded blob that represents the file signature but more importantly the last three bytes are an ASCII representation of that signature size 158 so we knew that it was parsing this not dynamically bite by bite but taking a user controlled value that's a great place to look further at the code and see if it's being handled correctly first thing I'll draw your attention to in that firmware size check here is a is a Malik of a hex 190 byte so a static sized Malik here and of course then the file is open for reading the firmware file so far so good the next thing that happens is a file seek or an f-seq where it'll go to the end of the file minus three bytes and as you imagine it's taking those three bytes as the ASCII size value of the signature size and it'll read those three bytes in using the F read function then it does a stir to L or string to Long conversion to take that 158 or whatever is specified and convert it to a long and as you guessed it that's used as one of the arguments to the F read function here so this is where the actual Heap overflow will happen this is uh this is where we can overflow that static sized malloc buffer and just a few instructions later in the file close function is where we'll actually see the crash happen so we spent a lot of time doing like Rob Gadgets in the emulator we got a full single wrap Gadget working to be able to get full code execution in our emulator but when we transferred it back to Hardware we just ran out of time to get it working we had we had process threading issues we had a heat manipulation problems so we got this working in the emulator we never ended up getting working on the device Hardware but we're hackers we're lazy we just used it for the seg fault reboot and chained it with a command injection either way we are going to talk about that wrap stuff at Defcon if you want to come that'll be really the only thing that's different for that talk but we're going to explore that in the extra five minutes we have so to understand this Heap overflow essentially we've made a fake copy of the firmware just a random empty file and we filled it with a unique and predictable pattern if you think of your metasploid pattern create or pattern generate that's what we're doing here to find the the different offsets that we can control now this is an encrypted file so it does require The Salted underscore underscore encryption header it does check that and of course we changed the file signature size from 158 to anything over 190 we chose 999 here as an arbitrarily large value then we've set a break point before what we perceived would be the controlled execution in that F close function and what I want to draw your attention to is this Branch instruction so BLX is an unconditional branch in arm which will Branch to the R3 register why is that important well as you can see from the registers printed out here we control with our pattern data registers r0 R1 R3",
        "and R6 and R4 we control the pointer to",
        "our pattern data and that'll be really important when we talk about Rob later again we're not going to waste the time on that right now but just a little bit of understanding we ended up using this just for the segmentation fault and the forced reboot and that's what you heard when the door rebooted this ultimately was filed as our highest CVSs score of a 10.0 it is an unauthenticated full remote code execution on the device all right so Sam's going to take us home just by talking about the exploitation of this device how we turn these three vulnerabilities into something that actually impacts the physical hardware and again air quotes on malware right we don't write and release malware this is a proof of concept malware's a kind of an aggressive term there but this is just to demonstrate that we can actually control the doors functions and yeah and this was our last you know choose your opponent Venture where we could have gone around about this malware in two different ways probably most people that",
        "were actually trying to extract money would go the ransomware way you know demand money or Bitcoin to have access to your doors again that's pretty lame we ended up going with the Ghost in the Shell James Bond approach to gain you know secret hidden access to a facility and that's ended up what we and we did on this device but to do that we still had to actually control the physical locks and we'll have to dive into how the locks on these doors are actually handled and they're through the use of relays as you see here highlighted in red these are actually the relays which are just electrical switches when voltage is applied it either unlocks the switch or locks it and those are directly connected to the locks themselves through these output pins to actually find how the software controls these relays it was as simple as actually searching through the main system binary for relay and you can see that there is a individual function for on and off for each of these relays so to look at how they actually handle the unlocking of those relays you can look into them and it's even more simple where it's actually just an eye optical call with a file descriptor to the gpio pins that handle these relays parameter to either unlock or close and a zero indexed rate of which which relay to actually control so to create our malware we just took that exact code that pseudocode added it to a C file and then cross-compiled it for arm and we ran it on the device however you can see that there's a while loop here this is our brute force hackie method to actually keep the door unlocked when we first tried this ioctal call it would just instantly instantly re-lock and",
        "that was probably because there's some monitoring going on on the system where uh you know it wants to keep the door locked and we want to keep it open so calling it every millisecond actually seem to work pretty good to take precedence over any other monitoring processes so to kind of summarize what we've been doing up here on stage live hacking this device and then kind of show you a sneak preview of what we're going to do we first started off by having that command ejection in the host name however if you remember it only Triggers on reboot so we had to upload that fake firmware update file to cause a segmentation fault and cause a reboot then the command injection does indeed run on Startup and will connect to our C2 server which is our laptop for this case it could have been any machine and download more scripts that we'll use for further exploitation then it does indeed open a listener on the device which now will connect to to the reverse shell and then of course open the entire the door and uh",
        "this is what we hope to look like after you know before you do it real quick before you do it yeah so before we attempt to demo Gods with our final demo um we are going to put up a QR code at the end here for Q a we have a quick filming we have to do afterwards so if you have questions we won't be doing them live but you can come find us after or you can scan the QR code here if you want to ask any questions directly go ahead and take your chance now to do that while you're doing that I want to give a quick thanks before we show our final demo here to carrier to John and Josh Cario did an awesome job uh facilitating the disclosure with us to Mercury and making sure that these are all patched timely so thank you guys really appreciate the the hard work there and the vendor responsibility all right so let's go ahead and see if we can epically fail on stage Sam all right okay QR code's gone um here we go so we'll first of all go ahead and connect to that reverse shell on the device we're using socat here because it's a little nicer than netcat and as you can see we do actually now have a root shell and if I type",
        "who am I you can see we do have a root access to the device and obviously Steve can't get in so we'll run our super Elite Open Door hack and as you can hear the relay is triggered and we can now successfully walk through the door [Applause]",
        "like I said 40 minutes to watch Us open a door so yeah thank you everyone for coming uh please connect with us on social media LinkedIn Twitter afterwards if you have questions stick around we'll be around out in the hallway because there's another session coming up and thank you everyone so much for your time thank you [Applause] [Music] foreign",
        "[Music]"
    ],
    "KQb3gv4AgVg": [
        "[Music]",
        "before we get into a little bit about ourselves we'd like to First note that what we talk about here today is uh not affiliated with all of our Affiliated organizations and all the content today is just from me and Tara all right so a little introduction about me I graduated from Johns Hopkins University in Baltimore in 2020 right into the pandemic with a bachelors in East Asian studies economics and international studies in a minor in history um when I graduated I thought I really thought I was going to go into foreign policy and I spent a year brought in China so China was my focus um in the pandemic I started my Master's in public policy at the Harvard Kennedy School and I got I had some requirements to take care of my first year and I took a class with someone you might know Bruce Dyer foreign",
        "his talents are not as well in Virtual for the virtual space so I went back and T8 for him the following year and had the joy of being with him in person he brought toys to teach everyone about the dangers of bluetooth enabled devices I would love to tell that story later and that summer I needed an internship and I happened to apply for the Belfort Center research assistantship which is where I met Rob kanaki who is uh heading the project and the lovely Tara",
        "um I am passionate about Dunkin Donuts but I'm not here to say it's good coffee no one says that Dunkin Donuts is a lifestyle and I will die on this hill uh in my free time I love knitting and I love to travel very cool I would like before I introduce myself to tell you all that this is not just Victoria's first black hat talk it's not just her first cyber security talk it's her first talk ever so you can't go anywhere but down from here honestly this is amazing so congratulations to Victoria for one hell of a debut already hello my name is Tara wheeler it's a pleasure to be here with you all this afternoon um I am CEO of Red Queen Dynamics say compliance orchestration and security education firm um I'm a Fulbright scholar for the US and UK in cyber security and that is of course at Harvard Belfort Center where I met Victoria and began working on the aviation Lessons Learned project with Rob kanaki and Adam showstack so I had a great chance to get to uh to know Victoria work on this project and I guess the reason I'm here and the reason I love all of this especially risk management is I'm both a poker player and a pilot so this really hits home for me this this question this concept of how we manage risk in in organizations and I love knowing this I'm a giant risk nerd I guess for some reason or another so um what does really bring us kind of all together here here today well the question really is why are cyber incidents like plane crashes what I'd love to do is tell you a little bit about the history of this project and turn it over to Victoria to explain more about what we're doing today so for the last 30 or 40 years we've been using the analogy of the NTSB as a great way to describe how an investigation should yield a shared history of an incident a shared Narrative of it right one of the challenges that we face in cyber security is that we don't share history we don't produce sort of an industry-wide description of what happened during an incident and use that for future Lessons Learned and for future prevention so when Rob and Adam came together to uh to create this project they interviewed and then we interviewed over a hundred different experts in the area of how to take Aviation lessons and the process of doing an investigation at the NTSB and began asking what that would look like in cyber security in November of last year we released the learning from cyber incidents report which is over 100 Pages",
        "we definitely encourage you to not read it this second but certainly soon uh and learn a little bit more about what people think about how we can build a shared narrative in cyber security that takes those lessons from an industry that does it really really well when there's a plane crash we all pretty much understand why pretty quickly and then the next year some new regulations come out that all Pilots have to deal with well over the course of doing this project we realized it wasn't just that we were constantly facing Perpetual threats and attacks that people hadn't really figured out how to repeat and improve processes for prevention for we started to realize that",
        "well in cyber security this challenge of trying to keep information secret of trying to keep it close uh meant that we were perpetually fighting this uphill battle to get information disseminated to the industry into the community about how something happened and what we could do in future that wasn't just limited to some contractor failed to update the struts box and that's how Equifax happened right or somebody didn't push the SMB updates and that's how wannacry happened and so we wanted to ask ourselves why is cyber investigation and",
        "the production of those reports not like plane crashes well we don't maintain that shared history but also I think it's really important to look at how the aviation industry investigates and understands",
        "incidents and what they do to prevent things in future now one of the reasons I like Victoria is",
        "she has read every single document on the Max on the 737 Max crashes and every single investigative report that was produced by the NTSB and the FAA so report nerd would you like to tell us a little bit more about why and how the F the NTSB creates these kinds of reports and what we could learn from them sure I'll take mercy on you all and not drag you through the black hole I went into researching this but I did really enjoy myself um so happy to chat more if anyone is also interested in these kinds of things um but so a really great way to look at the difference that we have right now for the streamlined approach that the NTSB takes to Aviation incidents and the kind of haphazard approach we still haven't developed for cyber security is to look at the Boeing 737 Max and how the NTSB handled that so in 2018 The",
        "Lion Air flight first crashed into the uh Java sea after departing from Jakarta the recordings of the data tell us that over the course of the short flight the angle of attack sensors on the left and the right side of the plane were reporting different measurements and that forced the nose of the plane it triggered the MCAT system which forced the nose of the plane to go down and force the plane into a dive the pilots repeatedly counteracted the MCAT system to take control of the plane and bring the nose back up but we're after doing it successfully multiple times failed and the plane crashed the same thing happened in the Ethiopia flight where after takeoff the nodes of the plane dip too far down after the miscommunic miscalculation of the angle of attack from the left and right sensors the pallets tried to counteract it multiple times and finally failed and the plane crashed the FAA grounded the flight and the Indonesian and Ethiopian",
        "uh Transportation agencies connect their own reports because it was done in these incidents happen internationally and the NTSU was in a supporting role but the ntsb's final investigative report is really important here because it went into not only the details of the incidents themselves but Boeing's failure to account for how the MCAS system would interact with other alerts going on in the cockpit and have those alerts would distract pilots and keep them from responding as building had expected them to and fall to the FAA for failing to note The Faults and Boeing's initial assumptions in those in those safety procedures trying and failing to do the exact same thing again and again during the middle of an incident it's starting to sound very familiar but there's a difference here between how we handled those incidents in cyber security and how they began to handle it at the uh at NTSB and FAA so",
        "we've been handling cyber incidents well by generating a whole lot of reports basically one of the challenges we have is that we've gone from having government governmental reports to having Private Industry having think tanks generate this kind of information as well Sentinel one um the it's it's a laundry list of the folks that are here at this conference right these are people providing good information to the industry but there's a lack of coordination over all agreement all the time about what caused and creates these kinds of incidents so then we start getting additional committees involved with it how select uh or Senate select intelligence committee house oversight and reform science space and Technology I'm not sure how we fix this except by coming together and recognizing that there's a way to conduct an investigation and we don't mean incident response this isn't the moment where we're yanking cables out of the wall and everybody's trying to get a network back up right this is about after everyone's taken a breath we've gotten three four hours of sleep and had a chance to ask the question what happened and how do we prevent this again in future this is about investigating what happened and generating an understanding of why and how this kind of work needs to happen so what Victoria and Adam and I did over the course of the last six months is create a Playbook that lets city and state and National governments uh conduct an incident investigations",
        "um uh create an in-state investigations board and then conduct their own investigations now you might be asking the question don't we already have one of those don't we have a csrb and the answer is that at the same time that this report was getting generated the csrb at DHS was being created those the kinds of recommendations we made it looks an awful lot like the csrb was designed to serve a different function at DHS so we've retooled a little bit here to say instead there's a way for city state county tribal governments to",
        "run incident investigations that will start to create a massive information in the industry and how we need to start creating these kinds of boards is",
        "three phases of Investigation just like the NTSB does and who is this for I want you to imagine to Envision that a deputy city manager gets called into a mayor's office and told we just had a ransomware incident at the hospital we've got the patients back we've got the network back up again but you have a month to tell me what happened go conduct an investigation give me some kind of understanding about how we prevent this again in future that person in government is very unlikely to have ever had experience standing up a major cyber investigation this is the Playbook that shows them how to do it so Victoria is going to tell you a little bit more about what this looks like if only because she is the person who has read every NTSB report over the last 20 years and would like to tell you how to take some of those Lessons Learned and get them implemented into this Playbook so three phases of Investigation The Playbook itself is modeled after the ntsb's aviation investigations manual and I read it so you all don't have to the opening of the investigation is when the incidents happened and that's when the board convenes they decide on an initial an investigator in charge who's going to lead the technical team of the investigation and kind of serve as a guidepost throughout the entire investigation and they set the goals for the investigation and potentially invite other parties um other companies to contribute technical team members and act as parties to the investigation then we move into the technical investigation we separated the technical investigation from the review portion to create two separate teams so the technical investigation is taxed by is taught staffed by the technical team who are professionals who do this every single day who are some of the kinds of people who would respond to an initial incident and do the whole initial incident response and they are going to analyze reports that are coming out of the mitigation process and hopefully get their hands on Hardware also then those team members are now done and the phase moves into the Board review that's when the board members convene and they look at the report generated by the technical team and they make decisions on okay what are the facts that we all agree upon on this incident and what recommendations are we as a board going to come up with and propose to the community so that in the future events like this can be mitigated or at least the harm reduced by following these kinds of recommendations so who are these board members we broke this down into four kinds of people that you would want on a board the first being individuals these are cyber Security Experts who are well respected in the field and they have credibility",
        "separate from their Affiliated organizations a good way to think about it is if you're sitting in here you're subject to being drafted for this in future sorry sorry",
        "corporations that's because industry has",
        "immense power in the cyber security industry however we want to note that corporations who have a vested interest in the outcome of an investigation for example a corporation with softwares was used uh in the course of an attack those kinds of Corporations should not be served on the board and you should recuse themselves if they're already on the board of a review board sorry and we'll note too that there's a moment for parties who are interested in the investigation to submit information later just if you are the corporation or the industry that is or the the body that has contributed at least some of the technology that's being investigated there's a question of interest in that situation it's best to maintain it as as a disinterested aboard as possible all right next we have government agencies regulars how also play a big role in the cyber security community so they have a seat at the table um and they have important perspective to add but they shouldn't be the entire board they're just one piece of it and lastly academic organizations these",
        "kinds of organizations have credibility and will help the report after the fact become widespread so they'd be really useful who is a technical team like I said these are professionals who have the skill set to do the hardcore analogy analogy analysis of the incident they come up with a findings report that is then read by the board members who may not have a technical background and yet analogies are probably going to be one of the more powerful things they wield in the process of creating that report as I think we all know at this point so what we want to note here too is that that as we were writing this we realized something pretty fundamental I think the analogy I gave you earlier of the Deputy city manager being asked to produce a report is pretty you know exemplary of the situation most people find themselves in we I think as a as an industry as a community know at this point that people aren't going to do  about cyber security until they have to there's going to be a precipitating incident that causes a local or state government to set up a major cyber incident investigations board right at least the first one someone is going to have something dropped in their lap and they're not going to know what to do about it so the reason we have crisis mode in this Playbook and you'll see it in the Harvard Belfor report will be set out and it'll be in high highlighted text and in the markdown you'll see a little bit later on it's highlighted as well which you can all get a chance to eyeball edit and critique my markdown could use some improvement so crisis mode is small insets that tells you if you are someone who's never done this before with the absolute key takeaways are for instance when we talk about who's going to get put on a board and what the the qualities and the traits of a person who would get put on an investigations board are I give a quick shortcut in crisis mode and the quick shortcut is if you don't know who to put on a board make sure there are four people you're probably the government person already right for an individual go look at your local isaka chapters ISC chapters or b-sides because you're probably going to have one within 100 miles of you for academic organizations go to your local reasonably reputable college or university and ask the chair of the computer science department to either help or recommend someone inside the university this gives you that quick shortcut to find someone who can help you right for most people who've never done this it seems it seems a little bit um facile to just tell people you need to pick a couple people that aren't in government but the truth is many people who do this kind of Investigation inside a government it's never occurred to them to ask anyone outside the body that they're working in it wouldn't occur to them to go to anyone other than the I.T Department of the city that they're doing this investigation in it's incredibly important to make the recommendation to reach to outside expertise not only to connect with industry and provide that credibility via Academia but also make sure that industry can help with both resources and the kind of expertise that's usually found inside some of the most respected corporations in technology and information security so that's what crisis mode is and you'll see quick actions like do this here's your 10 actions to take here's the 10 questions to answer you need to ask five why's go backwards in time why why to avoid the single points of failure and the uh the the the root cause analysis mode of thinking people get into right that's what crisis mode is and that's part of the Playbook so what does this look like in action all right so take your example a big box retail store has recently been the victim of a point of sale attack we're not going to name names you can visualize for yourself what that big box retail store would be my husband's here and I'm just remembering about this Home Improvement project we have to do at home right now okay continue",
        "so the district manager is freaking out that there has been an attack he contacts a bunch of people the police finally someone routes him to the governor the governor turns the person next to them and says okay who should handle this Chief nerd Chief Information officer that's your job figure it out Chief Information officer crisis mode they have the Playbook and they start turning to the Chrysler sections of the Playbook we've drafted so the step one is they start to form a board they find the cyber security professional who will serve as the individual they find someone from industry who can serve on the board and they find someone from an academic organization",
        "next so the board is together they go and find the technical team after going to the it the all of the people on the board at this time go through their networks and they find respected technical professionals who can serve on the technical team and then we start the actual investigation in the review process the technical team does their analysis and they come up with the findings report the findings report is it handed over to the board for their review after a short time so the board members have had a time to review the findings report they convene and they come up with recommendations and they vote on the findings to include in their final report there's one thing to note right here it's incredibly important to find people for this technical team who can speak not nerd the the not nerd translation process that translation Matrix is amazingly important we almost misspoke a little earlier and use the word analogy a great deal but somebody on the technical team who can explain to State and local officials why and how something happened Beyond everybody's screens went red at the hospital or someone didn't patch a box because it's very easy in that moment for someone who doesn't understand a lot of the process to uh to say something and we'll see this reaction in government's a lot like well just mandate that they patch faster buddy if we could mandate that everybody patched faster nobody would be here right now we'd all be drinking right so the problem we have is that people don't necessarily understand how to translate in a way that will cause the correct action we've seen people who don't understand Aviation will uh declare that what needs to happen is immediately the 737 Max need to have the MCAS system ripped out well the the level of process failure and process adaptation that that causes as opposed to truly understanding how and a flawed MCAS system worked for 737 Max is",
        "it's facile again it's it's simplistic and we need people who don't think simplistically but can explain simply to people what's going on and how they can work on this this process if if your answer to why it happened is pointing a finger instead of the two magic words that tell you that you're talking to an expert it depends then you've got a situation where the technical findings are going to get buried under whatever politics are happening in that moment this is why this is so important to maintain a disinterested capable technical team and a board to provide a coherent response to what's happening and what has happened so the recommendations and findings need to be written in plain clear English or whatever language is local at that point to make sure people understand what happened why and most importantly how they can prevent it and that all needs to go into the final report and this final report",
        "should be readable for the public because we want it to be as public and widely accessible as possible we recommend hosting it or the dream scenario is at a toasted on a public library website like the Boston Public Library would host it so that everyone can access it it's not hidden on some company's website and desperately",
        "desperately desperately hope no link Rod happens and it's a stable document we do we love libraries for this for a lot of different reasons first of all libraries serve a whole lot more functions than simply checking out books as I think those of us who have seen the services being provided at libraries in our communities over the last couple of years can can recall at this point but also there's a neutrality to libraries that that is really important in this moment um the the kind of final report we're looking for has to focus in on the idea that there are multiple reasons why there are process failures and multiple places that you can fix that process failure for the future imagine for instance that instead of having us all recognize that solarwinds had a failure and again after more than a year and a half we don't have a coherent governmental report about what happened where why and how imagine that every",
        "report every kind of of cause and Analysis of a cyber security incident all boiled down to and in turn set the production server's password to solarwinds123 right the thing we're",
        "trying to to avoid is that that is a single answer and the thing we're trying to cause is for people to ask five why's behind that the first why is who let the intern have access to the production server the second question is what rules and compensating controls weren't in place that had that outcome right the why before that is what were the budgetary processes the",
        "the compliance processes and the lack of expertise or training that let those compensating controls or technical processes get put into place without someone catching it is there a lack of diverse thought among the people who were looking at these processes because if we boil every single incident down to well the intern did it or the contractor didn't hatch the struts box or any other form of single point of failure of root cause analysis we lose all the richness of what actually happened I think everyone here knows that every one of these incidents is complex is interesting is fascinating for those of us who who love looking into this stuff and understanding it I am",
        "I I love this field and as a student pilot I get to see every single year with updated regulations",
        "um in the far aims this is the Federal Aviation regulations in the airman's instruction manuals I get to see why and how regulations every single year get ticked up a little bit better and then I become personally responsible for knowing those every single year we've been talking about how this kind of work is",
        "it seems grinding but there's such a joy in it when you see people finally understanding what's happened and I recall that six months after wannacry happened the ncsc in the UK put out a really great report on wannacry what happened how it happened budgetary and process failures Geographic locations the names of the technologies that were used what was and wasn't updated the lack of skills and the lack of upskilling that caused it in specific locations it's a beautiful document if you ever get a chance to read it it is absolutely the kind of thing that we want to see come out of this process that's the kind of final report we want to see happen",
        "so so what does this mean for organizations responding to cyber incidents in the future what we hope happens is that organizations State local governments take this Playbook and set up their own mciib across the country so it'd be multiple boards investigating incidents that happen near them or importance to them and we developed this shared Lessons Learned narrative not just on like the big cyber security events but on the small ones and then we take those and we draw the lessons and we build on them and they spread throughout the community and we mitigate the Damage Done from these events we prevent them from happening in the future hopefully we've seen it's not just important to have those those incident investigation boards set up early although with crisis mode we understand at least the first one almost everywhere is going to be in crisis mode it's going to be it's going to be a precipitating incident instead of a thoughtfully planned out process but what we also really hope is going to happen is we hope that when we go back and research what caused What in in a historic incident in some of the more famous breaches that have occurred over time like for instance the OMB breach right um uh the the thing we're hoping is that when you go back and look for what happened and how you can prevent that particular kind of incident and future that there is a shared understanding of what happened right now it would be very difficult to get everybody in this room to agree on some of the most basic facts of the most famous cyber attacks that exist in the world and and that's the challenge that I think we're looking to address I've bumped up against this personally when trying to find out what happened when and where and some of the most major incidents in the world not Petra Wanna Cry stuxnet I've bumped into people who think it's okay to just have an opinion about what happened instead of going back and looking at it and then you go back and find that there's no information left anymore that the information that was hosted is gone that it got pulled behind a paywall a pretty famous one was the the broadcom Takeover of symantec's white papers it happened really quickly and it was put back up again but everyone was relying on a lot of those white papers from the awesome people that Symantec who'd done a lot of that white paper a lot of that serious research and it was just thought of as marketing materials the problem we're looking at is right now so much of our shared history in this industry is marketing materials that can go away at any time that's why libraries are awesome and that's why we want to see this kind of information available around the world and certainly at least in the United States all right so what we would love to do now is we would love to present not only the Belfor Center's write-up of this it's very pretty I am not a visual person but I hear that the visual layout on this is really great go for it uh take a look on not only um our site so you can also see it in a couple of the tweets we've shared today um and it's it's right there on Harvard's website but we would also love to share that for the next two years I Victoria and Adam showstack will be benevolently dictating over a GitHub project that exists out there for anyone to use this right here is the markdown version of that Playbook please submit pull requests Victoria",
        "will wield an iron Hammer we're considering having one forged it's going to be great and we'll find out what we can learn from the community about what doesn't doesn't work in setting up a board in a Playbook like this do you have any thoughts on that too please do it that's my thought I spent so long writing this I hope it lives on it's pretty awesome so yeah um none of this is ever going to be perfect right like we're never going to be able to to make this all the way perfect there's always going to be something going on right um the problem we see now is that there are still organizations as of last year 26 of the organizations that were vulnerable to wannacry in 2017 still are and I'm exhausted by that and I think a lot of people in this room probably are as well so we're never going to make this all the way perfect and I think for those of us who are currently in organizations anecdotally in the Fortune 500 companies or publicly listed companies I've been part of without naming names I would say anecdotally on average there are four separate reasonably important like medium level or above uh incident investigations occurring like ongoing incident response",
        "it happens all the time so you're not alone a lot of this stuff is perpetually happening and yet once we clean up the mess it's like we throw the trash out and forget that it ever happened we keep making the same messes again and again and I want people to be able to learn from that this isn't going to get any better too we're now seeing even more sophisticated attacks um forgive me because I'm going to say AI enabled credential stuffing which has a technical meaning I swear I'm not using it in a way that's going to be marketing but when I talk about uh this right here I use it in its technical term we're using the statistical um analysis of publicly available data to more effectively target phishing attacks it's automated spear phishing at scale and that's really frightening to me this is the kind of stuff we have to learn lessons about in advance otherwise I mean we're going to end up with the same kinds of situations we found ourselves in before if you do what you did you get what you got right so anybody can be ready for a major cyber incident investigation everybody should be ready for it and your community is going to need this sooner or later I think in the last two hours I've gotten three different emails just out of the middle of nowhere of people who need help with incident response a ransomware investigation like your LinkedIn inboxes are all filling up with the same thing too right there needs to be more people who know how to go and and serve themselves from this body of knowledge that we can create and if it exists in public on Library websites we don't have to worry about it disappearing behind paywalls this is why we care this much about it because it's not going to get less complicated but at least we can start to predict what the future is going to look like so um thank you so very much it's been incredibly wonderful to be here before you got something to say thank you so much uh to kick off my cats I was Secure one um I'm so excited to be here and so excited to see all of your requests pull requests on that GitHub document can we get one last Applause for Victoria first talk ever [Applause]",
        "[Music]",
        "[Music]"
    ],
    "Qgu5CGV-4JY": [
        "[Music]",
        "so thank you all for coming out this morning today I'm going to be presenting to you the results of our group's latest research effort which was to develop memory forensics techniques to let us automatically detect and analyze malware that monitors Hardware devices",
        "and if you work in the incident response field you likely see this malware all the time we see this targeted at our clients on a daily basis and if you read the reports from other security vendors it's pretty much Universal that when you have a motivated threat group targeting an organization whether that's a research group inside the organization whether it's Executives whether it's down to just an individual person the malware that gets deployed on those machines are going to leverage access to Hardware devices for truly sensitive information everything that's typed on the keyboard all of the activity with the mouse you will see the microphones being sampled and then audio shipped out the video cameras are going to be recorded and whether that's still pictures or video that's produced off of it all that gets sent back to those attackers and so if you're an individual and you're targeted by a hostile foreign Nation their intelligent service you probably don't want everything you do within five feet of your laptop shift shift out to those people so that they can take advantage of it and certainly if you're trying to keep secrets within your your organization having all of that monitored across your Fleet is going to make that very difficult and then so what we wanted to do was get it to where our memory forensics algorithms are tools like volatility could just automatically find these rip these out of memory and make it where attackers know if they're going to use these types of techniques they're going to be caught rather quickly but unfortunately we knew from our existing work in our existing research that the algorithms that were present and available before our work were either outdated so they didn't support things like Windows 10 or the latest Mac they were incomplete so we knew that malware could try variations on existing techniques that wouldn't be caught and then some of them with the newer ways that malware Works were just non-existent so we could certainly figure these out on our own through reverse engineering and things like that that's how we knew we were missing stuff but we want to be able to automate things at scale so we need to really understand how it works so this turned into a pretty significant research project it took us two to three months to get with a lot of reverse engineering source code analysis get it working but we wanted to do a very thorough job so we started at the beginning by taking every malware report we had internally as well as all the ones that we could get online we made a list of the apis and the subsystems that process malware will abuse to get access to the hardware devices we then spent many many nights and weekends in Ida Pro and other tools figuring out how those apis are implemented on the system we then developed proof-of-concept applications so exactly what we saw the malware doing we wanted to implement that on our own in a controlled manner so we knew that our tools were working we want to make it where we truly never missed this malware in the wild going forward and then we're going to develop new volatility plugins so that like I said we can do this in an automated way and if you're in this talk you're probably interested in memory forensics or probably know what it means but if you're not too familiar with it the reason memory forensics is so important and we spend so much time working on it is when you look at modern attacks and modern threats the payloads that are used the tool sets that are launched the really important parts or in some case all the parts are memory only so what that means is nothing is written out to disk if you reboot that machine all your forensics evidence goes away there's nothing to look at and as you might imagine all the data that's sent from The Operators is encrypted on the network so even if you're a place that has full pcap that doesn't really help right so we want to be able to get a sample of memory off a machine and then deeply analyze it to find this type of malware and this type of malware like I said is used all the times there's other black hat talks throughout the week where people are showing off their new memory only Frameworks and such but this quote that I have at the bottom or this screenshot that I have highlighted it was perfect timing this literally came out when I was going through the slides last week and I added it in Microsoft essentially burned this company out of Australia Australia that sells commercial spyware and is used by governments across the world and it was really interesting Microsoft just destroyed them like reversed it down to every bit all the capabilities it had but in the beginning you see what I have highlighted in red all the capabilities of that tool set that they found and published the one were memory only so it was an example from literally a week ago when you're targeted by motivated actors you're going to get hit with memory only malware",
        "so again we looked at Windows Linux and Mac we started with Windows because we figured it would take the longest to do so that's what I'm going to go through first we focused our research on Windows 10. this is what I know not everyone updates right away and Windows XP lives on forever but we do see Windows 10 in most of our investigations now so we wanted to make sure our algorithms were up to date for that so we went all the way back to the first stable versions of Windows 10 through the latest stable release back in March we had our memory collection tools so we could do our research and then also save out memory samples with those proof of Concepts loaded so that going forward we know that our tools always work",
        "the first API that we looked at that malware abuses is set Windows hook ex this has been abused by malware for years and years on Windows the idea of it and the reason it gets abused so much is it's extremely powerful all your malware has to do is call one function in most cases when it calls that function it's going to pass in the path to a dll on disk that it once injected into every process and then the malware doesn't have to do anything after that Windows does all the hard work of every time a process starts that dll gets loaded once an event is triggered it does all the hard work of making sure the Callback that that dll registers gets triggered so every time a key is pressed every time a mouse is moved and so on and so again this makes it very nice for malware if you're familiar with code injection with like create remote thread virtual Alec ex the malware doesn't have to do any of that the operating system does it for it so inside of volatility we have a plugin called message hooks that's been around for years and years but it was never never properly updated for Windows 10. and when we really studied the set Windows hook ex usages out in the wild we realized there were some variations on it that we weren't detecting and one of them that I'll talk about I actually didn't know don't know anyone in the field who knew about it before um so it's something that wasn't known but we want to detect all of it so this is a look at set Windows hook ex the parameters that the malware is going to set the first one is you say which device you want to monitor keyboard mouse and so on and then the last two things that you have to send in are in most cases you're going to send the path to a dll but we'll see you don't have to do that and then the last parameter the thread ID says if you want to monitor a specific thread so basically if you want to monitor just one application or if you want to hook all processes and applications for a specific user and then again you send in what you want to monitor where your code is that's going to monitor it and then Windows takes care of it for you",
        "this is the proof of concept that we developed for this technique you can see that we have a dll called fakedll.dlo we have a function that's going to get registered and called every time the mouse is used we're calling set Windows hook ex with the path to that dll and for the last parameter we're setting zero which is the same thing as null so this is going to affect every process on that user's desktop at the bottom what we're seeing is this is the memory sample that we have once our proof of concept was loaded and the way it works is you launch this malware and then from then on anytime the mouse is moved in an application in this case the dll is going to get loaded so we ran a notepad we open a notepad instance move the mouse inside of it took the memory sample and as we would expect that notepad process now has our dll loaded by the operating system but this isn't enough to automatically detect the malware there's going to be dozens of dlls in most processes so you can't just look at a dll list we just do this here to make sure that our back door loaded correctly",
        "sorry so to actually detect these hooks we have to examine the GUI subsystem of Windows as you might imagine this is closed source so when we say examine it means lots of time reverse engineering the uh the win32k subsystem in the kernel so at a very high level when you log into a Windows system that will create a session which creates a Windows station and then what you're used to is you use one or more desktops the one on the local machine you can RDP into a system and associated with that desktops are two things we need to track down the first one is the atom table which is basically a set of strings associated with what's occurring on that desktop in this case there's going to be a string for the full path to the dll used to implement the hook and then you can see down in the bottom in the Black Box there's the set of hooks remember the name of the API is set Windows hook ex so this is going to store information on all the applications that are monitoring that desktop",
        "so like I said initially the message hooks plugin was very inconsistent in most case produced no results against windows 10. so the first thing we had to do was reverse out all the offsets for the different Windows 10 versions but then we noticed that when we did that we weren't getting the path to the dll back so remember we have our hook what to know which dll is actually implementing it we have to look in the atoms table this was super frustrating because it worked on literally none of the samples that we created at first so we were like okay we have to go back to the drawing board fast forward many hours in Ida Pro later and this is what you're seeing on the bottom of the slide so for every version of Windows going back to XP until before 10 you had this thing called the user atom table handle that was your table of strings volatility knew how to find it and then starting in Windows 10 it looks like Microsoft just re-implemented that whole subsystem so we had to go through and Ida figure that out and now we have this other table that we can inspect so the message hooks plugin now branches right it knows if it's looking at Windows 7 or Windows 10 and we get those paths back so now just by running the plugin even on the latest versions of Windows 10 you get the dll placing the hook you get the offset inside of the dll where that hook is and if you're familiar with volatility you know you can just extract it out at that point and start reversing it",
        "the second variation of set Windows hook ex and this is the one that is kind of mind-blowing and like I said once once we figured out I pulled a bunch of people that I would consider experts and like Windows internals and malware no one knew this was possible so the idea is it only works for the low level keyboard hook so you're hooking the keyboard to low level you are going to get every keystroke but when you call set Windows hook ex you say I'm not giving you a path to a dll but I still want to hook every process across the desktop which makes literally no sense so you call it like you see at the top here you give the dll that you reference is your own executable which is obviously not something that can be injected into other processes and we found this documentation it wasn't incredibly easy to find but we eventually found what you see at the bottom of the slide on the msdn and this is where it gets really crazy so what Microsoft is saying is if you want to have essentially key log every process on the system you don't have to put any code into those processes you don't have to hook those process is at all you just have your own process running and then Microsoft or Windows is going to do all the hard work to send your code to keystrokes anyway so if you're used to doing memory forensics or live forensics on a machine you kind of understand if a process is being key logged if a process has malicious actions focused on it you can extract the memory of that process you can debug that process and find the malware in this case all of the processes that are being key logged have literally zero anything you can look at it's all in this other process on the system so I don't know of any where else this happens it's very strange so we wanted to be able to make sure we could detect it and this is something where volatility kind of had support before like once we got it working on Windows 10 but the output was not particularly useful so what we're seeing three blocks of output here you can see there's spaces between them but the first one is the global information so volatility is saying hey there's this low-level keyboard hook that's hooking every thread it tells us the address of where that is but it has no idea which process it's in which is fairly useless right you say you have 50 processes on a desktop you're not going to go to that address in 50 different processes and look for malicious code so we went back to reversing for a while and we figured out that on a per thread basis which When I Say thread just think of process so on a per thread basis there's a flag that set that is set if that process set the hook so what you're seeing in the second two blocks is for the Powershell one there's a false printed and then for the GUI tester all process there's a true printed message hooks didn't print that before that's us that's us parsing that flag to say hey there's a global hook it's not Powershell that said it it's the GUI tester all which you'll see quite a lot because that was our proof of concept application so again this was a really strange Edge case it's key logging on the system and memory forensics knew nothing about it before",
        "then the last variation of set Windows hook ex is again you pick whichever device you want to monitor this one isn't limited to just the keyboard you can send it either a path to a dll or you can send it no like before but you're going to Target a specific thread which again is a process so if you just want to key log the web browser the password manager whatever it might be you can pick that and then you don't have your code going into every process there was literally zero documentation about this online so again it was more time in Idaho Pro so off of the threads so what we saw on two slides ago where we saw a Powershell and GUI tester all inside of the data structure in memory that represents that there's another kind of per thread atom table atom tables and quotes because it's not really a generic atom table it just stores the dlls associated with that thread but once we were figured that out we were able to update the plugin to then find this hook variation so like I said before this type of hook variation was not known to volatility at all when we first got it working when we figured out we had to go deeper into the thread we have the output that you see up top and the module 7 which is obviously not a path to a dll what that is saying is I know that the index into the string table is seven but I don't know how to find the string so then we figured out about that per thread atom table and you can see the updated output at the bottom which we're still able to recover the dll path so now as far as we know no matter how set Windows hooky X is used to key log systems we can automatically find it",
        "the second API on Windows that we looked at was is called register raw input devices this is another way to perform key logging a lot of your EDR systems will look for calls to set Windows hook ex obviously they're not perfect and I'm well aware that can be bypassed but they do make an effort so malware started using this API instead to achieve essentially the same goals when you call this API there's some constants you need to use so you basically just say I want to hook everything and I'm interested in the keyboard it's a little different than just passing a path to a dll though in this case instead you should tell it which window you want to Target",
        "so if you remember our picture from before we got down to the desktop of the user then we needed to look at the atom tables and the hooks to figure it out this is a bit different we're not reusing those same data structures and then what you see at the bottom is part of our proof of concept code we have our callback function or our hooking function which is called wnd proc we're calling register class and then create Windows with that function Associated so what that means is every time a message is passed to that window our function is going to be called and once our keylogger is active you might guess the message information is going going to include the keys that were typed on the keyboard so this is a partial part of our implementation of that callback function you can see for WM create when a window is created we're going to say register raw input devices so from then on every time a window is created on the machine you open Chrome you create a new tab any application creating Windows we're automatically going to get to hook it and then when that window starts producing input which again is someone typing on the keyboard we can read out that key and log it or send it across the network there was no memory forensic support for this before so we figured out that off of those same data structures we were getting the thread and process information there was a second set of tables that we could examine and it would tell us all the processes that had used that API and then this is a brand new plugin called raw input device monitors that we wrote to implement what we were just talking about and as you can see it tells us on the desktop in the GUI tester all process and our proof of concept the name of the window was my hidden window just so it would stand out in the output we have the address where that hook is and the process ID again we can extract that executable out of memory and then really start to figure out what happened",
        "so we targeted those two functions for Windows the next thing we looked at was Linux we deal with Linux investigations all the time especially in the cloud and something we still see that works which is rather unfortunate is abuse of the debugging facilities so on Linux you have the p-trace facility this is what lets processes do debugging on Linux and then you have S Trace which is a really popular tool to trace system calls that applications make and if you're not familiar with system calls anytime you want to interact with Hardware the network and other process you have to make a system call to do it so obviously by monitoring system calls you can monitor any hardware device whether that's a keyboard mic video camera and so on you can completely disable this feature because it's such a security threat but as you're probably aware security patches aren't universally applied people don't configure things right so we still see this being abused in the wild",
        "from a detection standpoint there's two variations we wanted to be able to detect in our plugins with this and this what we're seeing is direct debugging so if you start a process under a debugger which in this case we're starting the cat process under GDB so cat has started under GDB which is the debugger you can see the process IDs are 778 and 780 and then we wrote a new plugin called Linux process P Trace which is going to tell you all the processes that are being debugged and you can see in the output here I have it highlighted we get our GDB and our cat process the flags for cat is p Trace which tells you that it's being traced and then you can see for GDB it's tracing PID 780 which is cat so we automatically report that interaction between the processes",
        "now an extremely dangerous form we see of this quite often in the field is using the debug facilities to monitor the SSH Daemon so what we're seeing here is we we're on a Linux system the SSH Daemon is running with PID 436 and then we're using S tray s Trace which obviously you have to be root to debug that running SSH Daemon so we're not restarting the Daemon it's not like people who are currently logged in are going to get kicked out we are just dynamically attaching to that running process so once that was running in one terminal I opened the second terminal and I SSH into that machine and what you're seeing is me logging in so the password was secret password exclamation point that gets read directly by the debugger because it in order for the process the SSH process to communicate that information it's going to go through a system call so you steal the password right away then what you see is me typing the netstat command one letter at a time that gets logged you see where netstat is run and then if you're familiar with how netstat works it's going to read some files under procnet to figure out what connections are active and so on so you can see how dangerous this is right if you use SSH Keys you'll get a little reprieve from it but if you're logging with passwords and you have this type of malware your passwords are getting logged in real time every time you log in as well as all the commands you run now making this infinitely worse as you can imagine if ransomware automated this situation with using the passwords and then performing lateral movement and then still not good but not as bad as ransomware is in many environments you you'll have to move through multiple Linux servers to get to your final destination so you go through those jump boxes logging in each time so you can imagine if box one is compromised with malware like this and it gets the password that you logged in with then you go to box two which might be your internal credentials the fact that you're logging into that remote machine is going to be key logged as well and no matter how many hops you're using to try to be secure the malware is just getting access to that data all along the way so this is definitely something we want to be able to detect so that same Linux process P Trace plugin we wrote to cgdb and Cat interacting is going to work for this as well if you remember and it's in the first line of the plugin our SSH Daemon was PID 436. you can see it's listed here and then it's p traced and seized you then see I'm going to skip the SS Trace process for a second you then see more sshd processes those are the children processes that are spawned to handle when someone logs in and then once you successfully authenticate bash or whichever shell you use will get spawned and you can see that's being debugged also so then if we look at the the s-trace process we see it's 11 27 and the tracing column has all the pids that it's attacking right or that it's monitoring and then if we have many SSH sessions going on like on a real server the amount of pids is just going to go on forever and then just if you're not familiar with Linux what sees means it's actually really important in the output that means a process was running and a debugger attached to it while it was still active or when a process started it's basically a victim from the start because its parent process was being debugged so it's definitely something that we want to key in on",
        "another place we looked in Linux was input events so this is a really handy feature for legitimate uses it's pretty cool what it makes available but it also gets abused by malware just like everything else so the way this works is if you look in the dev input bypass folder on a Linux machine where this is enabled which if you have like Ubuntu Debian any normal distro it's going to be there and basically it makes a Sim link file out to that physical device so in this case we can see that the keyboard is Sim link to event zero and there's an API you can call that is it's literally like 10 lines of code to read this device constantly and pull that device and then get anything sent to it which it's the keyboard so you're going to be sending keystrokes to it so we wrote a new plugin to detect processes that were using this subsystem it's called Linux input event input events and you're seeing the output here so one thing to be aware of is the login Daemon from systemd is going to use this that's legitimate right it's monitoring your keyboard so you can log into the system so that's expected but then we loaded we didn't really write our own proof of concept for this one there's a project called log keys on GitHub that's like a proof of concept for abusing this subsystem so we loaded that in our VM got the memory sample and then you can see we are reporting it so in a real investigation it would be as simple as filtering out the system Daemon login process which is like I said gonna access your keys so you can log in and then anything else is definitely suspect",
        "foreign",
        "the next thing we looked at is a feature of Linux that is just mind-blowingly painful from a security perspective so I tried to highlight in the slide just how ridiculous this is so the idea is you have an in and out control call which is a subsystem it exists on Windows and Mac and every other operating system where code so code running in an application can ask a driver to do something for it because you can imagine your process can't just go read the file system or send raw packets so you can use this ability to ask the more privileged driver to do something for you so for whatever reason that doesn't make any sense Linux has one of these requests that you can make that says hey for another terminal that's not mine so someone else logged into the machine I want to inject a character into their terminals input stream which translated from Linux terms means I want to fake keystrokes for them which is like mind-blowingly crazy right so when you Google this instead of getting any documentation on it the first 10 links are about all the vulnerabilities that have been caused by this all of the attacks that were propagated by this and finally open BSD removed it so they didn't even try for backwards compatibility if you make that call on openbsd the call is going to fail but the Linux developers refuse to do it so especially in those shared environments this is a major issue",
        "and what's cool from a like a red team perspective is you can use this for a dead simple key logger what you're seeing on the left is the entire source code for our proof of concept we wrote it in Python so it's a little easier to understand what you do is you open a handle to another user's terminal you're then going to set Raw on it which means you want to deal with the raw characters going in and then you're going to read from that terminal right so if you read from someone's terminal and they type a key you're basically going to steal that key out that would be bad because it the user would notice their typing and nothing's happening and nothing's showing up on the screen so what you do is you read the latest character they typed and then you use which you can see in the ioctl call the last thing that's highlighted in the red box we're making that call to say hey take the character I just read and retype it for the user so even if you're a super fast typer you're not going to notice that your character is being stolen and replayed back and forth but we can perfectly key log all of their interactions through SSH or through a physical keyboard on a Linux machine they're getting key log the whole time and they will never notice the difference so again we wanted to be able to detect this in an automated fashion",
        "so we wrote a plug-in called Linux TTY handles and what we're seeing here is like like I said our proof of Concepts in Python so we're catching the python process that's doing this and the way our detection works and you'll see it if you read the plug-in source code is we look at the console that our process was spawned on so which user it was spawn for and then we see if it has an open handle to another process and at first we weren't sure like maybe this would have false positives or something like that we ran it over the couple hundred memory samples we had easy access to from the wild and everything there wasn't one false positive because why would you ever you know legitimately want to spy on someone else's terminal so it's a pretty very it's a very nice indicator that something's wrong and then I just ran the PSA ux plugin which shows you the command line arguments because again for the process name we're just seeing python but then if you look at the arguments it's another project on GitHub called SSH keylogger that abuses this facility that that one is kind of complex we we just broke down the functionality so it fit on a slide but we're still key logging there",
        "and then the last thing we looked at was Mac on Mac you have what are called event Taps and what this means is you can tap the hardware devices so you can tap the keyboard tap the mouse whatever it is you want to Target it's somewhat similar to set Windows hook EX in that you tell it the function you want to be called when a key is pressed so that you can steal it but this is built into Mac there's a cool tool from Patrick Wardle one of his free security tools that will monitor the live system for when these are registered so I run this on my laptop 24 7 because these are very dangerous but we want to be able to detect it from the memory forensics perspective as well",
        "for this proof of concept we used another we took another project from GitHub and modified it to work well in our environment I have the link down here at the bottom to it but what we're doing here is we're getting set up to call the create tap function we're saying that we want to monitor the keyboard and that we want to monitor the flags and the flag the flags are important because that's going to tell you is caps lock one is shift key being held down because if you're trying to steal credentials you need to know that specific information so once our event tab is created we're going to add it to a run Loop which is a very technical part of Mac that just says I want to hook every process so just from this very simple code our keylogger is going to be put into every process that code will be placed into there and then from then on we'll get every keystroke possible now reverse engineering this what was summarized in like two minutes on that slide was extremely difficult one of the most painful reversing tasks I've taken on because Mac works very differently than Windows or Linux Mac in its xnu kernel tries to be like a micro kernel which if you're not familiar with that says the kernel should only do the bare minimal minimum so what's in that privileged space that can access all the hardware should be very very small and this is good from a security perspective but it makes memory of forensics and reversing very strange because instead of being able to just look in the kernel and the process you're analyzing you have to then go look at some other process that's actually doing the hard work and there's no equivalent to that in any other operating system that we deal with so after a good bit of reversing we figured out that when you call the CG event tab create function inside of your process is going to be the Skylight Library so that's what's going to implement a lot of the GUI stuff and then we figured out that that eventually goes to CG replace tab and then inside the kernel all that does it's like two lines of code in either or just a few instructions all it does is call Mac message inside the kernel with a hard-coded value so you're reversing and you have literally no idea what that means it's completely useless to look at that so we had to figure out where is that actually reaching on the other end so then we figured out in the Skylight library that for every underscore CG function which is the one that the processes are going to call so like the key loggers are going to use inside that same library is a companion function that starts with underscore X and as soon as we figured that out which was multiple days later it was very easy to do it because you see the function that's being called and you see the Handler so with that we wrote a plug-in that can see these calls going into Windows server once the Windows server has that registered then every time a key is pressed or the mouse is used whatever it is that the malware was interested in it's going to pass it back through the kernel back to whichever process is doing the key logger so we then realized that was kind of interesting because there's two places we can look to find this type of malware we can look inside the key logger process it's going to have the malicious function it's going to have information on how it registered it hook it's hooked and then we can also look at the Windows Server process just to get a global list of all of the key loggers",
        "so instead of showing you assembly I use the decompiler for a quick view but we realized when we found the correct function that X plays tap what happens is memory is allocated I named it cgx event tap because we figured out that's what the data structure was when we were in Ida and then you can see once that new data structure is created it's pointed to a global variable called cgx event tap Master list and then that Master list is getting pointed to the new tab and if you're familiar with programming that's how linked lists are set up and the plugin was straightforward at that point so we have a new plugin called Mac event Taps it looks inside of the Windows Server process it finds this event tap Master list and then it just prints out all the entries and this is another one where on a clean system you shouldn't have any key loggers active or things monitoring other Hardware devices why would you so you can see in this case the plugins reporting the fact that we found a key logger the PID and then what it's looking for",
        "so in conclusion we did a pretty thorough analysis on all the malware that will monitor Hardware devices and steal all the data I mentioned it before but if you came in late and I think we were just kind of talking on the side besides the slides where you have some pictures and some data I think they published tomorrow morning you'll have a copy of these slides as well as a white paper that turned out to be like 35 pages of all the Ida screenshots all the really technical details so if you want the full Deep dive on anything I talked about check out the white paper when it goes online",
        "so thank you all for coming",
        "[Music]",
        "[Music]"
    ],
    "e6oegr3cl4U": [
        "[Music]",
        "welcome to my talk the container on Windows we escaped The Silo in this talk I'm going to demonstrate our malicious Windows container can impact the host it is running on my name is Iran Segal I've been in the cyber security field for over seven years currently I'm a research team lead in safe breach Labs my experience involved vulnerability research on Windows and weather devices",
        "so I'm going to start with a background of Windows process isolated containers then I'll continue to how to gain anti-system inside of the container after again the empty system I'll show the method I use in order to find two vulnerabilities that can impact the host after that I'll show a demo containing chain of vulnerabilities and we will finish with the Q a so the goal of the research is to find what is the impact of an attacker crafted Windows container on the host it is running on I chose this research because containers are everywhere this attack Vector is a real old one and reverse engineering Windows kernel is fun so let's deep dive into Windows containers",
        "containers are similar to Virtual machines each container is Created from a container image which contains all the dependencies for the container for",
        "example the application that will it will run the file system or registry and",
        "the configurations of the OS container image contains all the dependencies therefore it's easy to manage and deploy like VMS",
        "but in Windows it is possible to deploy the containers via two methods which defines the degree of the isolation process isolated containers and hyperly",
        "isolated containers",
        "hypermic isolated containers are very similar to Virtual machines they have their own kernel and they communicate over the hyper-v of windows",
        "is the container can't interact directly with the container with the host it has to go over the hyper-v interface",
        "therefore the most secure but it comes with computation and overhead",
        "process isolated containers are similar to The Linux containers the entire container runs from the user mode but process isolated containers are interact directly with the kernel and are isolated from the host via multiple aspects",
        "so",
        "yeah but in order to validate that the",
        "container won't be able to impact the host there are few mitigations in the kernel that violates it for example it prevents loading driver from the container to the house to the kernel in this presentation I'm going to focus only on process isolated containers",
        "so when we are running a task list inside windows container we see lots of system processors which are related to the OS itself unlikely not which doesn't contain system processes inside the container these differences between the windows container and the layer container are because of the architecture of the kernel itself",
        "both Linux and windows containers are running from the user mode only in order to validate that the container can impact impact the host",
        "Linux container is monolithic therefore all its basic functionality is implemented in the kernel itself plan like Windows which some of its functionality is implemented in the user mode while other is implemented in the kernel therefore Windows containers contain Services System services such as SVC host",
        "so let's deep dive into how process isolated containers are implemented",
        "there are two parts for Windows containers the engine which manage all the containers for example Docker container and the OS part the windows part which responsible for the isolation isolating the container from The Host",
        "I'm gonna Focus only on the Windows part",
        "when a new windows container begins it creates an environment request for the container such as object namespace file system job object and create the processes that are running inside of the container",
        "Windows container isolation is separated into three parts job object namespaces and layers",
        "this stock I'm going to focus on bypassing the candle isolation of the job object so let's understand what is a job object job objects were created in Windows a long long time ago to Google processes as a single unit and manage the resources for example CPU time memory time and limit CR memory limits and so on but in order to support isolation as well the job object is required to be converted into Asylum",
        "Asylum provide basic isolation",
        "but it is not enough for containers which which require much more so in order to have all these capabilities this Styler have to be converted into server Asylum",
        "so any server Siler is also a silo",
        "we converted our Silo to server Silo which support redirection of resources now we can redirect to resources for example registry Network stock and object manager to use resources from the",
        "container image not from the host",
        "but this isolation is not enough",
        "as I said before the kernel requires to mitigate dangerous systems for example a",
        "load driver so if it was possible to do to load driver directly from the container it wasn't it could not be that isolated and the container could have escaped so some validations were added to the content to the kernel and validate that if the context of the thread that did the ciscal is inside of the container it will block the request and won't load the driver",
        "as you can see here in the screenshot so let's deep dive into this mechanism so when the kernel need to detect if the current process is isolated such as in a container it checks for Server Silo in the e-thread or E process struct",
        "which are the structs in the Canon that represent the threads and processes",
        "the kernel need to check all the job objects which attach to the ethread and E process",
        "struct in order to validate that because it is possible to attach multiple job objects to a single thread or process",
        "another example of a flow in the kernel which required to validate if the process that did the ciscal is inside of the container or not is process list in this flow the kernel just skips the processes that are outside of the container and because of that when a process inside of the container that a process Lays it gets only the processes which are inside of the container",
        "so after we understood how containers work let's gain empty system inside of the container",
        "when running Docker run command with user flag we can Define the user that the container will start for example container user which is a weak user I",
        "would have expected the container to run as weak user but as you can see on the slide some processors inside of the container are running a system",
        "the only process running as a container user is CMD that we started it means",
        "that the container can communicate with processes with system permissions and",
        "more interestingly these processes are loaded from the container image itself that we can control so no matter what the user flag was indicated it means that we can gain system permissions",
        "so let's understand how to use this discovery and gaining real system permissions",
        "in order to craft a container image that will run a system always we can follow four simple steps first con start the container in our lab with system permissions and then we will create a service that will run a system start it and convert",
        "the container into container image that it will be possible to deploy it again",
        "zero I showed you is not the only way we can gain system permissions via multiple ways and I'm sure there are even more than the ones that are showed here because we control the image so we can override system 32 executables that are loaded from the container startup use dll side loading modify Windows configuration changing the registry and even changing the permissions of the container user that we are starting",
        "so we gain system permissions inside the container but we can't do anything we want on the host because we are still isolated and we can do anything we want with this system so in order to understand how to break the isolation we need to learn about two past vulnerabilities of container Escape",
        "vulnerability represents a method for",
        "finding a vulnerability in containers",
        "the first method is to look for apis that Microsoft just forgot to block unit 42 found the vulnerability in object manager symbolically the LED a process inside of the container access any hard drive on the host which means that the container can write arbitrary files and control the file system",
        "the second method is to try to bypass Microsoft mitigations",
        "for sure found a way to bypass the kernel validation of the server silo by creating a new style object which is not a cell Asylum Microsoft added the support for containers after most of the kernel apis were written therefore I chose to look for this first method for looking for",
        "apis with Microsoft just forgot to block",
        "foreign I'll focus on vulnerable fiscals but",
        "there are over 500 CS cards and each one of them is huge so I had to find better patterns to look for so as I said before it has to be a Cisco and the second very check it that there are no validations of isolation this means that Microsoft possibly forgot to add them the third one is tricky checking administrator privileges",
        "if the Cisco have admin privilege requires admin privileges it means that the impact of the Cisco is high which means that we can impact the host drastically it can be a major inflict or",
        "it can impact the host in a way that it won't boot again so I thought about writing escape to validate that but it was easy to do it manually so I didn't have to after I built this recipe my life become much easier and I began to find vulnerable assist goals",
        "a quick trivia and the first function that took my my eye was anti-quare system information",
        "this function contains huge switch case",
        "over the enum which contains about 200",
        "options it's not possible to reverse it manually luckily I had symbols so I",
        "could choose only the interesting enum values and focus on them so I wrote a small code the trigger only the interesting ones and I found an interesting result so when I call this this call with the enum value of CIS handle information it",
        "returned to me a list of all the handles and the other sets of objects in the kernel itself and all the processes on the hospital which means that we can see process ideas of other containers and processes",
        "that are running on the host but it is not possible to use these handles or other cells because we can't open process to a process which outside of the container or duplicate the handle of him so it is a minor in folic so we can get all the process IDs of all the processes on the host but I want much more so I continue to learn addition is this call I found was a anti-system debug control",
        "anti-system debug control is similar to the previous one it's also I have multiple options depend on the enum value I saw that this function called multiple interesting functions such as enable kernel debugger but all these options",
        "were blocked and only if the current",
        "debugger is enabled sorry only if it's",
        "disabled the only two options that on a clean windows machine will work are dump user",
        "mode which won't give me any actual value because I need an open handle to it and kernel dump which definitely will",
        "do the work so in order to do a candle dump from the container I need to fill this truck since the bug life dump control which contains two important",
        "parameters handle to a file in the container it's easy and flags for dump and Page",
        "control which defines how the dump will look like and what it will contain I took a source code from the internet that triggered the camera dump I change it a bit and managed to call Acura Dam to do a counter dump and read it from inside the container",
        "so let's look about what we've done",
        "and the flags the flags were undocumented and the ones that I found listed here the interesting one is dump user space memory and the hyper-v pages",
        "I attach a VM with the kernel debugger and try to do the dump with the VM and it worked I managed to dump all user mode hyper-v and all the flags that I found but on a clean windows machine",
        "all the flags work except one dumping the user mode and so if the kernel debugger is enabled we can dump LS which contains all the processes and all the passwords in Windows yeah so if we can dump else we can access it but on a regular machines",
        "current debugger is not enabled so let's understand how to gain passwords with the camera dump so there are multiple ways to get them the first one is process list we can access from the current dump all the processes and the parameters they can access and we can access the environment variables that are passed through we can access the arguments and in addition to",
        "that we can read and query all the",
        "registry and that are loaded on the host itself and sometimes passwords are stored there as well and if current debugger is enabled it it is possible to gain all the password much easier with elders",
        "and of course Canon debugger is not only about passwords we can see lots of other interesting information for example edrs",
        "detect which one are running from view",
        "event logs stack traces kernel memory",
        "and much more",
        "additional vulnerability I found is",
        "related to the ue5 so in order to understand the impact and how we can use this vulnerability I give a little bit of a background when we bought a new Windows PC it probably will boot in the following sequence first the UEFI in the CPU loads",
        "the UEFI drivers and devices then the",
        "UEFI reads the envelope memory in order to know how to continue the boot then the boot sequence path from the ue5 to the windows on the third step Windows Begins the boot sequence Windows pulls the configuration from BCD which are stored on the EFI partition and then it contains the boat until Windows fully loaded let's focus on the Android storage",
        "so the environment contains a configuration of the ue5 these configurations are not stored on the hard disk but on a chip on the motherboard this memory is shared between the operating system Windows and the UEFI",
        "itself in order to access a environment variable we need to know its good unique identifier and its name",
        "two examples of interesting environment",
        "variables are good and boot order",
        "boot is a variable the defined for the UEFI how to boot using a specific method for example boot from a specific file boot from hard disk Network and so on",
        "boot order defines the order of the boot whether we are going to Define put from CD first hard disk first and so on",
        "the boot variable sometimes a link to a",
        "file system files on the file system but these files are found in the EFI partition in FAT32 so the container can",
        "access them so we can't use it",
        "the UEFI support multiple types and",
        "flags the variables can be permanent or they",
        "can be a volatile and it is possible to Mark each variable when it is possible to access it for example access on boot only so it is not",
        "possible to access him from the windows part or is it possible only to access it from the Windows File",
        "after we finished the introduction let's jump to the group of vulnerable ciscals which are related to the NVM API",
        "the first capability we need is listing environment variables on the host we do that at using the anti",
        "-venom Barbers which are accessible from",
        "the the container",
        "the Bell from the host itself",
        "without reading them which lead us to",
        "to the seconds is called",
        "create a specific environment model that we already know the good and the name from before Microsoft didn't block The Cisco from the container as well and the last capability we need is writing the NVM variables",
        "and so now we can get read write and list all the andron Barbers that are in the host",
        "so let's understand what we can do with it",
        "after the container is killed and start over all its storage under some configurations are reverted",
        "environment storage is permanent",
        "so we can use use this storage in order to store persistent storage and this",
        "information will be stored between container reboots host reboots and",
        "because NVM variables are stored on the motherboard itself it can stay even up between formats",
        "additional impact is that we can",
        "communicate between two containers isolated containers",
        "both of the containers can communicate",
        "with NVM storage",
        "so we can read one variable and write it from another which leads us to a possible exfiltration data between them",
        "but the most interesting impact is triggering permanent denial of service of the host because the UEFI passes the environment bubble it is possible to change some of them and make the host unbootable forever",
        "by changing the boot and boot order doesn't prevent the ufi from booting",
        "because Windows back because the ufi",
        "have backup configuration which are flashed on the ue5 therefore I have to look for other flows",
        "so another variable found in the NVM is",
        "hddp",
        "writing non-valid value to it will do the job and it will cause permanent denial of service to The Host this variable is read only on the boot",
        "so after changing this variable nothing",
        "will happen on the host only after the host will shut down and it will shut down as expected and try to boot up again it it won't be possible to load with the windows again so it doesn't matter how much restart you try to do for the host it won't work but this variable exists only on some",
        "ureifies on VMware UEFI",
        "if we will run Windows container inside windows VM running VMware machine for",
        "example es6 VMware Workstation the UEFI",
        "of the windows VM is a vulnerable component so when we are writing HTTP variable from the container it will cause the vimo VM to permanent denial of service",
        "the host of the machine won't be impacted by this so let's deep dive into the vulnerable component in the UEFI the UEFI is built from multiple parts the vulnerable one is BDS driver which",
        "responsible for selecting which device to boot from",
        "the root cause in the BDS dxc",
        "is that it reads the HTTP variable and",
        "because we are overwrite it with invalid value it jumps to the function assert efil",
        "which Loops over which breaks the boot",
        "sequence and call the permanent denial of service because the UEFI now can't continue and load the windows part",
        "so let's jump to the demo in this demo I'll show the Privileges relation that I",
        "showed before using a malicious Windows container and how I caused the permanent denial of service to a VMware via",
        "so here",
        "sorry",
        "here I'm going to start a weak Windows",
        "container",
        "with a malicious content",
        "so as you can see here the user doesn't have pre-admin privileges",
        "but there is a background service that",
        "attached to it that reads into reads the input file and writes the output to the",
        "output and it runs a system if I'll use this capability in order to override the environment variable HTTP",
        "and use the service you can see in here",
        "that it wrote six times a to the variable",
        "then nothing will happen until the restart so now we will need to wait for the restart and it will shut down as expected everything will go smooth",
        "but when the UEFI will try to load it again and read this environment it will",
        "fail to continue",
        "so as you can see here VMware VM started in its settings and in stock on this it won't",
        "continue this step forever",
        "thank you",
        "so let's explain how the demo works",
        "so before the demo I created the back door service which run a system and it reads and writes to the input and output files",
        "and when we override the variable HTTP",
        "it and to restart the machine it triggered the permanent denial of service it is not easy to mitigate these vulnerabilities without official patch for Microsoft but there are a few walk arounds and that we can use in order to validate that we will not we want to be vulnerable to this one and these flows the first and easiest way to do is to use hyperview isolation and not process isolated containers but it would cost us with the performance overhead",
        "the another way is to just trust the container images that you want and only use signed once",
        "and the other way is another solution is",
        "to assume that any process in any container that run in Windows is system",
        "so you should Define it in the",
        "is the network topology",
        "container input scanning used in order to ensure that there are no privileged escalation or malicious content exists in the image I tested my container against container image scanning which didn't detect the privilege escalation but only after I really dug into them into their website I discovered that the don't officially supported but they do show that the",
        "image is clean and sadly I could not put my hands on a container image scanning product let's support Windows containers",
        "regarding the vendor responses",
        "and the previous escalation and Microsoft said that because it may only admin Stratos can start the containers",
        "there is no privilege escalation here",
        "and regarding the current dump they said that it is not a vulnerability because we need a system permissions inside of the container",
        "but they do plan to fix it in the future",
        "regarding the environment variable attack which we can read and write environment variables from inside of the",
        "container they defined it as moderate denial of service but it is outside of the scope of Windows security update and they do plan to fix it and regarding the last one the VMware",
        "ue5 variable hddp",
        "female treated as functional issue it",
        "because it impacts only the VM itself and it requires admin privileges inside",
        "of them and but they do plan to fix it",
        "I uploaded all the tools and cards that I use how to do a privilege escalation using your malicious container image",
        "how to do care dump and the modifications that I did there and a manual for how to cause permanent denial of service like I showed here and down",
        "I would like to thank Mickey for help me reversing the female ufi",
        "and I would like to credit multiple other researchers that I best my research on top of them thank you for joining moving to the Q a [Music]",
        "[Music]"
    ],
    "l5LVex5km28": [
        "[Music]",
        "it's my honor to present Marvin zoss",
        "thank you",
        "thank you Jack for this content reduction and yeah I just want to State before I even start it's really an honor to be here at blackhead 25 and I met a lot of cool people having a really great time and I hope all of you are doing the very same and yeah with this I would like to welcome all of you to my journey of fault injection countermeasures the person name architecture as well as defeating both the aforementioned by using my very own multiple voltage fault injection Hardware design but maybe first of all who am I actually to talk to you about fault injection so my name is Marvin Zas and I'm an graduate in the field of I.T security from Technical University largest my expertise is mostly in embedded system security as well as low-level software security and back in data I've been working for quite some time now for a really awesome research team which is referred to as the system security lab I have the great privilege to work with highly intelligent people over here and just in case you are around the corner you know just reach out to me and let's see what we can break together all right and this brings me to my motivation so kind of a central question which we have been asking what says was well how secure are actually these highly secure labeled embedded processes when it comes to multiple fault injection and in order to evaluate this question we had to develop a novel and especially a cheap way of injecting multiple faults because I have to State here that well commercial setups which are dedicated to multiple laser fault injection already exist however these come at such high cost that it is practically infeasible for private security researchers to afford them and yeah let's now have a quick background on fault injection technical quick history basically and we will have here a strong focus on voltage fault injection so the complexity of voltage fault injection attacks increased until the point we are right now researchers started back in 1997 I would say by injecting rather simple voltage faults as we know them today and well these were very simple and the hands had a low success rate and a low reliability of the overall attack and quite early it has to be said but Ringgit are introduce to fault injection countermeasures on the instruction level which are used to mitigate fault injection attacks however in this work we are going to see how their approach can be broken by using our multiple fault injection approach at some point column of linen joined the game basically and introduced to his crowbar circuitry to perform voltage fault injection attacks this has shown to enhance the reliability of single voltage fault injection text Christian cudera utilized this",
        "um fault inject Global Secretary of college of Lin and injected voltage Falls based on a negative voltage level this has shown to increase the timely resolution of our voltage faults other researchers went another way namely butato at all and what they did is to literally shape the glitch by using digital to analog converters and yeah by this they have shown that the reliability of a single voltage fault injection attack can even be enhanced most recently we've been observing a vast amount of different work which has been proposed which utilizes different onboard Regulators to generate this faulty environment and this is a really important step because we're starting to get away from this physical access threat model which is commonly the downside of fault injection attacks as well as such a normal attacks and we are starting to get towards an even remote fault injection setup I would say really important work and probably the most related work to this one has been the work proposed by order at all and what they did is to inject a single voltage fault in order to attack the trust Zone N however at this point the authors did not realize that there were additional protections on the internal HP was available which successfully mitigate their attack and well basically here we are right now at Becker 25. to show you how to inject up to four consecutive faults in order to fully break the Trust online architecture and yeah if you would like to know how we did this stay tuned all right there's another part of our motivation was basically the this yawning gap between different adversary models in the IC in the field of I.T Security in general and this Gap even enlarges whenever we talk about Hardware security because we are just really dependent on different tooling over here the left you see a lab which is quite similar to this I'm currently using and well I assume that this looks familiar to at least most of the um Hardware focused security researchers who attend this call it just has to be said our labs are not beautiful in fact but they suffice our daily purposes so to the right you see the focus ion beam lip of the ultrastructural bio Imaging core facility of The Institute pastel in France and based on such a focused I-beam you could for example go ahead and alter the doping of a single transistor inside your integrated circuit even after it has been produced which is just crazy you know and if you are like me which means your affiliation goes to the in the direction of this left lip over here well we are incapable of Performing similar attacks and what we commonly have to do is to improvise in order to reach our goals and improvising is exactly what also we did within this work so let's now discuss some a quick background on a background which is required in order to follow the rest of this work and here we are going to focus first of all on fault injection and afterwards reason about why the transition M architecture cannot be overcome by using single fault injection text all right so fault injection methods in general concern rapid changes in an integrated circuits environment in order to cause a specific and exploitable misbehavior in the past mainly four different types of fault injection techniques have been used which are clock fault injection electromagnetic fault injection Optical fault injection or laser fault injection more specifically as well as voltage fault injection and due to the use of analog components which are referred to as Facebook Loops or PLS in short these clock forward injection attacks to the left must be considered impractical as of today and in fact I would like to use this opportunity of public speaking to officially declare clock fault injection as being dead this leaves us with basically three promising candidates to perform single fault injection attacks and throughout this work we are going to focus on voltage fault injection for reasons which we'll discuss once introducing to multiple fault injection for now let's just see how voltage fault injection is commonly performed all right so here you see different voltage ranges depicted over time the green range indicates that we are within our specified operating conditions whereas the red range indicates that we have left our specified operating conditions what you commonly do in voltage fault injection is you keep your supply voltage in the specified range for most of the time once the synchronizing trigger is a certain tie an internal counter starts counting upward until the specified offset has been reached once this offset has been reached we inject the transient fault and by this uh this fault is parameterized by our width parameter and yeah afterwards just continue as intended all right let's now see what we are capable of doing once we found us some proper parameters",
        "and this is perfectly described by our void model so default model for voltage fault injection states that a single voltage for to be injected mainly affects our internal processors pipeline stages this means uh yeah to the right you see an exemplary load modified store cycle based on the arm architecture and this is supposed to illustrate the implications made by our fault model so once we go now ahead and inject a single voltage fault we could for example corrupt instruction fetches but we could also go ahead and corrupt data loads or corrupt even data stores but finally and what is most commonly utilized we could skip over the execution of a whole instruction and through this work also we are going to focus on the skipping of instruction due to its deterministic nature basically and in this context we Define our fault",
        "Target as the instruction which would like to skip such a fall Target is assumed to be hit whenever we successfully skipped over its execution all right let's now have an exemplary fault injection tech for this assume there is some kind of a memory net register which is critical to your secure configuration for example exemplary firmware to write to this version some may look like the following we first of all loaded address afterwards move a value which we'd like to store and finally we'll store back this value let's unroll this execution and talk about voltage fault injection and what we would like to do here is to skip over this time into this memory net register so there's still instruction over here represents our for Target now once executing this load instruction we keep our Logic Supply in a specified range same holds true for this move instruction however once we come close to our fall Target we inject the transient fault and by this skip over the assignment to this duplicate register to this memory net register all right due to the criticality of fault injection attacks well several countermeasures have been proposed by Academia and these are mainly divided into instruction level countermeasures on the one side as well as Hardware level countermeasures on the other side what you commonly do in instruction level countermeasures is some sort of a duplication based approach so well for example you perform some computation perform all the same permutation all over again afterwards you check both your outputs for equality and check them both for equality again and it should be easy to see for you at this point that whenever we skip a single step of this procedure well the corresponding other step will still be able to detect your fault injection attack all right on the hardware level instead we would commonly have to deploy physical sensors along our integrated circuit and afterwards use these physical sensors to constantly monitor our integrated circuit environment",
        "I'm telling you all this because it's quite interesting to see that this instruction level countermeasures to the left have made it into recent microcontroller units all right and I think or in my opinion this is a great step in the right direction however we are going to see how to break them",
        "so here are a couple of examples taken from different data sheets from nxp of these duplication based approaches as an example this one is supposed to protect against malicious attacks whereas this one is supposed to provide a better protection against malicious hacking attacks such as glitter takes yeah you get the basic idea right and a question I was asking me when going through this data sheets was well how does this actually prevent fault transaction text so let's have another look in this you now deploy two memory map registers instead of only one and exemplary firmware to write to this registers may look like the following you load the address of your original register which is on the top you move the value you would like to store and you finally store back this value you execute some stuff in between and do the very same for your duplicate duplicated register basically all right let's unroll this execution again and talk about voltage fault injection and what we would like to do here is to perform the very same attack we've been performing before so this two instruction over here represents our fault Target now once executing this load instruction well we keep our budget Supply in a specified range same holds true for this move instruction however once we come close to our full Target we inject the transient fold and by this skip over the assignment to original register now as we are capable of only injecting a single voltage fault well all these other steps would still be executed as intended and at this point we introduce an inconsistency between our original as well as our duplicated register and this inconsistency is then going to be detected by by your processor which basically locks itself down into some error on the stage so a question I was asking you here is can this instruction level countermeasures be vetted by simply injecting multiple faults and if we think about injecting multiple faults well which fault injection method shall we choose so let's reason about this in order to implement multiple multiple fault injection we need a fault injection method which is first of all basically alive right clock fault injection is directly out so we also need to be capable of injecting faults on a rapid succession and the problem with electromagnetic fault injection is that after each fault injection attempt you would have to recharge your internal capacitor and an internal capacitor Bank basically with a lot of static current and this just takes too long also we would like to be as cheap as possible right just just have a look at our lab over here I mean we obviously got no money left so The Logical consequence would be to go with voltage voltage at least for this work all right let's now introduced the trust and M architecture and due to time constraints I won't be able to provide an in-depth um knowledge basically around the trusts on M architecture itself and instead I'm going to focus on the question why can the Trust on an architecture not be overcome by using single-fold injection attacks and by this we'll basically trade brevity for precision and in case some members of the Armed family are watching this talk well I hope you guys can forgive me all right so let's just assume you get your rb8m core up and running and this core is now capable of splitting your 32-bit address base into basically well secure as well as non-secure regions let's just keep it like this and this how the separation works is as follows there are three components involved which are forwarded every address your core accesses during runtime and these are the memory protection unit mpu which determines the privilege level which is required in order to access your letter and this address and then you have your secure attribution unit SAU as well as your implementation defined attribution and IDU which both determine the security state which is required in order to access this address well the final Security State is then determined by just choosing the most restrictive output of both usau as well as your idiu all right we are in a memory map architecture right which means we have a bunch of components basically which are mapped in our address space and these are interconnected by using some kind of a central System bus in arm-based systems this bus is referred to as the advanced high performance bus or HB in short now based on the configuration of this SAU and IDU our code now for example go ahead and Define our RAM and our flash as being non-seq and our peripherals as being secure whenever our course now executing in a non-secure state well it could only access these components which have explicitly been defined as being non-secure and once our course executed in a single state instead it could additionally access our secure peripherals in this example all right now problems arise however when we attempt to introduce other bus Masters because these have commonly not heard of Trust on them before and well if you think about directly attaching them to the internet of your HP well this would totally break the security introduced by your trust and architecture actually because this could arbitrarily access your secure as well as your non-secure securable HP slaves",
        "all right what has been done to fix this is the following we first of all introduce what we call a gate here in front of every other securable HP slaves and these Gates must be provided in addition to the address our Security State as well as our privileged level for our bus Masters to generate this required cycle information we would have to differentiate now between two different scenarios and the first one we have a trust on an aware bus master and then the second one we have a trust on an underwear bus master all right for our trust and Emma webass mustard the solution is quite simple because we could just directly go ahead and provide the required information to the interns of our HB whereas for our trust on an aware bus Masters well it's slightly more complicated here we first of all have to introduce what we call a wrapper unit here which then based on its internal configuration is going to to to to generate this required cycle information and provide it to the internals of our HP all right let's now see what previous work has been doing so previous work injected a single voltage fault in into the configuration of the SAU over here and based on this fault injection well a single non-secure region was to be expanded whenever the IDU in conjunction stated that this region that this region was in fact non-secure all right now the the authors did not realize that there were this additional trusts on Gates available on the internet of our bus and at this point I hope all of you see that whatever we are going to to attack over here is afterwards to be detected over here so unless we are able to well inject another fault here there's actually not much we can do and this is perfectly stated by all the different data sheets I'm going to read out loud this example of an nxp data sheet here so if some inconsistency is detected between the SAU and the HB secure controller configurations due to some software error of Ledger Tech the access to a specific resources blocked that's a lot to hack in actually and yeah well we cannot conclude all this by saying in order to fully break the Trust online architecture well multiple fault injection is definitely required all right let's now see what we decided to go with to implement multiple fault injections and here you see our setup a photography basically of our setup however at this point it's rather unimportant to be honest because this is on a level which we would like not to go into let's just instead discuss our abstract setup and in this we basically have three different components we first of all have ourselves basically or the controlling host system we also have this multiple fault injection platform and our device on a test which has implemented some kind of a security measure which we would like to overcome and now we can go ahead and communicate with this multiple fault injection platform via USB and by this for example set the number of voltage Falls to be injected and the corresponding parameters in this example you see a curve to set up because well there is some Target IO going on and moreover the trigger the synchronizing trigger signal is directly asserted High by this device on a test however our multiple fault injection platform could also be used to attack non-cooperative setups basically all right so now whenever the device on a test in this case asserts the synchronizing trigger signal High our multiple fault injection engine gets triggered and by this starts to inject multiple voltage faults based on its provided configuration to break the security implemented in this device on a test all right let's now have a deeper look into the internals of our multiple fault injection engine in order to understand how we decided to implement multiple multiple fault injection however it is first of all important how to generate a single voltage fault and here you see a single voltage fault injection unit and this is provided a reference clock signal and whenever a trigger signal is asserted High well an internal counter would start counting upward until the offset which is an input here is reached once this offset has been reached and default out signal as I set it high for as long as we have um for for exactly with",
        "number of clock Cycles all right and one once all this process has taken place or for down signal is asserted high for a single clock period in order to indicate that the single voltage fault injection has taken place now if we are talking about multiple voltage fault injection well it's obvious that we need multiple such single voltage fault injection units right the question is well how to combine them actually and it turns out to be quite simple we can just directly forward this fold down signal into the subsequent ones trigger signal there's the downside with this design I have to mention well this is a static setup basically right we cannot really change the number of voltage faults to be injected after our Hardware synthesis took place so what we've been doing instead is to introduce two additional multiplexers on these forwarding lines and once we set the selection line to zero in this in this example the multiple fault injection just steps with the most recent voltage fault to be injected whereas once we set the selection line to 1 um our subsequent single voltage for the injection unit gets triggered and based on this starts to inject another voltage fault based on its provided configuration so in conclusion we could say due to these multiplexers we are able to change the number of and voltage faults to be injected even after our Hardware synthesis took place and maybe one more thing this at this slide here well why are we actually chaining our single voltage fault injector units right we could just for example try to to utilize multiple triggers but",
        "this is wrong because we would like to be able to to actually search for parameters on a Cooperative setup and then afterwards transfer these parameters to a non-carbotic setup which means we have a need of a minimum amount of synchronizing signals here right okay be with me let me now see what we decided to go with to to perform our search for parameters basically okay and I would like you to recap that um for every voltage fault which we try to to inject we have to find basically two things first of all we have to find an offset with respect to our timely invariant trigger signal and then we have to find a proper width in order to hit our fault Target all right now what is commonly done in in single voltage fault injection is that you just go ahead and combine all your parameters basically some kind of a Brute Force approach right and this is what it looks like on a physical level here you see for a given offset that we try try out different widths basically and then continue to the subsequent offset all right if we would now go ahead and directly apply this approach to our multiple fault injection platform well you can see that this already takes some time to only search for basically two parameters right and if you now imagine well you would have to to to to search for maybe like three or four different thoughts voltage fault parameters",
        "long story short this is getting impracticable all right and in fact we can show that each additional voltage fault to be injected increases the overall surface by exponential means which is basically the definition of impracticability right so we have to be we have to be better than this what we decided to go with is to differentiate between different hitfall targets and this differentiation may take place for example based on a clearly distinguishable Behavior upon partial success or a challenge change in the section elimination upon partial success most commonly by using just a corporate setup but as I said earlier you can then go ahead and transfer these parameters you found by a co-parter setup and transfer them to a to an even non-corporative setup right and yeah basically anything you can imagine which helps you differentiating between your different hit fall targets now once we are able to differentiate we are able to perform our advanced search which goes like the following so first of all we Define an overall success function which determines whether or not all of our four Target targets have been hit at once we then go ahead and Define partial success functions which determine whether or not a specific for target has been hit we now utilize a single voltage fault to sweep through all our search space and by this also record partial successes with respect to our partial success functions all right now because we have previously been chaining our single voltage fault injection units we would have to translate the parameters we just found into relative ones quite simple here a problem arise however because we do not know how a previous voltage fault to be injected affects the succeeding one's parameters basically and in fact this cannot be decided because we are leaving the specified operating conditions guessing would be totally wrong at this point and what we've been doing instead is to generate um very small intervals from our parameters basically some plus minus Delta so to speak and use these small intervals to throw them into our integration stage which then performs",
        "some kind of a combined brute force on all these small intervals right this is the first stage where our overall attack is performed for the first time and hence we do not care too much to evalu to evaluate our partial success functions anymore but instead we only evaluate our overall success functions at this stage all right now um in our evaluation stage afterwards we just check for um basically repeatability and reliability of the previous attacks so quite simple all right let's now see oh let's now see what we are um what",
        "what we can basically do with this right let's break some stuff basically so here I'm going to focus on first of all Breaking these duplication based approaches which I've introduced earlier and afterwards I'm going to show you how every trust the name architecture out there can easily be broken so bear with me duplicated registers as we see in in our background section basically these are commonly used to protect any security critical configurations in your system against fault injection and we have found them to be used in for example debugging features which determine whether or not you have debug access to your core or physically unclogable functions basically any system security configurations and well yeah this is a non-exhaustive list right all right let's make an attack plan to attack this and I want you to remember that we now have two registers mapped into our memory space which are referred to as our original register as well as our duplicated register under normal circumstances we would commonly go ahead and assign both of them the very same value in a sequential fashion so first of all our original register gets written afterwards we write the very same value to our duplicated register the attack plan ends looks quite simple we actually just skip over the assignment to this register and afterwards skip over the assignment to this search system all right let's now see",
        "um the results of our sweeping stage basically and this is what it looks like but maybe some preschool May first year so our multiple fault injection platform is running with a frequency of 100 megahertz which means in turn we have a period of exactly 10 nanoseconds right and this means that a single step along the x-axis which depicts of voltage defaults offset and the y-axis which depicts our voltage faults with is exactly equivalent to 10 nanoseconds all right the gray grayish process",
        "um show these results where we injected a single fold and basically nothing ever happened the red one I've labeled them here stupid crashes because we we commonly do not want to encounter them right if we cause a crash well we have to reboot our Target and this just lowers our throughput and and fault injection attempts in blue you see where we successfully skipped over the assignment to our original register whereas in green you see where we successfully skipped over the assignment to our duplicated register let's now arbitrarily or maybe semi arbitrarily choose some values from these intervals to perform multiple fault injections so let's go with this one here because there are no stupid crashes around and well why am I actually choosing a much narrower way for the second one any ideas all right let me tell you why because this is what it looks like on a physical level and after we are done with our multiple fault injection you see there's a really slow recover curve right we are slowly recovering for for from our multiple fault injection attack basically and yeah well internal as well as external capacitances would have to be recharged at this point this however is the original voltage level even before we injected a single fault and this is the voltage level before we after we injected a single fold and before we are about to inject the second one and as you see this is only roughly half the original voltage level so if we would now go ahead and inject a much wider fault well we would unnecessarily stress our Target device and by this cause a lot of crashes all right so you in in conclusion you could say that you would have to take care of this whenever your fault targets are not reasonably separated in space",
        "okay let's see some results and these are really amazing I couldn't believe it but first of all what are we seeing here the x-axis is an exponential scale which shows you the number of fault injection attacks we've been performing and the y-axis is a linear scale which shows you um our success rate in percent basically and as you see it's it's really crazy we seemingly converge around a success rate of 70 percent which is really a lot because if you read single fault injection papers well they all state like we have maybe a success rate of 20 or 30 but this is rather High to be honest and what we did here is we injected multiple faults even and get the success rate of 70 percent okay so I I hope you all agree that this encounter measure is in fact broken let's now see how to attack the trans architectures out there and here I'm going to show you an attack which works on all these processes which are in the heading over here so first of all we would have to go ahead and skip over the activation of this SIU oh yeah and to the top right don't worry this is just meant to provide a reference in case you are already familiar with the Trust online architecture if you are not just ignored so first of all we skip over this SAU activation over here afterwards so we have to skip over the um these additional back checking mechanisms on the HP bus and finally we would have to perform some sort of a privileged escalation because we do not we just deactivated the Trust on M and we can't make any transitions to non-secure at this point so yeah this is basically it if you are like me know however um well I I just have to tell you all these targets broke down you know and the STM for example it broke down like every 30 seconds the m2351 broke down like every five minutes and the saml 11 took him some longer he broke down like once in an hour and I assume that this differences arise due to maybe imperfect parameters however the parameters are still sufficient because we successfully broke them all and if you are like me now however this is this should make you happy but this you know just doesn't make you happy actually because well we have been developing this super sophisticated uh",
        "let's let's just coin it this way super sophisticated multiple fault injection approach you know we have developed this advanced search basically and now really three-folds is all it takes so depressing right but you know what thank God there's nxp I really love them it's my favorite they are my favorite IC manufacturer and what they did is they additionally protected these trusts on gates to the right by using this duplication-based approaches so instead of injecting only threefolds to to attack these trust and animals implementations we would have to inject up to four voltage faults here first of all same as before we skip over the activation of this SAU afterwards well we skip over the original register of this trusts and gate over here afterwards we skip over the duplicate register and by this fully deactivate the um this additional back checking mechanisms and finally we perform the very same privileged escalation as before so you see let's let's see some results actually so we inject a single fault over here and we gain a success rate of roughly 45 percent",
        "let's untick both of them and we got a success rate of 2.5 percent",
        "three of them we are with 0.23 percent and if we perform our overall attack against distrust Zone M well we have a success rate of roughly 0.0003 percent",
        "you may wonder why is there such a huge drop in between these in between our third four targets and our fourth fall Target actually and this is because well nxp decided today to to to activate their Brahma detection in between our third and fourth floor Target so by this We additionally successfully glitched over the brown detection of NXT which is also you know nice to have all right and if you now think well this is not a real Attack you know 0.0003 that's almost nothing let me tell you in our experiments we have been encountering successes in an average time of half a day all right and it took at most one day let's just say by by saying one day and if you think about the consequences so the implications made by this attack this must be considered critical actually because once we are done there is no trusts on left actually there is no secure there is no it's non-secure um there is just basically me owning all just all your precious secret data you know and yeah this so even",
        "um a success rate of 0.0003 in this context must be considered practical critical actually all right let's now conclude with some possible multiple fault injection countermeasures and a little teaser here well shall we maybe Implement them on the instruction level",
        "all right so in case your answer was yes I would like you to leave this room right now because you have obviously not been paying attention we definitely want to go with hardware-based countermeasures right and into as an example Intel just integrated them in that Wolfgang processors yesterday there was a great talk here at black cat who um which just went about this um the configuration of this um countermeasures on the hardware level it's great and it props to you really and I've been in contact with with quite a lot of embedded IC manufacturers and all of them stated that they are working on well let's just say similar counter measures basically you could now go ahead and ask well what about these devices which are security critical and which are already on the market for this I will strongly appointment is five minutes okay",
        "um for this I would strongly recommend you to um use this duplication based approaches and we'll combine them with random delays because we have only been able to perform our sophisticated uh search approach basically because these photographers are always in the same location right timely location basically all right so here are your main takeaways multiple fault injection can be implemented rather cheap by using voltage fault injection attacks such multiple fault injection can then be used to for example break instruction level counter Metals as well as the transom and implementations out there and basically any kind of secure interdependent security measure",
        "and I just have to state that I would like to I would like to optimize our parameter search because I would like to get rid of this differentiation based approach and go towards an even more independent solution I couldn't figure it out yet so in case someone has a suggestion I'm definitely open to it and yeah finally we would like to thank nxp for their really exceptional engagement in our responsible disclosure process yeah thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "doRZwCbbyNs": [
        "foreign",
        "[Music]",
        "[Music]",
        "foreign",
        "[Music]",
        "thank you",
        "[Music]",
        "foreign",
        "[Music]",
        "[Music]",
        "wow we are back in full effect this year for the 25th anniversary this is amazing uh everybody just keeps coming and coming to the show and uh and I want to share with you a little bit of the history of uh of how we all got here but before we get started I've got some little announcement notes I'm going to talk a little bit about the creation of of black hat a couple of my thoughts and then it's going to be my pleasure to introduce a keynote speaker today Chris Krebs",
        "so okay let's get started um I normally run through all the countries where people have come to Black Cat to attend to try to show how Global of a community we are",
        "um this year there's people from 111 different countries",
        "here which is I'm not going to go through them it's going to take a while I used to go through just the countries that had one person and then you get to 30 or 40 countries that had just one person attending so now I'm just kind of aggregating it but I'm letting you know the planet is here and it's because we're all hungry for the same thing we're all trying to figure out what the is going on",
        "I mean just when we think we have it figured out things change and if you ask me 25 years ago like how Dynamic would it be I would seriously say most of security would be baked in 25 years right and they figured out how to launch rockets in 25 years get to the moon in 25 years a lot of things have been figured out in a quarter century we're still like trying to figure out did you try turning it on and off you know so",
        "so don't feel bad if you're still trying to figure out what's going on um to try to keep the community growing because we all are getting older because we're not solving this problem space anytime soon how do we bring up the Next Generation how do we encourage more inclusion more diverse perspectives",
        "because when it was just a network engineer trying to get the computer to work you needed a certain engineering perspective but now when you're dealing with Miss and dis Mal information you're dealing with social impacts of Technology we need a lot more people in the room trying to explain what's going on right what the unintended consequences of the technology are and so to do that black hat over the years have been sponsoring",
        "scholarships for different communities to try to bring them in to our community and so no different this year we have a student scholarship program 132 scholarships were handed out if",
        "you're in the audience when I'm calling out any of these things you want to raise your hand and meet the people around you please do so if you're a student who got a scholarship program please raise your hand thank you for excellent",
        "you don't have any idea what you've signed on for do you",
        "the black hat veterans scholarship program 15.",
        "the executive woman's Forum 35",
        "women in security and privacy 23",
        "the women's Society of cyberjitsu",
        "25 the Diana initiative 25 and",
        "black girls hack 25.",
        "so thank you all for doing the time to apply for the scholarship",
        "and welcome",
        "so I'm going to delve briefly in to sort of the early days of of black hat and I don't talk about this much because when you're so close to it you sort of assume everybody knows it but",
        "you realize they probably don't and maybe you'd find it interesting on our 25th anniversary",
        "um so in the early days there was nothing really of consequence online so there really wasn't a lot of damage you could do if you hack stuff um but when they when the.com boom started building and everybody wanted to go online and try e-commerce the hackers we naturally ended up being the people who got the jobs because there weren't enough people who understood how the network worked and I knew something was boiling around Defcon 3 Defcon three or four I started getting requests to make a professional sounding announcement and if you know Defcon I mean if it's a half party half hacker Shenanigans it's like the last thing I wanted to do is make a professional sounding announcement for Defcon but I did I made it all very professional you could give it to your boss and trick him into thinking he was going to a real conference and and then it happened the next year again and it's like I don't want to keep making these fake professional announcements and my friend Ray Kaplan one of the original Unix greybeards from deck he said you know what you should just do the conference they want",
        "charge them a lot of money [Laughter]",
        "give them food like a program make it a",
        "real conference that's like that's a brilliant idea but I don't have any money and so I started it a year later we started blackout a year later than I wanted to but I had got a loan and uh and it was originally called well it was almost called the network",
        "security conference",
        "how brilliant sounding is that because you know there's some networking and there's some security but also at the time we were starting to put colors on everything right the black hat and the white hat and uh and so I was I was talking over with some friends at work and and the marketing director came by for the company I was working at secure Computing Corporation no longer in existence the very first internet security stock ever listed on the NASDAQ",
        "and the marketing director came by and said NSC sounds terrible black hat sounds spooky you should do that and she walks away",
        "and I was like okay if she says she's a marketing person I'll believe her and it was originally called the black hat briefings now we're black hat but we were the black hat briefings because the idea was we wanted to tell you what the black hats were up to we were going to brief you on the black hats and the whole concept was sort of a crystal ball of if the hackers in the early security researchers thought this stuff was interesting then maybe you would think it was interesting and if they were worried about it today maybe it'll be a problem for you tomorrow and that was sort of our formula very applied Hands-On practitioner",
        "and that wasn't a master plan that was just who I knew I mean I literally called up my friends and said hey I'm trying to do this thing you want to speak so the community forms around who you know and so it was like Bruce Schneider and Mudge and Dominique Brzezinski Alex schostak Hobbit it was just route the",
        "editor of Frack magazine it's whoever you knew you called your buddies together and none of us knew how to run a conference right there's no books on it there was no Google or Amazon books on how to run a conference so we figured it out much like everything else in security we've had to learn along the way and we've seen it all remember when um we were going to publish reports and inform the consumers on how to buy products and inform consumers would make the better choice and buy the more secure product yeah I don't that didn't work",
        "um but that's okay we have our backup plan our backup plan is insurance companies because now companies are moving online and once companies are online they're beholden to the insurance companies and the insurance companies will force them to buy the more secure product and then when the companies buy secure product the consumers will follow",
        "okay but that's okay we have a backup plan it's called regulation",
        "yeah",
        "okay so now we're back to trying to educate consumers again so we're in this life cycle and",
        "we have a couple new challenges going forward and I'm going to briefly just talk about one of them um",
        "so",
        "we think we kind of know how it all works I've talked in the past about sort of Team rule of law and team undecided all the countries in",
        "the middle who are being pulled pulled one way or the other and then team authoritarian",
        "and really it's an argument over control of information",
        "the team rule of law is a little bit more open on axis of information more uh",
        "transparent mode of information sharing team authoritarian really wants to control information more information can be very dangerous and harmful and therefore they need to restrict it and control it and then you've got the people in between who haven't decided and they may never decide you've got the people being tugged between the two and as time goes on this will probably intensify and I wouldn't be surprised if in years there's really sort of the rule of law Network and routing in sort of the authoritarian model of routing and those in between that's a little controversial I don't like it coming from icann I want one open interoperable internet but I'm also kind of a realist",
        "now thrown into the mix of this between those kind of competing groups um",
        "I guess they were always there but they were never in the Forefront and when Russia invaded the Ukraine a new Force emerged or",
        "presented itself and I'm calling them and I got this idea I can't remember the original Source but it's the super empowered individual or the super empowered organization and it's not government and it's not Microsoft it could be a group of people or an individual let me give you an idea um about the super-powered individual how many people here show of hands use uh spam block lists",
        "right how many people use like the drop list or bogon filtering lists",
        "right you're counting on other people to create these lists that then you use to restrict access to your email or your routing right so think of it this way the people who are on spam house they're super empowered they could add something a domain name to the spam list",
        "and you would drop that traffic right they have an outsized amount of influence",
        "so Russia invades Ukraine and people are outraged human rights violations war crimes people want to make an impact people are pissed and they don't think the government's doing enough",
        "governments start sanctioning what do people do well the mongodb project",
        "open source database big project they",
        "decide that they don't want any more Russian projects on the mongodb Hub and they just delete all Russian projects boom gone",
        "that'd be sort of like GitHub just deciding to delete everything in Russia right",
        "um nominet internet registrar in the UK the board gets together here's from the lawyer lawyer says there are these sanctions against these wealthy Russians and you're selling domains in Russia and",
        "we're concerned about credit card payments there's a lot of liability of you processing credit cards in Russia",
        "so the board nominant says you know what we won't process credit cards in Russia nobody in Russia can renew their domain names",
        "do you think somebody Might Squat on them and they expire like so companies are rushing in communities that want to do something are super empowered and they're they're a new player on the field and we're going to have to learn to live with that um in the olden days um Paul if you're in the room I might make a little fun of you Paul vixi um when Paul was a principal uh author of mine the DNS program at the time bind had this is years ago maybe 10 years ago 15 years ago it had about 82 percent of the market so 82 percent of the Internet domain name resolution was coming from bind and if Paul wanted to change bind guess who controlled name service on the internet",
        "who's essentially Paul one guy right",
        "and so we would have all these debates about governments and Regulation and I",
        "was just thinking yeah but Paul you know I mean you gotta if Paul's not happy with it you might say you know what we're not going to have a domain name service to Russia anymore Paul wanted to change the root dot hints file and add new root servers",
        "my one guy could",
        "and I think what's happening now is we have to recognize this it's always been around but we have an outsized amount of influence our communities have an outsized amount of influence just think about how much influence the log 4J developer had right",
        "and if we're going to have to recognize that and own it because I think this is going to be the tip of the iceberg right these super empowered individuals and so when I talk to people in government say uh there's this uh initiative that there's going to be a talk um uh later on in the week about sanctions.net",
        "and the idea behind sanctions.net there was an open paper around it and the thinking is just like your spam block lists just like your drop list should there be a list that enumerates all the net blocks and domain names of sanctioned individuals sanctioned companies or governments",
        "so instead of mongodb having to delete everything in Russia mongodb could just say you know what we're implementing the sanctions list nobody on the sanctioned list can connect to our services email addresses whatever and they can Target it much more specifically to a government entity and not the general population of these innocent internet users that have nothing to do with the invasion of Ukraine and so interesting results",
        "some people debate it and said yes we should no we shouldn't it kicked off this big debate other people and some of the more uh engineering type communities",
        "caused them to think about maybe their role do they have any obligation are there any ethical considerations on what they're doing so the engineers had to huddle no we're fine no problem everything we're doing is perfect no need to question any of our decisions",
        "I'm glad that soul-searching happened over the weekend and you know we're all fine now um so when I talk to people in government about this they say you know we're a little nervous because sanctions are what we do governments it's like yeah but I mean companies have the right to serve whoever they want if they don't want to route to you they're not routing to you oh yeah we understand that still makes us nervous like yeah well Welcome to our world you know we're really nervous about a lot of stuff going on and um so you better step it up government because we're going to fill in the gaps if you're not on the job so with that I'm thinking looking forward where do we go from here I can see it's going to be more chaotic I can I can see that what we do is going to become even more consequential",
        "I can see we're probably going to be asked to deal with issues that were not traditionally topics we dealt with right Miss Dismount information wasn't really",
        "an area of study until 2015 2014 2015.",
        "um now it's all about how we create models and filter content or identify content",
        "so it's going to be my pleasure to introduce the keynote Chris Krebs the first director of sisa and partner at uh kreb Stamos Group which is kind of cheating because the other the Stamos is Alex Stamos who's also been a past black hat Keynote",
        "and he's going to give us his insights to see where he thinks we're going from here what comes next we've survived the first quarter Century what are we going to be facing in the future so with that it's been my pleasure to welcome you all thank you very much for coming and now I'm going to hand it over to Chris Krebs [Applause]",
        "[Music]",
        "wow uh good morning everybody Jeff thanks for the introduction uh this talk is rated TLP red pants",
        "it's great to be back here thanks for that uh introduction this morning uh it's a little bit early and we are back in Vegas I don't know how many times y'all have been back since uh covid uh but it's a little weird to be back in these big groups so thanks for coming out this morning um and this is this could be fun so when when Jeff and Steve reached out to me and said hey uh you know we'd like you to consider opening up black hat I was a little stumped on on what I'd say because when you're a government official you've got like this whole raft of staff that you can ask three months in advance to go develop some initiative that you can launch at a big conference so I don't have that when you're a vendor right you can launch a new product I don't have that and so I was thinking about I was like oh God all right so what do I what do I have what's different what can I bring to this and so I really kind of started thinking about my time at this uh why I was there what I got done there and and what it is that that I might add that's interesting and what I really kind of came down to is",
        "I'm a I'm a bridge builder I'm a partner Builder I I bring people together to solve problems I'm a middle child and that's part of it right you're always working to find compromise identify problems put together Solutions with",
        "groups and address some of the challenges we have and that's frankly why I tend to think that we at ciso were successful I was in the right place at the right time it is singularly important moment in American history and",
        "I think we did a pretty damn good job and so what I wanted to do is bring a little bit of that experience that flavor to this talk and what I've been doing over the last 18 months is kind of wandering in the wilderness going across the country other countries as well talking to officials in the",
        "private sector federal government state and local and trying to understand what they're trying to accomplish what their aspirations are what their hopes are what their concerns are what their challenges are and kind of what keeps them up at night and so through the course of all these conversations",
        "it seems that we all are orienting around three main questions",
        "the first question is why is it so bad right now why does it seem that we're fighting this uphill battle and so as we work through kind of my take their take the collective take of why we think it's so bad right now you know it kind of goes to this pivot of like well I mean it's gonna get better right and then they see my reaction",
        "um and they're like what do you mean it's gonna get worse so then we kind of work through well what are the trend lines that are out there what are the market pressures what are the forces and inflection points that we're seeing out ahead of us that are influencing technology governments Bad actors us people",
        "and then everyone kind of like slumps back in their chair it's like what the hell are we gonna do about it because this isn't hopeless right there are things that we can do here and that's what I want to work through with you today here why is it so bad right now what do you mean it's going to get worse and third what do we do about it how can we as a community in this room in Vegas right now this week what are we able to do to contribute to solve the challenges that are in front of us so why is it so bad it's four reasons as I see it not exclusively for reasons but four main reasons it's the technology it's the Bad actors it's the government and yeah it's us it's people so on the technology side",
        "I think what sums it up best for me is a quote from a couple years ago by Daniel misler and if you're not following Daniel sign up for his Weekly Newsletter you're really missing out but but his quote is basically software remains vulnerable",
        "because the benefits of insecure products far outweigh the downsides once",
        "that changes software Security will improve but not a moment before that Echoes something that Bruce schneier said a decade or so ago",
        "we operate inside a larger ecosystem right inside",
        "businesses that are focused on productivity reducing friction they tend",
        "to see us security at slowing things down first to market right you want to be first to Market or even second to Market but security is seen as friction",
        "and what's happening",
        "is as we are integrating more and more secure insecure products",
        "into use cases",
        "we're making it more complicated to manage risk now as I see it one of the areas where this is happening in accelerated pace is in the cloud so over the last couple years covid drove this",
        "incredible acceleration to the cloud during the digital transformation",
        "now what we've done is increase flexibility elasticity productivity",
        "efficiency but we've also reduced things right transparency you can't see what's happening on the back plane of the cloud",
        "so we've made it more complex",
        "and we've also started adding on additional products on top of the infrastructure on the platforms and we have this explosion of software as a service opportunities and options out there",
        "and then along the way our leadership has become radically efficient",
        "that's happening right now in accelerated pace is economic headwinds are on the horizon in organizations are saying look if I can't do it well I'm gonna have somebody else that does it well do it for me we're talking about things like HR and payroll and Business Management Services",
        "so we're building more products that are insecure by Design because of the market pressures and then we're making it more and more complex",
        "now there is good news right we are here evidence of that",
        "10 years ago think back how many products were there vendors security products right we have a vibrant robust ecosystem and yes vendors technology vendors are",
        "addressing some of the underlying vulnerabilities but is it happening at the pace that we want it to but what are we really talking about here through this diversity of products",
        "and complexity and use cases it's a tax surface right it's opportunities",
        "for the bad guys to come in and get what they want and I think over the last couple years",
        "the biggest perhaps Collective falling down",
        "of government of Industry",
        "is on ransomware what is ransomware right it is a bad guy that's figured out how to monetize a vulnerability or misconfigured system that's it they've extracted value",
        "from that stuff that Daniel miesler is talking about and it's been able to shift through cryptocurrency to safe havens and what that's done in the meantime is distracting",
        "our intelligence Community our national security community that was five years ago focused on the highest order threat the MSS of China the pla Russia svr Gru FSB Iran irgc",
        "and now they have had to broaden their View",
        "of threat actors to include cyber criminals",
        "my take here is that we've kind of fetishized the advanced persistent threat we've over rotated on the MSS we've over rotated on the svr",
        "when cyber criminals have been eating our lunch in the meantime when that was the design basis threat that was the threat model for every organization all along",
        "if you're on the internet you're on the playing field for them if you're using email if you're connecting anything they're opportunistic",
        "Target sets are much much greater",
        "that said can't take a rise off the top of the threat hierarchy and what we're seeing is the threat actors at the top",
        "they understand what the shifts in our businesses are they understand that we're making things more complex that we're relying on more software and trusted updates",
        "my business partner Alex said something in a meeting about six months ago that really stuck with me companies",
        "that are shipping products or shipping targets",
        "if you're hosting a service you're the target",
        "that's how the targeting sets are happening for the svr and the MSS they understand the dependencies and the trust connections that we have on our software services and Technology providers",
        "and they're working up the ladder through the supply chain there's a terrible joke I'll tell um decades ago Willie Sutton big bank robber they asked Willie why do you rob banks he said because that's where the money is it's the same idea here with software providers with managed service providers why do do adversaries Target software supply chain because that's where the access is that's where the data is the ability to work in at scale and go one to many and conduct breakouts that's what we're seeing the actors doing so what's the government been doing well",
        "the government has struggled and I'll use the U.S government here the government has struggled with balancing",
        "Market interventions regulation",
        "with the desire in a capitalist economy to allow Innovation to grow right you we hear that all the time that regulation stifles innovation and as a result what we've had isn't uneven application of Market interventions or regulations if you ask the financial services folks they'll say what do you mean uneven we're regulated six ways to Sunday and that's right duplicative at the federal and state level regulations on Banks and then it kind of drops off and so we've seen the government struggle here and as a result we're not getting the outcomes we want and I have to think that even when the government does regulate they don't necessarily do it right they don't do it well we see an over-reliance on checklists and compliance rather than performance-based outcomes",
        "I think we're seeing an improvement here since a release some performance guide guidance recently we need more of that",
        "we're also seeing it the case where it's it's still difficult to work with the government it's still difficult for a private sector organization to know who to work with is it the FBI is at cisa is it the department of energy is it treasury I don't know where to go it's still just too hard to work with government in the value prop isn't as clear as it needs to be got to fix that the last thing is a government also has to kind of clean up its own Act one of the recommendations that I saw in the cyberspace Solarium report from two years ago was it Congress needs to figure it out as well Congress needs to establish select committees in the house and the Senate that consolidate oversight over",
        "the various departments and agencies particularly in the civilian Branch where you have a hundred and one civilian agencies and every single one of them is running their own email service",
        "so we got to fix that and then the last reason here is it's it's it's us it's the people right our leaders are not leading the CEO that understands",
        "cyber risk as a business risk is few and far between now it's changing you know I think Colonial woke a lot of people up last year but so we don't have a system",
        "that changes that",
        "balance of the value of secure products",
        "we also have Workforce challenges there was a summit two weeks ago at the White House big tech companies came and they made pledges and promises and support we have various initiatives right now alongside black hat we have the Diana initiative so so we have mechanisms in place but we have to accelerate we have to accelerate I have five kids in the K-12 system and they go to a pretty good school but there aren't opportunities for them",
        "to experience coding",
        "we don't have a technology-oriented curriculum like some other countries another thing we got to fix and so as we kind of move out of this and think about well where are we going from here I reached out to a network of folks much smarter than me and I said look what's your take on what's happening right now three four or five years out are things going to be better they gonna be worse so you bearish or bullish in the the general responses",
        "were bearish in the short term bullish in the long term things are going to get worse before they get better is is kind of the takeaway which is really a fascinating dichotomy and so I wanted to kind of break down and understand why are we seeing that what what are the pressures we're seeing right now or lack thereof bitter can continue these trend lines that I think we all agree or are not sufficient they're not where we as a community want them to go and so back at the top with technology I think we all agree there's gonna be more stuff connected we have a pathological need to connect things to the internet seemingly has said that in a congressional testimony last year in kind of a little rhetorical device I'll use is ask people close your eyes sit back think three four years into the future uh you're at the office you're at home you're in your car you're at the doctor's office whatever are there going to be more things around you that are collecting data that are generating data I mean the answer of course is more",
        "in a car at home on our body in our body more I mean how many of you are wearing those aura rings to compare sleep patterns",
        "against each other",
        "things are generating an incredible amount of data exhaust digital exhaust",
        "and and so again it's this opportunity space and they're becoming more complex",
        "not less",
        "and I think back to 1984 the year",
        "William Gibson released the book Neuromancer I think most people remember Neuromancer for coining the term cyberspace",
        "but it to me it's how he describes cyberspace",
        "that was so captivating that really resonated with me the unthinkable complexity",
        "of cyberspace we're there right now",
        "I've asked people like do you really understand how the cloud works across the various hyperscale vendors and how you interact with it what visibility you have the answers aren't always what you want to hear so things are getting more complex we're generating more data but I'll say this again evidenced by",
        "black hat at 25.",
        "we have a maturing industry",
        "we're producing and generating products",
        "that are solving problems",
        "we have technology vendors that are working to solve core problems in the infrastructure",
        "but is it happening at the pace we want it to that we need it to why because the Bad actors are getting their wins",
        "and until we make meaningful consequences",
        "and impose costs on them they will continue ransomware is here and it's so prevalent",
        "and it's gotten professionalized in the barriers to entry have dropped and now they have availability or options",
        "to exploits that were the remit of nation states only a couple years ago because the money's there profiting and it's not costing them anything they're not feeling pain fortunately that has changed to a certain extent we just saw a mixer get sanctioned tornado the other day so we have to do more of that and that's just the non-state actors what about the state actors so we we typically talk about China Russia Iran",
        "North Korea right but here's the thing I mean literally every country on the face of this Earth is looking at the digital ecosystem as a new domain the fifth domain they're developing capabilities for espionage",
        "for domestic surveillance",
        "and yeah they're also looking at capabilities for dis destruction and",
        "disruption so we have a threat actor set that's absolutely exploding and guess what there are going to be splashy new in",
        "novel events in the near future just think back the last several years I mean let's just start with Ukraine with the Russians turning the lights out in Ukraine two years in a row then we had wannacry then we had not pet you then we had bad rabbit and then you get in to the uh svr in nobellum and solarwinds",
        "it is continuing to happen and it will continue to happen",
        "and on the government side we have seen in the last year or so in interest in improving authorities sisa continues to get the funding it needs and empowerment it needs and the authorities it needs but I think we're going to see a Slowdown in some of that funding I think we're going to get a see a Slowdown in the congress's interest in providing additional authorities so that we can have appropriate Market interventions",
        "government still has to figure out how to engage",
        "how to manage its own systems and then we have the people part yeah our leaders are getting smarter every day",
        "we have someone exit the workforce we have someone that enters the workforce and our Workforce is becoming increasingly Tech native this is",
        "actually probably the area that I'm most optimistic every day that goes by our Workforce becomes increasingly Tech native on the upside they're savvier",
        "but kind of what Jeff was alluding to with the Miss dis and Mal information piece are they becoming more discerning",
        "are the critical thinking skills coming along with the technology savviness that",
        "we're looking for",
        "the second question that I asked the network was fine",
        "your near-term",
        "bearish long-term bullish",
        "help me understand that pivot what are what's the dichotomy how are we going to make that change what are the influence points the inflection points the moments the opportunities to shape the future",
        "so starting on the technology side again their answers oriented around a core set of themes so on technology what we've kind of arrived",
        "at is as Jeff was talking about with some of the decisions around the Russian invasion of Ukraine we organizations businesses have to have",
        "a set of principles you have to establish your values who you are is a company what you're out there to accomplish how you're going to do it what your red lines are",
        "when Russia invaded Ukraine we were working with a couple different companies that said look we're we're not impacted by sanctions so so we're good we don't really need to worry about it our take was no look I'm telling you",
        "when images of war crimes start showing up on TV and on Twitter and elsewhere you're going to have a problem if you're continuing or at least perceived to continue to support the Russian war machine you have to make decisions now on the kind of company you are and how you're holding yourself out so you have to have those principles as a part of that we have to also understand that if you are core to the fabric of the internet right now which is really the core to the fabric of the economy",
        "yeah you're part of the National Security community you may not be in the intelligence Community but your mission is oriented around National Security outcomes and",
        "you have to take security seriously you have to have it as a board room issue and this isn't just the big Banks the big technology companies this is increasingly mid-market",
        "technology companies and software providers that have become systemically important over the last decade that have elevated privileges within networks and the ability to access sensitive crown jewels of an organization you have to be thinking differently about your threat model so you have to set those principles the second part",
        "is our products right we need to continue to develop products that solve the challenges that we encounter every single day but we also need the technology vendors that own manage operate develop deploy",
        "the core yeah we're working on the edge we're doing a great job at the edge but back to the Core products and solutions out there we have to solve the hard problems that",
        "continue to persist",
        "and yes it may impact the bottom line of your Security Services business",
        "but it's more important to solve the underlying challenges rather than the Band-Aid on the edge and the last thing is we need leaders to plan out beyond the next two quarters",
        "you have to look three to four years out so right now every single company out there",
        "should be conducting simulation scenarios impact assessments tabletop exercises at the executive level around what's happening",
        "in the Taiwan Strait Strait of Taiwan organizations need to be saying how could a Chinese invasion of Taiwan impact me my supply chain my market how",
        "could the political headwinds affect me",
        "how could it affect my I.T operations you have to game these things out",
        "because I don't know if it's going to happen tomorrow next year three or four years out but based on the conversations I have with National Security officials they're pretty confident",
        "that that's going to come to a head between China China and Taiwan and if you want to be in a position to de-risk your operations to manage risk to your",
        "organization you have to start that yesterday if you want to physically segment your Networks",
        "in Taiwan you gotta start that now so we need organizations thinking forward not just dealing with today's problems but planning ahead and starting to implement for where you want to be two to three years out",
        "and then we have government how can the government shape the future so I tend to think about the government as having four main roles in how they interact with the technology and the digital ecosystem",
        "consumer enforcer Defender and enabler",
        "consumer Department of Defense the U.S Department of Defense is is likely the largest customer of most of the big Tech firms the US government itself is a massive tens of billions just shy probably of 100 billion that's just on the civilian side consumer of I.T products and services they have incredible purchasing power they need to use it they have to set the bar higher lowest price technically acceptable cannot be the procurement and acquisition model we have to move faster we have to fail faster we have to continue moving forward",
        "the second piece on the enforcement side that's regulation and that's law",
        "enforcement",
        "so on the regulation side I'm the market is not working right now we need not necessarily more regulation",
        "we need smarter regulations that are determined based on outcomes and not checklists it has to be smart looking at the economy itself and what those core functions are so we're not necessarily talking about small and medium businesses but if your critical infrastructure that underpins",
        "the continuity of the economy we have to have a better understanding of the security posture",
        "on the law enforcement side I've seen the right kind of movements out of the Department of Justice and FBI of going more aggressively at",
        "the adversary at command and control infrastructure of cyber criminals we need to continue that we need to shift from longer term investigations towards more destruct disruptive actions",
        "in preventing their ability imposing costs and eliminating their ability",
        "to extract value from",
        "companies here in the U.S",
        "on the defender side we need cyber command we need the intelligence Community to continue pushing out moving forward",
        "in preparation of the 2020 elections the U.S government Department of Defense worked with Partners over there to have a better understanding of what the ttps what the capabilities and the malware of State actors what what were",
        "those advantages they had brought it back here we exposed some of those campaigns but what I found more important are valuable was we we also figured out what their targeting set was and what they were going after election night reporting voter registration databases that sort of insight allowed state and local election officials to prepare to put that last dollar",
        "to harden a Target that you knew the adversary was interested in we need more of that and lastly on the enabler side",
        "yeah I'm going to say it I'm a homer continue to invest and build cisa out make it easier less complex",
        "for organizations to work with the government and get value out of it instead of going to five or six different agencies",
        "make the front door clearly visible and as I see it that Sissa we also need to do more of what we saw on the run-up to Russia Ukraine where the intelligence Community was rapidly declassifying",
        "sensitive information about the battle plans that froze the Russians",
        "that was information Warfare that worked we need more of that we need to put that information in the hands of the Defenders",
        "all that said I'm not naive enough to think",
        "that slight course Corrections of individual agencies is going to be enough",
        "I'm ready to make the argument that the digital environment around us has changed so dramatically in the last 25 years while our government",
        "hasn't kept up pace has lagged as slow the slope lines don't",
        "have the same trajectory I think it's time to rethink the way government interacts with technology I think we need to take a hard look at the way governments organized and there's there's precedent for this 1939 President Franklin Delano Roosevelt worked with the Congress to pass the reorganization act of 1939. passed three",
        "different reorganization plans Congress approved to reshape to make a government of the people that worked for the people we're in that same space right now I think we have to take a hard look at the way we're organized and make a smarter more efficient more organized government and I'm ready to lead that charge working at the Aspen Institute with the team at Aspen digital we're going to take a look at this we're going to look at what are the various outcomes",
        "what are the various organizational structures that we could see from uh far into the Spectrum heavy package of establishing a U.S digital agency that could take elements of cisa elements of nist and ntia the department of energy and the National Labs maybe bits and pieces of the FTC and the FCC but make an agency that's focused on empowering a better Digital Risk Management Services and I'm not just talking about cyber talking about privacy talking about trust and safety issues we're not where we need to be and we're falling behind and Americans are suffering as a result but you know what I also don't have a whole lot of confidence right now that this Congress can get that done can get something as Broad and in envisioning is an effort like that so we're going to have to look at different possible outcomes the other side of the spectrum could be something as simple as pulling sisa out of the Department of Homeland Security as a sub cap in an agency it's allowed to operate as an operational Agency on its own we also have to kind of think through what are we prioritizing for what are we optimizing for is it public-private Partnerships is it a regulatory framework we have to take a harder look at the way we're organized",
        "I'm also not naive enough to think that",
        "the technology vendors that that the government on their own are going to fix this fix any other ultimately my take",
        "as Jeff mentioned it's going to come down to the people in this room that are here for summer camp this week that are in this community",
        "it's going to take us as leaders to make the changes that we want to see and so as I was thinking back to my time at sisa I had a had a pretty basic approach to leadership and it was based on a framework that I stole from a boss at Microsoft and it was the five P's people policy programs public affairs",
        "and politics I said if we succeed and win in those five P's then we're going to be successful as an agency over time as we were working through how we were doing it occurred to me that we were missing a p and that P was Partners this is a again fundamentally as a voluntary Organization for public-private Partnerships so yeah you got to have your people without your people you don't have anything so you had to have that the next most important thing for us was partners and then policy and programs public affairs and politics but the that made it six P's and I like fives you know odd numbers so we dropped the politics and there was a reason for that because right now cyber security has to be apolitical non-political bipartisan",
        "nonpartisan however you want to call it that's how we ran since it's awesome to see Jenny easterly continue that tradition",
        "and it was my job as the Senate confirmed director to handle the politics piece",
        "so that was the five P's we ran under People Partners policy programs public",
        "affairs so as I'm standing up a Consulting practice said how do I apply that same model that same mindset",
        "of leadership and it came down to principles got to know what you stand for what's important to you and how you're going to act people of course your People Partners",
        "planning talked about the planning piece and then public engagement the public engagement piece is about being transparent about being candid being forthright maintaining and establishing trust with your partners just look at the incident response Communications over the last year or so the organizations that are up front in candid and transparent about what's going on and what the plan is and how they're working on the problem they're the ones that maintain Trust of their partners of their customers of the government so public engagement is an incredibly important part of leadership",
        "but back to that people part",
        "again we need more of them and it's been kind of confounding to me how we continue to face Workforce shortages we hear about the three million open cyber security jobs in the community and I'm just trying to figure out like why are we not solving the gaps why are we not closing the gaps so a couple weeks ago I was at an event and and Dr Hugh Thompson formerly of Symantec now with Crosspoint capital I think he runs another conference in San Francisco or something",
        "um he had his own kind of five elements of how you talk about our community what it is we do here and how rewarding a career in this industry is the first thing is it's fun I don't know about y'all but like the last 18 months for me have been probably the most fun in my career yes I had fun at sisa we're having more fun now the second is it's lucrative",
        "we get paid pretty well in this industry I had to run a whole bunch of different compensation models and comparisons at as we were at sisa to figure out why are we not attracting the talent we need and when you look at pay in this industry it's it's pretty Illuminating so yeah it pays well the third relatedly it's durable",
        "we are going to be dealing with these challenges",
        "for the rest of our lives",
        "in perhaps the rest of human history there will be digital and technologically related risk issues that we're going to have to solve so it's durable it's also really interesting stuff",
        "I mean the last six months alone of geopolitical risk colliding with technology risk have been fascinating problems we've had to solve",
        "and the last thing I've already talked about this but these are National Security issues the mission the impact the import of what we're doing is incredibly important so we have to start talking about what we do here in terms I think that are going to draw the workforce and I think Hughes got a good start on that that narrative but the last piece here it's not on the leaders it's not on everybody else in the workforce it's on us individually and so last week I had the chance to go on a a podcast it's called five Factor authentication with a guy named Hill Harper and he's a Harvard lawyer but he's also an actor he was in He Got Game and CSI New York and the good doctor but now he does his podcast about life in this digital environment how do you maintain a",
        "wholesome fulsome life and he asked this question at the end that I wasn't ready for but the question was",
        "what are the five factors",
        "that you live your life by to lead a meaningful life online and offline like I said I wasn't really ready for it took me a little bit of time to figure it out but but my first answer was again principles figure out who you are what you stand for how you're going to live your life and live your life accordingly you got to know what's important to you and what you stand for and then take a stand when you have to the second thing was people I've talked about people a lot today find your people find your support networks if it's family great part of what we're doing this week out here is about our people our Networks find your people they're going to be there for you help them they will help you the third factor is Life's too short to work for so don't",
        "right all right",
        "now I'm not saying quit your job tomorrow because that would be stupid",
        "but if you're not happy if you're not valued if you're not respected if you're not treated",
        "like you think you deserve to be treated make a plan find that place for you work with your people",
        "the fourth Factor is Life's too short to eat bad food",
        "what I really mean",
        "is find something you enjoy that gives you meaning value outside of your day job right that's what I think this community does so incredibly well so during covet Bryson bort did unicorn Chef I got to go on a couple times but it brought people together in something outside of just",
        "talking about bears and dragons and stuff it allows you to connect and develop as people you're also seeing out here mentorship",
        "so what uh Leslie Carhart and Kimber dowsett are doing with uh resume reviews find something that gives you value that makes you feel rewarded whether it's in your community whether it's out here whatever it is find something that gives you purpose and value and then the last Factor was for the love of God do not read the comments",
        "don't listen to some Rando on the internet that's telling you you suck",
        "right that's why you have your network seek feedback meaningful constructive",
        "feedback from your people",
        "I'm telling you right now if you know what you stand for and if you live by those principles if you have a group around you that supports you that you support them if you find meaning in something outside of just your job when you stumble you will we all stumble you're going to get back up and you're going to keep going forward and so when you leave here today be smart be safe but do something good this week help somebody",
        "and I'm confident that we can fix this we can move forward and get those safety those security outcomes that we're trying to so thanks for your time this morning be smart be safe do something good help somebody out thank you",
        "all right",
        "Chris Krebs",
        "okay couple housekeeping announcements real quick next session starts at 10 20.",
        "and a lot of action is going to be happening this evening around the business Hall starting tonight or starting right now I guess we've got the Arsenal tools Demos in the business hall both today and tomorrow check out some new apps some demonstrations from the tool creators maybe build your tool kit a little bit and then the evening in the demo I mean in the where where the demos are held during the day in the evening the welcome reception starts with a pub crawl four pm to 5 p.m tonight and at 5 PM it switches over to the welcome reception same location",
        "five to six pm and then halfway through the reception at 5 30 the infamous Pony Awards start and that's in Lagoon k and l and then tomorrow back here at nine o'clock for our day two keynote with Kim zetter so thank you very much I'll see you around [Applause]",
        "[Music]",
        "[Music]"
    ],
    "XAGTnJZwLtQ": [
        "[Music]",
        "foreign",
        "yeah we're here today to present our research around 2fa bypass and we call it smishmash because it's really a mix of techniques and it's called text-based two-phase blue thing using ocean fishing techniques and a burner phone and our burner phones we brought them yeah we've got a old Sony Ericsson and a Nokia N900 old hacker phone as you all know but unfortunately You're such way ahead",
        "in the phone service that you have disabled 2D and 3D so they don't work here so we'll have to do the demos during other meets but you have to take a word for us they work really well in Sweden in Europe in Europe they work really well but and we didn't have time to buy any more modern burner phones but uh the idea is the same and the demos will work the same on on Modern Hardware um so yeah about us I'm Thomas olafson uh I've been working with security for a long long time I'm also the founder of SEC t.org Swedish security conference running yearly",
        "um I used to play ctfs back in the good old days actually managed to win the Defcon CTF back in way back in the day so it barely counts anymore before it became this big and complicated and hard to win um I'm into secure coding and secure development and except for doing hacking and I.T stuff I like climbing diving and motorcycles really safe Sports actually uh Michael yeah and hi everyone I'm Mike uh a hacker and also a co-founder of IO uh also a lock picker and a collector of",
        "Intel",
        "yeah",
        "so uh basically this talk if you don't want to attend the whole talk I'm going to start with with our conclusions uh so and the conclusions are basically text messages smns for two-factor authentification is broken and this is",
        "no news for a lot of us I I worked in the Telco industry and this is no news it's been broken since the Inception of Pixma it was never intended to be used anything like this and we have been spoofing text messages for as long as we've been hacking and and Michael has some good stories about actually yeah I have some great examples of a colleague that was abroad and he received a text message from the local police that he had fraudulent soldiers on his card uh so he called them up but of course the local police doesn't send text messages when you get fraudulent charges so so these techniques have been working for years just now that we're seeing the the like mainstream adoption of weaponization of this but but the actual hacking techniques have always been there um so a bit of setting the scene the last couple of years it started in like we saw some date about in 2016-17 but",
        "but then it's just been escalating where you've seen in the media in the computer media with very little details about how they do it's like whoa account takeover via phishings Mission and they're bypassing the 2fa so we were interested in like oh when they empty the account they sell all the data or the Bitcoins or the nfts because this has been predominantly active in the crypto space as you can imagine um so we wanted to research how are they doing this what's the modus operandum how did they do it and like what do you actually need to facilitate these attacks and can be reproduce it in a like in a good way and also at the end of the talk we're going to get to how do you actually protect against this and what you can do to change it so the first hack was that got main media attention was the Outlook bypass a couple of years ago but that one when we research it was actually a misconfiguration or open port where you could actually on the exchange servers go in and change the two-factor authentication settings so that one doesn't really count into this I mean it is a 2fa bypass but you're actually hacking the Outlook server to more or less switch off the 2fa which I think is cheating because then it's not actually to if I bypass it's more misconfiguration or vulnerability but if you look at the more modern and hacks we have like crypto.com all the modern crypto exchanges for instance have been attacked during the last couple of years uh and like lost millions and millions and millions of this",
        "um so we looked at some of these attacks and this Mission Trends are I'm I know there is discussions on Twitter like why do we need in other words mission for this and I sort of agree but it is its own thing so I I sort of object there I think smashing is very different from phishing because most of the fishing protection mechanisms that we have only work for email and your built-in browser it doesn't actually work from apps if you're in in like telegram or signal all of these links actually get to you uh totally unchecked",
        "what we see in statistically According to some research which is not our own but like we've seen a huge increase in number of submission links sent in last year how many of you have got an unsolicited text message in the last couple of weeks yeah it's like I I get now 10 at least 10 a week uh and the reason for that is that your phone numbers are increasingly being leaked on the leak phones and the attackers are starting to exploit that and it's actually very hard to verify the Integrity of the sender of these messages because and and this actually leads to up to 35 percent of the people Target actually don't even understand that the targeting this machine attack so for some reason the text message still has a higher implicit trust than emails especially by the the older user base because it's like no I got the text message from the police like in Microsoft no I need to call the police because the police texted this to me but where we all know you can spoof emails and there you get hundreds of spam emails we're now getting to that point but the market is not saturated yet so we still have a higher trust and that's why these attacks have much higher success rate and that's why we're seeing such an increase in them also contributing to this we will show in demos is the mobile browser functionality which actually plays into the hands of the attacker oh and that brings us to the internal source of leaked user data that just keeps rolling and rolling and rolling we had the Twitter leak last week which we haven't indexed yet we have the sample files we have the phone numbers from there so the number of like leaked phone numbers are just exploding and also on my way here I had to to check in on American Airlines to get my boarding pass I had to put in my phone number not only my email I also need my phone number now to actually get a boarding pass so there's more and more leaked phone numbers coming out which is really Michael's Forte yeah so what we have done is everyone knows uh all the regular hacker",
        "forums and breach forums uh where where they leaked these credentials and phone numbers uh and it's both on Clearnet websites and it's also on the dark net uh we can combine them together into a",
        "elasticsearch where it's easily searched",
        "we also have been collecting from ransomware sites that has increased recently as well how do these forums work for you yeah here we have an example of a site where they post lead credentials uh usually they all work the same you need points to download the and you get points by either posting or posting your own leaks or paying",
        "um and and most of the leaks that are available on have I been pawned Etc are publicly available on these sites basically for free they're always located so uh and then we have the the leak files and this is just the screenshot from today because we like to be up to date so these are this the companies they can download today yeah this is a ransomware site where it shows uh what companies have chosen not to pay good work of them",
        "um and and then and then we were doing this research we actually got so much spam like do you want to buy the attendee list of black hat 2022 uh so we actually had to do that so we actually bought that list and indexed that one as well as part of the research how much did it cost uh and we we got it below a hundred dollar if we're like if you were texting back and forth with these guys we got below 100 to buy all that indeed list of black cat 2022. uh so we indexed that in our data set for this research as well",
        "um so yeah yeah and here you can see some of the leaked credentials that we have imported into a elasticsearch uh it's around 500 million right now uh and we're gonna release this data later uh it's actually live now the 500 million that we have indexed yeah um and we we have found credentials of more than a billion leaked phone numbers we haven't actually in the had time to index all of them because it takes a long while and the data is very unstructured in some ways so basically all your numbers are belong to us so you do you want to see a demo of this that we can actually get some phone numbers and tie them to emails",
        "place",
        "he has a better Unix beard than me that's why",
        "so let's start by searching for or lovely CEO that's here in the crowd uh he's always a good Target to search he's in all breaches we don't import the bridge if Brian is not part of the bridge it's not worth importing yeah",
        "so we see here the Brian exists in in three dumb files P2 beta Labs uh LinkedIn the LinkedIn scrape and risley.com so and we can also search by phone number and this is actually Brian's real phone number so so you can call him if you want to yeah please do and then we can also do the reverse search we can search for Brian's phone number and see which other leagues and he has registered under other email addresses uh so this is real data and it's actually really scary",
        "so yeah we and we're actually making available uh",
        "like a test site where you can actually see if your data has been leaked your phone numbers has been leaked I know have been pawned or starting to import as well but we've done quite a lot of important we're going to publish the links later yeah they come in the end of the slides",
        "the back to the presentation I guess",
        "um so basically what we thought a credentials that used to be yes username password slash has that's what we thought about as League credential what we're doing now is like saying that well actually if you have username password and telephone username cracked password",
        "and your telephone numbers you have a good chance to actually use that information to bypass 2fa because a lot of uh the the",
        "2face Solutions only allow text messages some of the banks in the US have heard only allow Tech space to fa you can't have to P or any more secure devices so in a lot of places you don't have any choice",
        "um so basically what this means we have indexed a total you have numbers down here 4.8 billion unique email password combinations and we have 524 index phone numbers we're very close to a billion which means that we can tie one of five every five one in every five email addresses to a valid phone number so that's how broad the attack spectrum is for the adversaries if you do this",
        "um so we looked at some of these attacks uh we're gonna be fairly quick of this and and the official response is yeah we've seen a small number of using reporting suspicious activity uh but we will be pausing with Royals that means it's not a small number because it's a lot for people because they're losing a lot of money and this attack they lost crypto.com lost 34.6 million uh from",
        "several hundred accounts and our Research indicates yes they were targeted because they had a lot of League credentials so the the users are targeted because they have leak credentials and leaked phone numbers leaked phone numbers is important because that's why you can bypass the 2fa uh similar with openc openc reported",
        "multiple attacks because nfts are super super popular last year and you can buy a pixelated monkey for like Millions uh so so for some reason kids had like Millions worth of pixelated monkeys that people wanted to steal so fishing is Michigan attacks in this area is Rife so basically what they did they did is found people's phone numbers actually did this mission Attack and saying like hey we upgraded our contract so you keep your pixelated monkey say if you need to upgrade the contract and transfer them to the to the new contract and actually they copied word by word mail from openc but they pointed the contract to execute the transfer of all their nfts into the adversaries wallets",
        "um oh and while we're doing this research this happened last week they were also breached and had all their contact and emails leaked yeah it was a third party so it's not it was not a bridge for themselves but in general we are seeing a lot of bridge and looking at this attack for instance coinbase said in order to access your account these third parties needed prior knowledge of the email address password and your phone number",
        "and that's basically what we're saying here yeah we can get there for one out of five people uh however in that incident they also took uh exploited some vulnerabilities",
        "during their account recovery process and this is the most common way of fooling 2fa is actually to initiate a",
        "password reset and then fool the device",
        "and",
        "kind of demo very soon so account recovery we looked at like five or six different attacks two or three of them were account recovery the number two was SMS injection where you initiate the login and you you some sites I mean you can log into basic functionality with just username and password but if you want to do a transfer then you need 2fa so what the attackers are doing then is that they're initiating a transfer then sending an SMS to the the perpetrator saying like hey we can demo this there is something wrong with your account input your credentials and doing a man in the middle attack",
        "um and this is also very common now but you have this attack combining smashing with adversary in the middle proxies so we're actually getting the real credentials as the people input them",
        "and number four which we're not going to talk too much about here but another common way uh is same jacking or Sim cloning or Sim porting basically Michael",
        "yeah well it's very common here in the states at least at your social engineered telephone companies to switch their accounts to another sim card or you can go in and buy with a false ID and saying like hey I want to buy the new subscription for Verizon can you",
        "port over my number from this other phone I recommend you doing that but it's been known to happen but in general the account recovery process is very relaxed and this is actually my account so if I go in and try to do account recovery on myself on Google and remember Google has the most tested well-known process for account recovery of everyone in the world because they have the most users but even them I think is a bit relaxed you give way like at the ending of my phone number to other of my email addresses this is giving a way of a lot of data if I also have the dump funds um but yeah let's talk in general about text messages text messages was invite invented like in 1984 as part of the GSM specification uh and the first text was sent in 1992 and said merry Christmas and I did for originally it was like they had padding left in the data packets because of like alignment bugs so they had a couple of characters left so some engineer there like what can we do with this ah we can put in seven bit ASCII and we can encode it on the line and run it over the network and then text messaging was basically born it was never intended to be a security protocol at all literally there is no verification of anything except it being 7-bit ASCII there is no sender verification there is no checksums there's no nothing it's just like seven bit ASCII encoded on the line and then pulled up by the Broadband shape and displayed",
        "um so getting a telegram from or a text message from Santa Claus is as valid according to the specifications as one from a phone number and that's why we what we see now uh that we are getting all these text messages from like Verizon where you're getting these text messages that's like not intended but that's how the protocol is used so there's a couple of ways to send text messages manually via your phone",
        "but then through modem and old phones which we're going to demonstrate here but it's good because we're not going to have time for that demo anyway but you have to trust us you can just plug in a USB cable write 80 some 80 commands transpose it to some bit asking to send it off um or you can use an API service so that's what we're going to demo now the",
        "oofing stuff",
        "okay",
        "let's see",
        "start another one",
        "it's green recording",
        "come on",
        "thank you okay this worked a second ago",
        "let me see",
        "otherwise we have videos because that's boring",
        "and",
        "a new movie",
        "restart the QuickTime",
        "okay",
        "this is always thing with live demos huh",
        "fine",
        "oh look at us sweet",
        "close-up",
        "not working okay",
        "now there we go fantastic",
        "let's go",
        "uh so what we're seeing here is the the point of the attack from the adversary where we're seeing the phone to the left which is my actual normal phone uh and then we have some scripts that are going to use API providers we actually got blocked uh not for spoofing this mess because that's total okay we got locked because some of the payloads that we're sending um were bad by some providers so we have switched to another there's literally hundreds of providers out there uh where you can",
        "let's see",
        "is the cable bad now no yeah it's not showing up on screen so I got the text message here from binance let's see if it shows up again try it again",
        "and change close up",
        "okay bad cable",
        "um so",
        "you just have to watch the video then",
        "I'm just use this one try try and we're going to try one cable for you to see this otherwise we're gonna have to go to the videos of the demos",
        "five",
        "email recording",
        "come on",
        "yes new cable Finance new text message so I click on on the binance text and I face ID I use my passcode",
        "um and what we're seeing here if you select the window here",
        "is this is actually inside my nor I do have a binance account uh and this is the real binance account where they're saying sending my verification code you're requesting a transfer if this was not you please be aware of the spam calls and SMS phishing so obviously we're doing the same we're copying their text and basically saying your account is blocked due to suspicious activity to unlock this phone and or your account please go here uh and obviously the domain name would not be demo.smishmash.net and we're not going to do binance we have set up our own crypto uh exchange.com don't sue us don't so so we don't get sued live because it would be bad to do this on um so crypto exchange this is my email and look here uh there is a code and",
        "this is actually from the real uh SMS that comes from binance because we're also initiating a login or a transfer and boom just fill it and hit next and we're not really and here with next and we redirected to in this case crypto.com because this goes for",
        "all of them and on the adversary side we actually get the username and the token as well as the session tokens and to actually log in and complete the transfer and as you see it's actually very hard to spot on the phone that you're actually being man and middle attacked and fished um and the thing is that the text messages actually like shows up",
        "and here actually we have another script so we're actually texting the the credentials to ourselves as well via texting from file",
        "which is our company because yeah you can send text from anything so that's um and you can also do this through Google",
        "um we have some sample for Google I think yeah",
        "fourth message from Google because they actually say what message from Google and it shows up in my normal auth messages coinbase is using the same short code suspicious activity at your account please verify your credential yeah I'm gonna do it always click always click these links very good",
        "uh and if the internet is quicker here you're going to see what's happening now the internet is not super fast",
        "um but we are getting the requests eventually as you can see from the adversary point of view",
        "but uh",
        "it's loading Maybe",
        "it's on the way",
        "is it should be hmm",
        "come on let me click on it again",
        "Finance yeah",
        "cannot write the last response from under middle client okay",
        "so um we might have to show you the recorded sorry click again click again",
        "and so they don't but they they work really well before this morning",
        "uh so we're blaming Network speeds actually I would say um accountsgofishing.com",
        "but yeah",
        "let's do the video yeah do the video of that one",
        "screen recording in here",
        "oh okay now yes because I'm doing that it is low speeds so basically what would happen if we had the faster speed here the actual pre-fill would actually overlay uh the the bar if you showed the",
        "phone again uh so what's happening here is that my pre-filled credentials to log in to Google uh no it didn't work we will actually uh",
        "over uh overlay uh the bar",
        "so I'm gonna use black cat let's go find anything now",
        "and my Google verification code is very small here actually gets pre-filled let's stop um five",
        "you remove recording",
        "so my What's Happening Here is that my credentials from Google and these are the real credentials actually get pre-filled in the enter code even though I'm going to a man in Middle side and not the intended side because they come from the same source which were spoofed so I now log in and now we're going to get an error because I'm I'm redirected to the dot SC domain which I don't have a certificate for for this demo but as you see here we have the token already",
        "on the adversary side so I'm logged into my Google account without with the real 2fa codes with the man in the middle of the proxy so yeah sorry about the demos there were a bit of cables and slow internet but that's the idea and that's how people are doing it you inject yourself into the SMS stream",
        "um and then we found if you're doing this professionally if you're like big time adversary you don't have crappy codes and then you go into your famous Chinese site and you buy the hardware for like 160 bucks you can buy a custom Hardware that does all these SMS moving for you and you can even buy bigger rigs like like going large scale release attacks where you can slot in like 64 SIM cards in parallel and just Brute Force these away um and funnily enough they're actually marketed by like you can also from 80 commands change the EM IE number which is like the hardware number where you're sending from so you totally can't be tracked and you can also send the smsc sender to whatever you like on these devices and this you can just order off of eBay or Chinese eBay",
        "and funnily enough and some of them they're actually having the marketing materials look at that screenshot they're actually marketing them with like here's your Google authentication code so so this is sort of a a well-known secret that this is possible it's not like no one's heard of this they're actually marketing them this way so the idea that we just showed is that we have a fish user adversary in the middle and TLS set up but we can still",
        "uh do this so okay we're over time uh",
        "but I'm just going to say some closing remarks uh or protection against this we have seen a couple of the really targeted side protecting against this there are several ways recapture seems to be the most common because there you can set a cookie from which site the recapture can come so you know at least you as a user will see this uh if you're on the middle side that there's an arrow in recapture some sites are protecting with cloudfront cookies you can do a similar way and you could protect most likely with cores for doing some experimentation with this with setting up the course headers correctly between the API service everyone uses this course star like everywhere everyone's like yeah of course yeah that's fine but you could protect against these type of mandible attacks by doing correct core setups so there is ways to protect against these attacks so uh we're fully releasing all the research data that we've done on this uh under an S3 bucket uh so you start to take a picture of this slide um because that was the best we could think of because we wanted to release it as soon or as late as possible to get as much data as possible into this dump file the dump file is about 50 60 gigs so that's why we put it on S3 bucket because it's a lot of numbers and emails are hashed in that one so so it's show one hashed so you can actually you can search yourself so the key takeaways from this one in five email accounts can be titled out the phone number SMS has no built-in security can be spoofed it's hard to spot fake sites on the mobile because the mobile actually hides the the bar of where you're going uh and the mobile will automatically fill the tofa tokens the correct ones to help you okay thank you guys we had to get ready for the next briefing but thank you guys for attending [Music] [Applause]",
        "thank you",
        "[Music]"
    ],
    "zTtbVxGEq8A": [
        "[Music]",
        "foreign",
        "that Katie did in her last talk and I'm going to invite everybody in the why far back to come forward this is the first talk that we've given in a long time and uh especially since covid so we invite you to come forward we don't bite we promise um okay",
        "so um uh this is welcome to scaling security researcher to eliminate open source security vulnerabilities once and for all my name is Jonathan lichu I am a software security engineer a software security researcher I am the first ever Dan Kaminsky fellow at human security uh I am a get up star and get up security Ambassador um and you can reach me on Twitter at Jay lichu and you can find me on GitHub at J light shoe as well and I'm going to hand it over to my co-speaker Patrick yeah my name is Patrick way I'm uh work for modern I'm on the open rewrite team I've been doing software for over 20 years and yeah excited to be working with you guys today um so brief disclaimer um I'm sponsored by GitHub and also we are discussing a SAS offering that is available for sale um but all the tools and and Technologies and and the process we discussed are available for free for open source um to to use as security researchers",
        "um and this work is supported by the new Dan Kaminsky Fellowship um for those who um uh for those who did not know Dan Dan was best known um for a vulnerability and DNS that he discovered in 2008 and then silently worked across the industry to fix um I sadly never got the opportunity to meet Dan he passed away uh tragically last year um and the Dan Kaminsky Fellowship was created to celebrate Dan's memory and Legacy by funding open source work that helps make the world a better and more secure place and if you are interested in a project that satisfies those constraints or is you know is is trying to do something in that area um human is currently accepting applications for the 2022 uh Dan Kaminsky fellow or 2023",
        "um so this story started with a simple vulnerability is this it's the use of HTTP in a Gradle build file um and uh this is uh this vulnerability is important because if you're using HTTP to resolve your dependencies in your Gradle or Maven build files you leave your build open to a man in the middle attack and getting your artifacts Modified by a malicious attacker um and there's you in the Java ecosystem at least there's no additional authentication or verification of artifacts getting downloaded and this vulnerability didn't just exist in Maven or sorry in Gradle it also existed in Maven build files this is an example of downloading dependencies uh to be used in your compiler and test dependencies which means that the code's going to get executed in your CI CD pipeline and this is an example of it being used to upload artifacts from your build um and that usually concludes credentials which are getting exposed over the network as well and this vulnerability was everywhere I started looking across open source projects it was in the projects of spring Apache Red Hat kotlin jetbrains",
        "Jenkins Gradle groovy elastic eclipse",
        "and more um Oracle the NSA LinkedIn stripe all of these open source projects all the open source projects maintained by these Pro these um organizations we're vulnerable",
        "to this and I reached out to Maven sonotype Maven sonotype is the uh artifact server for the job system they are the uh pip to the python ecosystem the npm to the Java ecosystem and they told me that in January or June of 2019 uh 25 of their traffic was still using HTTP instead of https to resolve dependencies so how do we fix this how do we how do you deal with this widespread common security vulnerability impacting an entire ecosystem I push forward an initiative that on January 15 2020 all the major artifact servers in the Java ecosystem would decommissioned support for HTTP in favor of supporting https only and I reached out to Maven Central again and they said that after us our disclosure a lot of blog posts 20 were still using HTTP even after all the communication we put out and so you can imagine",
        "what might have happened on January on January 15 2020",
        "broken software broken software everywhere um but we stopped the bleeding uh but what about the other repositories these are only the most commonly used repositories in the Java ecosystem other companies host jar artifacts on their",
        "own servers and those are not in this list um so how do we fix the rest of the open source projects that are vulnerable to this I said let's just try to fix it let's do both polar Quest generation and so how well first off you need to identify what projects are vulnerable and so the way I did this was by writing a code to our query to give me a list of vulnerable projects and this is the query here it's very simple um codeql is github's code query language and as your bill it every single time there's a commit to an open source project codeql attempts to build that project and build a database and as open as security researchers we can run queries against code 2L at scale and there are 100 000 open source projects that coach UL builds databases for currently and for this query the GitHub security lab bountied me a 2 300 Bounty for this and then on top of this I took the list of queries or the list of results that GitHub provided me and I said let's go generate pull request so I wrote a bot using python it was a wrapper over the GitHub Hub CLI it had one nasty regular expression and a lot of logic for bouncing off of github's rate limiter and this is the logic um It's actually an engine under this but this is at a high level the logic that we use to generate pull requests and this is the nasty regular expression and the reason that we had to use a regular expression is because if you use",
        "um if you use an XML parser to fix XML files when you parse the XML in and then you dump it back out after making a modification it comes out in the format that the XML parser dumps out not in the format that came in and so you end up generating these massive diffs that you that most maintainers are not willing to accept because sure it fixes a security vulnerability but it doesn't look like the code that they had originally and so they're not willing to accept it but the problem with regular expression is that if you use regular oppressions to solve a problem now you have two problems um",
        "but it worked um this is my pull request feed for this vulnerability and this is an example of the diff you can see the replacement of HTTP with https across you know tons of different places in a file and for this project I generated 1596 pull requests and as of 2022 it's",
        "been about a 40 merge rate which is you know pretty pretty solid and for this the GitHub security lab bountied me an additional four thousand dollars for trying for fixing this vulnerability at scale",
        "and I got hooked on this idea of bulk pull request generation um this is my GitHub contribution graph for uh 2020. uh these are the two peaks of my massive numbers of polar press that I generated um it was you know it's just it's you know very cool to see the impact you can have so I have a problem and ivr HD that's not the problem the problem is that I chase squirrels I love looking and reading vulnerability disclosures and when I read a vulnerability disclosure I can take the knowledge that I find in that vulnerability closure and I can go say I wonder where else that it this is and I can find those vulnerabilities I can find lots of them and it's there's too many vulnerabilities I'm I'm finding when I do this too many open source security vulnerabilities this is not to say open source is more insecure than in closed Source it's just that it's easier for me to find this is an example of a vulnerability called zip slip and I can pay I this is the results of a co2l query and I can page through results I can scroll through pages and pages and pages of results like this that identify and point to the exact locations in source code where there are zip slip vulnerabilities and open source software and so I need a solution to this problem I need automation and so at this point I want to pass it off to Jonathan or sorry to Patrick to discuss automated accurate Transformations at massive scale thanks Jonathan",
        "yeah Jonathan has a challenge he definitely finds a lot of vulnerabilities and he wants to fix the world but his 2020 he he tried to use an XML parser and he got a ginormous diff or a simple change and uh you know it kind of makes me think of software Engineers we're professional automators I mean that's what we do we automate tasks some of us been doing it for a long long time but it's 20 20 and we're still not able to automate our own tasks that dependency upgrade with a breaking change or a framework up trade we're still slogging through the painful process of of doing that update",
        "but luckily it is 2022 and we do have a solution",
        "I'm lucky I get to work with the open rewrite project and uh essentially in a nutshell open rewrite is a framework and an API for interrogating and transforming a",
        "compiler's syntactical representation of source code",
        "so what is that syntactical representation so compilers make this thing called an abstract syntax tree and if you look at it you can kind of see like hey I could do something with that tree right I'm a software engineer I bet I can automate the fix that I need to make there's a problem though and Jonathan's experienced this with his XML parser and that is a compiler's abstract index 3 is bare minimum there's there's no uh tabs or spaces there's no comments it's only got a single level of type information it it's going to take some work in order to be able to use this for a transformation that's going to pass code review this is one of the first the first challenges that open rewrite solved and that was to create a format preserving ASD so while the open rewrite parser is is interrogating and build using the compiler to build an abstract syntax tree it's synchronizing that process with the source file so every node of that tree has its prefix it sucks fix it's white space it's comments and the cool thing about that is that it is it's able to like detect the style for an entire Source set and it allows somebody like Jonathan to write a recipe and do a transformation and have that be correct for the source file it'll have tabs or spaces it'll have the braces on a new line Jonathan doesn't have to go in and update every single div with the",
        "correct formatting the open rewrite framework is able to take care of that forum there's another problem though you need full type information as I mentioned the compiler Source tree it's bare minimum it's got single level type information but you really need to know the full depth of the types for every node right so you have a log.info statement is that log for J is it slf or J is it log back in order to really use this framework and to do accurate Transformations which is critical because you you just cannot do harm you need to have full type attribution so",
        "the next challenge of the",
        "so open rewrite solve that problem too the open rewrite abstract syntax tree is both syntactically and semantically aware here's a is a fantastic picture that shows on on one side you have the compiler's syntactical tree and on the other side you have the open rewrite AST and that is without another 6 000 nodes that we had to take off just to make it to where it looked like something besides a ball of string so if you look at that all right Jonathan has got he's got his formatting he's got his type but now he needs to modify that",
        "well yeah even even a simple even a",
        "simple piece of code is surprisingly complex ASD if we're going to make Jonathan be successful and be efficient we needed a templating engine he's a coder he's not an aster right so in in a",
        "demonstration he's going to talk here in just a second about a vulnerability he's fixing zip slip and he needs to end uh insert this simple conditional statement into code all over the place so the open rewrite team we we put our heads down and we solved that we have this templating engine that allows coders to build trees in their native language it's got type substitutions so you can substitute parameters and if you notice in there there's there's very little formatting the open rewrite framework will handle all the formatting for you so if you stick it into a file with tabs it'll be tab spaced",
        "the next thing is a coordinate system",
        "so",
        "you need to be able to enter it at the correct place so here you can Define your template and you can say hey insert it after this statement and here's the parameters I want to substitute into it so with two simple statements Jonathan is able to detect a vulnerability Define the fix and perfectly insert into the space where it belongs and here's just a quick example of what he's able to do at scale and with that I'll pass it back to Jonathan thank you Patrick so",
        "what with the unlock that openrete",
        "provides what other vulnerabilities can we fix with this I'm going to talk to you about three different security vulnerabilities temp directory hijacking partial path reversal and zip slip and how open rearrate allowed us to fix these vulnerabilities at scale so vulnerability number one is a vulnerability called temperature temporary directory hijacking and it",
        "exists because the system temp directory on unix-like systems is shared between all users",
        "and this is the vulnerability the vulnerability exists because it is the creation of a temporary directory in Java um by creating a temporary file calling delete and then calling maker and the reason that people do this is because prior to Java 1.7 there did not exist an API to create temporary directories in Java so a lot of old code uses this pattern and also if you looked up on job on stack Overflow how to create a temperature a temporary directory you'd unintentionally get this vulnerability",
        "um so this vulnerability the reason this code is vulnerable is because there's a race condition the race condition exists between the delete and the maker because when you create the temp file you call delete another user on the local file system can see that deletion and then race the Java process to create the dev directory and if they beat the Java process maker does not fail it returns false so the fix is to throw it well in imperfect fix that you'll see is to throw the maker into the in if and if check however this is not it's not fully uh it's not the best solution because when you use maketer it uses the default you name and the U name will create a directory that is exposed and visible to all other local users so you're still vulnerable to Temporary directory information disclosure so the correct fix for this is to replace it with create temp directory which is an API that was introduced in Java 1.7 Java 1.7 is very old it's been around for a long time it's a safe API to use and for this vulnerability I have quite a few CVS um I did report it a bunch of places but I said okay there's more than I can report let's try to do pull request generation so for this vulnerability I generated 64 pull requests across open source to fix this vulnerability and this is an example of the diff you can see the removal of the delete the removal of the makers and we replace it with this one line that is no longer vulnerable and the Transformations can be more complicated you see we delete these if blocks that are no longer needed as well and leave behind just this one line and this is all using open rewrite and uh in automated vulnerability number two I want to talk to you about is a vulnerability called partial path traversal um let's assume that you have two users on a local file system and you want to you want to write logic that prevents a user from accessing something outside of user Sam but you also have",
        "you also have a user on the system called user Samantha so partial past reversal allows an attacker to access a sibling directory with the same prefix so in this used example user Sam and user Samantha they share the same prefix",
        "and this is a vulnerable code and it's vulnerable because when you have new file in Java and you call get canonical path on it you'll notice that the string that's returned is missing the trailing slash that you originally had in the file and so when you look at this Logic the vulnerability let's assume that you have a user Sam and you have a user supplied malicious value come in user.s Samantha when you call get canonical path on it it normalizes the path and it becomes user Samantha slash baz which does start with user Sam and so our guard is bypassed",
        "and so the fix for this vulnerability is taking this example of original example you one option is to re-add the path separator back in but you're still comparing the strings this is a better solution and the better solution is to use Java's two-pack or path object and",
        "what this starts with is not comparing strings but comparing these path objects so how do we find this vulnerability well first off we look for it we look for Java string starts with calls and then we look before and afterwards for this get canonical path call but we also want to find when we're finding this vulnerability locations where file path separator is not present because we don't want to fix places in the code that are not vulnerable can't be that easy right well developers are going to write code in a lot of different ways and what if a developer writes code like this where they extract that to a variable or they extract the argument to a variable or you they fix the vulnerability but in an extracted variable how do you detect this with automation right with with with you looking at the AST how do you know that this is vulnerable or not we need data flow analysis",
        "data flow analysis allows us to determine what a variable might be at runtime so for example we can look back and see that this get canonical path gets assigned to this variable and flows to that use and also for the other argument it also happens and data flow is not just you know single step it can operate through multiple steps and more complicated chains of calls",
        "dataflow allows us to uncover hard to find vulnerabilities and prevents false positives",
        "and this is the dataflow API if you've written any code ql which I know that most of you probably have not but if you've written any code ql the dataflow API that we that I created for this um is very similar to coqls so if you learn codeql or you learn open rewrite you can translate your knowledge back and forth between these two very easily and this is an example of the fix you can see that the file get parent file we pulled that back out into the new line that we're fixing and fix this vulnerability",
        "and the third vulnerability that I want to talk to you guys about you all about um is zip slip zip slip is an old vulnerability it was um originally discussed I think years and years ago in Frac magazine um but sniff did some research about this vulnerability uh more recently they did some research in 2018 and found a bunch of projects that were vulnerable to zip slip still and reported this vulnerability unfortunately some of the fixes that they found and they reported the fixes were somewhat incomplete um as I discovered in some of the work that I did um zip slip fundamentally is a path traversal vulnerability while unpacking zip files because zip files are entry names to zip contents and this is zip slip in Java the vulnerability exists because of",
        "um this little bit of logic where you're getting the name from a zip entry and that value which could be a path reversal payload is Flowing to the creation of a new directory and so this can lead to remote code execution because you can unpack the contents of a zip file entry over an",
        "executable file and that like bin bash right and that can lead to remote code execution and zip slip is complicated and it's complicated to fix and the reason that it's complicated is because you need to add this guard to prevent this vulnerability",
        "so the problem with this is that not only is this a valid fix but this is also this is also a valid fix how do you determine and again we don't want to fix vulnerabilities that are not present so you need to detect the vulnerabilities presence or if it's not present and not fix vulnerabilities that are not present so how do we determine whether or not this is protected against adequately",
        "and the answer is we need control flow analysis and this also didn't exist in open rewrite um so we added it um and it lets us determine if this logic this guard is present or not and helps us determine whether or not to fix the vulnerability and this is control flow analysis um this graphic was created by my uh wonderful intern sham um to display and it lets it creates a graph that displays",
        "um uh the the control flow through an app through a chunk of code where their basic blocks which are made up of the sequence of operations that are going to occur occur concurrently and then there are condition nodes where there are points where the logic will jump",
        "and for zip slip in this case if we build the Zips if we build the control flow analysis graph we can see that this is properly guarded against by traversing the control flow graph and seeing that there's a guard in place for this starts with call that when it's false or when it yeah when it's false that logic will not that vulnerable logic will not be reached and this lets us know that the vulnerability is not present and we don't need to fix it and so when we put this all together all these bits of Technology data flow analysis control flow analysis we're able to fix zip slip across open source and this is an example of the fix that we generated for one of the one of the projects here's another one where we also clean up the file Constructor while we're working on it just to you know be good developers um and then yeah so at this point I want to talk to you about the complicated nature of polar price generation um but if you've got security vulnerabilities we'll give you a pull request this is a problem with Polar Express generation um one of the problems we have is how fast can we generate pull requests",
        "if you want to generate a pull request you have to do three different things there's file i o git operations and GitHub API calls file IO is free basically it's on your machine git operations are free on GitHub and GitHub API calls are rate limited so you have to consider how many of those you're making so the first thing you do check out this source code branch and apply the diff Fork the repository which is the first API called a GitHub",
        "we're bringing the repository on GitHub and this is important because if you're forking tens hundreds thousands of projects you're gonna end up with name conflicts you need to rename it to a non-conflicting name",
        "clickers being a little fidgety uh you push the change and then you create a pull request on GitHub so for this we have three API calls to GitHub and uh for each one of them they expect you to wait at least one second per per API call per user",
        "um and on top of that uh there's additional rate limits that exist on top of these that they somewhat document and uh you have to deal with um so if there's anybody in the audience from GitHub um make my life a lot easier as a security researcher um but we made it this far we've detected the vulnerability we've detected the style we've fixed the code um and fixed it in the code fix the code in the way that the matches the style of the Developers and we've bypassed the rate limit how do we do this for all the repositories and for this I'm going to pass it back to Patrick thanks well you'd never know from the duck he's a very humble guy um but what do you fail to mention is that control flow and data flow did not exist in open rewrite prior to uh Jonathan and Sean uh these guys they put their heads down they they had a need for for data flow and control flow and it's not easy but they they pulled it off they put their heads down they worked hard and on behalf of the community we definitely want to thank them for their efforts so so the next step right he's got his he's got his pull request he's able to like find these vulnerabilities across thousands of thousands and thousands of projects well",
        "modern provides a free service for open source projects so far it's got like 7 000 projects ingested into it um you can run any of its 800 plus recipes to transform or interrogate software at scale and generate and update your pull requests so you know for I'm going to mention framework migrations in the contents of security context here um one of the great things about being able to automate uh code Transformations let's take for example uh junit the four to five migration and spring boot one to two in order to be secure you need to get your app from Spring boot one to Spring boot two in order to get from swimming boot one to Spring boot two you've got to go from Jane at four to five I don't know if you've been through that process but it's tedious there's an enormous number of break-in changes so leveraging the open rewrite framework we're able to build complete framework migrations so that you can have your project be security",
        "aware and current",
        "so anyways back to Modern will provide the service for open source projects and Jonathan has been able to leverage it to build pull requests at scale so he's able to use his zip slip recipe his create Tim file directory recipe and it'll go through it'll detect changes and actually build these well-formatted pull requests that are signed so to give you kind of an example of how this goes here Jonathan's run his recipe and he's going to say okay I've got all these changes I'm going to build my pull request he's going to go through and he's going to build a wall formatted messages he's going to sign his pull request give it a gpg key and say hey go off to the races and build pull requests and send these to all the maintainers and so this is what Jonathan was able to leverage it was the last step in the work that they've put together with their security recipes and control flow and dataflow and with that I'll hand it back to Jonathan",
        "but there's more than seven thousand repositories in the world right um it's great that opener indexes those projects but there are more vulnerabilities than just that so how do we identify the other vulnerable projects so bring it back to uh what we talked about before I want to talk about code ql again um you can write a code query that gives you a list of projects that are vulnerable code ql",
        "um indexes over 10 100 000 open source projects and 35 000 Java projects and so you can write a query and run it against all these projects and find the vulnerable projects and that'll give you a list of projects that you might want that are good candidates to fix and then contribute that list to this repository and this will make open rewrite and modern aware of this these those projects so you can use you can write recipes to fix against those to fix those vulnerabilities in those projects",
        "so finally with all of these parts let's go generate some polar price and this is what I did um across all of these different projects um I have generated quite a few pull requests the last three are what we've discussed this in and were made possible by the work this year um and uh as of for the new pull request that I've generated in 2022 um there have been over five 590. one of these projects on this list uh the cve uh 2020 uh array host name uh vulner or sorry our host name array or flow that one was actually done by the GitHub security lab team using the python bot that I wrote um but the rest of them were generated by me and for all of these other projects uh in total I've generated over 5200 requests it's my name",
        "and one project was the unhappy recipient of three of the pull requests that I did this year um this was a perforce project actually um so uh we're probably seeing some CVS out of cves out of this and this is my contribution graph my GitHub contribution graph um for 2022. um and you can see the contribution you know the number of contributions compared to the rest of the year just you know so I want to talk about some of the best practices for about chlorofresh generation messaging",
        "you're interacting with maintainers you're dealing in the process of doing this you're interacting with real people and uh developers are pretty normalized having bugs reported to them but not necessarily security vulnerabilities um the uh security vulnerability like security vulnerabilities are like you're telling the maintainer not only have you written the wrong code but you've also potentially exposed your end users to risk and that's a little bit more sensitive to these people see to to the maintainers you need to be conscious of that this is a great saying all software problems are people problems in Disguise and this is very true in this case you need to think about the people you're interacting with what you're reporting the vulnerability you're disclosing and so I'm going to jump through a couple lessons as well on top of that uh lesson one sign off on all your commits um this is an example of signed off commit uh the reason you want to do this is uh uh there was a bunch of lawsuits against open source maintainers yada yada yada tldr lawyers",
        "um if you don't you'll get your pull request rejected by evil dragon bureaucrats lesson number two be a good committee um gpg sign your commits this is what it looks like uh and if you don't you might get impersonated like liners torvald has been on GitHub a couple of times um ccom is a standardized format for commit messages that are security related this is what it looks like kind of I reckon there's not enough time to discuss it here I recommend looking it up it's a good structured way of saying what the vulnerability was in the commit in the commit history lesson number four there are risks to using your personal GitHub account to do this um is anybody here familiar uh with github's angry unicorn",
        "this was my profile for most of 2020. I broke my GitHub profile doing this um apparently something generating this many polar requests can break your account",
        "um and then uh lesson number five coordinate with GitHub uh reach out before uh generating pull",
        "requests and",
        "um uh let them know that you're gonna do this so you don't get banned basically um and then uh I'm a lesson uh consider the implications",
        "I received this issue shortly after I",
        "reported I started generating pull requests and I use the term coordinated disclosure because uh you know we move",
        "forward it's not about responsible school it's about according to disclosure but regardless of what term you use the answer is no this is full disclosure of a security vulnerability so you need to be conscious of that is it important you need you need to be clear about the messaging so the maintainer can do make something actionable but you need to be aware that you're potentially dropping an O Day on an organization a team a group of people but I argue",
        "that at the scale at which you're able to fix security vulnerabilities with this technique if the alternative is not fixing them at all because there's too many of them the trade-offs are worth the downsides of dropping o days potentially across a spread of Open Source projects to try to get those vulnerabilities actually fixed",
        "and so I want to leave you with this final conclusion as security researchers",
        "we know that these vulnerable we have sorry we have an obligation to society we know these vulnerabilities are out there we've seen them in pen test reports we've written them ourselves we've found them in open source projects we see them again and again and again these vulnerabilities are old and they",
        "shouldn't we shouldn't be dealing with the same old vulnerabilities again and again and again every single year we should be looking for new things we're wasting our time and our energy and our employers money doing this",
        "there's a state there's a quote from GitHub for every 500 developers you have one security researcher the the statistics the odds are stacked against us the the number of vulner the number of vulnerabilities being developed and written by Developers there's not enough of us to get these things fixed to identify them to report them it just doesn't scale well",
        "and so I argue that this technique of multiple request generation is the best way to describe to scale our knowledge of math science technology and security vulnerabilities to have the highest positive impact that we can in the open source world and the security of our organizations",
        "and so for this I want to leave you with one final Dan Kaminsky quote it's from his Twitter profile it's there to this day",
        "we can fix it we have the technology okay we need to create this technology all right the policy guys are marking with the technology relax We're on it",
        "and so I want to leave you with some sound bites learn code 2L um it's an incredibly powerful language and you can do some really cool things with it uh contribute to open rewrite and the deploy your fixes at scale and uh join the GitHub security lab and open red slack channels you can discuss the vulnerabilities you want to fix and have a really positive impact in the world and on top of that I'm not listed on there but if you want to get engaged in open source security in general and discuss these problems um consider joining the GitHub security sorry consider joining um the Linux Foundation open source security Foundation where there are active conversations going on about open source security on a date weekly basis",
        "um and with that I want to thank human my employer uh modern for making this possible this technology all of this and Lydia Giuliano the speaker black hat speaker coach who helped turn this presentation into what it was and Sean my intern uh for the spectacular graphics and the work that we put in putting together to make control of what happen so [Music]",
        "[Music]"
    ],
    "zihLJbmDG3Q": [
        "[Music]",
        "hi ladies and gentlemen hope you enjoy your lunch and thank you for coming back here for our talk we are a group of researchers based in Singapore my name is I represent NCS it's a digital and",
        "Technology service provider and I run the cyber security R D team and with me is my collaborator Levy we used to work for NCS and is now a senior research scientist with esta which is a national Research Institute in Singapore and before I start just want to acknowledge and thank the nus NCS research lab for supporting our works",
        "in the first half of last year there were 124 car thefts including 42",
        "luxury cars occur in a city in Canada called Oakville the city has only about a couple of hundred thousands of residents and there's quite a lot of contents for relatively small City",
        "and more than 50 of the car sales involve Killers technology",
        "targeting a broad range of cars including Lexus Range Rovers Ford and",
        "Etc and in a separate incident in April this year a warning statement was issued to the public of a mid-ausar in Northern Ireland after six cars were stolen without using the original car keys basically the car will not still had keys with them and there are more such incidents reported in the media",
        "these days it's feasible to steal a car without even physically breaking into the car without having access to a car key or alerting the car owner",
        "the increase",
        "um the device of car theft has been reported not just in the public media but also by Automotive driven industry",
        "forums such as Auto Isaac right which is a global Community for sharing threat intelligence about emerging Automotive cyber security risk in their annual threat assessment report one of their key judgments was that the the risk of killers contact will continue to rise",
        "in general there are two types of threat against Killers entry systems non-intrusive and intrusive",
        "the non-intrusive types usually involve eavesdropping or manipulation of radio signals without having access or making",
        "changes to the underlying components of the aquilas entry systems for example an",
        "attacker could use very simple signal jamming to prevent a lock command from reaching a car so that the car remains unlocked the other examples are relay and repair tanks and there are some differences between the two a relay attacks is usually perform real time with the intention to extend the boundary of communication range between a car and its corresponding key fob on the other hand a replay attacks is usually performed offline the attacker first capture the signal and then will only replay it at a later time",
        "attack on key management and cryptographic algorithms are more inclusive as they require direct access to the in vehicle Network for example ODB port or ecu's",
        "furthermore these are usually more sophisticated and delicate as they require more expensive potentially more expensive devices and Technology and also deep knowledge in crypto analysis and reverse engineering skill set as well",
        "in this talk we're going to focus on non-intrusive replay attacks",
        "if you do a quick search on replay attacks on cars these are probably some of the recent headlines that you would find",
        "there was an article about um",
        "a hack on on that vehicle published earlier this year by blipping computer two researchers discover a hack they allow them to unlock Honda Civic what's interesting about this was that they showed that codes transmitted by key fob can be flipped to perform a different function for example the code corresponding to a log command can be turned into an unlock command by flipping some of the beats in the codes separately in another article which",
        "which was published very recently just few weeks ago also targeting Honda cars two researchers discovered that of Honda car can also be unlocked by signing commands in a constructive sequence",
        "and by the way no offense to those who work for Honda this is just based on what I found in fact I'm a great supporter of Honda because I own a Honda Jazz",
        "but please don't hack or steal my car it's a very old one",
        "so um why why does our findings matter",
        "we started our research on this topic about 15 16 minutes ago",
        "by trying to replicate some of the previously reported replay attacks in",
        "doing so we had our initial Discovery around August last year when we observe an unusual behavior that",
        "a car can be unlocked using or by replaying through consecutive unlock signals within five seconds right two signals and it has to be within five seconds we thought that that was quite an interesting finding as researchers we wanted to know if it is repeatable and can be generalized so we try that on more cars in the next few months but we didn't make much progress",
        "the Breakthrough came subsequently in",
        "one of car tests that we carried out sometime in March this year when we discovered that a car can also be unlocked using more than two consecutive unlock signals right and not necessarily within a time uh specific time window and what was really exciting was that in addition we also discovered other attack metrics that work across different comics and models so now our findings become very interesting because we show that it's more than a simple replay attack right it's about different ways and and variations of how we can use or we can replay signals",
        "um using different attack parameters I'm just giving a teaser for now if you are interested in a details of please stay tuned another interesting observation we made was that um we found that our findings seems to be consistent with some assessment performed by catch some research It's a UK based company that provides security assessment on vehicle Technologies",
        "so a couple of years ago they assessed 13 new cars on whether they have commonly accepted security measures in place including resistance against digital car theft so in comparison to our findings those that were rated poor or basic India assessment tend to also be vulnerable to our rollback attack and on the contrary those celebrated Superior in the assessment also tend to be safe against rollback",
        "and as far as responsible disclosure is concerned we reached out to two of the effect affected default Chief",
        "manufacturers and one of them brought back to us and we had a very good discussion with him which then led us to give a give a",
        "sharing session we don't want to affected the car or VMS via Auto insight",
        "and since then we were told that the relevant car vendors and their respective suppliers have started their investigation into the root cause",
        "and with that I'm going to hand over to Levy",
        "um who did an amazing job to bring this research to the next level from where we began he's going to walk through with you on Discovery journey by sharing the details or findings including how we have adapted our research strategy along the way",
        "thank you for the quick introduction so let me quickly go into the details let me first talk about rolling codes A system that has been designed more than 20 years ago it's quite prevalent and the reason why it was defined to actually prevent any replay attack but the reason why you're here is to see that it's still not 100 sufficient so the way how it works is quite easy so every time you press an unlock button on your key fob basically every signal is unique so you won't find any two signals emitted from the key fob which looks the same and the way how it works is that when you press the button there is a counter in the key fob and there's also a counter at the car and every time the signal is received by the car it also increases the counter for the next future use and if all these counters are in sync it means that everything is okay and the car unlocks but there is a safety provisioning feature embedded into the system because of accidental button presses because this is something that usually happens you just have a kid playing around with your key fob or just accidentally your pocket comes to life and then presses a button and of course outside of the vicinity of the vehicle for this purposes there is a provision made in the system so it's basically allowed to do so so the key fob can be in a more advanced State regarding the counters compared to the vehicle itself and basically when you go again to your vehicle with your key fob which has had the advanced counters you just send it again a new signal and they will be re-synchronizing again and everything works as it should be as it should be working so now from this you can already imagine that basically there is some sort of a straightforward exploit into this right because if an attacker can capture those accidental button presses then eventually you can take those signals and you can go to the vehicle and then basically to straightforward exploit so you can get access to those future codes and then you can access to the vehicle but the thing is that the reason why most of the vendors do not really care about it is because obtaining such future codes are extremely difficult especially if you want to Target someone it might easy to prank your friend or your mom you go to a coffee shop you pay your friend a cup of coffee goes out to the restroom and then you take the kefir from the table and and record the signal that's fine but normally it's extremely difficult to to get them and the thing is that recently I mean we are keep saying recently but it was almost seven years ago when there was this famous or I would say Infamous attack called rojam which was basically uh using a careful sequence of signal jamming capturing and replaying to lure the victim into a situation where you can get those future codes easily and the thing is that even the order of it was semi-com car uh I think that guy is much more famous than we are but the thing is that even he said and many other researchers said that that attack is not a hack so it's not something like Breaking an encryption key or something it's just basically converts this safety provisioning feature into an exploit so the way how it works let me quickly also go through that because it's easier to understand first how it worked and then when I talk about our attack it will be much more easier to see how similar it is or how much it differs from this road gem attack so Road gem attack is basically you have a small device that nowadays you can get even less than 30 US Dollars and what that device can do is basically it can capture signals it can jam the frequency band and it can also replace signals and the way how it is deployed is basically it's it acts as a man in the middle of proxy between the key fob and the car so it's this device is something that you hide in a hidden spot near to the vehicle and then it has a clear reception of the signals and it can also Jam the frequency man so the way how it works is that you the owner come back to your parking lot where you left your car you press the unlock button once because you want to get onto your car and then this road gem device sits in between the car and you and then basically Gems or frequency band which makes the car unable to receive the signal and at the same time what it does is that it also captures this signal and then since the vehicle won't react because the signal was jammed is that what do we do we are just human beings we just accept maybe the button the the button was not working or there was a lousy signal reception so we just press the button again and then what the device is doing is basically the same so we are still keep jamming the frequency band we are still capturing the consecutive second analog signal but here comes a catch because at the same time then we replay the previously captured signal and then basically the vehicle will act as intended we the owner just assumed that there was indeed uh allows a signal reception everything is fine I only want to drive away my car so I'm not going to think about why it was not working for the first time I'm just happy it was working for the second time so then the thing is that the attacker is now basically having that future code which is now turned as unlock signal 2 and then it basically follows the victim until a point when the victim will leave the vehicle again locks it and go home or just do the grocery whatever and then the attacker can come and instruct this device or whatever other means but the thing is that when replaying this second unlock signal but he or she captured then he will have access to the car okay so now let's see how our attack which is kind of like capturing the same name but because of how it works to be termed as rollback it's a Time agnostic resynchronization attack and the way how it works uh I'm going to go through the same example just to make a a good comparison to rollback so basically the setup is similar so we have a device which can capture Gem and replace signals and the way how it works the first step is basically the same so you go to your vehicle you try to unlock it you press the button but nothing happens because we are jamming the signal and we're also capturing your unlock signal and what happens next is is already something that it's different from row Jam is that for the second time we don't really care about whether the vehicle receives that second signal or not the only purpose why we jump for the first time is because we want you to press the button twice to capture two signals but we don't care whether the vehicle receives it or the vehicle can be unlocked doesn't matter and if I just continue this doesn't matter kind of approach the thing is that we even let the vehicle to be used as normal so you can keep using your key fob you can locate unlock it lock it unlock it as many times as you want I I'm the attacker I don't have to follow you uh to the next spot to see when will you leave again your vehicle attended it doesn't matter the thing what I can do is basically you just I wait for the right moment where you leave your vehicle unattended and then I just get my t two unlock signals that I captured before and I replay it and it's done basically for some reason the vehicle or most of the vehicle get unlocked and then you have access to the car so the way and why that we call it rollback and what are the advantages compared to row gem so why rollback I don't know how familiar you are with some old traditional database systems but rollback is a mechanism in traditional database systems when basically before committing all your changes you can issue this rollback comment which basically goes back to your previous checkpoint so that's why we are calling your rollback we because we've seen that when we are replaying these signals these kind of rolling code counters are rolling back to a previous state and then from there again all the signals that should be invalid already start to work again um so basically this is a quick example to see so what you can see on this on on the image is that we have five signals and all the five signals have been emitted from the key fob and also received by the vehicle so in the time we are somewhere here at the end so the last unlock signal was received that we are collected as intended and whatever and we also have all the signals just to be sure and then according to how the rolling ecosystem works right it means that all these signals are invalid and cannot be worked again what we can do is that if I'm actually captured the signals and I replay these two signals here the first two one what we've seen is that basically we are rolling back the rolling post to the state which was encoded in the second signal that we replayed uh and of course according to again how rolling ecosystem Works those two signals will be invalid again but eventually all the signals that were basically after that point which should be already invalidated starts to be valid again just because we roll back it's kind of like a time machine we just roll back everything and that's why we call our attack time agnostic and uh the thing is that just because of this feature uh unlike the road gem basically we can launch this attack at any time in the future so I don't have to follow you I just capture your two signals or three signals whatever I'm going to talk about that later and I can launch my attack anytime uh and the thing is that I can also launch it as many times as I want so it's very easy for the attacker I just capture your signals once and I can basically relaunch it indefinitely uh against your vehicle so that's why we call it kind of like more effective than Road gem but as we you will see at the end of my presentation about the results why row gem is something that is tricks with the technology so it basically breaks all rolling code based systems our attack is something that is uh probably affecting 70 of the vehicles but this is just about the set of vehicles that we tested so we don't know the exact numbers but for for some uh for now we at least found uh some vehicles that are not actually susceptible to attack and on the other hand we also seen that there are different systems in the system which basically means that we have different variants of rollback and the properties that this attack has is basically one of the first properties which is very important is that how many signals I have to capture to get access to your car this is a very important is it just two signals or there are some cars that might require you to capture three signals or five signals and why is it important because capturing two signals is probably not as difficult as finding someone who will press the button five times for instance consecutively because that's very suspicious uh so it's a very important feature the other thing is that what we have also seen that once you capture the signals do those signals have to be really strictly consecutive or is it okay if you just capture two signals let's say one on Monday and one on Friday and in between Maybe the owner was using the key for the 100 times doesn't matter and the third property what is important is the time frame it's not that important though because you can really play around with the time frame but the time frame here defines how fast I have to replay these uh these captured signals and the variance that we see is basically we identified four variants so far so it doesn't mean that we only have four maybe there are more in the wild but we just didn't found it the first one which I really have to emphasize is that that's particularly alarming because the first one requires only two signals to be captured and the sequence part lose means that those signals don't have to be consecutive which means that I just follow you once you press the unlock signal on Monday and then I see you again uh next next week you come to the work and then I again capture your unlock signal and by just replaying those two I can basically access your vehicle so I'm really reducing the chance basically of being caught when I'm capturing your signals and the rest are basically uh a little bit um more difficult in terms of how many signals you have and how consecutive the signals have to be and all these things so before getting into the details I have to make a disclaimer so we haven't done any real attempts in a while and we always remove those signals that we captured except two cases when we were trying to prove at least for ourselves the time agnostic feature of rollback that I just mentioned before and the other thing I have to emphasize that just like rollback any kind of Replay attack by default doesn't make any harm to your vehicle I don't want to say this to just rush home and try our attack on your own vehicle but it's something that doesn't make any harm to the to the car sometimes you might get locked out by being by having your key fob banned for a while but eventually by using the physical case you can always get access to your car and then do some recent transition tricks without basically bringing your car to the workshop so it's not a big thing um so the the evaluation we have done is quite limited for now um so we basically had access to a couple of Japanese cars mostly or like Asian cars no wonder why they're coming from a southeast Asia so basically what we can",
        "make here is some kind of a blurry conclusion still so what we have identified at at least the vehicles that we found vulnerable the age doesn't matter because this is something that most people will think about it yeah you found the vulnerability that might affect some old vehicle I just bought my car two years ago so that's probably not effective but this is not we have seen so we have seen uh 10 plus year old car or even two years old car that were acting in the same way and being vulnerable to the attack the other thing is that the drivetrain also doesn't matter so you cannot say that okay I'm driving a hybrid or I'm driving an electric car which probably means there are more electronic systems inside of it there are some any software or some further measures that might prevent this no the remote keyless entry system is probably the same doesn't matter how your vehicle is basically uh made and the most important part is that all of the popular Asian cars that we have tested are affected and actually some of these cars are also very popular in the US and all around the world so that's why it's quite important and we've seen that like old tested Mazda Honda and Kia vehicles were vulnerable and for some reason we found that Toyota is not so who is driving a Toyota uh then you you don't have to go home and try this because at least the Toyotas that we had access to they were not vulnerable at all and the other thing what we try to find is uh okay I forgot to mention that some of the details on the slides are purposely obscured but it's going to be released soon probably a couple of weeks later after black hat to release reveal what are the models that we have tested but we are still in kind of like in the middle of the some clearance process so we cannot reveal those models for now and also not the our key manufacturers but what we have identified that manufacturer 2 and manufacture three these are the Key Food manufacturers I mean if you have some sort of knowledge about Vehicles you might can't guess who are they uh but they are very prevalent ones and then these two manufacturers are basically affected and they only require two signals and most of the vehicles from which are using actually a key fob from manufacturer one were also affected and most of the vehicles require actually three signals so this is already something that I was referring to in my previous slide so some Vehicles need more than two signals so most of the vehicles need three signals and Honda vehicles for some reason needs five signals it's something like already a counter measure but then Wi-Fi and uh why does it work with five and as as you can see Toyota is using a key fob from a manufacturer 4 so it's not affected at all but I have to emphasize that not the key fob itself is vulnerable in this in this scenario so the key fob is just emitting the signals the main logic is basically in the receiving part and usually the key fob manufacturer is not the one who is making the receiving part in the vehicle now I have a demo just because I talked anyway too much so let's see how our attack Works uh in the reality okay all",
        "right so now here we are going to uh present our effect roll backwards so this is a quite new monster to a hatchback vehicle we have the key pop here so this is now I'm just showing you that the key fob is itself the info which belongs to the vehicle so if I press the open you can see now it's open the flashing lights are there and I can also close it and then now I close you can see that the mirrors are holding and I can reopen it again so this is the key fob that belongs to the vehicle and now what we are going to do is to record the input signals uh actually a few keep up signals and we will see whether we can unlock the vehicle by just replaying those old hip-hop signals uh which we of course shouldn't be able to do so so now so this is a quick and true I wanted to fast forward it but basically that we are using is a quite commodity of the Shelf devices I have a laptop I have a heck RF connected to my laptop through USB and then basically this is like so uh so now what I'm going to do is just before the unlock signal so now I'm not jamming any signal or whatever this is the car rental scenario so I have access the key fob so I just record one hook unlock and another unlock and another unlocked and let's say I also record a few more I don't know let's say five dollars okay",
        "yeah so now it's also again fast forward a bit because sometimes saving the signals takes some time but don't worry it's just just so what now I'm going to do is to replay this enough I put the key Focus I'm not touching the keyboard there is no any uh extra trick in the background so what I'm what I'm going to do is to replay the signals and now you can see that the vehicle is closed because the the mirrors are folded okay so I'm just replaying the signals and what we are going to see here is that when I we play the third signal uh this one then the rolling Code system will be re-synthesizing back to the previous state and then the vehicle will unlock and every further unlock signals here will also work you will also see this from the flashing light so now I I replay the signals",
        "we have the blue bar indicates the current status so now we will play the first signal and then the second signal and now the third signal",
        "and now it holds it so now you see that the vehicle actually unlocked the mirrors came off so the vehicle is locked foreign",
        "if I play further then if you will see from the flashing lights that it still works",
        "it's still a lot to do",
        "and it still unlocks again so now we are back to the original state where we actually left with the key fob uh but I can still replay again all these signals to see whether we can do the resynchronization again so now if I start again what we should expect that of course these first three signals won't work uh because now in the time they are somewhere here but let's see again so I replayed the first one nothing happens the second one and then the third one and then it's again locks the flashing signals out here and it's keep working",
        "okay so now what I'm going to see and show you that now I start to use the key form so the key fob is of course belonging to the owner so we we still let the victim to to use the key fob as usual so now I can just lock my vehicle I'm just leaving it or I just unlock it again I open the door of course I can sit in I can drive away it doesn't matter and then I again brought back my vehicle if this is still a functioning scenario or I just brought back my car to my own parking lot at my home and I just lock the vehicle and then I go away I leave the key fob on the top of the vehicle to just see so the victim went away and now we again we come back we have all the previously capture signals which is still the old signals we capture back in the past so we don't need any more signals to be captured we just only need this capturing process once and now I just start trying to reopen the vehicle again so I again focus on the on the on the mirrors of course so now we will pay our old signals the one two and for the third time it's going to open and then the vehicles are Vehicles the mirrors are unfolded and I have access to the vehicle so yeah this is how it thank you",
        "it's not over yet it's not over yet uh so there is something new that we also found after submitting our our talk uh to blackhead is that our attack rollback is also instruction agnostic which means that it doesn't really matter what kind of signal you capture so you don't even have to focus to whether it's an unlock signal or not so the thing is that we confirm this to Mazda and also for Kia and we're going to show you a video about that so it doesn't matter what kind of signal that you have it's just to be usually consecutive if that's the scenario which makes everything even more easier if you thought that it's already very easy to do now you even have less things to do if you are an attacker so basically the victim goes to the parking lot again and then presses the lock button and usually you anyway press the lock button twice because the first lock button is something that is a silent lock and then you press it again just to see whether the flashing lights are on and then the vehicle honks anyway to double confirm that okay you have left your car adequately closed and then basically I have already two signals uh and then I just wait for you to finish your grocery you come back and you're going to unlock the car and now I just realized when I rented the car here that basically if I press the unlock button White Once it only opens my side door my driving door but my is complaining all the time why am I not leaving uh getting her inside so I always had to press the unlock button twice anyway so just because of these extra safety measures it's basically making our cars even more vulnerable to our attack so we can easily profit out of it and I just also want to take a note about car sharing and car renting so it's even much more easier right because if it's a car sharing scenario then you can easily have access to the key fob anyway so I can record the signal and later on I just let someone else to use the vehicle but using the websites or whatever Services the car sharing things are providing us I can basically keep track of the vehicles and I can go and unlock it whenever I want and the thing is that our attack is just about unlocking the vehicle but in a car sharing scenario the key fob is also usually kept inside a car so I just replay my two signals and then I can go later on and I basically not just have access to the car but I can easily steal the car of course there are probably some other measures from the car sharing company but it's not we are going to test this one uh whether our effect is actually agnostic for the instruction embedded in the signals so the main question here is that is it only the matter of the Rolling code and the counters or also it depends on what is the instruction in the signals so now we can see that this vehicle is open",
        "and normally we we're only talking about Outlook signals in the beginning we were always focusing on the unlock signals we wanted to capture unlock signals only but for the sake of the attacker uh it's actually easier to capture a lock signal and an unlock signal because this is how we usually use the vehicle so this is what we're going to test so the vehicle is still unlocked uh now what I'm going to do is that I'm using the key fob I will record the signal a lock signal first because that's the usual scenario when I just left the car in the parking lot so then I go away and then I actually like imitating the scenario when the victim comes back and unlocks the vehicle because he or she wants to drive the vehicle away so this is what we're going to do so now I capture a lock signal there's a lock signal you can see that the mirrors are folded and the vehicle is now on unlocked and then I capture an unlock signal so it's two different signals and I don't capture any more signals because we know that for this vehicle we only need two signals uh so now I'm going to replay this uh but first I have to save so it's a walk and unlock",
        "I'll just save it again uh it takes quite some seconds okay I have it",
        "so now I just love the vehicle uh at least to to get the rolling system to be triggered at least once uh and eventually I'm going to unlock it at the end so we have basically a lock signal here and an unlock signal I just removed the space here for the sake of time so let's see what will happen so now we replay the lock signal and the unlock signal",
        "and you can see that the vehicle has been unlocked uh so yeah the mirrors again came off the emergency lights were flashing and we can access the vehicle so basically to prove that this vehicle uh and it actually applies for the Mazda vehicle as well that it only requires two signals or the Mazda vehicle requires three signals but the whole effect is agnostic to the instruction in the signal so it doesn't matter if it's a lock or an unlock signals they are using the same rolling code we just only have to replay those consecutive signals and it will work",
        "okay that was the second video so let's talk about the root cause and the mitigation which is basically still something that are the missing pieces of the puzzle so even though we uh conducted some of the vendors and they got back to us we had some sessions uh with with them but basically the root cause now is still unknown and the thing is that most of these things are anyway proprietary so we simple researchers don't really have access to that and to be honest we don't have the knowledge for now to tear down the vehicle and get access to that specific ECU and see really how it works so now we are kind of like doing some black box testing in this uh in this research at this stage but we try to find something that might be the reason but it's still just the might a very big might because as I mentioned all of there are proprietary so you don't have access to it but there is a keyfold learning process which is basically standardized or at least released by one of the key for manufacturer which is microchip so now you know that out of the four that I was referring to in my previous table one of them is microchip and they have some kind of documentation when you have this key fob learning process it's basically a process when you lost your key fob and you get a new one from a from a dealership and then you want the key fob to be learned to your vehicle to make it to usable so the thing how what we've seen is that basically there are some steps you don't really have to focus all the steps in this flowchart but there are some steps that are quite in line with how we are doing so you can see that there is a one unlock signal or whatever and then there is a second button press and at the end there is the key fob uh synchronization process on the other hand you see a lot of other boxes which are not quite in line how our attack rollback works because normally as you can see you somehow uh sorry this one you somehow have to enter into the learning mode and once you learn the keep up to the vehicle it automatically exits from the mode so it's either some of the vehicles are in the learning mode forever I don't know maybe can be a thing the other thing is that also there is no indication about the time frame how fast you have to press the buttons when you're learning the key fob uh the vehicle reaction is also not part of the specification once you are learning a key fob will the vehicle really act according to the button you are pressing we don't know and the other thing we don't know is that no one really learned a key fob to the vehicle if you already have the key for self so what happens basically when you're learning an already existing key fob to the vehicle it's also not part of the specification but at least it's something that mimics how our attack Works uh what about the mitigation so I usually say something like a general advice that works against jamming attacks if you are just very precautious and you always watch when you press a button how the vehicle reacts that's okay but rollback as I mentioned doesn't need jamming at all so it's kind of like a passive listener and just because of the time agnostic feature you won't be able to basically prevent it so probably the best thing to do is do some additional measure to the system not only use rolling code but use some timestamps or whatever to make it more uh",
        "I mean less susceptible to attack so the three main takeaways of our talk is basically that we show that this is this attack called rollback and we show that by capturing and replaying a couple of signals and we can basically re-synchronize the rolling Code system and I can also unlock your vehicle and uh we proved it that many Asian cars are basically vulnerable and it doesn't matter what instructions are in the key fob the other thing is that unlike Road gem our attack is basically does not require signal jamming at all you can only capture the signal once uh and then you can use it indefinitely basically for live I would say and the capture signals uh yeah as I just mentioned you can replay it as at any time in the future and as many times as required so it's uh you're almost like the owner of the car at some point and the third most important part is was just basically about my previous slide that we still don't know the root cause so please don't rush into it to to eBay and buy a hack RF on your own and then you know use this knowledge that you just gained here and then play around in a parking lot uh but there's no explicit mitigation for the time being uh but probably there could be some measures that might be uh implemented in the future but now we don't know this so for that I'd like to uh finish our talks thanks for for joining us and I would like to also thank again for our co-authors from nus who take part and now we are ready to take questions [Music]",
        "thank you"
    ],
    "0luKwbyivSs": [
        "[Music]",
        "foreign",
        "hello everybody thank you so much for showing up uh to our first ever black hat talk um thanks to everybody that you know has sort of supported the whole effort uh my name is Juan Andre rosade which is why Jags is fine um my friend Tom Hagel here yeah Tom Hagel uh senior and threat researcher with Sentinel one and we are part of the Sentinel Labs team over at Sentinel one which you may have become very acquainted with at the airport on the way here so today we're going to talk about uh certain aspects of the invasion of",
        "Ukraine Russian war on Ukraine and try to discuss it in terms of some of like the Cyber war pontificating that has been discussed but first and foremost like I just want to take a moment like I know uh Victor joro is here earlier we want to be light-hearted we want to kind of talk about this in an entertaining way but it's kind of hard to overlook the fact that like there's a real war there's people suffering there's this kind of horrendous thing happening halfway across the world and at the end of the day we're playing games with malware but it's just sort of important to keep this thing in context so we definitely don't want to make light of it and the same breath like we'd love to pretend that like Sentinel Labs is just full of geniuses and we did all this by ourselves but that's really not true so I think I",
        "need to give a lot of credit to our friends at ESET the folks at cisa Cyber command cert UA a thousand percent mandia and semantec inquest Talos Mystic",
        "Red Canary everybody that has been contributing to this from the beginning of the invasion and sort of the rollout of these wipers uh I think it's actually probably been the best period of sort of selfless threat Intel collaboration since the stuxnet phase so I think it just a minute to sort of appreciate the fact that everybody has kind of come rushing uh to the aid of this so why cyber War like honestly this term should make us groan but we've gotten to a point where like we have said that cyber is now um the term du jour and cyber War seems to be like a pet theory of a lot of folks where Ukraine was gonna be like",
        "where we were going to see this or we weren't depending on who you were talking to the truth is that this has been a moving Target every week has been new developments new wipers new malware new operations it's incredibly hard to keep track not just of the Cyber operations but also like the reality on the ground who's telling the truth who's agronizing their claims a lot of activist stuff DDOS stuff that really maybe is not as significant a lot of really significant attacks that lack a lot of context so it's kind of hard to tell so you can't blame folks for not necessarily getting it right but then there's folks that maybe don't care to get it right so if you were watching newspapers op-eds Etc you could basically get every opinion you could possibly want on whether cyber War was happening right you got a bunch of articles by folks that are usually mistaken anyways uh talking about how like cyber War didn't happen they're written like three days after the invasion started so they were very present uh then you've got the sort of like sorta crowd in the middle we're like well you know it's kind of happening but we missed it or like it isn't what we expected it to be and so on um and then you've got sort of like the more emphatic crowd of like it is happening um or it's happening and you're not seeing it which is probably a better way to to kind of handle it but at the end of the day I think we're just kind of missing some required reading cyber war is a terrible term for a variety of reasons most importantly because in a very Western context we keep expecting it to be its own domain of warfare self-contained self-sufficient so like someday we're going to have a wonderful game of Battleship and like No One's Gonna Die we're all just going to hack each other from far away and that's a war and obviously that's not the reality of War it's certainly not the reality of War for the Russians uh this is basically required reading for anybody that cares about the actual like cyber attacks offensive side of the house please",
        "so if you're going to be taking this and starting to talk cyber war from our perspective there are a few things you need to first uh take into account that some have obviously missed you know the first thing is taking uh looking at all the incidents that have occurred in the first weeks to months that continue to ongo today within regard to Ukraine and all the Cyber activity so we're going to kind of dive into that a bit um and then the essentially the consideration for Preparation leading up to and the action's taken uh therein after right after the invasion so",
        "that ultimately brings us to the question of what in this rises above the threshold of what should be considered cyber War uh you know what part of this is Warfare rather than just the traditional run-of-the-mill Espionage or destructive attacks that we tend to see historically uh over the years and then we're going to kind of dive in at the end towards what we kind of look at as the outlook for the Russian threat landscape and then I think the the changes we might see in from the industry uh related to this conflict or originating from this conflict",
        "so the intention of this is uh quite",
        "messy you're not intended to read it all it's a lot uh so this is a an initial timeline of about the first two months or so of uh public reporting modified",
        "with what we know today around threat activity related to Ukraine and kind of everything associated with the conflict uh in the first section number one we have the uh the the pre-positioning the preparation leading up to the invasion and this is stuff like we see all that that SMS uh fishing campaign we see the",
        "uh the general um uh you know uh fishing for uh Finn and gov in Ukraine and so forth and that leads us right up to some of the uh final announcements right before the invasion around like Cyclops blink related to sand worm and then uh unknowing to us at the time that's right when the Hermetic wiper campaign really began to get his foot holding organizations ultimately leading up to",
        "immediately right after the invasion this is kind of the first wave of attacks we we began to track and again a lot of this is on public reporting and I'm sure you know as time continues who uh to move forward we're going to learn a lot about new campaigns that occurred at that time that we just don't know about so this is a lot of the initial wipers uh you saw the Hermetic wafer Campaign which we'll dive to here in a second and a lot of the immediate fishing campaigns to get footholds in certain organizations with throughout Ukraine",
        "and and number three here is kind of right around the time we began to see more of the the hacktivism stuff to to kind of start to ramp up in the days right after the invasion and obviously the timeline here is fuzzy and there's a lot that kind of overlaps between things but there's you know the Conti leaks we start to see um opinions on from crimeware groups on who they support and who they're against politically and so forth so it was an interesting shift in kind of the norm for what we see as the threat landscape globally at that point and then as we continue to today this is obviously a massive cluster of activity and it goes on throughout throughout today but more or less continued efforts to can conduct Espionage get foothold in certain organizations and then this timeline concludes quite a while ago with the uh the industrator 2 activity which we'll highlight here in a second as well",
        "so with all of that we can also consider the amazing work done by Ukrainian cert team so this is a timeline indicating public reporting from their alerts on their website that you know a lot of people don't talk about it like this but the industry as a whole relied on those alerts to get early insight into activity that we just didn't have Telemetry on in many cases so the the alerts from Ukraine's hurt Honestly made a massive difference to the global perception of what's happening it allowed us as threat researchers to dive in and identify new activity expand the intelligence that they found do some attribution find a lot of just interesting links overall so Kudos major kudos to Ukrainian certain anyone that's been assisting them over the over the uh the weeks and months of the invasion to that point I would suggest that for all the discussions that we tend to have about information sharing and public private Partnerships and all this kind of stuff um drink the there's something to be said about sort of what cert UA has been able to do what necessity has bred and the fact that you act like when push comes to shove you can actually remove all this ridiculous red tape and enable folks to help you so it's an example that I hope we learn from going forward",
        "yeah absolutely and for context this timeline shows a couple different things yellow we have more the scam stuff that they've reported orange Statin tends to lean heavily into crimeware and red is leaning very closely into likely apt or confirmed apt activity related to Ukraine and they've also had multiple cases where they report on stuff not related to Ukraine such as activity targeting Russian organizations which has been fascinating and you can see this activity actually began the green line is when The Invasion uh kicked off and starting on the far left-hand side beginning of 2022 so you can see right at The Invasion it's just been a complete flood and shift in the way that they do reporting so it's been quite fascinating to see from the outside oh sorry my theme is like completely off here no worries give me one second guys just so this will look a little better slides so what you're seeing here is",
        "kind of a summary of Spark Notes so to say of that giant mess of a timeline of what we see actors uh what we see related to actor wise and malware campaigns associated with uh with each actor and their aliases so the top gray boxes are what we refer to as the primary name of the certain actor the purple text underneath is an alias used by either one organization or another and then the the text underneath obviously leads to their malware campaigns or certain activity that they've been associated with like this has been particularly it's been a big headache like look just because the people who hate like sort of all the naming conventions all the vendor stuff like I totally get it it's not any easier for us either like you end up having to do a whole lot of uh cross matching and trying to figure out like what so and so calls this actually maps onto that more importantly because it's a shifting landscape we've had so much early reporting that there were a lot of unks or threat actor names or UAC number number um that ultimately would fold into our known naming schemes or into groups that we already knew about but you don't know that in the first few hours in the first few weeks in the first few months so there's been a lot of going back and just trying to kind of keep these things straight and if you're you know paying attention there's some that are continue to be unattributed on cluster that to this day we just haven't quite figured out what bucket they're in if it's a new team if it's someone we've dealt with before yeah and a perfect example that is sand worm you know the the activity related to the Hermetic wiper Campaign which was that that first wiper that kicked off in the three hours or so before the actual Invasion began that",
        "was initially um we had attributed to the sunflower cdapt or a certain number of unks and later on we began to learn more thanks to public reporting from the industry and overall that it's associated with sand worm and then we can build an overall large list of more confidently",
        "linked attribution at that point and an important thing to note here is you know this is everything we're seeing all the actors associated with the the conflict overall one in particular is at the top right that one is Tonto team we reported on them just recently and this one isn't associated with a Chinese apt attacking Ukraine this one is actually an organization in China attacking Russian organizations government organizations so overall we see this as just generally the actors involved within the conflict or have made interesting pieces of activity because of the conflict overall you might also note the Bella Russians sort of in the bottom right like this it's a pretty complicated space I also urge all of you to remember especially before you write your next op-ed like this is the tip of the iceberg this is the loud things that we have gotten lucky some organization has tripped over somebody has been willing to share we've all been able to corroborate to some extent or another but this is a snapshot lacking a",
        "great deal of granularity and I assure you there's much more activity beneath the surface that we aren't even aware of yeah absolutely",
        "so an important piece that we don't want to skip over but we just really want to highlight is there is a large amount of hacktivism and the information operation",
        "side to the entire conflict and there's",
        "there's more than we can more than to discuss and we have time here but on the hacktivism side the ones that really stick out to us are two here we have the Belarusian cyber partisans if you're not familiar with them they're a long-running organization uh of It's a small team out of Belarus that has made significant efforts to actually disrupting uh belarus's participation in",
        "the in the um the conflict overall one in particular case is when they were able to disrupt the uh the train train system to carry resources into Ukraine",
        "from Belarus to support Russia so amazing work done being done by by them then you have the kilnet side very pro-russian organization even this week I believe there's been reporting on them they're at their founder apparently really making claims that they want to become a hero in Russia and they want to cause casualties in to Nato citizens so there's a very Stark difference on the hack system side and there's so much more that we could even highlight here stuff that's been unverified stuff from groups that have come up within the last day or two so overall it's just generally overwhelming to keep up with that site alone don't go getting killed by a DDOS yeah DDOS might get you on the information side there's so many",
        "again pieces of disinformation or misinformation that has kind of stemmed from this war and been associated with pro-russian or pro-ukrainian stances but there's there's so many things that stand out but ultimately I think that when you look at these there is the the impact that it makes either locally or internationally such as is this piece of information being manipulated in a way where it's trying to Garner uh interest from the West to support Ukraine or to have a change in opinion about the state of Russian Affairs so there's there's a lot and it's coming from both sides in many cases",
        "But ultimately from the Russian end we do see a lot of the traditional disinformation approach that they are they are known for uh in my opinion it's kind of like the spray and pray approach uh you know claims against assassinations the bio labs this and that so uh there's a lot and I think that's kind of the longest running effort of the the Russian side is the continued push of trying to tune",
        "public opinion on the conflict in in Russia overall",
        "all right so obviously we've been kind of glossing over a whole lot of different types of activity because we wanted uh to focus as much as we could on what you might classify as attacks or",
        "you know offensive operations more so than Espionage than hacktivism then nuisances and so on um and sort of the biggest part of that really comes down to the prevalence of wipers and fake ransomware which might as well be sort of equivalent in a lot of ways",
        "so there's I'm great you can't read it um so there's this notion sort of that Western European countries a lot of cyber commands have been sort of kicking around this idea of having cyber ranges and the idea is that you would train your forces there in this sort of virtual environment um and and that way you would know how you're gonna move forward um when cyber War does come um Russian threat actors are about live fire exercises they don't really care for cyber ranges nobody's wasting their time on that and the truth is that uh 2016 to 12 2017 sort of set the tone uh essentially they gave us a flavor of what they were planning to do what they meant to rely on and for them I mean it was already in the context of an invasion just under a much more limited scope so obviously not petsia was sort of the big thing everybody remembers not petia unfortunately named",
        "um but the whole point of napatia was you you had this sort of devastating Cyber attack because this thing was self-spreading because it was a fake ransomware which is essentially a wiper because it was supply chain attack targeting a single country but having no limits on its spreading capabilities had this amazing amount of spillover and while that was perhaps a victory in their minds or something metal worthy um it really in in a lot of ways has sort of seemed to set some boundaries that have informed some of the wiper operations of the past however many six months or so so as Tom mentioned February 23rd sort",
        "of uh first day of the invasion we were sitting in like a super boring like sales kickoff or something and thankfully um our friends at ESET had tweeted out these hashes uh and",
        "you know we sort of jumped on it just trying to figure out what was going on uh and that turned into this non-stop work shift overnight because it was the first sighting of what we called hermetic wiper uh what Microsoft calls Fox blade uh it comes in the neat little sort of package it's a this it's actually the default for like vs code if you don't put an icon but it looks like a nice little gift and",
        "what hermetic wiper does is it communicates with this device this sort of driver that at first we didn't really recognize uh it was actually contained two copies of it are contained um in you know x86 x64 flavors and then depending whether you're in XP or newer uh not that much newer though I I wouldn't work on like Windows 10 or wherever like driver attestation has actually been picked up um and then you would what the wiper would do is it would communicate with this driver in order to have it do all of the wiping uh it turns out that the driver is this thing called es us partition Master which I had never heard of before this um but if you think about it it's sort of adopting what we might call the shamoon school of wiping um from like Ras gas Saudi aramco days or the destover school of wiping from the Sony picture entertainment days which is just to say that they bring their own legitimate driver in those cases there was eldos raw disc um in this case it's just this new kind of driver but the whole point of it being you have a legitimate piece of software that's meant to bypass all of these apples and protections and then you use you abuse that in order to get to do the wiping right to disk",
        "so after that",
        "um there's the appearance of hermetic wizard which was kind of interesting right the wiper hermetic wiper doesn't spread itself at all the way that it was seen it was sort of spreading through like GPO and scheduled tasks which meant that you already had some kind of access before afterwards",
        "um hermetic wizard comes along which it turns out was sort of the the a decoupled spreader interestingly compiled February 22nd",
        "um well UTC so who knows how that plays out um I really like to point out her medic wizard because despite what some of the uh naming conventions like romance.dll might suggest it's really important to",
        "make sure like we don't draw these unnecessary corollaries to not Petty out like we're sort of expecting to see the same thing these wipers that are going to spread themselves all over the place but we have seen not what I would call restraint but some kind of operational decision not to just let these things spread like wildfire but rather to use these accesses in more contained ways you use GPO policies you use sort of internal networks for your spreading and you I guess deploy them whenever you feel is appropriate so after this like this was sort of the beginning and we're like oh my God hermetic wiper is going to be the thing keep in mind that before this like there's maybe half a dozen wipers used by nation state groups like it wasn't like something that you saw every day but instead you know courtesy of Mystic uh you have this sort of interesting timeline of destructive uh malware attacks uh I say it's interesting because if you pay attention they've broken it down by weeks um you can see sort of the deployment of a bunch of different tools I also really love week two where there is zero destruction incidents I feel like I don't want to read into it I don't know if somebody had to kind of scale it back and figure out how they were actually going to run something that didn't end in three days but you see sort of the persistence and deployment of not hermetic not just hermetic wiper but a variety of tools a sort of like Fiverr mentality of like just right wipers and wipers and wipers and see what sticks um around that same time you have this um piece of go ransomware we called party ticket based on some of these like bizarre inflammatory strings inside of it there's like a lot of references to like Biden and the White House and like all the stuff um it's written in go so it was just a joy to reverse and you get this nice",
        "little screen sort of pretending that it's a ransomware telling you to like sort of send them uh whatever for like getting your files back but it's actually absolute garbage it barely works it doesn't work as a ransomware you can actually decrypt the files but the truth is that they made some very uh standard mistakes for newcomers to go where they didn't handle the multi-threading ride so this thing just like could kill a CPU before it actually gets to fully encrypt a drive",
        "after that we get um Isaac wiper or what Microsoft calls the same raw I'm not sure that I'm saying that accurately um I like to point out sort of the timeline of compilations you know February 24th February 25th but the truth is that the earliest compilation is pointed out by ESET in a sample we haven't seen but you know I think we can trust them uh it's October 2021 so for those folks that are trying to figure out sort of a timeline of preparation whether they wrote everything at the last minute or there is some tooling that suggests that some of it had already been sitting around and then some of it that is clearly being sort of written on the back of a napkin very quickly trying to like support this war effort",
        "um what you get with Isaac wiper is uh sort of an it's just a different style of wiping but essentially uh this is the",
        "it's called Isaac wiper because originally folks thought that this was using like the ISAC prng it turns out that it's just the mercy and twister prng it really doesn't matter it's just sort of like a random number generator um that they're feeding directly to uh sort of a device based on like uh specific octals and then writing out that random data directly uh to these devices and thankfully at least in some of the earlier versions they give us a nice set of strings just letting us know exactly what they're up to like erasing physical drives then we get yet another one we get double zero which apparently Microsoft calls fiber Lake cert UA actually brings this to everybody's attention um but it's actually this dot net obfuscated to bits",
        "um horrible thing and rather than claim credit for de-obfuscating it which is a Fool's errand on my part I'll point to Talos having done a great write-up and sort of figuring out yet another wiper hard-coded physical paths and",
        "look it's almost like droning on but the point of this is it's not understanding how detection is going to work not knowing what's going to work for how long not knowing what's going to get caught it's basically we went to fiber we like we sat there and wrote as many different wipers as we could think of in slightly different ways to just accomplish the same goal uh towards the later part of um well the in I was going to say later part of the invasion I wish that were the case towards like week four five you start to see desert blade uh which is actually written in go uh it's uses it abuses things like Microsoft's go when IO and um this hectane uh package for",
        "apples uh I actually really enjoy reversing goes we wrote this thing called alphagolang that makes it relatively easy so I can actually show you the entire logic of the wiper in two screenshots it's just you know we've got what like eight functions two packages and it's relatively well documented on",
        "their part but essentially they're abusing this Microsoft package to get directly at the physical drives uh they're adjusting the Echoes based on this hectane package and then they're just dumping a bunch of like random garbage directly into the drives this is actually better written than party ticket at least so the real question becomes you know why so many wipers right it's almost like droning on about all these different capabilities um I would actually point out that rather than saying that this is a wiper heavy uh",
        "thick or strategy uh I think it actually reflects more about our bias as observers and what we can see there's this sort of telemetrical fog of War that's happening with Ukraine uh by that I mean like they're in a real war folks are not exactly sitting at their desk staring at their computers and",
        "there is actually a lack of telemetry going to most of us that are trying to do this work so what you're seeing is the activity that we're meant to see the reason wipers weren't very popular with nation state groups before is you had to make a decision to lose the access you had that you could have had for two years in order to like make a political statement or write some dumb thing to a drive and most threat actors wouldn't you know go that route instead here since it's part of some you know larger tactic of operations and sort of disabling it is actually worth investing",
        "into it but it's only the the loudest part that's sort of yelling at us that it's there so it's inevitably this tip of the iceberg situation as far as what we know so there's this big question of whether the use is random or tactical by that like we're kind of fighting back and forth with folks that are trying to figure out if like the Russians are incredibly well organized and they're deploying their wipers um coordinated with like kinetic attacks and like you know you go you wipe the place and then the Cavalry shows up and you know I think that's giving them a great deal of credit um that maybe they don't deserve but we do have this really interesting case for those of you I hope that you went to eset's talk earlier today um they're absolutely the right people to talk about in Destroyer so we're not going to go into guts of Industry itself but I think it is important to talk about this case overall because it teaches us something about the use of the wipers as a slight deviation I think if there's any sense of humor left in the gru it's being measured in argue patch variants argue patch is this really interesting really kind of funny uh piece of malware that's meant to sort of be for like early stage deployment I say that it's funny because the first version of argue patch also called April acts by Microsoft that was discovered is this sort of backdoor trojanized uh Ida Pro debugger binary there is no",
        "reason to use that other than just get a kick out of things then the next one we ever see actually uses like an ESET executable to load the Shell Code so someone over there is still having a bit of a sense of humor about this whole thing so if you think about it caddy wiper Isaac wiper both of them are discovered in this sort of like slightly decontextualized manner like there are some attacks on specific organizations but you know how they're using it where they're deploying it how they're deploying it Etc is not very clear caddy wiper interestingly enough is Tiny it's nine",
        "kilobytes it has very simple logic to it",
        "you you know you can basically see all the relevant functions actually it might be all the functions um and you know you've got your stack strings and they're just going again device idle control specific actules",
        "walk into PV trying not to touch any apis that may have been hooked by any of the AVS and so on and then recursively enumerating all these files adjusting privileges writing zeros out there you know the usual um this is where it gets a little more interesting yeah so we can begin to add some context into caddy wiper overall and the campaigns so thanks to uh this ESET for this timeline here uh what they began to see and report on overall was the deployment of uh caddy wiper and the timeline leading up to the end Destroyer side so you know they begin by saying hey we're starting to see this in Ukrainian Banks and then the government agencies and then starting to step into the energy provider's side and that's what leads up to the industry or two side ultimately acting as in a sense a a",
        "an operational lead into in Destroyer we're talking about a second so again kudos to ESET on their in Destroyer 2 talk if you haven't seen it uh I hope we can catch a video online at this point since this morning but definitely the right sources to talk to about industry or two But ultimately this leads us to the attempt of catty wiper acting as a step leading",
        "into disrupting the recovery from in Destroyer 2. so great chart from from them here again so we have caddy wiper uh ultimately being used to stop the recovery of the damage caused by in Destroyer 2. so folks that missed the the talk earlier and you know it might be gibberish to you in Destroyer was used to to cause the Ukrainian blackout in 2016 to see and Destroyer come back around it was particularly interesting but just equate it in your minds to trying to shut down power substations essentially",
        "yeah so power substations going offline then the ability for The Operators to recover that being uh Irreplaceable at that point so that leads us to the the seconds uh the right hand side where we start to step into the Solaris and Linux sides of the the wipers so this is where we start to see newer reports on a few different things so the first one is is orc Shred this is um The Shred terminology is kind of their their way of saying wipe however orc shred in particular isn't actually wiping anything it's actually more used for an SSH spreader mechanism internally within networks so being able to essentially Brute Force um local IP addresses inside their Network and try and deploy the the proper Linux or Solaris",
        "um wafer at that point and I promised I wouldn't do this in a Russian accent but you can see the art most security there we go so yeah there we go it kicks off talking about that and then this is where it does the checks for you know if this is a Solaris host inside this network deploy the Solaris wiper and if not deploy the Linux side so and this is what you're looking at is the uh the The Brute forcing mechanism essentially to spread laterally and this reminds me a lot of just like the really really terrible cryptocurrency miners we",
        "see on like Cloud infrastructure that just all use the same crappy script looks just like that to me unfortunately but brute forcing internal IPS and trying to spread the uh the script to them at that point so on the Solaris side we have solo shred uh very simple no obfuscation done",
        "and I think this speaks a lot to the lack of requiring to evade the detection",
        "mechanisms on Solaris host just because of I think products that kind of support that end so ultimately it's doing very basic uh",
        "mechanisms of finding",
        "um system directories and then system disks to then delete irrecoverably at that point you're a nice rmrf no preserve route for everybody who's ever made that mistake before the Linux size a little bit different we have awful Shred [Music]",
        "this one actually has a a decent amount of obfuscation and thanks to uh wands",
        "last minute slide preparation we were able to de-obfuscate them and I'd rather the obfuscate at the script manually than make slides yeah so I'm sorry very basic mechanisms to uh to obfuscate make it more difficult for us to understand it overall but once you get past that there again is more of the uh simple yet",
        "much more specific and wider methods of",
        "wiping that host you know we're not just seeing them uh deleting directories and disks we're seeing them also Purge memory we're seeing them uh you know look for a lot more different directories what else is there clean bash history they're going for the MTD block devices they're you know cleaning out the swap they're just trying to make sure like they they're incredibly thorough on the Linux side um you know stop Services kill demons like everything you could think of um they're they're being incredibly thorough in the logic of this script",
        "and really you know after having the obfuscated thing like this is the main logic like you can just see sort of how this thing flows and it they're just uh simple but effective simple like it's actually this is why I've been like tweeting about the state of like Linux security lately it's like you can complain as much as you want about Windows but like this is what like a 200 line script that'll just break a Linux system yeah uh no questions asked so yeah so looking at all three of those it's important to note that there's not really from our perspective any shared code to other stuff that's floating around there and they're all unique in their own ways where this is all essentially from our perspective stuff that was slammed together right when it was uh ended up getting being or being used at that point rather than any sort of thing that's on on the tool shelf for for months at that point or maybe a statement about how bad Linux security is and we just haven't caught this before I'm just saying I have no idea yes um so then there's the case of acid rain sort of near and dear to our hearts um so there's been a lot of discussion about attacks on telecommunications uh in Ukraine a lot of sort of like DDOS and sabotage whether physical or cyber uh and trying to intermittently take down isps and internet uh I do think that it was kind of half-hearted in the beginning which isn't surprising considering that you know if you're invading a country with walkie-talkies and cell phones who probably don't want to take their Communications infrastructure down um and it it you have a very interesting incident with biosa that sort of work this is what we're going to discuss with acid rain but then sort of Starling comes into the picture and credit to them from what we hear they actually have been incredibly useful in in",
        "Ukraine so what ends up happening is at the very beginning of the invasion and you know this article is from the 28th February we start to see public reports",
        "about um wind turbines in Germany uh going down and let's be be sort of careful about the terminology right like they're they're not exploding they're not not functioning they were still spinning well I don't know if we'll go that far they they essentially they were incommunicated which is enough for them to not function it's about 8 500 of them um and given the timing and sort of the bizarreness of the choice to conduct this Invasion at least from our perspective it made it I think a lot of folks started to kind of panic a little bit right like are we starting to see like also attacks on Western Europe and like we have no idea sort of how far this is going to go in reality what we start to get is sort of ViaSat confirms the suspected Cyber attack mostly in the context of Ukraine um and I actually should probably speed up so something interesting is ViaSat kind of comes out with this statement and they say you know they got network access and it's sort of like used to execute legitimate stuff but like no malware no supply chain attack no nothing um at this point I need to be fair to biasat like they didn't we call it device that hack which is really unfair to them they bought a company called utel sad that's managed by an Italian company called Sky logic and it just so happens that like vid you tell sad got popped um at the time we had this reporting from Reuben Santa Marta who was like dumping the uh driver the sorry the modems that were you know pre and post attack and of course you can't see it there but basically the entirety um of the contents of the modem was just sort of wiped with this like ffff uh like decrementing from ffff by one uh",
        "and sort of looping over and over something like this and it's particularly interesting I mean there's an obvious pattern right like FFF E3 ffff E2 and so on um so we had stumbled upon this binary on",
        "VT I say stumbled because like we had some fairly basic traps around um after seeing some of the early reporting and there's a binary called ucrop which can mean parsley but it's apparently also a derogatory term that Russians call ukrainians uh was uploaded from Italy to virustotal you can see sort of the name the date March 15th um interestingly and this is kind of where we had based some of our stuff it's like an l-32 um it's binary",
        "never seen before or never seen again sort of submitted from just one place uh with a sort of interesting name this is what we started to call acid rain if you look at it it's basically like a Brute Force wiper for Linux systems mostly like embedded systems so it'll walk all these directories like I kind of want to speed it up because I know like we're far in but it'll walk all these directories it'll hit all the sort of types of devices that you might normally see in an embedded system uh it has two types of wiping mechanisms we'll call A and B um I'm going to run through this real quick if you really care about the details go just look for acid rain on Google you'll find a report but essentially same wiping mechanism that we had seen that would produce that ffff decrementing pattern",
        "credit to max van omarongan who might be in the crowd for the reversing on the mips side hey there you are Thanks Max um interestingly so we put this out in this sort of tentative way of saying look this is a wiper came around at the same time that would produce what we're seeing from from ViaSat like something doesn't jive with their statement um and interestingly via sat the very next day like it was you know very forthcoming very kind he just said yeah this is the malware that was involved in the attack I'm sure there's a lot more to it they have a great incident response company I hope that someday they provide the incident response report but that's really up to ViaSat on you know deciding how they're going to handle that um the other wiping mechanism uh what we call B which runs if you're running as root is interesting in that it uses the same kind of by octals and sort of the way that they would do the wiping um as a plugin called dstr destroy",
        "whatever you want to consider it that was actually a part of VPN filter stage 3 plug-in so if anybody remembers VPN filter publicly attributed by the FBI to sanworm back in the day is that enough for a conclusive link I I don't know that I'd say that but there's definitely smoke there like there's something sort of worth looking at you can check out the details in the report after about a month after this the US UK you actually come out and officially sort of blame so it's concerning in that it's more generic and they can basically deploy it wherever they want at this point so waiting for the next supply chain attack so with that what happens now where do we see the the Russian threat landscape go where do we see the conflicts in Ukraine going from the the Cyber perspective so are we entering the ICS doomscape I",
        "wouldn't quite say so however there's so much unknown at this point and that really steps us into a lot of the I would say the the newer activity that we're seeing related to the ICS side that we just don't know if they're going to be used elsewhere uh in controller in particular is of interest to us because there's a lot of mystery around where it was found in kudos to UA cert and ESET I believe uh man the end sorry yeah yeah and uh so is this is",
        "this a new ICS piece of malware that we're going to begin to see more leading up to the winner and the energy crisis throughout Europe is this going to be used to force certain organizations to come back to Russia for energy if they were able to be disrupted through this this type of malware and then we have it overlapping into uh potentially links to what we see coming out of North Korea is this uh a way that they're going to start to fund themselves as a state similar to what North Koreans do through cyber crime",
        "um more I guess interaction with the cybercrime community to fund themselves financially",
        "and so I'll just kind of let it go here but essentially then there's the question of whether we want to start talking about cyber attacks as part of things that the international criminal court should investigate I know that it's been described as something maybe a silly idea it is something that we should test and consider as far as the international criminal Criminal Court scope there's a great article about it it's a wonderful Folks at Berkeley working on it uh but just something to keep in mind about how to actually start to put some gravitas and weight behind the idea that cyber attacks are going after civilians recklessly uh and is the sort of systematic fashion so with that we have way overstayed our welcome thank you all so much for showing up we can do questions back there thank you",
        "foreign",
        "[Music]"
    ],
    "Pe9nJLZvABM": [
        "[Music]",
        "foreign",
        "good afternoon everyone I can tell from the weird Echo that my microphone is at least working so that's a good start I'm hoping that you are all here to hear about some experiences in breaking out of cicd pipelines I'm going to start off with the mandatory who here has used some form of CI before let's get some audience participation there's some hand I can't really see that many because my glasses are filthy and these lights are really bright um who has broken out of CI pipelines anyone done that sort of thing we're getting some yeses that'll do good enough for me",
        "quick introduction I'm Ian I am the containerization practice lead at NCC group I've been with the company for about six years and I've spent most of that time breaking out of containers or cloudy environments and most recently pipelines hi everyone my name is Victor and I'm a Jenkins security MVP and also a cloud research group leader and I have seven years of experience",
        "so just to make sure we're all on the same page here we'll throw some terminology around first of all um we're talking about CI and CD CI is continuous integration so when your devs",
        "are running some code writing some code make some commits goes into something like GitHub or gitlab or whatever your version control of choice is and continuous integration generally for our purposes is running things like unit testing or security static analysis against the code and then CD depending on which acronym book you've swallowed lately is continuous deployment continuous development and this is the part where a service automatically picks up the code that you've written or the the compiled version and then fires that off into your production environment to actually run where users can hit it a pipeline basically is a bunch of tasks sequentially programmed to run one after another um a secret we're going to talk about Secrets quite a lot this is basically anything you don't want to be public so API Keys passwords um I don't know SSH Keys something along those lines anything you wouldn't want the wider internet to have access to an rce remote code execution basically can I get some codes to run on your machine",
        "so now that we know the words let's have a graph would generally look something like this so you've got your developer and developers are happily writing code the theory behind CI CD as it accelerates your developers so everyone's working on a central code base the code's being committed in and then whenever something happens on code or on a schedule uh something is triggered now that something could be a commit it could be a merge request basically anything that makes a change to the the environment could also just be a schedule like rebuild this once a month and at that point you'll generally see some testing happen some deployment happen you might create some artifacts like a static analysis report to be",
        "ingested into some form of ticketing system you might have some compiled binaries being spat out some Docker containers being built and then the next steps in some environment most of the time will pick up those artifacts and then launch them off to run somewhere that somewhere could be either on-prem or in the cloud could be something serverless basically this is where the code ultimately ends up running",
        "and this pipeline can be very complex and you can include a lot of tools so even like hundreds of tools and people created a periodic representation of these tools that you can see in the slides",
        "thank you so what will the attacker see when when they look at your cicd pipeline so they will see some code goes in and then apps come out or even an application got deployed in a production environment or a test environment uh so they don't really have to do too much because they just had some quotes and then they will have access to a different environment or or network or something else so these pipelines have access to multiple networks and multiple",
        "environments as well so starting from a test environment a pre-production environment production environment but also it can be on-prem work Cloud as well also these pipelines and the supporting infrastructure stores credentials that",
        "are used throughout the steps but also",
        "they pulled a third party or internal dependencies as well like local images or JavaScript package",
        "but they also push and upload the final artifact or Define a program or if you're just deploying in a cloud environment web application but they also can use it and see it as a free resource so if they want to use it as a crypto mining application and mine some",
        "crypto then they can do it as well so there's a bit of background of what CI and CD is and does generally we're seeing it being adopted to speed up developers make them run a bit faster because devs like to go fast over the last few years we've uh had a few engagements we've had more and more customers asking us to have a look at some CI deployments and we've started to see some fairly interesting breakouts and we're not going to be dropping any old days at the moment but what we are going to do is show some fairly high impact times where the security",
        "principles were not applied as well as it could have been to some fairly interesting effects",
        "so the first engagement that we want to talk about was a customer who approached us and said hey we've got a fairly locked down pipeline we're quite happy with this um can you come in we'll give you developer access we'll just give your credentials let's see what you can do as a normal developer not an admin user or anything like that so we come in we've got access to a single bitbucket repo and it was hosting an Apache Maven project so we had some Java um one of the things that we were able to modify with this access was the dependencies that were required for the application to build successfully we uh did something extremely clever which was hey let's just specify one of our own dependencies instead of the internal ones that are meant to be used so we hosted our malicious dependency on attacker.com told the uh build pipeline hey when you build this code go and retrieve all the dependencies from your dependency file quite happily it reached out to us and grabbed our payload which was a meterpreter reverse shell no fancy AV bypasses or anything here we literally went Metasploit give me a payload reverse shell Happy Days so as soon as the pipeline started running it reached out to our server grabbed our dependency loaded that in and then went hey as part of this program I need to reach out and just get a shell back on this this um Target I've been told about we were given access effectively through this to a Jenkins Runner we didn't know what the start that this was Jenkins we find out fairly quickly and this uh runner had a fairly limited environment so there wasn't too much in the the runner's file system which was good for us because it made our Recon really easy basically we ran LS lar got a dump of absolutely everything looked for anything juicy and one thing was one of the things we found in the kind of bowels of the file system was an SSH private key we had no idea why that was there turns out later on customer didn't really know why that was there either so we've got a private key and we've got network access and did a little bit of nmap found Port 22 listening everywhere so we've now got keys we've got SSH access as a wise snowman what's once said put them together it just makes sense we had SSH access into some other servers and again at the time we didn't really know what the other servers were we were just scanning around and trying keys turns out those were the Jenkins control nodes so Jenkins has a hierarchy of working nodes and control nodes control nodes tend to hold the more juicy secrets and what we were able to get in this case was all of the secrets for all of the projects that were running in Jenkins including a cubeconfig file for those of you not familiar with kubernetes that's basically an authentication file and in this case it turns out that we had full access to deploy anything we liked into the customer's production workload now this was meant to be there because the pipeline had to deploy uh workloads that was what it was written for but as a developer I wasn't meant to be able to get direct access we could we could deploy any workloads we wanted and because there was no admission control or anything at this point we were able to basically compromise the entire production cluster",
        "now in the interests of Defending against this we've got some lessons learned hopefully these are relatively apparent the first one being building credential hygiene as I say we didn't know and the customer didn't know why that SSH key was there there was no legitimate reason for it to be there so it probably shouldn't have been without that we'd have had a really hard time getting around the environment getting around the estate similarly Network filtering and their build environment was able to reach out to the internet to grab our malicious dependency and it was able to reach out to the Jenkins the other nodes to SSH around a little bit of firewall ruling would have probably stopped this attack quite quickly and again dependency validation had the customer only allowed pulling from internal repositories then we probably",
        "wouldn't have been able to fill down our external malicious dependency",
        "I had also a similar assessment that GitHub was used but it was used as an identity provider so in this case in Jenkins they use the dedicated plugin the name is GitHub authentication plugin and I will show a demo video",
        "we're not brave enough to drive a Live Trial live demo don't worry been burned by that one too many times before so I call this the confusing uh wording",
        "word plugin because this plugin as you can see here at the moment I use a Vega sub user who is in the ncnc pen test demo organization and when you use this plugin and you use the option that the grant read permission to all authenticated users you can see it's checked it doesn't see is it related to Jenkins or is it related to GitHub so long as you see or read the description and then test then you will find out so here you can see my user called Vegas log",
        "I will show that it's in the NCC pen test organization and that's the only",
        "member",
        "now because this option was enabled and the option says",
        "it's related to GitHub all I had to do was create a GitHub account and then I",
        "could log into the Jenkins instance and I could see the build history console output and so on so here you will see that",
        "I opened the Jenkins and it redirected me to the GitHub login page so I will use a separate account the name is root speed a different email address and",
        "here you can see that's only two User it's not good speed is not there I will use my MFE code and I can",
        "and then I will just enable that it can access my profile and so on so once I enable it and logged in with my arbitrary account I logged in to Jenkins as well and here you can see that root speed is not in the same organization but register others GitHub account",
        "so what we recommend is read the description of the plugins or whatever custom code you use and test it so validate it really does what it suggests",
        "also use lease privilege principle with",
        "the lobby success control and the circulation of duties",
        "so the next example is called the build output because sometimes even the CI CD pipelines helps us so it will help us to do something and reach something or let",
        "us do easier things",
        "it's not because the company gave all the developers administrator accounts I didn't choose because of this it's bad but what I why I choose is because they used infrastructure as a code and they used terraform the tool itself and they didn't use a dedicated plugin [Music]",
        "this is important because if you use styroform it will you can use variables",
        "and you can print out what has been created and in this case they also printed out an AWS API key as well and because it's in the pipeline and directly used in the console output and the build output everything will be recorded so you will see all the variables that has been have been created and in this case also the either API key as well",
        "so again",
        "you will see some patterns so we also recommend it here again the least privileged principle with Robbie's Access Control separation of Duties but also we recommend using dedicated plugins because the plugin developers know what are the sensitive data and the information so they will know how to mask it and when to mask it and most of the time we also see that there was no monitoring or adapting enabled so if someone changed the configuration system configuration or everyone has",
        "been changed there was no alert or any record of it",
        "so these engagements don't always start off with quite as easy as hey we've got a new Dev access please carry on and just uh start from from a privileged position and this this next example was part of a red team engagement that we performed a while back where we were up against a relatively Hard Target couldn't get in through our usual paths but what we were able to do was fish a developer and get their credentials and then we were able to log into their cloud-based CI",
        "so kind of similar to my previous story we had developer access even though in this case we weren't really meant to have it but we did Happy Days um so we had developer access we had access to a fairly wide range of repositories not all of these were hooked up to an automatic Pipeline and an important thing to note here is that the customer um was doing some things fairly well so we didn't have access as admin to absolutely everything we had relatively restricted permissions on the repositories that we had access to however we were able to modify some of the Pipelines and one of the things this customer was not doing was separating Secrets out per uh per branches or anything like that so as Victor just mentioned it's possible to protect our secret so whenever we try to get Secrets out of the pipeline we just got the word redacted or the word masked or similar which is not great because we can't really use that as a password however one of the things you could do and I say bypass here I use that term loosely was run print in and then just pipe that to base64 at which point the regex for is this an API key failed because it's just base64 so we then grab that data from the logs um v64 decoded it on our end anecdotally one of the things I really like doing in these jobs when we don't really have direct access to logs is to use something like slack web hooks because organizations love to use git Ops and they'll have to have their pipeline ping developers on slack whenever the um whenever a build fails but that means they've generally whitelisted api.slack.com at which point you can just run print n for base64 that and pipe it to webhook and then like my slack pings and says hey here's all the keys which is quite fun even more fun if the customer has um has a big screen on the side of the monitoring sensor that shows all of these alerts and then you can just start sending gifts to their slack web hooks that's far too fun it confuses them a lot",
        "I get there were some weird people were very confused when that started happening",
        "um but yeah basically this pipeline had domain admin access because obviously it did why would it not so fairly hard target apart from the one pipeline that ran everything is Da so we found the limited Windows estate and we had admin interestingly with this job the customer reached out to us and said hey by the way just so you know we've got a load of alerts we know you've got access to this pipeline uh that's really uh not good because you've crashed our Pipeline and it's not running anymore they didn't realize what the credentials were so we thought we'd been burned and they'd rotate their credentials nope they just left them there until the debrief at the end of the job so again um I'm going to say the second Point here first this shouldn't need to be said in 2022 don't run everything as domain admin please it's just not a good idea um and also restricting secrets to certain branches is probably a good idea so as I say this customer had protected branches not every developer could talk to the main branch and make changes um because the uh it had the secrets being restricted to that Branch we wouldn't have been able to get access without compromising more accounts and doing more approval of requests",
        "and again in the spirit of doing weird attack chains and jobs that don't necessarily start out as CI we were performing an internal infrastructure review and we found a web app that lit up like a Christmas tree it was vulnerable to absolutely everything across the estate so um mainly server side request forgery and local file inclusion vulnerabilities we didn't really know what this app was but we knew it looked interesting and it turned out later that this was an app that had been was being tested and they knew it was vulnerable but it was running in the middle of the pipeline so we didn't have access to the code we didn't have access to the production running environment but we did have access to and was an instance of the application running in the customer's development environment and we knew nothing more about it at the time but we started prodding around and doing some Recon and what we found was that the application was running in kubernetes the customer was using that to power the build pipeline which is fairly common um nice little tip if you ever want to find out if something's running in kubernetes and you've got access to files catting Etc hosts generally if it's in kubernetes it has a nice line at the top that says this is managed by kubernetes Happy Days",
        "um so yeah we managed to get a service account token as well and that service account token could be used to authenticate the kubernetes API we started some further Recon we found out that we had various permissions and where this gets a little bit more bizarre and took some research was the customer was using um an AWS managed cluster and I should emphasize this is in no way a like massive vulnerability or anything they've just given permissions to a service account they maybe shouldn't have done because we were able to edit configuration Maps basically what we were able to do was add a new mapping to see this AWS account ID has these permissions inside the cluster so we gave my AWS account cluster admin",
        "and the API server was available over the Internet so at this point I've got an AWS account I've got a server um we were able to basically do whatever we wanted on the cluster which sounds really bad apart from this was only the dev cluster this wasn't actually the production workloads and obviously our end game was can we get production data so a little bit more research let's see what else is happening with cluster admin we could view all of the jobs across the whole cluster that lets us get all the secrets for all of the jobs that weren't being managed through a dedicated Secrets management solution and that included further API keys to push images to ECR and basically one of the jobs was take this code built into a Docker image publish that image we couldn't find anything that said I want to load that image into this cluster and actually run so we weren't really sure what was happening so we did a little bit more digging found some documentation and it turned out that this customer was using a full based CI in their final cluster in their production workload so instead of a service running outside the cluster with credentials saying right I want to push this into the cluster to run there was something in the cluster waiting for changes to be made the cluster eventually realized that we published a new ECR image went oh that looks shiny I'll have that please and then loaded up and and the logs was a nice little NCC was here because we didn't want to do anything more disruptive so",
        "we didn't directly have the ability to push something in but what we did have the ability to do was modify something that would automatically get pulled in which had the same effect in the end we had cold running in production",
        "and again Lessons Learned let's keep these themes going hopefully you're seeing the common patterns here by now um least privilege are back and network segmentation really we're just going back to the basics the application that was being tested mid pipeline didn't really need to be able to talk to kubernetes or the cloud metadata layer so some Network filtering would have helped there either through kubernetes Network policy or through AWS security groups or both and again least privilege on a whole bunch of steps here um mainly the fact that we had the ability to edit the configuration Maps that's what really lets us get admin over the whole cluster without having to do anything clever like break out of a pod to an underlying node the one thing that our back would not be able to stop is the fact that we could modify the production image and the reason for that is the pipeline was just doing what it had to do right so the pipeline's been built to modify an ECR image so obviously it has to modify an ECR image and so",
        "in this case it was actually not as bad as it could have been the credentials that we compromise did only have access to one image that's good and it's just a shame that we managed to get hold of it and then do our nasty things and Victor has also been playing with web apps yeah I had also similar please when I started off with the web application so it was a WordPress application with some custom web pages but I didn't really find too much things there but I will show you a video what I have done",
        "oh",
        "so here in the video we are just simulating the web application so I was looking around I didn't really find anything but I was checking the sitemap file and especially maybe there is",
        "something in the folder as well and what I found out that there is more in the site map where the Sci-Fi was because it was an S3 bucket with directory listing an email so if it's not a DNS problem then it's an S3 bucket problem so in this case we we had that and I found this file called good",
        "dot sh which was responsible to push",
        "code to GitHub but we will see here in a second that this transcript",
        "contained a hard-coded credential",
        "and there was one another big problem",
        "with this that the company also used this account as a shared account so you could log into GitHub but you could also use it for logging into Jenkins and basically later I found out that this account was a service used as a service account so I logged into GitHub get read and write access or permissions to multiple repositories but also I I could just you know log into Jenkins and I had administrator access",
        "and once I found my mouse",
        "so this account gave me access to 14 clusters and more than 200 weird servers for agents",
        "and also more than 200 credentials so starting from certificates to ec2 SSH",
        "case to AWS or other Cloud environments",
        "[Music] also security scanners and so on",
        "so again no shared credentials no hard-coded credentials and use least privileged principle with Robbies access control and it's very important to have",
        "auditing with monitoring and other things enabled",
        "and it's so this one might actually be my favorite story that we're going to talk about today because it had a customer using the wonderful line you can't do that it doesn't work which any pen testers in the room will know it's brilliant to hear because generally we don't say we can do something unless we're fairly sure we actually can so we had a customer who had some fairly strict rules about who's allowed to access production in day if anyone can do what they like log in as all the servers as we don't care but in production no access developers were not allowed any access there were a couple of admin break glass accounts in a safe somewhere they were not meant to be used and the customer was doing a fair few things fairly well so for example only the main branch would deploy to prod the the architecture here was that the repositories were all terraform configuring Cloud accounts",
        "and uh yeah only the main brand could talk to prod which was good you had to have merge approval from a relatively um limited number of users to actually make any changes to the main brand she had to have multiple users approved so all on the whole this looks fairly good to start with however",
        "customers using Circle CI and uh defining all of their tasks with um yaml files and I should say at this point and this was just a coincidence of a circle CI these attacks work against all the platforms all the time we're not picking on anyone we we attack them all equally um configuration files were stored to save what every Branch does what every task does but they were stored alongside the application code which we had access to modify um the customer said oh yeah it's fine we're using various secrets on various branches so for example if you're doing Dev things you're diving away quite happily then you use the dev API keys to talk to the cloud and that was on any branch that has feature slash Dev star",
        "but if you want to prove something to prod and you want to get through the approval process then you do prod things and you use the prod API keys I'm really hoping you can see where this is going because it's exactly where you think it is uh we did hacky things so we modified the ammo file and we said for any branch just run print M and use the prod API keys because there was no protection stopping us doing that nothing had been configured so this is when I I said to the customer hello I think I can get your production API keys to modify your cloud and they went no you can't it doesn't work how confident are you in that very confident do you mind if I try it yeah go ahead two redacted screenshots later we were on an incident response call because this was the same for all of the dev teams across the entire organization and had been for about two years they had no auditing on the credentials they ran terraform as admin because why wouldn't you so basically anyone who was a Dev despite being locked down could get full production access to any of their Cloud accounts you can imagine the phone calls for that one were fairly exciting",
        "so once again Lessons Learned here",
        "um they're the same as they've been for quite a while now validate your secrets management and protection this customer was really sure they were doing things right clearly they hadn't actually sat down and said right should we just try and validate that what happens if you try to use the product keys um assume to a certain extent that every developer is malicious and or compromised or trust your debts but make sure you can log what they've been doing especially in production accounts so I think we all agree that at some point we're all going to get popped by something probably a good idea to have some logs that tell you how and when you got popped and especially with Cloud Keys like if you've got Cloud keys that are only meant to be used by your pipeline and suddenly they're being used by some random IP out there on the internet that should probably set off some alarm Bells and once again least privilege are back I know that running infrastructure is called tooling as non-admin is tricky if anyone knows a nice way of making terraforms spit out the exact permissions it needs so you can craft policies please find me at the bar later because I'd really like to know what you're using but yeah effectively at least privilege our back log your credentials and have a capability to rotate your credentials because this was the other part of the instant response was so which credentials have been compromised don't know uh how do we take that check your logs we don't have any well go and rotate them all uh yeah someone got some overtime at that one I think yeah I had a similar case where the environment was locked down and the uh only allowed three rules there was a one redraw one wheel draw and then administrator so they were locked down very well documented and separated but",
        "there was only a slight problem they overlooked the permission and they forgot to remove uh one liter permission",
        "and I will",
        "show you what was the problem",
        "so in this case the problem was related to the build run because this rule had",
        "enabled the build reply permission",
        "yes so the the build role has or the user had been the building Prime information and this really reply permission will allow",
        "once you already",
        "built some pipelines and jobs they will allow to reply it but with a small tricks that you can add your own groovy code so basically you can just add your own groovy code that in this example you will see I will get the content of the password file on a Linux machine",
        "so even though they they lock down there was this model overlooked that allowed me a code execution so here you can see the reply button and I will just copy and paste here a little movie called and we will see in the console output",
        "the content of the password file",
        "here we go",
        "so I mean we could say like useless privilege with Rob Base access control but the company did so what we can say is validate what you have because even a small Overlook can have a very big impact",
        "so you have seen that these examples",
        "didn't use any zero day vulnerabilities but they share other common things teams",
        "and we will talk about these common teams and protections Ian would you like to talk about the secret management yeah so we've seen some problems throughout pipelines where passwords are either shared across branches or hard-coded and generally we recommend some form of Secrets management it's fair to say that if an attacker has compromised your CI and you're using a programmatic um Secrets manager they can probably interact anyway but at the very least it means passwords shouldn't be showing up in logs shouldn't be hard-coded and shared too widely around the estate and also generally you should have some slightly better way of rotating your credentials and plus you've got logging to see where and when they've been used as you have seen even though there was some kind of segmentation but it didn't really work because we could access from a Dev environment a production environment as well so they didn't really use any network segmentation or isolation and it's very important to as",
        "you mentioned with the secrets to limit the scope and the same with the network and other builds as well",
        "monitoring and alerting as well first of all where your credentials being used secondly a lot of organizations seem to think well these are all these attacks are all through get commits so I can just check them in the git logs but if you see that oh someone did a git commit that caused a runner to spawn a shell you still don't know what actually happened inside that shell and quite often these environments are immutable or not immutable ephemeral and the the logs are gone once the environment's finished so either a job can be deleted or the logs might just never be stored at all and having some form of monitoring and alerting to know what your pipeline's doing it's probably a good idea for your your blue team or your Defenders to have access to even though in the examples we didn't talk about the patch management or if",
        "any companies or or the environments were behind versions but for example in",
        "my cases where I assess Jenkins environments most of the time they were behind one or two versions or they use plugins that were vulnerable to some issues so it's very important to have a regular",
        "patch management and all these install",
        "the latest updates and use some hardening on the services and I'm going to roll the last two into one here because I think a lot of the problems we see come from people writing up SEI pipelines because they want things to go fast and then not thinking about them anymore so threat modeling in our back kind of fall into the same camp if you're implementing CI pipelines if you have them in your organizations at the moment and if you've not thought about this before have a sat down and do a tabletop exercise and say right what would happen if we had a rogue developer or if we've got open source projects that we use or we maintain and they run some form of Open Source and anyone on the internet can make a commit sort of pipeline just sitting down and thinking what would the impact be what's the blast radius probably will at the very least let you understand the risk you're facing and then start to think about how you're going to either stop them or detect if an attacker is doing something dodgy",
        "so to summarize what we have talked about cicd is beneficial for the companies and for the developers because they have their jobs to automate it but they can be also very complex and even a small oversight or Overlook can have a very big impact as we have seen none of these problems are new or used we didn't use any zero days and also as Ian mentioned in the previous slides these environments doesn't really have a strat model that could show any problems and they also",
        "unfortunately have the companies give",
        "very little focus on the pipeline and the supporting infrastructure",
        "and and the kind of little Focus thing is maybe less true now than it was when we started writing these slides obviously over the last few years there have been a quite a lot of high profile CI compromises things like code cough and also in the last few months this has got more and more of a hot topic one of the things I wanted to give an honorable mention to that couldn't work out how to fit it into the stories was um dependency signing or artifact signing a lot of people seem to think well I sign everything at the end of my pipeline so I'm secure right and they're they're kind of correcting that if you run a signing task at the end of your pipeline and then I run your your artifacts if you give me an XC or a DOT jar or whatever and it's signed I know that it's definitely the one you've built but if an attacker's compromise your pipeline before that stage congratulations you've programmatically signed my malware and now everyone's going to trust it even more again don't get me wrong signing is solving a huge problem but it's absolutely not a silver bullet for security",
        "we have used up all of our time so I suspect we're going to get kicked out of here in about 54 seconds according to the big ticking clock there uh we have a room for another half hour if you want to if you've got any questions um either feel free to reach out we are uh Spartacus and wakapi how do you pronounce it on Twitter um we're also first At Last At NCC group.com or find us around here at some point thank you very much everyone thank you [Music] foreign",
        "[Music]"
    ],
    "0RVs4yBQEjk": [
        "[Music]",
        "thank you and welcome to process injection breaking all macro security layers with a single vulnerability",
        "if you are a Mac OS developer and you use xcode you may have noticed that if you create a new project with the latest xcode version there's a new method in the template for applications for your application delegate application supports secure restorable state",
        "now in this talk I'm going to describe the vulnerability that the necessitated this change and how we could exploit this for sandbox Escape previous escalation and then finally bypassing sip first a bit about me I'm Tasha okamada I'm a security researcher at computest computers is a security company in the Netherlands providing services like pen testing instrument response and security operations center",
        "together with my colleague Dan Cooper we are the research Department which means that we don't work for customers but instead we look for vulnerabilities and systems that are used often or suddenly you more popular to make the world a little bit safer so all the work that you may have seen from us is a zero click remote code execution field Mobility we showed at Ubuntu owned last year and when it comes on Miami this year with five ICS vulnerabilities",
        "and there's some write-ups for these on our website if you want to know more about them what I'm going to be talking about today is macro security which is a bit of a specialty for me um been a Mac User all my life so it's it's a system I know most so um that's also where this familiarability originated",
        "and this presentation will be consists of two three parts first I'll describe a little bit to make a security model because many people don't really understand",
        "um the current security model and then the second part will be introducing the filmability that I found and then the third part will be to demonstrate how the film ability could be applied in three different ways to as I said escape the sandbox Elevate Privileges and then finally bypassing ship",
        "so to make a security model as of the current latest release Macos Monterey",
        "to describe that I'll first talk a little bit about the unixie Linux security model as it used to be on Mac OS as well um and the basic idea behind it is that users are security boundaries with processes are not so you can see this for files any file has an owner as a group and there are these nine Flags to determine whether the owner or group or everybody is allowed to retry to execute and also if you want to attach a debugger to another process and then those processes need to be in general they need to be running as the same user and root users an exception to this the road user can read or modify all files and you can access basically any data in memory or even in a kernel in other processes any data is available for the root user and this was the security model for Mac OS but it no longer is the case ever since the introduction of system Integrity protection this was introduced in 2015 with the El Capitan release and this was from the WWDC presentation where they announced it",
        "and the basic idea of sip originally was to do two things first of all introduce a security layer between the root user and the kernel and secondly to protect the system from being modified even by the road user",
        "so having just root access is no longer enough to completely compromise the system and the reason Apple wanted to do this is that getting root access on a Mac is pretty simple in general if you're more aware because most of the users are an admin user so if you just prompt the user for their password to do something update the system or something like that and it's very easy to get the user to enter their password and then you have root privileges",
        "so that's why Apple introduced sip and one of the other names is known as is rootless many people thought well Apple's going to take the root user away from people like they do on the iPhone but that's not really what this me what this name means it means that root is less powerful that's the idea behind it",
        "so the way that works is that you now need an entitlement to perform dangerous operations so an entitlement is some metadata that's included when the code signature is generated for an application so for many dangerous operations that would compromise the system or the kernel you now need a specific entitlement to do that so loading a kernel extension or modifying the operating system or debugging a system process",
        "so Apple can still make certain executables able to update the system because yeah you still need to install updates but it's no longer just possible for any route you for the root user to modify those files",
        "and over the years in the releases since Apple has extended the protections of ship to other parts of the system as well so even debugging any application is now restricted and you cannot just attach a debugger to anything unless they specifically allow that and also an interesting feature is data faults with restrict as file access I have an example here so Apple considers your email database to be very sensitive because it contains a lot of personal information also your messages database or your Safari history is protected in the same way and what this means is that you cannot just see what files are there even the root user cannot do that uh so even if the malware is on your Mac and has roots use your privileges it cannot just read your email but of course mail itself needs to be able to access those files otherwise it would be useless so mail has a specific entitlement that allows you to access those files and this is the Commonwealth Apple dot rootless dot storage of mail which means it can access just the mail data fault but nothing else",
        "so in this way now certainly processes have become security boundaries and that also means that there's new types of vulnerabilities that we need to think about and one important one is process injection which is basically the ability for one process to execute code as another process so the systems thinks it's process B with the code is actually specified for process a and on Windows you have these techniques like dll hijacking that do similar stuff um a little Mac OS yeah this cannot really be a severe security issue if you're able to go to a different process",
        "and when Apple introduced sip as you can see on the right of the slide many techniques that could lead to process injection were disabled for those protected programs so Apple thought a lot about how they can make this security boundary actually work",
        "and also for third-party applications Apple introduced what's known as the hardened runtime to prevent certain techniques that used to be possible for injecting codes like Dynamic Linker",
        "environment variables and also Library validation which basically prevents the similar technique like dll hijacking but for Mac OS",
        "but micros is quite all large and established so there's a lot of parts of the system that were written before the security model had changed and yeah it's not possible to really reconsider the entire system into this new security model so there may still be vulnerabilities that can be used to inject code to other applications",
        "third-party applications can often have those process injection vulnerabilities",
        "um for example to abuse what's known as TCC basically the permission from to get if an application wants to use your webcam for the first time and many third-party developers are not aware of the security model so anytime you find the availability like this you have to completely explain the security model um and that's yeah it might be possible to use their application to steal the webcam data",
        "you can also often do effects like downgrading an application to an older version and then still use the permissions that the application has",
        "but those are incidents those are incidental vulnerabilities",
        "of course it's much nicer to have a processary injection filter you can just apply everywhere and that's exactly what I find so the CFE 2021",
        "3873 is a process injection vulnerability in app kit which basically means that any applicant based application was fill in the role and where this vulnerability was in is in the safe State feature so when you shoot down your computer there's this checkbox if you want to reopen the app the windows that you have open the next time you log in and this is known as safe state or persistent UI internally",
        "and there's also do does stuff like if you have an in-safe document you never didn't save it yet but you shared that in mac and then you start it up again and it can recover the content of that in safe document",
        "and this largely Works automatically so application developers do not need to opt in but appkit will automatically see oh there's this safe state I'm going to restore it and reopen these windows but third-party developers can extend it for example if they have their own document format then they may have their own objects that they want to store in that safe state",
        "and the state is stored in your library in the application State folder and there are basically two files that are important here first of all windows.plist this is basically a list of all of the windows that were open in the application and for each of them there's an encryption key and then there's the data.data file which as far as I can tell this is a unique format not used anywhere else let's contains a list of records and each of those records is corresponds to window and it contains a serialized object encrypted using that key from the windows to PLS file now I have no idea why this is encrypted because the files are right next to each other there's no permission differences between them there's also no Integrity check on the ciphertext so I have no idea why it's encrypted but it apparently it is",
        "an availability that I found is that this object that's encrypted here is serialized using a non-secure",
        "serializer so non-secure coding",
        "now serialization field mobilities are very common in C sharp and Java very well known but also Python and Ruby it's also very easy to exploit it to gain code execution with apple serialization format hasn't really been discussed for these types of vulnerabilities as far as I could find so Apple's format is called nscoding with apple added a secure version and a secure Accounting in 10.8 which is 10 years ago",
        "and the secure coding already solved the issue that many serialization vulnerabilities",
        "yeah it causes many of the serialization vulnerabilities so instead of creating an object first and then checking if it is the correct type which is which is what leads to these vulnerabilities because by then the object already exists and maybe doing something is Constructor or Destructor you create the object while checking its type so the example of the difference insecure version you first create the object and then you check its type this is dangerous because by the time you check its type the object already exists and may have done something and then secure version you decode the object but only if it is of this class or this couple of classes",
        "and secure coding is very common within Mac OS it's also very often used between different security layers so an application may be communicating with some service that's privileged and then sending these serialized objects over it's even used within iMessage so if you send a message to another user that is a secure serialized object",
        "um so there's been a lot of researching the secure serialization format the insecure version is not used very often in this kind of context so Apple has been very good at making sure it's not used in a way that could lead to vulnerabilities but in this case yeah it was possible so what is the attack that this allows so what you can do is you can create a new safe state for an application with a malicious serialized object",
        "you can write it to that directory for the other application and then you can ask the system to launch your other application and then when the application runs it will automatically deserialize that object and then yeah we could be executing codes within an app within another application which also means that we have access we can use the entitlements or permissions of that other application",
        "so I found this and then it was just well what object do I write can I find anything somebody else has done so there's this famous projects uh White sociario for Java CU civilization vulnerabilities and also why so serial.net for c-sharp but yeah no similar project exists for objective c I also checked a couple of Google projects here white tips ready exploited serialization within all of those cases it will secure serialization using a very specific vulnerability",
        "and those were now fixed so I could no longer apply those techniques so I had to really find out yeah construct these objects to change from scratch to exploit this issue",
        "so",
        "how did I do that so I decompiled or loaded into my decompiler or app kit and then I looked through all of the indices coder functions to look for something useful and to my surprise many of those classes that are deserializable do not Implement",
        "secure quality but they are also often not that interesting because the only thing they do is just recursively decode their own interest variables and then there's really no no other functionality that you might be able to access so the first step that I found that I could use was the NS rule editor",
        "I hope it's readable and so what this does is it obtains an object from the archive and the place a key path from the archive and then it creates a binding to that object using that key path so bindings are something like a reactive programming technique in Macos",
        "this means that you can sort of yeah you can directly connect your View to a model without having to use a controller",
        "and then and one thing that you need to specify is that key path and it determines a property that you want to bind to so for example if you have a person you might bind to their name to make a field that's automatically contains your name but that key path can basically be any methods even if it's not a property so you can bind to any method as long as this has no arguments so you can just bind to yeah any zero",
        "argument method on an object so with this class I could Now call methods um without any arguments",
        "and then the next step was NS Custom Image wrap this obtains a object from the archive and then a selector and the selector is basically like a function pointer for a Objective C method but it doesn't use them yet it just stores them but then when you call draw on it um object it will call the selector on the object that it's obtains so if we combine this with the previous step or you can call zero argument methods we can now call the draw method on a an S Custom Image wrap to perform any method",
        "although we don't have any control yet over the arguments it bosses itself as its first argument and any other arguments will be random data that happens to be in those registers",
        "but this is a very powerful primitive already because you can call a lot of different functions",
        "now I have to skip a few steps for time reasons and also disclosure reasons but uh",
        "I'll summarize the steps a little bit here so we can first call those serial argument methods and then we can call any method let me use a trick to create other objects that were not implementing at NS code or usually not serializable",
        "I'm going to use the same trick to call zero argument methods on those objects",
        "and then and I'll take the arbitrary methods on those objects and that's basically enough to evaluate applescript within that process",
        "and evaluating applescript is already very powerful because if we for example would attack mail then we can now access the files within the mail data fold copy them out or could spawn a reverse shell and do stuff like that",
        "so this was a nice success to have already",
        "but in one of the instances of the exploit that we wanted to use this was not enough we really wanted to have basically equivalent to native code execution in that other process",
        "but this was quite tricky because as I mentioned there's not really hard on drain time and the art engine time is is meant to make these kinds of attacks harder",
        "so it prevents us from creating memory pages that are yeah read a writable and executables or no uh just in time compilers are allowed they see Library validation so we cannot just load the dll or the dynamic Library this is the environment variables which would not be useful here but also blocked",
        "so how",
        "how in the solution I found was I could load the python framework which was signed by Apple and at the time it was still included in Mac OS and then I could import the C types module and then using that I could basically evaluate code that was equivalent to native code just called C functions create structs stuff like that",
        "but now I was only able to create Objective C objects but I wanted to call into Python and the python framework doesn't have any objective-c interfaces you can use sorry I had to find some intermediate steps for this",
        "and what I use for that is called The applescript Objective C Bridge",
        "it's basically similar to applescript but it has the objective-c runtime breached into applescript",
        "and what I noticed about that is that the art engine time doesn't allow you to load libraries that are not signed by Apple but you by using applescript of the xfc you can load scripts from another bundle the scripts don't need to be signed so you can use this to learn applescript into another process",
        "and this allowed me to create objective-c objects called Methods",
        "called C functions which was very useful because this was not possible before but there was still one downside I could not create any pointers to things that were not objective-c objects I could not create any structs or work with C strings because the event time doesn't The applescript Objective C Bridge doesn't allow that",
        "but I could call C functions so I went through all of the functions exported by the python framework but all of those really require requires a Char pointer because she needed to pass either path or the actual python code that you want to evaluate and I had no way of generating those character pointers using applescript Objective C",
        "but then I found a very neat but ugly trick to do that I could call Pai main with zero and null and nose because it's zero it's equivalent to nil this was allowed and what this means is that the process now acts as if it is python as if you would launch it normally in a shell which means that it starts his Rebel within another process so in on standard input I could just pass all of the Python codes that would then be evaluated in that process",
        "now if you're a fan of how for Boost applescript or objective c is then you really should look at the Apple script Objective C Bridge because it's basically even for Boost and both of those and this is how you call functions um yeah you need to drop everything in there and tell current application and then all of these apostrophes to access Objective C goals",
        "and using this with a reference that basically pass nil into it I could load a python grapple",
        "so to summarize that I could evaluate applescripts with the Apple script Objective C Bridge and a good fra python because import C types and now I could execute code that's basically equivalent to native code within the application I can just create structs I could create Char pointers I could call C functions and yeah I've just bypassed the the hardened runtime restrictions and can now execute any code in the process and also the neat thing about C types is that this just works even with all of those restrictions if you look at for example the other Frameworks included like Ruby or Pearl",
        "and you can create bindings to see but then you often need to compile some intermediate codes to create those bindings and then the library validation would not allow that",
        "so now for exploitation for the three different ways that this vulnerability could be applied first of all escaping your sandbox",
        "to do that I need to explain how this works so this is an open Panel it looks really boring you see a lot if you use Mac OS but it's actually technically quite complicated because if you have a sandboxed application and the application cannot list all of the files you have on disk but if you want to open a file it would be very inconvenient if the application called know what files you have before you open something so the way Apple implemented this is that the window is now part of the application but the contents are being drawn by a different process if you're a web developer you may be familiar with iPhones this is kind of like the same idea so there's this open and panel open a safe panel service which draws the contents and then when the user selects a file and clicks open that panel will give temporary access to that file back to the application so then the application can read or write that file",
        "and as it turned out that open or safe panel was loaning its saved state from the same files as the application itself it's I'm guessing that this is because you might want to resize the panel and then you might shut down your computer while the panel was open so it needs to remember both states of the different",
        "combination of this panel with the application but I'm not completely sure of that so how we could attack this was quite simple we just write the saved State into our own applications directory we trigger the open Panel and then we were executing code in a known sandbox process so essentially we have already escaped the sign box and this part of the vulnerability was already fixed earlier than the rest so this was fixed in 11.3 it was no longer sharing this directory with the open Panel so it was no longer possible to do the same thing",
        "in The Next Step was elevating privileges to root",
        "and for this I applied a trick founded by somebody else so this was a in the in all of the logic books for the we invited by Elias morat",
        "um there are there's specific entitlements",
        "and com.apple.private.authorization services",
        "which may contain something like system install Apple software and what this entitlement means is that this application is allowed to install packages signed by Apple without any",
        "authorization or even any notification to the user so you can silently install a new Apple sign package",
        "and then this could be combined with a specific package and the Mecca's public data access utility [Music] and when this package is installed it has a post install script so script that runs after the installation that tries to run a command from the disk you install it to so normally you would install this to your Mac OS disk and then it would just run a command from there but you can just install it to any disk currently connected to your Mac so you can create a new Ram disk or disk image write the script that you want to run to that disk and then when you install this package to the disk it will run that script because there was no check that this was actually a Mac OS install disk you can just install it to an empty disk image and also mounting one there so this images does not require root privileges so we could Mount the disk ask this USB service to install this package because it's signed by Apple this is allowed and then this post install script runs which runs with root privileges which means that we have now elevated privileges to root",
        "and I finally bypassing the zip file system restrictions",
        "to do this I basically wanted to make sure that we had the full impact of this vulnerability mapped out so I looked to all of the applications that were available that were installed on Mac OS and that might have an entitlement that I could use where they even looked through like the macros Big Sur beta installation disk image and there I noticed this Macos update assistant application this is a very powerful entitlement common.apple.rooter.install.heritable",
        "and this basically means that it can access any zip protected files and read or write to them of course the post-explanation still apply so you cannot just write to anything but uh we also elevated a privileges to root it's also heritable which is a nice bonus because we can just spawn a reverse shell we don't need to moderate python within the process",
        "now what we can do with this for example we can read the email or the messages database or the Safari history of all users",
        "we can grant ourselves permission to use the webcam or the microphone of the user without the user have to having to approve that",
        "you can also persist very well on the system because we can could write ourselves to a set protected location because for example of providing mobile removal tool and then we we would be launched when the applications already next starts and it would be quite difficult for Apple to remove us or basically Apple could remove us with any fire scanners or something like that would not be able to remove us and then finally we could also learn the kernel extension without approval by the user so normally when you install a new kernel extension you get this prompt and it usually really needs to click a couple of times to approve a new kernel extension that we can just ride to the database of approved kernel extensions and then we would automatically be loaded now we still need to have a relatively signed kernel extension and kernel",
        "extension signing certificates",
        "are pretty hard to get Apple's",
        "deprecating it so it's not very easy to get one but you might be able to find the film and welcome or extension in just any kernel extension at all with the vulnerability and we could load that and Export it and then we would have full kernel Cloud execution but even without that we would already have access to all set protected files so even this up to this point would already basically have fully copyright all of the sensitive information on the system",
        "now I have this video to demonstrate this attack and this is on Mac OS 12.3 I think so sandbox Escape still works and first you demonstrate that uh application really is sandboxed so it goes through the three different steps here this one was quite fast privilege escalation is a little bit slower because it needs to mount the disk image and then perform the installation",
        "three to five you see it on the desktop there might be able to make it a little bit more subtle but it didn't bother with that and then I would sit bypass should now spawn a shell as you can see it's a root shell but also to demonstrate that we have also bypassed the zip file system restrictions and go to the system policy configuration directory which is where the approved kernel extensions are stored so very sensitive directory and",
        "as you can see we can create a new file here",
        "[Applause] [Music]",
        "[Applause]",
        "so how was this fixed um",
        "so with that new method I showed that start Apple",
        "third-party developers can indicate that their application only supports secure objects a secure deserialization for their safe state",
        "Apple has already enabled this for all of their own applications at existing applications might want to store custom objects in their state so that's why this delicate method was needed because then that object would",
        "break if Apple enables this for all applications",
        "um I'm not completely clear if it's still exploitable if the application doesn't try to use that feature and I haven't completely tested that with the release",
        "this was reported to Apple on December 4th in 2020. and then we fix the sandbox Escape quite early in 11.3 in April",
        "and then they introduced The Fix together with the release of macro Monterey oh our thoughts up to a week ago that they didn't export is fixed to Big Sur and Catalina because it was not originally in the release notes or in the security advisories of Apple but then last week I was composing my slides I noticed that they added it to the Catalina release notes in May",
        "so the Catalina release from octo where they updated it in May to include this I'll miss that but in the Big Sur release notes have not been updated so it's not listed there but last week I got a spontaneous email from Apple that congratulations on your black hat talk",
        "which would you like to tell us what you're going to talk about we might be able to provide feedback so I asked well did you fix it in these other releases and then just uh two hours ago or something like that they told me that it should be fixed in Big Sur that was not enough time for me to verify this so I don't know supposedly it is fixed in both older versions",
        "so to conclude um Macos has security boundaries between processes and these are very important for the security of the system and each process injection vulnerabilities can now be used to break those boundaries",
        "the CFE 2021",
        "3873 was a process injection filamentability affecting basically all applications using App kits and we use this vulnerability to escape the sandbox Elevate privileges to root and then bypassing the zip file system restrictions and it's fixed in October 2021",
        "now some key takeaways here and the macro security keeps adding more and more security layers more and more to defend against attacks by malware",
        "but adding those new layers to an established system is quite hard because there's all of these parts that have been written before these new security requirements and it's really hard to investigate the entire system anytime anytime you make a change like this so this code that was written before there was any attack service here it's not certainly a tech service because you can attack other applications and also an important point there I think is that the effort of attackers may not increase if you add more layers if you can just use the same bug to bypass all of those layers or you might be able to find a trick to skip certain layers",
        "finally have some references for yeah other stuff that I used for this talk um Apple's documentation and divide up from Elias morat for example now if you want to read more about this we will publish a write-up of this vulnerability with a lot more technical details sometime in the next couple couple of days but if you have any questions now then please let me know",
        "[Music]",
        "[Music]"
    ],
    "OpQvXGJcH4s": [
        "[Music]",
        "now it's my pleasure to Welcome to the stage Ned Williamson",
        "[Applause]",
        "all right hello cool it's working uh without further Ado let's just get into it uh this talk is called catch me if you can uh kind of cliche someone else had the same phrase on one of their talks so sorry but uh we'll be talking about race condition fuzzing today so just a quick intro on me I've been a researcher at Google project zero for a couple years now I like uh fuzzing as my research interest and then low level security embedded systems browser IPC kernels as my I guess Target of my research so this talk I'll be uh",
        "on theme with that I'll be talking about research related to fuzzing and then how we can apply it to Kernel fuzzing on iOS",
        "so the thing I want to start with is uh you know this talk is mostly about addressing the problem of fuzzing for race conditions and more generally it's just about how to even deal with race conditions and someone who uses fuzzing a lot I'm pretty biased but just to introduce the problem here's just a small snippet I took of some bugs that were reported by my team in the past couple years and then a couple of these I think one of the the Android binder bug and dirty cow I just put there so uh just so you're familiar with maybe there's some more famous bugs as well but essentially these bugs have been",
        "um you know of high security criticality and",
        "really you know it's something we just continue to turn into and something that we need to address but we don't have any good tooling for it so",
        "I know I was frustrated by this and that's kind of over time I thought how can I address this and bring some automation to discovering these issues uh without relying on luck or pure human ingenuity so yeah this is the problem they're they're hard to find so we don't really have any better way to find them than static analysis or auditing which I would consider pretty similar and related so human other has to today",
        "realize that there's the potential for a race condition somewhere or at least to be aware of some specific pattern and then maybe write a static analysis maybe like a matcher on the syntax tree to find this specific case where a known buggy pattern occurs but we don't really have a nice way to find race condition bugs in general and maybe",
        "I shouldn't say in general but we just don't have an automated way to do this for bugs that we can describe the",
        "problem when we see it like we know when it crashes that there's a problem we don't have a way to actually search for those bugs without essentially knowing what we're looking for already so that's the the fundamental issue and fuzzing actually is generally pretty",
        "good at addressing this category of problem uh you don't necessarily need to know the form of the bug you're looking for you just need to know the property that you're trying to violate and so for security reasons you know mostly we look at memory safety as that property but earlier teammate Yvonne gave a talk",
        "on this xmpp stanza fuzzing and there he was trying to violate this property of consistency between parsers so it's not just memory corruption but generally fuzzing is pretty good at saying you know give me a property give me a way to interact with this program and I will try to find test cases that violate that property and that's actually a very nice thing for race conditions or timing issues because we might say if we see a use after free you know that's caused by a race condition we don't need to understand how that happened we just we know that fuzzing could observe it if it managed to trigger it but then the question is how do you actually fuzz so to actually address this problem we'll have to first cover how scheduling works and um don't worry I'm giving me an overview because I didn't remember how any of this worked when I started this project so this is a kind of a quick overview so I think that there's two there's a kind of an important partition over types of scheduling that you can do to kind of consider what we can test well and what we can't test well so what we can test well is cooperative scheduling and this is uh where I'll start with this little demonstration so how Cooperative",
        "scheduling looks is that all the threads are cooperating with each other they yield explicitly so say in this case we start execution in thread one this will continue along and at some point this thread says uh I'm ready to yield that goes to the scheduler and at this point the scheduler can decide okay I'm either going to switch back into thread one and continue or go to thread two in this case we'll go to thread two and execute all the way to the bottom there's no yield statement so then this thread terminates and we go back to the scheduler and then the scheduler says okay we'll only thread one is runnable in this little example and so we just go there and continue so now if we look at how primitive scheduling works it's actually very similar so we have the same example continue along there's some explicit yield maybe we're blocked on a lock maybe we just literally yield you know this is a assist call on some platforms go to the scheduler same thing happens but in this case at some point during the execution of thread 2 we get a timer interrupt or some other condition happens that preempts this thread",
        "and so this causes us to go back to the scheduler and the scheduler is faced with the decision again out of these two runnable threads which one do I run and here it might decide to actually continue with thread one and then resume this ends and then we come over to thread two so the important bit is that uh",
        "if there are assumptions about or if there's any safety issues or assumptions between the two threads that don't respect the fact that these preemptions could occur anywhere then we may have a bug and so we want to be able to address this problem with fuzzing now the the",
        "interesting bit and I guess my philosophy is I always try to start with something that I know works well and slowly add to it to strengthen or broaden what I can do so this is why I started with Cooperative scheduling you'll probably notice that these are essentially really similar they both have an execution context which is just a generic way of saying a thread they both can block our yield to a scheduler and the only difference release preemption just again has this additional property where at any point you have these yields that just kind of appear caused by interrupts or again other other conditions can could relate to it but this is a problem for fuzzing because this is hard to control and it also can lead to exponential blow up so the good news about Cooperative scheduling is that it is easy it Cooperative scheduling because it runs in order um if you think about that first example there's no random yields popping up it just it's all explicit so as long as you're running the program if you have a deterministic scheduler",
        "um there's no Randomness at all you can run the same test case over and over and it turns out that um this is something I leveraged back in 2018 when I did a chrome sandbox Escape exploit and",
        "I think at that point I was realizing like oh there's something kind of interesting here but you know maybe multi-threading will never be doable but at least when you have different tasks that are running asynchronously this kind of Cooperative thing uh there's really no issue for fuzzing needs so again when we get into preemptive scheduling where most programs live or a",
        "lot of programs live that we would like to fuzz uh this is something that's super hard to model like say you have multiple cores um you know threads running simultaneously or even a single core and these random preemptions and switching we really have no control here and even if we did uh we still have to search this exponential search space at every single instruction and again with the tools we have today if we even hit a bug by luck there's no guarantee it will reproduce so we just have to cross our fingers and hope maybe we hit something um and this has happened to me I have just stumbled into race condition bugs but it always bothered me that they weren't predictable so",
        "just to make a little more clear my initial work from 2018 and and on to about 2020 was that I would deal with this problem by converting preemptive targets to Cooperative targets by hand and so what that means is whenever I was",
        "fuzzing something that say had a garbage collecting thread in the background I just simply wouldn't spawn that thread I would just run the main thread and at the end I would say well let's randomly run garbage collection and just call that function but there would always be just one thread running and so the nice thing is this is super easy to implement in like a hacky way for different fuzzing projects um I used this on Android NFC because the threading model was simple enough I could just replace with with a Cooperative scheduler but the problem is on larger targets there are more complex real world well Android's real world but you know the rest of the world uh it gets really hard because we can't support blocking if you simply just don't spawn a thread and you don't do the work that Fred would have done at this very coarse Grant High Level we just have no way to handle say you you call some syscall that you're fuzzing and it blocks uh well there's no notion of background work like now you are the background work and something else has to happen so uh I had this idea that well why don't I",
        "at least try to create a deterministic Threading Library so at least",
        "I can spawn multiple threads they're really not going to be running actually in parallel they're all be on one CPU but at least I can switch between them and kind of get around the blocking problem",
        "um so to implement this I thought well okay let's do what already works we use only one thread you know we already have multi-thread programs running on one CPU this is a reasonable thing to assume for testing",
        "and we're going to need to interrupt anything related to scheduling and multiple contexts so in this case this is basically anything related to threads or sync Primitives like mutexes reader",
        "writer locks condition variables",
        "um and then we just create our own scheduler that kind of owns all this context so it will own the threads that exist which ones are runnable the mutexes and synchromatives will interact with the scheduler and let it know my thread's blocked waiting for this other thread to finish and so if we have these components um we can at least encapsulate all the uh",
        "things related to multi-threading and then we can just make this deterministic just for testing so far nothing new here uh",
        "but uh so uh I guess the project I began working on uh called concurrence but still kind of TBD how to name this I don't know but uh it's sticking uh so essentially what I did is I created these few components to help me with this problem uh the first is an Executor which essentially",
        "provides the sub primitive of creating deleting and switching between threads or contexts and then a scheduler that will look at these you know contexts that are runnable and say uh you know you spawn a bunch of threads in the background and then you own the scheduler object and you just say run a bunch of work for me until no threads are runnable and then this way we can spawn a bunch of threads in the background for a fuzzing job and then just run until they complete then do some more operations get some more work cubed and kind of keep looping so",
        "it's not highlighted well in the slide but the the second line under the scheduler bullet um randomizing the order of runnable tasks using fuzzer data this is really one of the big insights here so it's not just that we are uh or I guess back in my Chrome days uh when I was doing cooperative fuzzing one of the things I would do is whenever the scheduler has a choice to pick a some runnable task to run",
        "um I realized oh why don't we just kind of if we're allowed by the model of that executor why don't we just try randomly switching between them as opposed to just doing them in order and so I included that idea here so the scheduler not only just keeps track of what's runnable and switches between them but rather than doing them purely in order um whenever we have a choice we'll just pick a random task to make it runnable and or not make runnable but to switch to it um and again this is kind of little details we don't really need to go into annotations semantics and all this but essentially uh we need to support yield and block as fundamental ways to tell the scheduler which threads are runnable",
        "and so this still hasn't really addressed this problem of preemption and initially I really had no hopes of dealing with this problem I thought well if I can at least make some kind of deterministic scheduler then my fuzzing will be reproducible maybe I can mess around with the schedule here and there and find some stuff um but then I realized that uh",
        "preemption really is yields and so I didn't initially realize this in the way that I showed it in the beginning but if we already have to support blocking and yielding um a motivated researcher might be able to insert their own yields to a couple places so",
        "even though preemption's off and everything is running into a box or running one at a time if we yield in a couple interesting places maybe we can let the pleasure switch contacts around those areas and see if there's any race condition bugs so that is a",
        "I guess that's posed the question of like is this an idea that even makes sense can you turn off all random preemption and pick a couple places to do it and actually find a useful bug and so I looked at a bug that I really was hoping I could find I didn't try to find this bug but I was thinking about this problem back in 2020 and I saw this bug report come into the Android bug Bounty I believe and this was a user mode to Kernel",
        "um I guess rce privilege escalation vulnerability that I think was exploited and",
        "this relied on a race condition so I looked at the description of the patch this is straight from the Linux change log and I don't know about you but when I looked at this I thought oh yeah no definitely this is uh this is too complex like how can a fuzzer replicate",
        "this you know uh but then I saw the diff and I realized this actually looks pretty simple",
        "uh I I guess what I was thinking is if I didn't know about a bug already being here in in binder uh",
        "what annotation what yield statement might have I've been able to add and so if you look at this diff uh all that's happened is you had this function at the top where they took a lock dequeued some work and then unlocked and returned the work and in the patch they kind of show that the problem is this W type field that was a part of the work became invalid like that it seems like w the W variable became freed after the lock was released and so it seems like oh you only really need to um preempt in one place to find this bug or search around one preemption point and that's right after the unlock of proc uh in the first function",
        "so then I looked back at this description and realized that despite all the complexity where they're explaining how this bug came about all that the fuzzer would need to do to find this issue is to preempt at those two places that I had hypothesized where this interlock you",
        "can see the first bold statement when we release it on the next line we acquire in thread two so we were doing something and then in thread one we dequeued that work and then we switched to thread two thread to Freed the node that we're looking at and then release the lock and then third one didn't need to require it but it just continued running and so",
        "I realized that the the critical path is immediately after these two release releases of the inner proc lock",
        "so you know this is where I had a real insight that like you know this is a bug that is critical you know we have no tools to find things like this but it only takes one preemption and it's a preemption in a place that seems obvious you know you have a whole subsystem that's really important that uses a lock in like two places I don't think it's unreasonable to Guess that a security researcher could say well given a fuzzer that can handle this situation I'm going to guess let's preempt before and after every lock let's preempt maybe in a few places and then it really is uh quite a small search space to cover and so this is the Insight we really need fewer preemptions than we think and it took me a long time to understand what was going on here because so much of it was just like intuition and experimentation but when I talk to people who know more about uh concurrency",
        "um I got this really great line from the author of a leak sanitizer or he said something like Race Free programs have no observable Behavior differences when preemption occurs between sync points it's like what is that it just means that uh if the programmer got it right",
        "um if you only have preemptions around locking that's enough to kind of see everything that can go wrong and so you know don't worry too much about understanding this but essentially there is some kind of core intuition about like where locks are placed are around the areas where bugs are going to manifest or it's very likely so I thought okay that's that's probably good and then if a researcher is skeptical of that",
        "well they can sprinkle a few yields themselves elsewhere and uh no problem",
        "so this is where I began to actually implement this by extending my existing iOS kernel fuzzer with this new project so the initial sacrificer project which",
        "is how I call this iOS kernel pleasure looks like this basically I use lib fuzzer as the fuzzing engine you could really use anything but what lib puzzer does is it collects coverage and mutates test cases for you similar to AFL and the type of input that it generates our protobuf messages that describe sequences of syscalls and you know other related things to one one test case and then it feeds these inputs to this fuzz Target function and then we call into the kernel uh in",
        "red with these syscalls in order and then this project is actually a completely user-based buzzer so",
        "um if you've used something if you're not familiar with something like gvisor or a similar uh like user space based like containerization of of a kernel that's essentially what we're doing here so rather than using a full hypervisor we",
        "just kind of uh run everything in user space and then when so in gvisor what happens is when your program tries to make a syscall it goes into some go code that handles the syscall for you and you don't have to actually go to the kernel so this is pretty similar but for a hypervisor so in the iOS kernel tries to access Hardware it just gets redirected to this hyper call interface that's handled all in user space so the result of this is I just have this whole user space buzzer I wish I could talk more about it I'm guessing like not everyone here knows about this but unfortunately I just don't have time to go into details so this is the existing project and so to add deterministic threading support to allow me to do blocking syscalls I added this concurrent code base so what this does is I have this extra scheduler and executor and so if I want to or if the kernel wants to create threads internally those are actually captured and sent to this hyper call interface this is handled through the scheduler",
        "component that I talked about and then ultimately these kernel threads are just handled in user Space by my my new project this this deterministic scheduling uh but the important bit is that the scheduler also has access to the fuzzer data so on the right side you'll see that Arrow go up get random numbers so what that's uh demonstrating is that whenever the scheduler has an option between switching between a number of runnable threads it will fetch a number right now I mean maybe in the future will be smarter but now it just fetches like the nth give me the uh I I it'll say like I have 10 runnable threads give me a number between 1 and 10. and it will draw that number from the test case so the fuzzer can mutate that and then thus mutate the schedule so now we're fuzzing along kind of two axes you have",
        "the syscalls themselves and the data related to those sys calls and just the normal operation of a single thread in the kernel but now you have this additional axis where the fuzzer can mutate the schedule of a given test case and so",
        "just so you have a little more concrete idea of what this looks like this is the data model for the fuzzer this is just a Proto buff message so in the current instantiation or",
        "whatever the current version of the fuzzer I have three threads that each",
        "execute different sys calls and then there's simply this bytes field that provides the scheduler data so in each of these three threads um they are they get a pointer to these protobuf for the different commands that they handle from these different threads we start running and then the scheduler just says okay thread one two and three start out as runnable let's just run them they'll do some execute some sys calls at some point they uh my block yields or maybe terminate and So eventually if we let the scheduler run until it's empty uh we'll have run everything and the interesting bit is that you know if any of these things cause some background thread to be created or to run all that will all be interleaved and fuzzed along with the three sets of syscall threads and then Y3 originally it was two but I had two threads in one process and then I decided to add an additional process with another thread to catch like cross process race conditions",
        "um and you know this all sounds smart but uh this is what it looks like it's really just you know I have my little scheduler thing it's kind of a pretty simple project and then to intercept the",
        "mutexes in xmu in the iOS kernel uh we",
        "just have something that looks like this so I just forward these calls to my virtual mutex which is the one that works with my scheduler and handles the yield and block calls but then I also have these additional yields before and after like taking a lock and after releasing it to kind of catch these type of issues that I was referring to earlier around locking",
        "um so we can kind of skip over this but essentially yeah for each test case I fork a process and then create threads in there run and then kill the process and so um if things go completely awry it's all contained to a single process um so when I started running this I quickly ran into uh I use after freebug and",
        "it's interesting because it's in IPC which is an area that's pretty interesting lately and so I looked at this is the test case that the fuzzer produced and I I had no influence over this it's completely straight out of the buzzer so I don't know if he's zoomed in or something yeah so here's I have a better format of it but as you can see it's fairly structured but again all I did was say um hear the syscalls here's what the structure of the data looks like for mock messages those contain this header with these enums in it it has these fields that represent ports and so I just kind of made a little description and uh this was enough to run into this use after free so if we look at um an easier to read representation what happened was we had a in the first thread thread zero we created two reply ports which are kind of like file descriptors",
        "then mock message override and mock message are the same thing they just both send a message and so this first message it sends to the remote Port one a message from Port 2. and also receives",
        "so if you see under options it says send and receive and we are making a send rate uh for the port so if you don't know about mock which I don't think I even knew when I found this test case uh all this means is like uh when we have these reply ports we're allowed to receive messages on them but we're not allowed to send messages from them because um there are special reports that someone can reply to us with so what this is doing is this is actually in a roundabout way the fuzzer realized oh if I create reply ports and I send this message to myself I can give myself this additional right so a human would never do this they would just call like create a mock port and it comes with both rights but just to show that this was random the fuzzer just stumbled into this pattern and it was enough to find a bug so the real bug comes in these next two messages so in the first thread we are sending a message to Port 2 from Port 2. and we're copying and moving our right to send messages on this port and the message",
        "it's bizarre and then from the other thread we",
        "send now that we have a right to send from Port one we send a message from Port one to Port two right I don't know if this even makes sense but because we sent it here but in any case we create a",
        "let's see so we do a move receive so in this message we're sending to part two from Port one and we're moving our right to receive messages on Port two um I think I don't know it's confusing but that's that's the point right so it found a way to erase these uh two last mock messages and so I added a special print function to my project that indents based on which thread you're in so I just put some prints around all over where the bug was happening and as you can see this actually turns into an interleaving table like you would see a human ridden one and so we can see that mock message was called from thread zero and thread one and over here somehow we end up copying in two rights so I think that's where we send a message to a port from the same port and then over here where we did this move receive operation it drops two references so references go three two two one and over here we end up dropping a reference and freeing and then we end up freeing again so well this this is a real race condition bug it's interesting what was really interesting is that it reminded me of a bug that my teammate Ian had found about a month earlier and so when I looked at his report he uh",
        "explained pretty clearly what the actual issue was and he's",
        "he says that you know basically when you send a message to a port from a port uh xnu thinks well both of these are the same port so we can do some operation the first time and then if it fails we return if it succeeds we continue and it thinks well we already just succeeded on the same port there's no way that it won't just succeed again so they ignore the return value here and it turns out that from another thread you actually can do this weird move receive thing I think to break this assumption and so you can race between these two calls and",
        "um this makes this fail but then they don't realize it and then things just kind of go haywire and so uh this is Ian's handwritten message",
        "um that he sent to Apple and this is the way that they fixed it based on this report and um as you can see it's pretty similar I think he's got sending a message to itself or from from a port to the same port and then we also have this received right destruction with a move receive and he has a different way of doing it uh but it actually is the same bug and uh it's interesting because I I heard someone say that this bug was an example of a bug that you couldn't find with fuzzing and I would have agreed with that if um it hadn't just happened like that day that I heard someone say it so so uh not naming names but uh the interesting bit I guess is uh if you keep running it then on the new xnu code uh it doesn't",
        "stop working and so now over on the out of the mark message IPC world let's go to BSD networking same setup no special you know awareness just this trick with yielding near unlocks we end up seeing this uh other simple",
        "bug so in thread one we call Saka and set sock opt and thread two we call disconnect X and what's interesting is uh this actually is the same as the sock puppet bug I had reported a few years back same three sys calls it just happens that before this was there was a deterministic bug where if you um set some option and disconnect there's some use after free condition now there's a race between setting a different option called the flow divert token and disconnecting from another thread and so",
        "um here I transcribed it to C plus plus you know it's a little hard to read but essentially I created a socket and then",
        "spawn a new thread where I just disconnect on that socket and then from the first thread send this packet and then",
        "it's you know there's a news after free condition and the interesting thing is that um I had no knowledge of this packet format I didn't know what floativert was all I did was just call set sock opt with random data and coverage guide fuzzing as powerful as it is found that uh you could uh",
        "create this structure with this contents and it would get to this code path and then it realized that disconnecting is interesting and then it realized",
        "um just maybe by chance that oh this specific ordering uh uses it for free just starts to pop up everywhere and so this is the panic I got and as you can see this is a kernel built in February of 2022 so just a few months ago this is a real app sandbox to Kernel use after free and uh",
        "it was found totally deterministically you know I could run this test case 5000 times it would crash in the same way every time it was straightforward to transcribe to uh",
        "by hand and so that's actually this bug on the top from my initial list is um you know we started out with you know thinking at least for me thinking this was impossible by the middle of it I'm colliding with people and then by the end I'm starting to find new things that are until now undiscovered and",
        "it's possible that other people were aware of this bug but at least as far as public source code and at least the latest iOS version at the time it was there um so then my question was",
        "what exactly did I even do what like I just started from what made sense to me and just proceeded forward and forward like how is it that no one has done this what what is is there anything interesting here am I what what am I observing so I talked to a lot of people I did a lot of research to try to understand how this fits into existing work and it turns out that it's a real small tweak on deterministic record and replay which is a type of research that people you know write papers on it's like a very broad space and",
        "uh yeah it turns out I just have a little twist on it that's related to security and fuzzing so I think a couple really good examples that are representative are the RR project which is a reversible debugger from Mozilla",
        "and you know a lot of companies have a reversible debugger so if you think about what reversible debugging is it means you run a test case and you capture all non-determinism to some file then when you rerun the test case you need to be able to replay everything that you observed and so",
        "um Sorry by being able to replay it this is how you can reverse so you're not really reversing you're kind of going back to where you were earlier and so",
        "if you think about it if we run a program to try to capture a race condition and then we output some file well who said that we have to specifically run and get that file to happen to be created for us why not just randomize this file and why not just create this file ourselves that's really the the thing that I've done here so the other thing that's interesting is Microsoft chess this is another project that I think maybe even a decade old by this point um and there they do actually the same thing I I really couldn't believe how similar it was you have one thread you replace the scheduler so you control it you turn off preemption and you um have a few sync points which are yields next to mutexes but the difference here is that they try to systematically enumerate all interleavings of a given thing so in that first example uh",
        "where I showed the binder thing they might say let's add a yield after this unlock and then we'll test every possible interleaving um of all the threads and all of these points and see if there's a bug and so that actually would have worked probably does work on a program like this but the problem is when you want to scale this to an entire kernel uh you have BSD mock you know you have millions of lines of code it's really kind of intractable to guess where to run things and I guess that's not the right way to say it like I'm also guessing where to preempt but rather than systematically testing every possible exponential number of interleavings in one specific place I'm just saying just here's a way to",
        "explore everything",
        "and the fuzzer can go ahead and try to just do it for me and so you know in in summary I guess the the two contributions I think that are really novel here are that we now have this uh we now let a fuzzer control interleavings and we also",
        "it's this this part isn't bit really new but we scoped down annotations and uh sorry we scoped down where we do the yields so annotations are like yielding and blocking and stuff so that only happens in a few places where we think bugs are likely to happen and again my model is sort of like Ida Pro it's if the researcher is competent just allow them to express what they want to express so as long as we can give a security researcher this tool and they have good hypotheses good intuition about race condition bugs they should be able to use it to explore on their behalf to do experiments and so future work in this area are thus far I have not done anything to inform the fuzzer about these different threads so it doesn't understand like",
        "maybe in that binder case like oh it's kind of interesting that these two threads are near each other using the same data and we should interleave around here there's no I I honestly couldn't believe that this worked at all but it somehow I think what's happening is uh coverage guided fuzzing just works so well that random schedules are enough",
        "to uh find bugs and importantly",
        "um you know if you're randomly building a test case and growing it using coverage guided fuzzing it's actually pretty likely you'll end up with two threads doing work related to each other so the fuzzer might notice like oh if I'm doing stuff in this thread but in the other thread I mutate and that affects This Thread it maybe it deletes something that I was trying to use that's sort of interesting so the fuzzer's kind of building this thing and along the way it gets close to a state where a random schedule might just trigger a specific interleaving that's that's buggy um and then obviously improving performance productionizing this",
        "but essentially I think I I have the um you know I had the idea I did an implementation was able to replicate existing work and find new bugs and so um essentially ready to say that I think this project succeeded as a resource project and it's just a question of uh shipping it so in I guess uh",
        "the way that these things normally go it is not ready to be shipped so uh the there will be a first draft available on the project serial GitHub um the stock price project is already open source and we'll be adding this multi-threaded fuzzing component to it shortly probably the next week or so once we merge a few final improvements",
        "and I think I'm out of time so let's just leave it at that but yeah basically coverage guide fuzzing is amazing we need to work more on concurrency and not just for security we need much better concurrency tooling and it's not that hard I think so this is kind of my takeaways So yeah thank you everyone I think we're out of time so probably have to do questions outside but uh I appreciate you coming",
        "foreign",
        "[Music]"
    ],
    "7w_gSCt9ewE": [
        "[Music]",
        "all right thanks for coming out here listening to me talk today I'm going to be talking about a mitigation that we built at Microsoft and are now rolling out called castguard uh before I talk about exactly how castguard works oh great my clicker won't work now um",
        "okay uh yeah I just want to talk a little bit about the the problem space that we're working in because when you hear people talk about building mitigations oftentimes they're talking about one of two things they're either talking about building mitigations that kill exploit techniques or they're talking about building mitigations that kill bugs and at Microsoft we've certainly spent a lot of time working on both of these but in recent years we've not been quite as excited about building mitigations to kill exploit techniques primarily because there's very ambiguous long-term value these sort of mitigations are typically far enough away from the bugs themselves that you can work around the mitigations and the the trade-offs that you end up making with these sorts of mitigations are just getting increasingly uglier and uglier there's lots of performance concerns compatibility concerns",
        "um and so it's it's kind of unclear how many more opportunities there are to really build meaningful impactful exploit mitigations",
        "uh and that's why we've been working a lot more recently on killing bugs and we've been working on killing bugs in a number of different ways sandboxing removing attack surface eliminating vulnerability classes which is one of the things I'm going to be talking about today or just investigating safer uh you",
        "know safer programming languages things like rust c-sharp Etc um",
        "foreign but even though we're investigating all this stuff we realize that we are still going to have lots of privileged CNC plus plus code for quite a while and so we need something to do for that code because we don't want to just uh leave it out there unprotected and when it comes to memory safety vulnerability specifically in CNC plus plus there's four big buckets that are responsible for most of the bugs we end up seeing there are spatial safety issues like buffer overflows there's not initialized memory there is type confusion and there's use after free bugs and uh this this graph here is really just to illustrate that um type confusion is a predominant bug category",
        "for us I kind of highlighted it in uh in red here but it's this big blue category here in the past couple past year or two we haven't seen quite as many of those bugs but um but in general we do see quite a few type confusion issues uh come through year after year",
        "now I'm not endorsing uh necessarily any of the Technologies on this slide but I just want to illustrate that for some of these different bug classes there are solutions out there you know maybe those Solutions aren't necessarily easy to deploy or even possible to deploy but there is a lot of research being done for how we can",
        "deterministically mitigate a lot of these bug classes but type confusion is one where there is not a whole lot of research into or or practical solutions from my perspective into how do you deterministically mitigate this bug class uh in a way that you can just broadly roll out the the mitigation across large amounts of code",
        "and the issue with type confusion is really that it comes in so many different flavors and unlike a lot of other types of memory safety issues where there's a clear contract that's being violated like in the case of use after freeze you're using an object after it has been deallocated so there's a contract you're breaking in the case of type confusion you're not really breaking any clear contract you're really just misinterpreting data Maybe you downcast something incorrectly and then you you know use fields of a validly allocated and inbounds object but you're just using fields that aren't actually what you think they are similar thing with unions you might use the wrong field of a union but it is live memory it is an inbounds memory access you're just interpreting it wrong so it's hard to generically solve type confusion because it really comes down to understanding the programmer intent if you want to mitigate it you need to understand is is the developer actually actually accessing data in the correct way or not and that's that's very difficult and and memory type confusion is particularly concerning because it gives really strong Primitives to attackers and it allows you to bypass some of the mitigations like memory tagging for example that I mentioned on the previous slide also could you know potentially allow you to work around Sherry or other Hardware solutions that people are working on and so it is a fairly important bug class to do research into",
        "so what I'm going to talk today about is castguard and casguard aims at solving a legal static downcasts and so I thought maybe we should just make sure everyone's on the same page about what is an illegal static downcast so in C plus plus you can build class hierarchies that have inheritance and in this example here you might create a dog object and you up cast it to be the point of that dog object is stored in an animal pointer and then you downcast it to be a cat but a cat is not a dog so that's an illegal static downcast you you casted this base pointer down to the wrong derived type",
        "and some of you that are familiar with C plus plus might be thinking well hey you know you don't even need to give this talk because there's already a solution for this problem just use Dynamic cast it's part of the C plus plus language and that will do uh checking for you when you do downcasts but the issue is that Dynamic cast is a very hard thing to just generically apply to a huge code base because in order for dynamic cast to work the code that creates the object needs to enable runtime type information or rtti and on an operating system like Windows we have no control over large amounts of the code that runs on the platform and so we can't enforce that they turned rtti on and if you try to Dynamic cast an object that was created without our TTI your program ends up crashing and so Dynamic cast is very difficult or really impossible to just deploy at skill across a huge code base rtt rtti",
        "itself is not used by many people because it causes lots of binary sized bloat like in one of our dlls for example uh turning rtti on is over an 80 binary size regression that's huge you're almost doubling the size of your binaries by turning this on and dynamic cast checks themselves also have a lot of overhead and when we're talking about doing downcasts in C plus plus this is an operation that is typically free there is no code generation that happens when you do a downcast it just changes how the compiler allows you to interpret that data and so Dynamic cast having a lot of overhead can be kind of problematic and just as an example there's a lot of assembly here obviously we can't actually read this assembly it's way too small but I just did a test to see what actually gets executed when you do a dynamic cast on a very simple class hierarchy single inheritance class hierarchy you have 12 stores 30 loads 12",
        "jumps and two calls that end up being made and that's that's in the happy path where the cast is going to succeed so this is a tremendous amount of code that ends up running and it might be possible for us to do some work on the dynamic cast implementation and optimize some of it away but you still end up with this dependency on rtti that you can't get out of",
        "so that brings us to cascard and I I just want to call out that this is actually inspired from a clang feature that F sanitized CFI derived cast feature um we we took that feature as inspiration and just really optimized it like crazy and and that's what I'm here to talk about so here's the concept if you want to protect against illegal static downcasting you need some way to identify what the type of the object is that is being downcasted you don't know what it is statically at compile time so you need to be able to check at runtime but we can't add identifiers into objects generically",
        "because that breaks that that changes the object layout and so it's an ABI breaking change it's it's similar to requiring rtti uh but for objects that already have virtual functions those objects already have an identifier which is the V table pointer that the object contains we can actually use that to uniquely identify objects and so now that we have an identifier that is just already baked into objects that actually gives us a way that we could do checks on downcasts to see if they're legal or not without breaking the Abi and so that allows us to just automatically convert all of the existing static downcasts that we have in our code into cascard protected downcasts",
        "foreign",
        "so I am not like a C plus plus language lawyer or anything I don't know how C plus plus people necessarily talk about some of this terminology but for the sake of this presentation I want to tell you how I talk about the the code that we're going to be looking at so I call the type that you are downcasting to the left hand side type and I call it the left hand side type because it's on the left hand side of the expression very creative right and I call the right hand side type the type that you statically declare the",
        "right hand type of right hand side of the expression to B so in this case we're downcasting something that is statically declared as an animal to be a cat so I would say the right hand side type is animal and then the underlying type is the the actual type of the object that you're casting and we don't know that statically at compile time we can only know that at runtime",
        "so castguard has a few requirements that it's it's useful to discuss before we talk about how the mitigation works just so you aren't left wondering code needs to be compiled with link time code generation because we need a full world view of all the code in the binary to actually understand all the different objects in play and all the different casts that are going on the objects obviously need to have a v table because that's the identifier that we're using we also assume that the object itself is valid so if you have another memory safety vulnerability like you have a buffer overflow and you're able to use that to corrupt an object cascard isn't going to provide you protection anymore because cascard isn't the first vulnerability in play cascard is really just designed to protect against vulnerabilities where the issue itself is that you're just doing a bad downcast so if you're able to corrupt memory in other ways before you get to a cast all bets are off",
        "all right so let's talk about let's talk about how castguard works and the best way to the the best way to explain how cascard works I think is just to look at examples of what we actually do so what does the compiler know if you look at a piece of code like this the compiler knows that it's a static downcast and even if you didn't actually use static cast you just did a c style cast where you just you know used parentheses and put the type that you want to cast to the compiler actually still knows that it's a static downcast um so we track that we know where the V table pointer in the object is and we know where the V tables themselves are going to get laid out in the binary so we know that cat's V table is at offset 500 into the binary or you know dogs V table is an offset a thousand to the binary we know where everything is",
        "and if you look at how an object is laid out in C plus what you end up seeing here is that um in in the case of the the base object here in this diagram a the way that an a object is laid out is you'll have the AV table pointer at the beginning of the object and then you have A's member variables that come after that V table pointer and very important to C plus plus having good performance is that when you inherit from a really all that happens is that the next object down the chain B for example just has a copy of a right at the beginning of it and then any new member variables that b introduces just get tacked onto the end and if you look at the V table itself for object B it will start with all of the virtual functions that a introduced and this is what allows you to do up casts and downcasts in C plus plus without actually requiring code like new",
        "code generation to be added to the binary you can take that same pointer and interpret it as an A or as a b because the layout is is structured so that um so that that sort of thing works if you have a b pointer the a member variables are you know at a fixed offset in that pointer",
        "so with castguard since we're using V tables as a way to identify the object you really need to think about things in terms of the V table view of the world this was like one of the biggest uh like cognitive shifts for me to wrap my head around I kept trying to think about checking for the validity of casts just in terms of the classes that were in play but I really needed to be thinking about what are the V tables in play and so if you have a class hierarchy like the one on the left here the V table hierarchy would be on the right and I have the the mangled names that the compiler uses but this hierarchy effectively looks identical to the the normal class hierarchy because this is a very simple single inheritance case but the compiler does track V tables just like classes so the compiler knows this is the the base V table this BV table inherits from a the CV table inherits from B the compiler tracks all these relationships",
        "and so conceptually if you want to do a a cast check it's actually not extremely complicated you end up building a table kind of in your head about hey if I want to downcast to something of type c what would the what V tables would a type c be allowed to have and the V tables that a type c would be allowed to have our C's V table and then anything that inherits from C and in this example and this is the example that I'm going to use going for for all the rest of the slides is I'm going to be downcasting to it to something of type c the the V tables that are allowed are c e and f so there's three V tables that an object of type c would be allowed to have",
        "foreign",
        "so you can build a check pretty easily for this if the compiler sees a static cast and it's a downcast to something of type c all you're really doing is you're going to read the V table out of that object first you need to check if the object is null you're allowed to always static downcast to null pointer so if the object is null you let the cast happen if the object isn't null you read the V table pointer out of it and then you check is this V table pointer the CV table the EV table or the Fe table and if it is then the cast is allowed to succeed but you probably look at this and you think okay this would be an absolute performance disaster right what if you had a class hierarchy with like a thousand different classes in it and you have to sit there just chugging along through every different V table that that might be allowed this would be way worse than Dynamic cast so clearly this isn't actually a scalable solution it's just to help us understand the concept",
        "so if we want to build a scalable solution we need to get a little bit trickier so the first thing that we're going to do is we're going to lay out all the V tables that might be used in one of these cast checks together and I put them inside of a region in the binary that I just call the cascard V table region very creative naming",
        "um one thing that I would like to call out is that the cascard V table region starts with a global variable and ends with a global variable so there's a global variable called cascard V table start and a global variable called cascard V table end and those will be important a couple slides later but just remember that for now so we don't give any particular ordering to these V tables we just kind of shove them all together in this region and then we're going to create some bitmaps so this is the same diagram that I had before it's just on it it just illustrates you know on the left hand side of the diagram is the type that you're casting to and then you get a check mark for any V table that's allowed for that type and then on on the the left hand side of the slide I have the order that these different V tables are laid out so a b c d e f g h that's the order that we decided to lay the V tables out in but once we know what uh V tables are allowed for any particular type we go and we start building bitmaps and you build one bitmap for every type that you might downcast to and the way that you create the bitmap is first you need to choose what I call the base V table and the base V table is just going to be the V table that is closest to the beginning of the binary that is allowed for that particular cast",
        "so in this example that that I've been using where we're downcasting to something of type c the the V table that is closest to the beginning of the binary is the CV table so that will be our base and then you compute the offset between That Base V table and all the other V tables that are allowed for the cast so one offset will be zero because the CV table is is allowed for the cast right but any other V tables so E and F you compute the offsets and then you end up constructing a bitmap and here's what the bitmap ends up looking like for for the CV table is every index in that bitmap in this case represents an eight byte offset from the base and you put a 1 in there if that particular offset is legal to cast and you put a zero if that particular offset is illegal to cast and so when you want to use this bitmap what you end up doing at runtime is you compute the difference the delta between That Base V table which we know statically at compile time the base V table will be the CV table you can be the Delta between that and the objects V table that you read at runtime and you figure out how many bytes apart are these things and then depending on the the alignment of the bitmap in this case the bitmap every every index in the bitmap represents eight bytes so we shift out some of the low bits of that Delta and now we have an offset or an ordinal and you can use that to go and look up in the bitmap to see hey is this bit a one or a zero",
        "and you end up doing this for all of the different types that you might downcast to so you don't need to create a bitmap if some particular type is never downcast to there's no reason because the bitmap will never be referenced it's just going to take up space in the binary um another thing worth noting is that in this in these examples I have each bit in the bitmap representing an eight byte offset but it doesn't need to be an 8 byte offset if your V tables are really big then we can go and make the um you know each each bit in the bitmap represents 64 bytes or 128 bytes or however many bytes we want to so it's totally flexible",
        "okay so there's a lot of code here now but but basically this is just the improved check where rather than having a big if statement that kind of Loops through every single possible V table to check for validity instead what we're doing is we just we compute the Delta between the base V table and the objects V table at runtime shift out some bits to compute an index we do a range check to make sure that index is actually in balance of the bitmap if the index is so big that it's not even imbalance of the bitmap then you know the cast is illegal and if it is in Balance then you do the bit test and if the bid is a one the cast is allowed if it's a zero the cast isn't allowed so this is a lot better this this cash check ends up scaling pretty well it doesn't matter how many V tables you have really it still is a pretty constant time operation that you're doing but it turns out we can actually do even better than this the bitmap is still not perfect because bitmap requires an extra memory load that you're doing and it's a Memory load that might be in memory that isn't super hot so it could take time okay so if we want to do better then instead of laying the V tables out using just a random ordering we're actually going to lay the V tables out using a depth first ordering so it's kind of like a depth first search I guess but we're not actually searching for anything but you lay out the AV table and then the BV table c e go back up F go back up to B DV table G and then H so we lay the V tables out in this order and you might have a bunch of different V table hierarchies in your binary and the order that different hierarchies are laid out relative to one another doesn't matter it just matters how the V tables in any particular hierarchy are laid out relative to the other view tables in that hierarchy",
        "okay so then once again you might go ahead and just kind of intuitively you create bitmaps but one of the things that you end up noticing when we create the bitmaps this time is that when you lay the V tables out using this depth first ordering you never have a situation where you have two V tables that are legal for a cast and a v table that's not legal for the cast in between them all the tables that are legal for any particular cast are laid out linearly",
        "next to one another and because they're laid out next to one another you don't actually need to look up in the bitmap to see if the bitmap is a one or a zero if the range check passed in that example then you would know that the bitmap itself contains a one right so you don't even need to look at the bitmap and you can actually take this even further and you can say you don't even need to compute the ordinal you don't need to do that shift operation on the the offset between the base fee table and the objects V table um you can just do a range check so so in the example that I've been using where we're downcasting to an object of type c you can see so we have the CV table here E and F and so we can just say if the Delta between the the base V table C and the object c table is 16 bytes or less then that would mean that you must have either an e a c an e or an f and so the cast is allowed to succeed",
        "and this is what this ends up looking like in in C sudo code you you read the V table pointer you compute the offset and then you just compare is this offset greater than 16 if it is then fail otherwise succeed very very very simple check here and we don't introduce any real extra memory loads the only memory load that we're doing in this check is just reading the V table pointer but given that you're using an object that has a v table that cache line is probably hot anyways so it doesn't really cost us much to read it now some of you might be thinking wait a second what if somebody had corrupted this object already and and they made it so that you know the V table that the offset that you compute is like nine bytes you know it passes your range check even though it's not even pointing at the start of any V table in that region it's like pointing into the middle of one of the V tables but you got to remember that our threat model is that no memory corruption has happened at this point we're assuming that the object is valid and if the object is valid then you would never compute an offset of nine bytes because that's just nonsense so we don't actually need to worry about this the range check is a completely legal optimization for us to do",
        "another thing that you might be wondering is well what happens if this object was created in a completely different binary and then you're casting it when you go and you do this this check to say hey what's the offset between the base fee table in my current binary and the V table that this object has that offset is going to be huge it could be millions of bytes because the object is in a completely different binary and so this is where those global variables that I talked out talked about before come into play what we actually end up doing is we say if you pass the range or if you fail the range check your offset is too big then we do a second check to to see is the V table pointer that the object uh contains is that within our binaries cast guard region and if it isn't within our binaries cast guard region then we assume oh so this V table must be from a different binary and we can't check that we we can't do a security check on that because it's from a different binary and so we just fail open in that case but in Windows most of the objects that our binaries are using are not really getting crossed across binary boundaries like this or even in the case of com objects they might get passed across binary boundaries but you're not really supposed to static cast com objects yourself you're supposed to use Query interface and the query interface code lives in the binary that created the object um so it's it's pretty uncommon for us to have casts happening on an object that was not actually created inside of your binary so for the for most cases that we see uh we can correctly uh do we like we can we can do secure cast checks we don't need to worry about the object coming from another binary so this fail open application compatibility check is not a big deal for us",
        "uh and you know I I included the the final assembly that this compiles down to just so you can see how minimal this really is it's seven instructions total to do a a cast check here there's one memory load a couple branches the code speculates very well the app compat check is not contained in this assembly because we don't expect it to be hit very often so we actually put that out of line we don't put it in the hot path of a function we'll just jump to it if it actually is needed",
        "okay what about multiple inheritance so multiple inheritance seems really scary at first because you have a second parent but the thing that you have to remember is the V table view of the world so when you have multiple inheritance you actually have two completely separate V table hierarchies you have a v table hierarchy that chains back to each of your base classes and if you look at how the objects themselves are laid out you'll see that the two base classes A and Z they're laid out effectively How We Do how you would expect they have their V table they have their member variables and anything that inherits from both of them once again it has a copy of both the A and Z object so object B for example it has an A and Z object which means it has two different V tables one chaining to the a hierarchy one chaining to the Z hierarchy",
        "and so when you encounter multiple inheritance really the only question that you need to ask yourself is which V table hierarchy should I use here if your right hand side type is an a object then it's only guaranteed to have one V table and so that's the V table that you need to do your cast checks with and if the right hand side type is a z object again it's only guaranteed to have one V table it might have more than one V table but it's only guaranteed to have one because it's a z",
        "uh and if it is anything else if it's a b or a c or a d or any of these objects that do have multiple view tables then you can use either V table it doesn't matter which one you use for the cast check what we do is we use the V table that is closest to the beginning of the binary just because it minimizes code size you don't need to do math on the pointer in order to read the V table out of the object",
        "so I mean the point here though is really that multiple inheritance it seems scary but it's actually effectively identical to single inheritance we still do range checks it still optimizes extremely well you just need to be diligent about which V table am I going to use or which V table hierarchy am I going to use for the cash check",
        "um there's one final thing which is virtual based inheritance but I don't have time to talk about it because it is very complicated C plus feature what I will say though is that virtual base inheritance is the one case where we actually need to use bitmap checks sometimes you can't always handle them with range checks so that's why I spent the first part of this talk talking about how the bitmap checks were I've included a bunch of information on this in the appendix of this slide so you can check it out uh once the slides go online",
        "okay so I had a few interesting things that I I think they're interesting uh that I that I discovered when we were working on castguard so the first thing is that cascar does not play Super nicely with every single optimization that there is out there uh one optimization that the Linker has is called identical comdat folding or ICF and really all that the Linker is doing here is it's saying hey you have two read-only pieces of data that are the same I don't need to include two read-only pieces of data that are the same in the binary I'm just going to include it one time and everyone can reference that single copy but with cascard that's kind of a problem because we're using the V tables as a way to uniquely identify objects and so we don't want all the V tables to be merged into like one single copy because then we can't uniquely identify objects anymore and so any V table that is laid out in the cascard region we turn ICF off for if the V table is not going to be used in a cast check then it can it can still be icf'd by the Linker we don't care about it but if it is going to be used in a cash check no ICF and that actually brings me to this really interesting programming pattern called crtp or the curiously recurring template pattern this is a pattern that is used a lot in some windows binaries and the gist of this programming pattern really is just that you might have a base class and it has a virtual function and then you have a class in the middle and I call it Class B in this example and the the interesting thing about class B is that it takes a template parameter and the template parameter is a Class Type and anything that inherits from class B such as C in this example passes its own type as that template parameter so you're inheriting from your parent but you're actually passing your own type as the template parameter your parent it's kind of weird and what class B ends up doing is it will do things like static cast to that type it was passed which ends up being a static downcast it will static downcast to the thing that derived from it",
        "important thing to realize with this programming pattern is that if you look at the class or the the class diagram in source code it looks like there's only one class B but if you look at it from the compiler's perspective each of those specialized versions of B is actually a unique class and it has a unique V table",
        "so why does cascard have issues with this well it really comes down to the identical combat folding stuff that I was talking about before so without castguard enabled you might have functions like there's this do stuff function here and I realize it's hard to leave hard to read but all the do stuff function does effectively is it does a static downcast and static downcasts normally have no code generation and so all of these different do stuff functions for each specialized version of Class B they compile to the exact same assembly and so the Linker looks at that and merges it all into one but when you put cast guard checks on these downcasts suddenly you have type specific downcast checks in all of the different functions and those functions can now no longer be merged together because one version is doing a cast check for downcasting to see one of them is doing a check for D Etc so you get more code and then the other the other reason this caused an issue is because these most derived classes C and D for example they do not change any of the virtual functions which means that their virtual function tables are identical to their parents virtual function table and so again the Linker would merge those but with cast guard on those V tables are used in cash checks so we do not allow identical combat folding to happen and so some of our winrt binaries when we compiled with castguard ended up getting 20 bigger which is unacceptable for us we're calling that out explicitly but we can actually optimize this away really well because what we realized was that these different specialized versions of B they're never actually created directly you only create the most derived types in source code and because those different B classes are never created directly there's no reason to include their V tables in the cast checks at all because you know that no one would ever have that V table the object's never created",
        "so if we're doing a downcast and we currently have something that's a b specialized by C and we're downcasting it to just be a c the most derived type well we know that if you currently have a pointer that's a b specialized by C there's only two different classes that it could be it could be that b specialized by C-Class or it could be the most derived class the C-Class but as I just mentioned we actually know that it it couldn't actually be a b specialized by C the compiler knows that class was never created at all so the only thing that that could actually be is a c and you're down casting to a c and so we could just statically prove that the cast is safe we know that the only underlying object you could have as a c in your casting to a c so you're good to go cascard cannot provide there's there's nothing for cascard to do there so there's no reason to put a check in place and because we don't have to put a cast card check in place we can now uh continue doing the identical comdat folding on all of those do stuff functions and the V tables themselves aren't referenced by cascard checks anymore so they can be optimized Away by the Linker as well in the case of these winrt binaries that we have in Windows that heavily use the crtp programming pattern we're actually able to statically prove away every single cash check in the binary so we went from a 20 binary size regression to zero percent there's no more cast checks at all it's just statically proven safe and something else that was interesting is that clang CFI and xfg which is a",
        "technology that Microsoft has been working on that's similar to clang CFI they also caused really big optimization issues with the crtp programming pattern on the same binary that had a 20 regression with cascard xfg had a 43",
        "binary size regression and so we went made some changes to xfg to make it uh not care about these template parameters to classes um so we kind of weaken the security of it so that we could eliminate this 43 binary size regression um claims I I don't think the the clang folks are aware of this programming pattern so if you use clang CFI on crtp you'll probably get a lot of binary size bloat",
        "uh so at the end of the day performance with cast guard is great um the spec benchmarks show no regression it's a super super minimal amount of instructions that we're adding to binaries it optimizes Well it speculates Well uh so we're really not concerned about the performance uh binary size impact is Tiny it's under one percent typically uh if your component doesn't do casting static down casting then you won't have any binary size regression um so very easy for us to roll out future possibilities that you could use for this sort of technology and I'm not committing to anything these are just ideas that we have we could possibly introduce a strict mode for casguard where we could say we're not doing app compat checks we only expect this object to be created in the binary and so it better have been created in the binary if it was created by a different binary we just crash we could also have a strict mode if we wanted that always does bitmap checks and and if you always do bitmap checks then you might be able to be more resilient even if someone corrupts your object Maybe",
        "you could also potentially use cascard as a way to accelerate Dynamic cast right now Dynamic cast is a huge amount of code but you could potentially just use cascard checks for these these downcasts and then if the cast guard check fails then you could just go and do a full Dynamic cash check and decide you know is should Dynamic cast really check this really fail this or not",
        "but again these are just ideas um nothing that we're committing to doing",
        "what I do want you all to take away from this though is that it is possible to do really really performant checks on downcasts like the the state of the art with Dynamic cast is it doesn't need to go that slow we can go way faster and have better type safety and C plus plus and this stuff matters because type confusion is a super important bug class and especially in the face of Hardware mitigations that a number of different companies are working on uh type confusion vulnerabilities are going to be a lot more important going forward",
        "uh for people that are interested hyper-v is currently flighting in the windsider windows Insider preview builds with castguard enabled it is currently enabled in uh what we call Telemetry",
        "mode so it won't actually fast fill the process it just uh logs Telemetry for us but cascard is such a compatible technology that we actually have had zero Telemetry mode failures with it and so we have switched it on to enforcement mode it just that hasn't reached the flighting yet and we are working on rolling this out to additional Windows components in the future and so you know you can keep your eyes open if you're interested in it hyperview was the first one but there will be more to come and uh finally I just want to acknowledge that I'm up here talking about this technology and I certainly did a lot of work on this technology but I am not the only one that worked on this technology we had a lot of people contribute to this project from Windows visual studio and msrc and of course we were inspired by uh the the clang at sanitized CFI derived cast so none of this stuff would be possible without the help from everyone who is involved in the project and everyone who inspired the project I am out of time so I do not have time for questions here but I do have time for questions in the side room that they'll be setting up so if you'd like to chat more uh let's let's just take it over there thanks for your time [Music]",
        "[Music]"
    ],
    "IRZKerlQn4c": [
        "[Music]",
        "hello everyone thanks for coming to our talk this morning this is calculating risk in the era of obscurity reading between the lines of security advisories like I said my name is Brian goris I'm the senior director of vulnerability research at Trend Micro I also run the zero day initiative which represents the world's largest vendor agnostic bug Bounty program and we also organize and adjudicate the pone to own hacking contest with me today is Dustin Childs our senior community Communications manager with zdi and he's also our chief patch Wrangler we're here today to talk about the security of patches themselves and how current vendor practices inevitably are creating risk for Enterprises rather than lowering risks through software updates I'm going to hand it over to Dustin and he'll begin hello everyone my name is Dustin and I care far too much about security patches it's actually kind of a sickness with me you've probably heard of Patch Tuesday since January of 2008 I have worked every single Patch Tuesday except for two one was for federal jury duty the other was my sister's wedding weirdly enough neither one would move the date for me um so why do I care so much it's because study after study after study has shown that applying patches is one of the best things you can do to help protect your Enterprise and reduce the risk of incidence and breaches and in a former life I worked at Microsoft and in the msrc and helped produce the patches which means I rebooted your computer at some point my bad I just want to apologize right now to your face uh and today I write a monthly patch blog talking about the latest updates from Adobe and Microsoft and here at the zdi we have a unique view in how different vendors across various sectors of it develop and produce patches since 2005 we have disclosed more than 10 000 vulnerabilities to vendors across the industry so we speak from vast experience when it comes to bug disclosure and over the last few years we've noticed a disturbing Trend which is a decrease in patch quality and a reduction of communications surrounding security updates",
        "now if you're in this room you probably already know why patching is important and I'm not going to insult you by saying just patch it we know that's not always feasible I also know that estimating risk is one of the primary roles of csos csos and I.T leadership the real problem arises when vendors release faulty patches and as we'll demonstrate in this talk inaccurate or incomplete information about those patches can cause Enterprises to miscalculate risk faulty patches can also be a booned to exploit writers as end days are much easier to use than zero days but bugs are hard to find unless it's the second Tuesday of the month then Microsoft says here's 120 and Adobe says here's 50 you know that's good it's to the point where Enterprises have begun on relying on third parties or developing their own patching priorities rather than relying on vendor recommendations or other industry standards look folks I know it we are all the three unders we're understaffed we're underfunded and Under Pressure right so a misallocation of resources",
        "could result in increased risk and an increased chance of compromise so let's begin by talking about how Enterprise is calculate risk and some issues with security patches have that can lead to miscalculations now this is not going to be a talk of whether CVSs is or is not a great tool that's a different talk however too often Enterprises look no further than the CVSs base score to determine patching priority this can lead to resources being spent on bugs that are unlikely to ever be exploited to begin with CVSs is calculated by humans who are known to have biases and they take those biases with them wherever they go so this leads to differences of how vendors perceive risk versus the actual attack surface of a product when it's really deployed and that could adjust the CVSs score up or down uh for example an Amazon Linux bug was rated at a 9.8 so it could expose sensitive data in an HTTP header uh to unintended host however based on real world factors tenable rated it at 5.9 so who's correct which one do you act on I don't actually know that one another problem is that CVSs doesn't really look at exploitability or whether a vulnerability is likely to be used in the wild and research conducted by the century Institute the Rand Institute of Virginia Tech has shown that only five and a half percent of disclosed vulnerabilities are ever actually detected in the wild the QR code leads to that study the CVSs doesn't tell you if the uh if the bug exists in 15 systems or in 15 million systems and it doesn't say whether or not it's in a public publicly accessible server and most importantly to this crowd it doesn't say whether or not the bug is present in a system that's critical to your Enterprise",
        "and finally every cvss-10 is not a cvss-10 a remote unauthenticated code execution bug and an email server like XM or exchange is going to generate a lot of interest especially from exploit Riders however a remote unauthenticated code execution bug and an email server like squirrel mail is probably not going to generate as much attention please note that this is not an endorsement of squirrel mail the security through obscurity is still bad",
        "at the zdi we see another problem and that's vendors combining multiple bug reports into a single cve however the common perception is that cve represents a single unique vulnerability now that may not be the way cve rules are written but that perception exists and really what's the problem if you've got 10 ubrights or uas or you know deserialization bugs why shouldn't you combine them into a single bug report to a single cve well again it comes down to perception which leads to possibly skewing your risk calculation so if you look at a product and you see 10 cves that are patched in a certain amount of time you may come up with one conclusion of the risk calculation from this new product however if you knew those 10 cves were based on 100 plus bug reports you might come to a different conclusion and really it boils down to Enterprises miscalculating severity of a cve because they don't have the tools to understand the density of the code problem so here's an example earlier this year we bought four out of many sap bugs uh one uberead and three Uber rights and reported it to them when sap patched them",
        "they assigned this one single CBE so if you look at your their website if you could find it it's a little hard to navigate their website you'll find this single cve for these reports but if you look at our website you'll see these four bug reports for that single cve and your risk calculation may be change based on this knowledge at the very least it's another data point for you to consider and in the interest of time I'm just going to mention ICS certs as the ICS and scada Community is the worst offender I mean best examples of this practice",
        "it's incredibly common for us to report dozens of bugs that end up being combined in a recent disclosure we disclosed more than 50 bugs to advantec mostly SQL injections they patched them in batches which makes sense but those 50 plus reports ended up as three unique cves",
        "and then there's obscuring or flat out removing information from security advisories in late 2020 Microsoft made the decision to remove the executive summary from a security update guide informing users that CVSs would be sufficient now in ignoring all the problems we've already talked about in CVS already the change removes context from Bugs that's needed to determine risk for example does an information disclosure bug dump random memory or pii CVSs doesn't note that for a security feature bypass what is being bypassed and what's the likelihood CVSs doesn't note that there's also an interesting situation where the CVSs score doesn't often and doesn't align completely with the Microsoft rating system of critical important severity so our example last Tuesday they had an important severity bug with the CVSs of 9.8 which miter says is critical now if you're only deploying critical bugs first which one do you pay attention to they're both from Microsoft so they both should be authoritative now some information has begun to return to these write-ups but it's inconsistent and a varying quality despite mere Universal criticism of the change and here's an example this is an executive summary from a DNS bug back in 2020 uh and I cut it off intentionally because we really don't need to examine what the bug is but here's a DNS bug from 2022.",
        "that's it um but really this change comes after years of Microsoft either removing or obscuring information about their updates they used to produce clear guidance telling admins how many bugs were patched each month now you have to count yourself that's actually one of the hardest things I do for my blog is just count how many cves you'd be surprised how many times I get it wrong I even take off my socks to count on my toes too uh they used to tell you very clearly how many bugs were under active attack or publicly known that's one of the first things Enterprises look for information is still available yes but it's buried deep in the bulletins now and with 121 cves being patched this month it's kind of hard to dig through all of them to look for which ones are under active attack instead people now rely on other sorts of information my blog other blogs and press articles rather than what should be authoritative information from the vendor to help determine risk and look Microsoft is hardly alone in this I'm not here just to bash them many vendors don't even provide cves when they release an update they just say fix this several security issues how how many what's the severity what's the exploitability without they'd provide no context at all we even had a vendor recently state to us specifically we do not publish public advisories on security issues that's a bold move cotton we'll see how that works out for him um some vendors put advisories behind pay balls or support contracts further obscuring their risk from potential customers and rarely does any vendor actually provide any guidance on exploitability and in one sense this is understandable because defining exploitability is really hard however understanding exploitability is a key component to estimating risk from a bug what are the chances the severe sounding bug actually gets exploited in the wild high low do I need to engage emergency resources to deploy this patch or will my normal procedures suffice see the push towards patch automation has removed the ability of many Enterprises to judge the risk to their systems consequently Enterprises now must invest in third-party tools not just for patch management but for patch prioritization the push for API driven vulnerability reporting has resulted in all bugs looking nearly identical on paper but all bugs are not created equal uh to misquote syndrome if all bugs are special then no bugs are special so we as an industry must take a close look at the results of the API driven vulnerability reporting model and ask ourselves if it's serving its purpose or has the Quest for automation left us in a worse State than we were before but beyond just the way the patches are communicated let's talk about some problems with the patches themselves",
        "the worst case scenario is what we call a placebo patch that's when a patch is released from a vendor that either makes no code changes at all or makes no effective code changes and the bug is still reachable either way that bug is still there and exploitable to threat actors except now they've been informed of it and if you think we're joking about patches that make no changes at all sadly we're not and it's not just one vendor there are many reasons why it could happen but it happens and this is hardly new we've been actually talking about this at this EDI for years as in bugs so nice we patched them twice um that's a different talk as well you can hit that QR code you see the YouTube video of it but here's a recent example uh in advantec web access which is a popular scada product according to their website it provides users with a cross-platform cross browser data access experience and a user interface based on HTML5 technology",
        "meet so we purchased a directory traversal bug that could lead to code execution the root cause was the implementation of the 2711 ioctal in the web services process after it was patched the researcher submitted another bug bypassing that and it was a directory",
        "traversal bug that could lead to code execution and the problem was due to the implementation of the 2711 ioctal and the web services process after that patch was released a zdi analyst found no code changes in the patch at all so again we reported a directory traversal bug that could lead to code execution due to the implementation of the 2711i article in the web services process at least we didn't have to buy the third bug it was one of our analysts who found it and while this is embarrassing for the vendor Enterprises are suffering real consequences from this so for one we know that patches are reversed and become exploits so a placebo patch notifies the threat actors of the bug while Enterprises are left in a state more vulnerable than they were before because before the patch didn't exist because they don't have defenses to adequately defend themselves Enterprises must also spend resources to deploy patches and whatever calculus you use that says the cost of adult flowing a patch if it takes three times to do it that's three times the cost I'm not a genius in math but three is greater than one I I learned that somewhere so their bad patches are costing you real money even if you're if even if it never gets exploited",
        "then there's often patches that will break just a point fix or proof of concept code this is an example from Adobe Acrobat and we don't need to delve too much into the super technical here just know that the value we set for an array is extremely large and ends up resulting in an integer overflow leading to another sized Heap allocation which results in a buffer overflow when data is written there in other words open PDF get owned we expected Adobe to make the fix by setting any value over a certain point to be bad but that's not what we saw this is the proof of concept that the researchers submitted to us it was pretty good so good in fact that adobe just pretty much took it and dropped it into its patch looking for that specific value now the researcher also noticed this and within an hour of the patch being made public yes within 60 minutes they said hey we bypassed the patch here's our new POC so we bought this bug can you spot the difference",
        "Can you spot it now yep they just changed the value of the specified array and re-triggered the Overflow resulting in code execution again the final patch introduced math to calculate whether the specified array length was actually a valid value that one worked but reruns aren't just for TV shows they happen in security patches as well case in point Microsoft SharePoint these always start with a vendor shipping a bug and I want to thank them for that I think gainfully employed my adult life due to vendor shipping bugs I appreciate that in this case the researcher discovered a bug in a remote code execution bug in all supported versions of SharePoint and sold that bug to us we reported it to Microsoft the next day we have a 120-day disclosure timeline and they took nearly all of that to produce their first version of this fix on February 12th now I blog a lot and I blog a lot about really cool bugs and this was a really cool bug so I'd worked with the anonymous researcher to produce a Blog on this on Patch Tuesday and my mouse was literally moving over to the button to hit publish when I received a panicked email from the researcher saying don't publish the blog the the patch can be easily circumvented so we purchased the bug again uh and reported the patch circumvention to Microsoft they released their version two of the patch 28 Days Later we took 24 hours to actually look at the patch this time so I didn't publish something too bad pushed our blog out now again like I said this is a really cool bug so we knew in all likelihood active attacks were coming and we detected them 42 days after that now the problem here is if you only had revision 1.0 of this update you are not fully protected from the from that active attack uh by the way this was the active attack that was used against the United Nations as well and interestingly enough uh after the active attacks were discovered revision 3.0 went out",
        "now lest you think we're just here to talk about about other people let's talk about a bug and tread micro Apex one and yes that is a Trend Micro logo on my sleeve karate impsim as it were physician heal thyself uh so we bought a privilege escalation bug in our Apex one endpoint security product due to incorrect permissions and it was resolved by this cve after that patch was released the researcher reported a privilege escalation bug that was due to incorrect permissions he bypassed the patch pretty easily and it was addressed by this cve now if you've been paying attention and noticed the empty space on the slide you can probably predict what's coming next that's right he sold us a third uh privilege escalation bug that bypassed the cve due to a permissions issue and we patched it with the cve now for us this wasn't the worst case scenario because we took this as a case study to our developers and said look here's how we can work together to develop more comprehensive patches so hopefully we see less of this in the future any other examples Dustin why yes I have receipts uh there are quite a few other examples and unfortunately it's only a 40-minute talk um but this is just a small sampling of other cves that were incomplete or otherwise faulty and each one of these represents so many more in fact right now in our program 10 to 20 percent of the bugs we are purchasing are the direct result from a faultier and complete patch and if that Microsoft cve looks familiar to you that is the one that was patched in July that according to Microsoft was being used by Austrian threat actors to spread Subzero malware within a day or two of the patch being released one of our researchers Simon zuckerbron was able to bypass that patch and continue exploitation in fact you",
        "bypassed about 10 of the last patch yeah correct yeah Simon's an awesome guy frightening awesome",
        "so we have reported that to Microsoft in our awaiting things so with that I'm going to hand off to Brian who's going to talk about the industry of patching yes now luckily for us patches patching creates jobs right we've all had jobs in this industry now for a long time because patches are happening vulnerabilities are being discovered but unknown to most there's actually a cottage industry around actually analyzing and reversing and weaponizing patches and part of the reason this industry actually exists and is able to function is in is due to the intermittent quality of the actual security updates themselves so let's take a peek at this industry and show you how how it can actually impact the risk to the Enterprise itself now like we said there are several different areas where where people are looking at patches and the first one we want to talk about is obviously the third party patch management groups out there companies like manage engine Avanti Quest case and many others provide tools that actually help Enterprises manage their patch deployments they're looking at the patch releases trying to make sure that they're you're able to deploy those patches out into the Enterprise but they're not going very deep into the actual patch itself then there's groups out there that produce end-day analysis of patches",
        "meaning they reverse engineer the updates for the for the development of threat intelligence as a service we do that at Trend Micro we reverse engineer a lot of the patches that come out in fact we have an entire team that does just that companies like Exodus and flexera formerly secured to some extent do that type of work as well of course there's the pen test and Red Team communities that are looking at the patches so that they can actually develop proof of Concepts and exploits that they can integrate into their tooling so Enterprises can actually test the actual patches themselves once they're deployed so when you're talking about building Metasploit modules updating canvas and likewise these companies are trying to integrate the latest bugs into their tools and rightfully so because these folks are doing it as well the criminal element they're working to add the bugs into their BEC tool chains their ransomware their exploit kits and though it is uncommon that ransomware uses zero day vulnerabilities for the most part they're using end-day vulnerabilities that have public patches available and we actually saw this in the offensive Community back when the hacking team breaches occurred several years ago there was several email chains in there talking about which patches were coming out which vendors were not good at actually patching so that they could monitor what's going to happen and redevelop tooling to actually release their exploit kit now when we discuss timelines it's most often people most often talk about the time to fix they are looking for when the bug was reported to the vendor and how long it took them to actually fix that and resolve the issue and of course this absolutely matters but this is not the only timeline to consider the first other timeline to consider is the time to patch how long does it take you to actually roll out the patches in your Enterprise and are you sure that you're actually able to roll them out to your entire Enterprise can you do it faster than the reverse Engineers out there who are working to analyze that patch and develop an exploit and are you sure that you can actually beat them in this process from time to uh from the time from patch to when it I can actually turn into an exploit it can be as little as 48 hours and we'll actually talk about a case study here in a second about that however when analyzing patches little effort is given to the actual estimate of time to exploit as it's always going to be an estimate but since we know that we're all resource constrained how important would it be for us to understand if that bug was actually going to be weaponized now most vendors do not provide information regarding exploitability Microsoft",
        "actually attempted to solve this problem with their exploit index but this is no longer really useful thanks to cumulative updates originally XI was intended to help system administrators prioritize which patches to test and deploy first the thought was that you would prioritize an important class bug that was likely to be exploited over a critical class bug that was less likely to be exploited but since that time security patches are actually become cumulative and today you're it's rare that you're going to apply one patch to one component you're going to apply a monthly roll-up of fixes for many cves therefore when you you have to treat all bugs in an update as though they're the highest XI rating bug for any single bug in that update therefore it doesn't make sense to call out xi1 when the whole update should be treated as xi1 if there's only one in there the reality is risk assessments are going to change Post Release a bug that was not priority can become high priority quickly when integrated into an exploit kit or ransomware or when an exploit is released online Enterprises should be looking at patches Beyond Patch Tuesday as I've seen in the previous slide to ensure that resources are still properly aligned for the prevalent risk when changes occur to the threat landscape Enterprises should be shifting their resources to meet the meet the need and combat the latest risks not just the latest publicized and name vulnerability as again patch management and risk calculation should be an ooda Loop where you're actually observing what's going on in the threat Landscaping landscape orienting your resources and deciding and acting on when to deploy that now like we talked about the time to exploit is actually decreasing a lot and here's a case study of that from our recent pone to own contest if you don't know what pone to own is it's a hacking competition that we run three times a year and in the spring event we typically hold it in Vancouver it focuses on Enterprise tools and applications including web browsers in pone to own 2021 there was a special bonus for an attack that could take advantage of both both Chrome and Edge at the edge browsers in a single exploit we do that because both of those browsers are actually based off of the chromium source code and we just thought it would be cool to see an exploit that would work on both yeah and so that's why we did it and actually one team was able to achieve that but an interesting situation occurred after this bug was reported to the vendor in this case Google so of course with everything in this world it all starts with bugs and vendors shipping a bug so thank you very much thanks for getting us employed during pone to own a team of Bruno Keith and Nicholas bombstart from dataflow security used a typer mismatch bug to actually exploit the Chrome renderer process and Microsoft Edge at the same time using the same exploit very cool stuff worked right out of the box their successful demonstration earned them a hundred thousand dollars at the contest and since it's pone to own we give the bug and the information to Google The Google team immediately so that they can actually start working on the fix now the fix was checked into the open source V8 JavaScript engine source code repository but it had not been integrated into the official Downstream chromium-based browsers at that point that was planned for a couple days later and before that integration could occur a security researcher was able to reverse engineer the code fix that the chromium team had pushed in that open source component and he used that information to actually build and publish and exploit and release it on GitHub effectively odang that bug before the integration could actually happen very quickly it was awesome actually to be honest",
        "the Google team then released their patch uh on April 13th and Microsoft released theirs they consumed that fix a couple days later but other chromium-based web applications are still vulnerable if they haven't consumed that Upstream fix and I will say now on this stage at the patch Gap problem for integrated chromium applications is significant from from",
        "even from Fox at PDF reader to every single Smart Television out there to web enabled speakers to home automation devices to even to automate automobiles the list goes on and on and on but that's a different Talk and of course because we know about this we've actually had to remove smart televisions from phone to own because we were getting a ton of submissions just using n Chrome and end a chromium bug exploit chains",
        "now different verticals are going to take different approaches on how they actually handle patches themselves and these differences do matter to the end user there are those who are out there who follow the traditional patch patch Tuesday style releases even if they don't occur on Patch Tuesday companies like Microsoft Adobe Oracle Cisco and to some extent Apple this predictive disclosure allows people to plan around the patch releases themselves",
        "and then there are those who take a more agile approach in these cases they're focusing on rapid releases as needed they have minimal documentation and release notes very little integration testing things like Cloud technology some Google Technologies fall into this category this allows companies to obviously react faster to the dynamic risk of their environment but it's unpredictable for users when that update is actually going to come you've seen it sometimes in stages on stages like here at black at where an update will pop up during the middle of the talk then there are those who roll out their patches over the air where vendors are shipping the patches to like to mobile phones or cars that these are the types of devices that come to mind often they roll out on a per region basis so you might not receive your actual update depending on your geographical location and you can end up being vulnerable to publicly disclosed bugs even though you think you're updated this is often hard to tell since they do even less documentation and essentially remove the user user control from the equation in fact this happens to us every time we do our fall pone to own event because we're purchasing iot this the event focuses on iot and mobile devices and we buy devices from all over the world and depending on which region we buy them they have different updates and it actually is very challenging to get those devices up to the latest patch levels then there's the ICS Community for these vendors they often focus on customer deployment first and do public disclosure later and if they even if they disclose at all much of the documentation is actually behind paywalls after all this is an industry that considers a license agreement a defensive depth measure and that's not a joke while this method may work for vendors it removes the value of the cve from the equation because there's no actual public coordination going on",
        "and then we get to one of the most difficult disclosure situations that we have to deal with the dreaded multi-vendor vulnerability disclosure last fall apone Austin a bug was demonstrated in a western digital Mass device when we received the report from them it was determined that the cause of the bug itself was in an open source product called netatoc netatoc Library which is a core component that is used in lots of Nas devices and lots of other devices to provide Apple file sharing now when we disclose this bug to Western Digital they engaged certcc rightfully so it's helped with the notification and response process once the library maintainer actually released the fix which took some time because we that library is actually no longer maintained they published the update and it but then it has to be consumed with all the different vendors who actually used FX and in this in this case there was actually 200 different vendors on that disclosure thread trying to make sure that they were going to integrate their net attack library and their product",
        "so should all the vendors actually have to wait for disclosure what when everybody is fixed because that would effectively make a situation where one vendor could uh hold up the other vendors from releasing their fixes in their products instead vendors are often rushed are left rushing to integrate the fix some are late and you end up in the situation where the fix is available but maybe your vendor hasn't integrated the fix into their product creating a significant patch Gap misunderstanding of the supply chain risk to some system integrators leads to slow patch integration as new affected systems are identified and if the maintainer isn't aware of their software bill of materials the fix may not come at all in this specific instance Western Digital simply removed the library from their products however other vendors like Synology and qnap ended up exposed to multiple network-based code execution vulnerabilities with known public exploits now when patches are released it shines a spotlight on a component it's like ringing the dinner bell saying hey everyone there's a bug over here in this attack surface that you may have never thought of or there's a new exploit technique that can be used in other products or there's an existing existence of buggy code that is shared across an entire product line but that's a different talk we tend to think risks go down when the patch is actually released but in many cases the risk actually increases when the patch is released it's the it lets the attacker know that there's problems in this area that can be exploited as soon as we've seen before there are studies out there from the NSA and others that attacks do start within 48 Hours of the patch release and that's assumed that the patch actually is complete to begin with Enterprises can end up with a false sense of security if they believe that they've mitigated the risk by applying the patch but instead the patch is incomplete and you're still at risk or it's shared between multiple vendors and the patch is only available for some and of course log for J was an excellent example of this this bug existence is 2013 and it wasn't disclosed until December 2021 and here we are eight months later still finding vulnerable log for J instances out there still finding bugs with unpatched log for J components and yes that is the real log for Shell like logo which is fantastic it looks great with that I'm going to hand it over to Dustin who will talk about determining risk and demanding improvements",
        "so uh once we get to this we understand this first the first question we usually get asked is why is this happening there are many reasons but really it boils down to a few specific points that we've identified and for many it's a focused away from sustained engineering towards product development vendors are rushing to ship uh and close bug reports or fail to properly test them prior to release in a lot of cases they just aren't resourced appropriately to create comprehensive fixes for their reported vulnerabilities there is simple human error people do make mistakes and those mistakes do end up in patches however there's also a skill Gap in testing in QA partially because the industry has really disinvested in maintaining testers one of the first things Sasha nadala did is Microsoft CEO was to eliminate many QA positions stating it often makes sense to have the developers test and fix bugs instead of a separate team of testress and many others have followed his lead in either reduced QA or pass the burden on to developers as a result the security expertise that existed in organizations has moved on to other areas helping widen that skills Gap rather than shrink it and finally vendors see no benefit from being transparent when it comes to their Communications and is about the security of their product and whether it be no communication or misleading or incomplete communication they simply don't see the return on investment they want us to just trust them just trust us it's hard to do when they're not being very trustworthy so what as you uh as Enterprises should take away from this is first understand that due to flawed vendor practices Enterprises no longer have a clear view of the true risk to their networks whether it's issues and CVSs ratings or manipulating cve to disguise risk or a lack of clear vendor guidance Enterprises really no longer have an easy method to quantify the risk to their systems patches that are faulty or otherwise incomplete are costing you real money and it's not just with the new patches that are getting rolled out Enterprises need to spend they're already limited resources redeploying patches they have already installed and Enterprises ended up spending money instead on third party and other tools just to handle the occasional nightmare that is patch management and most notably there are many times when a patch increases rather than decreases risk the time to exploit counter is often far less than time to deploy even if you're a very mature and well-disciplined Enterprise and an incomplete patch just tells the attackers where the bug is without giving the defender the tools they need to prevent their exploitation so what can we do what can you do to help uh from this is a first of all understand what you have to defend and I I truly mean this is be ruthless in your asset Discovery when it comes to passive fingerprinting and network detection you have to know what you have to protect and you have to know how to segregate it and if you're developing a product make sure you understand your software bill of materials and ensure updates are integrated second of all you might not feel like you have a loud voice in your discussion but your wallet speaks loudly on your behalf now I do not expect people with E5 licenses to just ditch Microsoft for Linux because of a bad patch uh however it does give you an Avenue for feedback to your vendors and especially when deciding on new vendors include on in your rfps what is your patching policy what are your security advisories look like that sort of thing you'd be surprised the answers you do and do not get and finally understand that your risk management from security patches has to go beyond the second Tuesday of each month and this means watching for revisions and monitoring for threat landscape for proof of Concepts and exploit releases as these can greatly change the risk now we at zdi wanted to do some things to incentivize uh vendors to do a little bit better and we considered many options some of them more serious than others we considered just zero daying all the the bugs that came in as failed patches we thought about somehow a Wall of Shame or some magic quadrant we could push vendors into uh we thought about blockchains and nft not really but somebody probably did in marketing but what it came down to uh in the end the most reasonable and practical way we could incentivize vendors is to reduce our disclosure timeline for bugs that result from incomplete or faulty patches and this is one of the few areas where we as a vendor as a disclosure wholesaler can control we've seen the reduction in timelines work in the past so we want to use this tactic here as well Brian will tell you the exact details of that thank you Dustin",
        "so what we decided to do is reduce our disclosure timelines for bugs that we believe to be results from incomplete or faulty patches and as a reminder our current disclosure timeline in zdi is 120 days and what we wanted to do was actually take a tiered approach on this depending on the severity of the bug itself that and how the failed patch actually worked so the first tier will be a 30-day timeline this will be for critical class bugs that are easily circumvented when the patch is released and in these cases you can basically consider the patch itself under active attack since the vendor hasn't disclosed exactly where the bug-in bug is and the edin price and they have not given Enterprises the necessary tools to prevent the exploitation itself",
        "the second tier would be 60 days this will be for high and critical severity bugs where patches provide at least some level of protection in these cases we actually don't detect or expect active exploitation but again the risk calculations has changed when this bug is disclosed and the final tier will be 90 days",
        "now these numbers aren't set in stone I know that some people will say that are literalized seven days or maybe 90 days for everything else but this is our starting point for failed patches we are actively tracking failed patches in the zero day Initiative Program and these timelines can be updated in a Time based off of what we're seeing happen across the industry and we've seen other groups talking about this as well most notably project zero reports similar findings of incomplete and variant bugs being used in the wild and we encourage all organizations who are reporting vulnerabilities to adopt similar timelines for failed patches we're on track to disclose over 1700 vulnerabilities this year so we're going to have plenty of opportunity to gather metrics about this problem and hopefully see Improvement as time goes on but of course that is a different talk now a case study for this would be cve 2022-22047 which was that local privilege escalation if we were to receive that bug today we would actually reduce the disclosure timeline because of its actual failed patch now some final thoughts just to wrap things up incomplete and faulty patches are absolutely being used in the wildlife threat actors this is not an opinion this is based off of data and things that we're seeing from our competitors whether you realize it or not bad patches are actively being used in the wild or exploiting in the wild it does impact your Enterprise We Believe policy adjustments should be based off of real data and this is how we Define our disclosure timelines and we will edit our timelines based off of this in the future and you also need to base your risk calculations on that and finally yes I know I'm repeating myself but I think it's important your risk assessment must go beyond the second Patch Tuesday and look at the current threat landscape looking for bugs that are or revisions to Patches waiting for proof of Concepts to release and understand that you have to change your approach once those things happen even after the Patch is released and with that you can find us online Dustin please find Us online we go to Twitter at the zdi bugs it's a new Twitter handle for us that's tweeting out just advisories that are high CVSs pound to own or zero days we're on the gram now my children are thrilled with that welcome to 2017. if you find us there also I'll start a patch webcast in September you can find it on our YouTube that'll be patch Wednesday where I just review stuff real quickly uh and uh hey we're looking for bugs if you've got bugs to sell we got we've got money to buy them so uh just here's our pgp Cree don't send them clear text email we can't buy them then um and as you know now those those patches are faulty sometimes so definitely reverse engineer those patches and look at what's happening and maybe there's some cash to find there but hey look we're going to go to the wrap-up room we're right at time so I want to thank you for your time and attention if you have any questions please join us in South Pacific South",
        "Sea south of something just follow us there thank you very much",
        "foreign",
        "[Music]"
    ],
    "qj0bre85DXY": [
        "[Music]",
        "hey everyone",
        "um so before we get started just out of curiosity if if you could raise your hand if you either run a bug Bounty or have participated in a bug bounty in some form looks like maybe half half the audience has their hand up I think the case that we're gonna make for the half of Their audience that did not raise their hand that you may have actually unwittingly participated in a bug bounty in some form through another security tester's research and we're going to go through a couple examples that kind of outlines that so first like why are we qualified to talk about this um who are we so my name is Dylan I'm a security researcher I'm a Bug Hunter I was for a little while um top 100 on bug crowd but that was a couple years ago these days I co-founded a company called truffle security which is built on top of an open source tool called truffle hog and I do security research on the side so talking at black hat this is my second time and probably third time talking at either Defcon or black hat hi everyone I'm Whitney um I'm an attorney but I'm not your attorney um I work really closely with security teams at various in-house companies that I've worked at throughout the years I helped build the coordinated vulnerability disclosure program at Electronic Arts and I support my current security team at Asana in our various bug Bounty programs",
        "so in general if you look at most bug Bounty programs they say don't touch other users data um like they say try not to touch other users data they say only test with your own account don't involve other users in",
        "your in your testing so this is an example of of Uber's policy for their bug Banning where they they outlined that in one of the bullet points um and you can see like this is pretty common language it's actually in a lot of different programs they say make sure you're only testing your data don't access other people's data so um this talk being about data privacy and Bug bounties um we're in a pretty good spot we've told our hackers to not touch data that doesn't belong to them and uh I think we should be good yeah we're good",
        "damn so close we almost had it um well I mean this this was for me when I was testing I accidentally caused some problems um hey Whitney um listen I was I was testing a program doing their bug Bounty and I accidentally accessed some data that I I shouldn't have accessed um I just I wanted to check with maybe my neighborly friendly lawyer is there anything I should do here could I get in trouble for this accident oh that's a good question why don't you tell me what happened yeah so um I was testing this type of vulnerability called Blind cross-site scripting basically I just replaced my username with some JavaScript and I threw it into a system and forgot about it and then that JavaScript what it does is if anyone executes that JavaScript unsafely by rendering my user data unsafely it'll take a screenshot of whatever that page is and it'll send me a copy of that page so what happened was somebody had accessed an admin page that was insecurely rendering user data and it had a list of every user of the entire system and all of that got screenshotted and got sent to me and I accidentally got a copy of everyone's user data oh did you disclose everything to the program yeah yeah yeah so I definitely uh attached all the screenshots I walked them through all the steps that I did I was 100 transparent every step of the way that's great since you told them you had some of the data uh did you delete the copy of the data that you had uh",
        "no uh uh yeah is that something I should do uh yeah didn't the program ask you to delete all of the data that you had in your possession uh no no they never asked me that and actually now that I'm thinking about it it might be kind of complicated to have to delete all this data it's it's like a cup like it's it's not super straightforward oh interesting",
        "complicated how yeah um so about that um there's actually like a couple of systems that I use when I do my testing and um it probably results in like a copy of this user data ending up in like a couple of different places some third-party systems some systems in my control uh it's not just like one copy of the data oh no it sounds like the data's everywhere everywhere uh what systems how uh can",
        "you list them all uh yeah yeah I think I think we can walk through this okay so um basically the employee browse to that admin page and that's where the data started and then I use a third-party testing system called xss Hunter to manage that like screenshotting thing I talked about um so that from the laptop the screenshot got sent to xss Hunter which is not managed by me it's managed by just like a a person yeah and then he",
        "runs that in AWS so we have like AWS that has a copy the a random person that has a copy and then that emailed me a copy of the screenshot too so I guess my email provider has a copy and then I downloaded a copy onto my hard drive and then I run time machine so there's another copy on my backup hard drive and then I attached all of that to the bug tracking system so there's another copy in the bug tracking system I think that's all of it wow okay um let's try to delete data everywhere you possibly can if your backups don't roll off try to delete your backups do some of the third parties where the data's been captured allow you to delete the data oh uh that's a good question um let me check um so it looks like xss Hunter has a button that says delete but there's no like terms of service or anything like that so I don't actually know if it is deleting the data on the back end when I click that button um and then the bug platform itself actually doesn't have a delete button so I don't think that there's an ability for me to delete that copy but I can definitely delete the copy on my hard drive I can delete the copy of my backup and I can probably delete the Gmail copy since Gmail terms of service says that deletes the data when you click that button um has this been resolved with a company you know have they closed the ticket and fixed the vulnerability so uh yes",
        "um they they closed the ticket but I I still have access to the ticket um and actually now that I'm thinking about it um my my bug platform account um like I'm scrolling through some of my old submissions and I'm finding like there there have actually been other examples in my in my account where I've accidentally accessed user data and it looks like all of those old tickets I can still log into them and still access that data like none of it has been cleared out of the bug system even though the tickets were closed out as fixed a while ago wow I I have to imagine other bug Hunters have this problem do they",
        "um I can ask I know I know a couple friends there are some proliferate bug Hunters",
        "um so uh turns out I I talked to a couple of friends that I know that are pretty good bug hunters and a hundred percent of them said that their bug crowd accounts and hacker one accounts are exactly the same when they log in they just have like a ton of different privacy issues that are years old and they can still access those issues and they can download the data yeah yeah yeah even though the issues were closed a while ago they still have access to the data that they attached to the ticket um maybe because these these bug tracker",
        "systems have the ability to request public disclosures I mean there's enough of these examples maybe if we request all of them some of them might actually let us talk about this and share some of these examples I mean it doesn't exactly um you know it they might say no but I mean we could try and then we could have specific examples that we could share with other people and bring some visibility to this um oh yeah that didn't work uh so they they they did not allow uh us to publicly talk about this okay well look there's a bunch more researchers and a bunch more tickets uh maybe if we just keep requesting eventually we'll find some programs that allow us to pop publicly about these issues",
        "I was not expecting that uh okay uh looks like um there there was a programmer too that's actually going to let us talk publicly about these issues um that's pretty cool neat okay so um just wanted to maybe break the fourth wall for a bit and highlight um most of these requests got denied um the vast majority of programs did not want us talking about privacy leaks that impacted their companies",
        "um of the small number of companies that approved these requests we just want to give a huge shout out to these companies for allowing us to talk publicly about these issues we don't by any means mean to shame these companies since these are the ones that are allowing us to be transparent and the vast majority of these companies actually denied the request so with that being said um here's a real world example of this happening I was pen testing indeed the job search company and a developer over",
        "there had run a little one-off sketch Notebook on their laptop that they had written their own custom HTML to do some research on some of their users and so they pulled in a whole bunch of users onto their local notebook it was maybe on the order of thousands of users uh and they insecurely rendered those",
        "users and blind cross-site scripting fires a screenshot gets sent up and I accidentally end up with a whole bunch of pii or personal data that I didn't",
        "mean to access but I got a copy of it and what's interesting here is that when we requested to publicly talk about this issue um they said sure no problem just make sure if you have any screenshots you redact out any of the personal information um and that's super interesting because they're kind of self-aware of the fact that I still have maintained access to the data through this ticket even though the issue was closed out years ago in this example so three basic questions here was I ever asked to delete data no um do I maintain access to the data through the ticket yes and then was there ever a public disclosure or notification about this data leakage not",
        "to my knowledge and my email address was included in the league so if they had emailed all the people affected I probably would have gotten an email okay um so here's another example um this one is with Google um basically a very similar situation where an employee was doing a little one-off um on a script that they had written locally they had pulled in in this case tens of thousands of user records which includes Pi personal information",
        "um and in this case same deal they insecurely rendered it screenshot got sent up to xss Hunter and I end up with accidentally a copy of tens of thousands of user records um what about in this case uh was I asked to delete my copy of the data no did I maintain access through the ticket yes and in this case it uses Google's issue tracker since they don't use a third-party issue tracker and within Google's issue tracker still able to log in and access that data and do they do any notifications not to my knowledge again my email was in that",
        "so that's what the story was until a couple of days ago when I actually shared an advanced copy of the slide Deck with them and we got this email back saying um we're going to actually change some of our processes can you please delete your copy of the data so this issue is like two years old or something like that and for those two years it was never asked to delete my copy so I had access to the ticket Etc but as of a couple days ago as a consequence of this talk Google is actually changing their processes internally and they're going to be deleting data that's attached to tickets which is pretty neat",
        "okay one final example that I was going to share with you all um was another uh pretty large significant company with a similar story albeit it impacted a lot fewer user records um and when they got an advanced copy of the slide deck they actually changed their minds um they gave us preliminary permission to talk about it and then in the Zero Hour they said actually we're not comfortable with you sharing this publicly and they uh they said please uh you know remove any information about this book very similar story to the others but um can't I can't talk about this one okay so we talked about some other researchers um so what's the deal there um I reached out to a couple of hug testers that I knew and I said hey do any of you have stories that you might be able to share publicly and um you know of those similarly most of these stories no cannot be shared publicly but I did find two researchers who did have bugs that had already been written about publicly that they already had permission and it did impact user data and so um they said yeah go ahead include those the first one is to repent tester his name is shubs and he was doing some testing against Uber and he found that he could get access to others users data through a bug in AMT script so um he was trying to just pull basically like his user by putting in his name Chubbs but as it turns out that is a less unique name than maybe he assumed uh and he ended up with everyone who had the word shoves anywhere in their user data um so he queried that name and then came back a whole bunch of people that just had shubs anywhere in their user data and he ended up with a bunch of user records unwittingly here is his",
        "blog post that he put on asset note and you can see he has redacted out the user data but I asked him in the original ticket was it redacted or did you have the raw data and he said well the original ticket had the raw data and I said okay well um were you asked to delete it he's like no I was like okay well did you like do you still have access to the ticket that has the raw unredacted data and it was like I mean yeah I can still log into it it was a couple years ago but you know I can I can still log into my old tickets and then I asked okay well did they ever notify fight the other shelves and he was like to my knowledge the only public disclosure that ever happened here was the write-up that I did on my blog and that the other services weren't notified",
        "um similar story um here with another prolific bug Bounty or Sam Curry I reached out to him and asked him if he had any stories and he said yeah I did a write-up a little while ago on Starbucks where I could actually access 100 million customer records um and so maybe the title was a little bit clickbait here I asked him did you actually access 100 million records and he was like well no I mean I proved that I could but I didn't actually access 100 million records I accessed you know maybe five or six people's records that weren't mine and it was a bunch of information that came from those five or six records um and I asked him the same question uh but before I get to his answers I just want to maybe call out here um if it's not obvious um I've been using Dolly to enhance some of the imagery in this talk and I thought this one was particularly good uh it was basically Digital Data spills out of coffee and I thought this was a pretty cool image that came back from that um but I asked him did you delete your copy of the data um or were you asked to delete your copy of the data and he said no I said if you log into the ticket today does it still have the unredacted data from the fiber 6 that you tested with he said yes and I said were there ever disclosure notifications that went out to the people that were impacted and he said you know not to his knowledge other than the write-up that he did on his blog so I think the takeaway here um is that these are like not one-off examples these privacy leaks in bug bounties are actually really common and for every example that we can share publicly there are a hundred examples that can't be shared publicly and so I think it's time that we start a conversation about it and see what we can do to reduce the impact of some of this so why does it happen like why do we have these leaks um well sometimes uh it's an accident right like in the example that I walked through before with the cross site scripting um usually when you test blind cross-site scripting you have no idea where that payload is going to render you throw it into one system sometimes it comes out in another system you don't really know what that screenshot is going to be there are different ways to test blind cross-site scripting but uh in in general some of the most popular ways can lead to data leakages by accident um so that's fairly common but another another thing is like sometimes it's it's not an accident right like sometimes the researcher um goes that extra step because they either feel like they have to prove impact or because honestly in this screenshot the triager in the bug Bounty requests that they go that extra step and in this example this is a real screenshot I took from my issue tracker it said um please prove that you can leak sensitive information that I showed them that you can you know have access to this thing that's not enough please show that sensitive data can actually be leaked out of that um and like have you do that without accessing the sensitive information",
        "um so I guess in those two Dimensions like the first uh incentive to leak this sensitive data is just because if the researcher can show more impact usually they get paid more um so that's the way bug bounties are set up the more impactful the bug is the more the researcher is compensated and so in proving that they can access other people's data they might be showing more impact and trying to get paid a little more the other incentive is from the triager and this one is a little bit more interesting I think the triager is often inundated with a whole bunch of garbage submissions basically a whole internet of people saying I found some bug I found this thing or whatever and the vast majority of them are not actually valid bugs and the triagra feels fatigued they feel wore down and if they were to actually run every single one of these submissions to the ground it would take more hours than they have in the day and so oftentimes they'll just reply to all of these submissions hey can you give me a little bit more information can you push that bug one step forward can you show me a little bit more so that I can get through these issues a little bit faster because there's so much garbage that came in so those are the two main incentives that can play both from the triage and the researcher side that can lead to some of these privacy issues and then um you know like we mentioned before thank you so much to the companies that allowed us to talk publicly about it but for every one of those companies there are hundreds more that will never allow us to talk publicly about them and then beyond that there's a universe of companies that aren't even running bug bounties that have these data leakages and they aren't even notified about them because they don't have a mechanism to have that disclosure path um so you know a couple things to call out here the first is that we do believe bug bounties are a positive force for Change and that companies that run bug bounties are in a better place than companies that don't um and the other thing to call out here is we don't by any means mean to shame any of the companies that we've talked about um because there are so many more companies that are gonna never talk about these things because they don't want to ever talk about them publicly um and in that same vein I think it's pretty common for journalists to run clickbait gotcha articles every time a company does talk about an internal incident um here's an example of that if people don't know um hacker one runs their own bug Bounty for their own infrastructure so they're a company like any other company and they've got internal services that they need to secure like any other company except they've always championed a spirit of transparency where any bugs that they have they're going to talk about them publicly they believe that that's the best long-term direction for the industry and so that's kind of neat that they always publicly talk about their bugs but it comes back to bite them because every time they do some clickbait gotcha article comes out and says um look look at the bad thing that happened and that is a pressure for other companies to not talk publicly about their issues and so a reframing of maybe what that article could have looked like um might be to say hacker one Champions transparency and shares an internal incident that other companies wouldn't have otherwise shared",
        "okay so why should you care um you know data seems to be everywhere what can we do about it can we even get to fixing this problem the answer is probably we're never going to get to perfect but we can take incremental steps to move forward so here's one reason why you should care about this I talked about xss Hunter as a third party testing service that's just maintained by a guy um well that guy I happen to know so I just pinged him and I said how much data has leaked into your system like can you just send me a screenshot of your database so I have an idea of like how big this is industry-wide that's the screenshot it's 1.66 terabytes of data that has been blind cross-site scripting screenshots that have been sent up to this service I mean it is a huge amount of data sitting on this Central point of weakness",
        "similarly as a result of this talk I realized my user account in the bug systems did not have two-factor enabled that meant that if somebody were to log into my account um you know the the bar for doing that was a lot lower than it could have been and that's probably the case for a lot of other researchers probably a lot of researchers run their account without a really hardened authentication mode and if these researchers have access to many tickets that have many different privacy issues um you can see how that might be a problem okay so we can tell it's a trend",
        "um so let's try to clean up some of it let's take some of that toxic waste to make it a little bit uh less toxic so let's start with the bug Bounty program if you build it you have to prepare for the worst so you can't go into building a bug Bounty program without making sure that you have the fundamentals built first you have to be prepared to receive the vulnerabilities to address the issues um to work with an attorney like myself in your company if you have access to one or other stakeholders in your in your um uh at your disposal so I'm a lawyer I've said this already but I'm not your lawyer so none of this should be construed as legal advice and if there's one thing that you take away from my talk to a lawyer it's not there it's not that scary we're here to help um and while we can't get to perfect there are lots of opportunities for prevention basic data governance principles um data life cycle best practices will help get you there you have to think about a bug Bounty program as a series of data life cycle so",
        "let's work closely uh with the privacy and compliance teams to make sure that you're building a bug Bounty program with that in mind so let's walk through where we can make small incremental progress and steps in each of the uh areas that Dylan outlined in his example so first of all with the researchers in the program create policies asking researchers to stop before pulling data and stick to it right if the incentive to get paid out is only if you're asking them to pull extra data and you don't know what that's going to look like you need to be prepared for the consequences of what that might mean for your company your legal obligations as a company to potentially do breach notification which is internal um examination that you need to do with your legal team think about what your end-to-end program looks like and where data might leak and consider that when you're communicating with your stakeholders the first time that your legal team hears about your bug Bounty program should not be when you have an issue so tell them explain to them what you're doing there are a lot lots of lawyers who are new in this area who are and a lots that are experienced if you work with them they're going to help you build a better bug Bounty program so let's start with the employee laptop first internal apps should have the same level of security as external elaps the type of data processed should Define the",
        "level of security so even if it's happening internally you need to make sure that you're thinking about the security on your internal apps also make sure you're thinking about roles and responsibilities right every time I am the first person in my company whenever someone's like do you need access to this data I'm like dear God no I don't want to be the person that causes a potential breach or issue give me temporary access whatever it may be so really think about does the person need access to hundreds of thousands of Records do they need access to all of the data tailor your access controls accordingly now that's a big ask but it's going to help in the long run and prevent larger leaks from happening",
        "second as we're looking at platforms like xss Hunter and other platforms be aware of what data they collect so as a researcher when you're going through be aware of what potentially might be ending up somewhere else because a company may come to you and say where's the data who has it because I ask these questions myself when I work with folks on bug Bounty programs have you deleted it so keep track of that so you're prepared to answer those questions and even if the answer is no I I don't know if I can delete it or it's in this program and I don't have the ability to like fix it Etc um so where you can go back and delete relevant data and try to make it so if possible you're not sending data to places that you don't want the data to go for Gmail I this this is an obvious one but it's shocking to me how many times people just send stuff over email um in fact the number of times I'm asked to send my Social Security over email is is alarming but don't put stuff in email just avoid it if you can um delete the email so you don't have a copy of in your possession if you're thinking about how to share data with a company you know stick it in a G Drive Link and share the link so that the data is not being perpetuated in various email systems because you're going to send it to maybe a security ad email if there's not a bug Bounty program and now we have data in who knows how many email boxes because that email may have been forwarded to an entire security team um in your hard drive you know as a matter of course again this is an obvious one but don't download anything to your machine if possible you know if you have to do it um delete it when you do and delete it after you submit it um finally for backups have a good uh data retention on backups let it roll off um Implement a data retention policy or spot remove it from backup if necessary I hate spot removal from backups I never like to touch backups they're the emergency so good retention on your backups is really going to be the best bet here and then finally platforms we love the platforms but they need to get better um at giving their customers the ability to do data governance in the program um you cannot currently delete attachments it is difficult to automatically remove",
        "the researcher from a ticket after it's been closed out these platforms are Treasure troves of personal data and customer vulnerabilities if leaked this could have major consequences and you need to think through how they store and manage this in a bug Bounty platform and so companies if you use platforms ask them to consider allowing you to set a data retention policy to have more control over your data so we're not just adding more and more into a handful of accounts like Dylan's where it becomes a treasure Trove of personal data",
        "um and then finally there are lots of places the data could flow that we have not mentioned here so this is just one particular scenario the data could leak to so many other places so I mean what should this data flow look like um we talked about researcher using access Hunter um and that causing like a whole bunch of issues and then there were a couple other third-party systems involved I I think maybe there's an opportunity here for the platforms themselves to operate",
        "their own testing infrastructure to be able to consolidate all of the testing data inside the bug platform where they have total access to the data governance and maybe even better usability like push to file a ticket buttons that are easier on the researchers as well right now the researchers don't have what they need to do their testing and in a lot of cases they may not be sophisticated enough to stand up their own infrastructure so they're having to go out and seek out these third parties that aren't involved with the bug bounties explicitly and then they get inadvertently involved as a result of the testing and maybe another thing to call out is this is also an issue with General Security testing whether that be a",
        "a pen tester from a professor firm or a bug Bounty um but we can at least solve for maybe the 80 by consolidating the bug platforms and having them run their own testing infrastructure I really hope we see uh the platforms develop in this space it it would have a large impact um so maybe some of you are here to understand what are the legal obligations I'm sure this is what everyone wants to know um that's why I'm here I want to know if I'm going to get sued well uh good news I'm going to give you a very typical legal answer and that is it depends um this is there's no one clear cut this is how you avoid legal liability you're okay um so let's go over a quick refresh really high level of bug bounty in the law so in the United States there's a Computer Fraud and Abuse Act ooh yeah",
        "um and uh as a result it has been used to against security researchers in the past um generally bug bounties operate in this idea of what is authorized",
        "um so by asking and having a program you are kind of allowing uh individual researchers to be authorized to potentially hack your systems in a way that would be allowed under cfaa there has has also been a new doj memo which recently announced",
        "specifically um that if you are hacking in good faith the doj is not going to prosecute yay but that good faith line could really really vary depending on the current on the situation so it's important to just be thoughtful here because legal issues",
        "happen when people get pissed at each other that's just if people feel not heard if they feel frustrated if they feel like you're not coming to the table and having a conversation with them this is one of the reasons where like the law starts to come into play and we don't want it there so there are some resources here um that I recommend you know if you have any questions or want to know more but again engage your legal teams should you have any questions or if you're a researcher you know there are lots of resources out there about you know kind of best practices and I hope that you will take some of these General um guidelines that I'm about to give so what are the legal obligations that's what everyone wants to know um here are some company takeaways to make sure that any data polled may not result in any potential harm to an individual or customer that's generally when when somebody does do I have to do breach notification It ultimately comes down to um you know is there potential harm to the individual that's the standard in the EU that generally is what triggers a lot of breach notifications we don't quite have that same standard here in the United States it has to be specific types of data actually we live in a 53-state uh breach notification regime",
        "um and I say 53 Virgin Islands Puerto Rico Etc um but make sure that um the date you know that the data doesn't persist on any system so you need to ask the researcher hey please delete the data and confirm with me in writing that you have deleted the data you need to do this you need to make sure that you are mitigating any potential harm",
        "because that relates to that legal analysis of whether or not you have to do breach notification and the reality is no one wants to be harmed by this data we want to keep it this program is good so make sure that if you're being asked to delete the data that you actually do it so along those lines some researcher takeaways Say It Don't Spray it tell the company about the vulnerability don't pull and spray data to various third-party systems your hard drive your backup Drive the bug Bounty platform and if the company says to you have you deleted all the copies of the data don't say you did if it's not true lying is not going to help you here it is much much better to just be honest and truthful hey here's where I think the data is I've deleted all the data that I can possibly delete there might be a copy here but I I you know I can't be sure I guarantee those companies will work with you to address the issue or close out the ticket accordingly if you used other third-party systems to pull your data delete it we kind of talked about that earlier but that's really important in making sure as you're building your kind of repertoire of tools that you understand where data might go and how you might be able to govern that data accordingly and finally the platforms you know enable your customers to have more control over their data in the product um you know allow programs to set mandatory 2fa for hackers this has been a huge success apparently",
        "um when implemented and we'd love to see this more broadly used and then finally accurately talk about your privacy practices in your privacy statement or in your privacy policy and if you don't use a platform still think through how you're sharing the data again to that email example really make sure that you're not spraying the data everywhere",
        "so the general takeaways that we want you to get from this is we love bug bounties and we love the companies that allowed us to talk about it and we don't want to shame them but we're hoping to get to a next level of conversation about now that bug bounties are much more prevalent that they are a must-have for companies to triage and coordinate",
        "vulnerabilities",
        "um we'd really like to get to a 2.0 and and make it a little bit better for the users whose data is potentially leaked",
        "so uh sounds like I might be sued if I piss a company off but just try not to piss anybody off that's basically where we're Landing",
        "I'll see you okay yeah I hope I didn't piss any companies off by uh including them in this talk thanks",
        "um thank you so much thanks everyone",
        "[Music]",
        "[Music]"
    ],
    "AFAZGPXG6k8": [
        "[Music]",
        "okay thank you all for coming thank you so much can I ask you a huge favor this is my first in-person presentation in",
        "over two years and I want to see your faces if you could all just get up and move closer to me that would make me feel a lot better because it's been a long time since we've all been together and I do want to see your smiling faces up close so please do come in and fill in now I apologize for us getting started a little late as if we are here at a hacker conference I guess it's a professional hacker conference but we're going to cover a bunch of things that have been dear to my heart important to me not just bug bounties but a little bit of Labor rights a little bit of capitalism a little bit of the way that we treat each other so I'm thanking you for being on this journey with me and let's get started so this is not your grandson's bug bounty",
        "they said the clicker would work they told me the clicker would work they promised this clicker would work and apparently it does not work all right we'll just have to do it this way so how do most people spend their lives there's a lot of time sleeping it turns out and plenty of time working and you have to cram in everything else fun eating sex",
        "everything Hobbies into the rest of the time you have left hackers spend their time a little bit differently I don't know this is allegorical experience but essentially we spend very little time sleeping and doing everything else versus hacking and I've been a hacker my whole life my mom had to remove all the screwdrivers from my house and I figured out butter knives work just as well so I'm always looking for creative ideas to problem or creative ways to solve problems and new ideas so how many of you are familiar with the parable of the long spoons okay I'm going to tell you the parable of the long spoon so the setup is what you see there it is a table that is too large to reach the food in the middle but everybody has long spoons so they can reach the food but when they try to feed themselves hilarity and tragedy ensues and people are miserable and starving so what does this have to do with System Dynamics well some of you who are familiar with my previous work and research know that we live in complex systems think of it like the butterfly effect a little effect here has a profound effect elsewhere and when I first became accustomed to looking at things from a System Dynamics perspective it was to try to answer the question should we just outbid the black market on bugs right would that be a viable strategy this question was first posed to me in the form that I understood it in as it applied to our industry and Bug bounties by Dan gear when he gave a keynote speech so one of the things that I had done with research colleagues was looked at the System Dynamics of the vulnerability economy and exploit market and tried to answer that question could you just pay higher prices and outbid the offense Market is what I like to call it because Black Market implies a lot of things that are not cool but also it implies that it's illegal the offense Market is not illegal and there are reasons why it shouldn't be illegal but I could go into that during q a if you're really curious however we did answer the question during our research of whether or not it made sense to try and buy out the vulnerability Market by raising prices and it turned out that lever was the least efficient lever to tipping the balance from defense or",
        "from offense to defense the lever that was the most effective that we found wasn't price it was actually whether or not you could close the tooling Gap in not identifying vulnerabilities but identifying exploitability because lots of the tools are similar however the exploitability will determine one its value to the offense market and two the urgency of the defense Market to try and fix it so let's go into the Talk itself oh now",
        "the clicker works but it works backwards hold on all right backwards is better than not working at all so what are we going to cover in this briefing we're going to talk about some of the problems that I've seen occurring over the last decade of modern bug bounties we'll go into a brief history of bug bounties exploitation of Labor and a few bugs what hackers and organizations deserve in terms of better outcomes on both sides of this Marketplace and some ideas for what's next for hackers for organizations and the security industry as a whole we also have a surprise announcement to make and we'll wrap it all up by telling you the punch line of the long spoon story foreign so what is the problem that we've been observing you know I'm a big believer in bug bounties I like bug bounties and I cannot lie but the fact is they have not delivered on their great promise we wanted them to have revolutionary Security benefits we wanted to keep hackers out of jail and get them paid but ideally a consistent livable wage and we also wanted to help build the Cyber Workforce pipeline of tomorrow",
        "and unfortunately it hasn't delivered on all these promises but I think there's still hope because why we know why there isn't one size that fits all and the key here is organizational maturity you know you can tell an organization all you want about their security vulnerabilities but if they don't have the capacity to fix them and fix them consistently they will always be falling behind and other priorities will always take more precedence than the security priorities",
        "so what we really need to do is organize around the evolving maturity of each side of this Marketplace and think of it in terms of System Dynamics so let's talk about some solutions this talk is going to probably lend itself to some interesting questions I will try to leave time for questions at the end but we did get a little bit of a late start so I'll do my best okay what's happened so far in bug bounties well everybody knows that they didn't start with half the Pentagon they started actually many many years earlier with a concept from Don knuth when he published his book and he would pay out one hexadecimal dollar for any kind of error that was in that book so it wasn't strictly about software bugs it was about any kind of bug it could be an editorial issue or a typo and then in 1995 Mozilla came out with a 500 bug Bounty for security bugs and that was sort of one of the first true security bug bounties nothing was really happening under the bug Bounty Sun until Google resurrected this idea in order to Bounty they're brand new at the time Chrome browser and it made perfect sense for them to do so why they didn't have a legacy code base to support they wanted to try and surface as many bugs in a shorter period of time while they were still building Chrome as possible and so it was very low risk for them to not only offer a bug Bounty but make it almost three times higher than the going rate of bug bounties at the time that same year in 2010 they raised the prices yet again to over three thousand dollars so suddenly this question of can we outbid the black market the offense Market suddenly became much more viable and everybody started asking me who was working at Microsoft at the time when is Microsoft going to start paying for bugs well unfortunately the VPS and",
        "Executives at Microsoft at the time had sworn publicly that they would never ever pay for vulnerabilities now there's a good reason for that at the time um back then and even now they are still the largest intake funnel of vulnerability reports in the world probably in the world combined quite frankly they receive over 250 000 to 300",
        "000 non-spam email messages a year of people trying to report vulnerabilities to Microsoft for free so why would you dangle cash in front of a fire hose like that right they had no idea that there were ways in which we could structure the bug bounties to make it beneficial for both sides so when I created Microsoft's bug Bounties in 2013 we launched not just with the highest bug Bounty of any industry uh vendor in the world at the time we launched with specific strategic security goals and outcomes in mind we were already getting bugs for free so we started looking at when we were getting those bugs we got some of those bugs after the beta period of products were over why because the only thing a hacker could get was 10 point aerial font their name Credit in a bulletin so in fortunately they would hold on to their vulnerabilities during the entire beta period the best time to receive vulnerability reports and they would spike with us with a huge Deluge of cases right after the product was out of beta so what I suggested to the IE team at the time rest in peace Internet Explorer you're a wonderful tool to download Chrome um but what I told to the uh the head of IE at the time was look you can align your engineering bug fixing effort with the security discovery of bug",
        "hunters in the world if you just put a bug Bounty at the beginning of the beta period we can shift the traffic to the best time for both both sides they get credit they get a little bit of money and you get the bugs at the earliest time possible to maximize the number of bugs that you're fixing we absolutely reverse the trend and that was one of the key things that took bug bounties into the Modern Age the hundred thousand dollar bug Bounty went to my friend James Forshaw and that was also unique in the at the time in the industry it wasn't just looking for proof of concept latest exploit it was looking for a brand new exploitation technique because those are the things that would take the platform the longest to adapt to so after that it seemed that some bug",
        "Bounty platforms that had been around for a couple of years suddenly had a viable market so after the Microsoft bug Bounty launched in 2013 that's when we saw the series a Investments coming into the bug Bounty platform so that was when they got their big boost big pushes and that's when I joined one of them with the great hope that we were going to be addressing all of these problems that we were seeing so I had been invited to a guest lecture at Harvard Kennedy School MIT Sloan School in that audience was my friend Michael solmire who at the time was head of cyber security policy for the office of the Secretary of Defense I was asked to brief the Pentagon fast forward two years later we launched not only the very first bug Bounty program of the U.S government but we launched the very first program where the US government was actually inviting to engage directly with the hacker community on finding bugs in its systems that was a Monumental point in time and after that in the years since we've seen so many organizations jump on the bug Bounty wagon but so many before they're ready so many before they have ironed out the internal processes needed to actually fix the vulnerabilities",
        "so I don't know how many of you follow me on Twitter but the other day I decided to take my life in my hands and say yes to the driverless ride from Lyft",
        "and uh I took a couple photos but I was expecting like a car to show up with no people in it there were two people in it the driver and the Observer to help the the whole experience along so what's funny about the bug Bounty platforms now is that you see them investing more and more in additional bug Discovery through",
        "AIML Etc and what I'm telling you here is that not only you know our driverless vehicle is pretty far from being useful and truly driverless we are still in that state as well so if you're looking to Ai and machine learning to help you through some of these process problems look no further than the human being who you actually need to train to do this work",
        "so what are the three most common things that we've found and we've observed over the course of watching bug bounties and Bone disclosure programs grow up in this industry so the vulnerability coordination maturity model is a free framework that I developed based on observation of five capability areas that were key to understanding where are the weak points what are the basic minimum capabilities in each of these areas in order to survive a constant",
        "influx of vulnerabilities whose disclosure you may not necessarily be able to choose right it's an it's an unsteady and semi-unpredictable workflow and to handle it you have to have capabilities in these areas",
        "so what have we observed about what are the most important capabilities the key predictors of success or failure of these bug Bounty programs well organizational commitment you have to commit to fixing the bugs you would not believe how many organizations we see that are performing what I call Bug Bounty Botox right they launch a bug Bounty and it might even be in private mode and they check a box saying they have one and they literally use the platform terms of non-disclosure",
        "to lock all those bugs away they might pay for them but they're not fixing them right so there's no organizational commitment at that level to actually fix the bugs what does that come down to does that come down to just more Engineers well you know Microsoft has a few Engineers I would say but every second Tuesday of the month we can see that more Engineers doesn't make it so that you have no bugs or fewer bugs there are process pieces roles and",
        "duties and even some tools internally that are missing and it's not just about the security development life cycle it's actually about processing the vulnerability reports using the metrics that you get from running these programs and having that shape your intelligence of just not just response but of how you're going to make your security investments in the future and what I've noticed so last year I hacked Clubhouse I didn't mean to it was a accident totally accidents happen and what happened was I tried to report a vulnerability it took me a couple of weeks even to find the right point of contact and they weren't responding to me even when I did until I had to send them a video of myself presenting the five stages of vulnerability response grief um so that they could kind of get over the denial the anger you know the bargaining Etc and get to acceptance so that we could work together I also had to send them a video of me walking through the international standards for vulnerability disclosure and vulnerability handling processes explain I was a co-author and co-editor and that I was going to drop Oda on them if they didn't respond so you shouldn't have to threaten to just publicly disclose and you certainly shouldn't have to be one of the two co-editors of the ISO standards on how to do this to get an organization's attention and what I found out when I tried to report these vulnerabilities to clubhouse was that they had a bug bounty it was Private they tried to get me to report through that bug bunny platform to which I refused why because I don't accept the disclosure terms that would require me to keep silent if they don't fix it so I just explained to them no we're going to stay an email and you know I'm going to give you you know a reasonable amount of time to fix it happy to test your fixes but we are you know unless you have an engineering reason to delay I will I will disclose this to the public because the clubhouse vulnerabilities I found were where you could basically end up being a silent listener or disrupter with no way to",
        "kick you out even with by the moderators because you were invisible I called it Banshee bombing for the noisy ghost version and uh you know and and",
        "um I called it something else reasonable oh Poltergeist something like that anyway the point is I tried to tell them they had a flawed intake process they tried to shuffle me off into a bounty program a bounty platform that would have forced non-disclosure and in fact when I finally talked to one human it was one of the founders and I asked him you know why did this bug exist in the first place you know this was kind of a basic session in validation issue you should have come up in your testing and you know it's it's clear you're missing some pieces in your security development life cycle and he said no we're building it securely and we have this bug Bounty program and I said you know how many security people do you have and he said well it's it's actually it's me who's handling it this was one of the co-founders of Clubhouse so there they were a unicorn valuated company that at the time was being entertained to be bought by Twitter for four billion dollars was the number that was floating around and I also found out they had fewer employees at that company than I have at my company so that's the kind of audience that we've got all excited to start bug bounties but they're using them inconsistently they're lacking some of the basic capability areas and in some instances they're just lacking the humans",
        "now let's talk about how the gig economy exploits labor",
        "when I was at Microsoft of course we performed labor law checks not just with Microsoft lawyers but with outside counsel and it was determined that bug Bounties in fact do violate labor laws but that it was relatively low risk that a class-action lawsuit would occur",
        "fast forward the gig economy has become famous with Rideshare apps delivery apps Etc and those companies have spent a ton of money lobbying against Fair Labor",
        "practices in their area one thing I want to caution our industry with is that if we don't come up with different and better ways to engage with gig labor that is more fair our industry will capitulate to the same forces that are successfully driving the",
        "decreasing labor rights across delivery",
        "drivers across Rideshare drivers and all the other areas of the gig economy so why did I start a bug Bounty program if it violates labor laws and I care about Labor well because the way that we were structuring these they were still win-win for everyone right we were doing things in a way that there were very few bug collisions right so the problem with bug Bounties in that you can find the exact same bug as someone else but if you're not the first to report it you get zero that's definitely worse than a lift or an Uber ride right at least when they accept a ride and they do the work they will get paid not so with bug bounty hunters so we had a way of structuring these things and we had a problem set that didn't lend itself to so many of the exploity areas of exploiting people more exploiting bugs so in the industry writ large is it worth it though right are people getting enough of what they need out of this this economy to make it worth it because bug bounties are making us more secure well not so much so how many of you heard about a big coinbase bug Bounty payout there's like a quarter million dollars coming out of coinbase this happened earlier this year that's a lot of money must have been a big bug it was an API with no authentication that was reported right",
        "so why would they spend 250 000 on a",
        "very obvious class of bug that should have been prevented elsewhere and why are we not noticing as an industry that these basic bugs are the ones that are getting higher and higher payouts as a whole a lot of security theater going on so while bug bounties have a lot of good energy right I can't thank the bug Bounty platforms enough for the fact that they've made it easy for us to explain the benefit of a well done bug Bounty I can't thank them enough for having gotten so many hackers involved in thinking that they might be able to make a living this way but this great strength and this reach is really leading us to a dark side without discipline",
        "so the numbers of bugs that are being reported keep increasing we're seeing more and more duplicates being reported because the low-hanging fruit is not being taken care of appropriately internally",
        "bug Bounty programs themselves by themselves cannot fix an organization's",
        "lack of commitment or lack of security people who are in specialized roles these are not the developers who wrote The Buggy code in the first place you can't just solve this with adding more Developers there are security processes that are specific to what I call the internal digestive system of bugs you get bug indigestion with a lot of these bug Bounty programs so what's next There Is A Better Way Forward for the labor market for better security outcomes and we will be announcing a bounty as well so I'm going to give you some news you can use right away first of all I've complained about the bug Bounty platforms requiring ndas I do not believe that bug bounties should require an NDA why because they're just a paid thank you on top of a vulnerability disclosure process why would I ever sign an NDA for the privilege of telling you what's wrong with you that's insane right",
        "but it's a fair contract if it's a penetration test so how do we hybridize these models in the work that we do to make it win-win for both sides of the equation when I joined Microsoft there was a program already in place called Tango so we do still call it Tango today in in our work and what that means is you know Tango is an intimate dance one-on-one and what it means is getting an individual researcher under penetration testing contract to perhaps explore a certain class of vulnerabilities or deliver you know on an ongoing basis anything that they find under contract that is a fair use of an NDA because the researcher is definitely getting paid now you begin to think well they get paid even if they find nothing not the way that we've been implementing them so let the duplicates be your guide any of you running bug Bounty programs and have a researcher submit one bug get paid and then submit a similar bug a duplicate but on a different endpoint raise your hands yes so we look at those kinds of cases and it seems very obvious to us that this researcher has a methodology perhaps even a tool that they could actually point and and identify all the instances of that same vulnerability on different endpoints so we reach out to them and we ask them are you open to a limited time-bound pen testing contract simply to enumerate all of the instances of that bug on all the endpoints you can find now while they may make less in theory than if they got paid out individually for each one most bug Bounty programs will not pay out individually for each one at best they'll pay you know maybe the first couple and then after that just say the rest of them are duplicates we're not going to pay you anymore there's also no matter of when does the hacker get paid so this solves a few problems right",
        "both sides of the marketplace benefit both sides walk away getting what they need and what they want so yeah why not both by the way that Meme that is the grown-up actual actress",
        "um in that Meme and so what I'm saying here is that this part of the industry definitely needs to grow up it's always been a false dichotomy of saying that the you could only have many eyes working on the problem if you do it bug Bounty wise or you can only have a safe bug bounty to run if you impose ndas well I think that there's a hybrid model we've made it work and every party has walked away happier with more predictable results with more efficient results on both sides and this is something that you know honestly we should be doing across the board so here's some more news you can use right now most organizations cannot count when we go in and we ask them and we're doing a vulnerability coordination maturity model assessment rolls off the tongue when we're doing this they can't count we ask them how many security vulnerabilities they have they're sort of saying well we have this many you know bug crowd cases or hacker One cases and I'm like right so how many of those identified one root cause how many of those are you know uh had to be reopened you know Etc they find that when we ask them these what seemed like basic metrics questions they haven't been counting they've just been chasing fixes right so metrics that you should be thinking about whether you are thinking about starting a vault disclosure program or bug Bounty or you're already running one start looking at your mean time to repair how long does it take you to fix critical cases on average and the lower severity cases how many duplicates now bug Bounty platforms will tell you the overall duplicate rate they will not tell you necessarily the per bug duplicate rate why does that matter why does that matter to us because how many individual finders are",
        "able to identify the same exact bug should tell you how discoverable it is and potentially how exploitable it is so let's say it's a low severity bug but so many researchers are reporting it that should increase your urgency to fix that bug that should change your response time that should put the relevant criticality",
        "of getting that work done in context-aware perspective",
        "this is something again that the bug Bounty service providers and the platforms are not doing right now which is why organizations and governments keep coming to us to have them untangle this and figure out how can we be more efficient and stop chasing whack-a-bug",
        "so other useful metrics that you should think about how often in your organization are cases having to be reopened that indicates that you are not understanding the root cause or applying a comprehensive fix or testing the fix",
        "Etc right this is another opportunity for Tango for example if you have a researcher that comes back with a bypass to your fix and you try again and they come back with another bypass to your fix that would be a Tango candidate right percentage of cases with the same root cause this op this identifies opportunities for you to retrain your developers perhaps introduce different Tooling in your development life cycle there are so many efficiencies that you're missing just because you don't have the data and then finally bug fixing is really it's a relay race and you need to know who's dropping the Baton when you start actually measuring some of these outcomes and some of the places in the process that get stalled or have to be relitigated and redone that's when you can identify you know what it's this one product team that's understaffed or they need more training it's this or it's this organization over here that you know we thought we were uh giving them adequate Repro steps and information but apparently we weren't and we need to up our game as security practitioners to help the developers understand also it can be from your bug Bonnie platform itself unfortunately over the years as these platforms have aged we've noticed you know in the beginning there were no real differences between triage and any kind of delays there we're",
        "seeing a big Divergence at this point as more of these programs are becoming commoditized and so watch your bug Bounty platform providers for them dropping the Baton for them missing their slas inaccurate triage the kinds of things that will make your program not work efficiently and also give you a bad reputation among the researchers that you're trying to integrate with",
        "okay",
        "so you've got the metrics now what do you do you know I often say that we're kind of like Dr house and we give a diagnosis based on the bugs that we see the number and type and severity of bugs and the trending of your bugs so understanding your vulnerability handling process is more important and understanding it at this moment in time is more important than how much bug Bounty money you've spent or even how many bugs you got because the trend you're looking for is you need to go from lots of low-hanging fruit lots of duplicates easy to discover vulnerabilities to fewer and fewer more complex harder to find requiring higher skills because that is an indication that you are getting more mature in your security practices",
        "so open up pen test contracts especially to some of the bug bounty hunters that have tools make a Tango program of your own",
        "this is also a way to potentially identify talent but just understand that knowing is less than half the battle when I was a pen tester in the early 2000s I got sick of it because we were coming back year after year quarter after quarter and we could basically just change the data on the report all the bugs were still open why because they didn't have enough people in different security roles internally to fix these issues and to systematically eradicate them from future software development",
        "the other thing that I have to say is that in 2008 Popular Science called the",
        "job Microsoft security grunt among the top 10 worst jobs in science it was between elephant vasectomist and whale feces researcher it was like right in the middle there and that was accurate we got t-shirts it was amazing but planned for cyber Workforce attrition in some of these key process roles",
        "when we try to staff organizations and fill in the gaps for them on these key internal security program manager roles we tell them that look you can actually uh if you want we have the opposite of a no poaching clause in our contract we say you can poach these contractors and offer them full-time jobs you just flip the badge color on them you know once once our engagement is done why do we do this because we know that it's among the worst jobs in science and there's going to be a high attrition rate and so once people get really good at these jobs after a couple years they want to move on so plan for this in your own cyber Workforce do not try to make your developers where all of these bug Bounty hats program management hats Etc because what you will find is that about the 18-month or two-year Mark of running a bug Bounty program internally you will lose key people",
        "and the program will collapse under its own weight so just understand that fixing bugs themselves is treating the symptoms of your underlying security problems fixing your process is the cure and anticipating the places where your process is going to need help so one thing we're happy to announce I was recently at the White House for a cyber Workforce and education Summit I don't know if you can see me in that picture oops",
        "um but what was interesting about that Summit was they announced a cyber security apprenticeship Sprint so the federal government state and territory governments have have apprenticeship programs where they work with companies and they work with them on developing Apprentice apprenticeships",
        "for those companies so that you can hire and train the workforce of tomorrow they announced an accelerator program and we have started the process of",
        "actually creating cyber Workforce apprenticeship problems this is exactly the way we've had to hire this whole time we hire contractors and then we get them trained because you know what not that many people want to have this job ever again once they've had it so there's not a huge Workforce to choose from but there is a Workforce of people who need experience in cyber security and can't qualify for the job listings that we see so often requiring 10 years of expert experience foreign",
        "this is the other thing we're announcing we have been a bootstrapped startup since the beginning I did toy with the idea of getting VC cash but all they wanted to do was fund my company to make another bug Bounty platform who needs another one of those what they didn't understand was that I wanted to make a broader Workforce platform so what are we doing now the fact of the matter is we do end-to-end manage bug Bounty Services where we are the ones who are deciding which bug Bounty platform to work with we are hiring the bug Bounty platforms and directing them in order to get the deliberate security outcomes that our customers need but we've never spent one dollar on sales and marketing so why wouldn't I crowdsource that I mean come on incentives are my thing right so the fact of the matter is as long as it's not illegal for you to collect a referral fee we're offering referrals fees to anyone",
        "who understands the concept of what we're doing and knows of an organization that desperately needs this kind of help",
        "so maturity actually matters",
        "where you are today in your program you may be flying high but again when Key Personnel leave your process May collapse so you actually have to be deliberate about building maturity and sustaining that maturity over time bug bounties are fantastic but they can't be used as Botox covering up your internal security flaws you've got to be pretty on the inside so don't use them in isolation don't use",
        "them when you don't have security Personnel to deal with these issues you can use you can have a home disclosure program I'm not saying you know don't listen to the the community and have no way to report phones just saying that a bug Bounty and trying to control the outcome by non-disclosure agreements it's not the way VCS aren't bad people but they've been grown in the petri dish of capitalism as we all have been and I would say that capitalism as its practice today it's like the Kobayashi Maru you know the rules are not meant for most of us to win so we've got to change the rules we've we're hackers right or at least some of us are",
        "the final thing is that we should be deliberately working towards finding",
        "more exploits for bugs not finding ways to exploit people there is a way to harness the power of hackers without exploiting their labor",
        "and finally I promised you the end of the long spoons game so the parable goes there's another room with the exact same setup",
        "foreign but that exact same setup everyone's behaving differently they're feeding each other",
        "it's the difference between Heaven and Hell",
        "we have all the tools every person in this room is highly privileged your spoons are long",
        "your days might be short",
        "do you have any questions [Music]",
        "thank you"
    ],
    "fbT_hnHIXNE": [
        "[Music]",
        "hey everyone uh yeah uh today we will",
        "build we'll be talking about malware classification through machine learning specifically how we enhance like known techniques with a kernel emulation telemetry so brief roadmap is that we touch on let's say known techniques in a public space that based mostly on a static",
        "analysis of malware file then we touch briefly our limitations and why this is",
        "not does not provide a full picture to the ml algorithm and then yeah we will transit to a hybrid approach and we will cover specifically techniques behind like AI modeling embeddings and 1D",
        "convolutions because I assume since applicability of AI to security is building a wall problem you need to know security and AI I assume not much background in AI Technologies all over cover them briefly uh disclaimer due to affiliation uh since I'm like a software engineer in Microsoft This research doesn't represent functionality of mde just in case there will be correlations it's a separate team work and yeah so far we know it doesn't reflect any models used in FB it's more of a like public research we we are contributing to the known techniques in this domain",
        "um starting with the what we know how how ml works for malware classification already a long time ago right for AI research five years back is is huge time there was released a great work by researchers and endgame originally which later was acquired by elastic they they now maintain this project it's called Amber and it basically describes a way",
        "to extract features from a PE file portable executable file as a byte blob",
        "it's open source you can take a look and it it captures around a dozen types that that can extract valuable information from feed P file like section info Imports info entropies byte histograms",
        "Etc uh however",
        "this has its own limitations in fact",
        "this feature extraction scheme works really well if we apply it to the general let's say malware threat landscape however there are ways to circumvent how this works one of them is adversarial machine learning which came to the like uh acknowledgment of the field from from computer vision uh back in 2014 uh the",
        "evasion attacks were presented a little bit earlier there was with any attacks and how it basically works it's that we",
        "modify an input through an ml model in",
        "some like clever way we generate perturbations and it completely screws up how ml model behaves in this example that was presented in an original paper we see how like seemingly random noise can completely circumvent the functionality of image classifier back then this",
        "applies to the ml World in malware as well for instance there is a group in in a university of Cavalieri published an attack of section injection and like",
        "when you add I run like benign sections to uh already packed malware already compiled malware it in fact evades static classifiers uh with that with a high Invasion ratio the second problem with the static classifiers are Packers and uh four static classifier packed software and like mid 9 B9 were in malware seems sort",
        "of the same because a lot of properties that static classifiers extract uh become ubiquitous amongst the the",
        "malware distribution",
        "so where we can go from here like at this stage of ml applicability at least in a public space we know that vendors do some Dynamic analysis in a closed proprietary form but public knowledge and public white papers that has mostly static applicability with the dynamic ones limited to a few thousand samples in a in a prototype way where we do move from this look on on malware sample in a static analysis tools like PE Studio what does human analysts it performs",
        "Dynamic analysis right through debuggers through detonation of malware in a controlled environment we absorb spawn",
        "processes we absorb common lines and API calls",
        "registry access file system access network connections all this provides additional insights into functionality of malware most of this stuff is usually embedded within",
        "bytes but it can be obfuscated it can be yeah it is extracted during the runtime",
        "and Here Comes",
        "or ability to apply Dynamic analysis to ml world we",
        "uh consider using emulators for this why because detonating malware in VM is",
        "costly you cannot do this for quantities beneficial for deep learning you need to revert contaminated environment you need to boot up again the full uh like operating system kernel it takes time it takes computational resources and luckily we have a great emulator thanks to demand the end team research and development they're doing great job maintaining Speakeasy development developing it and it basically allows to acquire Dynamic Telemetry just in four lines of code in fact their own data science team does research in this direction some insights are are published in cameras last year so if you are interested in their work you can take a look in this reference uh so what we get from a speakeasy emulation basically the same information just purely in Python yeah network connections register access file access and like we",
        "can get even data that is written to the files and of course API calls uh that's that's only like tip of the iceberg there are memory segments again memory segment content and",
        "uh yeah pretty pretty great tool not only for uh automated analysis with a model but for manual too uh and what we do with this data we basically present this model which emulates PE",
        "portable executable files from different points of view first of all we preserve Amber static features because they are great we don't know what discard what we know in this direction they are there they do a great work in in general malware distribution however we add",
        "additional arms uh one arm focuses on API calls basically we extract a sequence of API calls from the emulation report which is the closest way let's say uh to represent what malware does on the system",
        "um in addition to that we take a look on where malware uh course not malware but any PE file were located in a system at the moment of execution so we collect this data from in the wild and use to analyze our system as a",
        "contextual parameter because there is a behavioral pattern of of portable executable and there is a contextual part that represents environment",
        "uh all the those three arms basically",
        "work as a feature extractors that",
        "squeeze out the most valuable uh parts of their input data through the learning process and in a in the end provide those cold representations in an AI",
        "World they squeeze out uh",
        "128 dimensional representations of of",
        "their data and provided to the late",
        "model we call it meta model which actually performs the classification it takes input from from all three arms and basically tells from those representations whether this is a malware on or B9 wire uh the data set we used to evaluate this model looks like this it's around the",
        "training set and validation sets consist around 100 000 samples uh more of than 300 gigabytes of data and the test set was collected three months after acquisition of training set to evaluate how model performs in the",
        "evasive like evolving thread landscape",
        "and consists roughly of 27 and a half thousands of of samples",
        "uh the labels were assigned by professional threat intelligence team using manual and automated tools and the single label clean represents a benign software and all other labels are are malicious it's it's not um like data set doesn't generalize well",
        "across all malware times types it's not so crucial for analysis of model uh because yeah we will we will focus only on these labels just to analyze how model works but of course there are other types of malware which were not included and if you want to consider those ideas to build a more General model don't select the specific label select as much as possible data you can get uh clean clean labels are relatively more like uh volumetric to the malware to balance both both",
        "types of data",
        "uh we passed this data set through an emulator which presumably would uh like require a lot of resources to pass through the VMS but yeah The Demolator with that in relatively fast emulators are not perfect they uh",
        "create or or emulate only a subpart of actual kernel some API calls are not present or are not implemented therefore some of the emulation is error knows however as we observed emulation error rates are not that prevailing and there",
        "were still pretty good for our analysis",
        "um where do we head from that we have a file path and we have an APA call as a API call sequence uh both problems are",
        "basically the same from the ml modeling point of view those are these like sequences first one is encoded as a utf-8 bytes and form a vector of integers uh API calls can be recorded with them just artificial label map to like where specific API call represents the specific integer therefore we get basically the same input data of course representing different information",
        "then these sequences are passed to the embedding layer what is embeddings what are embeddings uh those come to the AI",
        "technology World from NLP natural language processing where",
        "we've seen that embedded tokens when",
        "they are expanded into",
        "embedded Vector space basically what it does it takes a narrow sequence and represents into more wider dimensional",
        "space and those expanded values have",
        "interesting properties for example after training similar tokens appear in a similar region similar regions of this expanded Vector space for instance cities body parts yeah feelings reside",
        "in the same area so these later layers can grasp approximate meaning of the token independent of a token appearance presumably something similar happens in for instance API call space where",
        "sequence of API calls that can be used to inject uh shell code in a threat",
        "there are different ways to do this they they can be research that they could reside in the similar Vector space in the expanded embeddings this is just speculation we didn't verify that it's not that straightforward to do but uh presumably something like that happens then embedded",
        "values are passed to next layer which is convolutions convolutional layer",
        "those come from the computer vision domain convolutions were used",
        "to extract features from the images for",
        "instance this filter in the middle is Will extract the vertical lines from an image and the model then performs actual",
        "convolution of the filter over the input data those are two-dimensional convolutions we use one-dimensional one because they are applied over the one dimension of the input sequence when I think about one-dimensional convolutions the thing that comes to my mind is heartbeat where a one-dimensional",
        "convolutional layer could could easily grasp the pattern that is represented in the heartbeats something similar is done",
        "in a file path for instance inputs where one dimensional convolutions could get like gram n grams like dot exe or C backslash win which may lighter be used",
        "by by later layers for actual decision",
        "boundary between benignware and malicious uh soft malicious samples",
        "those later layers are purple ones in in",
        "the in the architecture are basically fully connected a neural network which I assume like everyone almost heard nowadays those are just neurons that that build a non-linear function between an input and an output in fact we use the fully connected neural network as our meta model 2 and this is a way to to build either complex decision boundary or extract valuable data from input to the output",
        "and those are the results of our model uh to emphasize again this is done on",
        "the data that collected three months after the training and how to read this heat map x axis represent a false positive rate which means how many samples we fire",
        "uh how many benign samples we fire alongside with the 100",
        "000 malicious samples and in production you will not be",
        "allowed to push any ml model that that brings alongside false false alarms because the most precious time we have is a human analyst time and we are not allowed to to like spare their analysis on on false alarms uh therefore we will focus on for instance this column which which",
        "represents re really really low false positive requirements that we give to the model we we can deploy multiple models that are are super accurate in their predictions but have low detection rates this basically resembles what we have in rule based or signature based approach they fire only on specific cases but led through many other",
        "examples",
        "so what we have here if we look on separate models or arms",
        "then we still see that Amber is the King right because it extracts so many properties from the static static byte",
        "blob and again it's a sort of a state of the art as we know right now there is no question it's a great tool how to apply and get a quick win for a classification we see surprisingly poor performance of emulation on API calls right and these",
        "points us that we still can improve this component and yeah we will touch this in a minute but the most astonishing thing from our point of view is that combination of separate modules not",
        "only improves performance like cumulatively that we use them independently just together but",
        "we see this emerged",
        "pattern of meta models ability to give additional value to this input data for instance here we see file paths and demolition only give us like 43 percent samples are detected if if we use them together or even less if there's no samples overlap but if we use them together and apply meta model on top we we boost that up to 77 so it's like over 30 percent uh rather than using them",
        "separately and it's even better than this like state of the art wide extraction by the Ember itself like at least by 20 just from file pass and just from the API call sequence so we we already can catch 77 of data and",
        "this is something that we usually maybe don't see don't see from a male point of view that it can build heuristics that we even don't we are not aware of just give a data just different type of of properties just different type of like angles and it will figure out valuable components for it in this case it probably takes some part of file path and some appearance of a few API calls and sees that those are representative for Mar for malware whereas the benign",
        "were with the same API calls don't have this part of file pass or something like that and of course when using them three together we get a fairly good detection rate with such low false positive requirement only one uh false triggering in so much like 100 000 samples so this model already in this like prototype-ish way could be deployed in production as one of the uh like parts to the to the other thing solution for for manual analysts it still has like 14 of true negatives but they can be captured by other means right we need to lap over our our detections but",
        "um yeah uh brief note on how adversarial malware behaves uh this is how we read this graph it it displays two models let's focus only on like orange bars which represent Amber model and the Y scale is logarithmic so when",
        "we we construct it and like adversarial malware data set from from our test set and we've seen that more than",
        "a thousand samples were evasive on just pure model itself when we added emulation only 100 of those 1000 samples State",
        "evasive so like the 90 drop of equation rate of those attacks we know specifically we tested section injection attack and when we apply the file path as well the basically the attack yielded",
        "unsuccessful",
        "therefore we we proved kind of that if",
        "adver adversaries wants to use techniques in in adversarial",
        "um machine learning World they should adapt some",
        "some perturbations that",
        "fool the dynamic parts of the complex",
        "heuristic",
        "uh some ideas on future work again as we can see emulation part is only a prototypish the performance is relatively bad if you compare directly with the with other models under low false positive requirements uh we can",
        "consider how to improve API call model itself but we can add a lot of more data that were we what we were talking about previously network connections registry manipulations file system this all these",
        "these parts of report can be modeled and",
        "not to monopolize or like approach on this we publish the emulation data sets publicly so if you want just go to the repo and grab them play with them those are Json reports of both data sets uh we",
        "unfortunately cannot publish B samples due to privacy policy but emulation reports are anonymized so yeah if you",
        "wanna play in this direction just just feel free you have data now",
        "additional sources of contextual awareness can be used as as like filling the epistemic Gap that we have there are parts of information that we can add for model to to to be valuable to segregate those 14 that it still is not able to catch for instance parent processes this data is hard to acquire maybe in some cases but from for a Security operation centers or yeah threat Hunters",
        "it's easy data and you can try to model it as well another one is the mark of the web and download source of course if you know or like digital forensic Specialists here will point you that you can grab this info from ads streams for every file right and you can use this as a part of heuristic really valuable part",
        "so those are just some ideas that if you are inspired and want to continue uh he those are promising directions from our point of view a few takeaways",
        "first of all AI allows to Model Behavior we see it rarely at least in public research of course this is done proprietary almost every vendor right now does this in their back end but like scientific knowledge is is really poor in this direction there is no models that you can take and directly use pre-trained models but we see that this can be done and this yields are are known techniques and the benefit behind the modeling",
        "behavior that it can be applied to much wider set of data for instance not only P files as a byte blobs can be used for analysis which is the case with static techniques but data like sysmon or odd can be modeled as well which is which represents much wider spectrum of",
        "security practitioners again security operations center you don't need to be security vendor which is in the case in in P data sets this is usually security vendors that do this research with the behavior it's every one of us socks around the world that that can benefit from Models like this uh second ml you basically you just need",
        "give it data and it figures itself the valuable part um it's it's the pipeline that you need to build and as we've seen ml finds valuable components if you provide it uh different angles of of the same question in that case uh yeah the",
        "this performance boost that we've seen by combining file path and emulation models is from our point of view is is great and it's in fact is not artifact of this specific data set we've seen this behavioral across validation training contested so the same pattern emerging in every piece of data that we tested and last but not least what we wanted to remind everyone when we speak about ml applicability to security problems ml is not a silver bullet it will not replace you tomorrow and like human Specialists",
        "were will be out of work it's a tool that we can use and apply basically AI is a software it's we are far from intelligent agents that do work by themselves it is a tool that you can put is any other type of code or Automation and use it in addition to the tools you have right now like rule-based approach is not like substituted by by AI techniques it's an additional way to do your work more efficiently and you cannot with the small models you you don't need uh yeah you just just Implement one arm from for example this approach and it will already can can be a better",
        "detection way for you for to to identify some some things that you need to identify yeah acknowledgments to the many teams that did research that made the foundations for this work for instance again Monday and they do a great job for maintaining Speak Easy and their data science team does similar research and game for for original worker member sofas AI team showed that fall pass in",
        "fact improve Amber so we were influenced by them and guys from kagler University done the adversarial machine learning library that is easy to use thanks to them and the people who support it yeah that's it now it's the time for questions",
        "foreign",
        "[Music]"
    ],
    "klVlP6LTtw0": [
        "[Music]",
        "foreign",
        "you may or may not know it but you are sitting in the largest lock note session ever by far and we're all suitably impressed that so many people turned out for us so there's like no pressure here [Laughter]",
        "in our overseas events sort of as a corollary to Keynote lock note and we were really trying to create a nice kind of anticlimactic way to wind down the conference with some insights from the people who took all the time out of their personal lives to actually review and help select the content and so it's a great way to say well this is how you thought the sessions might turn out or these are the trends you thought were important now that you've done it how does it feel what what did you gain as an inside you know what did you think and the other idea is we're going to try to run this like a conversation where you're sitting there in the audience and we're all friends and we're having a conversation and you're sort of listening in and then further on in a session we'll try to open it up we have a microphone here in the middle and we'll take questions from you and sometimes it's interactive we'll ask people to raise their hands if we're like trying to argue over something one year was nobody buys deception services",
        "somebody else said no I think some people so we asked the audience one person bought deception services don't invest in that I think that's going to work out very well so I'm going to introduce our panel here",
        "and then I want to kind of kick it off with some questions and away we go ready you bet okay on my right we have Chris Eng from Vera code long time I'm looking",
        "I think we switched so now we've now we've messed it all up I'm sorry I kind of look the same but I give that confused as well it was just a test if you remember stage right Zoom for so long um from Vera code long time contributor in security space um and on the United States on the U.S briefings review board",
        "okay and then we have Natalie solvanovic from Google also on the U.S briefings review board uh we've got Justine bone from medsec and she's on the ciso review board and the US briefings review board and then on my my right your left Matt swish from magnet forensics and",
        "he's on the United States review board and also our European review board okay so I'm just going to quickly start with Chris and just say a little bit about like maybe your area that you're really interested in like what you pay attention to because you can't all pay attention to the submissions there are what how many submissions how many hundred thousand a thousand to a thousand yeah over a thousand submissions and you can't do that without your eyes bleeding right so what is your approach let's start off with Chris well mine was uh application security it's been my focus in my career for the past 20 years and so I've had the fortune to be the track lead for application security this year it's been called app stack it's been called sdlc a few different things in the past but um just amazing amazing submissions that we get in application security everything which covers a pretty wide",
        "gamut right everything from sdlc and CI CD pipelines to web 3 and just standard web attacks that's a big big category so I spent most of my time during this show almost going exclusively to apps track abstract talks because uh you know that's that's kind of what I want that's your jam and I want to make sure we're picking correctly and I think you know I think how do you tell I mean is it based on how many heads are in the room that doesn't seem like a great metric or how do you get a good feedback a feel if you did right yeah it's it's uh sometimes like title selection is very hard yeah we find and so you you know you can have the most amazing technical content and then you don't have a great title you may not get a lot of people in the room but you know the good thing is you can always go back and watch those later yeah and and find out and you hear you know I like to go to Twitter and just find out see what people are chattering about and see oh I missed that one looks like it was you know better than the abstract made it out to be so I'll go back and watch it on YouTube or watch it on the website I'm going to make an assumption and I hope I'm improved wrong but my assumption is Google Natalie app set",
        "uh yes",
        "or cloud or what is it what is it you you like to yeah so I leave the hardware track so um at Black Cat I really love going to the hardware talks these will range from subtle and interesting CPU bugs to hacking crazy wild targets like cars or",
        "satellites by day I'm on Project zero at Google so I'm also super interested in exploit development and how to get code execution on all sorts of targets so it's at variety like you're looking for some uniqueness there right not necessarily the micro optimization in some exploit chain you want to see something new and exciting yeah I always feel like I get the best ideas for new bugs and new exploits from black hat I love seeing uh yeah new stuff all right let's talk uh over to Justine",
        "tell us a little bit yes so gone to my hardware and upset days Once Upon a Time sure but today I'm on the policy track",
        "um and so when I look at this is that another word for management wow story of my life right here yeah um so it's it's quite tricky though with the briefings reviews because you know you've got a very technical audience and you're looking at policy submissions so you've got to try to find that content that's relevant to technical folks but is still talking about policy so I try to look for things that are disruptive ideas",
        "um disruptive like I've got something crazy here on fire and therefore or disruptive but realistic but perhaps",
        "slightly out there ideas not clickbaity",
        "no I'll never yeah no no no you're never going to get away with that and then but um you know there were a couple for example that um once again Revisited vulnerability disclosure but they were slightly outside the box there was one presentation about vulnerability disclosure on the blockchain",
        "yes yes so so things like that that maybe bring together you know some level of innovation and Technology along with a policy idea but in addition of course with the with the CSO Summit um it's a lot easier to consider policy or strategy or you know governance issues because that's the audience so do you find yourself for the briefings focusing on sort of like tactical policy and for the ciso more like strategic exactly or a policy that will impact the you know in a in a tactical way a more technical room you know so this is a policy shift that might impact my my role as a security analyst or as an expert or as a security researcher as opposed to a policy that might influence a change in corporate governance or you know regulation or something like that right excellent okay I do miss those Hardware on Epic days I'll get back",
        "Matt uh with the word magnet forensics I think I have a lead on what you're interested in yeah I mean I've always been involved with the dfil track uh but as you all know like we often happen to be in multiple tracks to help other people to review the submissions because we get so many yeah uh I mean the exploit development one is cool like the platform security one is pretty cool uh application security School although no we don't know if production stuff is maybe like web free security letter you know you and I want to talk about web3 I mean I think we should I think we should have a new like track in the next few years",
        "you're saying all these things are cool it's like is there anything not cool can we do like a hands up on we're sure and blockchain like who would like to see a blockchain trick a web free security track I like the name better okay I think you have to Define what web3 is yeah we'll do that besides unicorn",
        "like 700 million dollars you know for it you know it's bigger than the Central Bank there are a lot of security Consulting companies making a lot of money from with three bucks right now yeah yeah awesome awesome so I'm glad we sorted that yeah okay so so that's your jam you're into as long as the technical presentations like um especially uh when you go to a conference you like to select technical content if it can be a blog post you know that should not be a presentation it's usually like my decision tree you know should that be a blog post and I can just read it at home or is it really worth attending the presentation right for me it's one of the biggest like decision maker but just like Chris you know I like to watch like the slides and the presentations like later because it's impossible to see everything so when you're doing your sort of mental filtration it sounds like you've got one of your first hurdles is can this be a well-written blog post if yes 100 write the blog post yeah and if not it has to have something additional yeah one of the things I like to think about too is are you elevating the speaker by giving them a stage right is this a person a group a community you want to put on a stage in front of other people um basically be implicitly endorsing them and it seems like this is a concern that's newer before it was just purely look at the technical yeah and now we're having to look at more aspects right yeah um so I'm wondering does anybody else have your sort of You Must Be This Tall I I try to I try to you know address bias right and I tried my my sort of methodology is you know obviously focus on the content and I almost don't want to know who's submitted this and you know where they work and whether you know I've heard of them before or anything like that and I thought so I try to go through the content first and then if I'm asking myself more questions I'll go back and say are they incredible okay let's read through bio or you know but we shouldn't be you know obviously stopping opportunity for people who are new to presenting right um so at Defcon we have",
        "an ability to submit anonymously so if you don't want any of that to be considered yeah um that gives some people some confidence to submit that normally might not yeah yeah but it's hard because there are also people with amazing track records you're consistently producing that always produce you know and we come here to see these people present so right the Dan Kaminsky track yeah when Dan would submit basically you knew you were accepting Dan yeah I look for practicality a lot more than I think that I used to um I mean what changed then well I think you know if you go back to the early days there was definitely a lot of uh you know you have to get the headline you have to get the coverage of this really cool hack this really cool exploit that's that's coming out at Black Cat and there's going to be this this big media blitz around it and while there you know there is still some of that you know as the profession has turned into something that's a little bit more disciplined and it's you know so multi fasted",
        "I feel like there has to be a takeaway there has to be something more than like this person did this really cool hack that's great and more than the celebration of the feet exactly yeah how do I Advance the state of the art back you know when I go back home to my to my organization right what do I do and so you know that's that's accomplished by some of these talks like you know James Kettle is always pushing the boundaries like here's a here's another new way that HTTP is broken that that breaks all assumptions that then every pen tester can go back and use starting like probably tomorrow it pushes the state of the art it lets you find new things that you didn't know about before right anything you know that's a tool even or a new practice or a new way of thinking about something you can take back yeah there may be a cool hack along with that but if there's a good technique that you can then go add to your Arsenal I feel like there has to be some kind of practical takeaway yeah and every single every single thing that I that I review yeah yeah I definitely find that with the hardware track like there definitely is like the call of the cool like the wow you know they made that cars windshield wipers flip back and forth and certainly um that that is part of the hardware track and I kind of feel like maybe every year there's one talk we pick just because the target is like so awesome that um",
        "maybe we're less concerned about concerned about the technical stuff but then there's so many other cool things yeah for example there was lots of fault injection this year lots of CPU bugs and while those are also very cool they just don't have the same same large appeal",
        "same almost spectacular and some of the",
        "other submissions and your track is um is it sort of like a when there used to be sort of an iot track we there's be like iot junk hacking we'd call it oh another embedded system running another ancient you know it's like it doesn't matter what it's running it's the same system that's you know so we'd call it junk hacking it's the same sort of thing happening now it's sort of like somebody learns a technique and now 30 people submit on that technique so it's hard to weed out the ones that actually are doing the unique thing yeah that's definitely",
        "definitely kind of apply the same two new targets and then there's the ones that actually have new stuff in them yeah",
        "so favorite talks things that wild you things that didn't surprise you you know so when I think about um it's not you know",
        "the ciso summit operates under Chatham House Rules so it's it's a very safe space for csos to share their insecurities and raise questions and kind of think about existential issues you know you you're you're csos that perhaps you work with might appear to be super confident and know how to solve every problem but believe me when they get together in the ciso summit there's a lot of insecurity and questioning",
        "um and we you know we ask ourselves questions like where do we belong in an organization and um is you know we you know we understand cyber security no longer just a technical issue so one of the awesome Concepts that we talked about this time actually was cyber security belonging to the ESG initiative of a company the environmental social governance component of a company as opposed to cyber security as a technical responsibility which was um rather an out there concept to be I I don't know I want to think halvar but it wasn't halvar but somebody was did the company the the the I think it was the Specter or the Meltdown CPU microcode patch",
        "added something like one to two percent extra CPU cycles and somebody calculated the carbon load of how much more pollution that's a very literal right like Amazon is now putting out 69 000 more tons like a bug and an ESG impact right and so when I hear this I think that's probably not far out there I bet in the future when you're reading about the impacts you're also going to see and 99 new tons of something or other on the Azure Cloud yeah real cost a lot of it was about you know um sharing responsibility and less sort of centralized cyber security oversight so",
        "for example there's always that conversation about cyber security in the boardroom and now we've got the SEC saying that you know companies should have cyber security expertise in the boardroom but the interesting problem that we've got to be cognizant of is if we've got this sort of concentrated cyber security expert you know one of us we're sitting now on the board of directors the risk with that is the rest of the board will kind of Point responsibility for cyber security to that person and not share that risk across the board and across the whole leadership of the company which is really how things should be so a lot of talk about sort of centralized ownership and management of cyber security as opposed to everything being shared plus they're probably really excited to see each other after two years",
        "also a very full room yeah yeah I just kind of show from hands how many people by showbands did not expect so many people to be be here I did not yeah I did not I mean I knew people would be here but I was pretty surprised like it came rowing back and uh people are registering to conferences later and later so it's very hard on the organizers because it comes in the last wave just like when you get your submissions how many of your submissions come in on the last couple days is that just when you think you're done pretty much yeah no every year it's like wow 30 submissions I can handle that and then like one hour before the deadline it's like well 250. yeah 250 in the last",
        "hour take that in how much time do you think she's going to put to those considerations versus the people from",
        "two weeks earlier oh yes beer please",
        "thank you thank you",
        "ah it doesn't matter I'll take an IPA thank you so it was supposed to be you observing us having a casual conversation we need to have the beer to have the conversation",
        "okay you go for the IPA okay the thing 250 submissions at the end is that you know you kind of get review or burnout thank you right and the last thing you want to do is review a submission when you're feeling exhausted and burned out and all the words are just blurring on the page and it's so tempting to click next next and it sounds like the other one yeah so you you know you've got to sort of go away you got to manage your time and come back and be refreshed and give everybody a fair chance so when people submit and they say I got it on the deadline when are you going to tell me it's like well you've got to wait weeks now because they have to digest this huge meal that arrives you if you submit like two weeks before like one week before you'll get so much more like like better quality review okay like I try to keep up with it I try to you know I don't know four weeks before I start to you know start to review you know maybe like 10 talks a day or something like that and I I always try to keep up with it and then of course that last day comes and then a fully 50 to 75 percent of the total come in on that last day yeah and you know some people can plow through them uh but I do think that you know you give a little bit of short Thrift doing that so the ones that come in early like I'm reading those like well I'm putting a lot of attention on those because it's the only thing I have to do yeah I would say the ones that come in earlier the ones that get probably the most attention I mean that's how I operate reviewing I'm reviewing yeah I'm gonna say there actually is an advantage to submitting early in they don't necessarily do the best but we do pick some talks early so if it's a very strong solution exactly and I noticed that you get feedback in the early when it's late we don't have time to get your q a right feedback and the and the other no-brainer is if the review board asks a question like a follow-up question you must respond you know eloquently and yeah some people are going to make it easy to review the presentations because they don't have a good abstract you know like it's like they put no effort in submitting so those ones that are easy to dismiss that's the good thing I'm going to uh I'm gonna shift the topic a little bit um Russia Ukraine we saw it influence some of the submissions maybe around disinformation or misinformation or maybe some Network and attack or apt but um I'm curious kind of more professionally bigger picture are we as an industry like used to dealing with sort of Apt levels and every other weird Cry of cyber War now that it's actually here",
        "is it what we expected did it you know it's sort of like when I talk to people involved and I'd say do you think Russia's used all their techniques or are they sitting on some for some reason the general consensus seems to be that we've seen it all kind of seeing one of each of everything I would say very careful of taking that position well they said why would you wait why would you wait six months in but you know you know my father was in was in Russian counter Espionage he'd probably kill me now for saying this on a stage yeah but it's so long ago right um and one thing that he will say is these people who he has a lot of respect for think long term and on those I'm sure but if you looked at the attack the first week was nothing but attack and then a week of nothing as they tried to figure out uh what are we going to do next right and then another week of little less attack and then a period of you know and so I'm just curious is what we've been preaching or reading about for so long is kind of happening in real time in front of us does it live up to the hype well I guess it depends uh there is what we see and what we don't see right yeah if like what do we see is just like the numbers we have seen for like the first six months like wipers and stuff like that I don't think those capabilities for sure you know yeah like there's probably like stuff that we're gonna see like later on in a few years it's like all the stuff that happened oh the shadow Brokers thing happened yeah and all those exploits got leaked like the data I got leaked were like oh that happened like five years ago you know so I think we're probably gonna end up in a situation a long tail of other things coming out yeah because we don't see you probably see like I don't know less than 10 percent of like but it's not like a fast and furious where there's the magic button and shuts down the whole city and it's the AI That's gonna it's not like in the movies yeah we're not getting into the mainframes turning down the fires what are you saying oh my god I've been deceived Jeff Moss is telling me hacking is not like in the movies oh my God",
        "let me hold my chair I need to recover on this touche not like in the movies I",
        "quit yeah we're on that on that same note you know what they're maybe not being like a single magic button but um you know when Kim zetter's keynote today was pretty you know talking about some of the the different groups that have infiltrated you know operational technology and and that some of the uh almost like the workflows they had around like okay well make sure that you uh kill all these processes before you again the ransomware like it's almost like a magic button right it's almost like the switch that you flip the research has been done to kind of do that and so you know I think it is proving that to be as chaotic uh as as we thought it would be with the citizen Army getting involved and then the whole like that's government government yeah the part I'm kind of surprised is how uh aggressive Microsoft seems to be in combating some of it I sort of thought maybe some of the big mncs were kind of sit on the sidelines a little bit and try to provide update services to everybody but I was pretty surprised how some companies are just pulling out yeah pulling out or taking a stand um",
        "I've got a follow-up question",
        "defense then in this super pervasive offense environment",
        "does defense stand a chance and one",
        "thing I was thinking of the companies that are really good at taking the tools away from adversaries",
        "probably can do really well in this environment because the adversary might not want to exercise something the only thing I only have one real touch point is when we ran Defcon for the first time fully online on Discord the first year people started targeting all the attendees with custom malware trying to get him to click on videos or links or whatever and it was I don't know if there's a botnet but it was a pretty concerted effort with a lot of unique malware and so we scripted up a bot that just took every attachment and sent it to virus total and the attack stopped in five minutes they just don't want their stuff in virus total right and so it seems like defense has some techniques that can make life more miserable I don't know many of them but I'm curious this would be the time for defense to shine right that's that's I mean I didn't know that's a cool story that's uh a great example I think of what Chris Krebs said the other day which was you know moving from I think it was from the government perspective but moving from these long-running investigations to more disruptive action right in that situation you saw something you immediately took an action on it that would you know create a situation that's harmful to the attacker and want to raise their costs right we can't do an investigation but I want to take your tools away right so that's that's a that's a great way to kind of tie that together and I think as Defenders we do chance um I mean I'm largely on the defensive side of the house now so uh it behooves me to say that but I think um the one I was going through my notes from all the all the briefings just before this and the one Trend that I I kept seeing come up was changing our threat models so like changing that like the need to evolve our mental threat models like they were too simplistic before or too complicated or they're actually wrote These down because uh so Krebs said you know uh you know anybody that's running a technology that's becoming a core fabric of the internet has to realize that they are now part of the National Security apparatus right mindset shift um the CI CD talk um you know the idea that pipelines cicd pipelines control so much and you can you have this like nice streamlined way to push stuff out to production and infiltrate in a way that you weren't able to do before it's a different threat model than you know 10 years ago when all you had to be worried about was being attacked directly and you know or individually um the the web 3 talk which and one three was very polarizing uh",
        "topic amongst the review board I will tell you that I think North Korea yeah anything you need to know and it didn't end up with it didn't end up with a trap but it ended up with at least one talk and you know we'll see where that goes but you know we're seeing all the same types of attacks in web 3 that we saw in",
        "traditional application security you see the the uh see now I forgot what the wallet hat was but the one was basically leaking uh private keys and mnemonics through through overly verbose logging like we're seeing these things play over and over and over again but now with what three uh the threat model is different because these attacks can happen instantaneously and you know in the open and anonymously so I think as Defenders we have to be a little bit faster to think about you know to modify um how we're how we're thinking about our threat model and adapting rather than kind of using what we've always been using oh yeah yeah I think like I'm so glad we have the defense track here because I do think there's this problem where you know you shared a really clever idea for defense but not all the ideas are super clever and a lot of things that are required in being like purely defensive are things like code review they're things like knowing what all your assets are just thinking for the hardware track we had quite a few talks on fault injection and then there's just one talk on techniques for preventing that and I think that does kind of reflect on security people's interests and I think it's important that we understand the value of defensive Solutions because it is fun to break stuff but um well there's this concept you know in offense which is use it or lose it so you know you've got the tool you know Microsoft's going to release a patch you have to now decide use it or lose it and so I was kept expecting like with that Tempo accelerated we'd see a lot of use it because there's all this fomo of losing it but I I I haven't really actually seen that play out so I'm now I'm questioning those assumptions yeah but the thing is like I think that is ignoring the broader issue which is if you had 10 fewer bugs or 20 fewer fewer bugs attackers wouldn't even find themselves in that situation right right maybe not",
        "um that would obviously wouldn't get rid of all of your bugs but it would make it harder for attackers make it more expensive and you know defense isn't perfect and I think it's always going to be a struggle with attackers but I don't think we should ignore the fact that there are things we can do to make it less likely that they have toys to play with in the first place yeah or even like uh the the quality of patches I was just talking with one of the speaker before he was saying what they have seen actually is the quality of patches is decreasing and he sees a lot of like Placebo like patches where they just fix like the specific like use case you are giving but not the actual Bird right and that's if strain equals EA exactly yeah or like CVS you know being like merged like they would send like multiple bugs and they would just get only like few CVS and the impact on on teams exactly yeah",
        "pages that do nothing yeah exactly so I mean like products what's driving that",
        "I know like maybe the quality of like software Engineers like uh even if you look now I was talking with another speaker we're just saying that a lot of the uh like offensive presentations they're not coming from the same profile of people you would see like 10 years ago a lot of them come from like Google for instance like defense like oriented like company uh like the whole profile of like offensive talks also like change like the actual people doing like offense we don't see them yeah because we're not allowed to drop out anymore [Music] this is there less I mean I'm always curious like when it gets harder to develop the zero day it becomes more valuable so you're more likely to monetize it that's supposedly right I mean there was the the trend in the early days of black cat were like well I'm famous enough now my career's developed enough I don't have to release that stuff anymore now I can sell it but because some vendors are not paying like researchers on time and they're waiting for like one or two years I know I don't want to drop any names but so right like there's a name that came up like few times you know like this because oh interesting but that's true because there's a source of Revenue now for for security research isn't it well it wasn't an incentive to you know present those results elsewhere right yeah that was never there before right",
        "the numbers just keep going up you know do you guys ever pay attention to the value of when uh zoronium would post I just get astounded every time I see those that's what I was thinking like the one or one or two million dollars for like a iOS I think or Chrome yeah yeah like this is actually for the um projects you're over you guys probably pay attention a lot to it I'm sorry Target sometimes that in other price lists because it is a really good indicator of how much attackers value bugs I always get nervous when I see software like we're not taking these anymore we have too many of them I was like no but I run that software yeah yeah that's going to be a problem but do you but the the value going up of a vulnerability must reflect the increased level of effort that has had to go into discovering that it must yeah right does it well that's I mean it's that hard right now right look at the uh you can't just put like apostrophe equals semicolon yeah but if you look at like the bridges in web free like some of the bounties are like 10 million dollars it's more than the airport for like iOS bugs and stuff which is great because that's real real money's moving yeah it'd be like if the Swift Network said we'll give you a tenth of a percent of what you save us that's a billion dollars or something yeah yeah yeah it is hard to figure out for sure what a price means it is a combination of how much it's valued and how hard it is to attack I'm always curious how much of it is it tells you what attackers want like these are the targets not necessarily what people are producing yeah and of course it's it's a balance um yeah up until web 3 it made a lot of sense",
        "was wanted you know maybe like maybe their countries wanted and the level of effort but but yeah like what Matt just said you know the interesting thing with web3 is that there is not a regulatory requirement for these developers to",
        "obtain attestations of security but they're doing it anyway they know it's coming right these companies are going out there and paying a lot of money and waiting a long time for an independent third party review of their code if they're doing things right right there's a number that are not but there are many that are there's no regulatory body requiring them to do this they're doing it so that they are adopted as a platform incredible because it's like when trail of grits announces that we did a year and a half review of some technologies that was not cheap right yeah I don't know so that industry whatever you want to call it web through the web 3 Community have succeeded in establishing a best practice that never happened before it took a regulatory pressure or some requirements some compliance issue to require that penetration test report right people weren't doing it because it was best practice they were doing it because they had to I've got one more topic and then we'll go to some questions and this is around complexity in all the reviews and we always say that the systems are getting more and more complex and complex systems are hard to secure and they fail in unpredictable ways when you're reviewing these talks how much of the underlying bug or the newness or the the the they're there that made you want to select the talk do you think is it is any of it related to complexity like the libraries are so complicated the code passes so there's so many third-party dependencies like a lot of these would not be issues but for this complexity or is",
        "yes there's more complexity but it's kind of not relevant anything are you talking about the complexity of what the researcher did or the complexity of the system they looked at it could be either it's I'm always curious that if complexity is always increasing does that just mean it increases for infinity and we're here when we're 200 years old and these systems look simple or is there sort of like a natural level at some point there's a maximum complexity level we're just not there yet that makes it so hard for researchers to understand it or because they're so complex they can only look at this teeny little leaf and they'll never understand the big picture and if that's the case that means we're as a community losing the big picture and I don't know if that's true I don't see the complexity I mean it's hard to imagine reaching a peak uh so that means forever yeah well who here show of hands thinks that we're on the path of ever increasing complexity with no end in sight",
        "no no so think to yourself because I don't know we don't know the answer what does that mean I don't think it means anything good besides employment for life I've had problems for our children yeah I'm an optimist here I think unnecessary complexity in systems makes them less secure and over time people are going to learn this and hopefully reduce the complexity to what's necessary programming and trust or yeah well there's so many things well programming in managed languages is one of them reducing attack surface and making sure that every feature is necessary is another yeah there are course corrections I mean you know entire frame you know frame ritual languages that make it harder to to make common mistakes that type of thing but you know meanwhile well these new languages are being developed for Frameworks being developed you know you also have like entirely new ecosystems popping up and so like the pace of those things are at odds with one another right I think the complexity is just this when you ask the question it made me think of uh there's there's this uh I guess it's basically a survey uh called the index of cyber security that Dan gear started um probably 15 years ago and has since handed off but it started off with a handful of individuals in the industry just you know answering questions about kind of how they felt the threat levels were and very pointed questions around their their uh kind of a temperature of the room yeah how do you how do you feel about the how are things going and then it would come up with like a number and anyway over time that num there's if you look at a chart that never that's never come down it's just increasing and increasing increasing I think you could probably look over 15 years and just the perceived level of of of of of threat and risk is always going up and I think this is one of those things as well yeah hmm",
        "yeah well I think you can I think you can't ignore is the big increase in the number of people using Technologies over the years and just the sheer number of Technologies now you've got uh Wi-Fi in your fridge that sort of thing right not mine well you are missing out and also like there's a lot of people who like to reinvent the wheel a lot you know because there is some research that was not necessarily like visible or something we see people are like Reinventing the wheel a lot you know that is a really good point it's something I think as a board you probably all face too which is somebody submit something they make a claim that it's new or novel yeah and it's very hard as a review board member to verify that claim because you can't just go to academic references so unless you've been in the scene forever and you say no no FX published something 15 years ago exactly yeah how do you know so I think as an industry we don't do a very good job of archiving stuff for the years yeah or having a referenceable yeah",
        "yeah I didn't even go farther if it was 15 years ago kind of doesn't matter or is this topic still exactly so bring it back nonetheless you know right it's not it can be like even more complex stuff like uh like programming languages you mentioned rest you know some friends who are talking about carbon versus rust you know like uh so rust is known to have memory safety but like the way the phrase it for carbon is like it's on an incremental path to memory safety it's like what does that even mean you know it means it's never going to happen you know so what would you try to do in your language to replace like C plus plus to like I think that's not as good as Russ you know it does not makes more sense and we see a lot of like side projects like this yeah and uh yeah I think it's also a problem and I also have a personal opinion on the fact that insecurities is probably like proportionally like the ratio of like software Engineers is product lower than in the past and you have more people who are used to like push buttons and use regex no I don't have the data on this it's my personal belief but I think it's also playing in the oh everything sounds like so complex and everything just because there's no we don't have the right people to like summarize it are the people being pulled away into Cloud Big Data something else",
        "lack of Interest no like overwhelmed also it's difficult I guess not to get into security party because there's so many things so the question is always like where do you start so it's easy to be misled on focusing on the wrong topics uh",
        "what's your opinion on that we are still talking about the level of technical content that we need to be addressing to be a cyber security expert we're still talking about the fact that cyber security is not just a technical issue and we need to address the skills gaps and um the the skills shortage and you know we should be looking at people from all backgrounds not just highly technical experts but at the same time at the ciso summit we had a whole presentation about how the schools are putting out badly skilled cyber security people who",
        "don't have enough technical knowledge unfortunately to be helpful I have um this is a couple year old story but supports your claim I was in uh in Washington DC or out right outside and I was uh supporting this conference and in the conference where a lot of universities and there's one one guy from University in public said this out loud at this panel so kudos for him for you know courage he said we are University XYZ we want to be a leader in cyber security and we want to be in the top ten we know we can't get to the top five that's you know but we want to be in the top ten within three years what advice do you have for me I said that's great um you probably want to get buy off that you can teach offensive information security to the students because if you don't understand how offense works you can't really teach defense",
        "okay maybe not the top ten yeah",
        "and he just see him run through the politics that he would have to go through with his Provost and his board of directors to explain that he's teaching students offense and he was like nope wow and so that's like a problem in a microcosm yeah is it almost seems like the bar like that would definitely put you in the top top five or ten to have a good offensive but like what we heard at the CSO Summit which I guess we're not supposed to say who is presenting but uh it was simpler than that it was that the cyber security programs that the",
        "undergraduate level cyber security programs are not even sending out students with the fundamentals of like you know networking right like if you don't understand like the basics of like tcpip and just like networking and how that stuff works but you have an understanding of like you know maybe what's happening in the policy realm of cyber or you know all those things that they're trying to put into the curriculum you can't get very far you have it's not all technical but you have to have a certain technical Foundation you have to be able to write some code it probably doesn't have to be great code but like increasingly actually it probably does you know as there's this crossover between Security Professionals and and you know uh software the bar is",
        "pretty low to be a great communicator to you know teach security awareness training right which is it no but you need to probably understand the priority when you're teaching it like this is why this is important or this is what so I guess that's the question we should ask ourselves like how deep do these people need to go to be effective in a role like that so we're out of time and so I'm going to give it a one round to everybody for closing thoughts any any points you want to make anything you want to leave something going to be even bigger next year I hope I mean generally we have a lot of people come from China in Asia and a lot of those people didn't travel because they couldn't so I don't see how it would get smaller amazing yeah okay so let's start I'll start with Chris any final thoughts you want to leave the holdouts the hardcore people that have waited it out here uh you know we're still seeing a lot of the same problems we're seeing it manifest in different ways I think as it applies to new technologies but we're seeing a lot of the same problems and so I think that whole theme of we have to be uh quicker at adapting the lessons",
        "that we already know we already know about vlogging we already know about like basic secure coding issues we know you know we know what things to do",
        "in a large part and they're just not getting done and so uh good job security",
        "but uh",
        "you know it's kind of more of the same it's a little bit discouraging uh on the sort of optimistic mentalism yeah I mean we are seeing things getting better In Pockets I mean we're you know sitting where I sit in application security we are seeing you know habits get better around software security and integrating security into the you know devsec Ops and things like that but like too slowly right way too slowly so we've got to get better",
        "yeah I agree I feel like Chris has said a lot of what I wanted to say already but but is Hardware slower or easier or harder yeah well I mean there's there's kind of complex challenges in Hardware in that um it is harder to fix things um it's like more complex than software but what I will say is also every year doing the hardware track I am so impressed by all the talks we get I think it's one of the most competitive tracks and yeah I am so amazed by the research we see every year so well I feel like there's a lot of problems I'm also really inspired so I think everyone should keep at it and I do feel like one day we are going to solve these problems or at least make a lot of Headway",
        "um um I would just probably revisit the application the ideas around the application of our security research Community to Innovation that's impacting",
        "everyone so the great example of us",
        "doing that is standing up the AI track which is a couple of years ago a bad example of us not doing that is not looking at things like blockchain which is changing the world and has a ton of security issues and um I think that we we get so in the weeds sometimes with Bud classes and you know really deep security researchers is great but we should still try to map that to what",
        "you know that sort of high level technology trends that impact everyone in our communities and try to connect those dots a bit more be a bit more open-minded about how this actually impacts people around us",
        "um yeah and I agree on the fact that uh like Chris said you know like it feels like some of the things the problems are always the same so is it because like uh",
        "things are moving slowly or because you are missing like new trends you know because like as a security as like the security industry were just like so focused on the same problem that we are missing right actual problems on like looking the motives of the attackers you know like why they do something and then maybe it's going to help us to understand okay like oh you know instead of like looking from the out or like finding the why um I'm really proud that we got through this without using the word fake news or Ai No I said AI you did drink",
        "and blockchain",
        "thank you all right well that concludes our session everybody thank you for attending um the videos will all be edited and put online eventually for free share with your friends we'd love your feedback we love getting your comments so we'll see you on the twitters and if you're around later this week we'll see you at Defcon thank you",
        "[Music]",
        "[Music]"
    ],
    "CiHFfXtsAsA": [
        "[Music]",
        "now it is my pleasure to Welcome to the stage Jasper Von vundenberg",
        "thank you have a good time thanks",
        "thanks everybody for coming it's great to be black at black and back back at black hat geez that's a tongue twister a couple of months ago I came across this picture and I just stared at it in awe for for a little while even though I know what it is it's kind of a cool piece of art and Technology it almost looks like alien technology if you if you look at it um so I've been in security for about 20 years Hardware security about 15. so I know what this this bad boy is um and you know if you don't you probably are carrying a couple million or a couple billion of this in your pocket as well um it's also the hero and the villain of our of our story today but I'll get into that into a second so like I mentioned I'm into security for a while um since last year I can call myself an author as well together with Colin offline I wrote a book on Hardware hacking and you might not be able to see it from the distance that picture is a little outdated it's more like like this now",
        "let's get back to that uh that pretty picture so what this actually is it's a um it's a flip-flop and the flip-flop is nothing more than sort of a one bit memory that is um inside any chip so it kind of holds the current state of the chip and",
        "it's both what we need to have chips operate but it also has a problem",
        "and to understand that problem we have to dig into a little bit on how these these things work so um a flip flop it's like a one bit memory cell if you will it takes two inputs a d which is zero or one and a clock and it has an output Q signal and all it does is as soon as there's a rising Edge in the clock it stores the value of D and from that moment on the value of Q the output becomes D and it holds this as long as the clock is stable or or on a falling Edge not so far so good that's sort of what it functionally does the problem that I was alluding to is that it actually leaks a bit of information so when the output switches from zero to one or one to zero the consumption the power consumption of the flip flop is actually a little bit of a spike not much obviously it's just one cell but it's it's more than if it's not switching",
        "so conceptually what you can do is if it's time equals zero let's say we know that the input value um is a is a zero or it's actually stored at zero and we measure a power Spike now we actually know that this bit has flipped from a zero to a one and if we measure the power being constant then we know that has remained the same",
        "so this becomes problematic when you look at algorithms like AES",
        "so AES is an encryption algorithm it takes in 128 bits of plain text it has 128 bits of key and it produces 128-bit cyber text then if you have a hardware implementation oftentimes you'll have 128 flip-flops that each store one bit of the state",
        "one of the first operations in AES is what's called a round key Edition and it basically takes the plain text and it exhorts the key onto it now the problem here at least it might be a problem is if we can measure the power consumption of each of these 128 bit flip flops individually because we can assume we know the plain text and if there's a power Spike that we know that the key bit was actually one because the value changed we xored it if the power stays pretty flat we know that the key equals zero so this is a problem I'm I'm gonna in this presentation skim over lots of details um so you can ask me afterwards but I'm not not intending to make this into a 30 minute power analysis lecture so there's some incorrectness here but you know just intuitively try to understand that this power relates to keys",
        "um there's not a problem though in my arguments which is that I'm somehow assuming that I can measure the power consumption of a single flip-flop now this terms to be a practical problem and even though it may leak you can really easily measure that",
        "so let's take a look at what we can do",
        "so what you see here is",
        "same flip flop again but now in its context inside of the chip design",
        "so you see all this quickly lines that's sort of inside the Flip Flop and all the other ones are the connections to the neighboring cells so this can be other flip-flops and anguits and or Gates and all that fine Boolean logic that that sits on a chip so let's zoom out a little bit so this is what it looks like you'll see more of these cells if we zoom out even further you see in these yellow bands you see part of the What's called the power distribution Network in the black squiggly still is our flip-flop there then we zoom out even further you start seeing sort of the edges of the IP block that this is in so on the left it's a little bit wider a little bit more space there that's actually the edge where sort of the bus comes out",
        "if we see about even further now you can start seeing a couple of other blocks so the one on the right is actually um Pico rv32 core which is a risk 5 really small CPU there's some memory interfacing Logic on the on the left bottom side and at the top you see a one kilobyte SRAM",
        "amazing the size we have did I mention this is a really old technology this tip",
        "so this is actually the full tip we we date this out as a test tip somewhere in June um on a 150 nanometer process so it's",
        "like like 20 years old or something but it's something you can do on a very small budget",
        "um so there's a couple of Pico cores in here and a couple as scores and that memory Etc we're just gonna play with it once we get it back do some side tunnel and fold experiments on it",
        "so we've sort of zoomed out from this one flip all the way to an entire chip and that we can measure so we can take a chip you see on the right hand side of this picture in the the green PCB you see another chip not the one I just showed you but you see a PCB we can do electromagnetic probing of that so you see a little probe over it we can do current probing that's the little yellow box to the side of it and I'm on the left you see an oscilloscope where we capture these these signals and for the purpose of this talk I'm going to talk about power analysis electromagnetic analysis is similar in a way enough that I don't have to talk about the differences here",
        "so how can we",
        "use these signals to actually extract the full key because we we can't measure the individual flip flops but what we can do is we can take lots of measurements of AF operating take power traces take en traces and then perform a",
        "magic trick called correlation power analysis and what's CPA for short what CPA does is you take an AES engine you send it various plain texts differing plain texts and what you're going to try to do is you're going to try to model what the power would look like if a certain key byte would be correct so I'm going to say well if my key byte is zero then I kind of know by the design of IES what bits flips I should see given a certain plain text and I can match that against the trace if my match is correct and I say well that's probably a right part of the kit I'm doing this for a sub key so in this case a key bite I'm making 200 256 predictions I'm going to do that for each key byte and sort of the one that matches my where the model matches my link it's best I'm going to call that the right key and I read some repeat this 16 times and then I have the full key um so this is again bit hand wavy but just for you to get an understanding we can apply statistics and sort of using this modeled power consumption we can match it against reality and find out what the what the key should look like",
        "there's a problem here um we're doing this post silicon so we have a chip actually in our lab and you know as soon as you find leakage you're too late you can't fix that chip anymore you you know you feed it back to the manufacturers and they say thank you and we're going to fix the next chip iteration or maybe two down the line depending on what their manufacturing pipeline looks like um so yeah with post silicon we can fix the next chip and what I'm going to try to argue today is pre-silic and we can fix the current chip",
        "and we do that by simulation the chip doesn't exist yet so this is the best we can do so what are the ingredients that we we need for this",
        "that's sort of four basic uh ones one is is that chip design so you need what's called a net list and the net list is nothing more than basically all the gates in the chip and their connections so much if and Gates or Gates not Gates Etc plus the connections between them that's a net list ideally you also want to know where things are placed but for the purpose of some simulations you don't then we need to know the behavior as well so if we send a particular plain text to to this net list what are all the toggles that are sort of logically happening so for each of the gates you kind of capture the state is it you know outputting a one or a zero over time and you put this in what's called a vcd file so that's sort of the logic side then in order to convert that logic to power we need models for each cell and these are contained in what's called Liberty files basically for every cell it explains when transitions happen what the power consumption is so all of these inputs you feed into your favorite Power simulation tool and you run it on your your beautiful Mainframe that you have in your lab and then you can essentially do the same we did before with the power traces but before I get into that that Mainframe isn't very fast don't do it on that one actually um but on a modern CPU these simulations are actually quite doable so if you",
        "focus on what you see in the Stables is a number of AES cores we've tried this on and in the right most three columns you see for different simulation accuracies",
        "so one at RTL one both synthesis and one post placing round how long it took for us to simulate 256 traces and this all varies from half an hour to like 13 hours or so um so definitely not like entering you have your results but this is something you can run overnight and still get a bunch of traces",
        "so just like with your oscilloscope before we now take these same traces we run plain text so we run our modeling we run our CPA and out comes leakage or not",
        "and that usually shows up like you know some sort of correlation Trace as we call it with a peak somewhere and that Peak indicates well at this point in time there's a statistically",
        "um significant leakage it's something that could be exploited to get keys out of a system",
        "um there's a problem with this how do I how do I go from this to actually fixing my design and that's kind of where the research that we did starts so when something leaks doesn't actually help fix it you can only observe that it leaks and at what point in time but it doesn't tell you like you know these are the gates if you have to go and fix so that's where our research called skate comes in it's all blue team stuff",
        "we're going to go fix stuff now so if you're a red team or you know go on to hacking um so we know when in time something's happening but but where is it leaking so the idea behind this is that we are going to correlate net switches to uh to a leakage model so essentially what we're going to do is we're going to take the logic on a chip and remember as soon as something switches it consumes more power so if we see during the when period so on the right hand side we call the red box the leakage time interval but basically the part of the time when something leaks and we can statistically look at um you know the peaks in power there as well now if a particular net",
        "always sort of seems to correspond to its switches with a higher Peak on the right hand side you can argue there's actually a statistical relation between those two so you can start going down to Nets that leak inside of a chip and what comes out of this is basically a ranked list of leaky Gates so you can start arguing you know in in this small contrived example it's",
        "actually the S boxes that seem to leak so let's take a little bit deeper look at the math here so um when we have these vcd traces what we're actually going to do is we're going to apply a very simple transformation on it because the theory is as soon as something switches it will consume more power so our power model is as soon as a particular net switches it consumes power one if something doesn't switch then it assumes power minus one and that's enough of a power model like we're doing correlations on this we don't have to do anything too fancy and we calculate this for every net and for every simulation that we run",
        "then we take these these test vectors and we're going to match for every net for every simulation where do the toggles basically align with small increases in power and if something doesn't toggle where does it align with a lower power consumption",
        "and from that we do basically a Pearson correlation so we can correlate for every net how much it contributes to the uh the power linkage and that gives us basically the point in the tip where the league is at the very lowest level like we're talking about Nets which you can which are driven by an output gate and you can go back to the gate where it leaks",
        "so once we've established that we can start sort of zooming out again because individual gates are also it's if you're a software person it's looking like at like individual bits of a binary right that don't make a lot of sense until you start sort of reverse engineering and ideally going back to your source code where where that particular piece has has meaning again so similar in in Hardware design so",
        "um Hardware Designs are always sort of hierarchical so what I showed you before in terms of the chip layout we have the top level as they call it then we have you know the risk five cores and a bunch of AES scores and I zoom into AES and that has like a round logic and inside the round logic there's s boxes and you know it goes all the way down and eventually you get to individual Gates so if you tell your synthesis tool like maintain the hierarchy or track the hierarchy you can go back from gates to basically parts of the original design",
        "and what I find kind of cool this is one of our earlier results where you know you never know when you start applying your method what's what it's going to come up with but immediately we saw that that the S boxes sort of floated to the top so this long list is basically parts of the hierarchy the individual dots you see are individual Gates and the shading is that that correlation value so the the darker the color the higher the correlation the more it leaks and the more dots the more of these Gates there are in a particular part of the hierarchy so you see those S boxes they have the most Gates and also the highest leakage and that's where you would expect it this was an unprotected implementation so this was really sort of a nice validation of what we were doing there's also some other parts of the hierarchy where it's obvious like there's round key generation and key memory but there's other stuff that where the name doesn't really say hey I'm leaking to me at least like block registers and who knows what so this analysis already starts showing some areas where you won't necessarily think there's leakage",
        "we can go up even further this was another experiment where we took yet another AES core on the left top left you see this Picos slash g something so these are the gate numbers that come out of the synthesis tool and each of them is related back to basically a line and a character in The Source Code file and this is part of that leaky gate list and it was kind of cool to see that at least these four Gates they all went back literally to the xor operation where we took data and key and we mix them together so this is that add Brown key operation I was talking about earlier as well",
        "um so yeah from from sort of very high level and doing statistics we went down the gates and then we went back up to the source code but now we're sort of in in the land where developers can do something about it right now you know where your problem is",
        "so",
        "the next step is counter major testing so the attacks that I'm just talking about they've been around for two and a half decades or so now so people have been thinking about all kinds of counter measures for a while um and obviously when you put them in Silicon you can measure them and again there the problem is if you find leakage it's too late so let's do counter measure testing in simulation",
        "and really the question that you're asking is it doesn't work right before you write your code you don't really know if it's very heavily armored or whether it's fluffy",
        "um",
        "I have to bore you a little bit with with masking so masking is a a common",
        "countermeasure you can look up there's various literature about it um really what it's doing intuitively it's it's trying to break the relation that CPA is exploiting so with CPA we take like data which we know and an unknown key and we're going to start making predictions about this key what masking does is it adds a third variable so we have data a key and some random variable that keeps on changing every time and we can't predict this it actually breaks our ability to",
        "um to match the leakage model to the data that's being processed and masking work this is masking in AES on the left hand side it's sort of vanilla as on the right it's with masking you see everywhere these plus x's and these are basically xor operations where we xor some mask onto the data and what's really important is that you make sure that your data is always masked and that the mask regularly rotates there's some other attacks that you can do if the mask is constant everywhere so you see this variable X keeps on keeps on changing and then eventually sort of at the end of AES you unmask your value and then you have the ciphertext",
        "so we did a case study so we implemented our own AES design and we added some just off the shelf literature masking to that",
        "and first we turned off the masking so we're the same design but we could turn it off or I think we basically made the mask always zero or something like that so we didn't change the design we just turned off masking and what we can do then is run our CPA",
        "um in this case tvla but let's let's just say CVA the CPA and we see these red dots which basically indicate when there's leakage so we know that this thing leaks that's as predicted there were you know counter measures were off so what we're expecting is now that we when once we turn the countermeasures on all these red dots should disappear according to Theory at least",
        "of course that didn't happen so on the left hand side you see the no masking picture on the right hand side you see it with masking and even though the number of leakage points went from 10 to 5 there was still leakage there and it was significant and it would be enough to to break this implementation and we kind of",
        "we didn't understand it at first because when we looked at the source code it all looked fine like The Masks were being passed so we used skate and we started going down to the gate level and trying to figure out in this case we actually had to stay at gate level to figure out what was going on and what turned out is that um the synthesis tool for software people your compiler",
        "decided to optimize this design and it flipped two X4 operations around now these two operations happen to be the remasking so normally when you remask you first apply the new mask with an xor and then you xor out the old mask so that you never have sort of an unmasked value but the synthetics tool is optimizing and somehow these tools never optimized for security and it flipped these things around so it first unmasked which means that the values are in the clear for a little while and then it remastered so it completely threw off the countermeasure",
        "so yeah once you have that insight and you dig into it then you can find out what's going on you can tell your since the synthesis tool basically don't optimize certain things and then it maintained the operation and on the right hand side take note of the y-axis here that's a bit zoomed in there's no more red dots essentially the leakage is gone as we as we would have originally expected and when you looked into that list yeah the orders of the Mask was was maintained",
        "well that's all uh really nice but",
        "it's not just about the AES core itself and that's I think an Insight that we've gradually been been getting as we dig more into the details because historically sites at least from our point of view as a lab we were just testing chips we didn't have designs we didn't have this kind of insight like it either leaked or it didn't and we kind of knew what the position on the chip was where it leads if you're doing em um but now we have sort of an unprecedented look into all the details of what was going on so like let's let's just zoom out a little bit and take an entire SOC and then try to simulate that because maybe the AES score is fine but we don't know if the rest of the house is on fire so",
        "we took an SOC which is a little different than the one I just showed you um but it's basically a small SOC with a CPU cord some peripherals some memory and an as accelerator and we loaded this piece of software on it and basically what you're seeing here is that it's in sort of in the blue instructions there it's first loading the plain text so it's loading 32 bits for memory and then it's storing it in as engine and doing that four times so it transfers 128 bits and it does the same for the key so it's loading 32 bits at a time storing it in the as engine and then the CPU Basics says go encrypt and it's going into a busy weight so it actually just kind of pulls the as engine for you know are you not 999 are you done are you done um so we put this in our power simulations and",
        "this is sort of a very common look if you you're used to looking at powered faces where you sort of see the CPU doing something first on this case we know it's writing the plain text in the key then it switches to the AES engine says you know go and you see sort of this higher active like as engines that have a lot of switching activity way more than the simple CPU here so you expect more power consumption and you see that here if you squint a little bit you can see like a rep like 10 round repetitions happening as well we started 10 rounds of AES and after that the CPU takes over again and retrieves the the ciphertext",
        "um what I found really cool is you can actually see some of the sort of the internals of the CPU Behavior as well so um from your computer architecture 101 class you may remember pipeline hazards and pipeline stalls so what's happening in the CPU is when it fetches to 32 bits from memory it actually already starts executing that store instruction but the store instruction needs to wait for the data to come in to the CPU before it can actually do the store and you see that in these little divots in the in the power consumption there so you see this really you can kind of kind of Trace every instruction through its execution and then near the end the CPU kicks off the as accelerator and then it's kind of holds there",
        "now",
        "apart from geeking out over that let's let's go back to leakage so this was again an AES Engine with no counter measure so we expect leakage here um but what we also saw",
        "maybe not entirely unexpected was a whole bunch of leakage before the as engine even started",
        "so you see a couple of little Peaks that align with round one of the AES that's just leakage from the as engine but there's a whole bunch of stuff happening before that and",
        "it's kind of interesting if you look at this from from a designer's point of view because very often you have a hardware designer who makes an AES engine and they'll work on the counter measures and maybe they'll even simulate it and they figure out it's all fine um and then there's also a software developer who says you know I'm just following my the you know I'm writing my code in C micro architecture or sock layouts are",
        "not my domain I can't really fix anything there but maybe there's a whole bunch of leakage that's happening there so there's sort of a gap when you when you engineer these chips and who really looks at the leakage that's happening outside of the AES engine",
        "and we can zoom into that a little bit further because we can locate where these gates are we can locate where they are in hierarchy and we actually find that there's a whole bunch of leakage that's happening in the risk 5 CPU which you may expect right it's handling key material",
        "um it's kind of cool that you can kind of see where it is it's in alus and in the register files Etc but what surprises is that's actually the peripherals were leaking key material as well and that's surprising because they're not it's not their job to deal with key material at all um the problem is they're hanging off at the same bus as the CPU and as engine so as soon as key material is being transferred over that bus there's some transistor activity there even though they might not actually do anything with that data there's still some switching activity there that sort of amplifies the the leakage so yeah one of our conclusions here here really was look it's just found an unexpected places if you don't look here you're not going to find it so um a little bit about future work um future work meaning we dream of this it doesn't exist today um one of the insights we had is um if you look at the Leaky Gates only in the design it's actually quite a subset of the full design so I'm going to talk for instance about AES counter or AES mask encounter",
        "measures these things doubled area which is expensive",
        "um if we can isolate the leakage to like 10 30 of the design even if we would",
        "like double the area on only those Gates we'd still be cheaper than doing a full-blown masking so we're sort of looking at this from an encounter measure injection standpoint like if we have this list of gates can we do a netless transformation to get a more secure design out once you have that you can also start thinking about design space exploration so Hardware designers are often trading off power performance area and security is actually a fourth dimension in that so security comes at a cost tighter power performs their area so once you start looking at security as hey we have a list of leaky Gates I can try applying countermeasures on the top 10 Gates and on the top 100 gates in the top 1000 Gates and see how it affects my power performance in area and as a designer I can start making these trade-offs between security and you know the cost of it",
        "and then finally in um in Hardware design there's sort of an important Point called sign off where you take various metrics over your design you say okay this is good enough to go into fabrication and really what we would love to see is basically a security sign off as well or we said this is secure enough to go into fabrication and we can come up with a bunch of metrics based on on side Channel analysis that that could help that",
        "um before I get into conclusions some some caveats so these simulations are",
        "limited by how many CPU cores you throw at it but also the design size so you didn't see the latest you know Intel 12th generation 4 in my slides because that's not stuff we can simulate but you know AES scores simple socs definitely",
        "something that's that's within reach and you could theoretically throw more CPU core than the simulation as well and speed it up that way um accuracy wise we're relying on these Eda simulators so the reason we taped out that chip which is coming back in October keep your fingers crossed that they actually work um is so we have a full design we can run it through skate and we can look at the Chip And basically cross cross check our our results with with reality now these EDI simulators aren't new they've been you know trusted and tried for a long time but there's been new in this side Channel or new users inside sales is kind of new so that's that's really the use case we're testing",
        "so concluding",
        "um both silicon we can fix the next chip if we find leakage but with pre-silicon we can fix the current chip but only if we know where the leakage is if you just know when that's that's not actionable",
        "um we also find that it's just doing manual review of designs is not sufficient you really want to approach this with Statistics simulations Etc because the leakage is found in in unexpected places and you're not going to find it if you don't know don't know where to look um what gets me excited actually even though I apparently know a little bit about side Channel analysis to actually do this analysis you don't need that much knowledge about it so these tools are",
        "sort of within the domain of Hardware developers and those are the people who really have to fix it in the end we don't want everybody to have to become a side Channel expert",
        "and then yeah there's a couple of interesting uh future directions in terms of automatic counter measures sign off and the Silicon validation that I just spoke about",
        "so I didn't do this alone um I stole a bunch of slides from um one of my Escape colleagues Patrick Soma the WPI",
        "um yeah I've worked together with a number of institutes so WPI Purdue and then rescue and intrinsics are two industry Partners we all made this happening happen",
        "um one cool shout out I want to do is to the zero to Asic course if you want to get into Hardware um maybe even tape out your own chips design go talk to medfin and follow this course I've done it I've had a lot of fun and you know with the basic basis for the chip chip out we did and I don't consider myself a hardware designer at all I'm not but I made it work",
        "um and then there's a scientific paper here on an architecture correlation analysis can have a look at and if you're interested in the Hands-On not the simulated side of Hardware hacking you can also check out the book that Carl and I wrote and with that I have four minutes and four seconds for questions [Applause]",
        "[Music]",
        "[Music]"
    ],
    "U1x2MGdIWkA": [
        "[Music]",
        "thank you",
        "picture this you're in a manufacturing plant you're standing next to a dangerous piece of equipment it's powered off but it doesn't sense that you're close by so it suddenly restarts talk about a bad day real-time locating systems aren't just used to find a parked car or a lost item in your home so security flaws in this technology especially in industrial environments can be deadly I'm Roya Gordon this is Andre palanca and Luca cremona we're on the research team at nazomi networks and today we're presenting on Ultra wide band real-time locating systems and how seemingly secure radio communications May Fail in practice this is the first time we will be revealing these zero days and we're happy to be doing it on the black hat stage",
        "okay so what is ultra wideband and what does it have to do with real-time locating systems and for the remainder of the talk we will be using the terms uwb and rtls so Ultra wide band is a radio frequency used to transmit information quickly over short distances and through solid objects it's preferred for rtls which is mostly used indoors where there's lots of barriers",
        "a real-time locating system is a technology that uses signals to locate stationary and mobile objects if you take a look at the diagram on the screen you'll see the three main components to this technology you have the tags that's attached to a person or asset it transmits location data to the anchors the anchors submit that data to a server where it does all the processing and the Computing and then displays it in the screenshot",
        "so rtls is used throughout several Industries it's used in smart cities for management of mass transit it's used in smart buildings for Access Control it's used in smart retail for hands-free payments I mean the use cases are endless so any security flaws in this technology can be pretty widespread",
        "alright so what motivated us to do this so in 2020 the IEEE released an updated standard increasing the security of wireless network communications they added cryptography and random number generation to prevent threat actors from eavesdropping and doing other manipulation tactics on uwb great",
        "everything is secure we can all go home right not quite upon further research we saw that the synchronization and exchange of location data was considered out of scope by the standard leaving the burden of securing these communications strictly up to the vendors which can be puzzling",
        "challenging and even a little intimidating upon further further review we saw that there wasn't really much research out there on this specific topic and so the research was born and with that being said I'll pass it over to Luca and Andrea to get into the scope and methodology",
        "Okay so during the introduction we see how ultimate vendor TLs are widespreaded technology can that can be deployed in many situations for a large variety of use cases in the following slides we will see the scope of our research but in terms of industrial scope and Technical scope",
        "so for our research we focused on two different sectors Healthcare and Industrial the reason why our choice is to fold from one side those sectors were affected by an increasing number of cyber attacks in these last years while for the other side those sectors use ultra webender TLS for safety purposes such as employee and patient",
        "tracking then for for contact racing you know that in those last years with the kovid we need a system that is able to raise alert Whenever two people get close too close to each other so contact traces for this and then geofencing geofencing is can be seen as a set of rules that can manage the access of people in maybe",
        "restricted access areas",
        "so once we defined the industrial scope",
        "we moved on with an analysis of the ultra wet band rtls kits that are available in the market we consider some aspects such as availability time to delivery cost reposit feature and at the end they will choose these two ultimate band kits as representative for the market the first one is the savior indoor tracking rtls Ultra wet band the Wi-Fi kit and the second one is the availability Artemis Enterprise kit",
        "so normally in Ultimate band rtls",
        "scenario there is a target which is communicating with the set of anchors deployed in specific positions of a room by means of ultrawide band signals those anchors besides communicating with each other again by ultimate band signals are communicating with a central server using a standard media technology such as Ethernet or Wi-Fi",
        "security researcher is exclusively",
        "focused on the analysis of ultra wet band signals this is the first researcher that is analyzed in the communication on the Internet or Wi-Fi",
        "Okay so",
        "there are many algorithms to locate Assets in any kind of environment to better clarify the procedure and understand the preconditions that are necessary for an attack it is worth doing a brief analysis of the fundamentals",
        "oh sorry",
        "okay so there are two kinds of packets exchanged among anchors on server synchronization packets and positioning packets delcos clocks are usually not in sync with each other for a variety of reasons a clock drives different buttons Etc thus a synchronization schema is necessary one of the most common ones is the Wallace synchronization schema so periodically a reference anchor sends an auto advance signal that is reserved by all other rankers the reference one stands to the artilla server the instant at which it has transmitted it inside the synchronization packet the reference was the insert at which they have reserved it the server uses the information to build a common notion of time positioning pocket instead are used for tax localization purposes as anticipated by lookup a Target medicine that is received by all anchors this sent to the server there isn't at which they have received it inside position in packets okay so you can see our formulas at the bottom of this slide but don't be scared he will give you the main Concepts however for the hacker Galaxy our white paper contains all details now there are many synchronization of algorithm and literature in this work we use the linear interpolation algorithm that is a simple yet effective way to achieve synchronization in nutshell the idea is that the rtls server at each algorithm iteration and on the basis of the synchronization packet process so far estimates the clock skews between each non-reference anchor and the reference one and then converts all positioning packets to the global transform domain those converted timestamps are called Global times we cannot immediately derive the distances from the global times because we are missing a transmission instance the target doesn't send this information to other rtls server what we can do though is to correlate the difference of global times with the difference of distances this is exactly why this algorithm is called time difference of arrival finally by putting together all equations this is the final linear system of equations that allows to get the position of the tag as you can see from the system in order to obtain the position of the tag we need three pieces of information or coordinates of the anchors involved the synchronization timestamps and the position in timestamps",
        "okay so after studying the background",
        "and the theory about tdoe algorithm we",
        "move on with the reverse engineering",
        "activity in order to understand the tdoa",
        "procedures that are executed by the anchor and the server in order to be able to dissect all the traffic understand how the network traffic is processed and then we did also some Security checks on this system",
        "these lights show a virtual screenshot taken while while analyzing the Savior",
        "Network traffic",
        "as you can see save your Ultra weapon kit but also the value one use a custom unknown binary Network protocol for the communication between the anchors and the server no common data structure can be found so a reversing engineer activity was needed",
        "in order to be able to dissect all the the traffic",
        "so we started from the source code you can find on the left of the rtls server for both the Savior and the value value Ultra wet band kits we were able to completely dissect the traffic by analyzing the source code and then we formalized all our activity in two",
        "Wireshark this sector that can be downloaded from The Briefing page of this session or from the GitHub page of",
        "our company",
        "while performing the reversing engineer activity we also focused on some security aspect about the communication from the anchors to the server we mainly focused on two aspects which are confidentiality and the Integrity of the data and guess what both save you and the value ultraviolet bed kits are not able to guarantee either data confidentiality or data",
        "integrity",
        "data confidentiality as you can see from the top right picture all the location timestamp and the synchronization timestamp are sending clear so no",
        "confidentiality can be guaranteed for a concern data Integrity both the ultra Ultra wet band kits using non-secure Integrity mechanism for example say if you use a crc16",
        "while a value as you can see from the bottom right picture use a bytewise sum",
        "of all packets as a hxm",
        "okay so in the previous section we were able to conclude that there is neither confidentiality nor Integrity protecting the timestamps however in order to get the position of the tag we still need the anchors coordinates according to the test done the uncose coordinates are manually input of the first installation of an rtls and then never transmitted again through the network this turned out to be the most challenging requirement for an attacker I can make a difference in the ultimate ability of estimating the position of attack or not if the attacker has physical access to the monitored area this problem can be solved in a variety of ways if tankers are visible it is Trivial if dankers are not visible attacker can still estimate their location for instance by measuring the overall level of that transmitted Wallace signals with them with the web and Wi-Fi or other as a matter of fact according to the test done the anchors code yes do not need to be super precise in order to get the position of attack distracted you can see on the slide correlates the average error of the attack coordinates while buying the error the Anchor's coordinates used as the import as you can see from this chart if 10 cross coordinates are estimated with the neglect is less than 10 percent or about 10 percent the is that intact position is going to be estimated with inaugural it is less than 20 percent but this is about 50 centimeters in a six times four meter room and is definitely enough to perform attacks per centimeter level Precision is not really required however what if the attacker is removed as a matter of fact this information is never transmitted through the network nevertheless there is a technique that remote attackers can apply that we devise and we are presented to you right now so together with the time stones and Constance me to the rtls server also the power level information of the resultable band signal this allows the rtls server to filter out polar reserved Communications with this information the rtls server computes two different metrics the first part of our level that is the power level just for the first pass signal and the recipient power level that is the overall power level of the autonomous signal unfortunately we cannot derive immediately the distances from the power level information because those wouldn't be precise enough as a matter of fact they are too dependent on the environmental conditions that exist in a given moment however if in a given moment the power level information that comes from all angles is almost identical the targeted emitted diesel turbine signals can be considered about exactly the same distance from all of them but if this is true the first equation goes to zero and remembering that by definition the clock screw of the reference Uncle with respect to itself is one and the time of flight of the reference cycle with respect to itself is zero an attacker can now have enough information to estimate all time of flights between each new reference Sanko and the reference one and thus their distances okay but having the differences is still not enough we need the coordinates to this accident an attacker can leverage an installation constraint of rtls as a matter of fact thanks to the dilution of precision phenomena that correlates the position error with the ankles geometry ACLS vendors require that anchors are deployed in a shape that is as regular as possible ideally it must be a square at most a rectangle however given that we know the distances and given that now we know that the anchors map is going to be as regular as possible and most times the rectangle by arbitrary stacked in the reference anchor in position zero zero the coordinates of volada rankos can be easily estimated because they will be given simply by the two shortest distances and of course an attacker can adapt to estimated shape on on the basis of the number of uncles detected in the communications this was actually faster than the value of TLS by monitoring a moving tag for about two hours notably this chart is depicted in the slide correlates the average error of the uncose coordinates while bearing the acceptance threshold of the first popular level this shot means that if we set acceptance threshold the first power level to one percent the anchors coordinates are going to be estimated with the negot it is less than 10 percent but if we remember from the previous chart this translates to a novel error of the attack position it is less than 20 percent and that's those 50 centimeters that was previously mentioning but this means overall the completely remote attack can have an estimation of the anchors coordinates and thus can have an estimation of the attack position and thus practically Mount attacks against this system which attacks I will let Luca explain you all",
        "okay so in the previous slides we saw how to get the tag position starting from the timestamp that are sent from the anchors to the server in these slides we will see the adversary taxi tactics techniques and procedures that is the behavior of an attacker that wants to do an attack to",
        "those kind of kids so to perform any meaningful attacks against rtls an attacker first need to intercept all the network packets to do this first of all he needs to to get a foothold on the network that is used as for the communication between this the anchors and the server and then if needed he needs to execute a man in the middle attack in order to fetch all the packets so both save you and a value Ultra Ultra wet band kits allows Ethernet or Wi-Fi to access to the network backhaul",
        "in case of ethernet in order to access the network an attacker either needs to compromise a computer which is inside the network or add a rock device that will act as a network tap the complexity of those kind of attacks depends on the network topology and more precisely on how the net the the anchors are deployed within the networks for example if the anchors are deployed in more than one sub networks for an attacker it is sufficient to gain a foothold on one Subnet in order to be a be able to see all the traffic",
        "so for what concerned Wi-Fi uh both the",
        "ultimate band kit We examined the support vpa to psk as a protocol for",
        "secure the network communication so uh",
        "this time to gain access to a Wi-Fi an attacker needs to either know the vp2",
        "psk password or exploit some",
        "vulnerabilities if any in a network",
        "appliance which is inside the network where we wanted to do the attack as for the first point out of the box both the solution provide a custom um a default password which is the publicly available on the documentation which is on the internet and everyone can access it so the asset owner the final asset owner if is not going to change this default password on this kit for an attacker it is Trivial to access this network",
        "so as I told you before as a second step an attacker may need to perform a man in the middle attack in these slides we show the output of our men in the middle attack and the screenshot from water shark showing that",
        "once the event in the middle attack is launched we are able to see all the network traffic from the anchors to the server and vice versa",
        "noticing that for both the kit we realized it was sufficient to execute",
        "the standard ARP attack to be able to execute them in the middle attack and also it is worth noticing that the attacks were completely undetected by the rtls and no warnings or abnormal behavior that may alert an operator version",
        "so at this point we launched the men in",
        "the middle attack we get access to the network then we are ready to start fetching the position of the tags",
        "so picture number one show a possible position of a Target in a certain environment",
        "then we need to intercept all the traffic and now we know how to do it and then we need to apply a standard time difference of arrival algorithm that are available in literature to be able to compute the position of the target which is shown in each number four in our own application or environment",
        "at this point a logic question is it is possible to perform an active traffic manipulation attack well the answer is yes of course to do",
        "this an attacker needs to perform a two-step procedure from the first step he needs to perform a tag a target a recognizance and mimicking the aim of this step is to monitor the normal",
        "behavior and the normal movement of the tag within the environment it is in in",
        "order to be able to replicate this behavior and so a possible",
        "a possible monitoring system is not able",
        "to detect uh some abnormal behavior of",
        "this tag the Second Step consists in an active traffic filtering the key idea in this",
        "for this step is to leave the traffic as it is as far as possible so all the synchronization packets and the location packets that are",
        "um that refers to tag we are not interested in needs to be directly forwarded to the destination while location packets that",
        "are referring to the tag we are interested in in attacking needs to be change and modified change the payload",
        "change the timestamp and then send it to the destination for this work and for our demos we leverage nfq which is a flexible user user space packet Handler provided by iptables and the key idea",
        "behind the nfq is to store all the packets in a temporary queue then so that we can process one by one and then we can send the modified packet to the destination",
        "so now we know everything the last thing",
        "we need to do before really be able to",
        "perform an attack is to really modify",
        "the packet content",
        "um so to do this uh you can notice in this slide that the four bottom picture are the same one as for the passive if this dropping attack we showed before but in the reverse order the reason why",
        "is that in in the previous case we started from the network times temperature to reach the tag position in this case we start from a certain type position which is the one we need we we want that the tag is or the tag will appear to the operator and to obtain the timestamp that makes",
        "this tag be in that position okay so this time we choose a certain position like in picture number one that we apply the tdoa algorithm in backwards",
        "so that we can compute and we can get the timestamp we need for the the for a certain position of the tag we need to recompute all the checksum reapply the checksum and then we can send the packet to the destination",
        "all right it's demo time so we're going to demonstrate how an attacker can exploit the vulnerabilities we discovered um in three attack scenarios",
        "so our first scenario is locating and targeting people in assets we show how a threat actor eavesdrops on the network traffic in order to locate and Target an",
        "asset why would they want to do this they could want to stalk someone they could want to locate and steal something or they could just simply want to learn the environment let's take a look",
        "this is our victim in the first video wearing the tag",
        "so we're first going to see how tag tracking works as normal",
        "so Andre has been working all day sitting at his desk he wants to stretch his legs so he's taking a stroll around the office beautiful day in Switzerland",
        "now because he's wearing the tag the rtls server shows his movement and as you can see everything is accurate all is normal",
        "now let's see how a threat actor can manipulate this to eavesdrop eavesdrop on the network traffic so on the left is a Wireshark packet capture it shows that there's no location data populated therefore the Red Dot that's up at the right it doesn't move but once the man in the middle attack is launched all of that location data is loaded and now we start to see the Red Dot moving so this is what the attacker is able to see now let's compare it with the actual rtls server",
        "so on the right you have the attacker view which is identical to the actual rtls view what's most concerning about this is that there's not even an alert generated of this compromise so this is what eavesdropping on an rtls server looks like",
        "okay so in our second attack scenario we show how a threat actor can manipulate an rtls server that's used for contact tracing like in covid-19 and for the purpose of this you know no one has covid but for the purpose of the demo someone has covid so we can show what it looks like to fake contact or to be in contact with someone who has covid but it looks like you weren't in contact don't worry we'll explain it in the demo",
        "okay we have the two victims in the in the demo here wearing the tag now we're going to show you how contact tracing works as normal",
        "okay they're both wearing the tags you see they come into contact with each other and an alert is generated showing that there was a covid encounter",
        "so let's see how a threat actor can manipulate this to fake contact",
        "Andrea just walks past Luca no high no nothing",
        "now when the attacker launches the attack it shows that they in fact came in contact with each other which is not accurate",
        "and then an alert is generated to show that someone came in contact with kovid again which is not accurate now let's see how an attacker can manipulate this to fake avoidance",
        "Andrea's feeling more social today",
        "now when the attack is launched the threat actor is able to manipulate the positions to show that they didn't even come in contact with each other and because of this there's no alert to show that someone came in contact with covid and we know how damaging that could be",
        "so our last and final demo is geofencing so we configured a scada system from our production line demo in our lab to listen to rtls geofencing alerts to control a motor in two ways to either start or stop depending on if a worker is inside or outside of the geo-fencing Zone let's take a look at what this looks like",
        "here's our victim in this demo wearing the tag now this is our production line demo in our lab it shows the motor rotating the flasks and then there's a machine that's scanning the barcodes",
        "now here's how safety geofencing works as normal",
        "so you have the worker approaching the production line everything shuts down because he's within the geosensing zone however when he leaves production resumes as normal because he's outside of that safety zone and you can see it in the rtls server here the tag is within the geofencing zone an alert is generated to shut down production and then when the workers outside of that zone there's another alert generated to resume the production line",
        "now let's see how a threat actor can manipulate this to stop a production",
        "so as you can see no one is around the production line all of a sudden there's an alert and production stops",
        "let's see how an attacker did this so they launched an attack and they manipulated a tag and put it inside of the geosensing Zone because of this it generated an alert in it shut down production but as you can see there's no one around the production line and all is safe",
        "now let's see how a threat actor can do this to restart a production line with workers nearby",
        "okay so we have our worker at the production line the warning light comes on everything stops as normal but when the attack is launched the threat actor is able to manipulate that tag and take it outside of the geofencing zone and because of that production now restarts putting the",
        "worker In Harm's Way just imagine this happening in a manufacturing plant and the harm that it could do to workers",
        "this concludes our demos thank you okay",
        "so having shown do I guess this system",
        "it is not work nationally without the possible mitigations that an acetona can apply the first logical mitigation is the modern TLS into a segregator network and security success both physically and logically this is not mandated by San Martellus vendors the advantages of this solution is that it is relatively quick to deploy and can be enacted basically using very traditional Network Security Solutions however some challenges need to be considered first things first the atlas server usually has two network interfaces when I touch the background Network the other attached to the management network from which operators connect if the square Network it also by default the most rtls Services tend to expose the core network security services are not interfaces by default for Simplicity reasons so if those core Network Services are not adequately filtered from the management Network there could be room for general service attacks an attacker wouldn't be able to enact the attacks we have shown so far because this missing Vital Information however by fasting packets against the score Network Security Services it might actually be able to block the update of that position and thus tamper with Joe fencing and the contact racing roosters we are just we are just sure additionally if an attacker managed to physically touch the wild or compromise the wallet password at that point there would be nothing preventing them from successfully enacting all attack shown so far the second mitigation is to add an intrusion attraction system to the Buckle Network as a matter of fact as an attacker is bound to drama in the middle attack by monitoring for signatures such as new links between nodes and intuition detection system available on the market can perform these kinds of attacks the advantages is that it's very quick to deploy it's pretty much like on play however again it is inherently vulnerable to a physical man in the middle as a matter of fact even the worst case the active traffic manipulation attack the crafted traffic will be undistinguishable from the legitimate traffic if it precisely mimics the natural movements of a Target ultimately the main problem is the lack of Transport protection measures thus the most effective Mitigation Of An acetona can apply is to add an encryption Integrity layer on top of the existing Communications as a proof of concept and with the goal of using already well-known tools we attempted to to add the sssh tunnel on top of the value rtls as you can see from this Slide the pure series are the successful we were able to encrypt all traffic while preserving the Articles functionalities however again some challenges need to be considered the SSH tunnel increased the load on the anchors and in the end are the noticeable delays we were able to counteract this affect by decreasing the Synchro synchronization frequency but this also reduce the accuracy and this might be a problem for us at owners that want real-time precise stack position additionally this entire mitigation depends on the accessibility of the Ida direct LS server or the anchors by the band if one of them does not allow admin access in acting dissolution either requires an extensive work of firmware modification or would be simply not viable and with that said I will leave to Royal for the conclusions all right we unpacked a lot so let's do",
        "a quick recap security standards don't cover everything but with rtls being widely used we can't afford to have those loopholes and standards we disclose zero-day vulnerabilities in two popular uwb rtls's they're used for personnel tracking geofencing and contact tracing and we even demonstrated how a threat actor could launch a man-in-the-middle attack to eavesdrop or do other manipulation tactics we also provided some mitigations now if you don't remember anything else during this presentation we want you to walk away with these three things number one weak security requirements in critical software can lead to safety issues that cannot be ignored safety critical software should have well-defined security standards period",
        "number two there are attack surfaces out there that no one is looking at but they have significant consequences if compromised so while everyone was focusing on the communications between the anchors and the tags no one was focusing on the communications between the anchor and the servers so it's important to look at the entire attack surface and not just focus on one part while ignoring others and last exploiting secondary Communications in uwb rtls can be challenging but it's doable now prior to this talk these attack scenarios were considered unlikely but clearly in this presentation we showed that even though it does require specific knowledge it can be done and the devastating effects it can cause at the end of the day you can't have safety without security we hope this talk not only made you aware of security flaws but motivated you as researchers to continue to find those vulnerabilities to safeguard individuals businesses and the world security can be puzzling challenging and",
        "maybe even a little intimidating but it can be done thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "BDoWkS_U6fg": [
        "[Music]",
        "foreign",
        "to Welcome to the stage along ski and for the QA session",
        "uh ayal Ronan",
        "[Applause]",
        "can you do cryptography in the dark",
        "is the traffic is the trusted Hardware that we use every day really trustworthy",
        "today we'll share the Journey of our research including the highs and the lows and we'll see what exactly Samsung failed to do but moreover will take a look at how the",
        "industry should change",
        "when you start the research you never know what you're gonna get and sometimes you ask what are the odds that we find something meaningful on the one hand we have the leading Android Vendo Samsung with Federal Security certifications and a lot of resources on the other end we have one part-time graduate student in a zoo meeting with two amazing advisors if University researchers could find something meaningful then well-funded organizations can do much more and if Samsung's failure then other vendors with less Securities with less security resources could do much worse",
        "we found two high severity CVS that",
        "affect a massive scale of over 100 million devices and allowed to fully recover the cryptographic keys that were encrypted by trusted Hardware",
        "to help you understand our research we'll start with why you should care what we found and what are the main lessons",
        "this is your phone you use it you use it every day for a variety of security critical tasks",
        "you store sensitive information you pay with the service such as Google pay and you use it to manage most of your digital lives this makes it a major major Target for attackers and in recent years we saw many public attacks that completely compromise the operating systems for example City days blacker talk by the Google manual security team",
        "but we still need to protect the cryptographic keys of applications so that attackers will not be able to transfer money from your bank account or log into your PayPal or Twitter accounts for this reason model Android devices use the untrust Zone security extension to provide a trusted execution execution environment or TDE the transit separate",
        "isolated transform operating system",
        "there are many different trust and operated systems and trusted applications in fact Samsung devices use three different operating systems qse by",
        "Qualcomm Kennedy byte trastonic and",
        "degrees by Samsung themselves",
        "these vendors keep their black box design secret making it making it harder to verify its security",
        "in this research we chose Samsung as a test case we reverse engineered the cryptographic design of the key master and we're interested in the security of other protected cryptographic keys",
        "and the relationship with higher level protocols with a remote trusted party",
        "as we can see a trazon provides a logical separation into two worlds the normal mode which runs Android and the secure World which runs the trusted OS we follow the Android platform security model which states that the hardware protection of key of keys should withstand a completely compromised normal world but in fact for our attacks we only require a sufficiently strong context in the Android user mode to communicate with trust and drivers",
        "finally we have the Android Keystone designed by Google which provides cryptographic Key Management applications can request key generation and the key master processed application in the trust Zone will generate the key in Secure hardware and before returning it to the normal World it will encrypt it with a hardware derived key",
        "the keys can be stored on disk or useful key at the station to prove that the key was really generated in Secure Hardware",
        "they can also be used for cryptographic operations such as sign or encrypt",
        "the important point is that the plaintext material should only be accessible by the k-master and should never leave the trazon never",
        "okay so a quick wrap up the key master protects the key material and it should be the only entity with plaintiff's key access but is this assumption guaranteed",
        "after this brief introduction let's dive into our security analysis and before we begin note that most details are simplified and for more information please see the extended paper",
        "how do you even begin where do you start",
        "you can download the firmware and extract trusted applications bootloaders and the kernel of The Trusted OS you can read the little available public documentation and use security certifications and the open source archive but for most of our research we spent a lot of time reverse engineering with gidra for dozens of filmers and trusted operating systems",
        "and how do you even interact with the key master usually applications use a",
        "binder API to communicate with the crystal service which uses the key master API to communicate with transzone drivers that execute a SMC or secure monitor call to switch execution to the secure monitor the secure monitor forwards the request to The Trusted OS for example degrees and eventually to the key master",
        "we published an open source tool called keybuster that allows to directly communicate with the key master without any input filtering or validation by the key master API we used it to reproduce our proof of concept attacks",
        "now as you recall the key master protects the key material by encrypting it and after extensive reverse engineering we saw that Samsung chose to use asgcm with an encryption key that is",
        "derived from a Hardware Key the rek using a key derivation function this is a very fragile construction which is not misses resistant",
        "and this is extremely vulnerable to IV reuse two interesting questions are how are the encryption Keys derived",
        "and now is the IV chosen",
        "we saw that the salt parameter that is used in the key derivation is the shuttle digest of the following values with some variation in the first variation the salt is a constant string followed by a Target control application ID and application data in the second variation on Galaxy S9 they also bind the boot of the state which is constant for our discussion and only in the last variation on Galaxy S10 and neural devices did Samsung get 16 bytes of Randomness that changed the derived key every time",
        "side note a possible explanation as to why Samsung has three different variations is the mobile Federal",
        "Protection profile which requires both other state binding for example",
        "so we saw that the client can control the salt which means we can have key reuse to our surprise we found that the client can also set the encryption IV so we also have IV reuse now",
        "asgcm is a stream Cipher that uses counter mode internally to encrypt the IV and serve it with the plain text this leads to the following Ivory use attack given a key blob a that we wish to recover we can extract the IV and using the same the same IV and salt we can import a known key B with the Keystone API and we can we get an encrypted blob B now we simply solve the ciphertext of a with the ciphertext of B to get the Excel of the plain text and then we Excel with the known plain text of B and we fully recover the key material of a which is pretty exciting",
        "a trivial observation is that once we recover the key material we can bypass any key any key restriction such as protected confirmation or biometric points and we can simply transfer this amount to that account without the trusted UI taken over and without user consent",
        "but this only works on Galaxy S9 and similar devices and not on the latest S10 and neural devices because the salt",
        "changes the the right key changes every time it was surprised we also found that the",
        "client is allowed to set the encryption version using a hidden API",
        "therefore an attacker could downgrade all new key blobs to a vulnerable encryption version and then use the IV reuse attack we just saw to fully recover any key blob",
        "can this affect higher level protocols with a remote trusted party take for instance the Fido web authentication standard which is which uses public key cryptography to authenticate the websites instead of passwords",
        "web authentication uses an internal security element called the platform Authenticator",
        "to generate and use authentication keys usually this is a external security key such as ubikey but we already have secure Hardware in our pockets so we can just use the Android custom based Key Master",
        "the the important point is that an attacker should not be able to recover the authentication keys and should not be able to clone the platform authenticator so that your Netflix or VPN subscription",
        "will not be used on a different device web authentication has two main stages",
        "when the user wants to register the device generates a keeper using the keymaster trusted application in the transom and uses key attest station to prove that the key was really generated in secure if the certificate is valid the server registers the user with the public key then",
        "when the user wants to log in the server sends a unique Challenge and after getting user consent the device signs the challenge with the private key in the secure order if the signature is valid the user is signed in using gag attacks we can downgrade any key blob recover it with the ivarius attack and then we can clone the platform authenticator since we can sign any service server challenge with the private key",
        "in our demo on Galaxy S10 we use GDB to implement the downgrade attack and then key Buster to implement the ivarius attack and we used the Fido the strong key Fido server and sample application without any modifications",
        "after registration we recovered the privacy and verified against the attestation certificate and to complete our demo we use the different application that doesn't use trustion at",
        "all and simply uses the recovered key we managed to successfully authenticate against strong Keys remote server over the internet",
        "overall we saw that attackers could recover cryptographic keys and use them to steal your money or to steal your identity we reported our findings to Samsung in May last year",
        "the disclosure for the IV Rios attack was pretty straightforward",
        "in August they patched Galaxy S9 and",
        "similar devices",
        "assigned a high severity CV and remove the option to set the IV from the API",
        "which is great",
        "but life is not so simple and in June Samsung rejected the downgrade attack saying that it's impossible to create downgraded key blocks we discovered the same attack on Galaxy s20 and S21 and we reported the downgrade attack is a separate issue but then Samsung said that they think there's no security no practical security impact",
        "this make made us kind of sad and we almost gave up but in a final attempt we sent our people with",
        "which made us feel great",
        "uh they assign the ice ability CV patched all relevant devices",
        "and completely removed the Legacy key blob implementation maybe the moral of the story is to never give up",
        "it's important it's important to note that most of our research involved very time intensive reverse engineering and two weeks after our research was published the labsa soccer group leaked the entire Samsung source code",
        "we'd like to think that if those if this code was open source then those issues would have been found years ago hopefully before reaching production devices and if not it would still make a research much easier and much faster to complete",
        "also we saw similar iberius attacks",
        "against Real World Systems over 10 years ago maybe it's true that people just don't understand IVs",
        "finally let's see what can we learn for this",
        "the root cause of both issues is API misuse the client should not be able to set the encryption IV or the encryption version also the key master is a security critical application should have minimal attack surface and should not include any hidden code",
        "instead the ivys in GCM should be unique",
        "and you can use the Mrs resistant authenticated encryption such as AES gcmsav or use the message resistant cryptographic Library such as think",
        "you should also always use the latest encryption version if possible",
        "the bigger issue is in the composibility with higher level protocols in protocols like web authentication a",
        "remote trusted party uses key at a station to prove that the authentication keys will really generated insecure album but as we just saw for Samsung devices the secure Hardware can be flawed and cryptographic keys can be extracted",
        "but the fetal silver is no way of knowing that and no way to reach it it can't set the policy to reject certificates from such devices because the attestation certificate does not contain any information about the encryption method",
        "in fact as long as we have vendor-specific black book designs in the ecosystem it's impossible to prove the correctness of the composition we hope that our work will motivate the the use of an open stubborn open standard design by Google for the key master subsystem",
        "side note about a month after our research was published Google announced changes to their key at the station protocol making it a",
        "making it possible to",
        "to not provision certificates to known compromise devices this could be a step in the right direction",
        "in conclusion",
        "we saw the dangerous pitfalls that arise when the cryptographic design is kept secret",
        "we Advocate the use of an open standard design that would would prevent such issues",
        "and as we just saw we think that that there is no security by obscurity",
        "the cryptographic design should be reviewed by independent researchers and should not rely on the difficulty of reverse engineering proprietary systems",
        "finally the design Choice the design choice of the fragile asgcm for authenticated keyboard encryption deserves discussion after too many years of IB reuse in Real World Systems",
        "I want I want you to live today with two things in mind do cryptography in the open and make sure it's misses resistant otherwise you just might might get catastrophic failure",
        "thank you for your time feel free to ask me any questions and join ayal for also more questions thank you [Applause]",
        "thank you so much for that fantastic presentation uh we're going to jump into the question and answers here at the moment we don't have any questions in our virtual chat but please feel free to throw some in there if our audience has any questions feel free to please stand up and we will bring you a microphone to ask your questions to the presenters",
        "we see you over there we're going to get you a mic here",
        "foreign",
        "thank you uh I just wanted to ask you what was the procedure like can you talk about in details about how you reverse engineered to find this flow in the key master you mentioned a little bit of like you extract something from the public firmware that you found but uh can you shed more light on it yeah again they want me to explain how do you start the research and how do you explore the key master is that the quest just a high level detail of like what kind of analysis that required uh to find this flow it's",
        "a lot of manual reverse engineering and a lot of like Delta walk yeah",
        "no easy tricks",
        "great thank you so much do we have any other questions from the audience",
        "I am not seeing any so oh we do have a gentleman over in the corner there",
        "uh hello thanks for the great presentation uh why why you think that DAV uh the IV was uh",
        "um unlocked to be said uh by the AI maybe for debugging purposes",
        "we don't have a clear answer but maybe it's possible that they wanted the deterministic tests and they wanted like to be able to encrypt and get the same and ciphertext so they use the same IV but that's not the right way to go thank you",
        "it looks like we have one more question here hello excellent presentation",
        "um question on open sourcing cryptographic libraries functions new",
        "ways of doing things do you see this is more of like an academic exercise similar to what nist does when you have new cryptographic proposals or types or Solutions or are you thinking more like what we would do for open source software in general where it's open to the world do you want to take that yeah um I think that's um you want to have both if there's a new protocol that has been suggested like Google is suggesting now for uh",
        "provisioning keys for the station we feel this stuff should be described to the public and should be open to comments in incorporates other people",
        "from the security Community either from Academia or industry doing the process which it's like this is doing but not necessarily um need to be by government entity after this is done any cryptographic implementation I think should be open sourced as much as possible so everybody can look at the code and see that the actual implementation is also secure so we want to have both options basically",
        "yes so there was a bit of a echo so just like to follow his point there there should be like a collaboration between Academia and Industry like in the standard standardization of TLS and the any cryptographer if they saw the code they would immediately tell you that there's an issue and the yeah you should make cryptographic code AS open source as possible because the security should lie in the design and not in the uh in it's been hidden like the obscope the obscurity does not help in this case",
        "thank you",
        "do we have any other questions from the audience",
        "we see over there sir and we're getting you the microphone",
        "like to also compliment you on your great presentation um at the beginning you said that this was a fully certified design",
        "had searched from Phipps and I think also Europeans so what is your message",
        "to the certification authorities about",
        "you know how they go about certifying designs like this based on your experience",
        "yeah I think the message is uh to to involve also independent researchers or at least to to make sure like maybe those issues like the fragmentation of the different variations vocals because of the uh it's not fips but it's the mdfpp the Federal Protection profile and maybe like in trying to support that they met made some issues but it's important to know that there were professional",
        "security Labs that did I guess they had",
        "source code access and they did like very detailed security analysis and they also published some security certificates but it was still not enough to find a very trivial issue so maybe",
        "they need they need to reconsider and think what's next yeah if I can add to",
        "this then we have multiple examples if you take um open SSL code which have versions that are fips certified you're still finding bugs and vulnerabilities in this code time and time again but this is because open SSL is open source and any researcher in any person can download the code and never look at it so I feel that going to have a baseline of requirements for certification might be a good idea but this is not enough to make sure that software is secure and we need a lot of eyes looking at the this type of code and again that this is",
        "certification this might be good but it's not a substitute to the whole research community and trying to look at the solutions",
        "okay I just have a quick question so like it makes a lot of sense for big projects that have impact of millions and millions of users to have it open sourced and research what about smaller projects I just looked up the AES GCM website and it doesn't say anything about read a Wikipedia page it doesn't say anything about IV replay attacks and the weaknesses of IB so what resources would you recommend for people who just are not going to have researchers looking at their code because our project might be seen by a hundred business side type people we still need to make sure stuff is cryptographically secure what sort of resources would you recommend yeah I would recommend to use a something like a message resistant cryptography libraries like think by Google or other libraries that really",
        "help you like even if you don't have the necessary cryptographic background like still make it work and yeah it's an important point because the cryptography engineering requires very gentle and",
        "precise operations so yeah you should",
        "always at least know what are you using know the security assumptions because in GCM the security assumptions is that the IVs are unique and you should try to to",
        "avoid the misuse yeah",
        "great thank you that is time for us and I want to thank the presenters here um we've got some wonderful information from this and if you there are additional questions please feel free to speak to alone in the hallways thank you for coming to black hat and thank you to our presenters thank you",
        "[Music]",
        "[Music]"
    ],
    "Ot7IixMwiL8": [
        "[Music]",
        "foreign",
        "I'm a social professor in the school of computing and information systems SMU in here in Singapore not the one in Texas so it's my pleasure to come here and get this opportunity to share with you with our research work about a new Dynamic",
        "software analysis framework",
        "uh this is a framework that allows you to develop your program and to",
        "dynamically analyze a kernel even dynamically analyze a malware",
        "uh so strictly speaking this is not a new framework in a sense that we actually uh have published this paper",
        "um in Auckland last year but the reason we came we come to the black hat conference to uh to share with you this work is mainly because we want to reach out to much broader audience and we do have the belief that uh this",
        "this framework called Oasis indeed can",
        "help many users in this community to address many uh Dynamic analysis challenges so later on you can see what are the features our technique can can bring to you okay so here's my online and I will first do a quicker review of existing approaches for kernel analysis dynamically and then I will introduce our work called Oasis which is a this is called the on-site yeah analysis infrastructure I will explain to you the analysis Primitives provided by all this to developers here developers otherwise",
        "that developing analysis tools I will also show you two examples uh with some of the screen recording of our demo then in the end I'll just wrap up with with summary so since we already published paper the paper elaborate a lot about the internal details of how OSS works so here in this talk I will only focus on how a user uses osis of course I will explain some high level picture the the basic idea behind but I'm not going to delve into a complex low level issues of the internal working OSIS",
        "all right so just a quick review um if you want to do kernel Dynamic analysis basically there are two approaches the most common one is a code instrumentation you want to get some drop down with your kernel you add in your code uh to the kernel and you you may need to compile it if you do it statically so there are two approaches for you to do instrumentation a static gain implementation or dynamic Institute dynamical instrumentation no",
        "matter what in the end what you get is the kernel whose code has been mixed with your analysis code so your code and the kernel code will become one body one binary they will share the execution flow and share the address space then this is very wonderful because your code can easily get the job done your code help will have this native access to the kernel objects the current memory",
        "the same time because your code is in assembly with with the kernel then there are implications one application is",
        "now this is intrusive you have to modify the kernel well not to mention those hassles for the compilation uh modifying color sometimes doesn't work in scenarios such as you get a production kernel running with in the virtual machine they don't get the chance to do the pre-processing they are from the security perspective if you have if if you interest if you make this modification then your kernel your code can can be compromised or or",
        "detected or Modified by the malware in",
        "the kernel so suppose the kernel itself has been compromised the adversary can easily modify your code and change your analysis outcome so this is the bad so that's why we get the second approach which is more from the Academia in Academia when they look at this problem they say hey let's don't do instrumentation so let's use some",
        "Hardware features to trap the current execution into a more privileged environment that dependently on the combination let's say you can use virtualization you can trap the current execution into the hypervisor or you can you may use the pmu to trap the current execution into the SNM so the advantage here is okay you solve this um transparency and security problem because your analyzer your code stays outside of the kernel is in a more privileged environment so kernel cannot read or cannot tamper with your execution nonetheless there are drawbacks",
        "since your analyzer is outside then you lose the lose this flexibility and Native Access Control to the kernel um there are several issues one is when and where to trigger this event this is entirely at the mercy of the hardware you don't have the entire control secondly when you do introspection when you read the current memory you are reading the Kernel's physical memory you're not reading the Kernel's virtual memory so this is something like you walk in the dark in a dark room you want to find out the where is the door so you have to Fumble with your fingers to find out instead of you can see it clearly uh lastly um programming in this um uh special environment is tough",
        "let's say imagine you write in Universe your um analyzer in this smm it's a very difficult job um not you don't have the library support you don't have always support everything you have it's just a row CPU",
        "so so we are asking this a big question can we combine these two approaches to",
        "get the best out of them but we don't want we don't want their drawbacks",
        "meaning we want to get the transparent and secure access analysis however we want our analyzer our tools",
        "um can have native access to the kernel can do introspection can do modification",
        "now how can we do that so we came up with the idea of why not we interleave the target",
        "instruction stream with the analyzers uh",
        "instruction scheme but without mix code together so imagine this you have a CPU this CPU will continuously fetch instructions but sometimes fetch the instructions from a kernel sometimes it affects the instructions from the analyzer so the analyze code and a kernel code are physically separated",
        "but the execution are kind of mingled together so we call this execution flow instrumentation EFI to mimic the sense",
        "of code instrumentation so we mix execution together but we don't miss mix the code together",
        "so and we call such analysis as on-site",
        "analysis so the analyzer analyzes attacked program that kernel as if it were one part of it the reason we we limit of the onsite analysis because this is try to give you this inclusion that it's not something like you are doing a outside interview",
        "so you go there you go to the the the the this company's building you meet the people there of course you get the first hand information from about this company nonetheless you are remain you remain as outsider so with also analysis we're hoping that the our analyzer can have this security transparency and Native control then to",
        "to do so we need to satisfy a few requirements number one you want this analyzer to dynamically",
        "to dynamically choose the site of",
        "instruction flow into living so we cannot leave this to Hardware to decide we need to have another analyzer to take the full control so the analyzer can can decide at any point of the program execution and the current execution then you can do this interleaving of instructions",
        "secondly we don't want a CPU mode or CPU probability switch if the touch thread runs in the kernel in a ring 0 and our analyzer will also run in run in ring zero if the target program Capital three runs in ring 3 they are our analyzer can also run ring 3. so the main reason behind is this are not the analyzer to natively share the CPU context with the cardo so they are they have the same Computing environment",
        "lastly this is the most important one see we want to have this one-way address space isolation meaning that the target address space can be accessible it can be accessed by the analyzer so from the internet's perspective we can natively access the entire kernel space however not the vice versa the kernel cannot access the analyzer so this is something like a one-way mirror in the the police station's interrogation room so the police officers can can see everything inside the room but the suspect cannot see things outside of course the suspect can make a guess but he or she doesn't see anything",
        "so if we can solve these issues they'll get a secure and transparent analysis and we can also have native access and another can read everything in the Kernel's virtual memory and they will get allow the cross space on analysis because this is the the whole address space will be shared with the analyzer",
        "then how can we do that so we design uh this infrastructure called the osis that stands for on-site analysis infrastructure",
        "so in this infrastructure we consider the target is one thread one thread okay not the one not the program one thread running in the case the VM the analyzer is a normal application running only host the Linux",
        "so so this technique is many uh it's for Linux only but the the target can be any operating system in the windows",
        "um so when around most most of the osc's job is done with in the host kernel and we this Oasis will create the",
        "on-site environment as I show here in this on-site environment",
        "um this is also environment has a dedicated CPU core so this environment doesn't have operating system and the only two threads running on the CPU one is analyzer the other is Target so their instructions will be interleaved together and this outside environment also has a",
        "special paging hierarchy we will give a special pml4 page for the mmu to do translation but the outside environment does not have any dedicated memory pages",
        "all the data all the code of the analyzer is managed by the host OS the target runs in the uh against the VM so we think in this onsite environment uh working around on-site analysis",
        "so let's see a high picture of a high picture of a higher picture of this workflow of on-site and Analysis so you get two environments one is the onsite environment you get a dedicated on-site core and we also can we also grab one",
        "core from the guest VM so we export the target threat to the on-site environment there we conduct this on-site analysis in within the sponsored environment uh once the job is done then the analyzer can release release the target the target can continue to execute uh in the guest VM then you can repeat this cycle you can periodically or randomly pick one thread to analysis after a while can release it let's around in the in the guest VM if needed you can catch it again or catch another thread to analysis",
        "they're within the sponsor analysis is basically uh it is composed of this cycle of execution between analyzer to analyzer to to the Target so we just turn exit and entry exit refers to the control flow will pass from the target to the analyzer the entry means from analyzer to the to the Target so this is how the if you if you run your analyzer on top of Oasis this is uh the the flow",
        "so let me explain to you what are the uh Primitives that allow you to develop your program your analyzer",
        "so the number one primitive is actually doesn't require spatial apis from Oasis",
        "uh always just allow you to natively access kernel memory meaning uh given",
        "any kernel address kernels current virtual address you can easily use it as if it is in your code that is in your uh in your in your programs then you can let's say you can use the economy here they can do direct memory copy all the standard liposite libraries can be used without additional treatment because",
        "this is part of the of the of the analyzer you get the memory copy you can read the memory it can copy the memory and you can also to print that you can also use networks you can also use file because the analyzer is a normal userspace application running in the",
        "host",
        "so let's see uh one one demo here is the video recording so we have the analyzer on the left side of the screen the two windows the one belong to the Caster VM the top one is against the vm's kernel output the the one the bottom is the target okay so let's play it and we play it okay",
        "so here in order for the purpose of demo there we we are we made some changes on the guest kind of in order to print out something so here they are the kernels we our current module will print out some of the key ring on content binaries",
        "there we run the target now we uh export type the thread to the analyzer then analyzer will print out the kernel memory easily uh here",
        "here the the analyzer is given uh the",
        "local variable of the current address then just do the dereference find out the the virtual address of this uh query then just print out the binaries then in",
        "this object there's one pointer pointing to uh another object called a key user then this analyzer was just printed out this uh this uh key user object so these two binaries are identical",
        "so the good thing here is you can easily use any standard libraries to process",
        "the kernel memory and always is guarantees that whatever you see from the current virtual machine or from the Kernel's working memory is exactly the same from the kernel currently runs so there's there's a consistent memory View",
        "okay then with this one you can you can of course you can uh think",
        "with this one you can write your analyzer to process whatever analysis",
        "test you want but it doesn't provide you the control and how do we how can your analyzer control control the product operation well we introduced three mechanisms for you to control the control the character thread one is the traditional into three probe so we place this one byte in the kernels code anywhere you want then once",
        "it is triggered then this interrupt Handler will transfer the control to the osis exit gate",
        "so this Escape is basically a couple of uh instructions uh I won't go to details here um basically this will make a patient hierarchy switch so that the instruction runs afterwards will will be from the",
        "analyzer secret space not the kernels of the space that's why we call it execate we need the control the execution flow will switch from the target the kernel to the analyzer",
        "we also have this jump probe for a manifold control flow and tracing that can replace certain bytes that allow you to jump up this gate we can also allow you to do this event exception so you can catch a kind of page default uh",
        "interrupt Handler to do the analysis",
        "so one caveat here is these changes are only effective for the Target thread running in the on-site code the entire case the VM is not affected secondly also when we make changes on this on the on The Code by adding probes uh we may also provide a Handler but all these changes are remained transparent to the kernel to talk to a target the target doesn't doesn't see these artifacts",
        "uh this is by using virtualization techniques again the details are in our paper but of course I will be happy to expand later on Ben how do we resume the target once you've done your job how do how do you put it back well you can just jump in uh allow your code to jump to the entry gate so that control will pay passed back to the Target at this moment then you can choose where to resume you can choose the rip for the packed kernel to resume so let's look at these are two uh some examples this is the first one is you to use uh the Intel 3 probe to add the uh break point in the camera function entry so what yours your analyzer will only be composed of two piece of two functions one is the main so in the main function you set this probe uh in the location of this camera lock address then you just receive the program you still sorry you assume the the kernel then so when the current runs it Encounters this uh Kmart then this",
        "into three will hijack the fluid and pass it to your these uh into three Handler so head on over around you do some analysis work then you decide should I remove it or should I keep the kernel around Okay then if you use this control flow tracing then it's a little bit more complicated because you have to calculate where to put where to put the probe so initially you put this um the probe in the basic block engine basic block uh exit then resume Target so Target will run go to the candleer this this jump Handler the Handler where will just remove the previous one then set the new probe to the next block based on your calculation then you receive a target the target will continue to run okay",
        "so this jump rope is mainly for control flow and tracing this industry mainly for the code breakpoint",
        "all right again we have a short demo here um",
        "so again the this uh we run this and there are three Windows the Energizer on the left side there are two windows above the Target on the right side so one is from the gas VM output the second the one in the bottom is the information about the target thread so in the Target here the tax thread will issue two six calls both are get priority uh with",
        "different arguments then we export the thread to the to the analyzer so the analyzer can uh it will do two things one is to install uh in the three probe at the entry of",
        "at the entry of [Music] um of this uh get priority so you can see this get the priorities Handler sorry this picture is is triggered twice the in the second triggering of this Handler then well we can do a basic block tracing here we only Trace five blocks of code you can trace it to the end okay",
        "so to wrap up uh so uh osis give you",
        "this uh some new features for kind of analysis it is the third Centric allows",
        "you to make to make a surgical analysis uh it's not good for large scale code Centric analysis such as profiling or",
        "you want to you want to observe the kernels as one whole piece of work uh",
        "how how the if you want to observe some Global effects sorry it's always this may not help you but if we want make a uh uh say debugging then that is a very good application uh the second feature is it allows you to make a native access to the kernel memory and to the to the CPU context it has a strong security and transparency uh your analyzer is immune",
        "from a text from from the guest kernel because they are separated physically",
        "um is protected by the underlying on the paging hierarchy and your program lets you I think this is the most attractive one your program remains at the user space application you are free to use libraries like this course to build your analyzer and you don't need to worry about okay I'm programming the kernel the kind of service I can use you can do it at like a normal application there are a few um potential applications you can do VMI you can do the kernel debugging you can do crawl space malware analysis you can also do the attacks in forensics and to respond to the attack okay um five minutes uh yeah thank you I want to give some time for Q a session so to wrap up this is uh the um black has some bites basically the main takeaways so main takeaway here is uh with osis what you can do is you can easily develop and run a user space application this application allows you to dynamically and natively read and write control the the the the the type the thread in the get the VM so return is the threat is in a user mode on the current mode you can also do the analysis and you do not need to pre-process in the kernel there's no modification of the kernel is required uh there's no we don't need the source code okay apply this on Windows uh it has strong security and transparency there are a bunch of suitable applications from from our understanding we must culture BMI such as kind of debugging or malware analysis",
        "[Music]",
        "[Music]"
    ],
    "TqMjMpvspJ4": [
        "[Music]",
        "foreign",
        "[Applause]",
        "lock the door where no one's leaving here until we can all agree on what thread hunting is kidding me much time or the appetite for violence so thank you so much for coming out and listening to us talk today so I'm John Neil I'm sorry celebrity names this is grifter I don't know if you guys heard of him and Samir and between us we have Decades of experience in you know threat hunting and incident response and security engineering and Building Technology been around the block a few times and today we want to talk a little bit about our new approach to building and maturing a threat hunting program and I'm going to do that by starting talking about a story about fishing and I don't mean the fishing that you're probably going to hear about all week I mean like really ripping lips catch me a marlin fishing so I have a buddy Ryan Ryan loves to fish actually this logo appears from his blog realfishing.net give them a follow and I go fishing with Ryan quite a bit actually and not that I particularly love fishing it's fun you know what I do love I love having drinks on a boat so I make myself available",
        "one I've been to Ryan's house and Ryan has a stupid amount of fishing gear like it's all over his house and I said Ryan do you really need this much stuff to catch a fish and he responds with depends on the fish right I've kind of walked into that one so he goes on and shows me all the different baits and lures and hooks that he has and he says each one of these things is designed to catch a particular type of fish and each one of these things requires a particular technique Danny gets real excited he runs over the wall and he shows me all these different rods and he's like see all these rods depending on where I'm fishing I might need to use a different Rod so that was really interesting to me because what I learned is that it is the environment and the fish that is driving Ryan's decision and tools and techniques and not the other way around and Ryan finally makes this comment that that really stuck with me he's like and sometimes I don't use a rod at all because sometimes I like to do spear fishing and he said it's kind of weird because some people don't consider that real fishing but it doesn't matter to him as long as he's having fun so what I learned from Ryan is that Ryan's goal was not to fish Ryan's goal was to have fun and fishing was just his way to achieve his goal and fishing can take on many different shapes forms or functions and use drastically different tools or methodologies",
        "I'm going to tie this together bear with me so that reminded me about one this one time I was having I was doing a threat briefing for a bunch of different security teams and I had mentioned in passing something about what threat hunting could do not realizing that I",
        "had just hooked a Molotov cocktail into this conference call and it broke out into what I can only describe as a war between multiple different factions",
        "on what is or isn't threat hunting and people are getting like big feelings about this and arguing right and then suddenly it goes like the whole call focuses on me and they want to get my take they're like well where do you stand you know because you got the the hypothesis people here you got the free form searching people here you have the people think that it's intelligence driven here and they're all closing in on me so you guys ever see Jurassic world like where he's got that he's keeping the the Raptors at Bay and they're all closing in I'm just standing there I'm looking out it's not like a slightly more handsome Chris Pratt don't laugh at that true suddenly I stand up and I said you're all right you see because why can't we approach threat hunting like Ryan approaches fishing why can't we let the goals of their respective hunt teams Drive what the definition of threat hunting is and now it's an individual decision and then we can stop arguing about what is or isn't threat hunting and focusing on the thing that really matters which is are they effective and Effectiveness you can use their goals so that was really interesting to me and I got really really curious about measuring Effectiveness on threat hunting programs versus goals and objectives so I started writing down like a rubric if you will of like characteristics of a threat hunting program that I you know generally wants and which ones that perhaps in this thing this actually became the maturity model in the framework if I look at these things is there something in here that'll allow me to predict whether or not a threat hunting program was going to be effective so I had my thing and I was like I need to test this right I need to get out there I need to talk to people much smarter than me people that are just crushing it in the game to find out what other threat hunting teams are doing and what works really well to see if I can identify High performers and identify what characteristics are shared amongst that group so I did the P the people that know me the best are not shocked by this at all because I am that golden retriever I love making friends so I spent two years guys two",
        "years talking to various threat hunting teams of all shapes and sizes about getting into their processes their Staffing their you know how they execute a hunt how do they do hunt Tempo all these different things and trying to identify you know who the high performers were like who were clearly crushing it based on you know the rubric that I had and measuring their effectiveness and I was able to do that and here was what was very very interesting to me because what the shared characteristics of the high performers wasn't the fancy bang tools it wasn't the hunters with phds it wasn't any of the technical capabilities really because they varied so much but what it was is all of the high performers whether they knew it or not had a well-defined long-term vision and",
        "Mission and a leader who was hyper focused on making sure that all of the people processes and Technologies were designed to keep that threat to a lot with that long-term mission",
        "so that was very interesting because I didn't expect that right so now we're talking about why likes things like strategic management and how it might impact threat hunting",
        "because I got to see what you know another Frameworks would consider a lower maturity threat hunting program they were using open source free tooling but you know based on the threats that were applicable to them they were highly effective like they brought a lot of value to the organization so how can I say that they are lower than another hunt team that I got to see where they had all the fancy whiz-bang tools they had phds in the hunter program they had just giant data Lake but they didn't take the time to Institute those fundamental components of an effective program so they've ran into issues like political problems and getting access to data and doing interfacing with the sock and so they were never really able to find their full potential it's important to note that it wasn't enough and I want to make sure that I'm clear on this it wasn't enough for a program to have a mission or strategy written down or even fantastic goals and objectives it was all about execution so in an atomic habits there's this great quote and it says we don't rise to the level of our goals we fall to the level of our systems and that was held true even in in this case the other thing that was really really interesting to me and I want to talk specifically to the executives in the room is when I was interviewing Hunters the the more Hunters within a program who could fully articulate what the program's long-term goals and vision were the more likely they were belong to a high performing group so think about that like the more individual contributors that are Marching In The Same Direction that's when the magic happens and I challenge you to make some magic of your own like get involved with your threat hunting programs start a threat hunting program and put your best leaders in charge of that regardless of their technical capabilities the best threat hunting program that I got to view over this time is run by a woman who essentially had no threat hunting experience at all before she took over the program but you know what she is she's a fantastic leader she's great at building and managing a team and she's absolutely world class at building effective processes and procedures",
        "it's really great when you get to see when it's doing when it happens really well all the great things that come out of threat hunting program in that specific example through her work through her Mission and her program that organization is using threat hunting as the driver for their entire security strategy so outputs from their threat hunting program are going into things like Risk and compliance and governance they're making decisions about data for like what is valuable data versus invaluable data so like every bit of data that we centralize has a dollar amount associated with it usually in in some way or fashion so they're making decisions that are impacting things like budget or identifying dependencies",
        "between systems like critical Business Systems so that feeds into operations so they may change how they actually monitor the most important things within their organization just for uptime because they oh I didn't realize that this application had a critical dependence on something two moves away is great so like there's a lot to this and I've seen what happens unfortunately when the magic doesn't happen I've lived that I want to like I've lived this life before guys I don't want to seem like I'm just like did research and I don't understand what it's like in the real world but I have so a couple of years ago I was asked to launch a threat hunting program for an organization and can't mince words about this I failed I failed and it sucked at the time but I'm incredibly proud of my failures now like a failure to me is now I've been gifted with the opportunity to learn and grow and from that example I can look back and see why it was so easy for me to fail because if you go out there and you look at all the resources out there they're talking about threat hunting it kind of flies in direct conflict with everything that we've found the first thing that most threat hunting resources out there do within the first sentence is they Define what threat hunting is to the reader we've already kind of established why that might not be the best idea so when I had this project I found a definition of threat hunting that I thought was really cool and that's the one that I wanted to do but I didn't consider whether or not that aligned with what the organization needed or wanted I didn't think about how that would work with the other teams within the security and so I set it up for fail just by making that critical misstep right out of the gate because I was taking someone else's Viewpoint and trying to apply it to an internal organization",
        "the second thing is that most resources out there are hyper focused on the technical execution of finding evil which is great I'm not saying that the technical pieces aren't important they they are they're they're obviously but what I am saying is that when the fundamental pieces are not implemented and executed the technical pieces become extremely hard whereas if you do the work on the fundamental high impact things for an effective threat hunting program the threat the technical pieces that becomes easy that that's the easy part because there's so much great work out there in that that you can use the people doing work in that space are doing absolutely great it's just we need to focus on you know the cart before the horse kind of deal like we really need to think about the building blocks before we start executing finally the the other thing that I noticed is while it did seem like there was some resources out there that looked like they were well thought out and designed they were usually tied to a particular vendor or technology or Consulting service which is good I mean I get it like we got to make money but um what what kind of bothers me about that is if I lead with tech so I make a technical decision because I go out there and I Google it now I'm buying a solution to a problem I don't fully understand yet and now I'm invested in this like are we are we going to try to create an environment we got to pay to play in threat hunting like that just didn't sit right with me so I thought about what what can I do what can I do to help right so Simon cynic has this he talks about this all the time but he says like in the bookstore there's a whole section dedicated on self-help but there's no section on helping others and we really need to help each other so I thought what can I do to help how can I make sure that everyone learns from my mistakes so this doesn't happen again so I started creating a new framework one that was free and open will be Community Driven vendor agnostic that we can try to make a real big impact and make some magic so at this point I'd like to bring up Samir who's going to actually introduce the open threat hunting framework and talk about the modules a little bit about his experience thank you John",
        "so what John mentioned about uh development of the open thread framework and having decades worth of experience doing the threat hunting I was the new kid on the Block he brought in here who can ask all the silly questions every time he put in some idea why because I did not have that experience I do OT security I have done application development so threat hunting specifically was a new thing for me to learn as well while I was learning I was asking all these questions why why why why so that that made it to uh pique my interest more and more while I was uh trying to relate all these elements of threat hunting framework that he had started putting together tying back to the problems I had when I was leading an OT security program for a manufacturing organization uh the classic problem that we have about which data do you have I don't know uh what do you need and all these questions always had created some bottlenecks for me getting the automated detection setup for the operational technology environment and made it more difficult to get buy-in from the operations it's always the struggle we all know that so when we started working on this there are several elements of these which were very particularly interesting and hit hit it on the uh hit the nail on its head I won't go through all of the modules that are over here but we have already talked about some fundamental uh modules that are foundational for",
        "building the good threat hunting program for example the foundational piece which is where you need to have a goal that works for your organization but taking it to the next level you need an organization when we talk about the organization it's not about just the organizational structure it's about the skills that you need to place and you need to have the right skills for the right type of threat hands that you are going to have you need networking expertise you need endpoint expertise so you need a right balance and if a person is new to the threat hunting or somebody who wants to have the have a go in the threat hunting as a career choice you",
        "need to be able to have have some weight or guidance where you can find what skills I need to acquire this is exactly where structure hits uh its home run",
        "because the skill Matrix basically gives",
        "you this there are a couple of things a couple of modules as I mentioned were quite critical for me to understand and relate it to my experience one of them was like preparation uh we are in a Data Business when we talk about security right so we do data analysis all the time we've mentioned about data Lakes we talked about data analysis but if you do not have data good data reliable data your output is going to be crap so garbage and garbage out you need to work on your data dictionary data",
        "data Lakes clean data Lakes reliable data Lakes to be able to drive good threat hunting program going forward lab environment we have some scripts that we have launched with the threat hunting framework that will give you the lab to be hosted on-prem or in the cloud environment so we hope that we can collectively improve that going forward important piece and heart of the framework is operational module it's a big complex problem to solve we want to make sure we break it down in smaller manageable chunks what exactly it is identifying is",
        "you identify a threat and you don't go and start googling what exactly you need to find and start threatening from a technical point of view identify what problem you are trying to solve what threats are applicable to your environment what threats are applicable to your organization",
        "retail and finance are not going to have the same threads applicable to you so make sure you filter that choice down out of 1000 make it focus on 15 20 that you need to have get the ttps out based on what you have from threats that you have identified make sure you prioritize them create your backlog and I'm trying to get to the project management side of this little bit as we spoke highly about it you have to be organized you have to be able to schedule it properly you have to assign your skills to the right people at the right time you need to know about your organizational dependencies interdependencies in terms of what you can do when Financial closures be it from the control system point of view the down turnarounds",
        "everything right so that's critically important once you do that once you have those Basics identified you can schedule and have those technical hunts done measurement communication we have spoken about this basically you need to be able to measure your success and communicate your success unless you do that you do not have your organization believing you funding you to continue your threat hunting going forward maturity is where we have tried to provide the Matrix we",
        "will which will allow you to do the assessment of your own maturity level and also if you want to have a goal where you want to improve your maturity how you get there what do you need to add",
        "important piece final note from me is continuous Improvement we have to do this right we have to improve we have to improve our efficiency and with that I will make a point that we collectively as a community we need to improve our framework so to take us through the next stages of improvement of the community as well as the framework going forward Neil will take us through that thanks",
        "all right so I mean it's fairly straightforward this is just the beginning for this when um when I started threat hunting I got into it about eight years ago going out and finding information that that was available to say here's how you get started here's where you should go look here's some hypotheses that you should go test out was really difficult as as John mentioned earlier when you do find things they're often like three or four page PDFs that have have you know some information in it but it's specific to this is how you search for that thing within this product right and so that became incredibly frustrating right where I was like how how am I supposed to get better at this if if I can't find any information and so as I continue to you know hunt and hunt in different organizations my role at the time was to go into some of the largest organizations in the world and hunt in their environments or assess their threat hunting programs and I would go in I would see different things over and over and over again and I would be like oh that's really cool um more people should do that but nobody had written it down and just put it on the internet and so when I got to a point in my threat hunting Journey um yeah I sound like a hippie uh when I got when I got to the point in my threatening Journey that I felt like I had enough information that I had collected from my experience hunting and all of these organizations around the world I started to talk about here is the way that I think you should go about doing this and not only that but here's what I think you should do when you find these things and the thing that I tried to drive home was write it down right documentation matters metrics matter",
        "they're not the sexiest part of this by far right but being able to share what you have can be incredibly valuable to other organizations we often in this industry have a I think most of us have a fairly deep level of imposter syndrome like we're like at any moment I'm going to be found out they're going to know that I don't belong on this stage they're coming to get me right now right like so but the reality is that there's something that you know that could keep another organization from experiencing either a declared incident or a verified breach and all you have to do is share that whether that's in the form of a white paper or in the form a conference talk or you know",
        "putting together this framework right when John approached me he was like Hey I started working on this thing I'd like to pull a couple of you guys in we're gonna write all this stuff down about programmatically how do we move a threat hunting program forward from how do you staff it what are the job descriptions that you should list if you're looking to staff uh you know or even just hire a single threat Hunter right what are the skills that that individual should have and if you're looking within your sock or cert team where are those folks that",
        "that have the skills that can fit within the Technologies within the bounds of your organization and where are you missing visibility without those things you know you become again incredibly frustrated and so it's time to put our money where our mouth was and write stuff down and so by the time we're done here like okay when we're done I'll go to the next slide and you'll see the get the link to the GitHub that has where the threat hunting framework and the information within it resides clearly we didn't just show you pictures of text on a screen because that's absurd oh wait there's text on the screen but Willy Wonka is there too um but it's it's roughly a hundred pages of what is essentially advice that we have gleaned over the combined 20 years of threat hunting experience that we have together and just saying like this is this is what worked for us this is where we fell on our face this is um where you should go if you're trying to you know improve your program and",
        "we need your help right this should be and is Community Driven it's not something that is a vendor putting out a four-page PDF so they can sell some product down on the Expo floor probably immediately below us right so yeah it's happening now people are out there saying like oh to make your threat Huns don't right like so um you know like find the technologies that help enable you to find more actionable data so that your hunts are more successful what are those Technologies I don't know okay well let's write that down and share that with people tell us your successes share with us your successes so we can build this framework and make it larger and make it better for everybody right it should be and will be a continuous Evolution right we're going to this document will be a living breathing thing and as people say like yeah but this worked for me better and that worked for me better oh you're missing a couple skills on that skills Matrix that you guys developed why don't you go and throw these things in there as well um it will just get better and better and the next you know organization or person who comes behind and says I don't know how to get a threat hunting program started or I don't know how to show value to management so that I can you know hire the right people for it or put the right amount of hours behind it so so please help us right this is vendor agnostic there is no particular vendor behind this again it was one of the things that kind of like tweaked us the wrong way so we said everything has some product tied to it why don't people just share advice without trying to shove something down your throat that being said if you have a technology that works for you and you're like it works in this way or through these use cases and I found that this and this particular platform over here is better or more successful at this than these other ones let's get that in there as well and then of course just tell us what we're missing we are like by no means the you know uh the end-all be-all of threat hunting we have a lot of experience we've been in some of the largest organizations in the world some of the you know most well-known organizations and and governments and you know and looked and evaluated their programs and we're just trying to share what we learned but please share with us we want to learn from you and now we've hopefully at least given you a place to get started where maybe previously you were like well yeah I have some things to share but I don't know where to put that and I'm not going to like spin up some website or like write another white paper or do whatever if you have three paragraphs that you think you can share or you know 120 characters like share that with us right so so please",
        "share your experiences share what works for you and share what doesn't work because sometimes that's even more valuable",
        "with that that's where you can get it actually hopefully I think I've saved it did you I think I think it's public but if not give me five minutes and I'll do it but I'm pretty sure I did all right",
        "um so thank you guys so so much I mean I really appreciate it I hope this makes sense and I hope that we can get everyone's help in to you know make this better because you",
        "know the Magics in the humans and so let's let's start working together thanks thanks thank you",
        "[Music]",
        "[Music]"
    ],
    "voDpk7nQAyw": [
        "[Music]",
        "now it's my pleasure to welcome online",
        "Quan Jin",
        "hi everyone it's a great honor to speak at black Tech USA 2022 today I will",
        "share some experience and insights",
        "um in the wild Windows LP the rebate hunting let me introduce myself first",
        "my name is changing you can also call me Lucas I'm currently employed in ebatp",
        "security my interests are vulnerability",
        "research and in the wild everyday hunting previously I had presented at",
        "Blue's head Shanghai 2019 and hitb 2021",
        "understand okay let's get to the point",
        "this is a gender of my talk",
        "let me first explain why we decided to hang on in the wild Windows LP 0-day and why we think this is possible",
        "as you can see in the picture from 2017 to 2021 Microsoft is closed a total of 28 in the wild Windows LP 0 days most of them are windows kernel renewabilities these vulnerabilities are often used by",
        "top level groups and could cause great harm for security vendors is very challenging to catch such a zero day starting in 2020 we began to think about the possibility of catching an in the wild when those LP very day so is it possible to catch an in the wild Windows LP 0-day in order to answer this question we should think about other two questions number one how to obtain valuable data stats that potentially helps their Base number two how to develop an effective detection method for the first question we have some private data sets yeah addition historical cases shows that public platform such as virus total may have their days therefore by using private and public data sets we can solve the first question for the second question there are two methods of catching a zero day from millions of samples Dynamic detection of",
        "static detection Dynamic detection refers to execution in a stand box or in a real environment and picking up a sample through abnormal behaviors such as antivirus and sandbox static detection refers to match samples whose basic signatures such as Yara",
        "and first answers have advantages and disadvantages we have tried first answers within our capabilities based on",
        "the result we think the static detection is most suitable for us we will detail the process later next I'll explain why we spend a lot of time studying historical in the wild Windows lp0 days",
        "so why should we learn from history there are three reasons number one some explode tactics are consistent over time",
        "number two sync from the attacker's wheel allows us for better defense and number three historical cases have been carefully studied by the community",
        "in order to learn from history we studied over 50 cves almost all in the wild Windows lpu 0 days and some long days that's from 2014 to 2021 be",
        "carefully counted the discovered vendor using organization patch cycle initial",
        "disclosure outcome usage scenario",
        "targeted system versions vulnerability",
        "model vulnerability type explore",
        "techniques public analyze blogs public",
        "explodes the original sample is have and",
        "some other information here I would like to focus on a few key points the first point is usage scenario",
        "whether the center was used as a standalone component or as part of a chair and whether the explode was used in a fireless form or was just contained in a job file this information will directly affect our selection of different detection methods",
        "the next point is targeted system versions many windows LP sample will",
        "check OS version before they are used you can only Trigger or explode in some specific versions this information is useful when making a Sandbox or a reproduction environment",
        "and next is vulnerability model by counting the vulnerability models of historical samples we can conclude which",
        "component is most targeted and which attack surface is most favored by crackers during a specific of time",
        "and this information is useful when we predicting the most likely vulnerability",
        "let's say maneuability type by counting the type of historical vulnerability we can infer which type of vulnerability is the attacker's most favor this information can help us configure reproduction environment for example whether need to configure driver verify",
        "and this information can also show the popularity of different vulnerability types",
        "next point is Expo techniques I think this is the most important information we can't explore techniques",
        "almost in the wild Windows LP 0 days from 2014 to 2021",
        "based on the statistic we have obtained some valuable conclusions for example B server side window plug manager is popular from 2015 to 2016 and",
        "the method of using previous mode to achieve actually addressed read and write has become more and more popular since 2018. and we also found that a",
        "method of using Edge and validate hander to lead kernel information is popular in the past five years next point is public analyze blogs and explodes the public blocks and explodes can turn the research results of the whole Community observing this existing knowledge rate is just like standing on the shoulders of jazz which is very helpful for us",
        "and finally the original sample is high we also pay great attention to collecting the original samples of each historical Windows LP zero day the files",
        "hashed and explodes of these original samples are the first hand information if we can detect result we can also catch similar samples in the future",
        "in addition to learn from history we",
        "should also learn from the latest vulnerabilities and explore techniques",
        "the reason as follows number one a new",
        "disclosed vulnerability may have balance",
        "number two a new Target Model will be fast and older by the whole community number three the attacker may have some similar renewability in use or which to use number four a new explode techniques tends to be used by attackers",
        "next I will describe how we compare different detection lenses and choose one from zero",
        "as far as we know there are three optional methods which to catch and in the wild Windows LP antivirus or something like it stand box",
        "or something like it Yara or something like it antivirus is the most powerful tool exposed Sky have constant in the wild Windows LP 0 days with the antivirus in",
        "the past few years the advantages of antivirus in that was deployed in large-scale real-world environments it can also detect strips in real time and have chance to extract encryptive privileged explanation component however not every vendors",
        "antivirus can be as good as the sky also antivirus is likely to be bypassed or Detective this increased the difficulty",
        "of developing an antiviral-based hunting method",
        "sandbox is another tool to hunt in the world's third day I had some successful experience in the wild office during the day hunting with the help of sandbox interested audience can refer to my previous speech on brewhead Shanghai 2019. unlike antivirus the sandbox environment",
        "is highly controllable and can be freely configured in addition the sandbox behavior-based detection makes it accuracy either I think sandbox is",
        "somehow not suitable for hunting with those LP 0 days unlike all face many LP explodes have OS version check to avoid unexpected bsod",
        "which makes them more Hider to sandbox you may think that we can solve this problem by making a few more environment but the number of new PE samples every day is huge each samples is delivered to",
        "a new environment means a huge resource over set overhead not every vendor has enough funding to affords this in addition stand dog based detection methods and other disadvantages but",
        "Windows LP samples number one some samples require payments",
        "but the sandbox cannot provide valid impairments by default number two some",
        "samples only lead to bsod without subsequent behaviors which is difficult",
        "to detect it number three there is a cycle between sandbox development and deployment which",
        "will lead to missing the best detection cycle for some latest experts",
        "Yara is another Master to hunt in the wild Windows LP rotate it is widely used for malware hanky Yara almost has no technique barriers no",
        "fears of various checks and if it's flexible in development and deployment while a new explore technique appears we",
        "can quickly convert it into words and fit it into the detection system finally it is lower cost than antivirus and sandbox but it also have some",
        "shortcomings such as it can easily the two-fourth positives and false negatives therefore if we use Yara to hunt in the wild Windows LP zero day we need to be very familiar with historical cases and",
        "we have done this before we have compared three hunting measures we finally choose Yara as our main hunting dancer because it is more easy more flexible and less expensive when you put Windows LP zero day hunting another reason we choose Yara is that after after writing some yellow words we back tested some historical Windows LP samples so I was surprised Yara from the better than expected next I will describe how to transfer learning experience into other words",
        "basically we have three principles the",
        "first principle is write reverse according to the signatures of each stage of exploitation",
        "normally a Windows kernel LP explode has",
        "the following stages vulnerability triggering hip functioning",
        "kernel information link arbitrary",
        "address read and write control flow hijacking privilege installation our task is to",
        "write reverse based on the common features of each stage here are two examples for kernel information leap the idea is to match against common Windows kernel information link techniques including but not limited to this",
        "and for arbitrary address read and write primitive the idea is to match against the following points",
        "and it should be noted that above idea",
        "at the top are just some possible ideas not all ideas are suitable for your own words and some ideas will lead to lots of false positive",
        "the second principle right to reverse or latest explode techniques here I give two examples in July 2020 our federal and coins paid offers the negative presented a new windows keep overflow exploit technique as the SST IC 2020 conference of",
        "studying their paper we realize that a method of actually addressed with help on private tribute in page Pro is universal and may be used in the future so we spend some time writing some yellow words for this technique it later turned out that this verse cause some high value samples and on 328 2021 his first guy wrote A",
        "Blog which disclosed in the wild Windows LP the rotate as mentioned in the article the sample achieved actually address read and write with the help of Windows notification facility AK AWS in",
        "try and August 2021 Alex plus gate of NCC group published two blocks detailing",
        "the explore techniques of CBE 2021",
        "31956 and explaining the method of using",
        "wnf to construct arbitrary address read and write creatives at the same time yes the song also would apply discussing an answer of exploit of",
        "exploding vulnerability with the help of wnf after studying these blogs we realized that the method is universal we again spend some time writing some Yara words on this technique as expected we did",
        "catch some high value samples",
        "the third principle is write words for",
        "the most likely vulnerability I also give an example here April 13 2021 his first guy was a Blog and disclosed CV disclosed TV 2021",
        "28310 which is an in the wild zero day in desktop Window Manager lest the",
        "amounts later vdi published another blog is closing another renewability CPA 2021",
        "26900 which is also a vulnerability in",
        "desktop Windows Manager this made us realize that this type of vulnerability may appear again in the future so we wrote some words for desktop Windows Manager maneuverabilities in ours a few weeks later we called cve 2021 33739",
        "built direct word is the first step in order to catch an in the white Windows LP zero day we need to build a whole system but here are some questions the first question is when an explode is matched by a verb how to notify Us in time it's our young address running on virus total we can use the notification mechanism a virus total hunting page we",
        "can configure the notify by email item when a new sample is matched our email will receive an application at once",
        "for us running on our own products we built a similar notification interface like PT and the second question is when we get explode how to quickly reproduce it and",
        "classify it we have counted the targeted OS version for each historical standpoint I studying historical cases this information can be used here in addition considering that what we count maybe one day one day or zero day we need to make all three types of environments and we need to update these environments over time in order to minimize the reproduction time we have made use type version of Windows",
        "the third question is what skills should we Master to debug different Windows LP explodes Let me Give an example here for those who have analyzed the windows kernel hip overflow valuability Windows",
        "kernel debugging and Driver verify are two basic skills besides those who have analyzed ew and covaluability it is",
        "necessary to using Windows remote debugging because directly attaching the",
        "dwm process will call system UI to become unresponsive the more experience we have the better we will answer this question",
        "no answer is perfect to make our system more accurate we have made the following tests and improvements number one use",
        "the collected history Windows lp-0 days templates to test the words number two use public parks and expose to test the growth number three for some cases with public parks and exploits cannot be collected try to write the parts and explodes and test the number four apply the rules to a large number of samples for stress testing and number five continue to convert latest explode techniques into words and test the jewels one year after the system was deployed we had caught lots of Windows LP vulnerabilities in next part we will share some we will share three cases which hung by our system and in the wild LP zero day in Windows were 32 kernel substitution and in the wild in in the world lp0 day in Windows desktop window manager and in the wild LP one day Windows common log file system let's look let's take a look at the first vulnerability in December 20 times in December 10 2020 we caught the first in the wild Windows kernel lp03 Microsoft science CV",
        "2021-1732 to this supernovation",
        "the inner bar sample was from our private data set we noticed it because it used Edge and validate hander to lead kernel information which is a strong",
        "signature of Windows kernel LP explode",
        "answer analyzes shows that the sample exploited a type confusion zero day in with 32 kernel model it is worth mentioning that in the white sample was used as an independent component when using the sample you need",
        "to provide a pib at the parameter the PID indicates the process which needs to be activated the targeted process will",
        "be terminated first then restarted with system privileges if you run this sample directly it will also escalate each cell into system privilege but it will exist without any visible Behavior",
        "here are some highlights of this in the white sample number one it targeted the latest version of Windows 10 operating system in at that time number two it's used at manual bar info to build arbitrary address with printing which is novel at that time number three before explode the in the web sample detected specific antivirus and perform",
        "certain version check",
        "the rest of the details about this third day can refer to our blog or many other blocks written by the whole community now let's switch to the second renewability",
        "in May 22 2021 we cut the second in the wild Windows LP 0-day Microsoft style CV",
        "2021-33739 to this vulnerability",
        "as I mentioned in the build the right reward part we will regularly predict the most likely vulnerability and the right words around May 2020 we wrote some rules for DW and renewability and catching some pwm and days we kept we caught an unfamiliar dwm Stamper on May 22. 1000 analyze showed that there",
        "were a one-day explode at another zero day in this Temple when we first met this Temple we didn't know it was compiled based a published SQL code as usual we reproduced it in a",
        "full patched environment the reproduced results clearly showed that there is a zero day in this Temple which is a uaf in ewn call",
        "then we tracked with relative source code on GitHub which is an explode of cve 2021 26868 the in the White Center",
        "just replaced the circled part at that",
        "time we are a little confused how can a one-day sample contains a zero day",
        "after carefully confirmation we concludes that the Ulster accidentally introduced a new bug when writing the xcode for CBE 2021",
        "26868 and is also music",
        "if so this third day cannot be classified to in the wild zero day so we try to tell msrc that this is not strictly in the what Verity",
        "and this is the explore status finally published by msrc",
        "so it's really an interesting case",
        "let me talk about this vulnerability mode this vulnerability is caused by unbalanced reverse count on C interaction tracker binding manager object in dwm code",
        "the steps to trigger this vulnerability are number one create our state interaction tracker bindings manager module results number two create a state interaction tracker module resource number three finds the results created by step one twice to resource created by step two as you can see in the picture and do not release this result manually under normal condition the state interaction trying company management planning manager will co-process the tracker binding mode twice to add risk to add reference count by two then the",
        "code will call remove tracker balance twice to stop reference count by two and release the interaction tracker planning manager no modeling when the reference count is reduced to zero you have vulnerability research a scenario the reference count of C inter the interaction tracker binding manager will change differently from normal condition it will core process that tried her binding mode only once to add the reverse count by two however the code will still call remove tricer bindings twice to stop reverse count by two in the first remove tracker bindings call the reference count over State interaction trying turbining manager will be reduced to zero then say inter say interaction tracker binding manager will be free in internal release function in the second remove tracker bindings code when it tries to get some data from the fluid object to your code uaf next let's see the third vulnerability",
        "in October 2021 we got a new in the white Windows common log file system one day the sample was from virus total",
        "as I mentioned in the build the right word part we will regularly write words for latest explode techniques on October",
        "15 2021 the role we wrote for pipe",
        "attribute it sample",
        "the Stamper was used as a standalone component by the testing revealed that this sample exploded a vulnerability which affects all project Windows version before September 2021",
        "this is a type confusion vulnerability in common log file system model due to lack of some information we are unable to determine the CV number of this vulnerability it may be one option of none of them the root cause of this one day is the clfs motor lets some checks on the client context over that the attacker can take advantage of this provide an invalid lines and text office",
        "so in the web sample leverage this to make the first client context of reset point to the second container context of reset in a blf file",
        "to then use a one bit flip in Flash mental data to change the second container and text officer from 1380 to",
        "1B a0 Flip 3 to B makes the container context of a set point to a fixed clfs container object",
        "with the help of the fixed CLS and clfs",
        "container object the explode hijacked virtual method State lfs container",
        "release and CLS antenna remove and built",
        "actually address flat screen team based on that the normal virtual function table of clfs container is as far as you can see the release and remove function and the hijacked virtual function table is as far as",
        "apart from this the in the watch sample built an archery address with prime team using the pipe attribute method described in the scoop Windows 10 Pro",
        "in order to get the address of a pipe attribute the explode using another public method its queries system big info with credit system Bitcoin information to list the address of a pack attribute object with kernel arbitrary address grid and right Primitives that explodes successfully swap the token of current process with the system token and spend a share with system privilege now let's take a look at how Microsoft fixed this valuability",
        "they only checked the value of client context of reset to make sure that it couldn't be less than one three six eight",
        "what if we construct a client context of",
        "a set that is greater than this value and make the client's context of exact point directly to a CLS clfs container",
        "object in memory",
        "we got a new bsod",
        "this is a direct of this patched one day and we report this variant to msrc at December 2021 Microsoft fixed this case",
        "in April 2022 and assigned cve",
        "2022-24480 to the to it okay that's the",
        "manipulative case still sharing part in next section we will combine our practice to share some detection suggestions on Windows LP vulnerabilities and give some insights",
        "into the future trend of in the wild Windows LP 0-day",
        "here are some detection suggestions our",
        "Windows LP vulnerabilities",
        "number one choose the most suitable method within your compatibility",
        "number two carefully study historical",
        "cases it's always a good thing number three keep an eye out for new virus a new in the wild maneuverability",
        "and finally some insights into the future trends of in the wild Windows LP zero day by us number one more vulnerability in common log far system may appear in the future number two pipe attribute method will be using again in the future number three in the wild explodes which use the following techniques may appear in the future",
        "and finally thanks to the skies I have learned a lot from them and thank you for attending my station",
        "[Music]",
        "[Music]"
    ],
    "tDUYny5SXi4": [
        "[Music]",
        "foreign",
        "I also go by Dr Q because my last name is a little complicated to pronounce and I'm here today to discuss with you a case study that we looked into where we Unmasked A very influential Twitter account trying to influence elections in another country and how the actor the digital actor behind that particular account was linked to another government so",
        "just a little bit about myself in brief I have about 10 years open source intelligence experience so ocent I'm",
        "also a professor at Florida International University I teach in their intelligence fellowship program and I have a PHD in social psychology I have a public and private sector experience doing ocean work and it all started as a I started my career as a social media intelligence analyst in 2014 and back then",
        "the problem set was Isis accounts on",
        "social media so I would look at thread actors online and you know that was one of the most influential High impactful digital campaigns and it caught Everybody by surprise but of course actors learn from each other so it's evolved a lot since then but that was the first time that we really saw the impact of how important of the impact was social media activism and information operations so today's presentation just in brief I'm going to quickly Define disinformation it's relevant to our case study the geopolitical setting I'm going",
        "to take you all the way to South America and it's a region that's often overlooked in the news and global news so it's particularly important for our case study because this digital actor was able to operate for long periods of time because and really there are very few eyes on that area of the world uh how we discovered this account a constant analysis so the behavior and how we attributed it and yeah and the motive it revealed motivation obviously and the impact and our our report was published in March 2022 and the digital actors did",
        "alter their behavior as well as a result of that so I'll walk you through our story now",
        "Okay so disinformation",
        "a lot of people confuse it with misinformation and what's important to note about this information is that it is purposefully put out to mislead the public it's super disrespectful I hate it I'm sure a lot of people hate it and misinformation is basically the same thing without the intent just people spreading information that can be perceived incorrectly or just false information just spreading it without knowing and then there's Mal information which is a separate thing but for the sake of this case study we're going to look at disinformation and I highlighted deliberate and intentional because",
        "you don't know the purpose or intention without knowing the source of your information so",
        "um that is super important we often look at this information through the content that's put out a Content analysis but that's always in response to something that's already occurred so if you really want to come in front of something of an information operation it's important to know your source and it's worth noting for this",
        "presentation in particular that disinformation thrives during political unrest I'm sure many of you already know that but it's worth pointing out because Society is vulnerable during these times",
        "um and yeah so without so intention once we know the who it's easier to understand the why and come in front of something so this is",
        "shaky so this is a digital",
        "um account this is a Twitter account that we came across it's I'm gonna refer to it as to Legos from here on Ford um it is suspended now from Twitter but at the time it was able to operate from December 2018 until March 2022 it's a",
        "Spanish-speaking account and you could see several interesting little characteristics here uh clovers for Assange is one of the hashtags it uses in its bio so automatically one can assume it's not going to be very friendly towards us or its allies in terms of content and it also Associates itself with the yellow vest movement that's what chaletos means in Spanish so it used a movement from Europe basically and tried to Rebrand in around rebranded around their own interests and yeah so",
        "we're gonna talk about this account just that it was worth an introduction up front so really quickly and if you want more details about the geopolitical situation in Latin America please feel free to ping me after this brief um but white Columbia basically is the question here it is this closest South American Ally to the United States um I don't know if many of you have seen narcos on Netflix but we have a lot of security cooperation with them and to tackle drug related issues Colombia is one of the main producers of the producer really of cocaine in the world so it's a very important issue that we have Partnerships I mean we the United States have Partnerships with Colombia um and this picture by the way is just an example of the military both the U.S and Colombian military doing different exercises together and one other thing the United States and Colombia have done besides cooperate with and security issues is Colombia's basically been on the U.S side when it comes to political lineage so if the U.S",
        "expresses concern about Regional",
        "adversaries like Cuba Venezuela or",
        "Nicaragua usually Colombia would Echo",
        "that and I'm going to put in bold every time Venezuela comes up right when we're looking at the geopolitical situation because this is what led us to the hypothesis about who might be behind this account so what of what about this account really stood out to us well it was tweeting a lot about uh opposition political candidate the leftist candidate for the Colombian elections that took place this year in May 2022 um and it was in favor of a gentleman named Gustavo Pedro and he is uh the",
        "president electable now he was inaugurated this week actually and he is the first leftist president in Colombia and he has a lot of views about what has traditionally been foreign policy with the United States he has his own views that would alter what has traditionally been um he's also former Senator former militant with m19 it was a militant group that's no longer active in Colombia he's friends with the farc another um a regional militant group in",
        "Colombia and that is now a political party and one key thing to note too is that back in the day he was friends with the late Fidel Castro of Cuba and Hugo Chavez Venezuela there we go again",
        "and that is him with Hugo Chavez",
        "so Petro stands towards the US I mentioned some challenges that would come up from this uh new Administration um challenges meaning that you know we had the United States had a consistent policy with Colombia and now this might alter it a bit so he's critical of U.S economic sanctions that's been the foreign policy Direction in the region he does not favor anti-narcotics agenda a little DEA sorry about that um that might be a challenge critical of extradition of criminals and",
        "key he promotes the rebuilding of diplomatic relations between the U.S and Venezuela there are crippling economic sanctions on Venezuela right now so who else wins if Petro wins Venezuela this is just a quick recap of the region right now in terms of its leadership so the majority of the region is leftist leaning which is you know fine but Latin America does have this funny thing it does that it's like a windshield wiper it goes really really left and then next time it goes really really sap uh right and then it just keeps doing this well Colombia hasn't really been victim to that windshield wiper situation and either have the air the states um that think tanks consider to be leftist dictatorships so this is the first time we really see Colombia be involved in this phenomenon",
        "so really quick I'm not going to go into details is basically what I'm going to walk you through um we were working on a project looking at human rights violations on a global scale I'm a Spanish speaker so uh we my team was looking at Latin America and we you know saw that there was a lot of uh a lot of social media activity around Columbia protests in May 2021 and this",
        "mysterious account with no identifiable information was really influential in the",
        "discussions but it didn't say whether it was in Colombia where it was who it is it was just inauthentic Behavior to the max it echoed also U.S adversaries so I mean of Clover's first sonj one would it's not surprising so and these include Uh Russian state-sponsored media Iranian state-sponsored media um Cuban and Venezuela so our hypothesis was that the Venezuelan government is attempting to influence Perceptions in Colombia with the goal of achieving political change in getting Petro elected and the result of our research was that the Venezuelan government likely used a third-party firm to conduct and engage in IO to include disinformation to help get Petro elected",
        "why we believe is because it helps",
        "soften U.S foreign policy towards it",
        "so this is the network that we're going to look at today um I'm going to walk you through this and this is a very simplified there are a lot more actors here but pretend this is like a mall directory and you are here so we already covered chaleko samaru and his little sub networks and yeah let's go on with the show here um Discovery so we were looking at these human rights violations and all of a sudden we see this this account we did a Content analysis on this account and we saw how many other Twitter accounts were retweeting telecos and found that it reached at least 8 000 retweets within",
        "two days during anti-government protests",
        "in Colombia and these are just Twitter accounts that actually have a geolocation or some sort of geo-reference to it which is not the majority of Twitter users so one can imagine the true numbers of this right um and here's an example of how it was actually utilizing trending hashtags related to the protests to influence the narrative it called the administration at the time a narco dictatorship and it used SOS uh Colombia",
        "they're killing us that was very common among protesters and digital activists",
        "so again just going over quickly this account up front we see it's uh labels itself as a community it has a high follower following um created in December 2018 that's a long time ago in social media world so there was no identifiable information large following interacted with the community so it was not a bot which means there was true effort behind it okay because it takes a lot more for a person and operator to be behind an account than to automate posts and just retweet it went out of its way to interact with the community and it echoed Venezuelan I didn't put it in bold my bad but Venezuelan and Allied state-sponsored news and it interacted with suspicious accounts which I'll walk you through active 22 hours a day on average and we believe that's because there were several operators behind this account because that's not humanly possible unless it's really not and then one interesting thing is that it posted true half true and false information and that's super",
        "important to point out because if you post even a small percentage of false information but the majority is true that means you gain trust from your audience and when you put out that false information they will believe you because you've established that relationship and that trust um and then another key thing was that it adopted domestic domestic hashtags in Target countries in Colombia one thing I did not mention earlier that is worth noting I'm using Columbia as a case study but this account basically Whenever there was political unrest in the region it would focus on that and try to get the um leftist politician elected when and there were a lot of since 2018 there have been several political um presidential elections in the region and we all saw how that looked a few slides ago so it's it's been very influential in framing narratives so to the fun stuff disinformation here quickly is an example of a fake post so it actually",
        "said there was that okay so there was a car bomb that occurred on a military base in the border of Colombia and Venezuela and this car bomb did occur but this account said that it did not occur and it also if you see right there it mentioned Russia's Spanish language news outlet and Gustavo Petro in order to get that narrative out another example of fake information is that during the anti-government protests the anti-riot",
        "police in Colombia took out their tank it said it ran over protesters um Associated Press looked into this and so did other and others and found that that what did not occur that was not true okay and now that was an example of the fake stuff now now it's meddling in the actual elections and the political process in Colombia",
        "so Gustavo Petro had wanted uh he asked",
        "supporters to spread information about 5 million votes in order to get Congress to be in favor of of his political you know policies just like Congress here you want the majority so to Legos of course it's like yes Petra we got you and they just they made a hashtag or they participated in the hashtag 5 million votes and then at mentioned several Twitter accounts that had characteristics that were basically the same",
        "um and including the creation date it and certain names like out here you'll see one that says Ortega Ortega's the last name of the Nicaraguan president who is considered a dictator and uh the Ortega team so there you go and we looked at this in November 2021 we're like oh that's interesting it's using the domestic hashtags in Colombia in order to get Congress to change that's important but then we looked again in February 2022 and all these accounts were suspended for inauthentic Behavior so it knowingly asked its",
        "audience its followers to follow these inauthentic accounts which again",
        "not not nice not nice for your audience to fool them and I mentioned different characteristics one of those characteristics where so true Petro supporters use so Petro put out something about the economy of a tweet and he mentioned avocado and bees so supporters started using those emojis in their profiles and so did the inauthentic accounts so here is the example of that and here are true supporters",
        "also using the avocado and the Emojis so they were trying to look authentic but they were not and there were other characteristics that I can elaborate on that",
        "led us to believe these were inauthentic as well so now this other part of the network this this account engaged with retweeted at mentioned again Venezuelan State News Russian State News Iranian state news and Cuba state news and here are some examples of of that so all the way on the left you'll see redfish and RT mentioned and then even as recent as June the president of Venezuela Nicholas Maduro went to Iran and went to his band TV facilities that's your Spanish language news Outlet um and on top of all that RT in Venezuela do have partnership media Partnerships so it makes sense that they would Echo this their perspective on the mat on matters of global issues so now to the really fun part and this was our favorite part was finding out who was behind this account okay rule number one follow the clues so we did we looked at chaleko's telegram",
        "channel that it links right in its bio and it led us to the telegram channel so we were looking around and saw that an entity named digital was the admin",
        "and ralito digital also mentioned somebody or reposts somebody's whose screen name was raid Noor so we love names so we went with it and um turns out was suspended from Twitter twice and",
        "there's also Venezuela listed so check mark number one now we can say that this account is likely linked to an entity in Venezuela and it said this is archive Wayback machine gave us this information political marketing so political marketing is using commercial marketing techniques to promote a candidate or an idea is and gain the trust of the audience or it's its target audience and you know if you're doing political marketing I would assume the news you're spreading might not be quite objective um so there you go and it also references in the bio so there we go check mark number two it made a reference to our to our account of Interest and then we got another name we love names so raid Noor turns out was",
        "a gentleman named Rafael Nunes and Rafael Nunez has really bad opsec so",
        "he also puts political marketing",
        "um in his bio he was super easy to find on social media because he's involved in marketing right so thank you",
        "um and he has an Instagram account that showed him meeting with uh Venezuela's",
        "telecommunication firm like leadership leaders in that organization so that's his friend Daniel I forgot his last name at the moment but our we have a report out if you want more details feel free to find that and or we'll provide that for you but yeah so really really interesting stuff so we're getting closer and closer to to the real you know reason why this account is operating the way it is and finding out why and then one key thing we found was who is paying Rafael Nunez most likely",
        "so we found his LinkedIn and he's Associates himself with um digital communication ve",
        "up there you'll see his cover photo again thank you for the bad opsic has um the logo for that and also relito digital so there you go the trio Nunez so now we know that chaleko's telegram channel is its admin is",
        "which is Rafael Nunez the community manager for digital communication ve",
        "so we got our next name because we followed the clues um digital communication ve its CEO is Jason Russell who is Jason the CEO and digital uh communication",
        "digital VA the Strategic and intelligent digital marketing again marketing",
        "um and he's also interestingly the former director of social media for Venezuela's Ministry of communications",
        "and information so the mincy and he retired in 2016 but through clever oh",
        "sent work and third-party tools we found that he still he has an active government email with the National Institute for socialist training and education still that is Jason so Jason also has bad opsec",
        "and he has several social media accounts this is his personal Twitter account and you'll see that its followers are really high level officials in the Venezuelan government",
        "they they've been around since Hugo Chavez time so very interesting to see them being actual followers because just some random business owner that was a government worker but I guess that could be so again that necessarily wasn't a it was a strong connection but we wanted more and we got that and our report didn't cover this but when I went back to prepare for this presentation I saw that um",
        "there you know the Facebook page that thank you Facebook for the page transparency it's super important for people to understand where they're getting their information from but it also helps us ocean analysts find more information and follow Clues so this page was actually created this is a company that Jason is CEO of in 2009 that was a very long time ago even though it doesn't feel like it um and it's the name of the page at the time was periodico patriagrande which",
        "translates to Great Homeland newspaper",
        "and it did have a an address uh I'm sorry a URL and its URL was registered by the mincy so it paid for that for it's its website so we already know that now its website is linked to the mincy and when you do open source research on the newspaper itself it's actually",
        "according to you know different news sources uh it was a university-led media effort to",
        "counter U.S narratives on global issues and it even included contributors with this again thank you way back machine for this because the website um wasn't working well um this contributors were Fidel Castro and Hugo Chavez when you have presidents contributing to a university effort like",
        "a media effort that's really weird so here we find the connection to the actual government",
        "there we go that's Nicolas",
        "so what happens",
        "Petro was elected as Colombia's next president and I'm not saying chalecos is should take all the credit for that but chalekos was certainly a factor in framing the narrative in the country we already saw that it did infiltrate discussions coming out of Colombia on politically sensitive topics so uh",
        "yeah congratulations",
        "and then two weeks later so two weeks later I don't I don't know if many of you know this but after he won this was announced um that there was going to be war games in the Western Hemisphere hosted in Venezuela with Iranian Chinese and Russian military",
        "presence so normally because Venezuela",
        "and Colombia do share a border their neighbors a Colombian Administration that is more on the you know on the same level ideologically as a United States which show con would Express concern over this it's less likely with Petro as president now and this is the first time these war games are hosted in the Western Hemisphere it's normally um in Eastern Europe there we are oh and this is a Cuban president in the bottom left",
        "so post-report behaviors our publication published in March 2022 at this account",
        "was suspended in March 2022 but two weeks before our account um our report went out it wasn't our doing by the way so Twitter finally uh took it down suspended the account after it started posting disinformation about Ukraine and echoing Russia's perspective on the matter so",
        "at least it was taken down but again it was able to operate since 2018. so",
        "um okay oops",
        "one moment so some characteristics we noticed it was less active way less active it also pinned the telegram Channel up to the top of its profile so where it's more it more freely able to share news that is inaccurate and and so",
        "yeah I mean just the Isis did this too by the way once uh social media platform started taking down their accounts they're like hey find us on this encrypted platform instead here you go um follow the follow the um path and now though it's labeled as media this is a new account it kept the brand by the way challenge Amar dropped a couple letters but people could still find it easy if they followed it before um it conducts Media news but its operators do",
        "political marketing",
        "it's it's not medium at least it's it could be but it's not objective but people again it will gain the trust of the people and perceive it as authentic Media news so in the telegram channel uh the actors did acknowledge our research twice",
        "um so on Twitter uh it posted it said um this is you know they talk about us even when they suspend us they were laughing about it and then in May again they actually posted our report to their telegram Channel which is great exposure and",
        "um they uh they think we were responsible or ralito and his team thinks we're responsible for their suspension when in fact they dug their own hole once they said the word Ukraine",
        "and uh cyberscoop did cover our story back um around that time and thankfully it did make its rounds with investigative journalists in the region so we did get exposure but down in South America so it's really important for people to understand what they're reading and who why they're you know the source of their information so at least we appreciate that so some general key takeaways do not trust sources you do not know sources of information reveal motives and it'll help you come in front of information operations instead of being responsive once it's already occurred digital actors engaged in IO adapt again",
        "you saw a Twitter suspended it but now it pinned its telegram channel to the top so people can just follow it and read all the craziness that happens in that telegram Channel um and next time it could be different too and we kept seeing the word marketing and this is political marketing okay so there is a request that comes in from an entity Venezuelan government We Believe research is conducted",
        "um the planning takes place the operation review and then a new request",
        "um and again content is important but it should not be the only thing you look at when looking at disinformation because guess what academics are studying how people fact check their information and that can get into the wrong hands and further manipulate everything what do I mean here's an example of that so this uh this is a Russian study on how people check information this is on a Russian population um but they do recommend that people who research this further again not necessarily malicious but it could be used for malicious reasons in the future the information the findings that come from this so oh sync key takeaways be suspicious of accounts with no identifiable info follow the clues and historic data often",
        "provides really good leads but most importantly the last two points which are not often discussed we have complete political neutrality no matter what our beliefs was because otherwise our biases would probably influence the direction our investigation would take so we just let the research guide the research and it's important to do that as an ocean analyst as well in general and then be supportive of your team as an analyst we come across a lot of disturbing content and it's important for teammates to be there for one another be and get the help if they might need it so with that I'll finish my brief and thank you so much for your time and for coming today [Applause]",
        "[Music]",
        "foreign",
        "[Music]"
    ],
    "N54VevVxrgQ": [
        "[Music]",
        "foreign",
        "and welcome to browser power desync attacks",
        "have you ever had an idea and then just dismissed it because there's no way that that would ever work three years ago I thought wouldn't it be cool if you could make browsers launch desync attacks that would enable some really interesting possibilities",
        "but I figured that there was no way that any web server was doing something foolish enough to make that possible",
        "this year I discovered I was completely wrong you can achieve all manner of interesting things and in this session I'll show you how",
        "like many discoveries the journey that led to it was quite windy it started in late 2019 when there was a Spate of requests smuggling false positives even leading to an incorrect cve for nginx",
        "I had a look at what the root cause of this was and declared that there was a simple solution",
        "and to do was never reuse HTTP one connections when looking for request smuggling",
        "and after that well everything was wonderful until last year when I realized that connection locked request smuggling was a thing and the only way to find this was to always reuse HTTP one connections so at this point we had a bit of a mess this year I set out to tackle this and after quite a lot of effort I eventually found that by slowing things down and paying really close attention to the exact sequence of events I could reuse connections and still distinguish genuine vulnerabilities from false positives and that was nice but sometimes when you pay extra close attention to things you find more than you bargained for on one website I noticed that something wasn't quite right and I pulled on that thread and what I found broke my mental model for request smuggling because the resulting attack didn't require an",
        "attacker and that meant it didn't even require a front-end server and that opens a whole new frontier of attack surface so today I'm here to share with you a methodology and toolkit that I've built to navigate this new world demonstrated with exploits on Apache Akamai varnish",
        "amazon.com and multiple web vpns",
        "first we're going to get warmed up with HP handling anomalies",
        "after that I'll share the client-side desync methodology using four in-depth case studies then I'll introduce pause based desync including a live demo because the attack is so cool and unreliable I couldn't resist and uh after that I'll chat about defense key takeaways and wrap up with five minutes of questions",
        "there's a lot of techniques in this presentation and I really want them to work for you so as part of that whenever you see this squiggly logo on a slide that means that my team has built an online replica of this vulnerability so you can practice that technique on a real system online for free I'm also releasing the code that powered every finding in this presentation and whenever there's a named Target you'll find full proof of exploit code on the white paper even if I haven't managed to squeeze it onto a slide",
        "we're going to start with a series of six esoteric vulnerabilities that directly led to the discovery of client-side desync attacks and also really quite valuable in their own right but first there's something I need to tell you the request is a lie HTTP requests are a",
        "really useful abstraction but in HTTP 1",
        "this abstraction is incredibly weak and the harder you try to cling on to this concept of a request the less sense the techniques are going to make so at all times just bear in mind that all we're really doing is sending a stream of bytes to the server and what the server does with that is up to it",
        "for example if you believe in requests it's all too easy to forget about HTTP connection we use most of the time because HTTP is supposed to be stateless",
        "but sometimes State just finds a way to creep in take this website that I found they had a reverse proxy which was set up to allow me to access sites intended to be public and not to let me access private sites on their internal Network",
        "but it was only validating the host header of the first request on each connection so by sending a legitimate request followed by my request to access an internal system I got access to that internal system now fortunately this particular bug class is quite rare but there is a more common variation which I'll call First request routing",
        "this is when the front end looks at the first request to work out where to Route it and then just pass us all subsequent requests on the same connection straight through to the same back end this Behavior by itself is not really a vulnerability but you can use it to hit any back end with an arbitrary host header so it can form part of an exploit chain in this example here I want to hit the back end with a poisoned password reset header to generate a poisoned",
        "email but if I try and do that directly it doesn't work because the front end won't route it to the right back end but once again just by prefixing my attack with a genuine request with a correct host header I can hit that back end generate a poisoned password reset email and hopefully hijack someone's account",
        "so hopefully that technique will come in useful for you but there's also a broader takeaway which is that sometimes it's good to peel away these abstractions because they can hide Behavior that's really quite important",
        "now you know the deal with request smuggling right you make the front end and the back end disagree about the length of the message you use that to apply a malicious prefix shown in Orange to the victim's request that makes bad things happen to the victim and to make that length disagreement happen you usually obfuscate the transfer and coding header to hide it from one of the two servers and so I was a bit puzzled when I found you could trigger really suspicious behavior on quite a few websites using aws's application load balancer using",
        "this HTTP 2 request",
        "if you look at this request you might wonder where the attack is because it's a legitimate request it's specification compliant and there's no obfuscation in it there's really nothing sketchy going on here and yet this was triggering some really shady behavior and after doing a bunch of Investigation",
        "I discovered that what Amazon was doing is they were downgrading this request to http one and when they did so for some reason they were adding a header that said this message was chunked now I've genuinely not sure why they were doing that but my best guess is that it's because browsers always send a Content length header even when they're using HTTP 2. even though it's kind of pointless when you're using H2 so Amazon ended up with some logic that said well if the request doesn't have a Content length header I guess it must be chunked so using that just by changing the payload I sent slightly I could trigger an exploitable desync or a whole bunch of websites I reported to Amazon they fixed it pretty fast but the main thing was this taught me something really important which is",
        "full request smuggling you don't always need header obfuscation or ambiguity",
        "all you need is a server taken by surprise",
        "we'll come back to that later now let's take a closer look at the connection locked HP one request smuggling issue mentioned earlier to confirm regular request smuggling all you need to do is send two requests and confirm that the body of the first request affects the response to the second as shown here and this works great provided you send those two requests over separate connections if you send them over the same connection you've got a problem so here we're sending and receiving exactly the same bytes but we can no longer tell where the front end thinks the message ends and therefore we can't tell if this system is really vulnerable",
        "the solution to this is to realize that the bites that you get aren't the only information that you have available you also have timing information if the front end thinks that this initial message is chunked that means it's actually starting to generate a response before we send the orange payload so before setting the orange data you can pause and do a read on the socket and see if you've got a request back from the server and if you do that tells you that the front end is treating this message is chunked it's not using the content length and therefore you can bail on the attack because it will just be a false positive anyway meanwhile if your read attempt hangs for several seconds that shows that the server thinks the message hasn't finished yet and therefore it must be using the content length and as long as the rest of the attack pans out must be vulnerable so I automated this technique it does work I went scanning with it and found a bunch of systems uh including one that was slightly funny because they were using barracuda's web application firewall in front of IIs and they were vulnerable because of the web application firewall and what's more Barracuda had actually already issued a patch for this vulnerability but they hadn't flagged it as a security fix they just said it was a bit of a hardening measure and as such the client hadn't bothered to install it as usual though the best desync that that technique found is the one that initially made the least sense after extensive testing in refinement it looks like this",
        "now there's two things to unpack here",
        "first off as you can see the back end server is completely ignoring the content length of this message so that means this is something you could call a c0.0 desync which is a rarer attack class that's not detected by any public black box tools currently",
        "secondly well why is the backend server ignoring the content length there's no reason right",
        "they're just ignoring it because they feel like it and it never occurred to me that that might happen and that has serious consequences",
        "finally this left me wondering given that I found this vulnerability here by accident well how many more sites will I find if I go deliberately looking for this issue I'm pleased to say the answer is quite a few for example on amazon.com they",
        "ignore the content length if you do a post request to the path slash B using that I was able to trigger a proper server side desync and I made a proof of concept which stored random users requests inside my Amazon wishlist",
        "so I send the attack a few times load up my Amazon wishlist grab some random person's credentials from their request and I can access their account so I reported this to Amazon they fixed it at some point and then I realized I made a terrible mistake I'd missed out on a much cooler attack",
        "this attack here exploits a random live user right and there's no obfuscation in this attack request so that means that request can be sent by a browser so if instead of doing the wish listing I'd use the head technique to execute JavaScript in the victim's browser",
        "I could have made every user that got hit by this spread the attack to 10 other users effectively making a self-spreading desynchronization worm and compromising every active Amazon user with virtually no effort on my part",
        "so that was a cool finding a missed",
        "opportunity and also a hint at an entire new attack class",
        "which we'll call client-side decent",
        "every decent attack we've seen so far including the Amazon one has desynchronized the connection between the front-end server and the back end server but if you can make a web browser cause a desync you can Target the browser's own connection pool and therefore exploit sites that don't actually have a front-end backend architecture",
        "this attack flow starts with the victim visiting the attacker site which triggers two requests to the Target the first one desynchronizes the browser's connection so that the second request triggers a harmful response to go back from the Target website to the victim generally given the attacker control over the victim's account",
        "to build these attacks I've adapted the methodology from classic request smuggling the key difference with client-side desync is the the our entire exploit needs to run inside our Victims web browser and that is an environment that's a lot more complex and uncontrolled than a dedicated hacking tool and so as such it's crucial to periodically check that the proof of concept that's working in your tool also works as expected in the Target browser",
        "tooling wise I did this with custom code which I'm releasing to GitHub straight after this presentation uh I also designed a new burp Suite feature called send request sequence which offers similar functionality but with a slightly gentler learning curve uh for the Target web browser you can this technique works on all browsers I've tested personally I focused on Chrome because it has the best developer tools for building this kind of exploit",
        "the first step towards an attack is just to identify your client-side desync vector this is a HTTP one request with three Key Properties first and foremost the server must ignore the content length and this usually happens because your request either either triggers some kind of server error or the server just wasn't expecting a post request to that endpoint so in this example here I'm just doing a post request to a static file which they might not expect and as you can see I've sent a contact length that's higher than the data that I'm actually sending so if a server responds to this request immediately that's an indication that it may be vulnerable to a client site desync",
        "now the other key request the other key requirement is that this request can be triggered in a web browser cross domain so that means that you must use the post method and you can't have any unusual headers or header obfuscation or stuff like that and also the target server can't advertise support for HTTP 2 because this attack exploits HTTP 1 connection of a use and browsers will aggressively prefer to use HTTP 2 if the server supports it finally I after your client-side decent Vector request the server has to leave the connection open because there's no point in desyncing a connection that is immediately closed",
        "once you've found your client's idsync Vector the next step is to confirm it works inside a real browser you can do that using some JavaScript that looks something like this as you can see here we're sending two requests the first one is going to desync the connection and the second is going to suffer the consequences in the initial request I've got a couple of special Flags worth mentioning uh first off I'm specifying mode no chords this is not actually required for a successful attack but what it does is improves the visibility we have into what's happening inside the dev tools which is very useful when it doesn't work as expected secondly specifying credentials no",
        "credentials include is essential",
        "web browsers have multiple connection pools per website and if you poison the wrong connection pool I can promise you an extremely frustrating time",
        "now when you run this if it's successful you'll see two two requests Landing in the dev tools with the same connection ID and you should see that the second response has been affected by the malicious prefix in the first request as shown here",
        "if that works well congratulations you found your first client-side vsync now it's just time to build an exploit you've got three main options here first off you could try and store the user request somewhere where you can access it much like what I did on Amazon uh that works the same as server side desync so I'm not going to waste time talking about it now uh secondly there's an all-new option which is chaining and pivoting a client-side desync lets you make your Victims web browser send arbitrary requests arbitrary strings of bytes to the Target website so that turns their browser into your personal attack platform and it puts extra attack surface within your Reach For example you can make them put log for Shell payloads wherever you like and send those to internal systems that you can't directly access and you can even hit authenticated attack service using their using their credentials in a approach that's a bit like cross-site request forgery but more powerful because you don't have the same browser implemented restrictions on what requests you can send I'm going to focus on directly exploiting the end user now I've tried quite a few different techniques for this and had the most success with two well-known gadgets from server-side request smuggling with certain tweaks applied to overcome some of the challenges that we're going to encounter so that's the methodology let's try applying it with some case studies",
        "first off we're going to exploit a straightforward vulnerability that affected a huge number of websites using the accumbai CDN here the desync Vector is nice and simple you just do a post request that triggers a redirect from the front end and now ignore the content length causing a client-side desicc",
        "confirming this in a browser is also nice and simple so here I've crafted the malicious prefix in Orange so that when the browser follows the server redirects it's just going to end up getting the contents of the robot's txt file",
        "now for our exploit I'm going to use the head technique if you're not familiar with this technique it's documented in more detail in last year's presentation on HTTP 2 but the gist is we use the head method to queue up multiple responses that when combined are harmful in their browser and it's that simple if you're doing a server-side desync but because this is client site there's a couple of extra things that we need to fix first first problem is that the initial response coming back to the browser is a redirect and so the browser will immediately follow that and that's the request that will get hit by the poison socket and that will break our attack second issue is something I'll call the Stacked response problem whenever Chrome reads in a response from the server it deliberately does a little overread on the TCP socket to see if the server has sent more data than expected and if Chrome sees any additional the data it quietly drops the connection and",
        "breaks our attack",
        "fortunately we can fix both of these issues fairly easily on this target so you can fix the Stacked response problem by adding a cash Buster to the request which means it causes a cash Miss on the front end goes all the way to the back end and that incurs such a big time delay that by the time it gets back Chrome has already done the overread and therefore hasn't seen it and the exploit works and secondly we can easily stop the browser from following the redirect by changing mode no cores to mode cores causing an exception when the redirect is seen which we can then catch and continue with our exploit",
        "for our next Target we'll hit Cisco's web VPN and here causing a desync is even easier you just do a post request to their home page using this we can easily trigger an unexpected redirect to our website which could in theory let us hijack a JavaScript resource load and take full control of the site the problem is when a browser renders a page it loads all the resources at more or less the same time and that makes it really hard to ensure that we hijack the correct request fortunately there's a solution here because this redirect response coming back to the user is cachable so if we poison the connection with this response and then navigate the browser to this slash win.js Javascript file that we want to poison the browser is going to see this redirect and get bounced back to our site but it will also save that redirect in its cache so when they land back on our website we can send them on to the login page on the VPN which then tries to import that JavaScript resource and ends up loading the poisoned version from the cache and gives us full control of that page and hopefully their passwords",
        "so I reported this to Cisco and they didn't reply for a while and then when they did and they said actually they're going to deprecate this product so they're not going to bother fixing this issue but to their credit they are issuing a CV and an advisory for it",
        "next up uh we're going to hit the main website of Vemma site so on this website you could trigger a",
        "desync using a URL encoded forward slash once again I don't really know why but unfortunately that wasn't the only thing a bit unusual about their setup for reasons that I sadly don't have time to explain to get a working exploit I had to send a head request with an incomplete chunked body and then tune the size of the follow-up request so that it's slotted inside that trailing chunk now the interesting thing here is this",
        "approach is exclusive to client-side desync because if you're doing a server side that you think you don't control what the next request will be and therefore you can't accurate accurately predict its size and so attempting this technique will fail so it's worth bearing in mind that although client-side decent can be painful sometimes you do have some extra options available to you",
        "speaking of painful for our final case study we're going to Target pulse secure VPN here you can trigger a desync doing a post request to slash robots txt and just like Cisco's VPN they've got host header redirect Gadget that I'd like to use to hijack a JavaScript import but this time the redirect isn't cachable so we can't do cash poisoning and we're in this scenario where our attack timing is crucial and therefore I had to take three key steps to make this attack at least a teeny bit reliable first off I pre-connect the victim's browser with the Target website to reduce the effects of network Jitter on the on the attack timings to be honest this probably doesn't actually make any difference but it does work uh the more",
        "importantly it's essential that we can have multiple attempts at our at our attack because it may fail but a failed attack and leaves the user on the Target website so I was able to resolve this by opening an extra Tab and just running that attack inside that tab finally if the attack fails and the browser ends up caching the genuine non-poisoned Javascript file then we'll have to wait for that file to expire from their cache which could take weeks so it's essential that that never happens but I was able to avoid that by finding a page on the pulse secure VPN that add a JavaScript import that never got cached because the file the Javascript file wasn't actually present and just always for a foot so by stitching all of that together I built a proof of concept but we'll just see a quick video of here hopefully so you see the extra tab pops open loads the target page a couple of times and eventually our payload fires and we get a full control of the site I've reported that to pulse secure and they they said they fixed it last week but I couldn't find any advisory for or anything so I'm not 100 sure what's happening there uh but there we go",
        "so that was client side desync now we saw earlier that slowing down and pausing can reveal useful information",
        "it turns out pausing can also create entire new desync vulnerabilities that are hilariously simple to trigger a pause-based async when speaking directly to a vulnerable server you can start by just sending your headers promising a body and then just waiting and eventually the vulnerable server will hit some kind of timeout and send a response and then you just follow up with the rest of your of your request and the next one and that will be interpreted as a separate second request causing it basic",
        "I initially found this Behavior on varnish through an extreme fluke it was multiple different bugs in my code combined that made me find this and once I realized this before this this was a thing I went looking for it I found that it also works on Apache it seems to tend to happen on an end point when the server is generating a response itself instead of forwarding the request to the to the back end or handing it off to the application layer now this single vulnerability enables",
        "two completely different attacks",
        "first off let's use it to cause an old-school server-side desync for this",
        "to work you need a vulnerable server like Apache as a back end and a front-end server that streams the request specifically it needs to forward the request headers without waiting for the entire request body to a life",
        "now what you do is what will you send your request you promise to send more data and then you wait for this timeout to happen as before but we don't necessarily what",
        "the front end may not actually read in this timeout response and pass it on to us until it's seen us send a complete request so what you need to do in practice is send your headers and then pause until you think a timeout has probably happened on the back end and just then just continue unprompted and send the body and the follow-up which should trigger a poison response I've updated",
        "the turbo Intruder tool to add a couple of different ways of saying where you want to do this delay and how long it should wait for before sending the rest of the request so you do this and that's it you've got a nice server side desync at this point well you might be thinking well that sounds really nice but what front ends actually stream requests like",
        "this oh well I just found out yesterday that this is much more common with hv2 but that's not what I was looking at when I did this Research In This research I found it works on Amazon's application load balancer but there's one extra catch they've got a defensive measure called early response detection",
        "if they see a response come back from the back end before the request from the client is completed then they'll bend the connection and our attack will fail I mean thrash the connection sorry uh if fortunately this is designed to",
        "prevent bugs rather than actual attackers from what I can tell so it's really quite easy to bypass you just need to identify the back end timeout and then make the orange payload hit the front end in the time window between the back end generating the timeout response and the front end seeing it this basically this attack may require a few attempts but it's ultimately worth it",
        "there's one final catch you may encounter which is uh quite a lot worse this is when the front end and the back-end server have the same timeout configured on application load balancer that creates a race condition within a race condition that we need to hit which makes life really painful I it may be possible to reset the front-end timer without resetting the back end timer by sending some data that the front end sees but then normalizes and doesn't send on to the back end but nothing I tried actually worked eventually I just gave up of trying things and I was like you know what I'm just gonna leave set a vanilla attack running and just leave it going and just forget about it and uh 66 hours later it was successful so this is one for the patient",
        "so that was server side pause based async that just leaves us with one final question which is is there such a thing as a client side poor space desync now I",
        "couldn't find any way to make a browser pause halfway through issuing a request but SSL and TLS don't stop attackers from delaying your traffic so there is a potential attack the attacker triggers a request in the browser that's really big it gets split into multiple packets and if the attacker can delay the right packet that can cause a pause-based client-side desync",
        "good I've got time so that might sound a bit theoretical but this is blackout so I've made a proof of concept that uses this technique on a default Apache based website to execute arbitrary JavaScript and kind of break TLS",
        "uh on the in the victim's browser uh the attack code looks kind of like a normal client-side desync except I've injected tons of padding so the request gets split into multiple packets on the attacker's middle box I've just used the following code to implement the delay it just says slow down traffic by 60 seconds if it's going to the Target website and it's in between 700 and 1 300 bytes in size uh this demo is not the most reliable because it's based on how the browser decides just to split the packets up uh but it works most of the time we'll see what happens",
        "so two and we got to kill uh so on the",
        "on the victim side I'm just gonna Sox proxy the victim through a box on Amazon",
        "uh that's being man in the middle just so the local network doesn't mess things up too much uh and here I'm just connecting to the attacker machine",
        "[Applause]",
        "all right so you can see the code I've got here to slow down the packets of a certain size and uh the only difference from the slide is that I've changed the vulnerable website timeout from 60 seconds which is the default down to five seconds so the demo doesn't take ages so I'm only injecting a six second delay on the packets now I've just launched TCP dump on the attacker system and",
        "if the attack is successful what we'll see in TCP dump is a few packets going through and then a particular large packet being resent by the browser multiple times because the browser knows that it hasn't reached the server yet and it thinks it might have been dropped but the attack is actually just slowing down all those packets and it'll eventually let them through and if everything works that will cause a server-side desync and cores a nice alert box to pop up in the browser so uh let's let's see if it works shall we",
        "okay we can see one packets being resent a bunch of times here so any second now in the browser hopefully there we go excellent",
        "cool [Applause]",
        "cool thanks so yep that's one that's one vulnerability but as you've seen two completely different attacks coming out of it uh we can skip my backup video because it actually worked uh",
        "foreign",
        "that was the final attack of the presentation so let's talk about defense",
        "these attacks almost all exploit HTTP one so if you can use hb2 end to end if you can't use it end to end I would not recommend doing HP downgrading from H2 to H1 because that introduces extra risks the second point is and I'm genuinely not sure what other people are going to think about this but honestly it's really easy to make a HTTP one server and it's really hard to make a secure HTTP one server so my advice would be avoid coding your own HP one server if you can that said I think software diversity is a great thing uh so here's some advice if you're a server maintainer and you want to harden your server or patch an existing client-side desync vulnerability",
        "there's a bunch of further reading available the three key things I would suggest are check out the white paper that's the top link have a go at the online Labs that we've made to get some practical experience and then try out like my code to scan and find and exploit some real vulnerable systems uh feel free to chat me an email to let me know how it goes there's also a presentation this afternoon that is kind of related to this one actually so you might want to check that out uh the three key things to take away are the request is a lie HTTP one connection we use is harmful and all you need is a server taken by surprise I'll take about three minutes of questions now if you have any more after that feel free to come and chat to me at the back or just chat me an email time to forget to follow me on Twitter thank you for listening [Applause]",
        "so we've got two minutes any questions",
        "foreign",
        "thank you [Applause]",
        "[Music] [Applause]",
        "[Music]"
    ],
    "ZqWGaDWEc1Y": [
        "[Music]",
        "hi everyone I'm Han Yan Welcome to our talk broker match new attack Services of Bluetooth smash in this talk we will discuss some common attack surfaces and vulnerabilities of Bluetooth mesh technology",
        "first let me introduce our team we belong to the Baidu alt security team we now focus on the security of Android and Linux platform and our duty is to discover zero-day vulnerability and",
        "explore possible defense Solutions",
        "in this talk we will first introduce some basic concepts of Bluetooth mesh technology and then we will analyze the attack surfaces to show where to attack when to attack and how to attack and next we will introduce PR image further an automated fasting tool for Bluetooth mesh and show its effect with several case studies",
        "well let's start with the Bluetooth slash technology Bluetooth smash is also known as Bluetooth re mesh or VR image it is a",
        "wireless management working Technology based on bre a Bluetooth smash was made public by seek in 2017.",
        "and now is widely used in smart home and Industrial llt and other things",
        "we're hearing the Bluetooth smash may be one of the most confusing question is what is the difference between Bluetooth Smash and the Bluetooth classic or Bluetooth re we think the main difference is that Bluetooth classic and ble are wireless communication technology they are just like Wi-Fi well the Bluetooth smash is",
        "not working technology it's just like the TCP and this figure shows their protocol stack as we can see Bluetooth smash has a network layer but the other protocol do not",
        "since brutal smash is a networking technology Communication in Bluetooth mesh is no longer just point to point a large number of device forms a network and communicate with each other",
        "formally device in the mesh network is called node and you could see there are many types of nodes but we only need to focus on the based node and the Really node here okay let's see how the message flows in this network assuming that the node a wants to send some message to this node e it can just pass the message to the relay node queue and the queue will then forward the message to E in this process node a actually advertises the message to all the nearby nodes include the node B node hero and",
        "node p and so on but only the relay node Q will do the forward job and we call such communication mechanism as managed flooding",
        "we have figured out how message flows but how to represent the source and destination of a message in fact just like TCP each node in mesh Network high will not work address there are basically four types of drives but we can focus on two of them the first is unique Castle Choice it is an address for each individual node and the second is the group address it is an address for a group of nodes and in this example node B has a Unica suggest well node C and node D has the same group contrast so node a can send message to node B just by its unicast Flash and the node a can send a message to C and D at the same time by their group address",
        "let's further understand the Bluetooth smash communication from a higher level Bluetooth smash adopts message oriented communication which is also known as publish and subscribed",
        "here publish means Sending message to a specific address a node can publish message to unicast address on Google just well subscribe",
        "means start to receive message with specific destination address",
        "no one can subscribe to a group address we also see the example",
        "these slides has have subscribed to the",
        "Google Translation well this switch can publish an all message to the Google transportation to turn on those lights",
        "so in summary Bluetooth smash is a networking Technology based on pre and",
        "the nodes can communicate with each other in the network",
        "okay in the second part we will analyze the attack surfaces of Bluetooth smash or resource scope include two aspects",
        "the first is protocol and the second is wrapper application here the protocol means Bluetooth smash specification which is proposed basic",
        "and wrapper application means software framework for providing Bluetooth smash capabilities to up layer applications",
        "and further we divide the protocol into two key stages the first is Network view stage and the second is Network control stage on the other hand in this research we focus on software implementation vulnerabilities of Bluetooth smash such as memory corruption",
        "but let's start with the network viewport local Network view is a process in which new devices join the mesh network with the help of a match kit week formerly the network field is called providing it and the mesh Gateway is called provisioner and the new device is called unprovising device Network build protocol contains file procedures but we just need to know the overview that's okay and provided device for the standard",
        "specific Beacon to the provisioner to announce that that I want to join in the mesh Network and provide another build Link with the unprovising device and",
        "then both of them provide some necessary information to each other and here is a critical point the provisioner and unprovising device will calculate a shared key using ecthr algorithm and use the shared key to increase something for Authentication we should not decide the authentication is often based on some window specific parameters which means that a device of",
        "window a may not be able to join the mesh Network through a provisioner of window p and finally the provisioning style",
        "unprovising device will send the link close to the provider to end this link and also notice that if providing Fields provider can also send link close to unprovising device",
        "next we need to take a further look at providing a massive format in fact all the message used in",
        "providing follows these formats we can",
        "see the whole package is just a Bluetooth low energy advertising packet",
        "which means that the Bluetooth smash is",
        "actually built on top of the Bluetooth low energy and the data related to providing are",
        "all here in the generic providing pdu and",
        "especially in these two in the transaction star pdu and the transaction to dupu so how the mesh protocol",
        "implementation pass the generic",
        "providing pu is the key point of vulnerability mining",
        "okay let us see the time surfaces of the network build stage first we need to decide when to attack we think the attack should be carried out before the authentication because in",
        "these procedures no actual information is required so the attack is applicable",
        "to any Windows specific device",
        "and next we need to decide what to attack and after our study we found that the",
        "segmentation and for example the mechanism is a perfect Target the segmentation and reassembly are designed for transmitting extremely long data it is relied through these two the",
        "transactions started new and the transaction continue PU here the transaction star pu is the first segment under transaction continue pdu at the beginning",
        "we considered the cemented binary",
        "assembly as perfect Target because it is a general mechanism so that supported by other mesh devices I mean while receiving and caching segmented packet",
        "involved memory operation which are very likely to cause memory corruption",
        "so we can attack the segmentation and",
        "resembly by mutated lines related fields of transaction star pu and the transaction continue view the fields are icgn totalized under segment index",
        "and we will show are automatically fasting tool for this purpose later",
        "in summary the thread model of a network build attack surface are shown here the attacker can be either a provisioner or an unprovising device",
        "followed by the provider it can send amount from segmented package to victim",
        "and providing device after building link",
        "and the vulnerability will be triggered on waiting during its real assembly",
        "and similarly a tight unprovising device",
        "can send mail from the segmenting package to the victim provider after receiving the providing invite",
        "here",
        "okay next let's see the network control protocol Network control is a precise data one device and message to other devices for example a switch can send some message to the lights to turn on those lights we call it Network control and the network control protocol follows a layered architecture and they are totally eight layers here we can just focus on the network layer and the transport layer here",
        "in network layer they are network address including the social trans SRC",
        "and the destination address DST",
        "and in transport layer or most",
        "specifically in the lower transport",
        "layer there are Fields designed for the segmentation and real assembly well yes the network control also supports the segmentation and with assembly mechanism",
        "double to smash natively supports some security features and one of the main security features is the message of application and encryption",
        "in Bluetooth smash there are two keys for the encryption and they are known as Knight key and apt key the Knight key is used to obfuscate and encrypt fields of network layer here and the APB key is used to encrypt the fields of upper transport layer here",
        "I enhance if we have no keys we can only know the IBI ID at the next time I see here because they are in raw uh but if",
        "we have the net key then we can pass the whole much more clear and the whole lower transport layer",
        "and if we have Knight key and APB key we can pass the whole message",
        "okay next let's see the attack surfaces",
        "of network control stage similar to the network view stage we found that segmentation and the real assembly mechanism is an ideal tax",
        "Target in the network control stage in addition to the reason that it is a general mechanism and involves memory operation it is also because that the segmentation unreasonably occurred in",
        "the lower transport layer",
        "so that only net key is required not apt key or what is this Advantage we need to know that all the devices within the network have the same night key but different device may have different APB key as long as the attacker joined in the match Network the net key can be obtained it means that the attacker can send main Siege malware message to any other device",
        "and we can also attack segmentation and reassembly by mutating the last related fields such as this control icgo icg and",
        "the second time here",
        "well those three model of network control attack surface is shown like this from this right model we can see in Bluetooth smash the attack Vector is no longer limited to the adjacent",
        "the attacker device a can send the mail while segmented package to nearby with",
        "him the devices and it can also sent to",
        "remote with Team device D with the help of the relay node life",
        "so vulnerabilities will be triggered on victim during the resembly",
        "we have finished the attack surface analysis for Bluetooth my protocol and",
        "finally let us find out the attack surfaces of bluetooth smart Shopper application",
        "first we need to Define what is a wrapper application",
        "this figure shows a typical framework of Bluetooth Smash in Android the mesh capabilities are wrapped as airdr service provided by this process",
        "called the Android Bluetooth uh other",
        "Android app can utilize these capabilities through the airdr bundle",
        "for example Android app wants to send a message it can just call the",
        "corresponding interface provided by the main service and my service will then forward this call to the GI layer and the generator will do for this call to the whole layer finally to delete matched ISO uh well the live match.so",
        "will send the HCL command to Bluetooth chip to actually send a message out",
        "assume that the attacker is malware Android app and the attack battery is",
        "the malicious call then from this architecture we can see there are two main guitar surfaces the first we can attack the permission",
        "restriction of airdr service we can try to call the mesh service without Bluetooth permission and second we can",
        "attack the memory operation in gni and the whole year these two layers are often implemented by using C or CPP which are very likely to involve memory corruption vulnerabilities so we can try",
        "to call the mesh series with malformed parameters to see what happens",
        "so in conclusion permission restriction under memory operation are too many attack surfaces in wrap application and we will show more details in the case study part foreign",
        "part we will introduce BR image further advising 2 we designed to find the vulnerabilities in Bluetooth mesh",
        "protocol implementation",
        "and Oracle is too fast both Network build and network control stages",
        "so that the VRE my father is composed of two corresponding subsystems",
        "here is an overview of the network build further for fuzzing process there are several necessary things to do we need to generate test cases and we need to send them to the Target device and monitor the response from the target device to detect crash so PR image files will also follow this framework",
        "for the test case generation we Define a series of segmented package as a single test case",
        "like this and we generate them at once",
        "in each fuzzy Loop then our sender will first follow the",
        "normal providing procedure to build Link with the target device and when is father's turn to send message or sender will send each package of test case to the Target device meanwhile we monitor the response from the target device to detect crash you further do not receive the link closed from the target device which is expected to receive after a time interval and we will consider it as the crash happen yeah by the way monitoring log from serial Port is also a way to detect crash but different developer board may have",
        "different output so it may take more effort to adapt to each window",
        "so to the in the contrast the link",
        "closed-based crash detection method is small General",
        "and these two sequence diagrams show how",
        "the network build further works the first diagram shows the case that trigger vulnerability at first the father will generate a test case which is composed of several segmented packets then the father followed the normal providing procedure use Link with the",
        "target device and willing established the further",
        "start to send segmentally package as well as wait for the link clones assuming that this transport continued",
        "pdu triggers vulnerability causing the target device to crash then the target device will lost all the information for this providing session so it will never send link close to our father and we return to the father side the second timer has time out and the factor does not receive any link rules so the father will consider it as crash happen then save the crash log and clear time",
        "well the second diagram shows the case that not trigger One Vision assuming that this segmented packet is",
        "determined as invalid by the Target device and console check file under",
        "Target device send the link close to the father due to the check file then the father knows that this fuzzing Loop has failed so just reset the timer and start the next fast loop",
        "now we have established a fuzzy framework so the last work to do is to Define how to generate the test case",
        "uh a test case is composed of one transaction star pdu and a number of transaction continue PU",
        "when generating the test case we first randomize the package count one plus and",
        "and then we random the oxygen Total Lines data lines of the transaction star pu and we randomize the sh o data lines of the transaction continuity to form a test case and this is a example the father has",
        "generated parameters such as hydrogen and this test case finally calls the target device to crash",
        "okay let's move to the network control fuzzle Network control further is also composed of three main modules the test case generation Center receiver and the Crash detection a test case is also defined as a series of segmented packets",
        "and our father will send this cemented package to the Target device one by one on the notice that the sender will also send some prob package to the turkey device at the same time here the pro packets are valid segmented",
        "packets and they are used to detect the crash",
        "in normal case Target device will send sdks to the prop packets and SDK package contains response to",
        "multiple problems this is called the block SDK",
        "any further find that some institutes to the problems are missing then the crash is considered to happen by the way why we need the props rather than just monitoring the SDK to test case to detect crash uh this is because that missing SDK to test case may be caused by a crush but it may also be caused by the invalid package not being a set it is just hard to tell these two situation but for the problem missing is a key for prop must means crash so it's a battery indicator",
        "and these two sequence diagrams show how the network build further works the first diagram shows the case that trigger vulnerability I first father also generate a test case which is composed of several statement in the packets then the fight the father sent the first package to the Target device as well as the probe and we can see that the target device responds is key to both segmented and the prop that's correct and next the",
        "father send the second segmenting package but this package is not accepted",
        "as a Target device so no SDK to this package will be sent but we do not care that's okay and the father received the SDK to the pro so we know that the target device works fine",
        "and then the father sent the third",
        "segmenting package and the trigger crash",
        "on the target device a next father send prompt to the Target device and the note is the critical point if the mesh service on the target device is permanent Dot the father will find",
        "that the exactly to the probe is missing so that I know the crush has occurred this is the simplest case but even if the mesh service is not permanent done we can still detect the crash because we match class all the information about this segmentation and real sampling session has been lost so this SDK will only response to the last problem but missing the response to the first and the second part so if we found the missing we know that the mesh the service on the target device has crashed",
        "well for the case that not trigger vulnerability Factor will receive all the sdks to prompt and know that nothing happens",
        "the test case generation is similar to the network build we first decide how many segmented packets are included in a single test case and then we randomize the icg ic0 details under control",
        "uh these fields are related to the lines and here is an example the father has",
        "generally several concerned parameters",
        "and finally triggered the target device to crash",
        "okay this is the last part of our father we Implement our system based on the Nordic RF model and this module supports",
        "the sending and receiving of Bluetooth signals and in the aspect of software since the Bluetooth smash is built on top of Bluetooth low energy so we need to find out a tool that can sound raw bre packets first and here we utilize the screen tools driver for this purpose swim tools is a great open source tool that allows us customize the ere we are Tyson and thanks for their great work",
        "and next we implement the mesh protocol based on the match spec",
        "and this is called state that shows the",
        "details of network layer",
        "and finally we Implement our system based on our self-implemented protocol",
        "the fourth part is about our real world Wanna Be reminding of Bluetooth Smash and up to July 24 we have found a total of 17 issues covered eight well-known winners and obtained certain CPS and now other listed CVS have been fixed by windows in this part we will discuss the vulnerabilities in network field stage Network control stage and the router application",
        "the first case is an auto on right vulnerability in network view stage here we need to know two Fields the icgm",
        "and the total s",
        "and the scgm means number of segments it is the zero best value for example the icgm equals three means that the home message is divided into four segmented packets while the total lens means the total",
        "number of bytes in the whole message in a while it is Ice Age and the Total Lines should be matched for example if total s is 65 then the icgn should be 2 which means that 65 bytes are divided",
        "into three segmented packets",
        "okay this is the vulnerability that the",
        "mesh SDK allows mismatched as it and",
        "total lens in the network view stage and in this case the attacker forced to send the transaction Star video to the victim with the Total Line 65 but with the oxygen 30.",
        "and the victim first picks up the total length Okay it's 35 so victim will lock",
        "it a 65 bytes buffer to catch all the segmented packets but next the weak team",
        "will pick up the Sigmund the oxygen",
        "inserted and it will consider that there are totally 31 practice to resume in fact that is incorrect",
        "so the attacker can just need to send to a male from the segmented packet who",
        "segmented the index is free and here",
        "since the 17 index free is smaller than the oxygen so this package will be catched and will be considered as valid but the segmented index 3 means that",
        "this is the force packet so this package will be catching here and the final release to the other one right",
        "uh here is the pork we first we will link with the victim and dance and the malformed segmenting package and this",
        "family leads to the crash of my stories",
        "okay the cycling case is an Autobahn red vulnerability in network control stage again we need to know these two Fields the icgn and icgo",
        "oxygen is also the number of segments and the Sho is similar to Sigmund index in network build protocol it is the offsite number indicates which segment the current package is",
        "and invalid case for a certain",
        "segmentation and real assembly session the icgm in all the segmented packets",
        "should be the same but in this by the case match SDK allows the oxygen to be",
        "inconsistent",
        "here the attacker first send the segmented package to the victim with the oxygen one under the scgo zero that's",
        "okay it means that there are two segmented packets in total and this is",
        "the first one and the victim will pick up the oxygen well since there are totally two packets to receive it's just lock it a buffer for this two package but next the attacker will send a mail from the package with icgn31 and sh02",
        "victim just to a check that the AC Joe here is smaller than the oxygen here and",
        "incorrectly consider it as the valid",
        "package and cache it into buffer",
        "uh again since the scgo is 2 this packet",
        "is considered as the third packet so this package will be cached out of bound and finally caused a Auto on right",
        "five minutes Mr Han five minutes",
        "we just changed the oxygen of different package and the first is one and the",
        "other are circular uh this finally leads to crash in Waiting device and from low we can see we can hijack the PC and r0 so that this crash can lead to remote cubed cold ice cubes rce",
        "and now we are clear about the water abilities in mesh protocol next the",
        "let's see what happens in the rocket application the first vulnerability is a permission leak in mesh service",
        "it is discovered on Android platform",
        "although the services have some permission check but it treats all the foreground applications as per meter caller so that every application can call this service interface even they do not have any permission related to Bluetooth and here's the talk I trust the ABP with any without any permission can successfully call the life stories of course this vulnerability is an entry and more vulnerabilities can be triggered by calling the service interface with male formal parameters",
        "and here is an example this is a stack Overflow vulnerabilities in Bluetooth smash GTI and input touch my storage there is an interface that we see are array from the Color battery is passed from GI level from java layer to GI layer and copy",
        "into stack the vulnerability is that the memory copy doesn't check the lens of array so if user passes are overlast array to the interface it will cause the stack overflow",
        "foreign with summarize our work as follows from",
        "the study we know memory corruption vulnerabilities are very likely to occur in the segmentation and reassembling",
        "implementation and the security of",
        "wrapper application especially their",
        "permission are native also needs attention and the other listed CBE have been fixed by windows for the framework we plan to enhance our fighting system add feedback driven fasting strategy and all starting now is",
        "concentrate on the network layer and the low transport layer in the future we will do one or BT mining at uploads and also Bluetooth smash has a lot of interesting features such as gatd proxy",
        "we could explore the attack surfaces of jtt proxy protocol in the end we hope our work can help to improve the security of Bluetooth mesh",
        "thank you for listening any question please tell me and you can also contact with me on the swipe card thank you",
        "[Music]",
        "thank you"
    ],
    "qhhJCLy0YBA": [
        "something [Music]",
        "before we start let me quickly show you what this talk will be about so I was playing with chrome and now this weird thing is happening to my terminal where it prints this calculator every time I open it and",
        "you might guess from the title of this talk that this is somehow a chrome sandbox Escape in particular in Mojo which we will get to in a second particularly this is a logic bug there was no memory crafted in the whole of in the making of this presentation which means if you were hoping for some new elite team spraying techniques now is your last chance to to change the rooms um I actually have three bucks for you three logic bucks the first one will be like a nice introduction how module works and hopefully we'll explain the the inner workings and then we will get to a really painful bug that was just was really hard to exploit um but before we get to that I need to I need to go over a little bit of background I promise I will make it quick um so this is what Chrome looks like you have this browser process and you have a bunch of other processes most of them some red ones the renderers the renderers are the ones that touch all the untrusted data so whenever you touch some HTML or you run some JavaScript this will all happen inside of one of these renderer processes which also means that if you have a cool JavaScript engine bug and get native code execution this is where you will most likely end up and this is one of the prerequisites for this for this talk since we're talking about sandbox escapes just assume the tech already has native code execution in one of these renderers and well and then you're obviously in a sandbox otherwise we wouldn't have to break out of the sandbox right interesting is also that the renderers themselves are isolated from each other so even if you if you run your exploits on evil.com you serve your expert from evil.com you won't be able to just read the cookies from google.com or something um because the the process isolation will still guarantee some some web security physics",
        "since in the sandbox you can't talk to stuff like you can't do raw network connections but as a renderer you want to fetch some some URLs so for that there's other processes they're called utility processes for example you see here the network and the GPU process and the network process what does what you think it it's supposed to fetch stuff from the network so as a renderer you can ask the network process please fetch food.js as a sub resource or something so when I'm saying you're talking to",
        "another process you need some way to communicate right and this is called an IPC mechanism the IPC mechanism in Chrome is called Mojo and from the title of the soft this is what we will talk about and this is what we will try to exploit and you you won't just talk to another process in the end what you want to do is you talk to a certain service or interface on this process",
        "in the case or in the previous example we want to fetch some JavaScript we will talk we want to load the URL so there's some UL loader service that we can talk to on the left side you see like stuff like the renderer host is something the renderer is supposed to but you also see a few things that the render is not supposed to talk to and the GPU host is pretty pretty obviously only intended for the GPU to talk to there's uh it's not clear from the name not network service and network contacts are also highly privileged interfaces so there must be some way to prevent you from talk like allow you to talk to some of them but not all of them in Mojo these interfaces are backed by something called a port the Pod like a system data structure on the in the process the port has a name the name is this 128-bit secret value that is generated randomly um the two processes always connected with a single message pipe depending on the west on Linux for example this will be a socket pair and then when you want to talk to a specific port for example the import of the air loader you will send a message through this single socket pair saying where it says some somewhere inside oh I want to talk to X where X is the name of the Year loader the processes in in Mojo called nodes so I might use those words interchangeably from now on",
        "the wire format looks roughly like this where there's two layers of messages the outer layer is called the Channel messages and this this is the node to node communication so you it's it's like a network protocol pretty much where you have some metadata you can exchange for example you see broadcast event you can make it broadcaster and then the inner layer of messages is",
        "used for the port to port communication you see here the event messages with the payloads in blue and the user message for example is the ones that has the actual payload so when you actually ask for hey please fetchfood.js it will be in the K user message type and then there's some other metadata stuff and you can see here all of them have have a port name since it's port to port communication they need to always specify which Port they um they go to and you might want to know wait don't browsers sometimes have information League vulnerabilities and you can leak these Port names what happens if you can leak the port name of some privileged interface how bad can it be well I already did this like two years ago where some of these actually allow you to break out of the sandbox so maybe we can try to do something similar here so just to summarize this is the the background we need I think the most important part is if you leak these Port names that's bad and um try not to do this or try to do this depending on what you try to achieve so let's jump into the first the first vulnerability",
        "so here you have again three three nodes or three processes the render the browser and the network and the renderer now wants to fetch food.js but as you can see here they don't have a direct connection with each other yet they don't have a they don't have a socket pair yet that they share so for this they need there needs to be a mechanism for somehow set up new connections right and in Mojo there's always this one special note the first node in the network and this is called the broker node and in in Chrome in particular this broadcast the browser process so we can this broker has a direct connection to every other node in the network like this is a prerequisite for everything to work so we can now ask the broker or the browser here to introduce us to the network network node how does that work just as you expect we send one of these Channel messages asking for an introduction the broker creates a new socket pair and then it sends it takes one end each and sends it in both directions with a message called introduce so it introduces the renderer to the network node and it introduces the network to the renderer they accept these they have a dark connection and now now the renderer can fetch through.js",
        "and there was a bug in this so assuming we have a second renderer and the second renderer we have a JavaScript bug we have native code execution there and we somehow want to mess with this protocol right what can we do well the bug was that this introduced message when the broker introduces the notes to each other there was a check missing that the introduced message is only allowed to come from the broker because if you don't if you don't check this then the this our ghost here can do something like this where it creates its own socket pair it sends one one side to the to the renderer to the other renderer like it could be google.com renderer saying like here's the network process on the other side but then it keeps the other end of the connection we do this in both in both directions and suddenly where this ghost in the Middle where we can intercept all the traffic going between the render and the network process and you can imagine that that's not great because now if if the renderer wants to fetch food.js we can just put our own xss payload in there and get like JavaScript execution in the other renderer and I wrote an exploit for this and it's at least a uxs that's it's possible that they can do more with this but I thought this is this was fun",
        "but in the real world you will actually end up like this where if you get code execution in this renderer you compromise the renderer the other renderer probably already has a connection to the network node right because it probably has to use the network at some point so does that mean our attack will not work because when we now try to introduce the other renderer to the network it will it already has a connection so it will ignore the message but then Mark run from part 0 had this idea where he's like well can't you just crash the network process because the browser is so nice and it will just spawn the new network process if you if you crash the old one it will notice and then respond a new process and it actually took me like one hour or so to find a no pointy reference which is not memory corruption I'm just crashing it so um so you trigger null pointer reference in the network process it will go away the browser notices spawns a new one you get the connection to it quickly before the other one and then you're back in the previous situation where now you can introduce them to each other and get you exercise",
        "so this was fixed with this um with this patch so on introduce when this introduced message gets received we now check that from node needs to be the broker name or in this case if from node is not the broken name we drop the connection that's exactly what you want to do but it will be super useful later we will actually we will actually need this later so keep it in mind but I've also show it to you again but let's go right to the next block so this was bug number one back number two is so what happens if you're in Mojo you want to spawn a new process you're not the broker node you want to spawn a new process and this new process should also get introduced into the into the network the needs to as we've seen before the broker needs to have a direct connection to every other node on the network so there needs to be a way to tell the broker about about new notes and well this is pretty straightforward the protocol just works as you would expect it to which is we just tell the broker hey here's a new here's a new node it's called add broker client I think the message type the broker now needs to create a socket pair this time it will keep one end send the other one back to the renderer the renderer needs to forward it and then once it accepts this um so now they have a dark connection so",
        "where could be the bug in this exchange that sounds like very similar to the previous to the previous setup right so maybe like maybe we can find a variant of the previous bug in this um we're back in our compromise render and now the the black is actually very similar except it's the exact opposite you remember before there was a check missing that if a if a message comes in they're supposed to come from the broker node this check was missing that's actually from the broken node in this case the check is the missing check is the opposite which is this message that goes usually to the broken node we can send it to other nodes so the other node didn't check that they if they are the broker when they receive this message which is this add broker client that we just saw so what if we in this scenario we just tell the renderer hey we just added a new node to the network it's called it's the network node um the network the the render actually was processing this message created socket pair keeping one end sending one and back and I think this looks very familiar to you now where we put this in both directions we again the ghost in the middle and we have your accesses so so far so good right like I think this should give you a quick overview of the kind of things we can do with Mojo and how the protocol works but now there was a third bug and the third bug was not this easy to exploit the third book was I think the most difficult exploit I've written so far in my life and we will need to use everything we've learned so far and a little bit more um to actually exploit it so it started out with this thought experiment where it's like okay we can add new notes to the network so we can tell the broker there's a new node and we can use an existing note name for example we can tell the broker hey here's the network node the broker will notice in this case of course like I already have a connection to the network node so this message is invalid and we'll just ignore it but as we've seen before we can also crash the network process so we crash it it goes away we send this message telling the broker hey we have a new process it's called the network node and this time the broker will accept it or the browser process will accept it which seems not very useful at first except that it actually turned out to be to be a very cool thing to do so we can reuse the names of previously existing nodes after they went away",
        "um to see why this is useful let's take a quick look at what the browser process is actually doing so",
        "when the network process crashes the socket will get close the browser note sees this it will then look up in some hashmap like the peer node it will delete the peer node it will see oh in a different map it has like all the ports pointing this to the sphere it will delete all of these parts as well and then this is all happening on the Arrow thread of the browser process and then it will process our message which says oh we are the network process now and allows us to reuse the name but all the ports are gone so it seems kind of useless except that Chrome is not just a multi-process browser it's also heavily multi-threaded so what can happen at the same time is that the second thread tries to send the message to the poor one of the ports on the network network process",
        "and what happens there would be like it takes this port structure from this hash map it will lock it and then read out the node name and this can happen before we destroy the port right and then the browser process the the i o thread continues destroying the port allowing us to reuse the note name and if we now go back to thread 2 and thread 2 now tries to send the message to the node name it just read it will go to the wrong node it will go to us instead of the of the now non-existing node anymore which means we can leak the message content of any nodes that that has any",
        "any messages that are sent this way which is kind of lame and um well the race looks very impossible to win so let's try better",
        "and now this is where this patch from from previously comes into play as you remember if this introduced message comes in and it's not from the broker we drop the connection so what can we do this so what happens if we as this compromise renderer we ask the network process to introduce us to the broker like this doesn't make sense but there's again there was a check missing that this message should only be handled on the broker node um so the network process will actually try to do this so it creates a socket pair and then sends out the introduction one into us one end to the to the browser process we have native code execution we can patch the code we can just ignore this patch from before so we just ignore the message but the browser process now",
        "will trigger this code that just the the code from this patch and drop the connection like it will not kill the process we'll just drop the connection and now we can reuse the the node name so what is different from before well the difference is the process still exists we can steal the name we can reuse the note name of a node of a process that still exists which means if we can find a way to leak a port name now a port name on the network process we can then start sending messages to it and sending messages to this port we just need to find a way to leak a port name and as we've seen before some more parts of our privilege so this this would be very cool if we can do this to see if this actually works we need to take a look again what happens under the hood so as before once the socket gets closed the browser process will well both processes actually will delete the peer node in the peer structure it will they will close all the ports um part of this means they will run on error handlers for the ports and they are custom depending on what kind of of interface is there one of these interfaces called the child process host so you see like the child processors there's a server side and a client side the server side on the browser process will kill the child when it runs which means it will it will kill the network process in a network process will exit If the child process host runs the owner Handler and then after this happens we can reuse the note name on the left side which means this is not great because once the network process is gone we're back to the previous case where we don't have a cool exploit anymore and we just get this lame primitive of maybe leaking some message content um around this time I was listening to this podcast with how the flake and this resonated with me which is I can't let go of box if I find a bug that I think might be exploitable I spend way too much time to actually making it work this is one of the examples and looking",
        "long enough at it I actually had an epiphany epiphany which was well these on error handlers they are not run at this point as I showed you it's a little bit misleading the slides these are actually tasks on the i o thread so they get enqueued as tasks which means they don't actually have to run here but they can run after we reuse the note name if we're fast enough we can we can send our own message to realize the node name quick enough before these on error handles run which means now we have a chance right we can raise the right side to to reuse the note name just before the on-air handle runs and on the left side we will also this node name reviews will happen before the on around end is running free fast enough but even better another thing that was really cool was that when these are on error handlers run one thing they do is they close the port and then they send out the port closed event and this port closed event now goes to us because we were able to reuse if we're fast enough and we can reuse the note name this port closed event goes to us and part of the port closed event needs of course is the port name that was closed which means this is our this old leak that we wanted so this can be some privileged port on the network on the network process and the browser process tells us about it hey we just I just closed this part it tells us by accident and then at some point the support the one error Handler from the child process house will kill the child so we have we actually have time we have we have time from this from the first podcast event which might be privileged for to K Port K which can which is the child process host and at that point it's game over so we have this very tight race window where we leak apart and can use it which is great except that the number of total ports is something like 20 which means we have like the time window of like 10 on error handlers roughly for this",
        "um but it seems possible at least but the these two these two big issues right like there's a tight race here and then there's also the tight race that the network process tries to exit we need to we need to win both in order to make this work and at this point I I nearly gave up because I was like okay this seems exploitable but I will probably never make it reliably exploit out of this so um maybe just report that it's exploitable and just imagine the rest right but then I took a break and I watched my favorite movie which is called hackers if you if you haven't watched hackers you should it's the best I will spoil you the story though so in hackers there's this evil guy who steals a bunch of money and then he writes on ransomware and that will sink an oil tanker and he also blames it on this group of hackers and this group of hackers then tries to to prove their innocence and they need to hack into this corporate Network because in one of these machines there's this file that has some evidence of what he was doing the problem now is that this corporate network has this super powerful machine called the Gibson and the Gibson is running like an IDs that will just kill all the reverse cells like they have all these zero days to get code execution on in the corporate network but this this um Gibson will just kill the reverse cells very quickly and this point I was like wait a second this is my problem this is this is my story like I'm also I have this leak and I could use it to get some code execution but like this this broker that will all kill the kill the process too quickly so let's take a look at how they solved it in the movie so there are these two media icons that have a like these hackers with a TV show called razor blade and the hackers they go to them and ask them hey can you help us they send out the stress signal to the world and ask all the hackers in the world to unite and help them like everyone throws their zero days at it gets called decision at the same time and the Gibson will be overloaded and can't quit can't kill all of them quickly enough it buys them enough time to like leak the file and save the world um I was like okay hey we can do this if you remember back number two like I I can't just ask all the hackers in the world to to help but um we can fake this as as you remember from Buck number two there's a mechanism to add new nodes to the network right we can add new processes to the motor Network which means these don't have to be real we can just create our own fake Army of hackers and just connect them to the network process and now well in the movie they they send viruses to buy time but the the virus in our case is called a broadcast request so if we now like just imagine what happens so so there's this other this process now has 10 000 connections like I'm using like 10 000 fake notes always a socket pair connecting them to us actually and now we send out a broadcast request so now the network process needs to make 10 000 copies of this broadcast request and send it out on every single file descriptor that it has which takes much longer than us just sending this request right which is perfect this works it it solves a problem so now the network process will never exit like it's just completely blocked dial thread is completely blocked but we still have this tight race between the league and the kill so the Gibson we still have the problem of the Gibson the Gibson is still finding us too fast um which was this right so Port 1 to Port 10 like we only have 10 on-air handles so but then though the solution is also pretty straightforward why don't we just make this number very big instead of having 10 on air analysts we make a million on a on air and this and we can do this we can we can just send ports over to them to the broker and tell them they point to the network process the the browser process will accept them um you need to do a small trick they don't have a process them but it doesn't really matter like you can you can send all these like I'm using a Million Parts or so send them over kill the connection and now it needs to go to this million on error handlers and it it gives us plenty of time to use our you know to to use the leaked font name and then send it against the network process all right which means we're done right we solved our problems we just need to find a nice privileged Port name now that we can send messages to accept that how do you send a message to to the i o thread of the network process if we're also dosing the network process right now um uh well can we turn the Dos off and on again maybe something like this where the Dos is running we stop it quickly when once we stop it it will notice the the socket got closed it will destroy all the ports it will enqueue all the on air and let's remember their tasks on dial thread we start the Dos again and these on error tasks at the bottom will never run because the Dos is running again which means at this point we actually have time to inject a smooth message except that processing a message is also a two-step process it first needs to read the message which then enqueues the tasks to actually process the message and this message that we want to send is probably on the earth red which means we need to make it read our spoof message somewhere here during the denial service",
        "which turns out is possible we just need to add another trick",
        "so okay on the bottom again you have the compromise renderer on the top you have the network process and all these lines between them are like the socket pairs because you remember we created like 10 000 for 10 000 fake nodes so we have like 10 000 socket pairs connecting us to the network process so the original idea was just to put these broadcast requests in just a bunch of them the the i o thread will be busy forever but this doesn't work because then we can't send our message so we need to have a better strategy to actually dos dial thread and then I had an idea which was what if we do something like this we instead of sending these broadcast requests we enqueue lots of small messages that do whatever right like they don't do anything interesting um it doesn't matter what they do under the hood what happens now is that there's some selects is called all these file descriptors it will notice oh wait all these file descriptors are readable let me in cure tasks to read from them right so now there's like 10 000 tasks to actually read from these file descriptors now we before those get handled before those run we add the single broadcast request only on the first file descriptor so now when the task to read from the file scripter runs what it will do is it will read both messages at the same time and then it will process the small message first throw it away and now it comes to a broadcast request part of the broadcast request means it will actually send us back 10 000 messages so we can actually follow the process progress of this broadcast request and when it's somewhere in the middle we just add a second broadcast request on the set on the next file descriptor which is already marked for reading and already there's already a task that we'll read from it next so what happens now is it reads from the next file descriptor and again processes first the small message and reads also our broadcast request and so we can we can keep this broadcast request go this the now service going and going dynamically and just continue adding extra broadcast",
        "requests while they're being processed",
        "so after a while the browser process will now after like a second or so send us a this leaked as this port name that we're interested in so maybe right now we got this port name so now we can instead of enqueuing a broadcast request we just enqueue a spoof message and the same thing will happen where it will read both message together put our enqueue our our spoof message for processing using our leak port and now all we have to do is stop the denial service which means we just don't encue anything anymore wait until all the all the messages are gone it will now process our smooth message and now we start the general service again which is just put a bunch of broadcast requests back in the on-air handlers will never run but our message will get processed and we succeed right like like this it now we can we have a way to leak the port name send a spoof message it the only thing missing is now we need to have some way like what is a privileged part right like now we need to choose a port we have like 20 ports or so that we can choose from uh that we can send messages to we just need to to choose the right fault or like the right service that is behind the product and then I started looking and I I went through the parts I dumped all the what they are one of them is the child process the child process interface and this one looks very interesting because it allows you to spawn new services so you can actually ask it to to to spawn a new service inside the process inside the network process and a bunch that get that get created on the i o thread we don't want those because the i o thread is under denial of service so we can't actually use them but there's also a bunch of services that will get started on the main thread so we can use any of these we can start any of these and there were a few more so like there's a storage service video capture but the first one called my eye the first one is kind of cool the option worklet service it doesn't sound like it will give your sandbox Escape at first unless you you notice that what what this actually is which is it's a JavaScript engine this auction worker service means it will spawn another instance of V8 like the JavaScript engine inside the network process so it will run without the sandbox and as you remember our prerequisite is that we have a compromised renderer so our render compromise is probably a JavaScript bug already right so if we just use the JavaScript to get codex used in the first place we can then use this JavaScript bug again to now get code execution in the network process and we're done except that this doesn't work because this child process interface is always deleted after the child process host the child process host was the one that kills the network process so in 100 like it's impossible to leak the port name before the while the network process is still alive so this didn't work then Sergey glazanov and Mark run from first zero pointed me to this which is HTTP auth static params",
        "so there's this other very privileged interface called the network service in",
        "in the network process if you talk to the network service you can create a new network context and with the network context you can create your new URL loader Factory which allows you to let create URL loaders and then make HTTP requests part of the network context config options you can say you have these HP all static powers and there's this GSS API Library name and if you read the comments it has something about cameras so whenever you make an HTTP request and it tries to to initiate some cable stuff that gets this HP auth negotiate header or something it will load this library from disk and execute whatever's inside right so if we create our own network context pointing this to a file that we control on the disk of the user for example in the downloads folder and then make a HTTP request that replies with this HP alt header it will load this library and we get code execution",
        "except that this also didn't work like I wrote this exploit I can create this network context I can create an ulo directory I can create the URL loader I make it load send an HTTP request to my web server my web server replies but then the response is never processed they'll never get to this to this code um which I think is because something some of this part is happening on the i o thread since we're dossing narrow thread it's also game over there might be some trick in there but I couldn't figure it out so but there's another config option when you create a network context which is where to store cookies you can store cookies on on disk which is also just a file path saying like oh put the cookies in slash temp slash fool or something which will create the sqlite 3 database file on your disk if you then insert the cookie in there it will put like it will just add it to the sqlite3 database file which means this string that you insert will end up somewhere in the middle of the file so if we can find an interpreter that",
        "reads the file from disk ignores a bunch of garbage and executes something from the middle then we're good then this is enough because this is our primitive we can create an arbitrary file with content in the middle control content in the middle and we just need to find something that will execute it and there's something on at least on on Linux and on Windows that you can use in particular on",
        "on Linux you can use your shell RC for",
        "example in my case I'm using my visual C that you might remember this from the beginning of the talk so on the top I'm running this the exploit which needs to spray ports and make create these fake node names and on the bottom I'm watching my Z shell RC file which says it's ASCII text right now which which it should right but then once the expert is finished it just takes a few seconds you will see that it actually turns into sqlite3 database and then my Z shell",
        "if it sees this file it will execute something from the middle and you can actually see here in the beginning it will be like what is this command with all these null bytes it's way too long and it will just skip it and continue and then see the new line print the calculator and um yeah",
        "and",
        "that's the whole that's the whole exploit like my personal takeaway from from this journey because this took quite a while to do so I need to tell myself it was worth doing it is how important this target specific knowledge can be both for for defense and for offense right from a defensive point of view really understanding this how this protocol worked allowed me to find bugs that you you wouldn't find with the fuzzer right like you you can't encode this error condition in a fuzzer I mean you could but you wouldn't know that you have to do it um but on the other hand these from the offense side it's also super useful these Primitives that are very Target specific can be super useful right like like I would have it would have been possible to exploit this third Park I would have given up if I hadn't known already about our crane can create this fake node so I can send over ports and so on but I think the actual real takeaway is that if you ever get stuck if you ever get stuck uh just take a break watch hackers and well hackers hackers might just have the answers for you thank you",
        "we have a few minutes for questions left please go to the microphone if you if you have a question",
        "you can also reach me on Twitter or in the Overflow room afterwards",
        "thank you [Applause]",
        "[Music]"
    ],
    "Z81s7UIiwmI": [
        "[Music]",
        "foreign",
        "to the stage Alex martisov",
        "hi what's up yeah thank you very much",
        "thank you very much for coming this session I'm Alex matrosov and it's been a very interesting research which has been done by binary team and Jager vaselenka Alex hermolov and Sam Thomas make a great contribution to this research and first of all I wanted to say it's a big difference from the previous year I've been presenting the last year in Vegas for black hat and I see a couple of more people coming actually to the session it's great to see you guys here in Vegas all right this is a binary team and Kudos goal to the whole team for hard work on this research and we have a lot of stuff to discuss today so first of all like previously vulnerabilities it's been constantly overlooked and actually it connects the whole uh interesting and very dangerous",
        "and impactful space for the researchers and the attackers as well and some of them actually bypassing a lot of",
        "mitigation just by Design and like STM ppam and other fancy mitigations which is Intel developed unfortunately it can be bypassed from the pre-e5 phases early boot phases but let's actually talk about how this",
        "research started and some pre-story so in 2017 we already been talking about Intel boot guard and how actually modifying some of the data which is controlled the boot process it's actually reflect on the bypass the whole security features right and in 2019 with",
        "Alexandra Gazette we've been talking about how security boundaries are important to consider as a threat model because different security boundaries when they are crossing have a different impact on some of the mitigations or security features and we've done that before and of course the last year when we first time with Alex Taylor rushkin and Adams zabroski kind of like a go deep dive with some of the vulnerabilities in pre-5 phase and of course like Intel bssa DFT it's been kind of like a an eye opening for previous raises for the exploitation and by the way this one is eliminated for most underhyped Pony Awards we'll see maybe we can get this one for this sweet vulnerability and unfortunately actually it's still available in the Wild unpatched on many systems make sure you are not the one and um an offensive Con in February we actually drop about 22 new fresh baked cities related mostly for system management mode and we can see literally like it is a repeatable failure is happening in the industry with such vulnerabilities and the space with",
        "vulnerability research in the firmware has been overlooked and system management memory corruption to be honest it's not a new vectors it is actually like known from the early 2000s but still it is available and of course when you write your firmers on the C language it's great some interesting rooms for memory corruption all right uh what is a p Prime and actually in our offensive research talk we say we are working on ppam and actually it's platform Cooperative assessment module which is responsible for armoring system management mode it's one of the more powerful uh modes on the XS x86 systems",
        "and basically like we say we will be finding some bypasses for sure because the complexity of such feature is actually incredible and we did",
        "right but before we dig into",
        "previous five phases with a pi drivers let's talk about ACM and intelicia ACM it is a authenticated code modules think about it is just a binary blob which is executed uh separately from your firmware and actually it is loading to",
        "um cache directly on CPU this cache is locked it's called like a cache as RAM on the CPU feature and it's providing some additional capabilities for attestation or basically for txt and a lot of other things but what's the interesting about the ACM their complexity is also growing and basically",
        "we already showed it before uh with binary research team uh into wood guard in the bias guard by passes and actually vulnerabilities and Intel txt is not rare and",
        "also as example the changes in uscms first of all it's increased the security over like the hashes new Flash functions used and rsas but it's not about that the size of the module it's actually grows like more than five times right it's been a 32 kilobytes now it's 256 kilobytes right what happened when the code base is growing attack surface is growing as well and uh ACM are responsible also for",
        "attestation of ppam policies and this",
        "very important to remember because we very we have a very interesting Discovery later on um uh in our presentation and uh also as example uh talking from",
        "the attack surface perspective Intel patched like about 10 vulnerabilities in",
        "acms for this year and that's mean this attack surface it's actually pretty legit right let's dive to preview fire attack surface and just a reminder about what",
        "the attacker model and potential impact I don't want to go uh that deep but basically all these vulnerabilities we're talking today it can be used for the persistent implant delivery and by passing all the security boundaries on uh firmware space",
        "also vulnerabilities which is related to enviram it's actually not protected if",
        "we're talking about the persistent storage on the Spy flash it's usually not protected by woodgard interestingly if you have enviram payload basically it",
        "can be a constant re-exploitation during the boot and actually can gain for the attacker the persistence it's why I would say these vulnerabilities is very dangerous because technically from just",
        "SM you can be protected but from environment persistent storage sometimes it's not considered by System Architects or device vendors as potential space for",
        "the persistence but it is",
        "so and you can see uh actual",
        "complexity of communicating constantly during the boot process with environment storage right but let's talk more about the pre-fire attack vectors and we have so many of them to be honest so basically it's why is it preview fight so dangerous as you can see on this picture it started earlier than actually Dixie phase and",
        "smm get initialized",
        "also during the previous five boot phases it is actually called like a platform initialization phase right it's a lot of security features to get initialized it's a lot of things happening like a memory training and other things but also previous is",
        "actually sometimes accessible for the code execution",
        "from the operating system but of course it's give more limited capabilities for",
        "the attacker compared to during when the early boot just started because a lot of memory regions are already locked but still it can be used for bypassing a lot of security features",
        "so and as example during Pi phase we can",
        "of course bypass all the security protection and spy because it's just not enabled and it's just not happened yet before so all the historical mitigations like a bioslog enable and smm buys right protections it's going to be bypassed because it's basically a natural design",
        "of the firmware for ufi standard and",
        "basically I wanted to say uh",
        "sometimes it's very important from the perspective of the specification or the standard if it is exist from early 2000s to review and reconsider how different wood phases can actually reflect on new security features right and of course like a complexity it's always anime of security and you can see that about how many vulnerabilities we managed to found",
        "so basically this white is a summary of",
        "the 12 CVS which is disclosed right now and all the advisories are uploaded on binary website so you can go and learn more details about them and some of the pocs also available public",
        "and interesting reminder also about some",
        "of the issues which is related to Independent bios developers it's actually not only connected to single",
        "device vendor it's impact the whole ecosystem which actually uses similar code across the different devices and product lines",
        "but also on this slide I wanted to thank you all the PCR teams and their hard work to helping us get on time discussed all these vulnerabilities",
        "let's talk about the exploitation and actually as she resumed to Pi it's very",
        "interesting vulnerability because it actually shows the supply chain problem as well first of all this card is actually exist on Ed K2 but unfortunately it's got modified with",
        "some of the code by independent bios developer and basically what happened with this modification it's actually introduced vulnerability and of course this vulnerability will be exist on many other systems which is uses code from independent bias developer which is actually connected to this vulnerability and",
        "problem is also when someone is forking uh public reference code it is actually support this Fork keep it up to date and a lot of other things are coming to supply chain security I think actually it's better to keep consistent uh this",
        "code and actually the same as original reference code because it's basically will be give much easier and transparent supply chain from that perspective",
        "what the vulnerability is so basically we have a get variable value fpdt variable which is actually contain St performance table pointer and we can get access to",
        "acpi St performance Andreas actually from the operating system memory and we can change this at 3D performance table pointer and basically it will because arbitrary right to control both address interesting thing about this vulnerability we don't have an access to environment variable itself because it's not accessible in runtime but we have an access to the pointer in memory and basically it been very interesting discussions with the developers because they say oh how you can exploit that it is not available in runtime but we control the pointer no no it's not possible but actually after developing",
        "the PLC on that it's been more convincible so yeah let's take a look on the demo so basically we have",
        "uh as you can see on this demo basically it works very fast what we need to do we need to modify the pointer and actually trigger S3 sleep mode and then it's",
        "actually goes to the sleep mode and boom we have the code execution and this uh arbitrary right it's",
        "actually give you just a bit more than a two bytes of controllable value what we",
        "can do with the two bytes and we can see more about that because two bytes sometimes can bypass all the mitigations but it's just one vulnerability we discussing today um another one it's a platform we need Advanced premium which is also pretty interesting because actually it can bypass all authenticated variables from the system management model which is protected right so but basically if you have this code execution in system management mode basically all the variables are read only if they are authenticated and basically if you gain the Privileges to system management mode you can do that",
        "so also these such variables it is a physical attack Vector always available when you can just reprogram and these variables in persistent storage you can basically make Gain the persistent over constant",
        "code execution which I mentioned before again demo time most recent knock tiger",
        "Lake released in this year so boom",
        "yep",
        "but we have 12 of them we will go in in the more details and more details on that so this vulnerability SM",
        "bios elog this is actually also very",
        "interesting because this exactly functionality have been developed for",
        "providing additional Telemetry and exchange the information from smm to provide actually some debug data bring up data or whatever has been considered for developing for so but",
        "sometimes it's my handlers which is actually just for reminder it's callback functions from the firmware to operating system layer to hook some of the functionality from uh from the firmware to operating system and this callback functions sometimes have a very complex uh inherited pointers so and as we can see here with this case when basically we can have like a API func one and many others but this function API func one as you can see on this file is actually can be triggered some additional functionality over overflow when the attacker can actually just cause the classical memory corruption as we can see it's lead to the copingworm and with the controllable buffer and size it's actually given attacker opportunity to exploit it the link to POC is there",
        "but basically reference code issues it's",
        "uh it's it's happening and basically uh",
        "another reminder about a pretty similar",
        "vulnerability which we've discovered last year it's been in uh into reference code so if AP error log so basically it's pretty interesting one because also providing some of the additional functionality to collecting the data and providing this data in",
        "and we're unbearable and basically unfortunately it's been",
        "exploitable attack vector right demo",
        "time about the cement bios work all the smaller abilities as you can see it's pretty stable is working very reliable",
        "and it's actually very dangerous it's why it's very very important to fix them because it's often a lot of opportunities for the attacker to gain a lot of Privileges and persistence on a very privileged firmware modes",
        "another one overclock SMI Handler story and this one it's interesting because",
        "it's actually have a clear supply chain problem this overclock SMI Handler it connects with the module which is actually kind of like a legacy functionality for overclocking uh",
        "on the game CPUs but this on the gamer machines and basically this functionality",
        "um is actually been removed for a long time I think a few years ago from many of the platforms but unfortunately it's been appears on internet again and we noticed that on one of our client platform and like why it's actually freshly updated bias it's new platform why this functionality is available here and actually provides a vulnerable vulnerabilities someone just forget to change build script and actually older module unpaged and get to the newer firmware and it's clearly say shows the supply chain problem sometimes it can happen and it's also remind me American megatrans usbr key issue when the vulnerability is actually some of them being patched or the model been module been outdated but it's been constantly given new and new attack vectors as example we presented two new vulnerabilities at offensive con which has been found on usbrt with a pretty new hardware includes the servers",
        "so also actually",
        "interesting reminder when we have such vulnerability like overclocking it is",
        "good to see how we can actually create the list of deprecated modules which",
        "will be never available anymore in the runtime and the industry can actually just clean up this supply chain",
        "naturally I think that will be a good idea to have one if someone can actually from the device vendor's perspective to influence on that all right let's look on another one it's uh actually goes through smm get variable OC setup",
        "and as we can see here we have a signature to DBS uh on the top right so basically this bug for make it exploitable we need to keep the signature to actually bypass all the security checks and then",
        "basically we have a controllable pointer in RBX and uh we go to actually exploit it over the PCD value",
        "yep so let's do the demo and basically this vulnerability is actually changing",
        "the my CSP Global in the sptr variable so basically through the vulnerability in smm and this is pretty cool one because it's also can buy plus authenticated variables",
        "um one of the previous vulnerabilities which we've been talking about triggering this vulnerability over uh S3",
        "sleep mode it's been a constant discussion because some of some of the vendors been saying like this vulnerability is only exploitable on the client systems because the sleep mode is not available on the server machines but unfortunately it's not true because sleep mode can be uh it's completely implemented in",
        "software and separating systems you can use on Linux rtcp wake and some other functionality to actually uh do that on Windows and",
        "servers are impacted but it's actually needs some additional effort from that I care to call such functions to go to the sleep mode so yeah it's exactly what I told you so basically Linux and windows are just to configure in S3 functionality we can make it this exploitation successful on",
        "servers",
        "and basically",
        "saying this it's not exploitable for short wears it's actually the lazy disclosure for almost a month for the server machines from one of the vendors and I think basically collaborating better collaboration between the vendor and researcher and going more transparent way about like yes it is impactful it actually will be first of all protect better than ecosystem",
        "another vulnerability we are talking about uh uh binary we entered 22nd 15.",
        "so basically this one is actually",
        "arbitrary code execution in DXE and what interesting so basically this driver it's not privileged it's not smm system management mod driver and of course like it's given a high care opportunity to bypass manager earlier uh the secure boot but basically also it's open in other attack surface what if if we exploit in the vulnerability not directly from operating system what if we gain the code execution on Dixie phase and then exploit something from there and actually most of",
        "most of",
        "most of the security features been designed and not considering this as an attack surface and this example Intel biosguard I don't know guys if you everyone knows what the bias guard is but it's actually protecting the spyware storage from the changes so basically it's very important security feature against firmware",
        "implants but it can be easily disabled by one data buffer",
        "so also a reminder all vulnerabilities we presented it is actually will be not protecting from secure cores it will be not protected with drtm's srtms and other stuff because TPMS are not extending their PCR in runtime where all these measurement is start right and remote code of gestation for these devices will be completely blind for such exploitation",
        "but let's talk about the Automation and this is very important piece why it is repeatable failures because it's a lot of vulnerabilities existing the space and I think it's need to be fixed of course like we already committed to like a system and presented the E5 Explorer uh plugin a few years ago on black hat Europe and also",
        "we developed the whole approach with white wet static analysis and under constraint symbolic execution to find such problems so just an example if",
        "go with static analysis without some partial emulation or actual symbolic execution for Discovery it actually can cause some of the false positives in some cases and if I explorer actually contain automatic Discovery for vulnerabilities with the git variables just use it on your firmware for finding it before releasing to the customers but how we can actually can improve it and what the limitations are about the current approaches it is first of all numbers of false positives it's basically most of them based on very straightforward pattern matching and we",
        "just create a lot of limitations and our approach is actually leveraged in my semantic properties and lightweight content code patterns for actually develop the Shakers to detect it so it's just like literally a pipeline for the analysis don't want to spend much time interesting point it is intermediate representation which is actually used for symbolic execution and semantic annotations there",
        "so it's how the lifting uh for uh customers I say form it looks like and here's a sneak peek about semantic",
        "annotations actually it's exactly what the firmware hand does for detections it's open source uh technology uh just look on our GitHub but it goes on top of some intermediate representation to actually power this Visa semantic annotations",
        "and static Checkers it's actually pretty straightforward we just actually add in some additional Rule and runtime for kind of like a detecting such problems and it's augmented with a code flow and",
        "code flow properties and data flow dependencies and properties as well and we have intercall properties there",
        "so basically we are instrumenting this intermediate representation to simulate execution from there right so and I think actually about the symbolic execution for finding some vulnerabilities it's being covered also in my talk in 2016 actually when I've been working for Intel Corporation we developed on cmex the whole framework for finding such vulnerabilities but looks like it's been not used much after I left",
        "all right another pay phase vulnerability it's 2016 14 uh to 20 22nd 014 uh get",
        "variable leading to arbitrary code execution and",
        "this one is very important to remember because this one we used for actual Intel ppam bypass",
        "and also it's been fun as you can see here it's actually been found uh over",
        "our framework right with a symbolic execution another demo it's a get",
        "variable another one but in the system management mode so basically it's detect",
        "uh detected yep",
        "and buffer overflow classical with a comb buffer constrained so lead to the copy ma'am so symbolic execution is pretty effective as you can see here anyway so first of all I wanted to thank you the p-shirt from American Mega Trends to actually doing a hard job to patching all the vulnerabilities we discovered and actually uh related to",
        "American megatrans and",
        "help protect the ecosystem",
        "so another cool business goals to the HP preserved which has been constantly working with the binary team on the different disclosures and it's been a hard work from the team to actually make all these products are secure and all the advisors are public now right but let's focus on Intel ppam and NCM internals so um istem and pfam it's actually the most",
        "fancy mitigations and system management mode it's get applied for most streets and times right so basically what's happening on P1 it's",
        "provide isolation for every SMI Handler",
        "from each other previously when you exploit one SMI Handler you get access to the flat memory space and you can actually influence on any others after the PPM get introduced it's actually pretty close with on arm trusted",
        "execution environment does it's",
        "isolating different easy Ebbs it's the same thing with the semi handlers should happen right",
        "how the people work it's actually can break on three different phases first phase is of course like kind of like understand if people will be enabled and the right platform properties are available second it's kind of like initializing the Monitor and then get modules loaded and policies so it's uh how actually",
        "uh the polishes are get checked and",
        "loaded",
        "up policies are here about",
        "this one is actually important you can see here it's checking the ppam image before loading to parse all the policies and all these features are undocumented it's actually been reverse engineered by binary team and provide all this information available to research community so basically what's happening",
        "check ppam image it's actually just",
        "about like msec smram Hub will be break",
        "Department civilization right so if we have able to single byte right to the memory space from msec smram we can change some data storage which is actually will be break initialization and the feature will be disabled I remember the slide at the beginning with the boot guard that's exactly the same type of vulnerabilities can be used for bypassing such security features and",
        "ppam manifest saved in the configuration",
        "table and basically it can be received by operating system component and runtime easily so another one installation and",
        "configuration for the policies on access basically every SMI Handler have a configuration for initialization of access to input output ports MSR registers and some other policies actually it's pretty interesting technology and I think actually it is a game changer in general but it need to be more securely designed because on the specifications looks better than actual implementations",
        "let's talk about the attack surface and we use as a target one of the most recent HP platforms and basically",
        "this white book I think it's based on the tiger Lake CPU which is very new it's 11 generation and it's how actually this picture",
        "summarized a whole block of the information we've been talking before and how this connects to the ppam bypass so we have a pre-e5 vulnerabilities",
        "which is can influence to some data storage which is here actually showed as a hopes data and then bypass the who",
        "configuration loading for the people boom",
        "we have a CPU smm variable which is",
        "actually contains some configurational data and as we can see into reference implementation which is available on GitHub like POC so it is kind of like it looks different",
        "so and also this Hub data it's accessible from",
        "the operating system layer but basically we can go through the pi to kind of like a bypasses",
        "so I will be move a bit faster just to able to cover very important information on the next slide so",
        "people manifest",
        "it's actually all the data about the policies contained there and of course it should be signed it and attestation should work for this manifest unfortunately what we discover all the certificates across multiple vendors and platforms they've been outdated and it's just a bit more details on the certificate actually the reverse Engineers is and all the parses will be available a bit later under embargo now",
        "and people manifest actually outdated not on a single platform as I mentioned we checked a lot of different platforms probably like 2020 it's been one of the first BPM configurations and uh implementations and basically it's why",
        "it's not been much available in the wild but we check it around like a 200 systems and all of them actually outdated with the previous year certificate what's that mean attestation for this feature",
        "it just doesn't work or never been used so uh I think this certificate is being",
        "kind of embedded to the reference implementation from Silicon vendor and then shipped to the device manufacturers and they just use this reference implementation in place and never get updated this root certificate for um for uh attestation and I think is this",
        "certificate is actually issued by Intel Corporation and I think it also shows a",
        "very important supply chain problem which is not don't need any offense exploitation so basically uh this kind",
        "of like a problem with certificate validity valid after right all the verification will be failed but the code are assigned if we will be in bad such thing or component to newer firmware",
        "basically it will be failed to load right and also the ppam features right now it's available only the most uh expensive uh Intel CPUs with vipro so",
        "basically that's interesting way which is goals to bypass the PPM from the different perspective without exploitation we show you some with an exploitation and here is without without supply chain failure from the vendor but also thank you for Intel PCR we've been a few months very hard working with them closely to actually make all the fixes available and",
        "as a conclusion I think it's important to remember so this feature should be properly configured by the vendors and consistent with an ecosystem again static storage it's actually contain a lot of important data which it should be considered as a potential attack surface and actually open the attacker for possibilities for an easy bypasses and also",
        "it's going to be modified something in memory and Lead arbitrary code execution gaining during the early boot right and this actually arose attacker to gain much more interesting security boundaries and attack the platforms and just one more reminder to the industry complexity it is an enemy of security",
        "so all",
        "actually firmware controls for detection",
        "such vulnerabilities at scale the scanner everything is open sourced available on the GitHub and all the advice advisories are public so please enjoy looking on it and fixing these problems at scale thank you very much [Applause]",
        "[Music]",
        "thank you [Music]"
    ],
    "Upo5I_mK1V4": [
        "[Music]",
        "today I'm going to be talking about the early launch anti-mower system also known as Elam this is Microsoft's",
        "anti-tampering mechanism that they offer to well not only themselves like in Defender for endpoints uh Defender AV but also like any third party endpoint vendors can opt into this security feature",
        "all right so a brief introduction into Elam and PPL protected process light processes",
        "but before I get started I just want to give credit where credit is due um even like any work that is novel it's derivative in some way and so this is no exception so I just want to give a shout out to James Forshaw and Alex aionesku this work wouldn't have been possible without all of the previous work that they did especially this talk that they gave at Recon in 2018 so recommend you check it out and if you ever run into them thank them for all their awesome research",
        "so protect the processes",
        "I could have a dedicated talk just to this Alex and James have done talks on this as well so I'm not going to get super into the weeds here so I just like to offer a very high level description of the protective process mechanisms and how they apply to the Elam ecosystem so",
        "a PPL process the protections that they afford is it's designed to prevent tampering in user mode so emphasis on that all of this work is scoped to attacking everything in user mode",
        "all of these anti-tampering mechanisms like if you could abuse a signed driver you can bypass all these things anyway but we're just going to keep things scoped again to to use a mode and it's designed to prevent uh admin tampering as well even things running as system so you can't start or stop a protected process like more specifically it's harder to stop than it is to start a protective process you can't get a handle to a protected process you can't attach a debugger they're really hard to actually troubleshoot if you don't have all the right signers in place to troubleshoot and debug these things in a legitimate scenario",
        "um and in order to run protected at the anti-mower light level which is what we're going to be talking about here today the executable must meet very specific signing requirements and we'll get into a very explicit detail about what those signing requirements are and how we can possibly take advantage of them",
        "so in order to opt in to running as a PPL anti-malware light process again",
        "this is what all third party vendors but also first party Microsoft products get to opt into you need an Elon driver so in this driver you don't actually have to implement any code now there are like early launch hooks that you could Implement in that driver if you wanted to do some like signature checking uh very early in the boot process but the only thing that you really need in this driver is a binary resource that specifies which signers are allowed to run as anti-mower light services",
        "and in order to be approved to um to be co-signed by Microsoft as an elom driver you have to submit your driver to Microsoft and also be a member of the rather exclusive Microsoft virus Initiative Program",
        "so I'll talk a little bit about how I went about doing initial Recon and just discovering like what was available so that I could better understand um how Elam drivers are structured what the rules in them actually mean when it comes to the designers that are allowed to run as a protected service so what you're seeing here is this is the traditional way that an Elon driver is supposed to be registered we're looking at WD boots this is the the Microsoft Defender AV Elon driver this will be installed by default on any Windows system they're supposed to be installed as a service in the early launch Service Group so this wmi query would just list",
        "all of those out now I said this is the default way of installing it as we'll see later on you don't actually have to install the Elon driver in this way you can just call an API to get it registered",
        "so in the rule sets in the Elon driver and that binary resource there is a list of signer hashes and those signer hashes correspond to the certificates that are allowed to start a service protected at the anti-malware light level now these aren't the typical certificate hashes that you may be accustomed to specifically thumb prints which is the Shawan hash of the certificate rather these are TPS or 2B side hashes those of",
        "you who may be familiar with Windows Defender um application control you may have seen these quite a bit it's just a slightly different hashing algorithm I don't know the mechanics behind it but it's based on the hashing algorithm that's specified in the certificate so it's just a slightly different representation of the hash",
        "now unfortunately what made some of this research a little bit more challenging is that virustotal doesn't understand",
        "TBS hashes it understands thumb prints so you can search for binaries uh based on on thumbprint which is great um so but if you're auditing these drivers and pulling out all the rules you may not necessarily be able to go easily identify what the corresponding executables would be that could run protected",
        "there are two utilities I'm aware of that will calculate and present to you",
        "these tbs hashes in the windows SDK there's cert manager so it was supplied by Microsoft I also wrote a Powershell script that's publicly available called get TBS hash",
        "so this is the structure that the signer",
        "rules are expected to be represented as in that binary resource in the Elam driver so it's the certificate hash and then the hash algorithm which is specific to",
        "TBS hash as I mentioned you have to have the corresponding certificate hashing algorithm for the actual hash and then optionally any ekus these are enhanced key usage attributes so these are just special attributes that you can apply to the certificate to specify that a certificate is used for a very particular purpose so let's look at an example of what these rules would look like in the wild so after parsing out the rule set in WD boots this is Microsoft's Defender driver there are two rules in it so you see there are two tbs hashes in there try to remember that f6f1 will be referencing that later it uses the sha-256 hashing algorithm and it also specifies two ekus so the",
        "way that you would interpret this is any code like any executable like an exe or a dll could be loaded as a protected service at the anti-mower light level",
        "if it has any of those certificate hashes anywhere in the chain so a typical certificate chain will be comprised of three certificates as a root certificate an intermediate certificate and a lease certificate the lease certificate is what signs the the code but this says if any of those are anywhere in the certificate chain then it's allowed to run with one caveat the leaf certificate in this case must have both of those ekus present in the binary",
        "when it's signed so let's look at one such binary that is signed and meets all of those prerequisites so we are looking at let me skip ahead one this is MP eng.exe this is the main Defender AV malware engine executable",
        "so I'm using the built-in get system driver commandlet which I can use to extract the thumbprint you can do this through the GUI as well I'm a Powershell Fanboy so just do everything through there and so just note the thumb print value the f25 this is the sha-1 hash of the certificate",
        "and the corresponding TVs hash so I said remember that f6f TBS hash so I'm showing you here like this executable msnp eng.exe has that certificate hash",
        "somewhere in its chain and just note its",
        "corresponding thumbprint it's the same hash just different hashing algorithms okay it's it's there are two different hashes for the same certificate I mean",
        "and this is what it looks like in the GUI but what I wanted to highlight here was for msnp Eng when we look at the signer attributes I've pulled up the EKU the enhanced key usages and you'll see it's the first two ones listed uh the ones that end in 76 11 1 and 76 8 1. that match those two specified ekus so",
        "we have the certificate hash that's somewhere in the chain and we have those ekus applied and it's a valid certificate so that means that msnp eng.exe is allowed to run as a",
        "protected anti-mower light service",
        "okay",
        "so let's do some further validation let's actually confirm that this process is running at the anti-malware protected light level so this was a tool I wrote Johnny Johnson here also on on our team wrote a similar tool parsing this out so you can get this information via nte query information process I think so",
        "this is just useful for troubleshooting so you can indeed see that it's running protected and then I'm using wmi to",
        "identify the corresponding service for",
        "that running process the wind defense service because remember I mentioned you have to install this as a service in order to get it to run at the protected level and here's the corresponding Service registration for wind defend and what is",
        "noteworthy is the launch protected value is set to three which corresponds to the PS protected signer anti-malware level",
        "so Windows when the service manager goes",
        "to start this service it sees that launch protected value it says okay I need to start this up as a Nancy Maurer light service",
        "so it goes back and it validates all the signatures the certificate hashes if it checks all those boxes then it will indeed run at the anti-mower light level and be afforded all of the anti-tampering protections given to you",
        "by Elam and PPL",
        "mm-hmm Okay so as I was researching this the question that naturally arose for me was given that Elam is like an allow list for anti-malware PPL process execution does",
        "there exist an Elon driver that might be overly permissive and maybe allowing more than it should so let's investigate that",
        "so this was my initial research process I've got a virustotal intelligence account so which is really nice because I can do a query like this so this query specifies",
        "um this is the signer subject name for Elon certificates so when you submit your driver to Microsoft they return it back to you approve it and co-sign it with their certificates that is the subject name of that of that driver tag native searches just for device drivers I'm looking for things that are signed and that are executables or just like PE files and then filter out anything that has an invalid signature and this yielded 886 unique results",
        "um I did some additional validation just to whittle things down to make sure that I was working with Elam drivers that would that actually had that binary resource it's called the MS Elam cert info ID resource made sure I could parse",
        "those out and just double check to make sure that every Elam driver that I pulled down in bulk had a valid certificate and then just on mass I parsed out every single rule for every for all 766",
        "drivers that I identified and pulled down in bulk",
        "um apologies if you can't see this clearly in the back this is just kind of a reference and to give you a sense of the scope of how many vendors have Elam drivers out there so they're the typical players which you'd probably see most of these vendors over in the the vendor Hall some of them definitely stood out to me so like there's that one blank bullet that wasn't a typo there were some Elam drivers that didn't have a vendor assigned to it's kind of interesting also in the center column kind of like in the center up a little bit there's a vendor name of to do company name Windows win 7 ddk just some kind of like Oddball vendors that's",
        "um I don't know just uh just seemed odd but I all I could really go off was just kind of a gut feel but this was kind of like potential further validation that",
        "maybe maybe there exists at least one rule set um that might be overly permissive whether that was intentional or not",
        "all right so the Elam auditing strategy once I pulled down unmasked those 766 Elam drivers",
        "is to go about the difficult process of",
        "taking the TBS hashes which I parsed out from the Elon drivers and identifying the corresponding TBS or sorry the corresponding thumbprint value",
        "this was pretty challenging I couldn't always do that I had to resort to Googling for some of these but most of these hashes just aren't on the internet so I had to resort to more creative strategies for identifying the",
        "thumbprint values so that I could actually search for some candidate abusable binaries in virustotal",
        "um and the idea was like if there was a hypothetical overly permissive rule sets",
        "are there any um like potential law bins that would permit arbitrary unsigned code execution that uh matched all of that matched one of those overly permissive rules which would then allow me to install it as a protected service and potentially get arbitrary code execution in the context of a protected process",
        "so remember I said remember that f6f hash that was the Microsoft intermediate hash so here I'm just going through some more of the the Recon process so I was literally going through the like hundreds of hashes that I parsed out and just Googling all of them to see if I could find any uh any hope of finding a corresponding thumbprint value I got lucky in this case should be no surprise like it's it's a Microsoft intermediate cert um fairly common so I got a few hits fortunately for this there was one great website it's almost like trying to troubleshoot some signer issues and uh",
        "right like there in the website is like the TBS hash right next to the thumbprint so great like I had something that I could easily search for again that thumbprint hash so I'll take that Thumper and hash and then search for that in fires total using the signature tag",
        "um and I got something like this so 171",
        "000 results no big surprise because that was a Microsoft intermediate certificate you would expect like there's a lot of Microsoft signed code that uses that intermediate certificate out there and there's no way in virustotal to search for binaries without maybe doing some like fancy Yara hunting that have those EKU values so that was a challenge right there but I didn't really want to focus my research per se on those",
        "restrictive ekus because I just kind of had a sense that there weren't going to be many abusable binaries that match",
        "these rules that have the Microsoft Publisher and anti-mower ekus applied to them I'm not saying that they don't exist I just think it's probably unlikely that they do there's probably like there's bigger fish to fry out there that's just going to be easier to find uh and so here's the results of the quick um research that I did this slide is really important pay attention to it so I'll walk you through how to interpret this of all the 766 Elon drivers that I identified and parsed out all the TBS hashes for all the rule sets and found corresponding thumb prints",
        "these are ones that uh these are rules that were present in those binaries so",
        "that first Microsoft corporation uh hash",
        "value mind you it didn't have an EKU restriction on it so this means that if",
        "you have any Microsoft signed executable that has that certificate anywhere in the chain then it can run protected same for the second and then what was even worse was the intermediate the third party intermediate certificates so if you have any certificate that was issued by any of those three",
        "certificate authorities then you can run",
        "your code your malware or whatever as uh at the anti-mower light protected level so the one we'll focus on is 495 let me",
        "go back one okay that's the verisign intermediate certificate Okay so I had",
        "the we had the corresponding thumbprint for the verisign intermediate certificate I wanted to know what code is signed any code signed by that so like so this is going to be the intermediate certificate so the leaf certificate will be different but that's okay it's going to be allowed to run and show me any executables that have 40 or more positive AV hits so in other words like confirmed malware that would be allowed to run at the anti-mower light level so we have 177 000 unique samples of malware that can be afforded all of the protections of uh",
        "anti-malware PPL so kind of hard to kill those things once I get started at that level",
        "now this relies on",
        "my ability your ability to identify what those Elam drivers are so if you have vti access then maybe this is something that you could investigate a little bit further I'm not going to be calling out any vendor names here so the could be an exercise for for later",
        "okay so how would you actually weaponize this",
        "so you'll want to identify a candidate abusable executable note the thumbprint",
        "value here that's 620 that corresponds",
        "to",
        "the second Microsoft certificate there",
        "okay",
        "and the first law bin that came to mind for me was Ms build should be easy enough to abuse it's like one of the most classic low bins that can get you arbitrary unsigned code execution thank you Casey Smith for that and so I found 16 unique hits for that that were signed with that very specific uh Elum rule set",
        "okay so what do you do with that once you identify that candidate Ms build I would like to get arbitrary unsigned code execution from that what you do is you take the Elam driver that you identified was overly permissive and had that Microsoft rule in it and you drop it to the host it's signed like it's legitimate it's fine and you um you call the install Elon certificate info API you have to do this as admin you would have to be elevated anyway to install the the service",
        "so and then you would drop your candidate binary that you want to abuse in this case Ms build and then calling change service config to W or you can just do this directly in the registry you're going to specify that the service needs to run at the anti-mower light level start the service and then profit maybe now there's still additional steps like in order to get arbitrary and sign code execution from them from Ms build you have to give it an XML file which consists of like c-sharp code and hope that you can actually get that to run turns out there are some constraints though what are those so most probably all law",
        "bins out there were not designed for the express purpose of running in the context of a protected process and uh by",
        "the nature of the anti-malware lights protection level being pretty robust and not allowing a lot of dangerous things to occur one thing that can't happen by default is a malware running at the protected level cannot spawn a child process by default so like if you just call the create process API from the context of the protective process it's going to fail you have to supply like a specific flag to um to create process to actually allow that but these law bins like they're not going to be supplying that flag and when you execute code and like abuse Ms build part of the artifacts of that is there's a child process it calls like the c-sharp compiler assuming you're supplying C sharp code to execute so it spawns that process so that that wasn't allowed so this broke for me when I was trying to weaponize it like I confirmed that it started the service started protected but I couldn't get it to execute code so I had to get a little creative and again thank you Casey Smith for blogging way back when about property functions and Ms build so this was kind of a neat little hack that I was able to use to get around not having Ms Bill not spawn a child process so this is what the weaponized payload from as build actually looks like it's a super weird syntax it's kind of like Powershell and it has to be in a one-liner so I had to get kind of creative like how to weaponize this so what I ultimately wanted to do to demonstrate arbitrary unsigned code execution was get this to",
        "load in memory and execute a.net",
        "assembly so that's what the highlighted code does here you would just take your malicious.net assembly",
        "excuse me and you would implement the",
        "logic that you want to execute in the test Constructor and then in that and then you take that whole binary base64 encode it and then you just drop the base64 code string in there and then NS build will run your payload without the issue so thanks again Casey",
        "okay so quick demo",
        "okay what we're going to be seeing here is first we're going to list out all the protected processes",
        "and note the ones that are running at the anti-malware lights level so we have two here msnp Eng that's the defender AV engine and Nas SRV",
        "now I'm going to run my code that runs arbitrary Powershell uh using Ms build",
        "and you can see that Ms build is indeed running at the anti-mower light level",
        "this code is out there it's publicly available I'll link to it at the end okay so this is just the rather benign payload I was just having it like run asleep command just to show and prove that Ms build was indeed running at that protected level",
        "so another payload that we could do so once you're running at the protected level not only is your own malware protected by processes that aren't protected but you can now go kill other protected processes so let's see what that looks like again we'll list out the protected processes we're going to pick on msnp Eng note the process ID 3168",
        "and I'm running elevated here and I'm just going to try to stop it using stop process doesn't allow it no surprise there but using invoke anti-malware light command by abusing that overly permissive driver we're going to kill the process through Ms build running protected",
        "and now note that msnp Eng has a new process ID so what happened there was the old one was killed and Defender AV it restarts itself",
        "then gets a new one and then we'll just try it again for giggles and see what happens",
        "so now it just failed to restart again and then you can hopefully see on the bottom right the defender little icon",
        "went from green to Red indicating that something happened so we've effectively killed um the defender AV engine through Ms build running at the protected level because we abused an Elon driver that",
        "has an overly permissive rule set in",
        "this case um it's overly permissive Elam dot sis I had to rename it to protect innocent vendors",
        "so yeah that's that's what's necessary to abuse that so how might we go about mitigating and trying to detect this stuff so fortunately wdac for the few people out there who might employ this so again this is Windows Defender application control it can block these from loading so if you want to be very specific about the Elon drivers that you want to allow in your environment it's generally a good thing to do not sure how well that would scale but the technology does allow you to block Elam drivers that",
        "shouldn't be allowed in your environment",
        "and then hopefully we might be able to get uh more robust fix from Microsoft in the future um but as you can maybe understand like this is abusing the features of the Elam uh allows like allow rule Set uh rather than abusing any any sort of vulnerability uh in abusing the uh",
        "submission process to Microsoft that Microsoft even allowed these overly permissive rules to be put in place in the first place now I can't even begin to speculate why any",
        "of those like third-party intermediate certificates would ever be allowed um so you know shame on Microsoft for that um the Microsoft rule sets my only speculation as to why those might be in there is because imagine if an endpoint",
        "security vendor took a dependency on like the the visual C runtime Library like that's signed by Microsoft and they're like well we take a dependency on this so we need to be able to get our dll to load into our protected service and so Microsoft like please allow this and sure sure enough they they allowed that that's still speculation but I think that's a reasonable explanation for why some of those vendors had those Microsoft certificates in there",
        "um and we also audited like a bunch of other vendors and one thing that we wanted to try to do was for the rule sets that were particular to a vendor I'm not picking on like VMware here it's just the first vendor that comes to mind like they have their own Elam driver and so you can parse their rule set and then identify any of their corresponding VMware assigned executables that could",
        "in theory run protected and then this",
        "whole auditing process would apply equally like to VMware where we would try to identify like VMware signs low bins that would protect or that would permit arbitrary unsigned code execution in the case of VMware I wasn't able to find any obvious ones same goes for lots of other vendors so again I was just going for like the um the path of least resistance here like anything that allows Microsoft because as you saw I was able to find an abusable MS this build so that got the job done so some detection recommendations",
        "my advice would be to focus on the",
        "registering of any protected services of",
        "course you're going to have false positives but in theory like if you can suppress some of those this should be relatively rare that you would have any new Services be created that you don't expect in your environment I would probably shy away from like anti-malware light process creation I",
        "think that would probably be much more false positive prone so yeah I just encourage you to focus on service creation or modification",
        "uh as for vendors um again I'm not going to shame any vendors here I don't even blame the vendors who have the overly permissive rule sets entirely um because Microsoft allowed them to submit and approve those overly permissive rules but I would encourage any vendor who does publish and have a signed elom driver just to go back and audit your rule set and make sure you're not allowing anything that shouldn't be in there because you wouldn't want to be the vendor that ruins the entire anti-mower light ecosystem for everyone",
        "yeah so in conclusion why is this so bad one overly permissive Elam driver from a single vendor poisons the well for all other vendors again so the way that we weaponize this is we identify that overly permissive driver we drop it onto the system we register it with that API and then we take our corresponding service executable that is signed so I must build and run that protected and so even if what's installed on our Target system is like uh again like VMware carbon black cloud right um if the overly permissive Elon driver is from another vendor there's nothing preventing me the attacker from just dropping that side by side with VMware in this case registering that and then getting Ms build to run my malicious payload and be protected or to go",
        "stop the VMware on black cloud endpoint Service as well",
        "um so again the Microsoft's vetting process for these things is far from robust and hopefully in the future they may gradually Implement some stronger checks and start to lock this down but there is no easy fix right now so I reported this to Microsoft back in December uh of 2021",
        "they acknowledge the issue no surprise like I'm not bashing on MSR msrc this is not a security boundary but I pass it on to the defender research team and they own this like so I just want to thank David Kaplan gilbasso Phil Zuckerman on the defender research team they've just been wonderful to work with they've taken it very seriously and they have proactively communicated with their",
        "Microsoft virus initiative Partners so anyone who does have an Elon certificate or Elam driver through the mvi program you would have already been reached out to and proactively communicated with so again",
        "shout out to them they've just been awesome",
        "um like soft gave me an official response um saying we've got a tight partnership here uh and indeed they did communicate with their mvi Partners so they've been great okay so some resources if you want to learn more about Elam protective processes these slides will be available soon so recommend you check these out if you want to learn more and then the code that you saw me use all this is available on my GitHub so get Elon cert info will you just point it to an Elon driver and it will parse out those rules for you get TBS hash again that's the one that will take a certificate and calculate the TBS hash so that you can start to go through that research process and then finally the The partially weaponized script it's a Powershell module called anti-malware blight I intentionally wanted it to be defanged so it is fully weaponized if you bring your own abusable",
        "Elum driver and abusable Ms build that",
        "you can go find on on virus total okay so thank you [Music]",
        "[Music]"
    ],
    "ERaRNsvCBrw": [
        "[Music]",
        "so who is excited about this amazing technology called XML",
        "some people are okay okay let's try something different uh who's excited about zero click attacks on Messengers",
        "or maybe some more people okay well that's that that's a shame because it's more about the first topic than about the second one",
        "um I can understand the lack of excitement uh in some of you about XML though because you see uh when XML was young I was a young computer science student and I wasn't excited about it back then either um some people were though so you know I I remember this one guy who was like excited about it and and and talking about how this how is this amazing new technology and I'm just you know I'm standing there I'm politely nodding my head but inside I'm thinking GI must have chosen the wrong profession um so fast forward two decades later I'm",
        "finally excited about XML uh for all the wrong reasons um so yeah XML you can do stuff with it if you're a security researcher",
        "um anyway welcome folks to xmpp stanza smuggling or how I hacked Zoom I'm Ivan fratrich I'm with Google project zero",
        "I've been doing this security research for a long time now I stopped counting after after 10 years because counting after that just made me feel old [Music] wrote some security tools to help others with security research and we might even see some of them in action in this talk",
        "right so let's talk about xmpp",
        "xmpp stands for extensible messaging and",
        "presence protocol and it's essentially",
        "uh instant messaging protocol based on XML and when something is built on top of a technology that's over two decades old you know uh it's a good Target for security research",
        "so xmpp is a protocol that's used in various applications EU applications it's it's used in uh in some Messengers it's used in some applications that have",
        "a messaging feature like Zoom for example uh but also in in other applications for example it's these days quite popular in online games and also I",
        "hear in industrial applications",
        "um so even though this talk has zoom in the name it's not really only about Zoom most of the stuff you hear today is going to be applicable to other targets however since Zoom is the most high",
        "impact Target that I know that uses xmpp protocol uh Zoom is going to be used as an example throughout this presentation and there is also going to be an exploitation case study later in the talk",
        "um so as I said xmpp is a message protocol based on XML and the way it works is you have",
        "XML sent over stream connection so",
        "here you can see an example of how an xmpb stream simplified might",
        "look like so at the start it starts by opening a stream tag which would be at like the root level of the xml3 and then",
        "at level one of the tree you have some Snippets of XML that are called stanzas and the stanza is a basic unit of transfer in this xmpp protocol so here in the slide you can see examples of two stanzas one is a message stanza",
        "and this is an example of something that's meant to be sent from one client to another in this case it's an actual instant message the second one is the IQ stanza and unlike the first one IQ stands that typically isn't sent from one client to another it's me it's more meant to be exchanged between the client and the server so these are kind of control messages and when you see this in security when you see control messages being sent over the same text-based connection as user",
        "control data then you might be thinking about injection attacks and lack of escaping and this might work depending on how the tar how the service is implemented however it's not exactly what we will be talking about today instead let's examine some other features of this xmpp protocol so what you can see here is uh is an example of a message stanza from the perspective of the sender and the perspective of the receiver so on the top you can see what the sender sends on the bottom you can see what the receiver receives and you can see it's more or less the same you can see the message highlighted but you can also see a bunch of XML tags inside this stanza so one thing I was wondering is what would happen if I put some other XML tags inside this stanza and a surprising",
        "result at least to me was that this custom XML made it all the way through and I'm I'm not sure how you folks feel about this but when I saw this I was like mindful uh because I thought you",
        "know I can do stuff with this and and it turns out you really can um one note here though is that any custom XML you put in this way needs to be valid from the perspective of the server because the server is going to parse this XML and if the server encounters a parsing error then it's just going to terminate the connection and not process the stanza further So speaking about this server let's take a look at how a typical xmpp infrastructure looks like um so uh we are just going to focus on parts that touch XML directly obviously it's way more complicated than this uh but how it works is that a client sends a stanza to the server which is in XML format the server needs to parse it and then the server would do whatever processing it needs to do based on the stanza type and then if the server decides that this is a stance that that it needs to forward to another client it's going to serialize it it's going to convert it from object representation back into a text representation it's",
        "going to parse it it's going to uh it's going to uh send it over that string connection to the client and then the client needs to parse it again so at this point let's try to answer the question what can go wrong here and the first part of the answer you already saw which is that you can send custom XML all the way through this pipeline but by its own this doesn't give you anything however let's combine it with the fact that XML is complicated and XML parsers have quirks and if you don't know what I mean by quirks then here's a challenge for you find me two XML parsers two different XML parsers that always for every input will result in the same output um and I'm I'm willing to bet that you are going to have a very hard time with that",
        "so at this point let me introduce what I",
        "call xmpp stanza smuggling attacks in theory it's an attack where a client sends a stanza with some custom XML embedded the server parses this stanza sees a single stanza nothing unusual sends it to the client and then the client parses this again but instead of seeing a single stanza it is multiple stances so in a way we are smuggling stanzas from one client to another through the server hence",
        "the name of the attack",
        "and this is not a single vulnerability in fact there can be different vulnerability types that enable this kind of attack so for example the first type that I saw was due to differences",
        "between XML parsers on the client and the server however you can also have bugs that enable this attack data server only typically due to interaction between the parser and the serializer and finally you can also have bugs with a client only and once again this talk is not only about Zoom so here you can see bugs that affected Zoom but also uh you can see bugs that affected other targets some of these bugs affected multiple targets um and I can also neither confirm nor deny that there are other bugs not listed in this slide",
        "but as I said Zoom is going to be used as an example so it's useful to see how this xmpp infrastructure looks like",
        "in Zoom case so on the client Zoom uses",
        "a library called glux which is uh an xmpp client Library open source",
        "it has its own XML parser and on the server uh Zoom is based on xmpp server called ejab Rd which is written in erlang if you can believe that erlang uh sorry ajabi has",
        "a library called fastx ml for handling all of the XML related stuff and fast XML uses another Library which is more popular which is called expat for XML parsing",
        "at this point you might be wondering how the hell does he know what Zoom runs on their servers well whenever I want to know what someone runs on their servers one thing I like to look at are the job ads and here you can see conveniently a job ad for a senior xmpp engineer at zoom and there is a word that stood out here and that word is erlang and erlang in combination with xmpp can only mean e Jeopardy",
        "so at this point let's take a look at a few bug examples that enable this",
        "stanza smuggling attack the first example we are going to look at is going to be due to differences between parsers on the client and the server and this one has to do with UDF AIDS and you are probably like oh no now he's going to talk about utf-8 wasn't was it XML enough uh well really yes I am but only briefly sorry so basically the only thing you need to know for the about utf-8 is captured in this table taken from Wikipedia and the only thing you need to know for the purpose of this talk is that in utf-8",
        "you can encode characters using different number of bytes so some characters you can encode using a single byte so I'm using two bytes I'm using three bytes so I'm using four bytes so for example if you have a byte EB hex then it could be a start of a three byte sequence and I'm saying could be because if you have a sequence like this then it's actually an invalid sequence because while the first byte is a valid",
        "start of a three byte sequence the remaining two bytes would need to have their highest bit set in order for the sequence to be valid but let's now take a look at how different XML parsers handle this invalid Duty f8 sequence export parser is going to claim that this is a valid three byte character and the glux parser is going to claim that these are three different characters and the funny thing besides the fact that these two parsers can't agree is that both of these are wrong this is an invalid sequence it should result in a parsing error",
        "so if we take this basic principle",
        "and take it one step further then you can do some fun stuff with it you can for example construct a string that if parsed with expat expat is going to see a single XML tag however if the same string is parsed with Googs looks is going to see two tags and then if you if you take this and take it further then it",
        "shouldn't be difficult to see intuitively that this can be used to smuggle stanzas here you see the payload that I actually used in my zoom exploit we're not going to analyze in detail how this works due to uh um in in the interest of time I think it's more important to understand the basic principle from from the last slide",
        "however one thing that I'm going to say is that again talk is not only about Zoom so this exact same vulnerability besides Zoom also affected Cisco Jabber because Cisco Jabber in combination with",
        "Cisco Ironman presence uses the exact",
        "same parser pair as Zoom",
        "so this this was an example of a vulnerability due to differences between parsers on the client and the server now let's take a look at an example of a different vulnerability a server-only vulnerability and this one is quite specific to expat and to see how it works we need to take a look at how expat parser is used inside ejabi and so here in the slide",
        "you can see the relevant initialization code and the most relevant part here is this last parameter here with the value of backslash Channel now what this is a separator that is used when expat",
        "returns tag names to the library user uh",
        "ejability or fast XML in this case to understand how it works let's take a look at a couple of examples so for example if you have a tag with a namespace attribute then",
        "what you receive from expat is a namespace and the tag pair concatenated using this separator",
        "and it's it gets more complicated if the tag also gets a if if a tag also has a prefix because in this case instead of the namespace tag pair the user receives namespace tag prefix triplet again called concatenated using this separator",
        "now as you're probably well aware in security whenever you are concatenating strings using a separator you need to pay special attention that the component",
        "strings you are concatenating can't contain this separator so let's see if that's actually the case here",
        "um so if you just tried to put a new line character in namespace attribute it wouldn't work however if you numerically encode it it will work and what the user receives",
        "looks like to the user as namespace tag prefix triplet however what the user thinks is a tag name is actually going to be a part of the namespace attribute and this gets very bad very quickly because there are other characters you can put in the namespace attribute that aren't valid inside the tag name so for example you can even construct tag name which contains other tags and then",
        "when this gets serialized",
        "then all all characters you put inside",
        "the tag name get output at this output as is and again it should be intuitively uh obvious that it's this",
        "can be used uh to smuggle stanzas",
        "this bug might even be more dangerous than the previous one because while the previous one required a specific pair of XML parsers",
        "this one affected everyone that uses",
        "that used uh ejabody server which is a quite popular xmpp server implementation",
        "all right so now that we've seen some bug examples let's talk a bit about how you can find such bugs yourselves",
        "in two obvious ways are Black Box testing and code review and you might be thinking well it makes sense the utf-8 issue could have been found by just black box testing and the separator issue would have been easily spotted by code review however if you think that's how I actually found these issues then a heavy fooled because both of these issues were found using fuzzing and since fuzzing is something that's more commonly used to find memory corruption issues let's see how it can be used to find logic logic bugs like this",
        "so once again we return to our XML pipeline slide because this is the thing that we need to fuzz however don't think for a second we are going to do any kind of network fuzzing this would be a very silly and a very wasteful thing to do please don't do Network fuzzing unless you absolutely have to instead we're just going to take out the libraries that play a role here and put them in a single binary and then whenever you uh fast for logic",
        "bugs one thing you need to Define is what constitutes a bug and for us what we are going to consider a bug is going to be a parsing error at the very last stage of this pipeline in XML parser on the client so here you can see an example taken from the fuzzing harness that I actually used to fast this so what it does is it takes a sample wraps it into some XML tags and then feeds it to the par to the server parser and serializer and if this part errors out that would mean that the server caught an error so we just return we don't consider this a bug no crash however if this part succeeded then we take the output of the server serializer and feed it into the client parser and",
        "if this part errors out then that means that there was something on the client that the client wasn't supposed to see that made its way all the way through the server and so if we get this we actually cause a crash and here I just cause a crash by forcing a null pointer dereference",
        "if you find a bug like this it doesn't necessarily mean it's exploitable for stanza smuggling however at least in my case all of the bugs that I found this way did turn out to be exploitable",
        "for fuzzing this I used jackalope fuzzer it's not necessary to use this fuzzer you can use whatever fuzzer you like however Jackalope is the fuzzer that I wrote and that I actually use whenever I do any kind of general purpose fuzzing I think it's pretty good though I might be slightly biased",
        "however one thing that is important with regards to selecting a fuzzer is that",
        "your father has coverage feedback and to see why that's important consider that when I pass this my input Corpus was pretty bad and it contained neither numerically encoded character sequences nor special XML",
        "attributes like XML and S all of this was found by the buzzer on its own using just coverage feedback Magic",
        "so at this point you saw some bugs you",
        "know how to find them but it might not be obvious what you can do with them and it was not obvious to me either when I started this research I had some bugs but for a while I felt a bit like an underpants no you know I I have something I want to do something with it but the step in between is kind of vague um so let's see what you can actually do with stanza smuggling the first thing you can do is message spoofing meaning you can send a message to another client and",
        "the other client is going to think that this message is from someone who didn't actually send it um this this follows from the fact that if you smuggle a message stanza then all of its attributes including the sender attribute would be completely under your control",
        "this is something that you you can always do with this stanza smuggling attack however it's probably the least interesting thing you can do",
        "the more interesting thing you can try to do is redirect the xmpp connection to",
        "another server and the capability that would give you is to be able to intercept all of the victim's communication",
        "good news at least for the attackers is that xmpp spec already provides a way to do this through see other host error stanza",
        "unfortunately though most of the xmpp",
        "implementations that I saw don't implement this part of the spec the good news though is even though they don't implement it as prescribed by the spec they still implement it but they implement it in custom ways not not always but sometimes",
        "why they do it this way instead of just following the spec I have no idea but it's obvious that they still",
        "um that that xmpp installations especially larger Ones Still find this functionality useful",
        "another thing you can try is looking at custom xmpp extensions",
        "for example Zoom client defines over 50 custom Zoom specific extensions to the xmpp protocol and then if you find any configuration data that travels over these extensions that then it would of course be completely under your control",
        "and one other thing you can try to look for are memory corruption box that you otherwise wouldn't be able to reach because they require stands as that one client can send to another client so here for example you have a quote from point to own write-up from last year and in their exploit a feature was used",
        "in the stanza that normally one client shouldn't be able to send to another now in this case it was possible to do due to an issue unrelated to stanza smuggling however when you have a stanza smuggling uh primitive then you don't",
        "need to worry about what one client can send to another you can send everything you like",
        "so let's now try to put all of that together and use it to hack Zoom",
        "when I started this research",
        "I attempted various approaches for",
        "exploiting zoom and mostly I was looking",
        "at custom X and PP extensions I found",
        "some interesting stuff but nothing that would really give me a zero day RC the Breakthrough however came",
        "when I noticed that Zoom made custom",
        "changes to the glux library specifically",
        "to the handling of the error stanza inside the glux Library specifically Zoom edit support for a tag",
        "called revoke token inside the error stanza and this revoked token tag supported an attribute called web domain",
        "so naturally I wondered what would happen if I put my own domain inside this web domain attribute and what would happen is that I would get an HTTP post request for an endpoint called cluster switch",
        "so at this point um the question becomes what does this cluster switch endpoint do and for the purpose of finding that out I set up many in the middle proxy in Reverse proxy mode meaning that it proxied requests to the actual Zoom servers and",
        "then when you do this you are able to to observe the response from the server and what the server responds",
        "for this endpoint was it was a really large configuration protobuf but the part of that protobot that I found the most interesting was a pretty large list of domain names and these are domain names that Zoom client uses when connecting to",
        "various services on Zoom servers so for example there is a domain for web there's a domain for xmpp ETC and if you",
        "replace all of this then you would be able to intercept all communication between the zoom client in the zoom service which is already quite nice however what I really wanted was zeroclick rce as I mentioned and I had an idea about how to do that and that was to hijack the auto update mechanism in order to do that what I replaced was the domain that Zoom client uses to connect to the zooms web server so let's recap how the attack looks like so far he starts by attacker exploiting a stanza smuggling issue and sending a payload with an error stanza with revoke token tag and when the victim client receives this",
        "it immediately requests the cluster switch endpoint which the attacker can proxy",
        "but replace the domain used for um",
        "useful used for web for web and then eventually the client is going",
        "to request auto update information using the release notes endpoint",
        "and we can again proxy this but replace the URLs used to download update",
        "components",
        "the way Zoom or update works is that Zoom downloads two files one is called installer.exe and the other one is called zoom.msi",
        "and even though this one is called that MSI it's actually just a 7-Zip archive that contains the actual update files",
        "we can replace both of these files you",
        "might be thinking that it's game over unfortunately not quite because of Integrity checking specifically Zoom client checks the signature of installer.exe before running it and installer.exe checks the hash of",
        "zoom.msi before unpacking it",
        "and on the first glance this looks pretty solid right but one thing you can do is a downgrade attack specifically I found that version",
        "4.4 of Zoom installer is on one hand still properly signed by Zoom but on the other hand it skips the Integrity check on zoom.msi it it just unpacks it",
        "so it actually looks like it's game over at",
        "this point so let's take a look at all of this in action",
        "together",
        "sorry let me just restart this is a video demo it needs to be a video demo because uh the bugs are patched on the zoom servers so even if even if I had um old clients it wouldn't work I'm sorry that there is a lot of things going on around here",
        "and the text might be a bit difficult to see but you don't need to see it I'll explain everything that's going on but also if you just want to see better then feel free to to just uh come closer to the screens in the room so what we have here",
        "is attackers VM on the bottom left",
        "attackers proxy on the top left and the victim VM on the right side of the screen which is just a clean windows",
        "VM with the most recent version of Zoom at the time installed",
        "the attack starts by the attacker running Zoom client under instrumentation and this instrumentation allows the attacker to intercept and modify raw xmpp traffic so here you can see some of that traffic what happens next is that the attacker sends a very special message",
        "and the instrumentation running in the background replaces this message with the stanza smuggling payload when",
        "the victim client receives this message it immediately requests the cluster switch endpoint which we proxy and then",
        "from that point on the victim client continues to use our server instead of the zooms web server uh what's going to happen next is I'm going to restart the client on on the victim machine the",
        "reason for this is that Zoom checks for auto updates about one minute after it starts it might happen at other intervals as well I didn't check uh but even if the attack requires",
        "restarting of the victim client I still consider it zero click because everybody is going to restart their computer sometimes uh at least to install OS updates and if",
        "you don't do that well then you have worse problems than Zoom exploit",
        "um so right now we",
        "are just waiting for",
        "um we're just waiting for the weekend client to check for uh updates I'm just going to skip ahead until the point that happens or actually I don't need it it's going to happen any second now you should see a request for release notes endpoint there it goes and then after that there is the downloading of those two files that that you saw a couple of slides back so first is the update archive it's a bit larger so it take some time and the second file is smaller so it should be done quickly and then",
        "if you restart the victim client one more time it should start the auto update process however when the auto update finishes instead of launching the updated version of Zoom you get something else",
        "thanks",
        "um I should note that calculator is just the means to show that I have RC at this point in a more realistic scenario you would actually launch a normal Zoom executable but you would also launch um whatever payload you want in the background",
        "okay let's now go back",
        "to my slide deck now",
        "we already saw",
        "okay so",
        "um to wrap it up I think that these stanza smuggling",
        "attacks are pretty underexplored attack",
        "surface I was able to find many different bugs in in different targets and unfortunately uh",
        "the way xmpp protocol is designed kind",
        "of makes it easy to to introduce and also to find bugs like this and the bugs themselves can be pretty dangerous so the impact can range all the way through relatively benign message moving all the way through uh intercepting private communication to as it was it as was just demonstrated zero click rce",
        "and finally please don't estimate fuzzing for finding logic bugs",
        "finally finally I'd like to just think",
        "uh some folks thanks to who this story has a happy end I believe so specifically Sebastian peeping of expat who was really helpful with with uh getting the expert issues fixed Zoom",
        "security team who took all of these issues very seriously and made really comprehensive patches and and finally my team members uh",
        "and they thank them for their annoyingly useful comments during uh the course of",
        "This research thank you",
        "[Music]",
        "[Music]"
    ],
    "noNx1Dmo3K0": [
        "we asked our business customers for their most dramatic security stories they don't have any now when you're talking about a good story isn't the best story none at all hey remember that one time the whole network went down because we got hit with ransomware nope see we've been using malwarebytes for eight years or more so we don't have any scary exciting stories sorry no drama here not in my house ai-powered cyber protection that just works so you can too Malwarebytes",
        "foreign",
        "[Music]",
        "ten",
        "nine eight seven six five four three",
        "two one",
        "[Music]",
        "thank you",
        "hey good morning everybody uh show of hands who stayed up way too late",
        "I'm proud of you for making it here thank you I'm on like my third coffee I talked so much yesterday I thought I was getting like every cold you could get in Vegas I was croaking no it's just just talking I've never I haven't seen so many friends um in one place it feels like forever and so yeah it's awesome awesome to see everybody here so I'm glad you all came back for the second day hey uh before I introduce our day two keynote Kim zetter I just",
        "it's our 25th anniversary and we were trying to think of uh Keynotes that we would find interesting that um maybe",
        "explored some side angles that you don't traditionally hear at a keynote uh for black hat or Defcon and one is around the media around the Press and uh",
        "if you've been in this space for a while you know there's sort of been a love-hate relationship with the media if um if you have a good interaction with the media or you and your company it could make you it could make a big difference in your career and what you're doing but if you have a bad experience in the media right especially today with Twitter and social media it can really break you and so figuring out who the people in the media are the reporters that you can trust uh is could be a really big deal and for me starting out to decades and decades ago um it was fascinating to see that reporters even cared what US hackers were doing right so that was a big ego boat ego boost wow somebody cares they want to write about us and then we would start reading what they were writing",
        "they're like they seem to fixate on the color of our hair it seems to be really important like what energy drinks we're drinking you know are you know all the color around it and the actual there there",
        "um was kind of lacking and so as we shared notes with each other like who did you talk to how was the coverage we started realizing there's a lot of people that want to cover uh hacking and technology and there's a few people who actually can and um and so we would share notes on who those people were and there was actually um some mailing lists back then I think attrition.org had a list of sort of known good reporters you could talk to known bad reporters you would stay away from that could you know weren't too interested in the facts and uh and so we had some Adventures over the years we ended up banning all of Las Vegas local television from covering any of our events because they would do this thing where yes we're so interested and then there'd be like a blue-haired person like here at the computer and that camera would come in and swirl around the blue hair swing past all the lock picking and out the door and it'd be like cyber criminals in Vegas this weekend what you need to know and uh you can only have that happen so many times and you're just like no thank you television and so we focused on print reporters and the print reporters are the ones those are your friends right they're used to interviewing people they're used to looking at multiple sources their deadline is not quite the same as the television guy and uh and so we quickly pivoted toward",
        "those are the people that we want to spend our time introducing our friends to also",
        "um it's not the only time that we've been infiltrated uh by kind of ill",
        "meaning uh media there's a Michelle Madigan uh scenario where to catch a predator if you remember that show sent a reporter in undercover to Defcon with a little hidden camera and they're going to try to get essentially underage kids to admit to doing computer crimes",
        "and uh and so they didn't get a media pass um we knew this was happening ahead of time a little bit we had a sort of a heads up something weird's going on and so we had like all these goons following her and intercepting anybody before she could try to get them to do something incriminating and then um and then I outed her on stage which was kind of a risky move to make but I tried to give her a chance to correct her mistake and identify his media and she sat there in the front row with her little hidden camera pointed right at me like not not gonna outer self and so this is a long way of saying that um",
        "the history between both sides is pretty fraught kind of like hackers and spies hackers and government right there's this love-hate relationship and so uh when we're thinking of who do we want that has a long history in this space that understands the nuances of both sides and has been there um Kim zetter's name came right to the Top If you don't know Kim she's been what was it 13 years at wired she's experienced Politico New York Times Washington Post motherboard Vice you know she's been around and over time",
        "she's evolved to reporting covering election covering uh digital Espionage",
        "covering um traditional cyber crime and um so I've been interviewed by her a few times and what I can tell you is um it's never 100 comfortable feeling",
        "because she is like has what I consider",
        "um knowledge Insight she has the Integrity",
        "she's not going to shy away from a hard question right it's not there's not a softball situation",
        "but it feels real like you get done with an interview from Kim and you feel like I survived I can do this",
        "um and so because of that her reporting I think is uh is very insightful um and so I'm really curious to see um how she has been thinking about the last 10 years post Snowden",
        "around well what have we learned",
        "what have we not learned right what has changed what is not changing and especially with their long time perspective looking back and looking forward sort of the theme this year right where do we come from but also where are we going um and so it's really my pleasure uh to introduce Kim zetter [Applause]",
        "[Music]",
        "good morning everyone it's great to see everyone after two years of being apart I wanted to thank Black Cat and especially Jeff for that great introduction really appreciate it but I wanted to thank black hat for bringing me to speak with you this morning I think it is the first time that they have brought a journalist to do a keynote",
        "um they told me that there are two Keynotes and one the first one is generally done by someone from industry in the government and the second one is done by someone in the community as a journalist of course I have to strive to be independent and impartial but I do consider myself broadly speaking a member of this community because I've known so many of you for so long and I feel honored that the infoset community considers me a member of it as well so I want to start this morning by telling you a story about a source that approached me uh this was a while ago back in 2006 when I was writing for Wired uh he came to me with what seemed like an implausible story",
        "um this was after a series of massive breaches of bank card numbers that occurred and the source told me that he had a front row seat all the action that he knew the real names of all the players and that he was right in the thick of things he claimed he'd been working for the FBI undercover for 18 months running an underground karting Forum so that he could see how the Cyber",
        "criminals planned their conspiracies sold access to hacked systems trafficked and hacking tools stolen identities and bank card numbers and even wrote customer reviews like on Yelp grading the goods and customer service of their criminal colleagues",
        "[Music] um he uh",
        "he was talking about how the hackers would uh also launder money through digital currency in this case it was e-gold the precursor to bitcoin before it was launched in 2009. the source claimed that he had been um",
        "that he had been flipped by the FBI and",
        "it was a great tale that he was telling but there was one problem he was a professional liar he had started his career writing bad checks and then he eventually ended up as a mule for Russian and Ukrainian hackers he",
        "would receive high-end electronic Goods that they would buy with stolen bank cards then he would fence the goods and then he would send the money to them in Ukraine or Belarus or Russia using e-gold",
        "um so the sources claimed that he had gotten flipped by the FBI after he got arrested one day and uh during doing one of his new operations and the FBI installed him in an apartment in Seattle where he ran this underground Forum now there was no way that the FBI was going to confirm this tale no way that they were going to confirm that the source had worked undercover for them The Source had receipts as they say he gave me the name of the public defender who had witnessed the jailhouse interview where the FBI had flipped him and he had hundreds of chat logs private chat logs from The Forum that he ran showing the hackers planning their criminal operations bickering over botched deals and double crossing partners and laughing about how no one would ever catch them because U.S law enforcement was too ignorant and too unskilled so techno too technically challenged to understand what was going on so for the next six months I had to try and work to confirm everything he was telling me I tracked down victims of the criminal schemes that were plotted in the chat logs I got the public defender who had witnessed the jailhouse interview and he reluctantly acknowledged that the FBI did indeed flip him and I tracked down the former manager of the apartment complex in Seattle who told me that the FBI did pay the rent on the apartment and also gave him a phone number to call in case the source ever got out of line so I'm telling you this tale because it could easily be a tale from last year or even last month not 2006. there's nothing substantially different today about how hackers run their criminal Enterprises they still organize in underground forums they still operate as businesses in hierarchical structure and they still make money lots of it which they launder through digital currency the main difference is they've had more than a decade to perfect their operations and become more professional and now they offer salaried employment",
        "to their workers and even paid vacations but they still bicker they still double cross one another and they still think law enforcement won't catch them and sometimes they're right about that so there's very little that's new Under the Sun",
        "um as they say the details May differ but the same thing's happening two decades two decades ago still occur today so here's a ransomware story from 2008 with all the same elements as ransomware attacks today digital currency to collect the ransom a victim caught off guard",
        "and",
        "a Russian government that's not willing to cooperate with the U.S authorities what's new today of course is the size of the ransoms 500 was large back then today they run into five million dollars or more and also the targeting of critical infrastructure hospitals food manufacturing plants and a pipeline as opposed to targeting individuals one of the big cases of course of ransomware was the colonial pipeline hack last year which reached national security proportions and prompted the government to finally address pipeline security after more than a decade of being largely hands off and it was a watershed moment as they say",
        "but if anyone was surprised by the attack they shouldn't have been because it was entirely predictable when stuxnet was discovered in 2010 it shown us a light on vulnerabilities and critical infrastructure that few had noticed before the security Community largely had focused on it networks until then and now they had and they had previously ignored what were known as what are known as operational networks dot networks industrial Control Systems all of those systems that manage pipelines and Railways and the electric grid and water treatment plants and Manufacturing and so many other pivotal Industries stockstep provided Stark evidence that physical destruction of critical infrastructure using nothing more than code was possible but no one should have been surprised there had been warnings about the use of digital weapons to disrupt or destroy critical infrastructure a decade prior to stuxnet and the same year that stuxnet was discovered operation Aurora was exposed many of you probably remember this it's a widespread Espionage campaign by China that hit 34 companies and targeted source code repositories at Google Adobe and Juniper and included one of the first significant supply chain operations targeting RSA seed repository the engine for its multi-factor authentication systems Aurora introduced",
        "the public to apt's advanced persistent threats and the growing capabilities of nation-state hackers the security Community which had largely been focused on Cyber criminals until then began to focus more on nation-state actors and the sophisticated techniques that made the actions of cyber criminals feels kind of quaint hacking operations became more aggressive and more consequential the OPM hack the DNC hack not petcha solarwinds but none of this should have been a surprise",
        "the hackers behind operation Aurora went after as I mentioned source code repositories through source code Management Systems the systems that track changes and updates to source code which turned out to have security holes here's what Dimitri alperevich then vice president of threat research at McAfee said about it in 2010 the source code Management systems were wide open no one ever thought about securing them yet these were the crown jewels of most of these companies in many ways much more valuable than any Financial or personally identifiable data that they may have that they may have and spend so much time and effort protecting and here's what someone told me last year after hackers injected a back door into the solarwinds software during the build process quote software makers had all these safety mechanisms for detecting changes to source code in the source code repository but none protecting the build environment because no one had ever injected malware into the software build process before do you spot the pattern there's a lack of imagination or a lack of anticipation about the next move that hackers will make this is often the case here",
        "foreign",
        "so I call this talk pre-stax Net post stuxnet Everything Has Changed nothing has changed because stuxnet in the year 2010 is often seen as a demarcation insecurity between what preceded it and what came after there have been a lot of real advancements in security since black cat was founded 25 years ago and a lot of advancements even since stuxnet was discovered in 2010 but despite a multi-billion dollar security industry and an unprecedented government focus on threats everyone still seems to be surprised when threat actors pivot to new but often wholly predictable directions there are a few things that truly Blindside us however the rest casts signals long before they occur what happened with Colonial pipeline last year was foreseeable as was the growing threat of ransomware and the problems created by security issues with voting machines something I've covered a lot of over the years Russians going after election infrastructure in 2016 really we should have been asking what took them so long not being surprised by them we have a habit of reacting to threats to threats after they occur rather than preparing for them or of ignoring voices of reason that warn of impending problems only to scramble into action when they occur that is when panicked drivers are lining up at East Coast Gas Stations trying to fill up a trunk full of canisters with gasoline or when election when election officials turn Rogue and undermine the public trust in voting so I want to talk today a bit about the changes in the security landscape after stuxnet and the changes that stuxnet brought and the things we ignore until it's almost too late but first for those who might not know my work I know that Jeff talked a bit about it but I'll just give you a brief background I began covering Security in",
        "my first reporting job at PC World where I worked for just a couple of years before I moved to wired as Jeff said I worked there I wrote for wire for 13 years until I left in 2016 and and I started attending black hat and Defcon during the early years when Defcon was still held at the Alexis Park Hotel off the strip that was when there were about a thousand attendees to Defcon instead of thirty thousand um Las Vegas has always had a lot to distract people from the conference talks but at 3 A.M in the August heat there was probably no better place to be than at the Alexis Park poolcon as we called it where you could Wade in three swimming pools get lost in deep technical or philosophical conversations to the BackBeat of a techno soundtrack and make lifelong friends",
        "there wasn't such a thing as a security beat in those days at least not outside the tech press reporters in mainstream media parachuted in to cover security only when a major virus or a data breach affected mainstream audiences this",
        "tended to produce mistrust in the media a feeling that journalists didn't really care about security except to spread hype and focus on the antics of blackout hackers but after the Snowden lakes and the DNC hack a lot of media realized that they needed to have full-time reporters on a security beat who understand the issues and could really translate this Technical and complex issues to mainstream audiences and so today we have a host of really great reporters that are covering this beat when I first began attending black hat and Defcon I had a huge learning curve I didn't come from a tech background I was an English literature major I was studying Joyce and Chaucer not Java and C plus plus and but if you were committed to getting",
        "things right and had genuine curiosity people were open and willing to talk and from the first days I had a seasoned group of hackers and security Pros that helped me sort through out sort through all of the technical details and avoid and sidestep the hype",
        "so uh in those days I covered Wikileaks and Julian Assange before they became really household names I covered the early years of their first leagues I broke the story with a colleague about Chelsea Manning's arrest for leaking government documents and I uh covered",
        "that trial uh at the NSA campus I exposed a secret at T room in Missouri used by the NSA to spy on internet traffic this was years before Snowden exposed the surveillance program in its broad swath and I wrote numerous stories about the karting underground and about election security trying to bring attention to something few people wanted to pay attention to back then",
        "and then uh finally uh something shifted",
        "in 2010 with the discovery of stuxnet uh when the Aurora campaign and stuxnet occurred uh the much of my focus of coverage turned to nation state hackers uh digital infrastructure and of course cyber War which brings me to what I want to talk about now which are the changes that stuck snap brought",
        "so aside from introducing",
        "uh sorry I've lost my place here",
        "so aside from introducing the world to cyber warfare stuxnet brought about four major changes in security the first one was a trickle-down effect of techniques and tools prior to stuxnet Innovations and computer attacks were driven largely by the criminal underground with nation-state hackers learning novel techniques from hackers and researchers but after stuxnet the tools and techniques that nation states developed began trickling down to the criminal underground instead of government learning from the underground the underground was starting to learn from Government after Dooku maybe many of you remember this this was a spy tool that was created by some of the same team behind stuxnet after Dooku was discovered in 2011 exploits attacking the same font rendering vulnerability that Dooku attacked were added to Tool kits sold in the criminal underground and it wasn't a year before it was the most commonly targeted vulnerability used to install banking Trojans and other malware the same thing occurred with the infamous dot lnk vulnerability that stux Nets used uh in 2016 oops",
        "sorry in 2016 six years after stuxnet exploited it uh the dot lnk vulnerability accounted for 25 of all exploits used Microsoft had patched the vulnerability back in 2010 but in 2015",
        "research researchers discovered that the patch was ineffective and hackers were still exploiting it",
        "so the next uh big change that stuxnet brought was the launch of a cyber arms race among nations this heralded the militarization of cyberspace stuxnet",
        "demonstrated the viability of resolving geopolitical conflicts through cyber attacks and suddenly everyone wanted in the game before only a handful of Nations had offensive hacking programs but after stuxnet many launched their own cyber commands for spying and destructive attacks including Iran the target of stuxnet where an official told University students to prepare for the coming cyber war with the country's enemies the next thing that sucksnet brought was the political the politicization of security research and defense stuxnet had conducted itself throughout South stealth sabotage for three years from 2017 to 2010 before it was caught until workers at an anti-virus firm in Belarus discovered it and researchers at",
        "Symantec and others around the world uh reverse engineered the digital weapon to determine what it was designed to do the developers behind stexnet probably assumed Iranians didn't have the skills to uncover or decipher the malicious code but they didn't count on the global cyber security Community helping them and with stuxed at a new world a new world order was established in which security researchers became the unwitting draftees in a new militia one enlisted to dismantle the digital weapons that nations lobbed against each other this created new ethical dilemmas for researchers caught between the needs of customers and the interests of an intelligence agency if stuxnet announced the militarization of cyberspace it also signaled the politicization of security research in which digital Defenders might be asked to look the other way to avoid destroying the covert operations of their government there's a new good guy this is a quote from Eric chin from Symantec there's a new good guy and bad guy question here that puts us potentially in a very good very difficult situation this is Eric chin who told me this back in 2012 after they'd finished deciphering stuxnet their research hadn't been marred by political influence no one had tried to to stop semantic researchers from digging into stuxnet no one had stopped them from publishing their findings but Jen knew that might that might not always be the case and if his team was ever forced to choose between customers and government interests he said uh quote it's going to be a very hard question to answer",
        "the last thing that stuxnet did was introduce the security Community to a world of vulnerabilities and critical infrastructure as I mentioned earlier stuxat brought awareness about vulnerabilities in the systems that operate pipelines water treatment plants Etc and once security researchers turned their sites to Industrial Control Systems they found a host of security vulnerabilities in the software but not just that also basic architectural problems that could never be fixed with a patch uh and with so many systems directly connected to the internet cyber security suddenly became uh interlinked with National Security but again this shouldn't have surprised anyone so let's look at what we would have seen had we been paying attention",
        "in 1997 after Timothy McVeigh blew up a federal building in Oklahoma the marsh commission was tasked with looking into ways that other critical infrastructure might be open to attack either physically or through digital attacks and in the final report they produced the Commissioners warned against a growing Trend toward connecting critical control systems for oil gas and electricity to the internet",
        "they wrote the capability to to do harm is growing at an alarming rate and we have little defense against it this was 25 years ago commands sent to the command control computer at a power plant could be just as devastating as a backpack full of explosives",
        "we should attend to our critical foundations before we are confronted with a crisis not afterward waiting for disaster would prove as expensive as it would be irresponsible",
        "a second report released the same year by the White House National Security telecommunications advisory committee echoed exactly what they'd said writing that an electronic Intruder could dial into an unprotected port and reset the breaker to a higher level of Tolerance than the device being protected by the breaker can withstand it would be possible to physically destroy a given piece of equipment within a substation the electric sector because it's heavily regulated did actually heed the warnings and over time did eventually become more secure but a lot of other critical infrastructure became more connected and more insecure when Colonial pipeline was hacked last year many were surprised at how quickly the pump the company paid the ransom surely a business this big and critical to U.S economy as Colonial pipeline is they Supply 45 of fuel to the east coast which amounts to about 2.5 million barrels of fuel daily surely it had sufficient backups and a response plan in place that it wouldn't need to pay the ransom",
        "but as the company's CEO told lawmakers on Capitol Hill months later although it did have an emergency response plan that response plan didn't didn't include ransomware attack and even though ransomware attackers had been targeting critical infrastructure since 2015.",
        "so the signs were there if Colonial pipeline had looked in 2019 just two years before Colonial pipeline was hit Temple University began compiling statistics on ransomware that targeted critical infrastructure critical infrastructure of course being the defined being defined as an entity within the 16 government categories designated by the government based just on incidents reported in the",
        "media or publicly exposed by security firms Temple researchers counted some 400 ransomware attacks on critical infrastructure in 2020 and a total of 1246 attacks between November 13 and",
        "June 30th 2022.",
        "these weren't just attacks on hospitals which of course had been a big Target for ransomware actors in 2016 but these were also targeting oil and gas facilities and the attackers weren't just targeting I.T systems they were already going after the OT networks that are controlling the critical processes",
        "in 2020 the year before Colonial pipeline was hit Mandan reported that seven ransomware families had struck industrial industrial organizations since 2017 resulting in significant",
        "disruptions and delays in production and delivery of goods and services ransomware actors were becoming more sophisticated Mandy and said conducting internal reconnaissance in order to determine which systems were the most critical to production so that they could Target those and demand a higher Ransom both mandiant and dragos reported that ransomware targeting industrial organizations contained kill lists of more than one thousand critical processes that they were designed to Halt before they initiated the ransomware or the encryption and demanded a ransom",
        "so if this wasn't warning enough that same year 2020 dhs's cyber security",
        "infrastructure and Security Agency published an alert warning specifically about ransomware attacks against pipelines it described an attack against a natural gas compression facility that began with a phishing attack against the in the I.T Network and once the attackers got into the I.T Network they made their way to the corporate from the corporate Network to the OT Network because they weren't properly segmented and spread to the latter and once the um the ransom were engaged The Operators were prevented from obtaining real-time Control Data and it forced the plant to close down operations for two days the plant didn't have a response plan at all for cyber attacks in its 2020 alerts sisa advised Pipeline and other critical infrastructure owners to have a response plan in place to conduct red team exercises to simulate attacks and test responses but put backups offline or only on um fully segment segmented",
        "networks and to build redundant workflows so they could maintain critical operations in the event of an attack a year later the ransomware struck Colonial pipeline the attackers got in through the company's VPN using an employee password a password a worker had apparently reused Elsewhere on on other networks because mandiant found the password on leaked passwords online that have been stolen in another breach though it's not clear if the colonial pipeline hacker actually obtained the password that way but the VPN account was a Legacy account that hadn't been disabled and it also wasn't using multi-factor authentication so it created a clear path for the attackers to get in once they had the password The ransomware Struck around 5 a.m on May 7th and by 6 a.m the company had shut down its 5 500 Mile pipeline by late afternoon CEO Joseph Blount decided to pay the ransom which was sent out the next day and as we all now know the pipeline was down for nearly a week and resulted in a Cascade of effects that Colonial pipeline really couldn't control at that point when frenzied customers consumers initiated a panic buy the hack itself didn't inflate prices it didn't cause a fuel shortage but people responding to it did",
        "in 2018 three years before Colonial pipeline was hit an audit of its systems found that it was deficient and security best practices Robert Smallwood whose consulting company did the audit called Colonial pipelines information management practices atrocious and said the company had a patchwork of poorly connected and secured systems and lacked security awareness quote an 8th grader could have packed into that system unquote he said",
        "Colonial pipeline which had no CSO when it got hacked last year instead security duties fell to a deputy CTO disputed Smallwood's characterization and said that its I.T network was quote unquote strictly segregated from pipeline control systems but the CEO blowns also told lawmakers that he shut down the pipeline because he was afraid the ransomware would spread to the O Network suggesting they weren't as confident in their strict segregation as stated and although Blount said his company had the ability to operate the pipeline manually this was true only if a small portion of the pipeline went down not if they shut down all 5 500 miles of it he also said the company had a good had good data backups and yet the company paid the ransom so why would a company pay their Ransom if they had good data backups Bill Siegel who is CEO and co-founder of co-work coverware told me last year that it's generally because a company never practiced restoring their data from backups before they got hacked they might have 50 petabytes of data backed up but if it's in a facility 30 miles away and they have to restore over a copper wire it can take weeks or months to get the data they need or they might discover when it's too late that the applications that they need to actually do the data restoration are on the it Network that's locked",
        "so I don't mean to beat up on Colonial pipeline uh they're just a convenient example because the attack was so significant but other critical infrastructure is in the same position or worse after the colonial pipeline hack sisa released a lengthy list of basic security guidelines for pipelines isolate ICS scada systems and networks",
        "from corporate networks and the internet and Implement strong perimeter controls limit communications leaving and entering those perimeters use multi-factor authentication have a cyber incident response plan in place and maintain good offline backups pretty much the same guidelines that CSA had released in 2020 before Colonial pipeline was hacked when these came out many wondered why would cisa find the need to release these now after years of red flags against critical infrastructure shouldn't this already be uh obvious and shouldn't already be done but Colonial pipeline of course showed that many of these measures were still not implemented despite the fact that the Ukrainian power grid got hacked back in 2015 because they didn't have multi-factor authentication despite the fact that a study by Google and two universities found that MFA can block up to 99 of bulk fishing attacks and about 66 percent of targeted attacks a survey published this year by trellix which is a conglomeration of fire formerly fire",
        "eye and McAfee tralex survey found that 75 percent of respondents in the U.S oil and gas sector still don't have MFA fully implemented and over half of them blamed it on a lack of In-House cyber skills",
        "in 2013 I wrote about a researcher named Paul McMillan who used Mass scan to find systems connected to the internet using Port 5900 the port used by VNC and TeamViewer two tools that critical infrastructure facilities often use for Remote Management though they shouldn't he wanted to see if he could access them he found thirty thousand connected systems that required no authentication to access controls this included two",
        "hydroelectric plants in New York a generator in Los at a Los Angeles boundary the automated feed system at a Pennsylvania pig farm milk inventory controls for a Holstein Farm in British Columbia a system for monitoring and controlling ventilation for underground miners and the refrigeration system for a Food Service Company in Pennsylvania that provided lunch to schools and other facilities that was 2013.",
        "surely you think things are better now but we all recall last year when hackers breach the Oldsmar Water Treatment Facility in Florida through its team viewer application and changed the settings for sodium hydroxide levels in the water supply the plant was using an out-of-date Windows operating system that Microsoft no longer supported its control system was directly connected to the internet without a firewall and all of its operators use the same t-viewer TeamViewer password to access the network",
        "the fact that there aren't more attacks against critical infrastructure isn't because the systems are secure it's mostly because attackers haven't been interested in disrupting or destroying them after stuxnet was discovered people expected that there would be a lot of CopyCat attacks that would Target critical infrastructure in other places but that didn't happen and it didn't happen for primarily two reasons lack of Will and lack of capability those who had the political will to launch such attacks for example Al Qaeda and Isis and who weren't necessarily deterred by the same things that deterred nation states these people didn't have the capability to conduct sophisticated cyber attacks and were more focused on terror attacks anyway they could have purchased mercenary skills but they didn't because the terror attacks were so much more effective and those who were capable of such sophisticated attacks like Russia and China lacked the political will to launch them and knew that any disruptive or destructive attack against U.S infrastructure at least would elicit an equal response or worse as one U.S official put it quote shut down our power grid and maybe we'll put a missile down one of your smokestacks end quote",
        "but this has changed in recent years and we've begun to see greater interest in disruptive and destructive attacks against critical infrastructure this began in of course 2015 and 2016 with",
        "the Russian attacks against Ukraine's power grid the ante was upped with a trident attack in 2017 that targeted the safety mechanisms at a Saudi Arabia petrochemical plants and introduced the potential for attacks that cause physical harm or death and the recent discoveries of in Destroyer 2 which could have caused a widespread blackout in Ukraine if not uncovered and of course pipe dream the expansive attack platform which researchers say had the potential to cause disruption or destruction the version of pipe dream that was found appeared to be focused on liquefied natural gas systems but it could be modified for use against any industrial environment and had the ability to disable or brick control systems or undermine Safety Systems in ways that could potentially endanger lives",
        "so I want to move down now to election security because I've covered it so extensively over the years and it's another sector of critical infrastructure that has long been ignored despite warnings for years about insecurities election infrastructure was",
        "only added to the critical infrastructure list in 2017 11 years",
        "after the list was first created in 2006.",
        "I need to preface this discussion though unfortunately by recognizing that events",
        "of the past two years have made it hard for anyone to discuss legitimate election security problems without it having without without it being misappropriated by people looking to cast doubt on the 22 on the 2020 presidential presidential election and undermine the Democratic process",
        "um but I think that there's a greater danger in not discussing the problems they won't get corrected that way and it will leave elections open to further Integrity attacks",
        "in order to understand the current state of affairs with election systems we actually have to go back to the year 2000 to that presidential debacle in Florida sorry I'm losing my voice",
        "back in Florida in 2000 you all remember when paper punch card ballots and dangling Chads led to a call for recounts and a controversial Supreme Court ruling after that election U.S lawmakers moved to ban paper ballots paper Punch Cards through the help America vote act which they proposed to give four billion dollars to states to among other things replace the punch card systems with new electronic voting machines preferably paperless ones because the dangling chats had convinced lawmakers that all paper ballots were bad there were already years of warnings against computers tabulating votes in a 1969 front page article in the Los Angeles Times described an Integrity test of new computerized election tabulators used by LA County three computer scientists on a red team faced off against three computer scientists on a blue team to see if they could rig an election without detection the red team won repeatedly",
        "Jump Ahead two decades to 1984 in Rock Island County Illinois a computer tabulator gave one candidate two votes for everyone casts for him the next year in a different Illinois County a punch card tabulator elected the wrong candidate for city council which is only discovered in a recount but even in the problematic 2000 Florida election that made lawmakers hate paper a problem occurred with electronic voting machines in Volusia County Volusia was already using electronic systems for about four years at that point the incident should have given lawmakers pause about pushing states to buy electronic voting machines if only they'd been paying attention at 10 pm on Election night Democratic presidential candidate Al Gore was ahead in Volusia County with 83 000 votes to gore sorry with 83 000 votes to George Bush's 62 000. things were going well for Gore across the state uh and exit polls projected a six-point lead for him but then something went wrong Gore's total on the Volusia County website suddenly dropped by 16 000 votes the drop occurred in Precinct 216. it was a community Senator center located in a primarily elderly neighborhood the results were showing that Gore's total was actually negative 16 022 votes",
        "while George Bush had 2183",
        "and a Socialist Workers Party candidate named James Harris had 988 votes",
        "there was a problem however Precinct 2000 Precinct 216 only had 585",
        "registered voters",
        "and only 219 of those had cast ballots that day",
        "unfortunately for Gore reporters were watching overall numbers for the state and not individual County returns so they didn't notice the sudden drop all they saw was a gourd was falling behind the voter news service a Consortium of media Outlets reporting election results had projected Gore the Florida winner at 8 pm but when Gore lost 16 000 votes from his total in Volusia County and another Florida county posted results that were inadvertently missing four thousand votes for for Gore Bush shot into the lead and news outlets retracted their call for Gore and called the state for Bush instead luckily the electronic voting machines in Volusia County were Optical scan machines Optical scan machines use a paper ballot that voters fill out by hand and then put through a scanner to be tabulated because of that paper ballot they can be manually re retaliated by hand",
        "so this method that officials could actually get to the bottom of what happened and find the true results Gore's team requested a manual recounts in this County in Volusia County and three other counties but the Supreme Court halted them as you all remember but not before Volusia actually completed its recounts and the manual tally in the end showed the gore actually got 193 votes uh that says 192.",
        "uh Bush got 22 votes and Harris got zero after the election Volusia officials blamed the problem on a faulty memory card on Election night Precinct workers were supposed to transmit the votales Via a modem that was connected to the voting machines but that night in Precinct 216 the modem failed and so a worker drove in the memory card from the voting machine into the elections office where it was inserted into the election management system to tabulate the votes logs for the management management system however showed that two memory cards from Precinct 216 were uploaded that night an hour apart and the 16 000 votes for Gore disappeared after that second card was loaded into the machine the County's Optical scan machines were made by global election systems a Canadian firm later acquired by diebold and renamed diebold election systems so if Lucia County official worker sent an email to Diboll demanding an explanation about what went wrong and a Debold programmer replied that a corrupt memory card was the most likely explanation but since the memory card was now no longer was now nowhere to be found the only evidence of his existence was in that computer log from election night he couldn't say for sure but then he posited an alternative more ominous explanation he said quote there is always the possibility that the second memory card actually came from an unauthorized source suggesting that someone perhaps a rogue Insider had intentionally inserted a malicious card into the tabulation system to alter the election but had botched the operation to which a diebold colleague of his replied second shooter Theory all we need now is a grassy knoll",
        "though there was some validity to the corrupt memory card explanation Depot that experience problems with memory cards before no one seemed to wonder why a correct memory card would alter votes only in the presidential race while leaving other races untouched nor did anyone ask what this meant for memory cards and other precincts or counties or any others corrupted as well there was a curious lack of curiosity many months later when Congress passed went to pass the help America vote act they held hearings to determine if they should be giving States money to buy election machines and two respected computer science scientists testified against it one told the officials any programmer can write code that displays one thing on the screen record something else in the voting machine's computer log and print out something else as an entirely different result I have freshmen who can do this she said but the problem with voting machines wasn't just hackers or Rogue insiders or Rogue programmers if a corrupt memory card caused the problem in Volusia something similar could go wrong in other elections but the warnings went ignored and States went on a buying spree many of them purchasing paperless electronic moving machines before Hava just nine percent of precincts in the US were using paperless vending machines and after Hava that shot up to 67 percent",
        "um in the years that followed uh computer Security Experts showed time after time that the voting machines were insecure including here in Vegas at the Defcon voting machine hacking Village but vendors and election officials secure actively fought back against any criticisms of the machines they said the machines couldn't be hacked because they were never connected to the internet",
        "aside from the fact that we know air gap systems thanks to stuxnet can be hacked whether or not they're connected to the internet it turned out that some voting machines actually did connect to the internet when they transmitted election results on Election night I need to add a footnote to this because this story unfortunately was seized by the stop the steel movement to back their claims of election fraud in 2020. this was a story about systems made by election systems and software and the story is reporting that only some systems that have embedded modems were connecting to the internet to transmit the the votes on Election night because esns systems were not used in the counties and states that were being disputed by the stops the still people they appropriated this story anyway",
        "to imply that Dominion voting systems were connected to the internet so this is why I talk about the the sensitivities around continuing to report problems about this because that information will be misused",
        "for other systems of course that are not connected to the internet Rogue insiders of course are a Potential Threat um though election officials have always been offended at the suggestion that election staff might not be trustworthy the last two years of course have maybe changed their minds election officials have been indicted for giving off unauthorized persons access to voting machines and voting machine software and candidates in dozens of States as you can see here who are considered election deniers and doubters are currently voting for offices buying for offices that would give them authority over elections or access to voting machines and here's one in Arizona who recently got the Republican nomination",
        "so luckily due to the work of election Integrity activists and security researchers over the years States like California have since banned paperless voting machines or reduced their Reliance on them today jurisdictions in just Six States Indiana Louisiana Mississippi New Jersey Tennessee and Texas still use paper Electro paperless electronic machines as their principal voting equipment most other states use Optical scan machines with paper ballots that can be audited but even these systems have security and reliability issues and the paper ballot ballots mean nothing if no one ever looks at them few States conduct robust manual audits the kind designed to catch software errors or manipulated results some just run the ballots a second time through the same Optical scanner others that do manual ad audits typically only examine ballots",
        "from a random selection of one percent of precincts instead of a percentage of ballots across all precincts so if the selected precincts aren't ones where problems occurred the audit won't uncover them",
        "I want to be clear that having robust audits won't necessarily prevent what occurred after the 2020 election robust manual audits were conducted after the election in some states and the stopless steel proponents simply dismissed them but some initial supporters of the election fraud claims did say the audits convinced them the fraud claims weren't real and if audits can do this and also catch errors created by faulty voting software then election Integrity activists say this can only be good for democracy",
        "in the time I have left I want to shift Focus slightly to Ukraine and something that isn't about vulnerable critical infrastructure per se but has relevance to these systems and potential future threats against them poses potential future threats against them I'm referring to cyber norms and the hacktivism that has been Unleashed by the Russian invasion of Ukraine as well as some recent events in Iran uh justice Texan altered the cyber security landscape recent events in Ukraine and Iran have the potential to do the same with regard to cyber norms and the security of Civilian infrastructure before I proceed though I want to acknowledge that of course the situation in Ukraine is unprecedented and this isn't meant to criticize the country for doing what it thinks is necessary to defend itself but the security community and governments have to be aware of the potential path that this is leading us to in 2015 government experts from 20 Nations including the U.S the UK and Estonia we're tasked by the United Nations with developing cyber Norms that states should follow they agree that states should not intentionally damage another State's critical infrastructure or otherwise impair the operation of critical infrastructure that provides Public Services they also agree that states shouldn't allow their territory to be used for cyber attacks against other states and should take steps to mitigate malicious activity emanating from their territory when it's aimed at critical infrastructure of other states",
        "to recap what's been happening in Ukraine shortly after Russia invaded Ukraine in February Ukraine's vice prime minister Michael o'federov issued a call for volunteer activists to launch offensive cyber operations against Russia and provided a list of 31 government and Commercial sector websites to attack the aim was to erode the Russian public support for the invasion by making their lives so unpleasant and inconvenient they'd question the war and also to force Russia to focus on defending its own networks so that it might give less attention to attacking ukraines the results of course was the I.T Army a quasi civilian body that operates independent of the Ukrainian government but also seems to have some Nexus with Ukraine's military and intelligence apparatus according to Stefan sasanto of",
        "the center for security studies in Switzerland so Santa has tracked the it Army since its Inception and published a great paper in June that I'd highly recommend within days of federov's call of action the it Army launched DDOS attacks against the Moscow exchange Stock Exchange the foreign Ministry the Kremlin and a state-owned bank and the initial Target list of 31 has expanded to more than 600 targeting a network of pharmacies a large Electronics retailer and a Russian payment service provider after the company stated that U.S and ueu sanctions in Russia against Russia hadn't affected it they also hit the Russian government system for tracking the production and distribution of alcohol which appeared to affect shipments of liquor prior to a holiday in May and in addition there are many offshoot groups including members of anonymous who conduct operations under their own Banner not not strictly under the I.T Army Banner most of the attacks of course have been DDOS campaigns but massive hack and leak operations have also emerged two groups claimed responsibility for ciphing more than 200 gigabytes of emails from a Belarusian defense weapons manufacturer another group released industrial Blueprints and schematics said to be from an engineering firm an anonymous claimed responsibility for 800 gigabytes of leaked data from Russia's Federal censorship Bureau in addition there appears to be in-house teams conducting more sophisticated operations for the it Army that either consists of Ukrainian defense and intelligence Personnel or has direct ties to them and may also be getting tasking from them so Santo thinks this group is responsible for destructive attack that struck are you our our YouTube or YouTube a Russian competitor to you to YouTube which was dispensing in misinformation about the war the it army with help from two Specialists they said change the passwords of root tube's administrators blocked access cards that",
        "staff use to get into root tube server rooms and erased dozens of petabytes of data leaving uh route to offline for almost three days before it recovered with backups the third element to the it Army is the ukrainian-owned security firms in and outside of Ukraine providing support tools one company headquartered in Estonia is the maker of a tool called disbalancer that works as a distributed defense against DDOS attacks users download the client to their phone or their or their computer in order to lend computing power to handle the load of DDOS attacks against other members but in March the disbalancer team created a different tool called The Liberator that uses the same concept to actually conduct DDOS attacks against Russian sites and another company in Estonia launched a bug Bounty program seeking vulnerabilities in Russian critical infrastructure to pass to Ukrainian cyber forces to Target despite the fact that these two companies are both based in Estonia a member of NATO and the EU their activity doesn't seem to have sparked any criticism from other NATO and E2 EU member states obviously there are unique circumstances to consider Russia has been recognized by the United Nations as the clear aggressor in its invasion of Ukraine and the cyber attacks launched by the it Army and others is occurring during an active War the it Army also seems to be showing some restraints in not destroying or disrupting Russian Emergency Services but so Santo uh",
        "so Santo notes that this activity is in danger of setting unintended legal legal and ethical precedents that may create significant political blowback in the future what if a Russian this is a quote from him what if a russian-owned company located in Germany were to organize an offensive bug Bounty program that targets Ukrainian critical infrastructure and shares the discovered vulnerabilities with the Russian intelligence Community would Berlin Brussels and Washington deem this acceptable behavior by the private sector",
        "and as critics point out another problem is that it may be hard to rein in the it Army and members of anonymous after this one can easily see such forces being harnessed by other governments or for causes other than the context of War perhaps a diplomatic crisis or even just in response to a cultural insult as we saw in 2007 when Russian hacktivists launched targets against Ukraine for the relocation of a war memorial such a free-for-all if targeted against critical infrastructure has the potential to create chaos at the very least and potentially worse so Santo says continuing to ignore the essence of the it Army will wreak havoc on the future stability of cyberspace and with it the National Security landscape in Europe and Beyond",
        "Victor Jorah Deputy head of Deputy head of Ukraine State service a special Communications and information who spoke here at Black Cat yesterday morning told motherboard earlier this year in my opinion it would be wrong for the government to enforce to endorse this activity but as a citizen as a person who wishes our country to Prevail in this absolutely unprecedented unbelievable war in the 21st century I would be grateful for their help in well in weakening our enemy a couple of months ago the Ukrainian government did appear to endorse the activity when the it Army and Deputy Prime Minister federov were given awards at a security conference in Poland for their heroic resistance for their quote heroic resistance to Russian aggression and protection of the digital borders of the democratic world fedorov praised the I.T Army for quote waging the world's first cyber war with us end quote",
        "uh quickly just I wanted to mention Iran before I end recent events there",
        "attacks that have disabled more than four thousand gas pumps across the country and appeared to cause equipment malfunction at a fire uh and is still at a still plant it caused equipment malfunction and to fire at a still plant raised similar concerns about attacking",
        "critical infrastructure outside of War though it's unclear if these were launched by hacktivists or the Israeli government or Western governments intelligence agency they show that interest in critical infrastructure civilian infrastructure is very much on the agenda of tackers and will only become a greater Target going forward thank you very much for listening [Applause] [Music]",
        "[Applause] [Music]",
        "hey thank you everyone I just have two notes before we get going our next session start at 10 20. so you've got a little bit of time to get over to the next session you want to see and then tonight opposite this keynote we have our lock note and our lock note will be our review board some review board members who helped picked all the content for black cat myself sitting down exploring the content the",
        "trends the technologies that we found interesting and we kind of chill out we have a beer we have a conversation and the idea is that you have an opportunity to listen to us have a conversation about what we found interesting and then about halfway through you get to get involved and start asking questions and it's just a really nice way to wind down a hyper-connected conference so I'll see you to this evening at 4 20 p.m Mandalay GNH on this floor level two Mandalay GNH lock note at 4 20. thank you [Applause] [Music]",
        "thank you"
    ],
    "JG1umiZKYpQ": [
        "[Music]",
        "now it is my pleasure to welcome online",
        "Zen how Hong",
        "okay",
        "hello everyone thank you for coming today my name is I have been working on virtualization security Windows kernel and Hyper Security research for many years I was awarded the 2019-2020 msrc most valuable security",
        "researchers and I was also a blackhead USA 2021 speaker",
        "I also want to introduce my partner Jimmy John he has been working on virtualization and Kernel Security for many years he was the windows project winner in 2021 cancel car",
        "and he was awarded the Q2 and Q4 at Microsoft's most valuable security researchers in this section",
        "The Limited in terrible contribution refers to discover this new attack surface and we've been working on this protect service here I would like to express my thanks again to him",
        "this section is divided into six parts",
        "first of all let's introduce the happily direct as component architecture",
        "in 2020 everywhere introduced a new",
        "feature of GPU power virtualization which is based on GPU virtualization technology this technology is integrated into windows display driver model and all wddm drivers above version 2.5 support",
        "GPU virtualization natively however new",
        "features mean new attack services",
        "this picture is a wddm architecture diagram applications such as 3D games",
        "communicate with the DirectX graphic kernel subsystem by invoking the direct 3D runtime component in user mode the user mode display driver in the diagram is the private driver data of the GPU manufacturer",
        "which will be used in the GPU kernel model driver",
        "the diagram is the hypery DLS component architecture the right side of the diagram is the simplified wddm the left",
        "side represents the child partition where the gas virtual machine is located",
        "the DSG kernel Linux kernel module in the Linux virtual machine transmits data with the DirectX graphic kernel subsystem in the host machine through the VM bus component",
        "the data flow of the wddm is shown in the diagram the application is the starting point the application will invoke the apis is exported in the runtime component the runtime component may use the private data in the user mode driver and then it reaches to direct as graphic kernel subsystem and the direct S graphic MMS and finally the data will",
        "reach the GPU driver",
        "the data flow of hypery components also starts from the application",
        "the application sends data to the Linux kernel module DSG kernel through a set of ioctrs exposed from the dev dx3",
        "device file the linear is current the Linux density kernel driver module communicates with the DirectX graphic kernel subsystem in",
        "the host machine through the VM bus component and the subsequent process is the same as wddm",
        "so how to enable data as component in helper rear virtual machine configuration",
        "you can use the VM GPU partition adapter",
        "Powershell command to add a virtual GPU to a specific virtual machine and then use the get VR GPU partition adapter command if you check the virtual GPU information",
        "after we complete the virtual machine configuration we can determine whether this component is enabled by checking the chronolog in the Linux virtual machine for example my Linux VM kernel version is 4.15 in",
        "the chronolog there are two and new Geo ideas there are virtual GPU DSG cage handle jio ID and the global dsgk Channel guid",
        "if the virtual machine is a Linux 3M only the wsl2 Linux kernel source code 3 can natively support DirectX device",
        "virtual device but the good news is the SG kernel driver for Linux is easier to compare on the customization",
        "the Linux driver for direct s exposes the DSG device file to user mode Linux the DSG device file is posted a set of ioctl that closely mimic the native wddm",
        "kernels device layer on Windows",
        "now let's introduce the attack surface of hyper redirects component",
        "first of all let's introduce how the DirectX component is initialized in the Linux virtual machine the DSG vnp Channel init function invokes the VM bus open function",
        "to initialize a DSG cage Channel there",
        "are two functions here we will that will invoke the DSG VM bus Channel init function there are DSG global initi",
        "global Channel and the DSG adapters set members these two functions initialize a",
        "global dsgk Channel and the virtual GPU dsgk Channel respectively",
        "the DSG kernel Linux kernel module uses",
        "GSG vmb send sync message and the DSG",
        "will be sent a sync message to send DSG kernel commands to the host machine and the DSG VM bus Channel receive function is used to receive messages and commands from the host machine",
        "by reading the wsl2 Linux kernel source",
        "code you can see that there are mining commands available here",
        "a command message memory layout is as follows or command messages consist of a",
        "header of sets 0x18 and the message body",
        "the header consists of four members the Channel tape determines whether it is a virtual GPU Channel or Global Channel",
        "and the command tab determines which",
        "command to sign",
        "for example DSG ranb send the log 2 function says dsgk when we command log 2 command to The Host in the command V GPU to host in nick2 function you can see the dsgk vmb command log 2 command is a virtual GPU Channel command",
        "and the dsgk when we command log to structure defines the format of the dsgk",
        "vmb command log to command message",
        "about data receiving in-house if gesture",
        "says psgk won't be command data host the",
        "rambus component will invoke DSG holds",
        "the virtual GPU when bus when bus",
        "Channel process packet or the DSG hosts",
        "Global VM bus VM bus Channel process private function according to the specific Channel and then reimburse process package function determines whether to find the Handler function corresponding to command tab in the DSG host Global VM",
        "bus VM bus command table VM to host the table or the DSG host virtual GPU VM bus when bus command table will GPU to host the table according to the channel tab finally enter the specific Handler",
        "function and continue the flow",
        "the cost to VM bus combined function is used to retrieve data from guests for example the value of the word at either offset 0x90 in the picture we process",
        "the list of the guest data and the keyword at A1 Option 0x88 will",
        "process the pointer of the dsgk command message data",
        "the VM bus complete function is used to send data to guests the second parameter",
        "of this function is did buffer the third parameter is the date buffer loans in this picture we emboss complete package",
        "will send in this stage value to the gas",
        "regarding the attack surface the attack surface is located in the three driver phase the S3 kernel the SG ms1 mms1 and",
        "the DSG I'm almost to",
        "there are a total of 87 handle functions corresponding to commands and each command also has a corresponding message structure it is a huge attack surface",
        "now I will further explain the attack surface about of the above mentioned hyper redirect as component using the",
        "four vulnerabilities of the hyper redirects components as examples",
        "the first one is the cve 2022",
        "21918 it is a non-pointer reference",
        "vulnerability the problem is with the vulnerability occurs in the dsgk when we command signal sync object command",
        "the root cause of this vulnerability is that's the fifth parameter of the width Shi signal sync object from CPU function",
        "references or non-pointer this picture",
        "is the stock battery is one is volume ability is triggered",
        "the read I say child signal sync objects from CPU function is shown in the picture the fifth parameter assigns the value to V12 and then the V12 the reference calls non-pointer reference",
        "a fifth parameter of the V8 with Shi",
        "signal sync objects from CPU function is assigned by the force parameter of the width sh signal sync objects from CPU",
        "function",
        "the read message single sync objects from CPU function will be invoked by the signal synchronization object from CPU",
        "function the fourth parameter of the read SCH single sync objects from CPU function is the value of preface values number of V5",
        "in the signal synchronization of object from CPU function V5 is assigned by A1 A1 points to a c3d",
        "kmt signal synchronization object from",
        "CPU structure the memory layout of this structure is shown in the picture",
        "in the DSG it holds the virtual GPU rear bus when bus signal sync object function the preface values number in the first parameter of the signal synchronization object from CPU function is assigned to the value v24 as you can see v24 will be 0 if B22 is less than 3 17.",
        "now we need to understand the memory layout of the dsgk ramb command signal",
        "sync object command message as shown in the picture there are two members in the guest data members single sync object structure the command member is a header of Sex 0x18 and the sync object member is the message body of the dsgk vmb command",
        "signal sync object structure tab",
        "in this diagram uh object handle array context array and the monitor defense value are variable learns a risk whose thus and offset are controlled by object count and context card",
        "so if we tell object count is one context count is zero and the V16 buffers is",
        "0x3c the v17 those of the monitor the",
        "first value array will be 8. creating offset of monitor the first value array will be 0x C 3C",
        "either line one five one in the picture v22 is equal to 316 Subtract with 18. so",
        "we 22 is equal to 0 and the v17 is equal",
        "to 8 which means the condition that",
        "we 22 is less than 3 17. so v24 will be",
        "ascended zero it will cause a number reference in the following process",
        "the POC code is divided into two parts the first part is used to create a sync handle and the second part is to use the to send the dsgk VMP command signal sync",
        "object command settings the numbers in the signal single sync object structure",
        "as shown in the picture will trigger this rolling ability",
        "the next one is series 2021 43219 it's also a non-pointer reference",
        "vulnerability the problem with this vulnerability occurs in the dsgk vmb command submit",
        "command command this picture is the stock factories where this vulnerability is triggered",
        "in the dsgk submit command internal",
        "function the second parameter of the DSG",
        "contest handle Western BLTs 2B function",
        "is we 37 history token",
        "and the value of v37 History token can",
        "be controlled by the guest machine",
        "in the DSG context Handle With The BLT SUV function if A2 percent history token",
        "is less than zero the code flow will enter this branch and invoke series 2K logs log function the first parameter of the cb3 2K logs log function is a series 2K logs structure pointer",
        "Oneness vulnerability is triggered some",
        "members of the cb32k log structure are illegal now finally cause the psud",
        "the picture shows the POC code the first part is the grid contest handle the second part says to submit the command message settings the numbers in the submit CMD",
        "structure as shown in a picture will trigger this vulnerability in the POC code the present history token is less than zero the following is the debugging process first to set a breakpoint at the dsgk submit command internal offset 0x a a69",
        "h90",
        "Monte budget excluses the breakpoint check the second parameter percent history token it is less than zero value single step tracing into cv32k log stock",
        "is invoked and display the memory pointed to by the first parameter you can see that many members in the cbc2k logs structure are not initialized so this and initialize the values are referenced in the series 2K logs log function and the cost of crash",
        "the next one is the cve 2022 21912",
        "it is the arbitrary address read vulnerability the problem with this worrying ability occurs in the DSG vmb command with four",
        "sync object from GPU command this picture is the stock factories",
        "the memory layout of the dsgk ramb",
        "command with four sync object from GPU command message is shown in the diagram [Music]",
        "in the DSG host virtual GPU rambus we unbox with four sync object from GPU function if like scene first object is 1",
        "sync GPU first value will be assigned to DST pfans value",
        "and we 23 will be assigned to zero",
        "the fourth parameter of the dsgk made for synchronization object from GPU internal function is zero now at the red mark the Cosby file is equal to zero Source defense value will be ascended to V5 and the source PPS value",
        "can be controlled by gas to machine in the following code flow V5 will be used as the third parameter of the wait for synchronization object from GPU function in the wait for synchronization object from GPU function return is equal to A3",
        "at the red mark we can actually reference the directory and the cost arbitrary address rate",
        "the POC code is divided into three parts the first part is to create a context handle the second part is to create a sync handle the third part says the with fault sync object from GPU command message such is the members I show in the picture to trigger this vulnerability and the read data from address 0x41414",
        "the following is the debugging process let's set up report and read for synchronization objects from GPU offset",
        "0x1945 one dimashi excuses the Greek",
        "Point check the eyes are register and the value of isi is 414141 we can control this register from a guest machine the last one vulnerability is the cve 2022",
        "1898 it is arbitrary address right",
        "vulnerability the problem with this vulnerability occurs in the dsgk VMP command Summit will present history token command this picture is the stock factories",
        "the memory layout of the dsgk ramb command submit will present history token command message showing in the diagram in the DSG host the virtual GPU VM bus when bus submit will present history token function percent unknown 4 is used",
        "as the service parameter of the DSG adapter submit percent history token from VM function",
        "in the DSG adapter submit present",
        "history token from VM function itself is",
        "related to the address of read 29 offset",
        "0x300",
        "and then read Shi sh submit command",
        "contest to this function will be invoked v29 is the first parameter of this function",
        "as shown in a picture the second parameter of the read SC time redirected flat with all sync object function is the first parameter of the bead SCH submit contest command command context",
        "disfunction",
        "in this picture the second parameter of bid SC chart acquire private data reference function is the first parameter of read SC check",
        "redirected with our sync object function at 0x238",
        "indeed I say child acquire private reference function when we two is zero",
        "the keyword value at the address of A2 of Z 0 xc8 will be written to V4",
        "the value of V2 is V6 in the I'm sorry",
        "the value of H2O is V6 in the read I say",
        "chart redirected flat with our sync object function at 0x238",
        "0x238 at 0x C8 is equal to zero X300 so",
        "the keyword value at address of A2 offset 0x C8 is the A7 and no4 in the",
        "DSG adapter submit percent history token",
        "from VM function the following is the code flow adding one should address of a V4 of set 0xc cause arbitrary address right since V4 is equal to unknown 4.",
        "the first part of POC code is a Creator sync handle the second part says the dsgk vnb command submit will present history token command message setting the members as shown in the picture will trigger this vulnerability",
        "the following is the debugging process as shown in the picture when this vulnerability is triggered it will finally cause arbitrary address right",
        "let's talk about fast why fast is necessary",
        "first hyper redirect as components has a large quantity of codes second there are 87 commands under their corresponding structures reality members in a specific structure can be very effective",
        "and many commands depend on contexts such as some commands depend on Direct handle allocation handle meanwhile the",
        "properties of the handle such as the properties of the allocation handle will also affect the commands that refer to it below in this case it is more efficient to use fast and about vulnerabilities were all discovered by fast",
        "a simple bus a texture as shown in the picture the password is deployed in the guest machine the major function of the driver part of the faster is the agent layer which is used to send the DSG kernel command data obtained from the user model program to the host direct s component and the received data from hosted direct s component and the return data to user mode program the major functions of the New Zealand part of the faster are some mutated DSG kernel command data and the received data returned from the kernel module such as the return data of create allocation command",
        "the user then faster contains two core modules the data center and the received module is used to communicate with the driver and hardness mode module is used to hardness generate",
        "for example by mutating the members of the dsgk VMV command signal sync object structure in the dsgk vmb command signal sync object command message the above mentioned non-pointer reference variability was discovered",
        "now let's conclusion",
        "there are some of my opinions are hyper rated as a attack surface",
        "security research this attack surface is",
        "still worth researching because the hyper redirects components has a large",
        "attack surface under still being update so far about application scenarios happy",
        "returns component application scenarios",
        "include wtag Windows sandbox and",
        "homeowners to emulate since virtual",
        "machines connectively support DirectX online 3D gaming may become possible in the future I guess about body unfortunately",
        "but also thanks have msrc for the patient communication",
        "those three takeaways included in my presentation are explosed first I introduced the hyper redirects component architecture overview and how to enable",
        "hyper radio as component in Happily virtual machine configuration so",
        "introduce the attack surface of hyper redirectx component and how to find the vulnerabilities in this attack surface through fasting third",
        "this close the internal details of the",
        "four hypery DLS components vulnerabilities providing reference for",
        "vending vulnerabilities in this new attack surface",
        "thank you for listening",
        "[Music]",
        "[Music]"
    ],
    "g7Q1pzMKCH0": [
        "[Music]",
        "foreign",
        "to the stage young Huli and Joshua sacks",
        "[Applause]",
        "okay um so let me fix this really quickly so we're gonna be talking about a lot of technical ideas today but uh perhaps the greatest feat of engineering has happened in this talk is the team that just got our slides up on the up on the screen so apologies for the delay and uh happy to be here hopefully that hopefully we won't have any more technical difficulties um okay so our our talk today is entitled gpt3 and me how super super computer scale neural network models apply to defensive cyber security problems I'm Josh sacks I'm Chief scientist at Sophos I'm here with Yahoo Lee a principal research scientist at sofos",
        "um just so I get a sense of the audience here um how many of you have heard of gpt3 or know what it know what it is okay so I think almost almost everybody raised their hands but oh I'm gonna I'm gonna assume um not too much knowledge of the machine learning domain and gpt3 um that quickly get quickly we'll get into um sort of the nuts and bolts of the work that we did here and why we think it's significant",
        "um okay so this is us I'm gonna go Fairly rapidly here since we lost a few minutes at the beginning of this talk um I want to I want to just present the Theses of this talk up front um and then we'll get into sort of arguing for them um so one",
        "um there's there's something new going on in machine learning in the last four or five years um and it really involves two components uh first uh we're seeing the emergence of these very large scale models and these models have fundamentally new capabilities and they've been much discussed in the in the domain of like natural language processing image Generation Um we think that these new capabilities are really important for cyber security as well um uh another new trend in machine learning is this idea of self-supervised learning which allows machine learning models especially large machine learning models to take advantage of unlabeled web scale data I'll be talking about why I think that's important as well as well um third and this is really the punchline of our talk um machine learning has changed and we want to provoke interests and folks coming together and looking at the way in which these changes namely Large Scale Models trained in the self-supervised fashion can impact cyber security in a positive way particularly defensive cyber security this talks really early work in this space we think we've developed some proof of Concepts which are really interesting with respect to improving cyber security defense but what we're really hoping for is other researchers in the community to do their own research in this area and we're also hoping to get feedback from practitioners around how how the large models we're going to be talking about in the presentation today could be efficacious relative to defensive cyber security problems okay and also in the spirit of presenting results up front uh we're going to present two proof of concept experiments that we did this is almost all young who's work uh first we're",
        "going to show that we can use gpt3 this large super super computer scale uh neural network model uh to solve the following problem um so in this example um we have a command line which is suspicious and hard to parse uh has sort of high cognitive load to make sense of even if you're used to scripting and um in in on the Windows command shell um and then on the right we have gpt3's translation using a method that Yahoo and I developed of that sort of Arcane set of syntax into a natural a a human a lucid human readable natural language string so you know you can just sort of run the run the mental experiment yourself like try to make sense of what's going on in this command line this is the kind of command line that analysts that sofos and many other places spend a lot of their day looking through to detect evidence of compromise um clearly it's a significant cognitive load to sort of make sense of what's going on here and then the description um is much easier to to grok the description is the command will create a file called execute.bat in the temp folder it will then run the command um user's admin OneDrive administrators Inc and output the results to the underscore output file in the local machine the batch file will then execute itself and delete itself afterwards so this is one example of what we're going to show around what gpt3 can do and how it can help in a stock context the second result we're going to show in young who's you know who's going to go into depth around this experiment is that large models like jpt3",
        "can learn to detect attacks and",
        "malicious observables and spam with a tiny volume of training data so Yahoo is going to talk more about this later but what this result um means here is that when we train um an email detection model to distinguish between bad email and good email we can we can um and using older machine learning models like non non-gpt like not gpt3 and much smaller scale models um we basically can't train a model with that scale of training data I think that's a ridiculously small training set but with gpt3 we can achieve like a Deployable accuracy and that's significant because there are many contexts and Security in which we just have a few examples of a bad thing that we're looking for and we'd like to be able to show an AI system those examples so we could find similar bad examples and what we found is the gpt3 is really good at this problem",
        "okay um so those are like the main arguments and Main results that we're going to present today the rest of the talk is going to be a deep dive instruments that uh that we've done in sofos around applying those large models to cyber security problems",
        "okay so first some just like General backgrounds around the trends that I'm referring to in machine learning deep learning models are just getting bigger um here's here's a really useful platform from towards data science.com uh showing the the the the growth in the",
        "size of models proposed in academic machine learning papers since really the birth of machine learning in the post-war period in like the 1950s um so on the on the vertical axis here you have parameter account which is a measure of the size of the machine learning model and on the horizontal axis you have publication dates of machine learning research papers and this is a log scale so you're looking at orders of magnitude here but so if you go back to the 1950s you know you had um like neural network early neural network models with like thousands of um of parameters a parameter here is like an interconnection between two artificial neurons um uh going forward you have this like log linear relationship between parameter counts and and time so so to all of a sudden just exploding in size um so what happens what happened is that researchers um have become aware where over the last five years or so that merely scaling up a neural network without changing anything else about it say increasing the width of your neural network layers or increasing depth but not adding any new cleverness just merely increasing the scale yields better results for some reason and I'm going to Deep dive into that and just show you guys a bunch of evidence to convince you that that's really true but that's sort of what's happening there neural network models are just getting bigger",
        "um and another thing is happening too which is that neural network models are getting trained in a new way so kind of classically in the Deep learning space the way we train neural network models was if we wanted a neural network model to distinguish between malware and benign wear we gave it a bunch of labeled examples of malware and benign wear um the problem with that is that there's lots of software um that's in the gray area we're not sure if it's malware of a nightwear like in our databases at sofas we have on the order of billions of files in our database and many of those files we're not sure if they're good or bad and the question is how do we train on that data and more broadly there's just a ton of data out there right I mean this is a plot showing the growth in sort of machine data over the last uh 10 years",
        "and protecting into the future and there's just more and more data available um I mean you can go you know if you ran a web crawler today versus 20 years ago right you get much more data also also all sorts of digital instruments or generating data Factory user cars and this kind of thing and how do we train on that data when we don't have annotations attached to it and what the research Community has found is that there's a methods is there's a category of algorithms called self-supervised algorithms that allow us to train on data that's not annotated and improve our machine learning models and the basic workflow here is that we use these self-supervised training algorithms they'll Define what they are in a minute but um we usually self-supervised training algorithms to train neural network models on unannotated unlabeled data and then we use our label data to fine-tune those neural networks to solve a specific problem like detecting malware or detecting cats versus dogs or pick your classic machine learning problem now how does cell supervising learn like how does self-supervised learning work um I'm going to give a few examples to give you guys um some intuition about that um so imagine you have like a huge data set of images that you scrapes from the web uh you don't know what's in the images you don't know what they're pictures of but you'd like your neural network model to get better thanks to those images um what you do if you're using self-supervised learning is you you create uh",
        "a series of puzzles for your neural network to solve that are just derived from the data so for example a common technique goes something like this take an image remove a patch of pixels from it and and then ask your neural network to predict what pixels go in that patch and do that for lots of different images this is my two-year-old since I've been removing this patch here and then asking it to predict the pixels there um here's some horses near where I live in Kansas uh you know remove this patch here and then we're asking the internet to predict this past year and you can do this billions upon billion that is a neural network is forced to learn about the visual worlds right because in order to predict the pixels that go in here it needs to learn what a horse looks like and needs to learn that um there's a horse here and that you know a horse's back um is you know uh has a very particular shape and that those pixels should be filled in in an intuitive way right it needs to learn about Landscapes and about background and foreground and about depth in order to solve that pixel prediction problem you have to learn an enormous amount of semantics uh about uh about the visual worlds in the following way um we um openai the organization that's built gpt3 um gives gives this model gives the gpt3",
        "model like web scale um a web scale volume of text uh and gpt3 is just trained to predict the next few characters of a document um so you might give it a sentence how to self-supervised learning and that's asking to predict the next um the next few characters the next word and that's the prediction Target now again you don't need labeled data to do this you can just scrape lots of data right hopefully get it from a source that you trust that has good information and and then just train gpt3 to protect the next few characters and you can see this is similar to the image problem in that in order to protect predict the next few characters uh a model needs to have really deep intelligence about the language domain right if I say 55 plus 32 the neural network needs to be able to add right in order to to predict the next few characters I mean what we find is actually is that gbt3 does learn to do Urban arithmetic just just based on this training task of predicting the next few characters",
        "um now here's a final example of a self-supervised learning task so there's lots of images on the web that have alt text attached to them in HTML so here's an example where you know imagining some alt text like horses grazing if you call it Kansas Fields the trees and the foreground above them a fence separates the viewer from the horses and the grass and trees stretch into the distance the prediction Target here would be just the pixels in the whole image so hopefully hopefully the intuition is is clear around why self-supervised learning is a good idea uh it allows us to take advantage of these web scale data sets even when they don't have labels attached to them and and the result of training large neural network models in this way is that they learn um a model of language or of images or a video or audio whatever the domain is in which you're training them now here's a real example from a neural network from a research team at Google",
        "um and understanding quick time checks to make sure we have um enough time here um and this team uh trained a model on like web scale data to solve the problem they just defined uh predict the pixels in the image based on a caption um so here they actually made up a caption uh that didn't exist in their training sets and they tested to see whether or not the model could generate an image um based on the caption so so the sentence is a portrait photo of a kangaroo wearing an orange hoodie and blue sunglasses standing on on the grass in front of the Sydney Opera House holding a sign on its chest that says welcome friends so this is like this is such a wild caption that is highly unlikely this image actually exists in the wild and in fact you know this is the creation of some researchers at Google um now when they ask their models to generate the resulting image this is what they got um with a very large model that had 350 million parameters so 350 million",
        "um uh like floating Point values that Define the interconnections between the artificial neurons and neural networks and this is like already an impressive result right and there's this animal that's vaguely kangaroo-ish there's something that sort of vaguely sit in the opera house like there's this is a sort of fabric that approximates a hoodie um you know you're not really getting the characters but you do get a sign with some gestures and letters here um so it's already quite incredible that an AI model can generate this image um but I want to demonstrate what happens when you scale these neural network models up without changing anything else when you just make them bigger with no new clever Matthew ideas uh what happens when you scale the model up to three billion parameters is you get a kangaroo now and you get something that's much closer to a hoodie and you even get the neural network learning a little bit about how to write letters in the visual domain um so it's not quite getting welcome friends and it's adding some weird sign down here but it's getting closer um then we get when you get up to 20 billion parameters uh the model is able to actually understand the relationship between text and and imagery um so it's learned to write in this case right um even though the the researchers didn't explicitly train it to learn to inscribe um natural language text into the image so I know what a hoodie looks like it's got the blue sunglasses that's in the opera house um Yahoo who's from Australia can tell me if this is exactly correct but um at least it's closed and it's recognizable um so there's this magic thing that happens when you combine self-supervised training with very very large scale models to be clear a 20 billion parameter model would need to run in like a room scale supercomputer with like a ton of gpus and take a ton of energy um so you know it's not easy to create such models um but it's pretty magical what happens when you get into this sort of large model self-supervised uh learning regime um there's lots of examples of this that you can find if you look up the Google party paper which is where these images are from you can see lots of examples from their work uh but here's an example of uh the results from the models of these different scales uh when it when prompted a map of the United States made out of sushi it is on a table next to a glass of red wine um you can see you know doesn't get it with a small model with a large model it really does",
        "um and again uh just just look up Google and party if you want more example examples of this of this model um now let's get down to gpt3 which is the model that we're using um uh to do the research that we're going to present today uh so gpt3 was trained on text to protect the next few characters in a document but what it's learned to do is um for example uh create valid python code so so here I prompted um gpt3 uh with the prompts uh compute mean the standard deviation and then I give it a doc string compute meanest standard deviation of the input data and pure Python and render the results in flashy HTML on a page titled don't trust summary statistics um then if you just ask it to autocomplete it actually generates valid code that does both those things and composes those Concepts together um so this is you can see how this is analogous to the to the image example uh so so here we ask them to do two things compute some summary statistics from sort of stats 101 and then render that stuff in HTML and it sort of knows about summary statistics and knows about HTML and also knows how to sort of knit those Concepts together into a valid python function that actually actually works",
        "um it's a bit to be clear like our our role here is we are using open ai's models through their API um that we that they gave us access to as researchers um and we're building on top of gpt3 and you'll see how we've we've done that for security use cases um in youngview's portion of the of the talk",
        "um now so this magic thing that happens when we scale neural networks up um and train them in the self-supervised fashion is that there's like this really clean relationship between model scale",
        "and reduction and model error so what you're seeing here I mean I can go into the details but basically the punch line is um a team at openai published this classic paper where they showed that as they scale up the size of a model in terms of like orders of magnitude of interconnections between between artificial neurons there's this smooth decline in the error rate of those models which is really remarkable it's like I would say it's a key result in machine learning that's come out of the last um like five years of machine learning research",
        "now why does this matter for security um the size of today's security data science models um Falls in this kind of size range um so Ed so our day job at sofos is is to operate about 40 machine learning product Integrations within sofos's like firewall products uh endpoint security product mobile security email security we do a lot of machine learning at sofos and we're using machine learning in almost all of our um detection pipelines within our company's products um but the models that we've deployed all fall on this kind of size band um uh in the distribution of model sizes we haven't yet and I know my colleagues at other companies as far as I know anyways haven't yet explored what happens when we scale security models so not not natural language not um not computer vision but but models that like detect bad stuff that help stock analysts when we we have an experiment with it yet with scaling security models up to this kind of size range that we're seeing um in the broader machine Learning Community now the presentation we're making today is the result of our early experiments and uh and applying these",
        "very large models of security problems we think it's really important that researchers in our community and like the security data science world go in this direction and you know so again like we're hoping that other folks follow up and do even more impressive stuff with um large-scale models",
        "uh so I so before I'm about to hand it off to Yahoo but before I before I do that I just want to give a little bit more intuition as to why these large models May matter for security so one of the models that we use at sofos is a model that looks at a domain and decides what content category it falls in like we have like K-12 School customers that you know don't want kids looking at certain categories of content and this kind of thing and so this is one of the things that we do on our team um we train our domain content classification model um like tens of millions of examples um and we need to it's a small model and it needs to be trained on a lot of data um we did we did a quick experiment with gpt3 to see how well it could categorize domains into content categories using just five Training examples and it did a really good job I mean sort of definitely blew me away when I saw this result um so here I just I just showed gpt3 a prompt I I show it berkeley.edu maps to education Amazon maps of shopping um Etc and then I showed a new domain that it hasn't seen before shootingrange.com and it just knows to autocomplete that as weapons um in a malware detection context um if we're trying to detect uh say uh like phishing domains um you know we can give it like four examples of like definitely a fishing domain here I mean I just made this up that you know it looks like a phishing domain PayPal customer support dot blah blah blah.ac.uk some good domains another bad one and then and then it it Nails it when I give it a new phishing domain um so again an example of like the phenomenon where gpd3 because it's been trained on um like the entire web of data it's learned some syntax and semantics around language and it's able to see that oh um what's going on here is categorizing sites into good and bad and it's it's sort of queuing off of all of the knowledge that learned in that self-supervised training context um and very quickly learning to do what we're asking you to do in this context and this is significant because like you know in the future as people start to use these large models in like a sock context if you're seeing a certain type of thing and you want to go find that thing in all your data you can imagine writing a little prompt like this um and then pointing gpt3 add a bunch of data and having it find examples that you're looking for in a much more intelligent way than today's machine learning models that are a smaller scale",
        "um we're gonna be talking about two different ways of using gpt3 today one is prompting which I just showed where we just showed a prompt asking to autocomplete and get an answer out of g53 the other involves um back propagation and stochastic gradient descent for data scientists in the room this is just the standard way that you optimize neural networks um and uh that's called fine tuning and what we do in fine tuning is we we adjust the the the interconnection",
        "values between the neurons just a little bit more Beyond uh what they were when we finished self-supervised training my model like gpt3 in order to solve a problem like spam detection or malicious URL detection",
        "um okay so this is the last slide in my my section here um hopefully I've wet your appetite into thinking about how these large models May apply in security um I think you can probably think about some offensive applications of these these these models we're mostly we're thinking in this talk about defensive applications we've we've tried a bunch of things um young who's done a bunch of work in building a natural language user interface where we the user types in um like show me all uh network connections that are open um from Windows machines outgoing to to China and that gets translated into a database query um uh we think this is useful for detection um what you'll see the results that we have around using this reverse engineering but we think there's lots of other applications as as well um okay and with that I will pass it off to Yahoo um",
        "thank you Joshua was very impressive to me who just came from Australia yeah it is great to see those Australia animal oriented building here again in the second part of our talk I will be talking about how we can create two cyber security applications using a large-scale language model we will be using uh open AI tpt3 as our large language",
        "model so to model it is so large you can directly use it unless you have a super computer fortunately we can access the model now through the open AI API so our first application is a spam detector",
        "when you start a new ml product probably you will be starting with few examples",
        "and also we just collect a few new spam",
        "messages but we are going to detect those similar ones when we train a small",
        "traditional models you will be required",
        "to collect a large set of training data to train a new classification problem it is something like when you train a small puppy probably you need to show him many examples however a",
        "smart talk with a lot of experience we quickly learn with few examples and our smart gp3 can do the same job",
        "so this is our performance of spam",
        "detection gpt3 with only one hem and one span achieved in press result of detection of rate of 90 with 8 samples",
        "even better we got 95 acreage on the",
        "other hand traditional random forest model only got about 55 which is slightly better than random guessing we will talk about how we can achieve this impressive result",
        "and these are our various data and the model settings so teaching tpt3 to solve a prediction problem can be as simple as designing a prompt so tp3 can auto complete the demanding part for example converting movie titles into Emoji icons is quite simple so we just provide three examples here back to the future with relevant icons and the betterment and Transformers and then we ask about our questions Star Wars and then we get impressed result the level icon this is",
        "how we can provide the data to the model to auto complete the remaining part so now design let's design our prompt for our problem so we start with a simple instruction which is classified message as spam or",
        "hand and then we provide some examples so we select one span and another one from hem and then we add our question sample free top ringtone so with this",
        "input GPS can generate the span as output so gp3 is a pre-trained language model it has been pre-trained to predict the next World so GPS you can generate the most likely the same as output",
        "so let me show you some other examples so from the previous examples so now we can test use them first for example uh or that your mobile number has been awarded this one is definitely spam and it's correctly identify the scan and another one I'm yes I'm in office it's a detected same hem correctly so actually",
        "this is a screenshot from the open AI playground website where we can test our input and output with some settings here one important setting is the model with",
        "set as a text this is the last gptc model for text generation version so our application the first application so gp3 with Fusion learning is a powerful tool to generate a classification problem",
        "so the second application is generating human DW explanation of malicious",
        "Commander lines",
        "the soc analyst analyzed thousands of malicious command",
        "every day and it is really hard and time consuming itself and as you can see this is one of the malicious command so it is really long and it's hard to pass so our question is can large language models can make this job easier by describing this command in simple language so yes it is possible so from the command we can generate human readable description this is actually the description we generate from the model so the description set the command will create a file called",
        "exp.v85 and it will execute and delete afterward so it is a one of the malicious behaviors uh so what we can actually recognize from the description so let me show you how we can achieve this one actually g53 reports two type of",
        "different models from open AI the first one is a text generating version so we just use the text generated version for our spam data and the second version is a whole generation version called the Codex so the Codex models has been pre-trained with uh many open source projects from the GitHub so it can write code in many different languages including JavaScript Python and JavaScript as well so this is our choice for our Second Use case",
        "so let's design our prompt so we have",
        "two sections the first one we provide the command and the second section is full description so this will guide the gpt3 to Auto completely to The Domain in part so let's say we get the result so now we have a uh the description from the command so the command will copy the binary into the temp folder so it generates a valid description from the command however the command is a malicious because it copies the value from the system folder to a temp report as a DOT exe so it is a malicious activity however our description did not point out the malicious part so we need to improve the quality",
        "and our approach is we needed to provide some additional context information usually the space command can be detected by signature based rules so we can use Yara rules or Sigma rules so this case the previous command actually detected by one of Sigma rules and the signals was a Windows service copy",
        "system 32 so we can use some additional information from the signatures so this",
        "is our second version of prompt so we use the same command but we add additional tag section because one",
        "comment can be detected by multiple signatures so we we can add all the signatures in a text section so now we",
        "can open the description as you can see now the description says the command will copy the binary to a tempo for this adult so where the attackers can use the binary to perform malicious activity so now it described the command correctly and also mentioned about the malicious behavior as well so now we have the better description however we wanted to improve further from here so what we can do is actually uh if we look at the the settings we set the model as the code is this is the one of the Codex model and then also we can change the temperature from 7.7 to 0.8 well we can also change the top probability so with this settings from the same input we can generate the multiple descriptions and then we can select the best one so our operator selected the best description is back translation",
        "so in natural language translation tasks for example translation from English to",
        "French it is not easy to evaluate the output on friends but if we translate the French to English now it's clear we can compare the original English to Black translate Frozen so we can apply",
        "the same mechanism for our second case so the command is one language and description is another thing is this so we can actually generate the command from the description so now we have the command and the back translated command so so we can easily compare the similarity between the original one and back translated version so let's have a look at the um yeah these are our the overall steps so in step one we will generate multiple descriptions from the command and tags",
        "in a second step we can generate the command from the previous generated ones in the last step we can rank the descriptions by similarly squads between the original command and the back translated ones",
        "so this is our new prompt for the second step back translating the translation step so we provided the same the tag and the description and then we ask model to complete the domain in command so this way we can degenerate the previous command so if the command is describing the original command correctly we will be able to deconstruct the command so let me show you two examples of descriptions we generated these two description from the previous command so the first one actually I did not correctly mentioned the final name but it just mentioned temp so it failed to really construct the previous command however the second description correctly",
        "uh construct the previous one because it has the correct file name so I'll pick",
        "translation method can be used to improve the description further",
        "so this is another example so the",
        "command is um maybe if you are not familiar with this one's uh not easy to understand however our description said the command will sort the files on the test Club folder and the server force and then we'll find out the file containing the password actually it is finding your password from the desktop",
        "so our source code is available in our GitHub repositories and it includes our two applications the spam detect and the",
        "command analysis analyze",
        "so in summary gpt3 with future learning is so flexible and Powerful you can easily create powerful applications",
        "the title of Auto is a gptc and b so it",
        "was our successful story and it's not it's a time for you to create your application that will be your tpt3 and",
        "you thanks for listening it's a time for training",
        "thank you [Music]",
        "foreign",
        "[Music]"
    ],
    "RiCexpd6HjA": [
        "[Music]",
        "thank you for the introduction so welcome to my presentation go with the flow my name is Claudia Canela I'm currently a PhD candidate at guards University of Technology in Austria if you want to reach out after the talk please do so via Twitter or by email so before I want to talk about what I'm actually going to present I want to present a little bit of motivation and one thing is that we do see quite a lot of attacks over the years so here we have the number of cves that is being that has been being issued over the years and as you can see here in this year we're already on our way on the way to surpass the values and that we've encountered in the previous years so we do need to find a way how we can mitigate against potential attacks",
        "typically we have two different ways that we can do this so the first thing is obviously when we do have vulnerabilities we do want to eliminate bugs obviously this is also quite difficult we haven't been able to do this in like forever the second thing that we can do is that we can limit the post exploitation impact of these vulnerabilities once somebody for instance an attacker has gained control of the application so instead of being able to do whatever they want they are severely limited in what they can achieve in this talk I won't talk about eliminating bugs I've never done any research in that direction so instead I will focus on limiting the post exploitation impact obviously in the past there have been several attempts to do this as well for instance sandboxing one very prominent example that has been proposed like 17 years ago or so now is control flow integrity control for integrity has very simple idea during static analysis when we compile the application or using a binary binary analysis we extract the control flow of an application so for instance here we have a simple abstraction of this where we have several nodes and we extract information at Node 1 can follow to can transfer control to node 2 which can control transfer control to node four Node 1 can also transfer control to node 3 and so on so using static analysis we extract this information build a control flow graph and then instrument our binary with",
        "some checks so before we transition in Control Function check Integrity to a new Target the thing that we do is we simply check is this a valid transfer or not so for instance for node 3 we know that we can only transfer control to nodes 5 and 6. these can be functions this can be basic blocks pretty much everything so if an attacker now tries to hijack the control of our application we have this malicious flow to a different node then CFI will prevent this however CFI does have a few limitations it's typically only applies within a single domain for instance you can apply CFI to user space you can apply it to Kernel space but it's very hard to do this in a cross-security domain context",
        "but obviously this is something that we want to do because a lot of pretty much all of our exploits requires interactions with the operating system as it is the privileged entity on our systems so we need a way to limit the interaction with the operating system and there's one thing that Linux already provides us and this is Linux second company secure Computing interface the idea behind second was quite easy we checked for every single system call whether it is part of a filter or not if it is not we simply terminate our application the typical flow here is this we have our application the application itself you use the developer you are responsible in identifying what are the system costs that your application requires and you send them to the kernel to install these filters for every single system call then the internal intercepts the system call checks with the with the filters and if it does not is not part of the filter we simply terminate it otherwise we execute the system call and return the result so this is obviously something quite nice that we can use to limit the post exploitation impact of an attack however",
        "sex Compares two limitations in this case the first one is that we only look at the current system call we don't have any context information the second one is that is quite difficult to apply here we have a very simple example of a program it does nothing else than copy one file the content of one file to another file but you as a developer you are responsible in identifying every single system call that your application uses well this is quite simply something like this it's not a large program it's quite complicated if you think about large complex applications like servers and so on so just to give you an idea how many system calls that this application might require this is the list and as we can see it's already quite a lot and most people I would assume would not be able to identify this system course so a couple years ago we worked on",
        "automating this and we gave a presentation on this back at blackhead in 2020 in blackhead Asia together with my colleagues so we simply automated this Con this discovery of the system cost that your application requires but when we worked on this we also had another idea what if we extend SEC comp with not only enforcing a current system call but this current system call in the in the context of the previous one so we'll try to enforce ciscal sequences and this brings me to what I'm going to present today and this is our concept of Cisco flow Integrity protection it takes ideas from CFI and SEC comp to to enforce the program behavior of an application that is protected for it as flip as we call it is built upon three pillars our first pillar is a simple State machine during static analysis we extract every single Cisco sequence of length 2 obviously there are other lengths are possible as well but we focused on only length two so we extract these sequences and then try to enforce them so I'll assist our application is only able to call system ciscos in the sequence as we determined statically just like we had it in the CFI but on a different level however we try to extend this further to provide even stricter protection and this is for ciscal Origins during the same process when we attract extract this information we also extract the origin of each single system called generating a mapping from the CIS called origin to the system called that it can execute obviously this can be a mapping one to one a single sysical instruction can only execute a single system call or a single system called instruction can potentially execute multiple system calls both of these things we do extract during static analysis in the compilation of the application however S5 would not be anything without our third pillar that actually enforces the information so we modified the Linux kernel that it can receive the information that we provided and then enforce it into set the system color check is this a valid transition is it a valid origin and if it is we continue our execution",
        "so this is the free pillows pillows that our S5 builds upon in this talk I will mostly focus on the first two pillars and less on the third pillar simply because it's more on the trivial side this part so we implemented s-f in a proof of",
        "concept implementation we call this sys flow sys flow consists of three parts it's a compiler so we modified the llvm compiler tool train during that performs the extraction of both the Cisco sequences and the the origins",
        "then a simple support Library it does nothing else than extract the information do some adjustments for the Cisco offsets and send it to the kernel and finally the third part is our modified Linux kernel which takes care of the enforcement the enforcement can be done in various ways we choose to modify the Linux kernel entirely so but you could also use something like evpf or something like that so let's focus a bit on the extraction part what is the type of extract information that we extract we have here a very simple example of just a little bit of code as we can see we have a function four it takes a parameter it calls some functions it has some um yeah some branches in there as well and a system call first it is important that we extract several key parts of information so the thing that we extract is the transitions so we generate an inter an inter procedural control flow graph so that we know from where can we go to where so that we can actually extract the sequences correctly so we know for instance that from line three we can transition to line four or line six and so on we also have to call targets so this is these represent our inter procedural control flow graph where we know that at line two we're going to call the function scan F or on line four we're going to call printf and finally we also extract information of the system calls so we know at line 06 we are going to call the read system call we extract all of this information for every single file that we encounter both if it's a C file if it's an assembly file we can extract all this information generate the object file response yeah the corresponding object file and encode all of this information in the object file so because only later on we can build our whole control flow graph and this is called sequences the second part is more complicated and it it builds upon the first part as well and this is the CIS called offset extraction first why do we extract this is called offset as an offset to the start of the function instead of an absolute address we simply do this so that we can still use features like address based layout randomization because we simply don't know the final address once it's being loaded",
        "so what we have here is a simple translation unit we have a function we already seen this function before and we know that it's going to execute a system call so we used now the information that in the back end of the compiler we see a system called instructure we use the information that we have extracted previously and annotate this with a label so we're going to say this is in function func and the system call number 39. because at this point we don't know the offset of the interact instruction there are several key steps of optimization that are going to happen afterwards only at the very end when we generate the symbol table for our object file can we actually determine the offset so once we have this symbol table we simply take the the address that's generated for the function and the address generated for all now newly generated label calculate the difference annotate it with add the information of the system call number and we have the information so we know our function func is going to call 13 the system called 39 I think it's the get ppid system call at line O2 however what we also see here is this unknown offsets The Cisco cb3 why do we",
        "have this Cisco CP is a function that's performing a system call with a checkpoint so we don't know what the offset is",
        "there because it's in a different translation unit we don't have this information readily available but what we do have is the assistant information what the actual system call is but at one point we have either seen or will see this function Cisco CP then we have the opposite problem now we know what this the offset is but we don't know what the system call is so we annotate this information we say we are in functions it's called CP and as the number we encode minus one and now we have the unknown ciscals as well so we know what is the offset there in this function in the Linker we combine this information to get our final information where we now also know Cisco CP is going to perform the function at the system called free uh I think it's closed at this offset",
        "so let's talk about the state machine generation and also in this same process we generate the final information for our Cisco offsets we have all these object files that are now annotated that contain this new section with our information that we extracted we take all of these object files and throw them into the Linker the Linker extracts all of this and generates this huge block of information this whole control flow graph the whole information on system classes called offsets and so on but obviously we need to build the final Cisco sequence we cannot simply use this information because the we would severely over approximate and we still don't know any inter-procedural ciscal sequences so I will briefly illustrate the generation of the state machine using this example so in the top left you can see the current function that we are at and on the dot right you see the information that we have available for this in the bottom you see the last system calls that we encountered and the state machine so our information here tells us that we're encountering a transition to the functions full one and full two and simply based on the order of the line numbers we know that we first transition to full one so let's do this we recursively visit our function through one we pass all the information to it and we see that the first thing in this function is a system called open so we're going to consume this open add it to the last system calls but we don't have a previous system call so this is more or less our initial state what we tend to have is the transition to the function bar one in bar one we again have a system called read now we do have a previous system call so what we can do is we add in the state machine a transition from open to read so we have a valid transition there we then consumed it it's added to the last system cost replace the previous value but and can continue but we don't have any further information for our function bar one so we simply return no further information here as well so we will return again until we are at Main in the main function where we have now our transition to Food 2 and we simply repeat that we go to full two we have our system call First with the open system call our last system call is read so we are going to add a transition from read to open replace the last system call that we encountered transition to Bar two and add now a transition from the open system call to the Stat system column so we now know that there are two valid transitions from the opener system call one thing that we also during this process is that we every single time we encounter and function we add all the system called offsets that we have for this function so simply at the end of this once we have returned here to our main function there's no more information left we have generated this whole map of uh CIS called Origins as well as our CIS called sequences",
        "then we encode this information again in our final binary link our support library to it which is responsible for extracting the information now that we have launched the application we also know all the the functional addresses we use this information make the offset adjustment and finally send it to our kernel for the enforcement the kernel is very simple it intercepts a system call it keeps track of what was the previous system call that I encountered and once we perform a new system call it looks up in the information is the current system called a valid Target for the previous system code so it performs this transition check once it passes this it performs this independent origin check to see whether the system call also originates from a location where it is valid so this is basically the idea of our concept of of svip but the thing that always is of Interest obviously is the evaluation what is the performance impact of our two of our concept and as well the security that we provide let's start with the performance so the first thing we did is We performed this micro Benchmark we simply followed what the Linux kernel developers do as well we executed the get ppid system called one million times we did this for different setups so in the First Column we see that we simply used no protection at all in a second we compared our implementation to sec.com and then we benchmarked all the different uh configurations of our svip so only state checks only origin checks and only the and then both of them combined obviously we are slower than no protection at all here we have like an average number of 302 compared to 341 in the case of our combined protection this is to be expected simply because we'd have to take a different uh we have to perform our checks but also we have to take a different path into the kernel there's the the kernel calls it the the slow path compared to the fast fiscal enterpath and this is something that we have in common with sec.com because we need to intercept the system column but one thing that we can see is that we outperform SEC comp in terms of this micro Benchmark that we performed it's only seven Cycles but still quite a bit there's a simple reason why this is the case section of internally uses the cppf program language simple to express their filters it's quite complex they need to be interpreted and this takes quite a bit of an overhead but Micro benchmarks are they are nice they tell you like a raw estimate of the overhead but usually your system your application isn't going to perform 1 million uh system calls of the get ppid system called um it's simply not going to happen within a second so one thing that we did is We performed this macro this macro Benchmark we looked at several large-scale applications uh and compiled it them with our tool chain we want we rent them as well so also obviously yes we can report some performance numbers we can also say that our system actually works so this is also like a functional Corrections test in itself as well because we were able for instance for our memcache we ran the whole test Suite without any errors uh for nginx we were able to load a website connect to it make a hundred thousand or a million requests without it crashing and for ffmpeg we simply converted one file to another file format one thing that we can see here is that we have a very low overhead the interesting case here is obviously the combined case because it provides the the most protection in all cases we have less than two percent overhead even though we perform more checks than second we provide more security so even though we do all this we have quite a nice performance impact that I would say is acceptable for most applications one thing that I want to point to that I still don't know the answer to it is why in ffmpec we have this weird case where the just checking the state or just checking the Cisco location performs worse than when we combine those our repetitive experiment I think like 20 times and this Behavior was always prevalent and it's still something that I'm looking into it I'm to be honest I'm not entirely sure what's the case there I expected some weird caching Behavior there",
        "but obviously the thing that we also want to know about is what is the security benefit of using as fit for your application one thing that we can reason with on that allows us to reason about the provided security of our system is when we look at the state machine here we have several applications that we used in our in our evaluation or research paper that we used so we simply extracted the from the state machine for all of these applications and looked at some of the key metrics there are more metrics in the paper and just present some of the most important ones here so let's look at nginx nginx here has the highest number of states with 107. obviously this is quite a lot but one thing that is quite important here is that 107 States is also the number of of states or system calls that you would have in a sec.com filter so it's simply the equivalent there because it's the number of Origins for a system call and if it's an origin obviously at one point I'm going to require the system color so the number here also matches our previous research so when we did the automated second filter generation we also arrived at this number and concurrent work also have this so I'm pretty confident that this is accurate",
        "one thing with SEC comparison that is",
        "quite important with second we have 107 States and we don't enforce any context around them so every single one of these 107 states can reach every single one of the uh of the 107 States so with the number of average transitions in sec.com is 107. in our case we have a reduction to 74.05",
        "so on average every single one of these 107 states can reach 74 other system costs obviously this is quite a high number but compared to sec.com there's still an",
        "improvement by yeah 33 system calls and",
        "we see this also for others the question obviously is why do we have such a high number of average transitions there are certain things that we need to to do so we do over approximate just like you do in CFI when we build the control flow graph resolution of indirect costs is quite complex it's an undecidable problem so we need to over approximate their which results in this high on average this higher number now I do want you to keep these two numbers 74 and 107 in mind when we transition to our origin analysis then we did pretty much the same thing we looked at these applications we looked at the total number of offsets within these applications so the total number of system call instructions and the number of average offsets that can a system where a system call can occur let's look again at nginx here we have 318 system call instructions when we",
        "think about SEC compare again when we use second comp we have a 107 system calls every single one of these system calls can originate at any one of these 318 locations so this is perfect if you think about like a Rob chain I can I still have quite a big attack surface but one thing that um that we have now with our uh with our origin enforcement is we reduce this to free so even though we have 107 States on average every single one of these system costs can only be executed at three locations this is quite a reduction we have like a hundred effective 100 less uh Cisco",
        "Origins as would have been possible with sec.com and together I think we have this reduction to 74 possible Transitions and the reduction to like on average free system called locations this is quite nice of a security benefit but let's have a look at our concept in the context of return oriented programming just to let me give you a quick primer for those if somebody is not too familiar with return oriented programming the idea behind return behind Rob is simply that we use existing code in our application to exploit the program there are certain reasons why we need to do this I won't go into too many details here but the idea then is that we use this existing code by simply jumping to parts of functions which we call gadgets these gadgets are typically of a very simple form they are simply in the same assembly instructions that are followed by return instructions like we can see here we pop RDI we return We perform a system called or we return and that we return so in on typical export you chain these gadgets together and the only",
        "requirement here is that we override the stack with the addresses of the gadgets as well as any parameters that we require a brief illustration so here we have the stack we have program code and we have registers we have prepared our Stacks so we have our return address and the parameters on there we have the program code as well so we simply return perform some asmr's instruction return to next Gadget there we now have our Pop instructions that are part of our Gadget we popped in two different values that we've prepared into the register and return to our Cisco instruction and now we have a working system a working blockchain that performs a system call that we have specified and with the parameters that we also provided so obviously this is quite interesting for an attacker and these gadgets that we have here they are often unintended so consider this byte sequence from an Intel processor you have o5 5A 5e5fc3 when we disassemble this this is simple and add instructions so we add a constant value to whatever is in the register however if we skip the first byte then it disassembles did this very nice uh Gadget so we pop some values and return and an attacker can do this obviously as well so they can simply jump to underlined addresses and to underline instructions and perform some computation that they want even though it is not there intended by the compiler or by the application developer and this property is due to non-aligned variable with opcodes now the Cisco instruction itself is quite small it only has byte sequence of 0505 and of05 so it's very easy to find underlying ciscal instructions",
        "however when we think about svip in the context of these return oriented programming we do impose some restrictions on them so we restrict these rough chains by a Cisco Origins so for instance underlined instructions are simply no longer possible because we have never encountered as an underlying ciscaline structure in our static analysis because we are the compiler we have no clue about this at this point and uh also potentially Shell Code or something like that is also not possible second in together with the origins we also enforce that not uh considered not every single sequence is possible anymore so this is also quite a nice reduction so an attacker must be very careful in the gadgets that are constructed and must have previous knowledge about the possible Transitions and the possible Origins so together with this we can say that S3 can poses significant constraints on control flow hijacking attacks however svip is not perfect when it",
        "comes to uh to this we have similar",
        "restrictions to limitations as C5 for instance as I mentioned the over approximation and this over approximation leads to something that we call that is called a mimicry attack in our case it's not a typical mimicry attack as it is discussed in the literature for intuition detection systems but a slightly modified version",
        "but let me briefly discuss the mimicry",
        "attacks in the context of intrusion detection systems because there we have also used Cisco sequences for detecting malicious behavior but not enforcement as we are using it so we have this detection policy now intuition detection system that from an open system call um if an open system call followed by an f-stat system called followed by a write system called if we see this Behavior then we know that something malicious is going on in the mimicry attack the it is quite simple to evade this this detection because an attacker can simply do this we the attacker executes the open system call then performs some no op system call it can be anything let's say it's a read system call then after the read system call the attacker performs the f-stat system call and there we could also potentially do another no op system call can also be the read system call again and then we perform the right system code the only thing that is necessary for the attacker is the D2 for instance in this case the two no op system calls don't interfere with the actual attack they are simply there to towards the detection policy",
        "in our case it's a little bit different because we don't try to detect malicious behavior we try to enforce program Behavior but we do have this over approximation that allows an attacker to do this when we uh our application for instance",
        "doesn't have a valid transition from the open system call to the f-stat system call but it does have a valid transition from open to our no op system call which in turn has a transition to the asset system call so the attacker with the knowledge of the Cisco sequences can weave its way through the um through the enforcement so to reach the final system called it's required in the attack however even if an attacker tries to do this there are simple there are still restrictions so there must be a valid transition between the no op system call and the um the source system call and the know-up system call must execute at the valid Target at the valid origin if this is not possible if this is not given then we will kill the the exploit and this is possible for every single one of these edges so an attacker with knowledge can find a way but still we do impose some restrictions on uh on attacks",
        "one thing that I want to point to also is that something that I've done and that I will probably release in the near future it's work that I've done with my student and it's more or less to restrict exactly a text like this",
        "let's assume we have a simple example here we have two code locations we have in the creation a we have a function Cisco it performs a system color and then it should cause the function bar one bar one in turn also performs system call and returns to our function from one location B does pretty much the same thing it also performs the same system color but transitions to a different function so there we perform a different system call on the right we can see here the information that we extract in S5 we have the transition so we know that open because we have encountered it can transition to either the read or the Stat system column and we have the origins we have opma can occur at these different locations and read can occur these uh locations read and set at these locations one thing that an attacker now would be possible because we perform these transitions these origin checks independent of each other an attacker can do simply execute the open system call add our location a and transition to location B and perform the Stat system call there if it is required this would pass both tests checks because it's a valid transition and both system calls over originate from a valid origin that's why I refer to this implementation of svip as coarse grained as fit similar to what you see in CFI where we have coarse grained and fine-grained CFI",
        "one thing that I worked with my student on is that we thought that okay now that we know that actually in extracting these fiscal Origins these Cisco transition sequences is possible let's more finely intertwine these parts so we",
        "came up with this idea of this fine-grained s-fib where we make the transition check also dependent on the previous origin so now we have the information that's open when it occurs at the location of X2 can only transition to the system called read at ox12 so the transition from this point to this point here is no longer possible and we've worked on this for quite a while now if we have evaluated it and it seems to actually do what we intended it to do so it poses even more significant restrictions but at the cost of performance now before I finish my presentation here I want to point you to a proof of concept uh you can find it on GitHub uh one thing that I want to point out it's an academic proof of concept so there are still restrictions I'm currently working also on it to make it more easy to use because it's quite difficult right now but you can find a proof of concept implementation on GitHub and I'm also working on releasing our more fine-grained solution there as well if you want more information so there's obviously not enough time to go into all the details so you can find more details in our paper you have all the information implementation details where we discuss even potential improvements that are going even further than what we have currently limitations more extensive security discussion we also demonstrated in our paper uh how a specific bug would have been prevented if our Implement if the application would have prevent been protected by svip and you can find it on archive now a brief recap um so with svip we do provide this Integrity to use the kernel transitions that we were not able to do directly with CFI and also not directly with secon we were also able to provide security via our Cisco Transitions and our origin checks and one thing that I also want to point out similar to our automated second filter generation it is fully automized it does not require any action body developer except adding like con compiler Flags otherwise it's fully",
        "automated and it has minimal runtime overhead of less than two percent um as we have seen with that I would like to thank you for your attention and if you have any questions please feel free to ask",
        "[Music]",
        "[Music]"
    ],
    "4PBdSvqyZwE": [
        "foreign",
        "the title of a talk is soft7 revealing the secrets of the Siemens S7 plcs",
        "this is Joint work with Professor Eric BM and three of her students maximbarsky idanraz and Alon dankner who",
        "is here with me we are all from the faculty of computer science in the technion Israel Institute of Technology",
        "my name is Sarah bachan I'm the founder of c and CEO of cyclog that provides secure system design and audit services",
        "I'm also a senior researcher at the technion hiruchi fujiara cyber security Research Center",
        "my name is Alan dagner I'm a security researcher and the decline graduate",
        "Simmons S7 pocs are certainly the most",
        "researched and attacked ones the reason is twofold ubiquitous deployment in critical facilities",
        "and the vendor Siemens set a high security standard in fact it was the",
        "first ICS vendor to integrate cryptographic protections on its plcs",
        "so here's a quick history of malicious Squad execution on Siemens S7 pocs",
        "the first to do it was the infamous stuxnet worm discovered in 2010",
        "it exploited the vulnerability in Siemens Windows software to inject raw",
        "control program to the plc and tamper with the HMI outputs",
        "this was before Siemens security enhancement and was actually triggered",
        "to it in rock 7 the work we presented here in 2019 we came up with the Rogue engineering station python script it's",
        "exploited vulnerabilities in the S7 protocol to perform stress injection of",
        "an unauthorized control program to an S7 1500 we also find out that all the PLC from the same model and firmware version use the same key pair in the same year at Blackhawk London Abasi and his team exploited the vulnerability in the S7 1200 bootloader",
        "and demonstrated arbitrary toward",
        "execution they were also the first to find out that the S7 plcs are using the Adonis killer in 2021 Cal current from Clarity",
        "exploited vulnerability in Siemens memory management to escape the control program sandbox and go to remote code arbitrary code execution in the Adonis kernel our current work takes the capability to run native code on the PLC and create a rogue PLC a few steps forward",
        "remember the Purdue model with the PLC communication is restricted only to the",
        "planet local HMI and Engineering station",
        "well you can start forgetting it",
        "Industries 4-0",
        "and the digital transformation of changing the ICS architecture model",
        "new architectures are emerging with the PLC communicates through a service bus that might reside in the internet with other ICS components part of which must might also be scattered in the internet",
        "so smart manufacturing brings forward",
        "new PLC requirements they are required",
        "to run integrated development environment they're required to support new communication protocol and even perform extensive Cloud communication",
        "hence the vendor must be agile and flexible yet they must preserve existing ipn",
        "technology and cannot start from scratch",
        "so the solution the vendors came up with are the software plc",
        "this is a POC that contains a VM it runs",
        "a general purpose OS mostly we've seen windows but some are running Linux now the fact that the standard OS is running on the PLC CPU leads to the usage of the standard CPU another VM runs the PLC code which",
        "usually runs on the vendors proprietary operating system",
        "as we have two operating system running on the same CPU the general purpose and the proprietary",
        "and they are running a virtualized sandboxes and the virtualization is",
        "implemented by hypervisor or vmm in",
        "Simmons case the CPU the PLC is using is an internal a multi-core where a Windows",
        "embedded OS is using three of the cores and the fourth score is used by Siemens proprietary operating system which runs",
        "the plc",
        "thank you Simmons 82 200 SP open controller it",
        "seems version of the software puc it is a software version of the S7 1500",
        "it was introduced to the market at 2015.",
        "now virtualization brings with its",
        "significant operational advantages for",
        "example you can update the windows and when it is restarted or even when Windows receive a blue screen of death the PLC continues to run without interruption since it runs it runs in a separate VM Siemens have also used virtualization to",
        "prefer separation of communication and to decrease the attack surface of the PSC code in the new architecture the PLC communicates only with the field devices all the communication with the upper layers of the Purdue model that contains the AG mind engineering as a station and",
        "might also reside in the cloud is performed by the windows VM",
        "the device that we've tested is CPU 1515",
        "SP",
        "now let me take you backwards to about six years ago before we started our Rogue 7 research our first intention Regional intention",
        "was to attempt a vulnerability search on",
        "the S7 1500 firmware",
        "at that stage we found out that it was encrypted and we couldn't construct the plain text firmware from the plc so we fell back to protocol reverse engineering and the result was our Rogue 7 research when we learned about the new software PLC and the new architecture we thought okay let's give it another shot",
        "and as we started our Quest towards the Siemens PLC plain text firmware",
        "now when the PLC boots",
        "it immediately enters the windows VM a",
        "jailed environment and all we can see is the Windows screen so our first attempt was to run a different operating system on the POC Hardware so we brought our own discounted container Ubuntu and we tried to run it on the plc and surprise we successfully run Ubuntu",
        "on the PLC Hardware",
        "Ubuntu we found that there are five partitions in the PLC internal memory",
        "we found that sdo1 contains the Windows",
        "File system and also the grab files and the hypervisor binaries and there are other four partitions in the internal memory for example that contains some other stuff for example SDA 5 contains the cement project file",
        "by analyzing the grab files we found",
        "that the hypervisor is running in two stages at the first stage the hypervisor configured the PLC Hardware at the second stage it loads two virtual machine the first",
        "virtual machine contains when those",
        "and the second virtual machine is loaded from a",
        "cpu.alpha that contains the mysterious",
        "software CPU in an encrypted phone hence",
        "We Gather the tests PLC software architecture is a vmm and hypervisors",
        "that runs on top of the hardware and it runs 2vm one VM runs the windows embedded operating system and the second VM runs this Mysterio software CPU",
        "from our analysis of the grab configuration fund we also figured out the CPU load sequence the excuse me the open controller boot sequence so after",
        "the BIOS is running the a grab bootloader is running the transde first",
        "stage of the hypervisor configures the hardware the second stage it will hypervisor the clothes the 2vm the embedded windows that communicates with the HDMI engineering station and optionally with Cloud platform and the software CPU that communicates with the",
        "field devices",
        "surprisingly at this stage we found out that the vml binaries the grab",
        "configuration and the cpu.l size are",
        "also accessible from Windows the implication is that an administrator",
        "that has read write privileges of course on all the file system can read those five and can even write and uh his own",
        "software the software PLC files or a",
        "Crypts of the PSC files or change the grub and the hypervisor binaries",
        "now that we had access to the hypervisor's boundaries we searched for the part in the hypervisor the clothes",
        "the plain text",
        "binary of the poc2 memory",
        "so we did it by reverse engineering the hypervisor binary specifically the second stage of the hypervisor",
        "now looking at the binaries we found out that hypervisor is looking for a specific magic at the beginning of the uh encrypted the software CPU file which",
        "is the S3 Magic now we tampered with this magic and got an error message that said that the POC failed to load the its firmware",
        "looking at the binaries we found this error message and before it we found the",
        "call to the decryption function so we now have the part in the code that calls the the equipment function the decrypts the PLC firmware in memory",
        "now once we go to the decryption function we started to try and reverse engineering and understand what the decryption function is performing but we found that the code is very sophisticated and we understood that",
        "static code analysis is not enough to uh reverse the decryption we needed a dynamic code analysis namely we needed a debugger now consider that the PLC is running in a hardened restricted environment Siemens removed some of the functionality from the hypervisor",
        "so we could not install our own debugger in the PLC hardened environment",
        "so we came up with our own primitive yet very effective debugger we simply we",
        "found out that in3 is connected to the CPU debug interrupt Handler and this Handler creates a dump of all the registers and the memory so we simply inserted in three to places in the code we wanted to break and examine the content of the registers and the memory using our N3 debugger we found the runtime call to the decryption function its argument in the local variability allocates on stack",
        "the arguments in the local variable includes pointer to the ciphertext and",
        "the clear text of the CPU elf and we could see the contents of the the memory",
        "pointed by the spontaneous in memory",
        "so this was a very frustrating stage in the research for us we had the plaintiffs of the firmware in memory but we could not export it from the POC to analyze it it's like we found ourselves in front of a locked wall in a secure room with cctvs and motion detectors all over the place and all we had is a tiny screwdriver namely our N3 debugger",
        "we knew that with enough effort in time we could lock the standard the the vault in the standard common way but we decided to think out of the box go completely nuts and who knows we might get lucky and it will simply work over or even turn out to be much easier so here's what we've done",
        "excuse me for a moment okay",
        "okay taking a frustration to innovation",
        "you ready",
        "I'm ready",
        "hey can we successfully moved the ball from the TLC restricted environment to",
        "our own powerful attack environment which is based on Linux but the vault is still up so I give you a loan I have to rock thank you sir",
        "so our idea was to run the vmm",
        "or parts of it in an environment that is easier to debug that allows us to produce output and mainly that allows us",
        "to export the plain text binary from the vmm we just couldn't do it directly on the PLC itself",
        "now the vmm is an x86 binary so it may",
        "seem straightforward to run it but there are several challenges that must be addressed first the vmm runs in hypervisor mode and we wanted to run it in user mode second the vmm has its own kernel and libraries while a standard Linux has libsy to address these challenges we use Dynamic binary instrumentation",
        "we used it to start the execution of the vmm from a specific location to add our code wherever we wanted and replace vmm functions with our own function",
        "we chose Intel pin as our binary instrumentation tool it is typically used for performance analysis and Architectural studies but we used it for our purposes that is to unlock the vault",
        "foreign",
        "starts to run it loads the binary of the vmm to the memory and replaces the vmm functions with libsy functions using hooking",
        "we placed another Rook inside where we identified as the decryption Loop the decryption Loop takes a block of ciphertext the crypts and the compresses it and we added a curve for a function that exports the plain text to a file",
        "Intel pin starts running the vmm from the vmm entry point but we don't want to run the initialization or the first stages of the vmm we want to go directly to the decryption therefore on the first instruction",
        "we use a hook to hijack the control from the vmm and transfer it to our decrypter",
        "but before we jump to the decryption entry point we need to prepare the environment",
        "to work correctly the function must receive the correct set of arguments",
        "the second argument RSI is a pointer to",
        "the encrypted software CPU our seeks points to a buffer that is used for the plain text now we also Point RSP to the beginning of a large buffer we created and this is interesting because the vmm actually uses this buffer as a stack",
        "after we prepare the environment we redirect the control straight to the",
        "decryption entry point",
        "at some point of the execution we may encounter a call for a vmm function like vmm Arlo",
        "instead of jumping to the original function we use the hook we placed earlier to jump to malloc",
        "eventually",
        "the vmm reaches the decryption Loop that the crypts and decompresses the software CPU block by block",
        "for each block we call the rightf function that writes",
        "the buffer that contains the plain text to a new file",
        "so with an iteration of the decryption Loop we write another plain text block to the file and this is how we build the decrypted software CPU",
        "at the end of the decryption Loop we actually get a legal L file and you can see some of the elf segments in the slide",
        "now let's see a demo of our decrypter",
        "the vmm directory contains the binary of the vmm and the encrypted software CPU we show here the md5 hash of the software CPU which is equal to the one on the plc as you can see the software CPU is encrypted and it begins with the S3 Magic run stars decryptor that runs the vmm",
        "with our modifications and the output comes from the decryption Loop so at the end we get a segmentation form but we just don't care because we ran the vmm long enough to get the plain text the decrypted software CPU is delivered in output.bin as you can see it begins with the Elf Magic and riddle shows that we actually managed to parse it now check this out we've just run a PLC",
        "binary on an Ubuntu machine which doesn't even sound possible and still we got the decrypted software CPU therefore it is crystal clear that the decryption key is hard coded",
        "now back to you server for the rest of the talk",
        "thank you",
        "so our Quest ended the key was to film a",
        "last line of defense and since it was literally glued to the Vault when we open it uh when we took it we opened it and exposed the firmware",
        "that's we got the plain text firmware",
        "initial analysis of the software showed that it contained much more from what is required to operate the software CPU in 80 2000 test 200 SP",
        "in addition to the peers software to PLC software it contained full Libs implementation openssl library and even",
        "binary encoded in maps Isa",
        "moreover it contains strings that we",
        "were familiar with from previous research from unrelated parts of other",
        "software of other Hardware based S7 plc",
        "so the the good intention of reducing",
        "the PLC attacks survey failed because we",
        "found out that a huge code base is carried from previous models of the S7 plcs into this software PLC hence the",
        "the attack surface is indeed increased and not decreased now note although it's a different model it's a software plc 99 of the et200s Picard is shared with",
        "the rest of the S7 1500 plcs including",
        "the hardware-based plc",
        "now what could Siemens have done to",
        "prevent us from successfully decrypting the the firmware if they would have separated the key from the vmn binaries we could we would not have been able to use Intel pin to decrypt the software CPU if they would have used secure boot we would not have been able to implement her in 3D bugger if they would have encrypted the hypervisor binaries we would not have been able to reverse engineering them",
        "and again if they would have implemented secure boot we would not have been able to run another operating system namely Ubuntu",
        "under PLC Hardware",
        "but Siemens",
        "didn't deploy any of these preventive measures in the ET 200 SP secure boot is",
        "not implemented the Intel atom TPM is not used and the vmm binaries are not encrypted",
        "to summarize these are the basic mitigation that we would like to see in a secure POC the key must be separated from the code preferably stored in a hardware model for example CPM secure boot must be implemented to prevent system manipulation the file system must be encrypted to prevent static code analysis but as I said none of these mitigation were implemented in a et200 SP",
        "Simmons confirmed graph finding",
        "and they were interested in possible customer impact the truth is the customer impact",
        "of this attack is severe the PLC firmware leakage exposes the full somatic S7 product line since we found out that the code base is shared so via exploitation of non-vulnerabilities the",
        "house is based PLC can be attacked and the horses may have already left the stable a recent finding which is not part of this research and it's part of a different publication we found out that an attacker who gains admin rights on the Windows VM can replace the PLC firmware with its own crafted Rogue POC firmware",
        "and this means that an attacker that gains control over the windows VM which has a huge attack surface since it's communicate with the upper layers and maybe with the cloud can run his own probe PLC firmware",
        "we shared the full details with Siemens before the talk",
        "now to summarize as of 2019 semen had a",
        "31 of the PLC market share those plcs",
        "are deployed in critical places like power plants water facilities from spaces system and even nuclear reactors",
        "the female leakage exposes the full",
        "S7 somatic product line to known",
        "unpatched vulnerability and this is a design flow there's no easy solution it's not like you your distributed Siemens will distribute the patch and it is immediately fixed the the solution is operationally much more uh sophisticated",
        "I would like to use this opportunity on this stage to send two messages",
        "the first message this is the to the community we suspect that Simmons is not the only ICS vendors that has problems securing this new POC architecture we didn't check other uh vendors",
        "but the reason to our suspicion is that secure binding to hardware and large-scale Key Management are tough operational problems",
        "so I challenge you all Academy standard bodies security and ICS vendors to look for a solution to this problem this is especially important now since ICS",
        "architecture are currently shifting from wall Garden to open Cloud oriented",
        "environments",
        "another message I want to stand to send from this stage is to the ICS customs of all ICS vendors I'm addressing you",
        "you're the asset owners you will suffer from the impact as long as you will not clear make clear specific specific",
        "requirements you will continue to get security mechanism that the vendor chooses to implement which is not necessarily the ones that you need",
        "and thank you all for your time and your attention"
    ],
    "NXqLMmGwJm0": [
        "[Music]",
        "foreign",
        "thanks for the introduction let's dive in immediately so I think",
        "everyone knows this talk is about starlink I think most of you know how starlink works and what it does but it's a satellite internet system so as with any satellite-based system you have a space segment and an earth segment in the space segment we have satellites in this case the satellites might communicate with each other over laser links and basically the idea is that the user terminal will send its data up to a satellite and then the satellite sends it back down to an earth-based Gateway and then in that way you can connect to the internet now for some reason SpaceX wouldn't give me a satellite so we had to buy a user terminal and that's what this stock is about the stock is about the user terminal and the idea here is if you can attack the user terminal you can access more of the network infrastructure that you cannot access without first attacking the user terminal so we bought one we put it up on the roof of our University building I did a speed test but that's about it because at that point we have another internet connection and we already had a good one so I started looking around at what other people had done and there had been a few tear Downs like Mike on space at the tear down cancers down the signal pad did a more in-depth analysis of the RF Hardware",
        "and then that's basically the point where I started working on my dish and while I was working on that a few other videos came out going offline did a tear down and he went uh really quite ham at the dish he used the blow torch to open it up oh like gotkov did a tear down of his Wi-Fi routers and did a basic analysis of it this is all documented in a nice blog post and I recently um then married a theorem of his second generation struggling terminal and he also made a 3D printable case to replace the Pokemon",
        "but basically what was lacking for me and all of these things is that they none of them really went into the security of the device and that's the part that I was obviously interested in I already mentioned that there have been multiple Hardware revisions of this user terminal but I think very few people realize how many they actually have been in the past so the circular user terminal the one we have here on stage as well is about 60 centimeters in diameter it's meant for residential use but as you can see there have been a lot of Hardware visions of this specific dish you can also see that there has been an SOC code 3 and SOC code for meaning that there have been at least two silicon revisions of the main system on ship in this dish then we had the square usage terminal which is slightly smaller and square that again there have been at least three revisions of the hardware finally we have the high performance units meant for more business and other uses again they have already been two collector Innovations of those finally the transceivers there's not that much publicly known about these so I know from the code that has at least two revisions and the idea will be that you have a transceiver unit with an external antenna",
        "for this talk we will focus on the circular user terminal I specifically worked on I have two Proto 2 and F2 Port of 4. which means that I did the attack on the system on ship code 3 anchored 4. all of the other externals use a cut for SOC so the attack that I present today works on all of these",
        "um so of course we started with the theorem ourselves we moved the plastic shell of the user terminal and then you are gate it with this enormous metal shield there's a small cutout that shows you three connectors the first one is the power of ethernet connector then there's a connector for the motors so normally this dish is on a stand that allows it to orient itself towards the satellite then the final connector is unpopulated and it contains a uart interface now those of you that have done heart attack stuff before knowing that if you see it you are connected it's always exciting",
        "because oftentimes you find an easier route shell on the device now that wasn't the case for this SpaceX terminal so we can see that it does use u-boot but the input is set to null def meaning that whatever input you provide over the CL connector it won't accept any inputs so you cannot just get to the u-boot command line interface and change kernel command line arguments",
        "when you allow the dish to completely boot you are greeted with a login prompt and as you can see it prints development login enabled no because obviously the hardware you buy is not the development Hardware this also means that whatever you will enter in this user using login forms you won't be able to log in so this meant basically that we had to go deeper we had to remove the metal shield from the board to see what's on the inside as I said it's it's really quite big it's 60 centimeters diameter which is definitely the largest board I had worked on so some areas that you can identify on this board as a GPS receiver chip there's an area related to power of the ethernet there's a part of the circuit that generates clocks for both SOC and other RF Hardware and then we have the area that contains the soc and dram and emmc that's the part we're most interested in for this talk and then of course there's one area of this dish that I haven't marked and that's all the other stuff and all the other stuff looks like this so in the middle we have a digital beam former I see which is made by SDM and it's code name Shiraz each of these beam formats has 16 front-end modules connected to it which are called named pulsar now while I was working on one of these dishes I got a bit too excited I broke one SpaceX was nice enough to replace it",
        "but I didn't want to just throw it away so I desolded a few of these beam formats and from that modules and I sent them off to John McMaster it's almost nice enough to decapsulate these chips for me and image them and starting today I think you can all view these chips online and really zoom in them zoom into them in like higher resolution another thing you can see like some basic things you can see here like on the left we have the the beam former I see and you can see that there's 16 parts that we beat and these are basically the 16 channels of the beamformer the poster chip or the front-end module on the right we can see that it's basically symmetrical meaning that there's a receive and transmit pad for this chip",
        "then the area that you're most interested in so the biggest chip here is the system on chip it's a custom quad-core arm cortex a53",
        "made by SDM as I said there have been multiple silicon revisions of this chip and this one is code named Gatson we can also see that there's a secure element at the end of the talk I will give more explanation what the secure element is used for then finally or C in green is a four",
        "gigabyte emmc chip this is basically a fancy SD card you could say and then there's eight gigabits of DDR3 memory one thing you can see here is that the main system on ship is in a flip chip styled package with an integrated heat spreader so a metal can on top if you remove this metal can you give it to the back side of the chip die and from the back side of the die you can also make an image of the chip so this is an image we made in our lab and so it's a two substrate image it's at 50x magnification and this is an interesting picture for this as a physical attacker because it allows us to narrow down certain indexing regions so for certain physical attacks you want to precisely Target a specific area of a chip and here for example it's very obvious where the force CPU cores are in this in this picture um the full resolution picture will also be available online",
        "so the next step for me was to extract the firmware from this dish to look at the software and maybe find an easy vulnerability to get into the into the dish and to do that I had to extract the emmc memory there's several ways of doing this normally I would extract the chip from the board and then dump it that way I didn't want to do that in this case because I was afraid of breaking the board so I solved basically wires to all of these small test points hooked up a logic analyzer and he started the dish and I'm from this logic analyzer phase it's very easy to spot which test points you need so to read an emmc chip you only need a clock command and d0 line so",
        "if you want to do this at home you now know which test points to use as I said this is basically an SD card meaning that you can also use an SD card reader to read out this chip in this case I had to attach a level shifter because the EMC is working at 1.8 volts",
        "um what I would recommend you do if you want to hit create this at home is that you order a low voltage EMC adapter by the exploit TX it's only 12 and it's very convenient to have that's what I use today but I was still impatient and that's why I made the other setup so once we have a binary dump of the EMC we can start pulling it apart into the different pieces the GPL code that's available on GitHub is nice for this because it contains all of the offsets and sizes so you can see that there are trusted firmware back boot stages these are firmware image packages that you can extract to the flip tool there's a flattened UI mh3 you can extract a dump image then there are a few extra partitions around time a calibration that is unique for each dish an EDR quick station and Dish config and as you can see all of these partitions are protected cryptographically so they have either varieties signed on looks encrypted and of course the toaster firmware boot stages also Implement secure boot so this means that we cannot easily override our own firmware to the emmc chip and get a root shell that would have been too easy if you want more information how you can extract this firmware there's a Blog Post online that explains it in more detail I often get questions about the firmware and how certain things of the system work so one thing people have asked in the past is how does the thermal management work like how hot can it get before it shuts off if you've done the firmware there's a very nice file with a lot of comments that nicely explains how the thermal management is implemented you can also find all of the RF channels that are being used the frequencies they use and the up and downlink channels and how they are prepared you can also find the frequencies of the lasers that they are using for the satellites because part of the code base between the user's terminal and the satellite is shift another thing we can see from the code is that they collect a lot of telemetry about what you're doing with your user terminal I know that some people have mounted a user terminal on top of a car I've even heard of someone mounting it in the plane you can be sure that SpaceX knows if you did this another thing that SpaceX does is they keep track of their development Hardware because of course they don't want to development works we have to get in their own hands and the idea here is that if a dish boots up and it will report when it's locate basically if it's within a development geofence everything is fine if it's outside of one of these geofences SpaceX likely gets an alert",
        "most of these geofences make a lot of sense like a parking lot next to this Basics building some of them don't make a lot of sense like the picture on the right is the connections Museum in Seattle which for some reason is allowed to have development Hardware there's also some real implications in the code like there's a villa and somewhere in the middle of nowhere I don't know who it belongs to so I'm not going to share the location if you zoom in far enough on Google Maps you can actually see that they are likely some music terminals on top of that parking lot so if someone really wants development archway that might be the place to go now that we have the firmware we can also start looking at how the login prompt works and it's clear that basically the dish will print development login enabled then it does a check if it's development doctor it will print yes and set a root password if it's not then no password is set and you're unable to log in now if we go down a bit more to the physical level this is a logic analyzer capture of the uart output you can see it prints development login enabled and it's a two millisecond Gap and then it says no now it will be very interesting for us of course if we can have this dish believe it is development Hardware and the way we're going to try and do that is using fault injection so we're going to inject a fault somewhere in between the first print and the second print and hope that we get looking",
        "and if we're talking about fault injection with the flip chip package that exposes the die back site we usually start thinking about quite fancy techniques like laser fault injection body bias injection or electromagnetic fault injection but this board is very big so this is the equipment we have in our lab with the dish next to it the first picture is a micro positioning table that we would use for emfi but as you can see the box is way too big to have a mount on this thing on the right we have a box where a laser fault injection setup is in and as you can see the the dish wouldn't even fit in that box and of course if you would want to do this attack in a real world scenario where the dish is mounted on a roof um yeah getting a laser setup on a roof with an oscilloscope and so on it's not very very practical another issue we faced is that there are no open development kits so we had to do the attack Black Box we didn't have data sheets we didn't have open samples we didn't even have a similar product from SD to try and do this attack on first so there's a few more attacks we could try we could try messing with the clock but with a system on chip there's likely to be plls that inhibit clock glitches",
        "line but what I ended up choosing is voltage fault injection",
        "so initially we started with a relatively simple setup we connected the cheapest player light to the correct voltage supply of the SOC I left all of the decoupling capacitors on the board because when an SOC is completely booted up it is quite vulnerable to voltage glitches because it is already being pushed to its limits basically chip Espress can of course be controlled from python where we can set an offset and a glitch with and we have an external oscilloscope that's not shown on the slide that triggers on the uart outputs so this is a one result that you can get so dish pins development login enabled and yes but at the same time because the no point to the reference in the kernel and the entire system becomes caching down now occasionally you get really lucky and at pins development log enabled yes you can log in with the username root and a password falcon and then your route and you can play around with the system so this was nice because it showed that the soc is susceptible to voltage glitching the attack was easily reproducible by SpaceX even",
        "and it's quite easy to inject some fault but most of them are undesirable and this also meant that the attack is quite unreliable we only get one attempt every 12 seconds because we have to reboot the dash to try one attempt and it was hello success rate so it would take many many hours before you get lucky so I decided to move up into the boot chain and go to the earlier boot stages so this SOC implements argument",
        "meaning that it has a home bootloader as well as some e-fuse memory this if you start among other things the root of trust public key and the home bootloader will use that hood of thrust public key to verify the next stages that are stored on the emmc so in more detail the wrong bootloader or bl1 will load BL2 or the certificate of BL2 from the emmc the certificate in this case was a custom format made by SD it contains a hash digest and a signature over that Digest",
        "will verify the certificate so it will verify that the signature is valid then it loads the next stage firmware the firmware itself and computes the hash and compares the hash it computes matches the one stored in the certificate now if you've done something like this before I guess you see that there's two very obvious moments in time where you would try to glitch the soc so one is the signature verification the second one is the hash comparison",
        "now because this is a completely Black Box scenario you have really no clue where in time you have to insert the glitch and which of these two positions might work best for you so it boils down to a lot of different attempts basically until you get lucky this is the setup we made to experiment with these things a few things you can do in a black box scenario of course I'm trying to boot a dish with an invalid signature an invalid hash or an invalid firmware image you can also try to glitch a valid certificate into resulting in a signature verification failure and all of these things combined help you to narrow down the right location in time and the other glitch parameters in the top right of this slide you can see an em Probe on top of the die this is the same corner where the first CPU cores are located and this gives us some side Channel information I also removed most of the coupling capacitors in this case because the when the home bootload is executing only a single chorus running and it's running at a lower clock frequency and this makes it less susceptible to voltage glitches",
        "this is a side Channel case with the serial output in black and the side channel in blue um at this stage and time basically the dish is printing I have loaded the certificate and I'm going to start checking the signatures and you can see that once the last byte of UF data is loaded into the buffer it will already start the signature verification and this is very useful side Channel information versus the attacker because occasionally when you want to skip a certain function it's easier to glitch at the start of the function and using the site Channel information we know that this computation is already starting when I saw serial data coming out so what we found is if we glitch at the exact start of the signature verification that we can skip it and dial so basically the dish prints I loaded the certificate I'm going to check the signature and immediately after it says signature is valid I'm going to continue booting and you can also obviously see from this side Channel taste that the entire operation is being skipped",
        "this was nice because like this means that we can execute our own second stage bootloader and we can start reading memory regions and this way I figured out that um the home bootloader is mapped at the address shown on the slide and it is readable from the second stage so this means we can dump the wrong bootload and start analyzing it",
        "I emulated the wrong bootloader in unicorn engine and tried fussing it with AFL plus plus but in this way I didn't find any software vulnerability and of course the software vulnerability would have been nice to make the attack more scalable I also tried simulating my fault attack in unicorn engine and I did this by simulating a basic fault model that assumes a single instruction skip it turns out that a single instruction skip wouldn't actually result in a successful glitch and this is because there are counter measures in implemented in the home bootloaded to prevent this type of attack so obviously the counter measures are implemented or not using the correct model for this specific Hardware so here's an example of when your glitch would be detected by a fault injection counting measures so the first stage of the first part of this output is basically this thing it has loaded the certificate and that it is starting a signature verification and in this case a certificate that we loaded onto the emmc memory contains an invalid signature so the signature should fail once we glitch the dish it continues booting it loads a second stage it verifies the hash but then at the final end it says authentication error and this is because I have certain control flow checks implemented in the codes that basically um cut our glitch",
        "there's some more information on the slide about how this is implemented exactly but I don't have a lot of time to go into this today",
        "an issue we face now is that we didn't find a software vulnerability in our own bootloader meaning that we would have to glitch the one booth order every single time we reboot the dish and the Annoying product here is that we have to remove the decoupling capacitors to get the glitch to work on the wrong bootload but if you remove too many decoupling capacitors you can no longer boot Linux because the system is way too unstable so I basically have to figure out a way to switch on and off the coupling capacitors at will this took a lot of manual experiments with different mosfets different yeah high side or low side switching different gate voltages most of the drivers capacity sizes the way I was timing the glitch and so on so the first picture on the left is a hand soldered attempt that didn't work the second picture is the first attempt that did actually work so this meant that we could glitch the wrong bootloader and end up in a root shell on Linux",
        "this is nice because we demonstrated that the full attack works but it's currently still in a lab scenario right we have an oscilloscope we have power supplies signal generators and so on so it's not really a portable setup so doing this on a roof would be very inconvenient",
        "at this point I contacted SpaceX I told them I had the entire attack working they were nice enough to offer me a ubiki that would allow me to SSH into the user terminal but I decided that I was way too far down the rabbit hole and I didn't accept an offer so I wanted to make a mobile setup I wanted to remove the oscilloscope and all of the other lab equipment I'm out of a setup and make a mobile setup this is the first prototype you could say using a raspberry fly pickle to trigger and to inject the glitch this worked but it's of course still messy so I wanted to make a mod chip to make the matchup I put the dish on the flatbed scanner and this gives you a nice one-to-one",
        "resolution image of the picture that you can load in inkscape you can then draw the board layout export that to guycat and then you can start making your PCB this is the finished product so we have a Raspberry Pi microcontroller overclocked to 250 megahertz to the",
        "triggering and glitching",
        "this microcontroller basically controls the mosfet driver and that mosfet driver will switch on and off the decoupling mosfets and also insert the glitch using the gold bar mosfont the board is about six centimeters tall and I use the 0.8 millimeter thick boards one of the goals of this talk is that other people can start playing with the startling system and also the infrastructure and that means that also the mod chip design is available on GitHub the repository is still private but I will make it publicly later today this is a picture of the mud chip installed so there's a few wires that you also have to connect so I'm connecting to a wire that allows me to enable and disable the voltage regulator so that I can basically power cycle the SOC I'm leaching 12 volts from the user terminal to drive the mosfets at 1.8 Volts for level shifter",
        "this is the setup that someone at our University made so that we could simply hang the dish outside of a window from the lab so we wouldn't always have to go up to the roof if something broke so at this point everything worked I had to put on the user terminal I could connect to the network I had internet access and I was ready to start playing with the network infrastructure and then I had some Reddit posts saying the new firmware is a lot better and it's way more stable and of course because I have the dish mounted flat and right up to the sky the internet connection wasn't very stable so I made a big mistake of doing a firmware update um I had assumed I can glitch the one bootloader there is no way that SpaceX can stop me at this point it turned out that they had an e-fuse they could blow that would stop the dish from outputting any information overly worked so if you take a dish today and you try to connect to the uart product it will not output anything and my mod chip was of course using UF to take action language",
        "this means that we have to improvise adapt and overcome",
        "I was lucky enough that I started working on this quite early so I had a lot of data from the previous experiments so I could compare logic analyzer captures from before they blew the fuse and after they had bought the fuse and of course I had this very nice side Channel case and as a result if you have the side Channel case and you take a side Channel Taste of the dish with a blown fuse you can visually spot this pattern and figure out where you have to insert the glitch so then I I'm basically now trading on the EMC data zero line instead of uart and I could luckily adapt my mod ship to still work with this it's a bit ugly because I have to add a watch wire basically to make it work but it does work the alternative would have been to make a new PCB design but I didn't get around to doing that",
        "so at that point we can start looking of course at the network and if things don't really get easier because the SD safe secure element is being used to implement mutually authenticated TLS with every back-end service meaning that you can't easily intercept the data and modify it and so on this meant that I started adding SD safe support to TLS libraries I chose TLS Lite NG which is a few python implementation because that made things easier for me then go to Python scripts that allowed me to download the latest firmware updates before SpaceX assigns them to this this specific user terminal so whenever someone posts on Reddit saying I have a new update and this is the update version I can immediately go and fetch it so I also started collecting all of these firmware updates and I have my own archive now and this is convenient to see what they changed over time in the firmware",
        "most of the communication with the back end is over IPv6 meaning you can't easily scan all of the hosts the main host does have quite a few ports open but here basically I'm hoping that other people will start glitching everyone using thermal I will start looking at the network infrastructure",
        "so what else can you do if you build your own modship and start working on a user terminal as I said you can start exploring the network infrastructure but you can also start playing with the beam formers so it's clear that the user thermal is able to overwrite firmware on the binformer ICS themselves so I think some people are interested in playing with this firmware and seeing what else they can do with the beamformers you could also try to repurpose if terminal so maybe you could use two user terminals to implement a point-to-point link or something like that um the picture in the slide shows basically some binaries that are in the firmware that allow you to do some Diagnostics of the beamformers",
        "so with that I want to conclude the stock so it turns out that we can bypass secure boot using voltage fault injection in the ROM bootloader we did this on a custom quad-core Aquatics a53 in a completely Black Box scenario meaning we had no documentation and we had no open development samples our development kits we came up with a way to enable and disable the coupling capacitors voltage of course default injection counting measures are only as good as the fault model that was used to develop them and in this case the fault model used to develop the full injection countermeasure wasn't a realistic model",
        "so from a security standpoint I think this is a well-designed product there was no obvious at least to me low hanging fruits and Encompass to many other embedded devices I've looked at in the past even if you get a root shell it is still quite challenging to find an attack that scales I think there's a lot of device manufacturers that should take a look at this device and learn a thing after the SpaceX product security incidence response team was very responsive and helpful when I broke the dish they were happy to replace it and so on",
        "so before I really end this presentation I'm going to attempt to do a live demo it is a live glitching demo a glitch is never deterministic so it can take one minute it can take five minutes five minutes is the longest it's ever taken so let's see if we get lucky today you can find the GitHub link here on the slide if you have more questions you can you can find me later or send me an email",
        "so on the left we have a python script that is basically communicating with the modship it can set glitch parameters and it can orchestrate the attack if you were to make a new PCB revision and you can also read the UF data on the Raspberry Pi microcontroller then you could of course also make this Standalone so you wouldn't have to have a computer attached to the dish so by pressing enter we are trying to glitch the dish at this point on the right we have a serial terminal and as you can see it's not outputting anything because that serial fuse is blown on this dish so in the past when I initially started doing this research this would constantly reboot and say invalid signature and you would see it really doing something now we will only see do something when the glitch is successful",
        "and this is the point where we wait",
        "so maybe if someone already has a question like I can try to answer a question in the meantime",
        "at this time we don't have any virtual questions but in audience please feel free to use the microphones",
        "I was your level of effort a hundred a thousand ten thousand hours to do this like what kind of scale are we talking yeah that's that's a common and very difficult question to answer um so I I work at the University where I do research and we we never really work full-time on a single project so all of the research was done over the time span of one year so from getting the user terminal to having everything working um but it's difficult for me to say how many hours I really spent on this on this but you can imagine that it took quite a significant amount of time",
        "there we go which is successful",
        "foreign",
        "so to get this to work I also have to patch every single boot stage to remove the signature verification you can also see that I modified u-boot so you add more time to type Falcon and get into the command line interface so finally when the dish completes booting we can log in using the username root have I got it correct and the password falcon and we are root now we can for example do a this",
        "and this shows us all the logging messages that I've implemented and it gives a lot of interesting information while the dish is booting but also while the dish is running so for example what you can see when the dish is already connected to the satellite network is it will put into which satellite is connected to when it thinks it's going to lose connection and then the new satellite is going to connect to and you have live satellite tackers online and you can really see the dish connecting to the satellite that's flying over and so on so with that I want to end the talk thank you all for being here [Applause]",
        "[Music]",
        "[Music]"
    ],
    "xUKAS2UvSuI": [
        "[Music]",
        "now it's my pleasure to welcome to Stage Nathan Campbell",
        "thank you everyone uh for joining me this morning so uh last night I was a very good boy I drank plenty of water I came back to the room very early did all the right things and I still couldn't go to sleep so that just shows you in Las Vegas that no good deed goes unpunished I should have stayed up all night so thank you for joining me this morning for uh from hackathon to hacked my name is Nathan Hamel I am senior director of research at kedelski security we are a global security company I lead the fundamental and applied research team as well as the new product prototyping team I've spoken at many conferences before I've been a black hat Review Board member for well over a decade and I'm the current uh track lead for the AI machine learning and data science track so given that you might wonder how does a nice boy like me end up talking about web 3. and that's a bit of an interesting Journey so about four and a half years ago I joined kadelski security and about half of my team was cryptographers and we were working on things Advanced cryptography like threshold cryptography",
        "and zero knowledge proofs and a lot of this was being funded by blockchain companies so what we did was we stood up a practice helping blockchain companies",
        "secure their software and that's kind of where I got involved with this topic you might wonder what web3 even does everybody in here know what web3 is or were you coming here to uh learn how many people know what web3 is okay quite a few people so it's the proposed next version of the internet if you listen to Advocates and really for the sake of this uh talk what we're going to be discussing is that um applications running on top of blockchain Technologies so that's really the focus of this talk and you may Wonder since this tends to be a contentious topic you may wonder what my perspective is before listening to anything I have to say and let me be clear that I am very neutral anytime Technology's involved I do not feel the world is a better place with vulnerable technology out there so I feel as Security Professionals it's our job to help people innovate as securely as possible so I have a few goals for this presentation the first one is to kind of take the previous four and a half years of working with these projects and kind of distill down into some points to help you understand given all of the news that you may see why these problems persist and anytime you hear a talk about like this at a security conference it always turns into smart contracts but as you'll see as we move along that's only one piece of a larger puzzle",
        "I hope to cover some contributing factors and talk about and try to get security people more involved because we've been kind of sitting on the fence around this topic and I'll make a few recommendations towards the end about how we can start to make this area more robust",
        "so anytime an emerging technology comes along it thinks it's the exception doesn't matter what the emerging technology is it claims to be exceptional so we can't do that anymore because this technology is so new that we have to throw out the Playbook and write a new one and we know from history that that's just not the case so emerging technology is usually involve a bunch of traditional technology experience combined with something new and what we're really doing is trading a set of known issues and complexities for a set of unknown issues and complexities and as we're figuring out those unknown issues and complexities that's really where things start to merge around",
        "security",
        "so hopefully you'll start to see this kind of tied together if you look at the news on this topic you've probably noticed things like you know billions of dollars in illicit transactions for example or you know 2.2",
        "billion dollars stolen from D5 and these are 2021's numbers by the way it's still very bad today uh will be worse in 2020.",
        "if you notice this week that there was a cryptocurrency mixer uh that got sanctioned by the US government because a lot of these illicit transactions often end up going through a mixer for anonymization and the community is kind of upset about that",
        "um for several reasons so I understand the need for",
        "a certain amount of anonymity in the space so I understand why three watermelons guy wants to be three watermelons guy and not a real name everybody is acting as their own bank if you know who three watermelons guy is then you can visit Three watermelon's guy's house and if you know he has a certain amount of cryptocurrency you may be able to force them to turn it over but what I don't understand is why three watermelons guy took money during The Nomad Bridge exploit and that's really a problem that the community is going to have to come to grips with otherwise they're going to see more and more regulation",
        "this year we saw a top 10 cryptocurrency tumble a project that many people thought was going to be the next big thing we started seeing more traditional attacks affecting the web 3 space so maybe you've heard about projects discords being hacked or there was an issue with customer.io who you know was compromised and",
        "doctors were able to send notifications to uh Project's customers",
        "these things are going to become more and more common as this space increases in popularity and I mean it's not like you don't know where people who collect cryptocurrency and nfts hang out if somebody collects cryptocurrencies and nfts they really want you to know that they collect them so they're kind of creating themselves as their own targets and here's another thing everyone is acting as their own bank",
        "that's not just people that's the projects and that's what leads to such a high impact when these things get hacked if I had to summarize the entire situation you know we're seeing in a single sentence and why it's so bad I would say we have inexperienced developers writing new Financial products on emerging Platforms in full public View where the cost of failure is incredibly high and exploitation effort and time is incredibly low that is a perfect storm of factors all coming together that means it's not just an experience it's not just being irresponsible it's something else if it",
        "were just one of those we may not see things so bad but we have high value targets with public exposure and unexplored attack surface so we haven't found all of the issues in the space yet we're still finding them and this means that simple mistakes can have immediate and devastating consequences and if you're a web 3 developer and you launch a successful project one of the first lessons you learn is that Gone in 60 Seconds isn't just a terrible Nicholas Cage movie it's also what happens to all of your money because the time to exploit this stuff is incredibly fast and it's something we're not used to seeing we're used to a more traditional attacker approach where there's you know some some reconnaissance and there's some exploration some exploitation and pivoting and owning different systems but some of these are so exposed you can literally call a function and get money this means that web 3 projects don't have the luxury of failing gracefully",
        "if you're going to lose all of your money then you're going to have a bad time I don't think anybody would have any any uh argument there so now I want to get to the point where I'm trying to convince you know Security Professionals about why they should care about the space because you might say well that's all well and good you know crypto Bros are going to do crypto bro stuff and I'm just going to go over here and do my thing so the world is not a better place when vulnerable technology is out there because we tend to find that this technology gets adopted in strange places we didn't expect and it puts us behind the curve there's also some legitimately cool technology I mentioned threshold cryptography and zero knowledge proofs these are being funded in large part by blockchain companies and these have a useful impact on regular business",
        "if you're monetarily driven and you're into bug bounties I can't think of a better space to be in because we had a 10 million dollar bug Bounty paid out followed by a nine million dollar or a sorry six million dollar bug value I mean that's a pretty impressive amount of money for finding a bug",
        "and of course nation states are getting into the game as well so the Lazarus group was attributed to the uh Ronan Ronin network attack which was the largest crypto pack in history",
        "and I have a little bit of a I'm going to talk about that a little bit more but that means that this vulnerable technology could be fueling the nuclear Ambitions of a nation-state",
        "and of course one of the number one points is that this space cannot be successful without security there is a fundamental coupling between Safety and Security we haven't really seen that I mean if you if you look at if you attended how many people attended the first day Keynote okay quite a few if you heard Chris Krebs say that vulnerable software is more valuable than secure software because the developers don't feel an impact after it's compromised this space does this is a use case where you cannot be successful without security and I know I've been in this community for 20 years and I know there's one thing we love and that is to hate we love to hate it's in our bones I remember walking around conferences there is no Cloud only someone else's computer uh and I would wonder how many of those people are now Cloud Security Professionals",
        "we tend to be behind the curve and we also don't realize that this new technology often forces us to come up with new protection mechanisms that we may not have came up with otherwise so if you think of like iot and secure elements you know all of these things forced us to step up our game and it had an effect far beyond the domain that it was in if you are a security professional there's really only two things you should hate and that is people who hate specific Technologies and PHP everybody can hate PHP is definitely okay",
        "and I know what you're thinking I had to mention nfts and you're like yeah I got you but even nfts I think people it's not people don't hate nfts people hate people who collect nfts which is like uh hate the player not the game type of a thing um but I would I would even have you take a step back on nfts because what we're really seeing in this space is something we're not used to we are seeing technology experiments play out in full public View and this isn't something we're used to you know we are used to Innovation happening in stealth mode and private",
        "test users and Decades of development and marketing slicks with wild claims and quantum teleportation and all the other things that happen with traditional innovation so before we get into this before we start diving into this keep an open mind because this is something new it's challenging and it will really force ourselves to move forward",
        "as a security professional if you're interested in getting into the space one of the first things you have to do is Define the Delta so what is the Delta between all of the experience we know and have as a community and what we need to know for this space and hopefully as we move along you will see quite a bit of Delta filling with knowledge you already have so web3 architecture",
        "if you've ever tried to develop a web 3 application you may have went through a hello world and you saw something relatively straightforward you basically built an application you deployed it on the Chain Utopia happened World Peace followed and everybody was fine that only works if you don't need let's see what don't you need uh if you need data that would be bad if you need scale that would also be bad if you needed speed that would also be bad you know three things that developers often don't care about then you get into something that looks a lot more complicated so you end up having to use an API on a wallet and of course you know traditional storage is for mere mortals so you have to use ipfs or airweave or something like that and of course if the chain is too slow then you have to build another chain on top of a chain so that you can chain everything together each of these components creates a new attack surface something else that you need to think about and protect",
        "and I'm not going to go through all of these but one unique thing about the web 3 space that's a little different than some of the other emerging technologies that have come along like you know AI for instance is this space is really trying to recreate everything and we didn't really see that with a I we tried to solve new problems with AI we try to solve partitional problems with AI but we really didn't tokenize it and try to throw it all over the world and all this other stuff so they're really trying to reinvent a lot of things and some of these components are and can be incredibly vulnerable and Incredibly costly",
        "so this is a massive and complex space once again A lot of times when you hear talks on this subject it's about ethereum there's more than one blockchain so we really have hundreds of blockchains and if you think about the attack surface and how it works Every Chain you can kind of think about as being its own operating system in every smart contract language is its own framework not all of the knowledge translates even across chains which can make it hard to ramp up because you have to be hyper focused the other thing to keep in mind is that each of these smart contract languages and chains have quirks well quarks is a bit of an understatement because if you initialize something with the wrong value it'll default to true and then everybody gets money except for you so these are the things that you need to account for when you're threat modeling when you're testing",
        "and of course blockchains are extremely Limited they don't know about each other so they don't know each other exists they don't know the world exists either which creates quite a few problems so for example ethereum doesn't know that Solana exists and Bitcoin doesn't know that Terra exists sorry it doesn't anymore too soon okay sorry um so all of these things are things that developers want to get around so what these spaces have allowed is loopholes right so developers create workarounds for these things like oracles and cross chain Bridges and side chains and uh so this is wrecked how many people have ever been on wrecked before okay very good Rex maintains the leaderboard of the top half basically and what I've done oh yeah okay so that was last week slot it in at number five so these are cross-chain bridges and side chains ways of breaking out of one blockchain to another and it accounts for most of the value lost during these hacks if you think about core blockchain Technologies it's pretty it's been pretty resilient you know we haven't had a lot of you know core blockchain problems with security it's always the apps running on top and it's many times involving apps that are trying to bridge tokens from one to another and for attackers it starts with the end",
        "so an attack needs to start at the end because you need to figure out your exit strategy because if you just hack something and move it to a wallet and keep it there and don't move it and then figure out what to do with it later there's a larger possibility that somebody's going to be able to find out who that is and possibly even recover some of the tokens so what you see I mean and it's the other thing that happens too is it's not like you can just hack something and then call call up Apple and say hey can I get 100 million in iTunes gift cards that doesn't work either",
        "so what what uh groups that are money laundering do is they try to confuse analysis so a lot of times there'll be a hack that happens it'll hit a cross Chain Bridge it'll go to another chain like ethereum then it will go to some D5 projects then they'll put some in a mixer which anonymizes the transactions and then it's gone so the exit strategy starts first",
        "so let's look at a few attacks and I chose a couple of these attacks to kind of highlight very simple to very complex and another benefit is that all of these attacks happened this year and two of them last week so you can tell how how late I was putting my presentation together but a bonus to you you get uh very new information so let's look at Nomad bridge this was the one that I dropped in uh number five on wrecked uh this is a cross Chain Bridge so like I said you know blockchains don't talk with each other so you may have value you may have tokens on one network and want to use them to buy something on another or invest in some protocol on another chain so cross chain Bridges allow that to happen and the issue here was that there was an there was a value that was initialized to zero which bypassed you know all of the all of the messages or all of the authorization of the messages and and people were able to drain the tokens basically what was interesting here is that you didn't need to know anything about the attack you didn't need to know any solidity didn't need to know make any calls all you had to do was capture a successful transaction replace the wallet address and broadcast it on the network and you got money too probably the the lowest bar for an attack so there were people exploiting this that didn't even know how the attack works uh so another interesting",
        "fact here is it means that it wasn't a single person attacking it it was like a bunch of I guess web3 piranhas that just were taking little bites until there was no money left uh also if you remember our pal 3 watermelons guy he claimed to be a white hat after the fact and said FBI don't chase me down I'm gonna give the money back um so maybe he did that from the first part or maybe his team won and he flipped over a cop car and uh you know now he's regretting it regardless he says he's given the money back this is probably going to be incredibly hard to read but um",
        "if you can read that it says private key in mnemonic and you can see the values sitting there so anybody here familiar with how cryptocurrency wallets work",
        "so you know what happens when you with the mnemonic you can reinstantiate the wallet so last week there was a bunch of people who were having their wallets drained and they couldn't figure out why it was slope wallet which is a non-custodial cryptocurrency wallet which means you're managing it yourself what happened was there was uh the mobile application had verbose logging enabled the developer wanted to learn more about the users and that's just what you do you crank the logging up to a thousand and collect every bit of information and send it to a third-party cloud service well all of the private keys and all the mnemonics were going to this cloud service so that meant all of the wallets were vulnerable to compromise and reason this was interesting is because it's kind of like a web 2 issue affecting web 3 which shows that hey you need to get everything right it was a misconfiguration and another interesting",
        "theme that you'll see is that the team didn't notice so you're collecting all of this verbose information and you don't look at it because anybody who looked at that would know oh wow that's bad that probably should never happen ever",
        "uh the Ronin network is another good example because I think this is where attacks are headed so the Ronin network uh used in ethereum so is anybody familiar with axi infinity okay so uh very high level axi Infinity is a video game it's a play to earn video game and it's a place where people who collect nfts can go to have their nfts battle it out with each other rather than battling people on the internet so basically you could play to earn they had to use their own side chain uh to for performance reasons",
        "and what ended up happening was there was nine validators",
        "if you can control a majority of the validators then you can control the transactions four of those validators were run by Sky Mavis the the organization that was building the video game in true uh if you're familiar with the Lazarus group and their techniques in true Lazarus group fashion started with a phishing attack so they identified a developer made him a lucrative job offer he went through job interviews and of course what do you do you send them an offer letter well the offer letter had a nice little surprise in it like the Lazarus group likes to do and next thing you know 624 million dollars was gone",
        "from from the Ronin Network I was attributed to a nation-state and how would you how would you like to feel to be that guy like uh completely terrible uh the reason I say that this is the I think this is the future where some of this stuff is going is because it's not like the Lazarus group didn't start with the smart contracts they probably didn't find anything and then they went back to their old tricks and if you're familiar with the bank of Bangladesh attack that they had which before was the largest banking attack against the Swift system took them a year they had to plant things on the network and hope that nobody updated things and wiped out their attack so this is combining multiple attacks chaining multiple attacks together to compromise one of these projects",
        "another one of these is Beanstalk I think the Verge article kind of uh summed it up well it says cryptocurrency project robbed after hacked her votes to send himself 182 million dollars so one of the things that's being experimented with in this space is this concept of community governance so if you've ever heard of a Dao but basically it means that the project votes on what to do with things and basically an attacker was able to manipulate the governance protocol through a flash loan which is a you know a loan that you can take out that you have to pay by the payback by the end of the transaction so they were able to buy themselves a majority share and vote to send himself all the money they used an emergency protocol",
        "made it had a 24-hour hold on it and nobody noticed and he ended up getting the money so interesting here use of a flash loan which is a legitimate thing for",
        "collecting money from Arbitrage into attacks it's also interesting because normally you know you hear of like 51 percent attack and but this is a way to get billions of dollars relatively easily",
        "so there are some themes here uh so known security issues in code poor architecture and Design you know all of these things are common with traditional software",
        "and of course almost back to traditional software is cultural organization and experience and process and operations so you might wonder given all of these attacks and given the devastating consequences why is this not being addressed so let's start off with culture because everything starts off with culture these are not Enterprises many times they do not look like Enterprises they don't have security people they don't have security staff it really falls on a spectrum so it could just be a project of two people or it could be something like a centralized exchange so a centralized exchange has governance they have to Regulatory Compliance they look a lot more like a traditional project regardless of size you will be attacked by a nation-state so it's important to keep in mind you may not be dealing with a company it may be a small project of a couple people and they are experimenting with a lot of different Technologies and each of these Technologies has its own attack surface and its own things to be accounted for like flash loans for instance that's something new like there's no analog for that like walking like taking on a loan from A bank and saying walking up to the teller she hands you ten thousand dollars you take it you hand it back and you pay her ten thousand one hundred dollars like that just doesn't exist in real life but if you don't know what one is then you don't know how to threat model it when you're threat modeling a protocol",
        "now it's time for the the dirty word so you might want to plug your ears that's decentralization so decentralization is one of the things that may slightly frustrate you in the space and that's because it's often referred to as you know a lack of ownership which is a it's a feature and a drawback",
        "and if you think about it on one hand it's nice because things are Community owned you own your own stuff but on the flip side decentralization also means an attack of accounting for problems it means nobody owns the issues either so these projects are meant to be Community owned many times but what you find is when you start doing a dow a decentralized autonomous organization and you start voting on things you realize it's not necessarily as Fair as it seems so usually people with more money have more say and sometimes those people say things that you don't like like hey I vote to liquidate this project and take all the money and that's a legitimate vote right that's not even an attack that's like part of the design and so these dowels often control money but I think the important thing to think about here to to take away to talk about some of these projects is you cannot solve tactical problems with a Dao it cannot be up to the community about whether to patch a piece of vulnerable software",
        "so a good lesson learned that we learned in the traditional space that applies here is that the community will not solve your Project's issues we haven't seen it in any other community it won't it won't do it here some other cultural issues that plague",
        "security here is",
        "um if you have never dealt with the web 3 project this will be surprising to you like the purposeful not wanting to make code upgradable deploy once never touch it and that's meant to build trust right with the community the the huge downside here is that we haven't even found all the security issues yet like this security is an active area of research so if they have code that is not able to be updated then there's no way to protect the project the other things here are putting in um safeguards into the contract that will you know allow people or allow yourself some protection like not allowing people to drain all the funds at once or putting rate limiting in the contract you also see things like radical transparency so it's not uncommon to go buy a Project's GitHub page and see security issues in their public bug tracker so I mean hey if somebody reports an issue and you can never update it uh that's bad or if somebody's able to exploit the issue before you have a chance to fix it that's also bad um you know and there's also another mentality that people should be able to write vulnerable code because that's like some sort of web 3 Darwinism",
        "all of this makes your project less secure and to quote Dr Ian Malcolm",
        "nature finds a way and so do attackers",
        "it's not like nation states only have one technique and if that technique doesn't work they move on to somebody else that's just not how it works they're not called Advanced simplistic threats",
        "so we need to make sure that projects understand they need to cover a lot of ground otherwise they can just waive their money goodbye",
        "inexperiences is probably the one that you're the most familiar with um the most noticeable attributes inexperience and irresponsibility often look very similar from the outside so sometimes if somebody's inexperienced it often looks like they're acting irresponsibly and what I've found is that many project developers are very new to to development in general they just don't know certain things exist but one of the things you'll never hear after somebody wins a hackathon is yay we got funded now it's time to look at security maturity has a direct impact on security",
        "and privacy and safety",
        "so these projects aren't doing the most basic things like asking what happens when something goes wrong which is something we all ask I mean it's even part of threat modeling you know what happens when this stops working so they have no plan when something they have no way of preventing things going wrong they think they're including security",
        "but quite often you know they use a security audit as some sort of proof that they've done everything well security it begins and ends at a security audit you know they may need an audit for funding they may need an audit to prove to the community that is safe but the problem here is that we've had people and we've done audits for these projects and then they get they have a security issue and then they say well that should have been founded but it wasn't even in the code we were looking at like it wasn't part of the code we had one one project that we found a very severe issue we reported it to them they're like oh that's bad we're not using that code so we're going to remove it everything's fine a month later they're like oh yeah we were using that they put it back in and that happens so that shows you no matter how many audits you do you will not be safe and if you don't have processes that follow along",
        "you have to get everything right the first time there are no guard rails like traditional developers may have so that means all the on-chain code all of your communication third-party components the design of your protocols and logic so some of the quote unquote hacks that you hear about aren't exploits of the smart contract functions per se it's a hack on the design of the protocol that made it vulnerable and that's something that's a little new in our space",
        "so you have to know what can go wrong and how to protect it and of course as we all know from the traditional space a lesson that hasn't been learned is that an audit will not solve all of these issues security can't come at the end",
        "so from a process and standards perspective there really are none so we've had developers put equality",
        "operators in the wrong direction I mean if you think about building a financial product you think that you'd want the equality operators in the right direction there's been projects that have paid out way too much money to participants and then had to beg them for all the money back so it's not a good place to be in if they had a simple QA process where more than one person looked at the code they may have at least found the simple issues there's no formal you know security bug reporting all of these other things are missing that we're used to seeing in the space and that's because they're just not learning from adjacent Technologies they're not learning from Dev the things that we've done in devsecops they're not learning from threat modeling they're not learning from any of this stuff and I mentioned monitoring before so another thing that's not happening this is a public blockchain you can see all of the transactions but none of these projects are really monitoring anything that's happening with their project so the Ronin validators attack the largest attack that happened that was six days after that they noticed that all their money was gone and it wasn't even them it was a member of the community imagine a member of your community walking up oh yeah you don't have any money left why am I dealing with you that's just not a great place to be another thing that's super important in this space is it is having some way of collecting intelligence we're in a new space with new exploits new attack techniques if you are not taking if you are not learning lessons from adjacent projects if you run a wallet and somebody else's wallet gets compromised it's probably a good idea to say hey could that happen to us what happened there now one of the great things about being open is that a lot of these projects even after they get hacked and lose everything they'll do a write-up on it and say exactly what happened and most of them are pretty honest which is actually pretty refreshing so there is ways of learning from other failures to work into your",
        "space because you know crying is not the best incident response strategy but if you haven't uh built protections into your system if you haven't allowed your code to be upgradable it may be the only strategy you have so I'm pretty hopeful about this space I mean we know more now than we did a few years ago there's much more information out there so if you're interested in learning and getting into the space there's more and more resources than ever today so I feel like this is starting to become more of an attainable space",
        "and one of the things I always try to tell projects is that security is a team sport you know nobody goes out and hires a security Savant and they come in and you know fix all the problems you know you can't even count on the best security firm on the planet to protect you by doing an audit if everybody else in the process isn't doing the right things so I hope that we can start making it harder for attackers rather than incredibly easy and that should be the goal so as Security Professionals filling the",
        "Deltas first and foremost so I mentioned not being able to upgrade code and all this other stuff there are other controls that you can use to get the same amount of trust if you don't understand how the project works and the apis and chain specific protections that",
        "you can use then you wouldn't know to make those recommendations there are plenty of vulnerability write-ups ctfs bug Bounty programs all",
        "of these are well you know all of these are available to you that you can start learning more about",
        "VCS and Foundations who usually fund these projects um need to step it up because just asking for an audit is not solving the problem so asking for security specific guidance some sort of response a monitoring strategy you know all of these things need to be accounted for so if you win a hackathon you should have to put a plan in place about how you're going to address these issues before it launches",
        "core chains so that would be you know ethereum Solana algorand all these core chains have some responsibility too",
        "providing security documentation and guidance is something first and foremost funding more research",
        "but if we think about how we solve some of the traditional or more traditional security problems with code they should be looking for ways to instrument protections at compile time so be that through a dedicated framework or be that through native code to catch those things so you shouldn't be allowed to make painfully obvious security issues now that won't solve the problem a lot of these are protocol specific but it's a start it's something",
        "they should invest in continued research and of course publish reference",
        "architecture so if you're building an amm or you're building a cross stream Bridge they should publish what a reference architecture looks like and projects need to learn this lesson is that there's no magical Innovation coming along that will save you if there is they should tell us about it because we've been waiting for decades for some magical Innovation to come along to solve all these security problems it's going to be hard work for projects more than anything else more than any other group projects have at the worst security can't wait until the end you know they need to hire some dedicated security staff you can't count on security companies to solve all these problems beg borrow steal hire somebody out of college you know you've got nothing today right somebody who has passion and who's willing to learn and who you're willing to sit with I think it's a great area for people because you start to learn about application security you start to learn about deployments you start to learn about all these things we need to have them learn from devsecops you know there are ways to scan code you know as you you know as you check it into your Repository threat modeling is probably the number one thing that they need to do you can't design a protocol without threat modeling it and yet many projects do",
        "static analysis is also something you can do not all of these projects are written in ethereum so um some of it's rust we have rust tools you can use things like semcraft at kadowski security we have a sem grep rule set specifically for Solana that we can run on on these tools and these are these are things that can be developed either by the security Community by the you know project communities and of course you know practice defensive coding",
        "these protections built in to the project don't allow everybody to drain your wall or drain your wallet all your funds don't allow projects to be able to do things very quickly if that's not part of the use case for projects also have a QA process to make sure those equality operators are in the right spot things like functional testing you know that things that you can use and run at runtime or before deployment I should say another interesting thing is tagging sensitive areas of code so that if a change happens in that area you know to give it way more scrutiny so that's something that can be done and managed through the source code and of course build a monitoring strategy with some sort of approach you know don't uh don't just cry um because that's not a great strategy so I have some extra information here that will be available in the uh but be available in the slide deck and I'm sorry for shotgunning like a ton of information at you because I'm sure that's what it felt like it was way too much for 40 minutes I wish I had um three more hours and a bunch of discussions that would be great but I am around if you have any questions and thank you for joining me today [Music]",
        "[Music]"
    ],
    "HHIi3OBntlU": [
        "[Music]",
        "foreign",
        "wanted to transmit the file from his laptop to from his smartphone to his laptop for this he started in an HTTP server he went to with server fully smartphone and browse it uploaded Wi-Fi and this didn't work the laptop that destinated from the Wi-Fi network",
        "and he saw that there was a hardware restart of his Wi-Fi chip it was a awesome Advanced disaster thing we sounded interesting you were able to like make someone listening from a Wi-Fi network by something HTTP requests",
        "so we went further and we uh within",
        "rooster server subject for two years and so why is this interesting research first there are much complex features which are implemented in the Wi-Fi chips so excited to have something ability third there's no public research at all about Intel Wi-Fi chips we are doing some presentation about broad term Wi-Fi cards over about Intel network interface",
        "charge with Fiona cables that known about Wi-Fi so far so it's something frame because nowadays if you have a laptop with Intel processor it's very relative that you also are using the Intel Wi-Fi chip",
        "so if you achieve to the situation on",
        "the Wi-Fi chip it's very relative that you can win on white memory of a manual passing system so it's very interesting",
        "was using the chip on the left which is quite an old Wi-Fi card on my laptop I'm using the chip on the right um so there are the two chips which we have studied in so in this research in this organization I will first go through the firmware which is running on these chips on on some ways to talk to a chip then I will present some vulnerabilities that we found in this research which enabled performing some Dynamic analysis experiments and then I",
        "will perform an experiment to better understand whether whether it is possible to perform dma attached from the Wi-Fi chips",
        "first the firmware",
        "when you are interested in Wi-Fi on",
        "minutes there are a bunch of user space programs at the Bluetooth field concerned to configure the wireless this program starts to channel modules or Linux the bunch of Channel models which are close to the chip which is seen as a PCI Express device which is running some firmware an interesting things with Intel Wi-Fi is that the firmware is actually transmitted by the channel when the chip is reset it's quite common the channel is located in the ship firmware and we can performance module loads the firmware on the chip so we can read the style it's a bunch of binary data with some header and then type that they use entries for example the first one is a type 16 as a decimal followed by length OC which is 12 in decimal and then switch by height and so on this binary data is located by the channel module our Linux is open source so we can just go through some header files and we have some NM which defines the types so we can totally write a Titan slate to decode the firmware and we see a bunch of metadata about the firmware so the first one was about the dev calib with the Phantom flag versus a strong magnified version of the firmware version field which is number of CPU which is two indeed there are two processors on a",
        "Wi-Fi chip this is widely documented so I will go through it briefly there is a new match CPU a return on your message controller which is responsible of implementing the high level aspects of the Wi-Fi prototors on Verizon the lower media message from processor which basically drives the physical interfaces containers both processors use the same on-chip",
        "memory where Linux loads the firmware",
        "which is loaded on the firmware in MCS which are set RC section one time so there are countries in Orange for the animal processor entries in proper for the umat processor uh this entry is Maps into different memory area and once",
        "you're nervous and you'll have to do some progress and remaining things you need to guess what is the insertion set actually to for this there are some tools for example there is a tools called CPU range which says that these memory areas contain Arch compat",
        "code so from this we can just load it into Ida proof or well because in either at the time it was only a disaster I watched the compiler module for that and I believe a cool request my new audio so if you are using the request 3006 you can actually decompile our contact code and from this it's uh very easy to start understand better what the firmware actually does",
        "if I modify your firmware well it doesn't work there is a mirror in the buildings Channel load a search boot error so the firmware is signed by Intel and you cannot directly modify your FMI it doesn't work",
        "before going into some vulnerabilities I would like to present how does Vineyards third to the chip right first it's a Wi-Fi chip so you can just send Network touches that's a common answer",
        "there's an interface in the table file system",
        "however many files",
        "so this is a with a cheap improvolution mode and in the double file system onions there are many first among these types there is a mem file what does mean means it means memory on which is five you can directly read the memory of the unshifting of the onshift memory of a Wi-Fi chip you cannot write to it but you can't read it which is quite helpful yeah which is very interesting it is prph unusual Rider peripheral register",
        "can read some peripheral registers and",
        "in the linkage software there are some macros which Define for example U match free on PC and Mac one from PC on7 read foreign",
        "which code is being executed when some",
        "function is being used and some features are being used well when I service it I was like how was it possible GPS is in position mode there shouldn't be any label interface and yet we can read all its memory and we can read the PC registers of the two processors on the chip",
        "there is some interface which is exposed through Pizza Express and nio I won't go into much details there are more details in the white paper but this is mainly documentation in the limbs financial stores so here are Intel digital web job at documentary teams and so this is a very interesting",
        "Germans",
        "it's like yeah customers are used to define to",
        "which at this point for example the Wi-Fi chart is generated or to Define some unchips and things",
        "which are not documented in the English try to stop us which are implemented in real life record on this Germans are interesting",
        "now how can we get obituary flow Distribution on such ships well just open for example in either the owner of some so when you are sending an austriament the only Earth can just read the payload of some commands also here you see two charts of this function which was named here you met before we died the first one with two 32-bit integer the first one is being used as a count parameter of the control which is reading so the incoming data into a stat buffer we see here here are the US based something it's loading into others",
        "so what do we have here we have a very basic stat buffer overflow and there is no statutory there is no organization so",
        "well I won't go into much detail there so it's like very easy to get a bit so it was a situation and third Wi-Fi chips using this",
        "um to to explore it in practice um we we use the Linux F5 framework to patch a function for in the channel module this way we",
        "we are not required to modify and to",
        "patch return module itself we can adjust the energy like this which is much more stable to expose this and then we can just use some read white executable version in memory to write some data whereas on the bathroom which enables writing diary some data in this area which is very helpful because when we just need to put some addresses in with using the style buffer overflow to get execution of this road and that's it we get through this equation now there is no shell in the Wi-Fi chart so what can we do well we can for example enable debit mode so here are some clips um on GitHub we published these trips which are basically workers around the developer system interface so the first terminal reads some content and then we come to write some data into this area and it doesn't work because the chip is in pollution mode then we run the exploit",
        "for business variability so we change the content that this allows to the edge 400 this enables the debug mode on in debit mode from unit to generally right memory",
        "so now we have a full distribution",
        "access so it's very helpful to better understand the features of a chip",
        "everything is this was actually past some years ago so this technology existed in some awesome way of a fair ship but not on my chip so actually I was very frustrated because my trade was able to run code on each on his Wi-Fi ship but not online so I wanted to run close also on my ship so I wanted to go deeper",
        "let's so you know how the firmware is actually loaded on the chip are presented earlier but somewhere when the chip was ready it was transmitted by minutes",
        "so Linus was writing to memory and also from here we can read the program printer of the processor and we see that why we are transmissive contains some interesting addresses and we can also read the content of these addresses and so we discover some code some are compact code I don't know whether it's a boot form or synonym so I will just say this is a loader which actually verified using a show of the firmware uses some Global variables in the data region and there is a touch which is always necessary there in the matchup",
        "and uh so the loader implements the logic of very very interesting is true of the firmware",
        "Channel use",
        "trying to perform a time of chat to time of fuse attack when we load the legitimate firmware wait for the loader to check its signature then load modified firmware and just let the loader added to this modified version well no it doesn't work the the loader actually makes the memory",
        "areas read only before we find the signature so this is secure but when we take release there's something that we can find is can we write some data into the data on the starch of the used by the loader on well on Thursdays",
        "so from this venability is actually quite simple you can just load the modified firmware transversion address by writing some data on weight or somewhere to to be loaded this was reported in September which was patched two days ago and with this we get short situation on the third shift but I did not get 20 degrees on my chip didn't work at first but didn't know but in a strong way I was able to modify the data to read back with data I modified but it was as is the chip was ignoring this data it was",
        "at this webship was using some cash to reduce its stuff if it's stuck and this",
        "cage was not updated when I wrote",
        "um another address to the starch",
        "so I found a way to make the loader off-road to meet each stage to flush it staged to to read batch the data from the unified return address on this way I got successful throughout the description I imagine",
        "so this way even on more with some chips so you can run a better code for this you will need a force to be already to others already have high privileges on lineage you need to be able to run code in Channel but it's like a rutual through the situation when you change running code on a Wi-Fi chip from there we perform some Dynamic analysis experiments what can we do we can for example Implement some tracing to better understand what the code what",
        "road is being executed when we use some features for this we replace every first instructions of the functions with a",
        "type instruction or even instruction there were some Pitfall there and we modify the assertion of the third in order to record the addresses of the functions which are being executed in Adobe buffer that we've then proved on with this we have a basic tracer which anniversifies in on a social variety if we want to perform some phasing through Wireless for example also implemented alternative when we",
        "added some code in the firmware to perform some some assets such as Reading Writing some Hardware registers and doing some compact compression which limited through a table of clients which enables us to better understand what was going on chip",
        "uh one thing to note here is that we cannot use the standard way of communicating with the chip but they are because while the developer sub is running the farmer is not running so it cannot actually communicate with the host but we found some unused peripheral register which which were available",
        "diverse using the VR ps2l5 and with this",
        "we were able to read or write some data for to make your transition system Channel without actually using post commands",
        "foreign what can we do further",
        "we can also we use an idea from more than 10 years ago which his name was in between the body the idea is to emulate the firmware in",
        "some virtual machine onto radiate the hardware accesses to the actual Hardware",
        "so for this eventually on GitHub you can find a qmu version for art Compact and we can modify it by using a TCG plugin for three new to redirect the memory assesses to the real Hardware by using our debit adjuster so it should address",
        "close to the actual firmware to actual",
        "ship uh um in practice this word for simple functions but it didn't work well for some other functions because there are many timers in the chip many Watchdogs and it's a variety that when you are using this to um to test some complex features there will be some timers which will expire which will make within fail and quite unstable but for simple feature it's very helpful because there are many other registers in the Wi-Fi chip",
        "so from",
        "the first thing where my grade wanted to transfer to five with a D4 firmware and so on then we found some realities we implemented the dynamic and is it from large now we can perform some experiments to answer some questions where is it possible to perform some dma attacks from the chip",
        "well if you know about how Network ships Works yes because well when you transmitted for patches you use dma in practice with Intel welfare chip this logic of dma itself for nasal patches is abstract by some other components so the chip does not have access to the actual address which is using the main memory uh which makes things more secure so we need to find another way to perform dma we cannot choose the same way as the one which is used on metal budgets um yeah there's a feature on the Wi-Fi ship that we've tried a little bit which is a paging memory",
        "verse section one time and trees so",
        "there are sessions of n multiprocessor session for the umat processor interval which are not dead initiative and in fact entries",
        "the first one is there's a separator which says that hey there over entries resonant one is a RSA signature which actually signed the third one which contains code on data this third entries is not loaded on the chip but it still contains road which is quite weird so what is going on",
        "in the umat processor there is a memory management unit when you read the data sheet about the art compactor memory management you need you see that the memory is split in several regions the top of the memory is mapped directly to a physical memory there is another version which is also map directly to ACL memory and the low memory version is mapped to the memory through the mnu at first mmu does not contain any entries when the remote processor strives to edit record or read or write data for example in oh wow o1002 address",
        "it will just perform a dma read access to read the content of this memory from the main memory",
        "it will read it into some space in a in his on-chip memory we can see the numbers here the the space is less than a flu number of pages so it's like to swap it's a well to have a firmware",
        "which is bigger than the on-ship the size of the engine memory so once the data is to appeared you can update your configure something new on the read on white execute code which is located in this area now the question is well we are bringing code which was red from Linux is it possible to modify this code if we can modify this road we can also achieve a few Distribution on the chip is no uh we saw uh previously that we start was signed the raise the signature uh right before um verified but it is verified by loading all webpages",
        "there is another mechanism which uses a",
        "universal measure functional code with 32-bit sums which the Integrity of pages",
        "which forbids modifying these Pages only",
        "notes and due to this mechanism it is not possible to directly modify the control of the pages on the main memory and then when code in fact the there are monitors will",
        "not speak so much about them there are more details in the white paper and basically the system are located in this oh yeah if you have to read returns at this address you can achieve the execution but by default you cannot read in pollution mode you cannot read the contents at this address",
        "foreign",
        "modified Pages because actually white table data in there what happens if we modify the configuration of the immuno to load Things From Another other space so there",
        "are actually function that can be used to perform dma attacks to read and write anywhere in the main physical memory",
        "where did they move office which are recorded",
        "so on the left we see the configuration of mmu it's a python shift that is published on GitHub which is directly read the new configuration from a ship using with the value of our system interface we see that the 0104 something is mapped to 256 something we can on the right read on the initial content of this memory of his physical address and for now it's all zeros on units there are some pages which contain visible data so for demonstration it's Finance if the channel we don't need data so yeah I just saw some strings which are in my channel if the channel read only area I can modify the multiplication to try to read the content of the channel we don't need that for this I first Flash the pages which are loaded then I modify basically I want to modify this to 50 seats ba by values of everything data for this in fact these two cccpi is there so I just need to write four bytes using the empty here I used before and once this work is done we can read data and we see even now on the chip when we read the u104 something we can read when we data when we can write something on first things to make the actual DMI white operation and now on",
        "units when we read the content of a read domain that uh the same ones we see that there has been some modifications",
        "[Applause]",
        "so back to the side",
        "um so uh now the question is well uh this should not be possible due to the IUN menu is a way to protect against dma attacks uh well the thing is by default on Ubuntu is not available",
        "so here is some Channel loads that I had when I added this channel",
        "sorry when when I tried the same new session now the the dma was the",
        "Ayumi mu a lot that there was an attempt to ruin memory around there was not the beat which allowed this Memorial with to business at all so the attempt was blocked so we cannot switch against the access of",
        "Wi-Fi chips dmas",
        "so at first",
        "my grade wanted to transmit the file and the firmware was it",
        "why did this happen no we have some tools to better understand what was going on and the answer is because tunnel directing setup 200 generate the",
        "engine setup is a way when you have two plugins related to a Wi-Fi adjustment to directly establish documentation between these two clients the issue there was was that the smartphone on intel was using incompatible implementation of tdls and with treated and assertion error in I have a in a Wi-Fi in Intel firmware which dot reset and this was actually fixed uh some years ago so if you update your firmware this actually the Wi-Fi",
        "chip you know advertise that it supports tdls",
        "all the tools uh available on on this GitHub repository uh yeah we I presented some vulnerabilities to achieve your execution on the chip which we have passed fetched by Intel two days ago this enables verifying some security protection on the chip for now we don't have remote for the solution from Wi-Fi it will be something for the future but for sure the Wi-Fi chip impairments very complex features Wi-Fi fasting there's",
        "also Bluetooth nearby which was on the same shift where you have Bluetooth on the Wi-Fi and there's also wait on where you always learn which is very interesting because basically your Wi-Fi chip is implemented from prototradors to just keep it connected when you work through on your computer I suspended so there is much download for over security researchers",
        "um now I see that I was very faster than intended so I have much time for question or some time for more demonstration which was right next to it I have some concern where I can actually do some demonstration with the tools which actually based on detail so I don't know what you want to do and uh I'm available for questions thanks for your attention [Applause]",
        "[Music]",
        "[Music]"
    ],
    "Bi3yW8W5e3g": [
        "[Music]",
        "foreign",
        "hello everyone welcome to today's briefing I'm really excited to be talking here today with you um and I would like to say that my name is Clara Maine I'm originally from New York but I come to you as a recently graduated student from radboud University in the Netherlands and I wanted to talk to you today about a very exciting project that I and a few others have started which is about eliminating triage intermediaries for",
        "zero day exploits using a decentralized payout protocol so that's a bit of a mouthful of a title but in shorter words the story that I'm going to be telling today is it involves hackers bugs companies middle persons",
        "and a new protocol to mediate them all so I'll begin by making a fairly uncontroversial point which is that cyber security vulnerabilities are becoming increasingly relevant",
        "as more of the infrastructure which we use and depend upon daily becomes digitized ensuring the security of software is becoming as important as ensuring the security and safety of our physical world because the consequences can be just as devastating in some cases our work concerns bug bounties which are an important tool for addressing these vulnerabilities in a mutually beneficial way so hackers receive compensation for finding and disclosing exploits and companies are alerted of the vulnerabilities in their software from a Global Network of intelligence it's a pretty good system",
        "so I'll begin this talk by walking through what we believe to be a typical process of vulnerability disclosure from the perspective of an ethical hacker it begins with exploit identification so",
        "let's say that our hacker is investigating a software stack that they're interested in or perhaps they're already trying to apply a more generalized vulnerability",
        "um and they're looking to apply that after a bit of work they're successful they have found something that no one else has and they managed to write the code for a zero day exploit so now another question stands what can our ethical hacker do with this yeah there are a few barriers as to why the hacker might not go directly to the company or software developers which I would like to mention before moving on the first of these barriers is legality so the exploit May indeed be very important to share but the hacker may have found it in less than legal ways which might bring some hesitation to the disclosure of the exploit second even if it was found completely legally it might be hard to convince the owners of the software the owners of the software of the severity of the exploit and negotiate a fair price from that so if they approach with full transparency this is the exploit this is how I found it then they give up their leverage to receive compensation",
        "and finally a third barrier is that small firms and users of the software who are still affected if an exploit is found uh and leveraged they might not have the technical knowledge or budget to properly deal with the zero day exploit so these were a few reasons uh",
        "as to why this process can't be completely transparent and direct",
        "so given this the solution that has been found for these issues are so-called triage intermediaries",
        "these intermediaries act as middle persons they perform the task of evaluating the exploit independent of conflicting interests",
        "and they're also very useful in negotiating a payout between the companies and the hacker",
        "so for a long time this has been a fine way to go about this process but there are a few problems which should not be ignored this triage process is very taxing on time and money because the intermediaries need to take the time to understand the exploit which can be really complicated depending on how complex it is and they assess the value of the exploit to the company which requires knowing a lot about the company and how it functions",
        "so these are both things which the hacker and the company know much better than any uh intermediary because the hacker knows if the bug applies because they wrote it and the company itself should be able to better assess what exactly the impact of the exploit may be on their operation granted that they have a technical expertise to do so",
        "so if direct vulnerability disclosure is not feasible and triage intermediaries are expensive",
        "could there be a better way of mediating these two parties of course because I am standing in front of you here today I'd like to reassure you that the answer is yes and in our white paper we present the true sex protocol which provides an automated solution to vulnerability disclosure",
        "it is useful to both hackers interested in the process with more certainty on how much and when they will be paid for an exploit before they begin working on it and it's also useful to companies letting them demonstrate quantitatively how secure their software is in terms of dollar Stakes against these deterministically verifiable zero-day exploits",
        "so our approach to improving this process is with a decentralized payout protocol and to explain how and why we use this approach I'd like to give a little backstory for our team and why we developed this protocol in the first place",
        "so this is the portion of the team who made the cut to the slides and in 2020 we were working on a different Project without the time and knowledge to do all the programming ourselves and we wanted to set some programming bounties but on every platform we encountered middle persons there was no way to get 100 of what we were spending to the person actually doing the work that we needed so in 2012 so in 2021 we assembled a student team competed at eth Denver and developed what we call the true call protocol we presented that at the ethereum conference in Paris last year and we're really excited to be presenting the cyber security variant at black hat this year",
        "so whereas the true call protocol was about programming bounties today we're presenting true SEC which is the cyber security version of this protocol we found that zero day exploits translate really well to Smart contracts and intermediaries exist both in the bug Bounty and programming Bounty spaces so it translated very well and we're excited to bring this protocol to the infosec community here",
        "we think that it would be a really beneficial thing for this field because the way that it works is that Collective staking means collective security so the more entities that we have who depend upon a software the more entities who choose to invest in its Security in the more secure the software then becomes we also think it would be really great because it allows for this quantitative demonstration of security in terms of dollar Stakes against these exploits deterministically verifiable zero-day exploits",
        "um and we also think it'd be really valuable because of the guaranteed payout for hackers who rely on this kind of work and would like some indication of stability",
        "so I've explained to you the why but how could this really work in practice so this is the protocol from our white paper I'm just going to leave this up for around 10 minutes the text is sort of small but we've included some binoculars under your street under your seat so that you can follow along for the rest of the presentation",
        "cool I'm joking um I have a much better present explanation coming in the next part of this talk but I thought that it was still important to show you this uh just to give you a sense of the general structure and flow of the protocol before we get into the nitty-gritty so here we have these columns which represent a different entity or technical element to the left we have big company a and small Company B uh with software Stacks that they'd like to have secured and in the middle we have a decentralized virtual machine containing some software stack as well as the actual exploit another entity",
        "and the associated smart contract for the exploit which has been identified and of course to the right we also have our ethical hacker so from this overview you can just see vaguely that the protocol begins with the companies and sort of flows to the decentralized virtual machine and then to the ethical hacker who then begins this process of automated triage",
        "um which is basically just checking the applicability of the exploit to the software Etc and then the protocol circles back to the companies who can patch and redeploy their systems in this sort of iterative process but that was a bit vague",
        "um so let's get into this protocol with a little more detail and style foreign",
        "so the protocol begins with companies",
        "collectively staking security bounties into a smart contract so this smart contract contains information like how much money has been staked compounded uh the minimum disclosure",
        "time so that's basically the time that the companies would need to patch the product and also how much time the hacker would have to weigh to get paid out it includes a public key corresponding to all of the stakeholders so there would be a public key for big company a and small Company B uh as well as information possibly differentiating payout amounts for different kinds of exploits so you may have pay out a one sum for read exploit or one some for right to exploit this smart contract controls this",
        "decentralized virtual machine which has the software stack and some Secret which if compromise would create a vulnerability and this is what the hackers ethical hackers are going to be looking for as they peruse these uh software stacks so this is the first phase of the protocol companies staking money on software uh and putting it into a smart contract",
        "so from the other perspective we have hackers scanning the blockchain for smart contract bounties they can see the amount staked when they'll get the reward and which software stack they're looking at and uh investigating these decentralized virtual machines and software stacks for exploits we also see exactly how much the payout could be and when and like before a hacker finds a zero day exploit",
        "so this exploit is placed in a decentralized vault which is set to open at the end of the longer of the responsible disclosure times in this case it's 90 days which is the disclosure time of the small company and the vault is represented by this Square here",
        "um finally",
        "oh wait yeah Additionally the public",
        "keys of the stakeholders are included so that they can access the exploit before the public which is pretty important if you want to patch your software in time and finally the hacker writes a smart contract themselves um which points to the decentralized locker location and with it also covers any energy expenses which are needed for the evaluation so this uh point about covering the expenses can really help avoid clogging the network with unnecessary evaluation since the hacker has to put their own money down for it",
        "um yes so this is it companies stake money on software hackers find exploits and put it in these decentralized faults with their Associated smart contract pretty simple so far",
        "so simultaneously to all of that and this is where we sort of get to where uh the more automated process",
        "the contract with the exploit reaches out to the decentralized virtual machine smart contract and asks for evaluation basically hey I found a bug please check if it applies uh and the companies you see are notified that an exploit has been uncovered [Music]",
        "so now in the meantime the companies are able to exclusively read the exploit via a private key",
        "and they work to patch their systems before the responsibility disclosure times are up",
        "all right so that was sort of the first phase of the protocol uh and all of that happens before the responsible disclosure time is up but after 90 days uh their time is up and the zero date exploit is released publicly for all the world to see and also learn from",
        "um and after that the exploit is then applied to the unpatched software in the decentralized virtual machine with evaluation costs being covered by the hacker as mentioned before so if the exploit manages to successfully compromise a secret in the decentralized virtual machine then the smart contract associated with the decentralized virtual machine pays out to the hackers exploit contract and that is essentially one full pass of our protocol hopefully you got most of that",
        "as for the companies",
        "they can continue this cycle by continually patching and redeploying",
        "their software while collectively staking money on the security of the software against zero day exploits",
        "and with each iteration of this sort of simplified Circle the software can become a bit more secure benefiting companies and also hackers without the presence of a middle person",
        "so that answers the how but there are still a few howevers that we'd like to mention before the end of this talk",
        "um the first is about the scope of the protocol so the scope is most specifically designed for these zero day exploits as I have mentioned a bunch of times before uh and it possibly also is applicable to some supply chain attacks and misconfiguration exploits",
        "but it's clearly not going to cover social engineering or other attack surfaces and so we admit that most hacks do not reply actually rely solely on pure zero day exploits so the scope is limited with respect to the complete cyber security landscape [Music]",
        "some more limitations we have a couple the first point is that the protocol is pretty All or Nothing the Bounty contract must be correctly specified because there are no intermediaries to soften the blow of an incorrectly specified Bounty contract so if the hackers exploit satisfies the contract the Bounty is paid uh we are working on a softer version of the protocol and if anyone has any idea for that please do join us in the wrap room",
        "um a second limitation is that the protocol only applies to deterministically verifiable zero-day exploits so this means that security compromises um which are not sort of clearly predefined deterministically verifiable read or",
        "write compromises would be sort of difficult to include as part of the protocol we are also interested in compliance applications as well but we're just getting started on that um and also if a hacker manages to gain read access but the contract only pays out for right access then the hacker gets nothing for a potentially very valuable exploit so the specification is important in this case too although the hacker would be able to see um that the contract only pays out for byte access but our third point is that uh decentralized virtual machines are very costly to operate so due to the high degree of decentralization a single ethereum transaction was around fifty dollars at the time that our white paper was written but of course that might change in the future",
        "um and our fourth point and last limitations that we're going to mention today is it does allow the over emphasizing uh of a quantitative level",
        "of security so this quantitative metric that we mentioned only really covers the money staked on these deterministically verifiable zero-day exploits",
        "um and which and also those which can be found in the software stack put within the virtual machine so we find it really important as a team that these this numerical value of the amount staked on the zde security level is not abused to convey a false sense of security by the staking companies to their customers right it only covers a portion of the security level but it's still we think a really valuable number to have in the Arsenal of describing how security secure the software is",
        "so these were some limitations",
        "um and to summarize",
        "uh this is important for hackers and companies and decision makers uh where hackers they get automatic payout uh without disputes of these bug bounties they know how much they earn up front and they will know when they get the money so that's pretty good for them companies are able to show how secure their software is and they also gain transparency in the zero day exploit Market which we also find really important decision makers within companies are also able to allocate cyber security resources much more efficiently because a hundred percent of what they allocate actually goes to the hackers working on the problem rather than a portion to the intermediaries",
        "and they're also able to say how much they're going to put on different parts of the software",
        "so now to get into a little bit of a robot a robot a road map of what our team uh would like to do in the future we're very excited we have a lot of plans the first is that we would like to ask the cyber security Community for input on what they find important um which is what we're doing here today please do join us in the wrap room and please ask us difficult questions um and then we would aim to attract some expertise on decentralized Virtual machines we're currently a student team so we don't quite have this sufficient experience with that uh let alone in an adversarial environment so we would really like to have someone who knows what they're doing with that and once we know what the community wants we aim to select the platforms on which we would build the protocol like the ethereum chain or possibly a separate chain and we would also like to then raise funds to be able to build a minimum working example",
        "uh really get this into something that is workable uh take that back to Vim Community for feedback adjust our implementation to match your needs",
        "um move forward with a complete Security audit and after the audit we would really like to go for live deployment we intend to sort of gradually increase the state's bounties over time and we actually expect that the first hacks are going to actually to be on our protocol implementation and after a while after a few iterations of that Loop we aim to have these fixed such that the hacks will actually apply to the state software stack so we think it's really cool that we can use our own tool to improve the security of the tool that we're using",
        "so this is our road map",
        "um let me see so yeah moving forward again companies we'd really like to ask what's important to you in terms of compliance or the types of exploits that you'd like to see um you would love it if someone could please advise us on the decentralized virtual machines and developers this is our GitHub please send us a message send us an email um yeah that brings us to acknowledgments we'd really like to express our gratitude to Tony Smith Leon bothrose and zauter for providing us with guidance and advice during the early stages of the protocol development they really took the time to assist us when this was merely an idea and last but not least I would love to thank Lydia Giuliano for providing us with direct and excellent feedback and guidance toward the preparation of this presentation if you want to ask any question please come join us in the wrap room which is Mandalay Bay room B it's in the other hallway and we can we would love to discuss the protocol further please tell us all of your questions and concerns thank you",
        "[Music]",
        "[Music]"
    ],
    "fIwyIL8LHRU": [
        "[Music]",
        "hey everybody welcome to this talk",
        "elf section docking that's a very long title we'll talk about elves hopefully those elves are not going to be very evil to us but um to set this stage um Dimitri I am",
        "with IBM X-Force where I do research for a phantom defense and previously I did the red team operations and some malware work and setting or absec",
        "so one of the things that we're going to talk about is um we're going to talk about it from the offensive standpoint um one of the probably good things that happens to uh red team operators when the red team operator fails right and then the idea start flow and we start fixing things that we did not know about before situations we were not in before or environments we were not uh in before right and so from that perspective we",
        "can learn a lot of things of the fail them as part of our talk we're gonna look at evolution of viability of static pay loads in Linux we're gonna see how that's done now and how we can do better and ultimately how we fixed our failures and we're gonna start working our way down to the common denominator which is the elf section and use it as a unit of a payload so static delivery Dynamic delivery all of that we're going to discuss and uh we'll move on to L section docking the actual concept that helped us solve our issue and finish up the",
        "engagement properly and last but not least we're gonna have a demo of things that uh we pretty much came up through uh through the time that we were fixing our issues and we're going to give some guidance to how this sort of concept of l dot can be detected and um uh you know mitigated by by companies so they say crowdstrike and Trend Micro in the report that 90 of cloud workloads is run in Linux I would agree with that we see Linux all the time in clouds but also what's interesting is that in 2021 and I would imagine 2020 2022",
        "there's a 35 year-over-year increase in",
        "Linux malware Linux is just interesting it runs uh it",
        "runs workloads so it must have some interesting data or access but the interesting things that this report reported on uh was the shift from ransomware which we've seen before it just kind of set it forget it get the quick win get Roi in this stage into stealthy things like whiners a Resurgence of warm capabilities on Linux believe it or not and uh preference for long-term operations as opposed to coming and do the thing and get out and obviously preference for file less execution because of the detection capabilities that have been growing over the past years but there is a caveat to the files of file less execution in memory execution we're going to look at that as well so when we are um looking at it from the operation from offensive operation we have roughly a couple of choices to deliver payload first is the dynamic side which which probably empirically counts up to the 70 now um where you essentially deploy the Stager um then you fetch the payload from the outside maybe you do some reconnaissance of where you're at situational awareness or whatnot then you load and execute that payload Dynamic side right the static side is basically bundling everything that you need for a One-Shot deployment and you may think that okay well there",
        "are trade-offs right it's it's a dial sometimes you need one sometimes you need the the other but the interesting part is that the dynamic part the 70 of it is there for a reason because of the flexibility detonation dependencies can be accounted for you know where you deploy and you can assess the environment and things like this but also you lose a lot of things you probably lose a lot of time and release capabilities dormancy maybe an issue if you're generating a lot of traffic maybe you're trying to figure out where you are in the system and also the static side has issues because you have coupling variants right you need to figure out the the bundle that you're going to deploy and that's going to be it so there are designed desired Dynamic traits for the dynamic",
        "um execution",
        "arguably less chance of detection because you're you're working in in stages maybe right there's more flexibility but there's also um undesired State on the static side uh which is you're much heavier because you need to bundle the entire payload with the loader and uh you probably have a lot more chances of detection if you're not doing it properly uh because we're going to look at how things are done now and you're going to see that it may not be ideal for what you're trying to do less flexibility we've talked about that but I still have this this this thing in my mind that static is 30 and dynamic is 70. yes the market is probably right that they're moving to Dynamic but there's probably something left in aesthetic and so we need to look at um at what what's still available in the static to kind of counter what defense can be mounted on the dynamic side right so here we're trying to improve static delivery as opposed to Dynamic delivery which is a lot more understood before we sort of look at the solutions or some of the ideas we kind of need to take a history trip into how we actually embed payloads right now it's um it's kind of been there for a while and there are only a few ways that you can do it on Linux one of the ways is your standard turn the binary into hex to our new payload or a shell code into a hex and stick it into a variable right which is going to be into Data section placed in the data section it will be it'll be there for you to retrieve and you can do it with a couple of tools that's very rudimentary and you can be",
        "sure that we're on time or statically somebody is going to catch you then you can use the compilation and linking and say okay well if I want to data be in a section why don't I specify which section I'm going to place that data in and you can actually do it through a compiler setup you can you can educate the compiler where you want to place your data you can do it in GCC with attributes you essentially specify a section and say hey my payload is going to be in that section and then the binary is going to be a separate section where it gets loaded it's also possible to be traced because the reason uh the way you invoke or find that payload is when the memory is the the section is loaded into the memory you can look into that and say hey I found my payload give it to me I'm gonna bootstrap and and run",
        "if you do not like to use GCC you can go directly to assembly and you can actually do um in bin directive or whatever your compiler allows you to do and you know you basic list of a elf executable into your binary and uh is going to be a similar linking you are going to find an external variable from your loader in the memory it's still going to be loaded and you go from there similar to GCC but without the overhang",
        "you can um pretty much replicate what assembly does on on the side if you want to do it in the C language you can do inline assembly um there are tools that exist that do it a little bit better a little bit more ergonomic if you will but the thing of it is it doesn't change the way you actually interact with that payload because the one thing that you always need to do is you need to educate the elf you need to construct the elf binary and the way you would do it you would say okay that's a data section via products prog bits directive right and that's very important so however which way you're taking which road you're taking to create your uh or embed your payload into the binary is still going to be possible to introspect that and find it and so before we move on I think it makes sense to kind of look deeper into what those sections are I've talked about prog bits I've talked about memory loading but in reality Alpha elf uh",
        "standard specifies that your binary consists of sections in every section has flags and based on those flags or attributes your uh your system loader is going to be behaving and most of the time the data is marked as loadable into the memory well that makes sense right because how do you find things in memory you need to be able to to Traverse that memory and access it something needs to be there so something needs to be loaded from the disk into the memory so but not all the section not not all sections not all types of section in elf standard uh do that by default carry that attribute of uh assuming the load into the memory by default and so we can take advantage of that uh little thing here",
        "so the real issue when you're trying to embed the payload into into static binary is that your compiler betrays you and you link and betrays you because they want to be a good good helpers",
        "right good good servants and they actually want to try and Link everything so when you're loading things into the memory when you're executing the um the loader then you are actually able to find what you put in there so",
        "there are challenges with breaking that linkage right what can you do there's not much you can do you have to have a very uh a sort of valid elf to work with so data carrying sections that carry product builds flags are PT loaded basically it's a it's a term for hey take that session load load it into the memory so static linking equals detection",
        "so how do we embed in a better way if you start thinking about it then you have a couple of choices you can avoid OS loader basically something that is",
        "going to execute your your Elf right and how do you how do you do that um by not so so you can actually educate the loader not to look at the section not to load it but it's very very messy and remember you're executing this on the adversarial system there may not be compilers there they may not be tools there and every single move kills you so we started looking at this uh Curious property that not all elf sections are actually loadable into the memory by default and uh what happens if we just avoid setting Flex on sections right it's there it's data but it's not loadable or and or look at something that is",
        "inherently known by the loader ld.so on",
        "Linux that is not going to be loaded into the memory and one such thing as shd node type of Elf section it's very widespread actually every executable or almost every executable that comes by default on Linux has that right is the section then that compiler uses just to to put like API version version or perhaps developers can convey some licensing information in it it's just the data it's a record structured data in your Elf the structure of it is very simple it's a record with a prepended size of the record of the data in it and maybe a little bit of a header metadata how many records you would have and if you do read elf on sections on every system uh executable that comes by default you will see that uh sht node is available so that's nice",
        "um let's move on further so so far we think that the idea is to create a dormant section in elf that doesn't get loaded by default by the loader into the memory but if we were to do it in the same single executable we have challenges because again section is a section and the structure of a section it has to be somehow tied to the loader it needs to find its um its um its relationship to the variable where that section um kind of linked into so graphically it's uh it's kind of like okay well you can take a section you can create it you can put it into the binary and then say it's not loadable right our job is to decouple that payload completely from compiler and Link in Linker so compiler linkers should not know about them",
        "so if compiler and linkers are are our enemies in this case what do we want we want to create an else section outside of your loader completely",
        "standalone maybe create a loader that will somehow",
        "know about that binary know about that section but but do it in such a way that is not inherently compiled or linked with it okay so so far the idea is to break the",
        "offset relationship from the loader to the payload to a complete separation between sections where the payloaders exist and sections that belong to the loader itself so you can think of it as a payload is going to be a completely foreign section to The Entity that elf is for the loader and that's essentially the docking part right you dock section to the executable that is the loader so if compiler is the problem and we're trying to decouple the payload and we're avoiding operating system loader right how do we do this well if before we were able to compile a section into the um into into that binary now we take a binary and dock it to the executable that is the loader maintaining the ABI compatibility the binary compatibility of sections within the elf as opposed to API compatibility by code and essentially what that looks like is it's a it's a framework where you can split it between what you do on a safe side your red side and on your blue side which is the you know in in your environments over there right where you deploy the malware you would have three components you would have a packer or a injector you would have a loader that is completely unaware what is being loaded into it and you will have you would have a payload that is in the form of a section right and so the um the injector or a packer would marry the two together like Legos they're completely uh segmented by any kind of",
        "memory reference but they would live in the same binary so binary is good because that's a",
        "standalone thing that we can work with and the loader Standalone loader is also good because it's generic it just needs to know how to load not what it loads so the",
        "uh what are the the help section docking trades that we're trying to kind of figure out with that idea of completely minor separation well the elf is the Standalone loader is completely devoid of a payload that's a given you can give it to to the victim it's going to stay there it doesn't need to carry any kind of payload have generic mechanisms to find its own section that it doesn't know about but we can instruct it to do so right find the offset in its own binary load it up and go from there so we create a separation the payload itself is also created separately it's not directly entangled or coupled with the loader that is going to go into no more putting data into the",
        "variable right no more close coupling of",
        "that you leave you'll also gain on dormancy so for example loader can sit there for months right without doing anything and then it can find magically its own payload somewhere in its own binary so very dormancy controls better packing",
        "one of the challenges with packing is uh they first need the temporary file system a lot of times to unpack and that's a detectable event second",
        "um they are fairly well",
        "um kind of you know traced and their behavior is the the entropy for the Packer is very uh is very is very um obvious right and then last but not least um has anybody tried to actually look back in packet or something that is frozen uh python executable for example if you're taking your entire toolkit with you it's very very hard because it's not a regular elf when you're freezing let's say python executables so in our case we need to get over that as well but that also creates a possibility for you to create fat binaries you can have multiple sections and a table of contacts where your tools reside in that binary and you basically call one by one or whichever you want right so there are possibilities from the red team operating perspective to kind of avoid a lot of different things that kind of hinder your progress and also injector the thing that basically marries the two Legos Lego pieces",
        "can also be shipped to the to the victim's side if you want to what you can do you can actually create dormant stages in different executables and load executable load those stages from one executable to another right because there is no more linear tracing you can work with your own sections or you can work and find other executable sections and load them up",
        "so that is the elf back Factory right it's it's sort of the the concept with the proof of concept if you will where you implement that sort of idea that sort of Separation um I've marked um the pieces here with uh red and blue just to signify where in a evolution of",
        "your malware deployment or location or disposition and malware uh your pieces fall right for example elf injector may be usually um for one time shot you're storing it in the safe side and you deliver the bundle which is you know what we're trying to do in the static side or you know if your environment allows you if you're not detected you can place a injector on a victim side to create those pipelines with different executables and Achieve different dormancy variables and kind of maybe even do it across um you know various binaries if you will but um so payload attachment and reattachment in field can be achieved the um the other curious thing we've talked about the we we said that fileless malware is preferable but the reason why it's preferable is because detections are less instrumented on a memory right than it is on disk however it's a statement that is not always true and you have to see uh in a specific environment what kills you and what makes you live a little bit longer right and so for example if you if you uh if",
        "you blend into the noise and that noise is disk so be it right you you adapt and overcome right in the disc land if if you are very um in in very kind of quiet environment that is instrumented by defense then you may try different things and file less malware may work for you but to show how we can actually load section in a fileless manner we",
        "um we we have some things in the elf pack that allows you to do that we're going to go through that as well but um the main thing with with sections and uh loading into",
        "the memory is that you don't need to do and protect and protect is when you have a piece of shell codes somewhere in your binary you load it up and say okay we'll make that make that segment executable and the moment you do that um nobody knows what's going to happen right so mprotect kind of kills you um and uh payloading section is that you can have two loaders nothing prevents you from dropping two binaries that are completely different to loaders that may load uh each other's payloads off of each other sections right so a lot of giving you a little bit more flexibility into what you can do with static things so the file is execution um there are two options that we've implemented um that are known so far at least to me option A is the user exec um essentially it's the we take a metal payload for for this demonstration it's which is really just a generation of",
        "implant from Metasploit and we use",
        "uh user exact to basically overlay the section that gets loaded into onto the memory of the loader itself wiping it clean and therefore there is no exact uh system call right and we're going to see later how we detect that and we can kind of move past the detection there so user",
        "exact uh knows the center knows this exit which is useful but the downside is that you will never use that loader again because the memory is overlaid you can't really perpetually do anything with that loader anymore in memory right and the other beauty of shipping sections in the in the payload in Standalone section is that you can have uh real binaries you don't need to do any kind of uh you know things that you would with the Shell Code if you can turn your your malware into an elf and dock it dock it into the loader that's all you're going to have the second option b is a memfdcreate which is you know kind of known to a lot of Defenders um it creates Anonymous file in the proc file system and it executes a Cisco 34",
        "319 I believe um to do that right but it's it's also detectable it has the exact the e in it but the plus is that you can do it perpetually more than once",
        "so as far as detection",
        "um if you take about so we're talking about static things so we have to work towards the static detection as well if you take bin walk and if you take metal which is msf payload which we're working with here just for demonstration purposes and you run a build block on it it's going to light up like a like a Christmas tree right it's gonna be very very even if you um obfuscated then it will still figure out different heuristics to latch onto the way uh metal works right but if",
        "you're running a bin walk on sectioned loader that has a section to it attached to it then you see very few things and those things are even less because what you see in the slide there is just me turning on debug in my uh executable um to to be able to show where um you know the difference usually you would not see anything okay now bin walk is is good because if you are Defender you can actually uh look at the entropy of executable and see how much how well it matches with uh with what you expect and so from that perspective uh section docking actually moves the needle out a little bit right because it's no longer your metal that you're deploying it is your your bundled but it's done such a way that it changes the entropy so but but for for for for people who will be working with this concept and who needs to detect that um you know use it use the entropy uh to detect that and also the dynamic side I know we're working with the static side but the dynamic detection is also an anime of ours um so there are a couple a couple of couple of things to take care of so BPF in Linux world has come up to be a very useful tool for Defenders to look at things and uh essentially it's a kernel uh instrumentation that can be modified at the user land and basically say hey here's the trace point that I would like uh Colonel to look at and report it back to me if you know something happens some event happens or a system called called right so for example CIS enter MFD open MFG exit or remember the yeah exit MMD",
        "open or uh Center exact so BPF",
        "um can do that for you that's why we wanted to use the user exec or MFD to be able to play with it a little bit right it depends which environment you're in um you should be able to uh to do that and the other thing is Yara right um Yara the way it works right now from command line it doesn't detect section loading but you can actually instrument it from if you drop into uh we'll see that later there's a Code out there that can parse the elf and basically look for SSG node sections or maybe you can do it by by size whatever the case may be however well you know your environment and what you're expecting it to be so now the demo I'm gonna narrate through the demo uh there are a lot of moving Parts we're gonna see execution of through user exec",
        "uh we're gonna see docking obviously and then we're gonna go through some of the detection capabilities and and see how that they manifest",
        "all right so we're starting up with the setup simulated environment um different tabs the victim tab where you obviously deploy your malware",
        "um and then you we use metasploits uh callback to basically catch HTTP as reverse payload just for",
        "the for the sake of it right you can use anything you want to to catch that but essentially that's what it is we don't have any any section sessions right now so let's just try to dock the",
        "uh the section with our payload into into the loader marry them up together right like Legos so the loader or the Packer takes the loader and takes the uh the metal elf which is the payload and says okay well here's my cradle I'm gonna give you a cradle which is you know the usable part of it um that you're gonna ship to um to the victim side and um I'm going to specify the name of that section where the loader is going to look uh for",
        "um for it's for the section it needs to get the payload out or whatnot and then some of the other features of that of that loader is that it has a way to mine the keys out of the section to decrypt the payload itself and so one of the uh things that we've done here is we're saying okay well go ahead and uh use a another section really the key the keys uh had a block is going to be and then I'll give you a key for it right so we can play with uh metal on top above your station on top of mining your own keys out of the block right so just uh just an example what we had to do for for that engagement to be able to do that once this is done uh we can we can actually launch oh yeah so we're seeing that the there are different options there's memfd or if you want to do user exact if you want to background the execution or if you want to change the name in the process table or uh whatever the case may be you you should be able to do that um and also last but not least is to you you can pass arguments to your payload so for example payload may have some variables that it needs to have and the loader should be able to uh to kind of do that for um for it",
        "so let's see how we can actually execute that",
        "right so we're specifying the key that the loader is going to look at a bunch of debugging information don't pay attention but essentially that's what",
        "happens user exec loads the the elf section that is being found right and then we go back to our our callback and we're seeing the session session here it is a full-fledged session right we can do anything we want in it uh the payload came from from completely unknown binary that gets docked to the loader and just to kind of show that it doesn't only get created but you can actually run commands through it right but the Curious part about it after this is done right is we're going to repeat the exercise but this time the exercise is going to be geared towards how you detect and what you see on the back end so clean it all up um start it back up and let's let's just look at the detection so the detection part um first of all let's look at BPF Trace in here we have a configuration file where we say rudimentary things like Center exact center",
        "um uh exit an MFD and whatever the case may be and just basically say hey give me a flag where I detect something on a system when that happens so BPF Trace is is I I think is a breakthrough I think it's very useful but we obviously need to work around that to deploy BPF Trace it's a it's a super user capability you would have to have um on on the system you would do it obviously as a um as an admin or as a security personnel",
        "um and we'll repeat the same exercise only this time we're going back to how detection happens",
        "so my tmac session is a little bit in the mix here um here we uh do the bundling again um to be able to to see how obviously the assist exact happens because we are executing the shell command and then we're launching the the the loader uh or the Cradle which is a loader with with Doc section and uh the only thing that we see after that is uh as far as CIS enter like a system call which is supposed to execute something some payload we don't know what it is it doesn't have HTTP callback it doesn't have any network traffic all it does it has hostname and that's unfortunately is a courtesy of metal itself there's not much you can do unless you can clean up metal itself and and uh get rid of that but I believe it's done so you can actually connect to something and you have again you have a session um only now BPF tradition doesn't see the HTTP callbacks or anything like that innocuous uh host name call right",
        "Yara uh similar uh tracing only now you",
        "have a code that should be able to do it at the static site uh and you say okay well let me go through all my executables on the entire system dump SSG nodes for example or",
        "maybe dump some other sections and see what what I can get from there right because now as a Defender you should be able to worry about the sizes of your sections what type of thing is in there and whether it's sht node or not and why SSG node is in this executable and why is it why there are more than one right so you really need to kind of go through and uh and see that so not obviously not a lot of uh environments are instrumented against that at the moment so we can Live Another Day right if you will but as you can see SSG node is uh is is really a large where the payload is it's um it's not very good Yara you",
        "know has API interface and um Defenders can go through and uh detect it",
        "um through their tools",
        "so",
        "that's basically what lpac elf back uh does",
        "so the takeaways the takeaways are help",
        "suction docking lives in a gray area between",
        "fully static compilation of your payloads into your loaders right and",
        "allows you as an operator malware writer to be able to kind of stretch your lifespan depending which environment you're you're in because it gives you more flexibility if you have more flexibility on the dynamic side you now get more flexibility on the static side yet you may achieve dormancy you may work in air-gapped environments if you want right with some variable because you can have multiple payloads stage in different sections and you can kind of call whichever you want elf Duncan achieves ABI not API compatibility because elf is the common denominator what we're working with uh so no API changes happens unless elf changes which you know it's been on version one for 30 plus years",
        "um and um you know elf docking overcomes uh uh Packers in memory so you can bring your impact you can bring your Frozen uh",
        "interpreters if you will right like Ruby or whatever the case may be and uh you do not have to uncompress you do not have to have any kind of header and you don't have to have tmpfs to be able to do that from the defensive perspective we've shown what uh what defense can do how they can do both an aesthetic side Dynamic side and uh you know",
        "kind of say that that's a new way of of bringing them malware into into the environment and create tools against that but the offense obviously can work further to do deeper packing do encryption as we've done here and uh we can use the concept of factories to basically borrow cradles borrow different segments of different executables to continue living in the um in in the victim's land so we've got three minutes left uh I can take some questions and here's the code for the proof of concept um you guys can you know it's it's MIT you can uh extend it play with it submit bugs right",
        "and I'll take questions if any",
        "[Music]",
        "cool thank you very much I'll be available outside or you know if anybody has questions offline I'll be able to answer thank you very much for coming [Applause] [Music]",
        "foreign",
        "[Music]"
    ],
    "GM1PxZPiLMk": [
        "[Music]",
        "foreign",
        "black hat it's been a long time since I've been here and it's even longer since I was actually presenting at black hat so it's good to be back so yeah we're going to be talking about Kerberos the clues in the title um just a very quick overview of who we are if you don't know I'm James I work in Google in Project zero specialized again finding interesting bugs in Windows yeah my name is Nick and I work an adversarial r d at netspy I also love fighting bugs in Windows so",
        "so of course this is only a 40 minute presentation it's quite short in in the grand scheme of things so we have to make some assumptions about UV audience",
        "first that you have a reasonable grasp of how Kerberos works or what Kerberos is because unfortunately we just don't have the time to actually go through that and tell you all the nitty-gritty details",
        "we're also going to be doing some stuff which sort of is related to existing remote attacks in Kerberos so having familiarity with those sort of parts of Kerberos is quite useful as well and this is not a talk about attacking Kerberos remotely this is all about privilege escalation on the local machine so if that's not really your thing then unfortunately it may not be the talk for you",
        "so let's actually start with a bit of a background on where we're going to go with this presentation",
        "remote clients to remote servers however in Windows at least there's nothing actually stopping you using Kerberos to authenticate to the same machine so when you log on to your Windows machine joint domain join Windows machine you make a request out to the the key distribution center with your",
        "with knowledge of your password and that generates something called a ticket granting ticket and this is then used to make authentication requests to other services inside that ticket granting ticket is something called a privileged attribute certificate or pack and this contains basically your user identity it contains who you are what groups you're a member member of",
        "so when we want to actually do Kerberos authentication we wouldn't actually just physically go out and use TCP sockets to talk to the KDC instead we'd use something called the sspi interface which is a way of communicating between user mode and lsas which will be LSA which is our local security Authority which is where basically authentication happens on Windows so what we usually usually do is call which an initialized security context and this would make a request to to the LSA and call into the Kerberos dll which is running inside the LSA process it takes your TGT and you say Okay I want to make a service authentication request to a local service please so for that you need something called a service principal name and this is like a descriptor of which service you want to talk to so in this case we're going to host slash ABC which is a service principal name which is owned by the current system and Kerberos packages up this request into a ticket granting server request packet sends it to the KDC KDC takes that service principal name and uses it to look up a long-term key and this key is actually a derivation of the computer account password for your local system so every every domain join system has a computer account which has a password and from that a key is derived now this key is then used to encrypt your service ticket and what the KDC also does is it can verify that that pack that it receives it can decrypt its tdt and it copies that pack that group information out of there into your service ticket so when you send it to the service with a different type of Kerberos packet the AP request the server can call another LSA function",
        "accept security context which will take the computer key it knows about because this is the local system decrypt the ticket extract the pack and then use that pack to generate a Windows access token and this can then be used to impersonate the user on the local system and perform operations on their behalf however the problem here is we've not gained anything like that pack which we authenticated with is just our pack so it has only the groups that we were granted by the KDC in the first place we've gained no privileges by doing this however there is an existing attack uh remote attack which allows you to basically specify an arbitrary pack and that's called the silver ticket attack so let's see how that would apply locally well first we need a key of some kind but we don't know the computer accounts key but it turns out we do know a key we know our user's key because every user in Kerberos has its own key derived from their password so we take our password we authenticate to LSA",
        "we can then in our own process generate that same key it requires nothing other than the password and we can just completely build a fake ticket for an arbitrary service and this has a pack which can contain anything we like and then we put we ourselves call accept security context and we get privilege escalation because we can say we're we're an admin so please give this admin on the on the machine we impersonate that token and that's it job done simple so let's see that actually in action",
        "so I've got a Windows 10 machine here and I've written a lot of",
        "dot net code I'll give you a link to where a lot of this code lives later on but we're just using Powershell here to interact with that and it's very it's relatively simple we build some basic configuration we then derive the key based on the password we've passed in and then I've written a function new Kerberos silver ticket which will take that key take what groups you want to be what user said you want to be and just build one of these fake tickets so we'll never talk to the KDC at all um next we then build an AP request which will allow us to Bend Court accept security context and then there's just some code here which passes that AP request with the silver ticket uh to LSA and hopefully we get back from here we can just ask the server context for hey can you give me that access token back please",
        "so we can just run that we do need to know the user's password but in this particular case we know the user's password is password to we can we actually uh are unclear on that we can do get NT token",
        "so I'm the Bob user",
        "and his password two oops oops gotta make sure it's uh the Correct capitalization so that that has worked and we can actually uh I've got a nice little GUI you can just bring up uh the token information and this is Bob and his groups so if you run silver ticket our silver ticket script",
        "uh we put in the password of password too and it doesn't work uh but that's that's not a good start to the presentation fortunately this is expected so I will pass you now on to Nick who's actually going to explain why it's expected yeah so if we look at the error message it's pretty generic obviously we could make some guesses about maybe our code being incorrect or the ticket we're ultimately building being invalid in some way but actually where we have to go is into the internals of LSA specifically this Kerberos Security package to understand where it's failing and we'll give you a head start on this one the issue stems from a thing called Pac signature validation obviously James uh discussed what a pack is and it effectively contains user information like privileged groups well that information is pretty sensitive so tickets secure",
        "this in an additional Way by signing the pack with technically it includes three signatures we're only going to focus on Two And when a machine wants to validate a pack it can take the same key that was used to issue the service ticket calculate a local checksum value and to Simply do a comparison against the server signature now we have control over that key because the key is derived from the user's password so that's not where it's failing where it's failing is in this curb verify pack request where effectively the KDC signature and The Logical checksum value get shipped off via net logon over to the KDC where it can use its curb TGT key to validate that the KDC signature which is actually a checksum of a checksum is valid and it can return that result back to the machine so this leaves you with an interesting question which is why do silver tickets ever work what are the requirements for getting silver tickets to work because we're always forging packs in those the answer is pack validation isn't always enabled and we've categorized three rough buckets where this pack validation does get disabled the first one derives from your logon session so if you're in a quilt system equivalent logged on session you have TCB privileges you're running as local or network service there's one that stems from your credential handle specifically a flag on the credentials handle this cred attribute pack bypass glass flag it can be applied manually to a credentials handle if you have TCB Privileges and it's also applied automatically in some specific instances that has to do with the service Sid so you know we're talking again about service accounts is Apple users things like that and there's a strange bucket at the very bottom that stems from a flag on the context that says ASC ret use session key now if you go into msdn you get a really generic answer for what this flag ultimately does and it has something to do with keys derived from keys but we certainly want to start digging into this because it seems like something we might be able to control luckily if we jump over into 4120 the Kerberos RFC we can find references to a flag use session key that's applied in AP Rec messages and it effectively says that when this flag is in use the ticket is encrypted with session key from the service TGT rather than the server secret key or its long-term key they refer to this as user to user authentication so for the remainder of the presentation you'll hear us say user to user or Udu it effectively refers to this process where you have the curb TGT key which is used to issue a ticket granting ticket with a pack and instead of another service ticket or the the service ticket that gets issued on behalf of that TGT being signed with the server's long-term key the session key is instead extracted from the ticket granting ticket and used instead now both of these are information that you know are pretty lined up like if you have the session key for a TGT you would generally expect to have the user's password but",
        "we want to get the session T and it's not necessarily as easy as we might hope so we're doing all of this because we want to disable pack validation but if we're logged in as a user and we actually go and ask LSA to give us a TGT with a session key we'll unfortunately be left with a bunch of null bytes and this is a security protection that LSA puts in place because a TGT is functionally like a password right like having to take a granting ticket lets you authenticate to services on behalf of a user so it would be like querying LSA for a short-term password or the user's long-term key lucky for us this problem has already been solved in some form by a trick called TGT delegate or unconstrained delegation TGT extraction and we won't belabor this particular layout too much or exactly what's going on here but functionally what we're abusing is the fact that LSA protects the ticket granting ticket very well but it doesn't protect service tickets quite as well and there are particular instances where a service ticket is marked for effectively a delegatable ticket and it will embed the entire TGT and session key of the target user into that ticket so we can effectively ask initialized security context to build us a service ticket for any service on the KDC that host is marked with unconstrained delegation the outgoing",
        "service ticket will effectively have the TGs as well as an authenticator value that's encrypted with the session key from the ticket itself and we can get that session key fine because it's a service ticket and inside of that authenticator is a checksum value which is actually not a checksum it's a GSS checksum structure which contains a curb cred structure so this is great we now have a way to get an active TGT and its session key from LSA and we also believe that the use of this session key when we're signing our silver ticket should result in arbitrary pack data bypassing validation so the last question we have to ask is what are we actually going to do to the pack to get admin we know the pack is critical we know it contains critical information the substructure we're going to focus on is this logon infrastructure it effectively contains all of the information For What rids and the domain said effectively all the IDS that locate or identify user privileges so the ones up top are pretty self-explanatory you also have extra SIDS and resource domain SIDS Sid filtering if you've heard of that before applies to all of this and there's a lot of nuances there which James has a beautifully documented out there but for the most part we're actually just going to focus on adding arbitrary group rids so we can add things like the 500 and 512 rid which apply to the domain said that the user is in and functionally becoming domain administrator on most local machines would also make you regular admin so I'll pass things back over to James and he's going to see if we can get pack validation disabled properly this time",
        "so yes we can um",
        "go to another demo so in this particular case it's uses the user okay so it's pretty much exactly the same code as we we've just seen the main crucial difference is we call a function I wrote get user TGT and that performs basically that exact attack that Nick has just described where you get a delegation AP request",
        "decrypt it and return the TGT with its own session key we can then extract the session key from that and this will of course be now non-zero and then instead of our long-term key so of course at this point we no longer need a password so that's kind of a useful benefit as well of doing this that you no longer need that user's password to perform this attack you can call the new Cobra silver ticket function with the session key instead of the TGT instead of the password key derived key and then basically almost everything else is exactly the same we make sure that the local Kerberos ticket cache has our TGT just to make sure that it's definitely going to use our TGT rather than one of the other tgts the user has and then we just call accept security context with our silver ticket and hopefully it all just works magically",
        "so we come back to here and as I say we don't need to pass a password the script itself will always set by default we",
        "want to add domain admin groups the main number groups is useful because we can't admin due to Sid filtering we can't add the local admin group but if we add the domain admin group then by default all domain join machines have local administrator the local administrative group contains the domain admin group so that will give us domain admin we also make sure that we set the integral level to medium",
        "um close that down and we run that and no errors Hallelujah right I think we're done um so yeah I think that's the end of our presentation thank you very much for coming so uh we can see possibly in here",
        "um or I can just show it here I can do and get NT token groups and from token and we can see that we are now built-in administrators so what's not to like um so my tooling has an invoke NT token function which takes an access token and will",
        "impersonate it for you and run a Powershell script while impersonating that that script so we can go and try and write to save the windows folder is that content",
        "windows",
        "test.txt",
        "and so this should have now given us privilege escalation however we've now",
        "got another error and again unfortunately this is this is not intended but is unfortunately a byproduct of what we've done and it's all talking about impersonation levels and that's that's not usually a good sign so let's pass it back to Nick Ferreira to continue the discussion all right we're getting closer here um and I'm actually going to pull out an old diagram it's one of my favorites of James where uh he's meticulously laid out all of the flows for checking whether or not one particular entity can impersonate a token um now this is a long list and they sort of feed into each other but we can certainly start going through it and thinking about where we might start running into issues with this token that we've built well up first the token level being under impersonate doesn't imply here we also don't have SC impersonate privileges so we wouldn't get the immediate bypass the token IL and the token user can both be controlled by the pack and when James was looking at it everything looked fine like it said we were domain Bob the token Integrity level was medium we just had domain admin groups on it the elevation check beyond that is a Nord if the user is not a UAC admin which we're not and there's this last interesting check which we can also all thank James for and it's one final check on the token that looks to see if the target token attempting to be impersonated exists in session zero and the users session who's attempting to impersonate the token is not session zero this is actually a really common thing using loopback authentication to manipulate tokens on Windows is a known attack and in response Microsoft has blocked session zero tokens from being impersonated anywhere else and if you didn't know Network authentication tokens go into session Zero by default so we have an issue and we're persistent now we're looking for instances where a token would be moved from one session to another there are probably a lot of places we could look for this information we're going to start just in the lsas server and we're going to look for instances where it calls NT set information token or the token session ID info class it's probably a good first start now granted there could be a million security packages or weird dynamically loaded code that does this but we end up with a nice little flow chart we can start going through it and investigating well the bottom function that looks super juicy the update user token session ID is unfortunately locked behind TCB as you would imagine the lsap session token isn't particularly useful here it doesn't really migrate tokens between sessions it's just for duplicating a token and applying it to a logon session the LSAT build and create token and filter elevated token full both tend to deal with elevated and linked tokens so things that would be related to UAC split tokens we could maybe get something useful going on here but we'd really like to ignore UAC it's just a pain for this whole thing so we're left with this really interesting flow from lsap create token ex into a really unique function called lsap applied loopback session ID now what's particularly unique about this flow is the lsap create token ex is exactly where our call Flow already goes that's what accepts security context and the Kerberos package calls underneath when the token is finally ready to get built so James and I started wondering what is this function and what does it do well lucky for you we've effectively reversed it and understood its implementation to some regard essentially the tracking mechanism to identify instances just like ours it's to identify instances where a client and a server are talking to each other on the same machine and for some reason the protocol hasn't identified that it's what we would call loopback authentication and this is probably in response to maybe some sort of token session ID refactoring code but regardless it's really unique when a user calls into initialize Security Contracts a begin tracking function gets called and effectively a entry gets added to this table with the session ID of the user and when the buffer is being returned back out of initialized security context and remember the buffer we know is an AP rack but depending on the protocol this could be any you know Network protocol buffer that buffer also gets fed into update tracking and a hash value gets rolling and this is a pretty solid hashing it uses like random goods directionally and it's built on AES C-Max so we're probably not going to attack the hashing function itself and when the except security context function gets called that AP rack that was passed out of lsas is passed back in begin tracking gets executed and then when a token is being built the code will effectively reference this table to find instances where the hashes match and in that case it is identified an instance where buffers were passed out of lsas to a client and then passed immediately back into lsas from a server somewhere on the host so this is looking really promising to us we now have a primitive where we can get a token moved between sessions and it applies to our situation nicely but we have a few caveats one is we need to start calling initialized security context which James has pointed out we don't do thus far we've just been building the AP Rex manually in Powershell and submitting them via accept security context but we need to get that hash value rolling so that the function can actually line them up later on and we're kind of left with a conundrum where we need to modify the pack inside of the AP rack which would imply that we're modifying the buffers but if we touch the buffers the hash lookup will break and our token will be locked away from us so we kind of have this no-fly zone around our code and the security context functions well we had Curiosities about how exactly this tracking mechanism worked and if you dig into it you find that for every security buffer descriptor transiting in and out of lsas the hashing code will only be interested in buffers where the buffer type matches exactly SEC buffer token in other words it's a token type and that's for those who aren't familiar with those apis what would hold your AP Rack or your ntlm challenge response luckily for us there's actually a high attribute bite in this SEC buffer type and it can hold things like whether or not the buffer is read only or read only with a checksum so we have the token value yes but we can also bitwise or it with say a sec buffer read-only flag and maybe break some assumptions about whether or not the hashing code would use our buffer and we've done exactly that's effectively type confusion and accept security context where you have a buffer descriptor that contains two buffers in it both are marked with token but the former buffer is bitwise or with this read-only flag so we can put our modified AP rack data in there our malicious data and the benign data that we got out of lsas in the second a buffer and the loopback library will refer to the second buffer when it's doing the hash lookup and hashing code and Kerberos will actually use the first buffer because it masks away the upper attribute byte when trying to find a token so third time's the charm we have a primitive for getting the tokens moved I'll pass it to James to see if we can finally get this working Okay so we can now see um there's a fake buffer script and again we get the two users TGT but",
        "uh The crucial thing here is instead of using um we're not going to use our modified AP request directly so we create this fake client for our AP request and then we actually have to call as Nick said initialize security context so we both set up a client and a server authentication context to talk to lsas but the crucial thing is we have to do a few updates because users to user actually has like a few ancillary tokens that we need to make sure are negotiated but once that's over and done with uh we can actually then build two security buffers the first one which we want Kerberos to see is type token but it's read only and contains our fake AP request with our silver ticket and then we build an LSA buffer which we want the LSA hashing algorithm to what uh to see and because the LSA code doesn't know anything really about the package it's talking to it just goes oh okay I'll just I'll just hash that one it gets mistaken and only hashes the one we give it and so hopefully this should then actually allow us to get a token in our own session ID",
        "so we do token",
        "a fake buffer and again we don't need to pass a password we got no errors no errors are good uh if we actually look at the session ID it's now the previous one was zero and now it's two and it doesn't have to be strictly speaking our own session ID just has to be non-zero that's all that's the only criteria so if we scroll back and go back to that uh fingers crossed",
        "it should not work hey we got no errors and we can then just read that back just to make sure that we actually wrote something test.text hello world and there we go",
        "[Applause]",
        "all right this is well and good but James and I aren't ones for uh uh leaving it there when we discovered in Windows 11 that in the loopback hashing code they actually mask out that upper attribute byte so they're doing things properly uh we're not entirely sure why we have our suspicions this was due to some refactoring code we actually think that it was maybe fixed in Windows 11 as a response to other refactoring and not actually a security fix which is why it hasn't been backboarded but either way our double buffer trick is not going to work in Windows 11. and you know James and I James in particular is a huge fan of Windows 11 he wants to make sure all of his tools work there and we return to this diagram where we have this sort of no-fly zone we have to sit here and think well all right if we're not allowed to modify the buffers when they transit in and out of lsas maybe we can modify some something about the ticket or the token as it transits to the KDC in fact we have all the key material necessary to do a man in the middle attack here right like we're the ones who have the session key to the user to user ticket we could decrypt it in transit so we could have a KDC shipping back a valid pack inside of a TGs rep if we could get in the middle somehow we could use our session key unlock the pack modify the the group rids and then package it all back up and ship it off to the machine the machine would then cache that ticket and when it was used for the AP rack and we could just self-negotiate we're not actually needing to modify the ticket at that point because as it stands in LSA as it's stored in LSA it's malicious but we're left with another problem here especially when we think about Windows 11 which is that credential guard is on by default and also we like thinking about how to break a credential guard and related things so this affects our kill chain thus far because it prevents unconstrained delegation in Kerberos which was the trick we were using to get the session key with our TGT so now we're kind of back to square one a little bit we need the key material for the user to user ticket but we can't access the session key for the TGT and James had the great idea of maybe just bringing your entire own KDC it's worth questioning whether or not we even need to talk to a real KDC there certainly seems to be a lot of flexibility in the way packs are processed and if we want to make this work extra nicely rather than using it on an external host or resolving Kerberos via DNS to an external host we can instead use a nice feature called KDC pinning which is effectively a request that we send into lsas and we can Bond a particular realm and bind it to a hostname in this case case we're probably interested in doing localhost because we want to run a KDC locally now if you were crazy enough to write an entire KDC in.net and then expose that KDC in Powershell",
        "you could have an attack where the entire ticket key material from start to finish is controlled by you and when we call into LSA we can pin this KDC or this fake realm to localhost and then when we Supply credentials and start issuing tickets when Kerberos goes to make a socket call it will instead talk back to the local machine on Port 88 and because we're binding on localhost the firewall is not an issue typically here and we now own all of the key material from the curb TGT to the user password long-term keys to the session keys and the tgts and we can start issuing packs with arbitrary data and what's even more interesting is those packs or the information in it don't even have to match or doesn't even have to match the service ticket the domain was actually issued for so let's see if we can take this attack one step further",
        "so yeah so now we're on Windows 11.",
        "um so",
        "the script is somewhat different now because of course we're no longer just building a silver ticket in in user space we are actually like constructing an entire KDC but I have tried to write uh the the net classes in the Powershell module in a relatively easy to use way as the relative as a KDC can be because I did initially look at things like uh using sambas KDC but it doesn't really support users to use it properly so that would that was I wasn't going to start writing Samba code so I'm sorry about that um so all we do here we specify our fake realm uh we have a password of password because it can be anything that we don't need to honor the current password complexity requirements for it for your domain this is a useful feature um and just be we build a user and then literally with that user he's called new Kerberos KDC server and give it the realm give it the domain said and your list of users and you just start it and it just sits there running on localhost we can then add the PIN so we pin that realm so any request by LSA in our current from our current thread and process for that realm we'll go to actually localhost so we'll go to our local KDC and then we pretty much just do a standard loopback authentication request we have to pass our fake credentials to LSA but it will quite happily like use those and go oh the pin I can just talk to the KDC on localhost no problems and then we get the access token at the end and hopefully everything's good so just to prove that I'm not cheating um we call get computer info and one of the properties and that is device guard uh where is it so security service is running so we're running credential guard and if we actually run our previous one um so because we got that we can't actually uh get the users TGT so there is a a simple get user TGT script I've written just to do that attack and we can't get the delegation TGT okay so our current",
        "attack Vector is is at is a problem so",
        "instead we run our KDC attack we run that no errors always a good sign uh",
        "we have such an idea of two we can see our groups we are a main member of the built-in administrators awesome and so we can obviously impersonate this",
        "to verify that we've actually got privilege escalation bye bye credit card",
        "content Windows cred dot text",
        "and no errors",
        "so just to check that again I'm not no sleight of hand bye bye Craig guard and we've basically done it even with Craig got enabled without ever knowing the user's password",
        "[Applause]",
        "so let me just wrap this up unfortunately if you go and try this today it won't work and that's because Microsoft actually fixed the issue yesterday basically",
        "yes I may have been slightly cheating with the VMS they weren't up to date um so they basically what they've done is they've effectively removed that use the user flag check and it's not even in clear why this even existed in the first place but it's one of those things that it's been there because some customer at some point needed this feature it can be re-enabled by changing one of the configuration knobs in Kerberos",
        "um you can just go into the Kerberos dll and find out what the name of that is as far as I know it's undocumented at the moment uh because it's probably one of these things that Microsoft will only tell you about if you have this particular problem in a in an Enterprise environment um so effectively are um attack has gone which is a bit of a shame but this is the whole point of security research is to get things fixed",
        "but of course there's possibilities that these types of bugs will happen again and we sort of thought about okay what sort of mitigations can we kind of think of here and none of them are perfect but you can you can apply some of them in an Enterprise environment so the first one is there's a there's a flag if you look back at that previous slide you can if you're a a non-system service so you're like a sort of an IIs pool user or you're a virtual service account you can still bypass pack validation by having the service Sid as one of your groups um but you can actually disable that feature so there is a configuration knob for Kerberos which says actually no turn this off because it's it's bad for me however it really doesn't prevent local service and network service or system from accepting packs with modify uh for accepting tickets from modified packs so it's not a perfect solution necessarily certainly won't prevent uh silver ticket attacks generally",
        "um you can also turn on you've got to force Kerberos armoring or sometimes called fast uh this would make it harder to tamper with network traffic between the clients and the KDC because it's sort of signed by the computer account's password so obviously we didn't really need it in this they wouldn't have really affected us directly but if you force it on a client so that it can't talk to a KDC which doesn't have Kerberos armoring enabled then our KDC attack would fail because it just can't it would just reject our KDC as being invalid",
        "um now we obviously demonstrated a way of around credential guard but I we still think it has value like there's plenty of things that you can do with that TGT session key that are probably perhaps not even realized at the moment and there's already some attacks so just turning that on has obviously a benefit that it makes it harder to extract key material generally and also blocking this unconstrained delegation attack is also quite useful uh and then finally like uh even if they remove say the pinning attack uh the pinning trick uh you can still use like DNS records to configure your your fake KDC somewhere out on the internet internet so having like Enterprise file rules which say only allow this client to talk to known kdc's is probably a good idea",
        "so under the tech side of things that was mitigation so how can you detect these attacks uh occurring and there's",
        "not great options like probably the best we found is in the security log there's this event 4672 which basically says this user has been effectively granted administrators style privileges",
        "and of course if a domain user who isn't a local admin on that machine suddenly is getting local admin groups or local admin privileges there's probably a problem that you might want to look at so I'm sure probably if you if you go looking there's probably something else interesting you can find but that's the best we could come up with and of course this is only a 40 minute presentation we had lots of uh things we we couldn't talk about um there's a link to my my tooling but also various links to things like UAC bypasses using Kerberos ticket manipulation remote credential guard code execution like arbitrary code execution and lsas because why not um actina escapes Etc so obviously the",
        "slides will be out and you can you can find those links directly",
        "acknowledgments there's plenty of people who work in the Kerberos space and has found many of the things that we build up our our own work upon so these are of course people we are we are grateful for and I'm sure there's plenty of people we forgot on this slide",
        "but it would be rude of me to leave without showing one more thing",
        "um as is tradition",
        "um so let me just go back to Windows 11.",
        "um I do have a snapshot updated to yesterday",
        "and hypervis",
        "thinking about it",
        "um",
        "so it's kind of like okay they've blocked our way of bypassing pack validation right well is there any other interesting way we can we can get around this",
        "so",
        "let's connect to here",
        "let's go on hyper-v",
        "oh there we go",
        "um so obviously we log in as Bob because Bob is our non-admin user because again we can't have them as USC admin because that ironically we can't impersonate an admin token if we're in a UAC user because you can bypass UIC or out of it very strange",
        "right",
        "okie dokie so",
        "we go to oops",
        "we go to our Parks directory and as I say this is updating so if we run our KDC attack",
        "um it fails as you'd expect so it's removed our silver ticket attack however",
        "if we do uh one last thing and it's kind",
        "of giving giving away that this is still a silver ticket attack of sorts because we still need to use this password",
        "um huh interesting",
        "so we have a look at the session ID we get his token groups",
        "oh he's an administrator that's a shame [Applause]",
        "and just to prove a point um",
        "third content",
        "windows test.text",
        "and there we go",
        "[Applause]",
        "so before anyone asked I did report out to Microsoft yesterday um unfortunately it's one of those things that I couldn't really report it because I didn't know whether it was a bug until they fixed the bug that we were bypassing to fix anyway needless to say um it was a bit of a last run thing um so that is the end of our presentation thanks very much for uh for attending I really appreciate and I sure Nick appreciate it yeah thanks everyone I really really appreciate everyone coming and we had a lot of fun with us and definitely check out all the material we skipped out on so we had so much we wanted to put in this presentation and we couldn't get to it yeah and I'll try and uh put up the uh the example scripts sometime later next week so thank you very much and have a good rest of your day [Applause]",
        "[Music]",
        "[Music]"
    ],
    "Tzo8ucHA5xw": [
        "[Music]",
        "foreign",
        "and Max Garrett",
        "good morning everyone and thank you for coming to our presentation let me ask you this have you ever wondered how secure it is to open a message within the desktop app you use to chat with your colleagues at work have you ever thought how secure it is to open a source code which you just downloaded from the internet within your favorite source code editor what do this electron based desktop applications have in common and how fundamentally secure are they before the year we set out to find an exact answer to discover what alerts beneath electron applications and throughout the course of one year of our research we were able to compromise multiple iconic applications used by",
        "millions of people and were able to find and hidden attack surface within electron hereby I welcome everyone today",
        "to Electro volt where we will take you on a journey to pawn popular desktop applications while uncovering new attack surface on electron so the agenda for our talk today is I will go through the basics of electron and its security settings then we will hack some real world commonly used desktop applications starting from the least restrictive to the most restrictive security settings and then I will present the novel attack Vector we discovered within electron JS framework and at the end we will talk about the mitigations so let's get started so who are we um I'm Aditya purani AKA knapstack I'm a senior security engineer at a leading automotive company my main area of expertise are appsec and blockchain and on the weekends I play ctfs with perfect blue joining me today is my colleague Max who is a security researcher at asset node Max area of expertise are app second blockchain and he plays ctfs with water Peddler",
        "so what is electron if you can build a website then you can build a desktop application that's the main concept behind electron so electron",
        "is a popular open source framework which is used by many commonly used apps such as Microsoft teams Discord slack and",
        "other fundamentally electron is built on top of chromium and node.js which means that",
        "by just using JavaScript HTML and CSS you can ship an entirely cross-platform",
        "native desktop application",
        "before diving into the bugs it is important to understand the architecture of electron within electron there are two types of process the first one is the main process and the second one is a renderer process main process is the starting point of all the electron applications main process can create multiple renderer process using a class called browser window it also has access to Native GUI apis to create objects like menu and tray",
        "and it is important to note that there can be only one main process on the other hand we can have multiple renderer process and the main function of a renderer process is to render a web page using chromium",
        "so uh as chromium is used a lot of chromium related features are used such as Chrome site isolation multiple process Etc the way the main process and rendered process talks with each other is through something known as IPC or inter-process communication module",
        "and you can also apply a lot of security settings within the browser window configuration within a flag known as web reference so that way you can control what type of rendered process you want the least restrictive you are the more vulnerable you are so let's see how it looks in the code to get a bit idea about that so here we have a file known as main.js it sets up a browser window and within the web preferences it lists down couple of security settings which it sets true or false then it loads a URL which is the web page you want to load which is google.com in this case and then it defines an IPC main which is like an event listener to listen for IPC call in this case it's open URL on the other side on the rendered process it is divided into two parts the first one is preload.js and preload script contains code that is loaded prior to the web page so preload script run within the renderer context but are granted more privileges by having access to electron",
        "or node.js API",
        "context Bridge which you see in the slide is a way to safely expose an API to the web page which could be later invoked using a window object so here we have a web page which is hello world and the web page uses the window.electron.openurl and Supply argument to pass it to the IPC main.eventlistener",
        "so as we can see here uh you can put whatever security features you want to get whatever render whatever process you want So at the least secure you are whenever you use like something like sandbox is equal to false context isolation is equal to false and node integration is true because in this case the web page has directly accessed to the node Primitives and in this case xss is equals to RC because someone can just do a required child process and exact uh whatever shell commands they want to do electron developers also thought about this and they came up with something known as context isolation so as you can see in this slide in the renderer process uh now we have two separate contexts the first one is the application context where the application JavaScript runs and the second one is an isolated context and within this isolated context the preload.js which we saw earlier and electrons internal code would run so it is completely isolated and the web page now doesn't have direct access to node Primitives so this is the same concept we use in Chrome as well in Chrome it is called isolated world where the extensions content script JavaScript is",
        "different from a web page JavaScript so there is a isolation here so throughout our talk the attack surface is the renderer process so we will be starting by abusing the least restrictive electron configuration and",
        "then move on to the complex exploits so to keep the slides clean let's keep in mind the following terminology so we have node integration context isolation and sandbox and don't worry about the node integration in workers or node integration in subframes yet because I haven't talked about it but we'll talk in the coming slides so the first situation um node integration is true context isolation is false and sandbox is false this is s insecure it can get so it is really easy to get a shell as node is directly exposed to the renderer the only thing you need to do as an attacker is to find a way to embed a job a job within the webview So within the diagram the circle marked as red is where we are targeting currently so I am going to present one of the case study which we found in a real world commonly used application known as a vs code so vs code is a source code editor where you can open a project and you can navigate and browse through the source code so we escort had a feature where it asks before the opening source code that do you want to open it in a restricted mode or do you want to not open it in a restricted mode so as a part of our this use case we found a way to perform a remote code execution in vs code in the restricted mode and so as a part of our attack Vector we had a limited xss and we turned into a remote code execution chain let's see how it works so this is like a pretty uh large schematic of how the exploit looks like so we have three frames here which are marked by the square symbols so the one which is in green is running with the most strict electron setting whereas the one in the red is the one which we just talk about where node integration is true so as an attacker you have an exercise on the markdown previewer which is running in a very restricted context and the goal is to move from that green to Red somehow and let's look at how we can do that so first of all let's say if you open a markdown like phone dot MD s this is subject to a strict CSP policy what you would do is you would perform a meta redirect to an external website and once you are on the external website you can run any JavaScript you want so once we had this exercise on step number one what we do is we leak the extension ID of vs code as you know you can install extension in vs code and those IDs are a pretty long string which you cannot guess so once we leaked that extension ID we found an xss on one of the other window which is vs code webview and what we did is we found a way to perform a post message call to that particular frame so in this case we deploy our xss using a post message on vs code webview and then we deploy another another xss on the same webview to perform a channeled do read which will leak a current directory where the project is downloaded on the victims machine through vs code file so vscore file is a file is similar to a file protocol but the catch here is you can invoke it uh on from a different origin not from the same origin so once we leak the directory what we do is we perform a part reversal on the vs code file by doing dot dot slash dot dot slash the path to an HTML file within our project and this HTML file what you can do is you can record you can do top dot require to get access to node Primitives and pop a shell so let's see how this looks in the demo so our victim has opened a project in a restricted mode and they will navigate a file",
        "and as you can see we have popped the calc in vs vs code which is the remote code execution part",
        "so we received 6000 dollar Bounty for this remote code execution bug in vs code we had a really a prompt and Swift response from the Microsoft team for this let's move on to the second case study in this case let's increase the level of restrictiveness a bit so we turn on the feature which is called context isolation to True which was false in the previous scenario and if context isolation is enabled the node is not directly available to the renderer so you just cannot do required child process and phone a shell so there are two ways to exploit this um first one is you can use a chrome V8 renderer exploit because sandbox is disabled so you can go to like a CR bug and look for a crash POC and get your own end or you can try to find a way to disable the context isolation somehow which we'll be talking in the coming slides so in the schematic let's go again so we have an xss on the application layer and this time there is an isolation between where the node and electron API decides so the previous attack won't work here so the second case study we have is a remote code execution on Discord which is a commonly used application we found that Discord was using an older version of electron which was 12.14.1",
        "and this means that it is also using an older version of Chrome indirectly which is 83. so when we were looking for attack surface in Discord the most interesting one was a video embed so let's say if you send a message to a vid team on Discord with a YouTube link you will see that the video will get expanded and or someone can click on it so we found an exercise on one of the third party embed which is Vimeo and we use that to get our initial JavaScript execution on Discord but the catch here is whenever um there is an iframe in electron based application it is sandbox by default so we cannot just simply run like a render or exploit of chrome 83 and get an RC so we dig down deep in the Discord and what we found that we found a misconfiguration in a new window file Handler which can be used to open a new window using window.open and this new window had a Sandbox disabled so what you can do is you can open a window with a location of an external website controlled by you and then you can run your Chrome V8 renderer exploit to get RC let's see the demo",
        "so attacker is sending a video link to the victim victim will go and press on it",
        "and as you can see this is the new window which I talked which is without sandbox and you can pop a calc on Discord and this can be done improvised by just putting stylesheet to make it more lucrative and conduct social engineering attacks",
        "so we received five thousand dollar Bounty from Discord and Discord fixed it by upgrading to the latest electron version and fix this new window misconfiguration by limiting uh to not",
        "have redirection to external website and most of you already know about this attack it's common knowledge to use a V8 exploit when sandbox is visible in electron app but what I'm showing you is it is really common in real world applications to have this sort of misconfigurations",
        "let's go one step further in this case we turn sandbox to true but now we have context isolation to false which was true earlier so s sandbox is enabled on renderer we cannot directly run like a chrome and exploit to get RC because this time SEC comp or win32k lockdown will stop us by blocking bad sys calls as node integration is false no node modules are exposed to the renderer so you cannot do the trick in the first slide which I mentioned but now the catch here is there is no ISO between the website you load and electrons internal code or preload code in the diagram now you can see we had two isolated contexts before but now there's this one block which runs electrons internal code your application and the preload so electrons internal",
        "code is written in JavaScript as well so what can you do with an exercise can you do something like prototype pollution to overwrite electrons internal code let's see so how to get special so if the version of electron app is less than 10 then you can use prototype pollution Gadget to leak a remote module or IPC module so remote module according to electron documentation is a module which is used to bridge JavaScript objects from the main process to the renderer process so once you have access to remote module even in a sandbox window it is Trivial to get access to node Primitives using it for electron version 10 to 14 electron developers thought about this and they disabled remote by default so they toggled the true to false so you can still try to leak the remote if application developer has enabled it explicitly or you can find an IPC misconfiguration for electron version greater than 14 which are like the newer electron version remote is completely deprecated due to this security concern of how it can allow you to give node Primitives on a Sandbox window so you can still use a prototype pollution Gadget to leak IPC module but in this case what you can do is after leaking this IPC module you need to find misconfigured IPC within the web app or within electrons internal code so what I'm showing you here is a novel prototype pollution Gadget we discovered on a late test electron version and this concept of prototype pollution is not unknown it was first presented in 2018 by masato kinugaba on an older electron version but this is something which which works even on the latest version so as you can see we overwrite certain inbuilt JavaScript function which is call and ends with and then we on the number three we get access to webpack require which contains all these",
        "modules which we want to use to get RC on your favorite apps so for the situation like this where sandbox is false you may be wondering you can just run a renderer exploit but you can leak this webpack requires using prototype pollution and also get access to like node Primitives or electron common API to pop your kelp and you may be wondering why to use this and not a V8 exploit and the reason is this is much more reliable compared to a V8 exploit for example a second reason is that you don't require binary exploitation knowledge in order to perform this attack it's a complete web attack and the third reason is what if the application you are targeting doesn't have a chrome end in the first place then you need to be creative and use something else so for an example where sandbox is true you cannot get access to the node Primitives but what you can do is you can leak electrons IPC binding so you can leak two ipcs which is IPC rendered internal and IPC uh just for electrons internal",
        "IPC and then you can invoke multiple developer defined IPC channels like open URL which I showed you earlier or you can invoke electrons internal Channel like electron star or guest star",
        "so let's take a case study uh for Microsoft teams where we will where we were able to achieve local file read and were able to perform an account takeover on Microsoft teams user so Microsoft teams was using electron less than 15. we found an xss uh in the renderer where you send a message to someone using a zero day in CK editor so we perform a mutation exercise in C cadited which was a zero day finding which we did this is something which is used as a rich text formatting for markdown in Microsoft teams so once you had this exercise what we noticed that when you open a new window context isolation is disabled but",
        "sandbox is enabled so we can use that same attack Vector which I showed earlier so we use prototype pollution Gadget to leak IPC using our xss and",
        "once we leak IPC we leak the electrons internal IPC which is IPC attender internal to make an IPC call to a browser process which reads a file given a path so think of it as like a filed read or local file inclusion attack and this was a misconfiguration within electron which was fixed in the electron version 15. and as you can see you can perform an IPC invoke with this electrons internal API and Supply a path name so let's look at the demo how this is going to work",
        "so this is where we have our xss and on the attacker's website we can see that we leak the file which is desktopconfig.json and within this file that is a JWT or jot token which you can use to get access to any user account which you want to Target so that is uh the impact of our Microsoft teams exploit so we received three thousand dollar Bounty for our Microsoft teams exploit which is pretty nice but let's take one step even further what if everything is green like what if an app is running with all proper security settings so",
        "this settings is used by most of the application node Primitives are not exposed to the renderer context isolation is enabled so we have a separate context and sandbox is true so to hack this configuration is the main part of our research so here in the block diagram we are mostly targeting this sandbox renderer portion",
        "so at this point you might have a question that is this just like having an xss in a browser because everything is enabled all security settings and the answer to that is no the reason for that is that electron is not the same as your commonly used day-to-day Chromium browser for example so electron code is",
        "something which is a combination of chrome and electron specific code so",
        "what if we find a way to abuse this intersection between electrons code and chromium code and somehow subvert all",
        "the defenses which electron had let's see so first I'm going to present a CV which we discovered in electron which is enabling node integration in subframes from a compromise renderer so what is the node integration in subframes so let's say you have a website for example.com and you create an iframe within that website which is to load another web page now let's say if you want to provide access to node Primitives or preload scripts within this iframe you need to enable a feature flag known as node integration in subframes because by default it is false so this is a way to provide access to preloads or node",
        "Primitives to your iframe so for every subframes like iframe or child Windows if node integration is enabled and sandbox is disabled on your parent window which is your example.com then node.js will Primitives will be available in subframes if node integration is disabled and sandbox doesn't matter even if it's enable or disable then all your preloads will load within this specific iframe so let's see in the code to understand a bit further so here we have a main process where we create browser window preference and node integration subframes is false we",
        "do the same thing a loader URL google.com and Define an IPC channel on the render process again the same story We expose open URL and on the website google.com I create an iframe to pawn.af and I use that",
        "window.electron.openurl to pass an argument this works fine but from the iframe when I try to do the same thing by invoking that open URL it doesn't work it's because node integration in subframes is false let's turn it to true and in this case no Adder is thrown and you can do you can pop a calc from your iframe so most of the time when we get exercise in a lot of these applications it is within iframe or subframes which you notice in the Discord earlier and in this case node integration in subframes is disabled mostly because developers do not go against uh the design pattern and enable it unless it's needed so in this case even if we have xss we don't have access to context Bridge exposed API on embed which is a bit sad but can we still hack it can we still find a way to somehow get access to those preload and node Primitives through this let's see so to see this we take a deep dive into the electron source code let's look at the let's look what how electron implements this security features So What electron does it it patches blink web preferences and adds this node integration in subframes context site isolation everything within this so in",
        "the red nisf is implemented there",
        "so when we take a more deep dive into how the code for this works like on based on what you need to enable nisf we can go to a file which is in the folder which is shell renderer and within this file uh what it happens in the box marked as red is the rendered frame gets access to Blink web preferences and then it accesses node integration in subframes variable and if this is set to true or false based on that it will make a decision on whether to enable that feature or not now if you have been paying close attention you would notice that the check here for this feature is on the renderer process so what we can do is if we can run a renderer V8 exploit and find a way to somehow set that variable which we just saw previously to one then we might be able to enable nisf so here is an annotated version of our binary exploit so first of all we leak address to window in the memory we added to get access to a web preferences we add an offset to node integration in subframe and then we flip it to 1 from 0 to enable it so this is how the changes which you would make to your V8 expert in order to perform this attack so let's look at the real world case which we found in element app and element is a really famous application so it is using Chrome 91 and electron 13. there is an xss on embed through a deep link misconfiguration and no context which API on embed is exposed by default so what you can do is same story you run Chrome V8 exploit Xpose context Bridge API and then perform your exploit So within the main process element app defines a IPC known as user download open this is used to open a path using shell dot open path which is a dangerous sync in node.js",
        "and on the renderer process it exposes electron dot send as a way to proxy messages to main process so as we can see in our exploit what we do is we create an iframe SRC dock to create your own iframe and once this rendered exploit runs it will create and this iframe with node integration in subframes enabled So within this new iframe you will be able to access like electron dot send method which was exposed earlier and can pass your own argument to pop a shell so iframe will pop up and then you can pop up shell because nisf is enabled let's see how this looks in the demo",
        "so victim opens a the app",
        "it's a video conferencing victim will try to join this video conference and as you can see in the background I want to show you how this exploit would run this is where this calculation of the offset is gonna take place so we are doing a step-by-step calculation and once this happens the shell will be popped as now you have access to those preloads",
        "so now let's try to do it a bit more so we received a three thousand dollar Bounty from internet bug Bounty program as we reported this bug to electron Js so now we will try to disable context isolation using a compromise renderer",
        "so in this case it's the same story you know that electron patches blink web preferences adds context isolation there and when we look into the electron code what we figure is it does the same thing it gets access to the web preferences and access context underscore isolation variable in the step number one in Step number two it has a Boolean value which is like should create context isolation which is based on the value from the step number one and under step number three there is a if statement which is like if should uh enable context isolation is true then enable it else disable so our goal is to disable the context isolation so same story you can use V8 render dot exploit because this this particular feature was enabled on the renderer side and not on the sandbox side which was a design flaw within electron.js framework and then you can set it from one to zero so this is an annotated version of our binary exploit we get offset to a CIS or in the memory",
        "and then we overwrite its value from one to zero to disable it so let's take a look at our final case study which is RC in an undisclosed app so we found a feature to embed untrusted content in an iframe in this application so in the main process again you can see open underscore external is a channel which is dangerous sync and on the",
        "preload we have something known as is allowed URL which is a function to perform like allow list and it will only allow if the URLs has a protocol which is https so unlike previous exploit you cannot pass something like file path to calc dot app because then it will have a file protocol which will not be the https so let's try to find a way to bypass this and make a direct IPC call to the main process from the web page so here is our exploit first of all we disable context isolation using our V8 exploit then we perform a redirection to an another web page which is leak.html and once this page is reloaded this will be reloaded with context isolation disabled so what we can do is we can perform prototype pollution which I showed earlier in the previous slide and get access to the IPC directly so in this way you can make a call even with five protocol by bypassing that preload which was the middleman performing that allow list to check so let's see how the demo would look like",
        "so here are the calculation for the Heap offset offset for the V8 exploit which I mentioned earlier",
        "and as you can see uh in the background this is what it happens it gets the offset it gets ciso and it sets to zero now this is leak.html when we click on it we pop a shell because that was with CIS or disabled window so we received five thousand dollar Bounty for from this undisclosed Bounty program which is a very commonly used app as well now let's let's shift our gears to talk about same site origin spoofing So within electron app let's say if you want to load a website known as main.example.com then chromium will",
        "internally create a process for example a process one for this now within this main.example.com if you wanna in Implement like iframes for example youtube.com and sandbox.example.com then",
        "let's see how many process it creates for this two iframes",
        "so it only creates a separate process for youtube.com but it doesn't create the separate process for sandbox.example.com the reason is that a",
        "chrome uses the same process if your top level domain is the same so in this case example.com is the common between both of your sub domains and site isolation won't apply here so Chrome uses the same process for both the pages so let's say if you have an exercise on sandbox.example.com and you want to access like those preload apis and node Primitives which are running on main.example.com then how would you do it the way you can do is is you can run like a chrome render or V8 exploit and you can set document.url to main.example.com and security context",
        "origin port to 443 this way you can masculate as your parent page and will be able to access all these preloads and node Primitives which are provided to the main.example.com",
        "so as we notice we used a lot of V8 expert to perform this attacks and there is a noticeable patch Gap within electron electron apps and chrome which",
        "makes a lot of that this app susceptible to this attacks and if you want to go one step further you can also use like sandbox escape from chromium which are pretty rare but it can also bypass this sandbox to a configuration",
        "so as a part of the mitigations um what uh are the suggested mitigations for this is the findings which we did earlier were all fixed by electron and we were assigned CV for those finding so electron made a code level fix to not do this check on the rendered process so you cannot just directly invoke those leaked IPC uh on the newer version but as a developer what you can do is you can still enable all the security Flags because that's the recommended part you shouldn't use a untrusted third-party embed which doesn't have a good security track record for example we saw with Discord like you can embed a Vimeo which had xss and that was the failure point for the app so make sure your attach Gap isn't large with chromium and your electron app so if you have an organization and have a capability you can Fork electron and you can cherry pick commits which are V8 um uh bugs and can fix it by yourself so that is one way to do it and another issue is you shouldn't Implement sensitive ipcs like what we saw earlier those dangerous JavaScript syncs in your main process because attacker will find a way to get access to those ipcs even if they are restricted and mitigate uh security issues across all your asset so your main domain your sub domain whatever you are using in the app make sure it is restricted because as you saw with same site origin spoofing a Sandbox domain can also get access to those uh privilege a context Bridge exposed API so as a part of epilogue we were able to compromise more than 20 commonly used electron applications uh this was running at the latest version and we were also able to compromise Jupiter lab matter most notion based camp and the",
        "apps which I showed in this demo which are few of them so as a part of our blackhead sound bite I want to talk and emphasize on three key takeaways for this so the first one is for bug bounty hunters and security researcher which is to dig deeper into the framework you are auditing and to not limit yourself only to the application layer so what we see with electron is there is a design flaw where these features were enabled on the renderer for example and that intersection was not done perfectly so design labor layer floss can enable you to bypass a lot of security settings if you have a primitive to a tweak those second is for Ray team operators that",
        "electron apps are an ideal adversarial Target because users will click anywhere or open any link users are gonna join video conferences they are gonna opening the messages so if you are in a detection team make sure that you also consider electron applications used within your organization as a part of the threat model the third one is to minimize attack surface on your application as much as possible so in security what we consider open URL redirection it's a very P5 issue but in electron JS someone can still use an open URL redirect to redirect to their own external website and get access to the main webview and perform this attack so treat all the security issues with a higher scrutiny",
        "if possible and when you are doing threat modeling of your electron applications consider all the windows and apply all the security settings on every window because as we saw with vs code we were able to jump from the most restrictive to the least one and was able to get RC so that's pretty much it for the presentation um first of all I would like to thank everyone coming by and stopping by and hearing about talk uh and if you want to understand all these use cases which I mentioned here the application part of it how we achieved in details and if you want to secure your electron applications please visit uh electrovold.io and then you can find like our blog website which is blog.electrovold.io and we have already published a use cases for vs code and Discord RC there where you can look this entire chain in detail and understand further so with that um I'm concluding the talk and uh opening up for any questions which you may have",
        "[Music]",
        "[Music]"
    ],
    "bJ9oWc5cRCI": [
        "[Music]",
        "hi I'm Siobhan I'm a new assistant professor at UT Austin and today I'll be telling you how to secure your applications from bugs in its dependencies and so this is actually the result of a multi-year collaboration between a bunch of people at UC San Diego UT Austin and Mozilla and today's talk in a nutshell is going to be about in-process sandboxing which is this technique to secure your application from dependencies in the form of native code and this idea of in-process sandboxing has actually been around in the academic security Community for a while almost 30 years at this point and this is the first time it's making its way to production code and it and this is because of a couple of reasons the first is webassembly which is this widely available tool chain for compiler-based isolation that is now available uh for all of us and the second part is this framework we had to build called RL box which simplifies adoption of in-process sandboxing and lets you sandbox native code with webassembly and Firefox has been the Firefox web browser has been using Autobox for over over two years at this point and this is something we believe other applications can do as well so in this talk I'll start with some high level bits like why we want something like in process sandboxing in the first place next I'll talk a little bit about the pain points what the pain points of in-process sandboxing are and why we need a framework to help us adopt it we'll talk about robox which is our the framework we built to actually simplify in-process sandboxing and finally we'll talk about our experiences actually deploying in-process sandboxing with RL box",
        "so let's Jump Right In the reason we care about any of this is that every application we use today in some way relies on Native code and as we probably well know native code tends to have memory safety bugs and if you've been to black hat before you've probably seen a slide like this this is basically an analysis of bugs in Google Chrome and Microsoft Windows and what was found was uh 70 of all the bugs we see are just memory safety bugs so use after freeze buffer overflows all of these things and at this point you might you might say something like well let's stop writing stuff in C plus plus I'll write everything in rust or something like that and there's a problem there which is these safe languages are also built on the same unsafe libraries so if you look up the CC crate on rust or the add-on API node.js you'll see this and it's just one other example something like openssl uh half a million lines of C",
        "it's a common dependency even in Rust applications for examples",
        "and the problem we have with all of this native code is when these libraries have bugs they are used in real attacks and we've seen this in a while time again time and again where these sort of bugs are exploited to compromised systems like web browsers iMessage you name a system it's probably been compromised by something like this",
        "and the the challenge we're running up against is all of the techniques we have the mitigations the application hardening like aslr stack canaries",
        "control flow Integrity end up being just a little speed bump for in the wild attacks something they have to get past but eventually they do and suddenly we see attacks in the wild and we could we could try to say something like well let's rewrite everything in Rust unfortunately this is not very practical this is actually quite unrealistic there are billions of lines of existing C and C plus plus code that aren't going away and rewriting it is not just changing the syntax or something you have to retest you actually have to make sure it's portable get this it gets the same performance it is quite a process and to a point that even Mozilla who developed rust is not really trying to rewrite all of Firefox and all of its dependencies in Rust so instead we have to look for something else to tackle these sort of problems so one thing we can do is take all of this buggy native code and stick it into a separate process where it can't affect the rest of the application this is the idea of process sandboxing and it's been around for a while it's convenient because all of our existing code works that's great but what we see is this technique is rarely used in practice barring like a couple of exceptions I think opensh web browsers but other than that it hasn't really seen widespread adoption and there's a pretty good reason for this and that is performance when you have processes you have inter-process communication when you have inter-process communication you have slowdowns in your application there is a lot of overheads cpu-wise memory wise scheduler-wise and there are challenges with scaling too and even if you can get past some of these what eventually happens when you use process sandboxing in your application is you are going to re-architect it you're going to change the way it's written it is hard to retrofit process sandboxing onto your existing application as is now I could talk to you about this at Great length but instead let me just point you to a great talk by Chris Palmer who went from Google Chrome security who went through all of this in great detail and instead let me talk about a Technique we tried that did end up working for us and this is this idea of in process sandboxing",
        "so in process sandboxing it's a pretty simple idea again which is we take these libraries that we don't trust we compile them with the web assembly with webassembly to sandbox them and then we run them in the same process and for the purpose of this talk it's sufficient to think of webassembly as this compiler that can isolate code using runtime checks",
        "and what we're trying to get when we do all of this is to make your application look something like that not this big monolith blob of code that can access any part of the address space but something with clear components which are sandboxed and the sandbox components can only access a portion of the address space so for example there lib jpeg can only access addresses between Ox 4100 and Ox 4200",
        "and the end result of doing something like this is when you have a user after free a buffer overflow or something similar in lib jpeg it does not touch any of the memory of the main Firefox process or any other component",
        "this is really nice because we now get code reuse and we also get performance there is no processes hence there is no IPC CP overheads are great",
        "but we still have this open challenge now which is the engineering effort involved we still have to take this idea of in-process sandboxing and put it into our existing million light code base and so on and it turns out this is a really hard problem at least to do by hand there is some you do need some help so let's let's talk about that let's talk about this uh what the pain points of in-process sandboxing are and why we need a framework to help us adopt this in the first place and the best way to kind of get a sense of what's Happening Here is with an example so we're going to use this as our running case study we're going to try to sandbox lib jpeg in the Firefox web browser again the goal is isolate lib jpeg any memory safety errors in lib jpeg do not affect the rest of Firefox so step one here really simple take lib jpeg sources run it through the Watson compiler produced a sandboxed lib jpeg binary and under the covers webassembly is adding range checks so the way it actually ensures sandboxing is with range checks like this where any memory read you have in your application is just transformed to a range check followed by the same memory read",
        "and it's a pretty simple idea and I should point out that in practice there are a bunch of Tricks involved to make these sort of range stats like to optimize away these range checks for performance but this should give you the intuition",
        "and broadly we know how to do this this is in some sense the simple bit the really difficult bit is we now need to modify Firefox to incorporate this sandbox lip JPEG and this is the bit I want to focus on for now and let me actually walk you through the various steps now that are needed to incorporate this modified lip jpeg and the first thing we would do if we wanted to do this is decouple the library and this is not just a matter of like grabbing the code and putting it in a separate folder now we need to grab all of the shared data structures we need to figure out how con descent how to disentangle the shared control flow all of these things have to be carefully separated so that we can actually sandbox lip jpeg correctly and once we do this we need to now go back and think about all of the data sharing that needs to happen because components now have their own separate memory so we need to Marshall data back and forth between different components and this is actually made challenging by a couple of different factors the first one is webassembly is a different compiler it has a different API it has different calling conventions some of these are chosen for performance reasons but they are different from the rest of Firefox so we now need to deal with this we have to have a patchwork of code that fixes all of these things before and after every time we Marshal data and the second bit is we can't just stick this marshalling code wherever we want we need to do this very carefully we need to do this lazily so that we limit the amount of marshalling and limit the overhead of marshalling data back and forth and once we complete all of this we still have to think more about security because when we started lib jpeg was a trusted Library Firefox trusted lib JPEG and a trusted lib jpegs outputs what we've said now is lib jpack is sandbox we don't trust it we shouldn't trust its outputs meaning we now have to go back to the Firefox code find all the places lib jpeg's output has been used and add some sort of Sanity check or data sanitization there",
        "and making all these checkout changes gets really difficult and nice way to see this is probably with an example so let's look at some code",
        "so that's a very simple 10 line example of an application that renders images with lip jpeg you don't have to read all of that in great detail I think the broad thing to keep in mind there is there's an application that renders images there are a couple of calls to lib JPEG apis and we want to modify this application to do all of the things we just talked about marshalling API fixing Security checks",
        "so if we actually went ahead and did all of those changes the resulting code is going to look something like this",
        "nearly every line of that code of code has changed and it is and if you if you actually uh read what's there which I do not recommend you're going to see that it's almost impossible to understand and here's the best best bit if you get any of that wrong your security is completely compromised like all of that sandboxing counts for another so this is where we found the Practical challenges line and we really had a hard time doing this by hand and we basically came to the conclusion that if we have to write code like this it really Falls flat in practice so even that 10 line example was difficult to look at imagine doing that for a real code base with tens of thousands of lines of code for an image renderer the diffs are going to be insane and and kind of the core problem here is",
        "code like that exposes details of the sandboxing in your feature code and what we've done is we've mixed up security and Feature work and it really becomes unclear who even should maintain this code at this point is it the security team is it the feature team what happens if you want to update something who has to view it and if if you want to add more features to that code testing debugging good luck and even better we've ported that for one API presumably we want to support Windows Linux couple of platforms at least repeat that one more time two more times three more times and if you somehow miraculously do all of this repeat that for each Library you now want to isolate and sandbox in this way and we basically so we came to the conclusion we can't do this by hand and we weren't even alone in this so people at Google also tried this and came to pretty much the same conclusion as we did this is really hard to do by hand so to address this problem we built the robox sandboxing framework",
        "so IRL box is this Library framework that's meant to simplify adoption of sandboxing into your existing large code base and the core idea here is to use types we use types to hide all the low level details so ABI data marshalling all of this stuff is automatically handled we use types to track untrusted data and control flow so if you're missing Security checks you will get a compile error which is really nice and we use types to even let you identify and make changes to code incrementally line by line and you can even pause and test their application and the really cool bit of all this is robox is a PRC plus Library so you can drop it into your application without changing your compiler build systems any of that stuff it should just work and at a high level all box is pretty simple there are just three principles the first is control flow should be explicit so if you make a function call to a API to a library like lip jpeg which you want to sandbox you have to go through this API called sandbox.inbook",
        "and is RL box is uh forces any data",
        "coming out of the sandbox to be marked distincted so if you access the size of the jpeg image which is output by lib.jpg you're not going to get a u32 you're going to you're going to get a tainted u32 oh and I should point out if you mess up in making any of these changes RL box will force a compile error so you have to get this right there's no way to get this wrong and finally once you've done this the third principle is you need to make sure all tainted data is checked before use so if we now take this previous size which is Tainted and stick it into a mem copy operation you're going to get a compile error the way to fix that is to call this API called copy and verify and what what that gives you a chance to do is sanitize this data and once you do that the tainting is removed and that will compile and again let's go back to that same example and apply these three principles our goal is to migrate the code in the same way that we did before except this time with robox and these three principles and I'm going to start with just the first two there if I were to make the changes for those first two principles which is sandbox.invoke and tainted data the code is going to look like this and with even without reading it hopefully you can see right away that it's a little bit cleaner it's a little bit easier to read and all of this is because robox is automating a lot of things behind the scenes all of that API craft all of the data marshalling that goes away it's even able to automate some of the required bounce checks that you need to have so uh in that example there you actually need a bounce check because you are dereferencing a pointer that lib jpeg has given you so this is Security check involved usually when you have to do that um and so now that we've done we're done with these first two principles let's focus in on the third bit which is Tainted data must be checked so if we look at that principle we'll see that this variable size at the bottom is Tainted",
        "and the reason it's tainted is it's Computing the number of pixels the image would have based on jpeg image metadata which itself comes from lib jpeg so it makes sense it should be tainted and size is being used again in a mem copy later on so we need to validate it and to get all of this to compile we should validate this and remove the tainting and we can in this case if we stare at this code a little bit we can identify what sort of security check we want the main thing we want to make sure is that when we copy data out we don't go past the end of the output buffer so let's add that security check we call Copy and verify make sure that the value of size is less than the output buffer size and then we use this checked value in the mem copy operation and at this point everything should compile",
        "and this is really what our box brings to the table it brings some sort of closure to this process of modifying code because if you compile this code and your six or other if you're successfully able to compile this code this is robox's way of telling you you're done with sandboxing you're yeah this should work and in effect the takeaway here is when we use webassembly and arrow box we get the two things we are looking for which is fast sandboxing and low engineering effort and to really give you a sense of what this looks like in practice I'm just going to very very briefly tell you about our experiences deploying in-process sandboxing using robox",
        "so the first thing we did and first thing we should always do When developing a new framework is try it out so we tested a whole bunch of applications to sandbox several libraries so applications like Firefox node.js Apache and so on and we sandboxed several different classes of libraries image and font rendering audio video playback XML parsing there's a whole list and broadly what we saw is that IRL box is able to automate away hundreds of lines of glue code to do with all of the same ABI marshalling and even Security checks and what's left for us is pretty much like what you saw a few pieces of Tainted data that we need to validate typically at most two to four lines of code for this validation and what this lets us do is sandbox a library in any one of these applications in just a matter of a few days with a confidence that we've actually gotten it right and at this point we actually turn towards deployment we wanted to make this production and deployment ready so we worked uh worked for a while and in February 2020 we actually did this we actually managed to ship RL box in the Firefox web browser and we started very small sandboxing just one library on just a couple of platforms just Mac and just Linux and over the course of like two years since then we've been working on improving performance portability debugging a whole bunch of things and as of this year we've actually sandboxed a handful of libraries across all platforms that Firefox supports and this includes Android as well",
        "and as far",
        "uh make sure that our sandboxing didn't introduce very large overheads so we measured a couple of the high value use cases in Firefox so we measured XML passing sandboxing XML parsing and font decompression and broadly we see that that's around 10 percent and this allows us to make a security versus performance trade-off that's sensible for our application for a browser these two are just one of the billion things that a browser does so 10 on one of the billion things is not something that's perceivable by the end user so we are actually okay with this so this works really really well and we actually did deploy all of this",
        "and we aren't done we are working on a whole bunch of things uh improving uh several things on the performance side we are uh still waiting on things like uh threading to be fully standardized on webassembly and we're trying to keep on top of adopting these things into the library sandboxing world as well so that when we sandbox libraries that need these features they work as expected",
        "we've also done a ton of work contributing back to sandboxing Tool chains to make sure they work well on low resource environments so 32-bit architectures like Intel 32 arm32 and so on and one of the challenges there which we've made some progress on and but we're still addressing is it's not just the memory footprint it is the virtual memory footprint virtual memory is also a premium in platforms with 32-bit pointers so we are doing some work trying to improve all of that as well um and finally on the usability space we're also revamping the robox API we're trying to make it confirm with all of the modern C plus idioms as they evolve and there's a bunch of work we're doing on the space to make it easier to use as well",
        "and so if all of that looks interesting to you try it out help us get this right use it in your application and let us know what worked what didn't and if you're more on the attack side of things let me point out that robox is actually covered under firefox's bug Bounty and it's covered as like a sandboxing bug Bounty which means you get to start by adding a memory corruption into your favorite Library that's sandboxed and if you can escape the sandbox you get the bug bounty",
        "so uh let me briefly conclude uh by",
        "saying in process sandboxing is this technique it's a practical technique to secure the native code in your in your application it is an idea that's been around for 30 years and it's seeing production for the first time because we now have the tools to deploy this and use this RL box is the framework we built to actually use in process sandboxing and simplify the adoption of in-process sandboxing into your application and robox is a production ready tool it's being used by Firefox it's been used for the last two years and this is hopefully something you can use in your applications as well so thanks thank you everyone for for your attention [Music]",
        "[Music]"
    ],
    "PSosut3ZtvI": [
        "[Music]",
        "hello everyone and welcome to my talk do not trust the ASA Trojans now you might immediately be asking what is an ASA and these are ASA these are Cisco adaptive security appliances at the top there you see the original ASA released some 15 years ago that was followed by the release of the asax which was followed more recently by the release of the asax Firepower services",
        "now the ASA comes in a few other form factors as well including a virtual Appliance known as asav",
        "and all of these are sort of Asa as well despite their names because they can run the operating system known as ASA software that is of course the same operating system used by the previously mentioned Asa",
        "now an ASA typically sits at the edge of your corporate Network where it can be a firewall a VPN an IPS and or a router",
        "possibly all wrapped into one now the esa is a critical asset because it acts as the Gateway between the internet and your corporate Network and it also implements a variety of access controls and protections",
        "this talk is called do not trust the ASA because we're going to use a variety of features and vulnerabilities affecting the ASA in order to get root shells on the ASA itself as well as the administrative systems that connects to it",
        "now all the esa models we discussed earlier can be managed by by this thick client known as adaptive security device manager or asdm ASTM is installed on an administrator's Windows system so that they can remotely connect to their ASA or ASAS and perform administrative tasks like updating firewall rules adding VPN users or simply monitoring the router's behavior",
        "for about the next 20 slides or so it's important to understand how the asdm client and the ASA communicate one of the first things that happens is that the asdm client makes an HTTP request for a pdm.sgz file this file is",
        "hosted on The Cisco asa's web server and the pdm.asg sgz is downloaded by the client and then unpacked the sgz format is a non-standard one but regardless the",
        "client finds inside is a whole bunch of java classes the client will load those classes into memory execute them and that establishes the full administrative session with the ASA now the fact that the sgz file contains much of the client's functionality will be important uh in a bit",
        "now what's interesting about this is while that communication occurs over SSL the ASM client never verifies the asa's server certificate which means that a man in the middle like hacker cat here can monitor or even modify the communication between the asdm client and the ASA itself essentially this should allow hackercat to take full control over the ASA as long as they're able to establish this man in the middle position now that's not theoretical in nature pictured here is a screenshot of me using the popular Tool Man in the middle proxy on the asdm client I use the default man in the middle proxy certificate and the asdm client gave no indication that it was under attack now like I said this should give me the attacker full control over the Asa but I might be able to gain control over the administrator system as well recall that this pdm.sgz file is full of java classes if the man in the middle can introduce malicious Java classes to the sgz maybe the asdm client will execute that malicious code",
        "to explore that I wrote this tool called get you it's an sgz file parser it tracks all the files from an sgz file and drops them to disk on the right here you can see a recent release of of an sgz file contained more than 13 000 Java class files among some other files most importantly it contains a signature file this file contains valid cryptographic signatures for all of the files in the sgz and if the asdm client verifies the files it downloads against this signature file and the attacker shouldn't be able to introduce malicious code",
        "unfortunately the client doesn't do that last summer Cisco issued this advisory and assigned cve 2021-1585",
        "essentially this advisory says a man in the middle can inject arbitrary Java classes into an sgz file and gain execution on an administrative system via SDM now Cisco didn't release a patch for with this advisory in fact they didn't try to patch it until June 2022 and unfortunately that patch wasn't effective and I'm told Cisco released a new patch business vulnerability uh this very morning so this issue might be cleaned up as of right now but that took more of a year more than a year after the initial public disclosure",
        "the man in the middle is a difficult position to achieve for most attackers so it's also useful to note that 1585 is actually uh is actually exploitable via evil endpoint what I mean by evil endpoint is that if hacker cat can trick an administrator to connect their asdm client to an endpoint in hacker hackercast control then hacker cat can provide the client with a malicious sgz file resulting in code execution on the administrator system as pictured here",
        "again that's not theoretical either I've actually written a couple of exploits for this one of which is a Metasploit module and this talk really emphasizes the use of real exploits particularly Metasploit modules to really Hammer home that these are viable attacks that could be pulled off by low-skilled attackers and therefore should be taken quite seriously",
        "now obviously the man in the middle aspect of this attack is much more difficult when the administrator doesn't connect to the ASA over the Internet hacker cat's going to have a hard time establishing any type of access incorpnet so the administrator is probably safe in this configuration",
        "but as a researcher I wanted to find a way to attack the administrator on corpnet as well and I figured I'd try to modify the sgz file on the ASA itself remember the sgz is hosted on the router's web server so I figured I might have some type of right access there to modify it",
        "but I first needed to find how the sgz file got on the ASA in the first place and the answer is that it gets added to the ASA when the asdm binary package is loaded on the system now the package is available on Cisco's web website as pictured here but it's also loaded by default on some ASA for example the asav and the test ASA that we purchased the 5506x also came with it pre-loaded but regardless this sgz file is first",
        "introduced the asa's web server when this asdm binary blob is loaded onto the Asa",
        "and so I went hunting for the sgz file in the asdm binary package again this is a non-standard format so I had to do a little work but it turned out to be simple enough the binary package breaks down into three major parts a general header a manifest area and then all the files are catted together at the end and I was also looking for security features in this binary package basically evidence that Cisco was signing the package I did find this hash field in the header so my question was is this Hash a security feature or is it just a checksum that ensures the Integrity of the file uh and it turned out it's just to check some which might not sound like a big deal to a lay person but it really is because there is no Cisco signature on the binary package anyone is able to craft their own arbitrary asdm package which",
        "is a big deal because it means we as attackers can upload arbitrary sgz files to the Asa among other things which in theory should allow us to attack that administrator deep down in corpnet",
        "now we did report at this issue to Cisco back in February of this year and Cisco released this advisory in June again",
        "without a patch uh I believe a patch for this was also released today but I haven't had a chance to look at it or verify it in any way so I don't have too much to say about that but this advisory is exactly what we just discussed attackers can upload malicious asdm packages to the ASA which can result in code execution on hosts connecting to the router",
        "so we're able to achieve what we set out to do hackercat has a malicious asdm package hosted on the esa the only question that remains is how exactly does hacker cat craft this malicious package",
        "now there are actually a bunch of files in this binary package and there are a variety of attack vectors hacker cat can pursue with these files that will result in code execution but as we've already talked about the SGC file and we know what the good attack vector and we know that it's contained in this SGC file we'll just focus on that so let's discuss a tool that will help hackercad build malicious asdm binary packages",
        "so this is a tool I wrote called the way and the way has three major functions it can extract I can parse and extract asdm packages to disk which is useful for examining the contents of the package and modifying the content of a package and it can also rebuild extracted asdm packages so for example in this slide I modify the asdm's web portals index.html",
        "and I modify it to say hello black hat then I use the way to rebuild a valid asdm package when the new package is loaded onto the ASA and we browse to the asdm web portal on the router and we'll see hello black hat now appears on the landing page",
        "and finally the way can just generate straight up malicious asdm packages and now these packages contain an sgz file that will generate a reverse shell to an IP and poorer of the attacker's choosing whenever an asdm client connects to the Asa pictured here is a client that connected to a malicious asdm sending a reverse shell to my Ubuntu box",
        "so by crafting a malicious ASTM package we can exploit ASTM clients not only connecting from the internet but from corpnet as well",
        "the only challenge is installing our our malicious asdm package in the first place it does require elevated privileges to install packages on the ASA so that is certainly a limiting factor but of course attackers can find ways to get the required credentials or they can use an inside attacker or tricking administrator into installing a malicious package those are all very plausible attack vectors",
        "my favorite Vector is a supply chain attack when I bought our test ASA 5506x",
        "with Firepower services it arrived with an asdm package already loaded I had no way of knowing if it was a valid Cisco ASTM package or not the reseller could have planted a malicious package on my device and they could have had code execution within my home network when I started using and researching the ascm interface",
        "now as we've seen this isn't a theoretical threat it is actually a viable and demonstratable attack that if done correctly would leave the victim none the wiser",
        "so that's all we're going to focus on for asdm hackery the rest of this talk will focus on a particular model of Asa called the asax with Firepower services and then in this first section we're going to get a root shell on the system over http",
        "as a reminder these are the asax and Firepower Services they're the latest Hardware model to use the ASA name and they are admittedly getting a bit long in the tooth but still in support and use globally",
        "now the name Firepower Services actually just describe the special feature of this ASA in particular it describes this old uh this oval at the bottom labeled ASA Firepower module deep packet",
        "inspection",
        "and what that Firepower module actually is is a virtual machine running snort essentially Firepower Services is an IPS that's installed directly on the ASA itself it's a pretty nifty feature and from this diagram we can see incoming traffic is diverted through the virtual machine for analysis",
        "now you can access the Firepower virtual machine via the Cisco CLI the command session sfr console will drop you into a telnet session which prompts for credentials and once authenticated you'll be able to access this is apparently limited Firepower module shell except it isn't all that limited At All by executing the expert command you'll drop down into a bash shell on the VM and from there you can actually pseudo to root using the previously used telnet credentials",
        "and this root shell as a feature isn't limited to terminal connections you can use it via SSH so anyone with SSH access to the ASA can grab a root shell on this virtual machine",
        "now that is actually noteworthy because this virtual machine when configured has network access meaning it can communicate with the inside Network uh and it can communicate with the outside Network uh in that way when you have access to this virtual machine you can reach the network that this the ASA is trying to protect and you can reach outwards an attacker that grabs a root shell on this VM can install arbitrary software uh persist through reboots in upgrades pivot attacks inwards exfiltrate data out and perhaps most interestingly to me just chill out and sniff the traffic flowing through the VM and it's unlikely that anyone is actually monitoring this virtual machine for malicious behavior it's rather it's a rather attractive Target for an attacker to sit in this type of root shell is actually something most router vendors attempt to prevent but on this ASA is just a feature",
        "now Cisco obviously knows this is dangerous because they have this lockdown sensor command that can disable the expert command and thus access to the root shell permanently but I'm not entirely sure how often this command is used and our next exploit will bypass the lockdown anyways",
        "so I was investigating how I could land in this root shell via HTTP and it turns out ASTM can talk to the Firepower module and generate these very pretty graphs but asdm can't access the root shell if I use asdm to issue the session sfr console command then the ASA basically replies you can't do interactive shells over https so get out of here so I started messing around with some command injection vectors and here's one that was actually successful I issued the command session sfr do backtick ID backtick where ID is a Linux command I wanted to execute if ID is executed it will let us know which user the command executed as so we can see that the ASA actually responded to my request with invalid do command U would equal zero root meaning we successfully executed the command Azure within the virtual machine",
        "which results in this scenario an attacker over the internet can achieve a root shell on the fire Firepower module Virtual Machine by sending a rather simple command injection exploit",
        "and the exploit is really simple so simple it could fit in a tweet so pictured here you can see a tweetable version of the exploit you can see I use the curl utility bash Dev TCP and neck hat to throw the exploit and catch a reverse shell originating from the Asa",
        "and again this is great for an attacker they now have they now have their own malicious virtual machine on the ASA that they can use to Pivot inwards and exfiltrate from",
        "now Cisco did release an advisory for this but only after they realized that it was a bypass for the lockdown sensor command Cisco has released patches for most but not all ASA x with Firepower services and their advisory kind of makes a big deal that the attack requires asdm credentials which is quite true but those credentials might be easier to come by than you'd kind of imagine so I'm going to list a few ways you might come along asdm credentials",
        "first recall that the asdm client is vulnerable to man in the middle attacks additionally by default asdm client",
        "authenticates to the ASA using HTTP basic authentication which means a man",
        "in the middle can trivially extract valid asdm credentials from any HTTP request originally originating from the asdm client oops so there's one way",
        "it's also worth noting that the default credentials for the asdm interface are blank blank and you don't have to take my word for it this slide is taken directly from Cisco's asdm book one and",
        "of course we confirm this is true on our own 5506x",
        "it also turns out the asdm client was logging credentials to the client log file for a time so I wrote a Metasploit module that will scan through the asdm log files and pull out valid credentials so that's yet another way and finally the asdm web interface doesn't have Brute Force protection enabled by default you have to go in and enable this account lockout feature",
        "so the only thing that protects that interface by default is an ASTM specific user agent one",
        "version of which is pictured here without this user agent the ASA ignores the inbound asdm requests so that's at least some type of protection um either way I ended up writing a Metasploit module that Brute Force Brute Forces credentials on the asdm interface now I think a lot of people believe that Brute Force attacks aren't very cool because they're not especially elegant but we have seen apt like Gru use brute force attacks at scale with significant success I'd suggest if it's good enough for Gru it's probably good enough for me and you",
        "so with credentials in hand I also wrote I'm a display module for the command injection over http here you can see I provide IPS and credentials throw the exploit and catch a reverse shell yet again",
        "so uh we're going to switch our Focus to abusing the installation of the Firepower module so nothing in the remainder of this talk is actually considered a vulnerability by Cisco but I'll let you be your own judge on that matter",
        "so interestingly the Firepower module is an add-on package kind of like the asdm package it has to be installed the asax works totally fine without it and if the user doesn't use the IPS feature like this will not want to install in the first place so a scenario where hackercat has SSH access from the internet but the Firepower module isn't installed isn't that far-fetched but without the Firepower module installed hacker cat can't access that special root shell",
        "or Kenny so let's see how hacker cat can get the Shell by using the Firepower boot image now the Firepower module installation process is a bit involved it happens in three phases first the installation of a boot image then the installation of an install package and finally an upgrade package is applied so we're going to talk about this file labeled number one here and that's the boot image that's installed in phase one",
        "the boot image needs to be downloaded from Cisco and copied to the ASA or an image might already be present on your system as was the case when we purchased our test device but either way once the image is on the ASA you issue two commands to boot it the First Command lets the ASA know this is the boot image you want to use the second command actually boots it up",
        "you then issue the session sfr console command to open a telnet connection to the boot image you'll be prompted for credentials so pictured here's the default credentials for various versions of the boot image but note the default user is always admin",
        "so once you're authenticated you'll drop down into the shell in the boot image and this is actually extremely limited it's really only useful for installing stage two the install package it doesn't have anything like the export command that we saw previously so let's take a step back and instead log in as this undocumented user root with the password cisco123 and",
        "Bam you got a root shell and what's great about that is the boot images networks too so using hard-coded creds on the boot image gives hacker cat the special root shell again now Cisco said that this is not a vulnerability because there are no security expectations during the Firepower install process they had the same responses when we reported a command injection issue in the boot image as well I'm not going to talk about that one because it's easier to talk about the hard-coded creds but I just want to emphasize boot image contains no vulnerabilities",
        "but vulnerability or not the hard-coded creds are dead useful now I wrote a couple of exploits that automate the uploading and configuration needed to take advantage of this non-vulnerability here once again you see that we have a root shell via Metasploit uh and now Cisco Cisco did remove this hard-coded credential from a more recent version of the boot image but since the ASA doesn't actually prevent you from using older boot images I can't say that's a particularly useful mitigation and in my mind because you can always use these boot images no matter their age this is sort of a forever day",
        "now the problem with the previous attacks the assumed SSH access which is obviously not going to typically be available for an attacker so I wanted to figure out some attacks that assumes no access to the device whatsoever I want to modify the Firepower install packages to install malicious code and then get on winning victims to install the malicious packages again let's talk about the boot image",
        "so this is the scenario hackercat is totally on the outside no access to the esa just sitting out there in the cold so I want to help hacker cat out help hacker cat out so I started looking at the format of the boot image it turns out it's just a totally generic bootable Linux ISO like it's just a live CD you can even execute it in VMware Fusion without any type of issues there's really nothing Cisco specific about the Boo images format so I figured well why don't I just create my own Live CD my own bootable ISO give that to an administrator get them to install it then the ASA should boot the malicious ISO I created because my operating theory was that the Cisco provided Firepower boo image which is a totally normal Live CD or whatever",
        "and usually stories like this have a lot more to them which you tried what failed uh funny thing is this just simply works I grabbed an existing script for creating tiny core Linux bootable isos I added in a few features the ability to play Doom a reverse shell you know the essentials and this script which I rebranded as Pinch Me generates a malicious ISO that the ASA will happily Boot and assign IP addresses to there was no trial and error because the ASA doesn't attempt to block this at all uh it appears to just be a feature of the asax that it will boot arbitrary virtual machines but again this isn't a vulnerability so remember there are no security case security expectations for",
        "the boot image",
        "so we can craft our own boot images uh distribute them as we'd like and once installed have our special root shell again but the problem with the boot image is it doesn't persist through reboots so I started looking at the install package for a more sustained attack now remember the install package is part two of the Firepower module installation the install package is installed by and overwrites the boot image",
        "so I was trying to figure out the format the boot image expects the install package to be in pictured here's python taken directly from the boot image and you can see it expects the install package to be in the form of encrypted content signed checksum package wrapper format which is a mouthful I'm pretty sure it's actually a really secure format as far as I can tell and again as far as I can tell is the only format Cisco has ever published the install package in",
        "and this is what it looks like this isn't super important to know just note that it starts with this keyword key uh very early on",
        "it also turns out that the boot image has this if clause for the Firepower module that allows a second install package format and this format is check some package wrapper an utterly insecure format no six no Cisco signatures on this one it only has checksums like we saw with the asdm package which means in theory we should be able to craft one of these check some install packages and uh give it to an administrator and get them to install it resulting in boot shell access once again and after some really tedious reverse engineering I did figure out that in Secure format again it's not important just note that the file no longer starts with a key keyword it goes right in the data",
        "now the problem is that we actually need the install package to do its job namely install a whole bunch of Cisco stuff and overwrite the boot image otherwise the installation process will fail so it isn't enough to know the insecure format we need the insecure checksum package to also contain all the Cisco stuff as well uh otherwise the installation will not succeed so I wrote a tool that does that this tool is called WhatsApp it takes a valid and signed installation package unpackages it inserts malicious",
        "code repackages it into the insecure format and then it's ready to be installed by an unwitting victim the malicious code is just an init script basically it tries to connect to an ipm4 of the attacker's choosing every five minutes or so and this init script Will Survive reboot reboots and even upgrades so it's a pretty useful little attack all you need is to get someone to install it for you but remember this isn't a vulnerability",
        "but the result again if installed is hacker cat is back in the root shell this time with persistence again with access to the protected Network access to the internet and access to the traffic flowing through the VM now actually describe I actually attempted to describe this to Cisco as a supply chain attack uh however they disagreed they pointed out that the Firepower module has a root shell as a feature and a vendor could simply insert arbitrary code into the virtual machine using that root shell so no malicious",
        "installation package is really required I agreed with their original sentiment but to me that's a separate and also concerning supply chain attack but I wasn't really able to win them over to my point of view",
        "so that's the the hacks I have for you in this talk we talked about man in the middle problems credential leaks code signing issues package signing issues root shells a feature hard-coded credentials for a root shell command injection for root access and executing arbitrary bootable ISO many of these make the ASA a perfect little Trojan Horse now having said that let's look at some indicators and possible mitigations real quick",
        "the number one thing I was taken away from this talk is that this pictured here can never be done never can you use asdm over the internet without potentially risking your ASA the man in the middle issue to my knowledge is not slated to be fixed I would actually encourage you to stop using ASM altogether and to disable the asdm feature on your Asa I've written a few Yara rules to help identify some of the attacks we've we've talked about here one rule detects malicious asdm packages another gitex unsigned install packages and then there are two that will look through the asdm log files for one for credentials and the other one will detect usage of malicious sgz files",
        "uh and ideally I'd love to be able to stand up here and give you guidance on patching however there's slew of issues in this talk that are not considered vulnerabilities or are unpashed or their patch status isn't clear as of today so uh when patching isn't an option we usually apply mitigating controls",
        "isolate and limit access and that's not that easy because the ASA is a critical system in your network at the very least like I said I disable asdm ensure that we're auditing who is logging into the system we saw a number of password issues in this talk so rotating passwords might be smart and finally when it comes to the asax with Firepower Services I actually think that root shell feature is far too dangerous even without all the additional packaging issues that we discussed I'd personally retire and replace those as soon as possible and be sure you have some idea what's going on in that root shell until you're able to replace them uh so that's actually it that's uh all the code I've talked about is up on GitHub uh a lot more code actually uh if you like this talk you can find me on the normal social media sites if you don't like the talk don't find me there [Music]",
        "[Music]"
    ],
    "jwEs3OLBkP4": [
        "[Music]",
        "thank you",
        "thank you uh well hello everyone welcome to DNS Tech downgrade attacks my name is as introduced Elias heftish and I'm an I.T security researcher from uh at prano visit damshot Germany",
        "so the topic of my talk is dynastic downgrade attacks but why investigate them in the first place well um DNS is involved in virtually all transactions on the internet and many mechanisms rely on security for instance when determining which IP addresses to send packets to or password recovery mechanisms also the main validation and yeah many others",
        "so in Essex is the Gopher solution to shifting as record security and while probably everybody here has already heard of downgrade attacks on TLS downgrad attacks only an aspect have not seen much much attention up until now",
        "so my talk is structured as follows um first I'll give a refresher on DNS and in Essex then I will explain the Genesect downgrade attacks I'm bringing you two classes of them so first this attacks to weakened security and the other is effects to break security and then I'll conclude my talk with recommendations",
        "so first the Refresher",
        "okay so this is DNS resolution and account setup we have an application and a user wants to browse the website so the application does a library call um it was a stop resolver to have the host name resolved to an IP address the stop resolver will then translate that into the S request via the network to forwarder here before water well forwards it to recursive resolver and the recursive resolver will then do the heavy lifting assuming nothing nothing is in its cache it will first very um the authoritative server of the root zone for the records in question which will usually not have the answer for that so it will send a referral response saying hey I don't know but ask this one that server is closer to the name and will probably have an answer for you and the scenario that second server also does not have the answer to the records in questions so we'll send again a referral response until the recursive resolver is referred to the actual server which has the records in question locally and start in its database",
        "so that server will then send the actual answer to the question carrying the records in question which the recursive resolver will then cache and reply to the forwarder which will send then then send a reply to the software solver and the software solver will hand it over to the application",
        "arguably the biggest threat in DNS is DNS poisoning which is an attack on DNS record authenticity here it happens between the recursive resolver and the authoritative name server and notice that every Downstream DNS server has also its caches poison now but it also can happen at other places of course so for instance here between the four water and the recursive resolver",
        "housing is secured in practice if it's secured in the first place um so we have the communication between the Stop resolver and the forwarder there's usually genus of https or DNS of a deal as used because we only have one connection to manage but connection management is prohibitively expensive for the communication between the recursive resolver and the authoritative name service which is why they are typically a DNS of a UDP in accordance with an addition with the nestic is used",
        "how does that work so um first of all the insect provides data origin authenticity and also established Integrity of data what it does not provide for is confidentiality just by Design and it does so by protecting the DNS data using cryptographic signatures",
        "the trust which is put into the public Keys which are used to validate these signatures is delegated via public infrastructure and that infrastructure is built into and aligned with the DNS hierarchy let's have a look how that looks like so chain of trust but um first let's see what records are being used we have signature records signatures are created over record sets which are defined as having the same name type and class is virtually always the internet so I will just skip it here and there's uh dineski Records which carry a public key material for verification and DS records delegation signer records which carry a digest of individual child zoning sqs so these very roughly conform to certificates and other public infrastructures",
        "all of these records specify signature algorithms and additionally the DS record specifies the digest type number I will come back to them in a minute so here we see the chain of trust first three zones which are in a fair and child relationship um here the the root Zone uh art Zone example.oxone and we have our trust anchor in uh that in ASCII set in the root zone so this is one dineski record which we need to beat it have some direct notion of trust into so out of bands not built into this Peak High",
        "um yes the dinespi records can then be used to authenticate the holding ski record sets which is um signatures are",
        "represented in this figure by these End Zone arrows and um these are also used to authenticate the DS records here's one of digest Tab 2 pointing to one dnscue with algorithm number 13. which is located in the child Zone so this is essentially the same as before but now we don't have the trust anchor but the DS record of arching for the authenticity",
        "um yeah essentially we have seen this also so here's the 2DS records of different types pointing to the same dineski record in the child Zone and that one can then be used to validate the signatures over the target records from that zone so uh",
        "www.example.org address records in this example",
        "so why can't just strip off signatures or um strip of records and pretend they don't exist well there's a mechanism built into DNS rather than Asic which is authenticated in analytic systems and that uses a specific record type to Mark empty intervals in the namespace so um",
        "that also specifies the record types present at the interval boundaries and um yeah but it does not cover record Presence at the level of signature algorithms so just this okay there's a Genus key record or there's no DNS key record rather but it does not say there is one of algorithm 8. to protect algorithm presence uh there's a requirement built into a DNS Tech into the specification which says as soon as there's a DS record of algorithm a they also must be at least one in sphere of algorithm a and as soon as there's such an ASCII record there also must be signatures of that algorithm on all data in the zone",
        "what algorithm do exists so there are many of them quite a few here those which are standardized no need to remember them all so we just quickly go over them they are for RS ABS ones four which are using um ellipticals to private algorithm numbers which are essentially used for development purposes and also two Shar one based ones these two are being phased off at the moment which we can see that they are not recommended to sign zones with a longer and reserves to support them",
        "there are others which are being faced in which is essentially the way around first resolvers adopt them and then they will be used for running zones as a very rough rule of thumb we can say um just to keep it in the back of our heads very rough rule of thumb uh the higher the algorithm number the more secure it is",
        "therefore digest types which have been standardized and in effect three of them are in active use",
        "okay um so when we conducted our investigations we investigated several domain sets so um there's top level domains which we investigated from which more than 90 are secure signed and we",
        "also investigated the top 500 000 Tranco domains and uh found yeah essentially",
        "the other way around less than um 10 of them even less than five percent of them are secured using the NSA",
        "uh and on the resolver side of things we had nine resolvers in our lab which we investigated which are very popular binds underground others and also eight popular open resolver services so I think Google and cloudflare we also looked at 15 000 openly accessible resolvers from a pod scan on the ipv4 address space and found three thousand validating resolvers among them conforming to roughly 20 here uh yes which will be basis of the numbers we will see in the following",
        "Okay so let's move to the attacks um our Checker model is an unfath attacker which is essentially covered by the thread model which Dean essay uses so the attackers positioned between the resolver and the authoritative server and the attacker can send reads modify duplicate delay suppress messages whatever but it does not know the cryptographic secrets to break the cryptography and to give explanation simple we further assume here that the attacker can trigger resolution by the resolver for instance by just sending a query and we also assume empty caches",
        "let's have a look at the attack procedure so first the objective of the attacker and the specific attack scenario as to impersonate the authoritative name server of the victim domain and um it does so because uh Mana middle position is typically expensive to achieve and um also to sustain so um the attacker proceeds by first sending a request for the name server for the interest records of the name server to the recursive resolver the recursor for Server will then do the resolution thing which we saw in an earlier slide and eventually we referred to the authoritative name server so I would at that point in time it already knows the address of the name server but because these records have been obtained on a referral response they are not too trusted and it says okay I really want to know it exactly and I will ask the authoritative name so for confirming that",
        "so it sends the query for those records and the authoritative name server responds with the authentic values which I covered also by signature in the response the attacker will intercept it and replace the records the data of the records according to the specific detect semantics so here to obtain the",
        "impersonation the address records and also the attacker will fiddle with the signatures according to specific downgrade mechanics which we will have a look at in a minute So eventually possibly before usually after that the recursor free solver would query for the dineski record set of the victim Zone which the authoritative server will again respond to with the authentic values and our attacker again um intercept those and manipulates those in transit again according to specific mechanics",
        "so the recursive resolver will then do the validation of the validation chain and assuming that worked we'll store the values and have them in its cache",
        "so now the attacker can stop the mechanism which it used to obtain them in a middle position and will have a successful impersonation of the authoritative name server",
        "if now another client comes and sends a query for the victim domain to the course of your server that February will be directed to the attacker which will then respond to whatever evil records there's a chance to put there",
        "okay so um first class of attacks is a text to weaken security um here the goal of the attackers to make the resolver use the weakest possible validation path and then attack the weakest chain and Link of trust which very roughly conforms to the downgrade to export in the SSL downgrade attacks we know um I've brought you two specific mechanics here which is downgrading to weaker DS digest and downgrading to weaker signatures so both essentially have been mentioned in specific variations in an RCS already but yeah we essentially generalized them and so why not investigate them",
        "for note on Sharon and in essec um so xiaone is broken in terms of crypto analysis but um",
        "yeah attacks from Indian essay cases have been demonstrated for instance back in 2019 but practical attacks on the aspect itself have not yet been published but I expected to be published in the near future or at least to happen",
        "so in consequence Shawan is being phased out since about 2019 but it's still widely used so in its forms of the signature algorithms 5 and 7 which are not recommended and digest type 1 which is even prohibited but as we can see in this table here even top level domains exist which make exclusive use of Xiao one to be protected",
        "yes uh results still must support it and virtually all of them do",
        "and yes so I'll check on our aims at exporting this first mechanism for downgrade is downgrading to weaker DS Digest um here we have 2DS records in the parent Zone one week I digest and one stronger and both are supported by the resolver",
        "there's one Dynasty in the victim Zone which matches both digests and we assume",
        "that the attacker can break the weaker one so imagine show on",
        "the technology dineski for the weaker algorithm and replaces the authentic Dynasty and Ollie's signatures in the responses which it intercepts and spoofs the target's own data of course and as we see in this figure now the stronger digest that does not match anything anymore and the path via the stronger digest by that becomes invalid the question now is will the resolver fall back to the validation path why otherwise record",
        "turns out there are actually many vulnerable servers against that so in the open resolvers which we obtained from pod scans are more than 90 of them were willing to reduce the queue to at least two weaker DS edges and about if one of them will do even if the week I want to start one in our lab only powered in US enforce the strongest possibility as digest um by 9 and the novel solver at least enforce the stronger than xiaomi estudges",
        "our popular open resolvers that we found only Google and Suzette Nick to enforce stronger than shawandia stages and essentially all the others accepted that we could digest even if it was shown",
        "okay so the next mechanism is downgrading to weaker signatures uh here the Zone assigned with two algorithms one weaker and one stronger both are supported by the resolver and that would be typical for his own which is in transit from one algorithm to the other so the Zone can either be completely insecure in transit which is obviously not a good thing or it is uh otherwise signed with two algorithms for some point in time our assumption again is that the attacker can forge Zone data for the weaker one",
        "so here the procedure is pretty straightforward so the attacker just places the spoofed data in the DNS response and by that the signatures of the stronger key become invalid so this is kind of civil obvious",
        "um optional clever cover-up strategy for the attacker would be to just strip the records off and the question now again is will the resolver accept the weaker signatures even if stronger ones should be present and valid",
        "let's see what the RC says with that um well this one for example since since each record must be signed with each algorithm present a malicious party cannot filter off the stronger ones and force the validator to use the weaker signatures if both are present so we should be secure right turns out we're not um all of the resolvers which we investigated actually fall back to weaker signatures even if the weaker signatures are one based and the reason for this is this update RFC here which essentially just says that validators should accept any single path they are presented with when it comes to Signature algorithms this RC aims at facilitating algorithm updates for very large zones but while we're getting rid of one really bites us back some way so bad luck",
        "okay so sum it up our text to weakenly in a sec um as a countermeasure against long rating to weaker desk digest um a suggestion is to require the strongest present yes digits to be used for the construction of the validation path especially if the weaker one is show one and when it comes to countermeasures against downgrading to weaker signature well we can essentially just hope that zones migrate away from Travon fast enough so because insisting on signatures of the strongest algorithm would risk disconnecting SQL domains in the end",
        "okay so um the next class is a text to Greek security to break security why that well um breaking even a weaker algorithm is still quite about to jump honestly and also for sure one we're not yeah not there yet uh so we as a research team found ways around that didn't affect dong where to text to break security these are in effect roughly comparable to downgrade attacks to know or SSL stripping from our SSL analogy which we had before um on these attacks exploit the validation logic that assigns the security State student s data",
        "which security States um therefore them first is secure which says that the full chain of trust has proved to be authentic and then a response to the client carries the records a question along with the signatures covering them and the response also has the authenticated data message like that but the slack is effectively ignored by most clients in virtually all use cases",
        "the opposite of this this is bogus which says uh no valid chain of trust could be constructed that couldn't happen either because signatures fail to validate or if the because in essay records were missing the effect is that a software error responses sent to a clients which does not carry any Zone data",
        "there's also indeterminate which is not too relevant here um yeah for instance in cases of weird pkis where we don't have a trust anchor in the root what's more important is insecure which means the records are provably not secured in a way that the resolver can validate this can happen for instance because there's an authenticator proof that now the S record exists at some point in the nest hierarchy I think insect records which I mentioned before authenticated denial of existence",
        "um and when doing that um authenticated the S records with unsupported digest types unsupported algorithms do not exist",
        "um if a record has been found to be insecure the response to the client then carries the record in question uh without the authoritative authenticated data flag",
        "or next to text trick the resolver into marking the records in secure",
        "first mechanism downgrading signature",
        "algorithm numbers on the signature records here we have just any properly protected genetic Zone and we specifically tested for a single algorithm zones so here for instance one which is secured using algorithm 13.",
        "and in the attack the attacker rewrites the signature algorithm numbers to one that the resolver does not support thereby the chain of trust is broken at the last link so the signature level we investigated this and we found Google public DNS to be vulnerable to this type of attack and since so many zones and users were affected it has been reported very fast and also been fixed",
        "okay our next type of attacks now is um",
        "yeah essentially it observes what can go on when one when things get experimental so we have a more complex chain of trust imagine a Zone operator adds a freshly standardized algorithm to the Zone which is not supported by memory servers yet or uses a private algorithm addition to a non-private one but as the letter one is very very let's go for the first one",
        "our mechanism one now is stripping off supported signature records here the zonus signed with two different algorithms one is supported by the resolver and one is not supported and the S records of the parent at least for the supported one note that here at inesquees of both algorithms as well as the signature records are present so 8 and 5 15 are all represented here",
        "the attacker goes on um dropping off the support and signatures records from the DNS messages to the resolver and thereby only leaves unsupported algorithms with respect to signatures records so here the signature record of algorithm H should be present but it is not and thereby the validation path is enforced via the unsupported algorithm",
        "we investigated this vulnerability and found good to know no resolvers in the lab available good luck but actually two popular open resolver Services namely Cloud Google web vulnerable to this type of attack and speaking of attack surface um yeah roughly seven to eight percent of the uh resolvers from our data set were vulnerable in this type of attack",
        "next mechanism um last but not least stripping of the unsupported dineski records",
        "two different algorithms one is supported by the resolver the other one is not and we have 1D and sq4 Edge for each of them and the S records for both at the parent yes as noted uh DNS keys for both records of our present as well as signatures",
        "so the attacker then goes on and drops the supported in ski records and all the searching all its signatures from any DNS messages to the resolver and again leaves only unsupported algorithms with respect to DNS key and signature records note here the NSP of algorithm H will be present as well as the signature records of algorithm 8. again the validation path is enforced to be routed via the unsupported algorithm",
        "yes so um we had one implementation",
        "um in our lab which was vulnerable to this attack which was a Windows server and the recursive DNS role and all tested Windows Server versions and also one popular um resolver was vulnerable against this type of attack which was of DNS in terms of attack surface on the open internet um five to six percent of resolvers were vulnerable",
        "okay um how could these attacks be prevented well um suggested countermeasure is when considering algorithms the resolver should decide insecure solely based on the DS records so as soon as there's one supported the S record they should really insist on at least one supported Gene ski record and as soon as there's such a supported dineski record the resolvers should insist on a supported signature records on all Zone meter",
        "okay",
        "let's sum it up so our recommendations to resolver operators and developers are essentially derived from the countermeasures so require the strongest present DS digest to work for validation so that the attacker cannot downgrade to weaker yesterday just and as we saw right now they should only consider the S records for deciding to Mark data insecure because of unsupported algorithms because otherwise the attacker could go on and strip off um unsupported algorithms and yeah through its evil Deeds",
        "our recommendations for Zone operators um so first of all please move away from travel as soon as possible and a second keep in mind that adding additional signatures of stronger algorithms does not increase security and as we saw it can even level security if these signature algorithms are not supported by vulnerable solvers",
        "that was it thank you for your attention [Music]",
        "[Music]"
    ],
    "dIVjQrqpKC0": [
        "[Music]",
        "foreign",
        "Security in this talk I will present my research about the vulnerabilities related to the five describers I will discuss how to find them fix them and some exploit methods are also included in the slides and here are some introductions about me I am interested in Android Linux accounting and exploit I found over 200 vulnerabilities in the last two years and I am also a speaker of blackhead Asia this year foreign",
        "of my talk first of all I will give some background on what a file describer is and why I do research about it after that I will dive into the issues in the FD export and FD import operations separately At Last I will give a summary and discuss the future work so let's have a look at what a file descriptor is",
        "we all know that everything is a file in Linux so file descriptors are almost everywhere in Linux a file descriptor is an integer that identifies an open file",
        "in a process there could be many file describers in the process and the value of A5 descriptor could be 0 1 2 and so on",
        "all the threads in the process can operate the FD through this course like read write and so on normally every file described is associated with a fire object in kernel space when we operate an FD in user space the associated file object will be operated accordingly in kernel space",
        "to record record the mapping between the",
        "FD and the the file object and FD array is created in each process the FD array is an array of file object pointers and the index of FD array is FD so we can use it easily know which file object is associated with a specific FD",
        "kernel needs to handle the translation between fire object and FD frequently on",
        "the one hand kernel needs to export a file object as NFD to user process so",
        "the Euro process can operate the FD for read or write the translation from file",
        "object to FD is finished through the FDX Port operation",
        "on the other hand kernel needs to import import the FD to find the associated",
        "file object for further operations in this course the translation from FD to file object is finished through the FD import operation",
        "the FDX port and import operations are very common and basic operations in kernel so let's have a look at the FDX post operation first",
        "the FD export operation in kernel is",
        "divided into three steps for example here is a file object X",
        "and we want to export it as NFD",
        "the first step is to get an unused FD which is X",
        "second step is to set up the FD array to make sure the element of FD array indexed by the FD point to the file object",
        "the last step is to pass the FD to user process after these three step steps the FD export operation is finished and the user process can operate the FD for reading or writing",
        "the FD import operation in kernel is divided into two steps for example here",
        "is NFD which is X and we want to import",
        "it the first step is to look up the FD array to get the file object the second second step is to acquire file reference after these two steps the FD import operation is finished and kernel can operate the file object",
        "let's make a summary the FD export operation is down in Three Steps step one get an unused FD step to set up set up the fdre step 3 pass the FD to user space and the FD import operation is down in Two Steps step one look up the FD array to find the file object step two acquire file reference thank you we also need to know another FD related operation which is close FD when we close NFD the element of FD array indexed by the FD will be set to now and then the reference of the associated file object will be dropped and the FD will become only used",
        "after understanding some basic knowledge of file describers let's talk about why I research file describers",
        "uh they research is inspired by an interesting vulnerability I found last year which is the severe 2021 0929",
        "as you can see that thread B uh creates a DME buff FD with ion",
        "uh this DME buff FD is passed to Kernel space and then in thread a kernel impose",
        "the game above FD and create an ion handle object after that the memory buffer represented by the i o handle gets mapped into kernel space as kernel virtual drawer",
        "uh Connor would reference the kernel virtual draw later but in thread B it can trigger the on map of of the kernel virtual drawer as a result uh use after 3 will happen in this risk condition",
        "the CV 2021 0929 gave me a really",
        "important hint a file describe tool can be shared between kernel space and user space as a result risk conditions can happen between kernel and user operations and here are two kinds of risk conditions I can think of",
        "risk Edition one is like thread a is operating in the file object in kernel space while thread B is operating the FD in user space",
        "and the risk condition 2 is like thread a is operating the FD in kernel space while thread B is also operating the FD in user space",
        "and I I started to think that maybe there are more issues in these risk conditions and I should try to construct such risk conditions in the FD export and import operations",
        "so um let's dive into the issues in the FD export operation first",
        "I will talk about the four parts in this section including the scenario scenario",
        "of FD export operation uh use after free course by risk condition and how to find and fix the issues",
        "first first let's have a look at the comments common scenario of FD export",
        "operation usually user process would request a certain resource by opening a file and kernel we will create a file object representing the resource this",
        "file object would be exported as NFD through the F FDX Port operation I have mentioned after the user process knows the value ffd it will perform operations on FD",
        "through this course",
        "here is a typical example as you can see the implementation of Cisco open is the",
        "scenario we are talking about a file object is created and this file object gets exported as NFD to user process through the FDA exporter operation",
        "foreign",
        "export operation is executed",
        "sequentially which is still far from the risk conditions we want to see so let's review the scenario to make sure we are not missing something",
        "we know the FD export operation is down in three steps",
        "actually we already have the ability to perform the operations on FD right after step two because the FD has been associated with a valid file object in step two however we can only perform operations on FD after step three because we only know the value of FD after step three but hold on do we have to wait for FD to be passed from kernel to know the value of it the answer is no because FDA is predictable we can know",
        "the value of NFD in advance first FDA is",
        "assigned in ascending order for a new process fd012 are usually occupied three will be",
        "the next FD exported from kernel",
        "foreign",
        "five six and so on second FD will be reused after close as you can see uh the in this example the fd2 is equal to FD",
        "ever since we can know the value of fde of that in advance we can change the regular scenario of FDX Port operation to a parallel scenario Suppose there are",
        "two threads uh thread thread a performs",
        "the three steps of the FD export operation type B performs the operations on the FD right after step two",
        "we can see a Time window between step two and step 3 of FD export operation",
        "so if there are some operations on the fire object during this time window",
        "we will succeed in constructing the case of risk condition one as you can see that thread a is performing the operations operations on the file object and thread B is performing the operations on the FD",
        "in this scenario we can construct a potential use of the free case as you can see that thread B can close the FD right after thread thread a finishing step two the closed FD will trigger the release of file object and release the objects after that use after three would happen when thread a operates the file object however this use after free scenario is only based on our assumptions until now now we we still don't know if there are any actual cases in real world",
        "so I started to search for such issues in real world in order to search for the issues thoroughly I looked for all kinds",
        "of Kernel apis which performed the step two of FDA export operation here are the apis I found FD install is the most common API we can say in kernel and there are many other apis that wrap the FD in store",
        "based on these Econo apis I searched for the bug pattern in some vendors kernels and I quickly found two typical codes of debug pattern in the kernel of two vendors as you can see that the file all related objects gets gets referenced",
        "after the step two of FDX Port operation and this just proves that our assumption",
        "is correct",
        "so I spent more time searching for the bug pattern in many kernels and finally I found I found quite a few issues of debug pattern it turns out the bug pattern exists in both vendors kernels and Linux mainstream there are a few interesting facts we can see from these vulnerabilities",
        "first using DME buff is more likely to introduce such issues this is this is reasonable because the dma buff component is designed for sharing buffers across across multiple device drivers and subsystems so it exports the",
        "dma buff objects as as the ft to user space for the sharing purpose but unfortunately many drivers are not taking good care of the FDX Port operation resulting in use after free",
        "second I found the GPU driver say more likely to introduce such issues",
        "so I started to search for the bug pattern in many GPU drivers and finally I found two more vulnerabilities in the",
        "um melee GPU driver",
        "things are getting more interesting because many Android devices you use the melee driver and the meta driver can be",
        "accessed by untrust apps on Android",
        "uh so let's have a look at the vulnerability Savvy 2022",
        "28349 which is an end date I found in melee driver and it affects some older version of many driver some Android 10 devices or vendors are still using the older versions of many driver so they are affected by the vulnerability",
        "the vulnerability cvu 2022 to 28350 is a",
        "real zero day I found a melee driver it existed in a version of melee driver and some Android 12 devices or vendors are affected for now the vulnerability has been fixed foreign",
        "exploit of this vulnerability actually before my exploit exploit a no exploited",
        "method has been given by Matthias across from Geo security for a similar vulnerability with this method we can finish reading or writing privileged files from unprivileged privileged processes without worrying about mitigations like kasr Smet or kcfi",
        "however this method won't work on",
        "Android because of SC Linux to exploit",
        "this vulnerability on the affected Android device I came up with a new method with which I can succeed in succeed in writing privileged files from",
        "on trusted apps and here is our poc in in this POC I succeeded in writing a privilege to share the library from an on Trust app app because of the limited time the details of the exploit exploits are put in the supplement part of the slides",
        "to find the use of free issue caused by the risk condition in the FDA export operation we only need to check if the fire or related objects are referenced after these listed functions this can be",
        "done more effectively by tools like code ql",
        "there are two fixed methods for such issues the first method method is obvious which is uh don't reference the file or related objects after the step two of FDA export operation in kernel until retain written to user space here",
        "is an example which is the part of Cisco open as you can see after the FD is installed the file object is not referenced and FD is returned to user space directly",
        "the second method to fix the issue is to reference the file or related objects with log protection and share the lock in the file release function of of FD as you can see that if if we share the same mutex log in the two codes the risk condition can never succeed so the uaf won't happen here is an actual example from vendor s",
        "and then let's dive into the issues in the FD importer operation",
        "I will talk about four parts in this section including the scenario of FD import operation FD type confusion caused by risk condition and how to fix find and fix the issues",
        "let's have a look at the common scenario of FD import operation when user process when user process performs the operation on FD through this course like read write uh the FD will be passed to Kernel space and kernel will get the associated file object through the FD import operation after that kernel will operate the file",
        "object to finish the further work",
        "here is an example of the scenario which",
        "is the implementation of Cisco right",
        "as you can see that the Ft import operation is performed in the function FD get post and then the file object will be got and passed to VFS rights for further operations",
        "but this regular FD import operation is executed sequentially which is still far from the risk conditions we want to see so I started to re search for all kinds of scenarios of FD import operations in kernels and by by referencing all these",
        "listed kernel apis for FDA import operation and finally I found some really interesting issues so let's have a look at them the first one is Savvy 2022 21772",
        "which I found in your vendors kernel as you can see that this function will create a specific team DME buff FD and then it will import the FG to get the dma buff object after that the private field of the game buff object will be referenced as a t-share mem object object for literature",
        "use",
        "there's three steps in the function are simple normally this is safe in",
        "sequential execution but what if there is a risk condition getting involved I found that if we apply the risk condition 2 into this case something interesting would happen",
        "here are the details as you can see that thread a will perform the three steps of the function it will create specific dma buff FD in the first step right after this Fred B closed the FD and create a different different game above FD this will make the FD become a totally different one in thread a as a result a win thread a imposed the game buff FD it will get a totally different dma buff object but thread a still treats the private field of the DMV buff as t-share mem object this will cause a type confusion issue",
        "and the second issue is like this",
        "there is a sync file FD passed from user space and the function imposed the FD for the first time to get the damn fence object it will check the dma fence object to make sure it's valid and then the function Imports the FD for the second time and the private data of a file object is returned as sync file object for little use",
        "the fourth step four steps in the function are simple normally this is safe in sequential execution but I found that if we apply the risk condition 2 into this case something interesting will happen too",
        "here are the the details as you can see that thread a will perform the four steps of the function it will it will import the FD for the first time to get the game above fence object it will check the dma fans object to make sure it's valid right after this third B close the FD and create a different FD this will make the FD become a totally different one in thread a as a result when thread a imposed the FD for the second time it will get the totally different file object but thread a still treats the private data of fire fire object as sync file object",
        "this will cause a type confusion issue too",
        "these two special issues represent two types of the issues in the scenario of FD import operation the first type is FD time of create time of import the bug pattern of the type is like this the first step is to create a specific FD the second step is to import the FD to get a specific file object at last the reference the private data or file",
        "file object or other related private objects because there is a Type window the FD can be recreated",
        "the second type is the fdw import",
        "ant of the type is like this kernel Imports the FD for the first time to get a file object and this this file object gets processed for ProPress a after that kernel Imports DFD again to get a file object and this file object gets processed for purpose B because there is a Time window between the two type 2 ft import operations the FD can be recreated both both types",
        "of issues might cause FD type confusion",
        "however there are still two questions that need to be answered there are more issues of these types and how to find these issues more effectively actually",
        "it could be difficult to find such issues by fuzzing because sometimes the",
        "budget code is located in kernel the user process can barely notice it and also the risk risk window could be tiny so I'm thinking about that maybe we can detect such issues at runtime by some detecting code",
        "here is the regular life cycle of an FD",
        "the original state of NFD is FD unused as you can see and vfd will become FD created when the",
        "FD gets associated with a file object through FD install when the FD gets returned to user space the state will change from FD created to",
        "FTE user",
        "when the user press user process operates the FD through a Cisco the FD will will be imported by kernel and the",
        "FD state will change from fde user to FDA first to use and then when the Cisco Returns the state will change from FD first use to fde user",
        "the two types of of issues in the scenario scenario of FD imported operation can be located clearly in the life cycle of NFD the FD time of create",
        "time of import issue might happen when the FD State changed from FD created to Ft first to use and the fdw import issue might happen when the fds did change from FD first used to FD Second Use",
        "actually the implementation of",
        "of the detecting code is very simple we only need to add some code to a few kernel apis which such as the FD install fd-get and so on and I have put the detecting code at GitHub",
        "here are the issues I found by both the detect tool and code outdating it seems",
        "that there are quite a few issues in the scenario of FD import operations in vendors kernels",
        "the fix for FD time of create time or important import is obvious kernel",
        "should create a specific file object for use directly instead of creating NFD and",
        "importing it the fix for Ft double import is also obvious kernel should import FD only",
        "once to get the file object and all the following code should process this file object directly importing NFD many times",
        "is never a good idea",
        "for now we have talked about the issues in the FD export and import operations let's make conclusion and talk about the future work in this talk I discussed a typical use of free issue caused by risk condition in the FDX for operation in kernel so",
        "there is a really obvious question we may need to ask ourselves",
        "are there other similar kinds of resources just like the file describer",
        "which is predictable and with export",
        "operations in kernel",
        "the answer is yes I found that IDR is a really typical resource of this kind it's predictable and x and Export operations can be performed on it in kernel",
        "and is widely used in kernel drivers as handle ID session ID or object ID and so on so here comes the future work we can try to find a similar use after three issues in IDR or others",
        "self-implementing indexes",
        "I also discussed the Ft type confusion issues caused by risk condition in the FD import operation there is also a really obvious question we may need to ask ourselves are there other similar kinds of resources just like the file described on which similar import operations can be performed in kernel the answer is yes",
        "there are quite a few resources on which we can perform similar import operations in kernel such as IDR process PID user",
        "virtual address and so on so we can try to find a similar issues in these resources",
        "and thanks to more important",
        "for helping me with my slides they made",
        "great suggestions thanks a lot",
        "actually I really want to talk about my exploit method for CV 2022 to",
        "28350 but due to the time constraint I",
        "put all the exploited details in the supplement supplement supplement part",
        "and also I have proved that the issues I researched about are exported",
        "exploitable even if the risk window is really small details of turning these issues to memory corruption for for exploitation",
        "are also put in the supplement part",
        "read them if you are interested thanks",
        "[Music]",
        "[Music]"
    ],
    "ydkdIVCdPis": [
        "[Music]",
        "foreign",
        "welcome to my presentation um today my topic is related to Apple's Wi-Fi subsystem buzzing and kernel",
        "vulnerability research the title is dive into Apple IO 80 to 11 family volume 2.",
        "my name is from somal Tech and",
        "Enterprise data security company I can be reached through this email address today's penetration can be regarded as",
        "the second part of my black hat USA Topic in 2020 which can be found here",
        "um if you haven't heard of this topic before don't worry uh I will first introduce the subsystem and quickly go through the previous work so um the Wi-Fi subsystem",
        "first let's go back to two years ago one day in January I found an interesting thing a driver called airport broken Nic",
        "disappeared from the system but with the deepening of research I found that starting from IOS 13 and Mac OS 10.15 Catalina Apple refactored the",
        "the architecture of the 80211 Wi-Fi",
        "clients extensions and the renamed the new generation to family version 2.",
        "um behind the network architecture reflecting I think it is a change of concept one of the goals is to upgrade from basic network communication capabilities to support trusted privacy",
        "sharing among all types of Apple devices",
        "here is a brief architecture diagram from email user mode framework to family",
        "extensions plugging and low-level extensions we can see the changes between version 1 and version 2 for example here there's no more airports broadcom",
        "serious extensions",
        "and we are security researchers so two years ago my work also included in early",
        "Asian of fighting framework",
        "um a single code coverage analysis tour and came up with the kernel address and advisor solution as a result of the work kernel vulnerabilities I I I found can be classified into several types like",
        "vulnerability affecting all in way one and holding weights you and both way one and with you in specific cases there are some vulnerabilities I have announced this in detail but others that I cannot disclose because they are haven't been fixed before blackhead USA 2030",
        "um this vulnerabilities are found in various components among a mentioned above for example uh 2020 98 32 is in",
        "the family extension while 9833 is in",
        "the underlying driver",
        "and two years have passed let's return to 2022",
        "all the previous vulnerability have been fixed and the or security of the operating system has been grouped Mac OS speaker Monterey Ventura has been",
        "released and the era of Apple silicon has arrived but I still have a lot of questions such as family version 2 has",
        "been reflected again and the name has been changed back to io8 0 to 11 family so what happened behind this and how to identify the new attack surfaces what else can be improved in security engineering and most importantly can we",
        "still find a new high quality kernel vulnerabilities",
        "um yeah please allow me throughout quick answers to these questions change is the only consistent and domain knowledge is very important for security engineering to be honest too many areas can be improved and for vulnerability hunting I have to say uh yes definitely so here we go",
        "the improvements of the new generation fighting framework begins with attack",
        "surfaces identification my first demand",
        "is actually very simple I'd like to change various settings of the network",
        "while sending and receiving data uh then",
        "uh such interface should at least include",
        "to me at least include traditional bsdio control iocates connect the core methods",
        "serious and the sales control interface package sending and receiving and and network settings faces as for network",
        "interfaces itself we will refer to them in the following slides but by the way an interesting topic is that we should try to fast uh the high level and the low level interface at the same time I have a good case two years ago for for this Mac OS Bluetooth HCI I",
        "can call the the interface provided by the Bluetooth framework but talking directly with the kernel means that I can bypass the checks and the restrictions from user mode I mean sending raw data to Firmware",
        "directory",
        "um here I listed some latest cases the xnu 80 20 branch is not on Apple's",
        "official GitHub but it is important in",
        "the branch we can see the new for example Nexus i o control interface Apple also has a a module called Nexus",
        "in addition the the 2080 Branch contains",
        "a lot of Skywalk subsystem source code such as here",
        "um Pest Control registration",
        "um so we can extend our fighting framework based on this domain knowledge",
        "the demand too is about interface integration I'd like to switch the",
        "status or working mode of the kernel State machine randomly for different network interfaces reverse engineering",
        "shows that a larger of number a large",
        "number of interface support different subsystem or States at the same time this also leads to the next demand I need to figure out and track which interfaces are triggered and not announces the code coverage rate uh but I I actually don't want to slow down the kernel so kernel in life book based the solution is acceptable acceptable to me at this stage",
        "and um there are some default interfaces",
        "in the system um have you uh starting program talked to them before if the answer is no I think it is a time to operate the fuzzle um for example it ethernet zero is the most common one AP one AP shot for access point and awdr is short for ad for wireless direct link so",
        "there are all our targets",
        "the next part is about xnu tested cases which can be shown here",
        "I listed some of them like net agents netbridge if you haven't read these test cases before I highly uh recommend you to do so as they contain potential attack service",
        "so far the the new generation of Apple 80211 fighting framework integrates more",
        "than 40 network interfaces and attack surfaces one thing I want to mention is that is the more attack surfaces covered during each each test is better",
        "um I found that this is not the case when they are mending random parameters",
        "the result is not as good as expected so so summary number one uh for for a",
        "tap surface and domain knowledge uh we need to uh accumulate as much domain knowledge as possible by learning external source code documents and test cases but after we we build the further uh for each round I think we should randomly select a two or three interface units and test them as fully as possible",
        "the next part is related to Kernel debugging sometimes we have to rely on the the power of remote kernel debugger because the information provided in the",
        "Panic log is often not helpful in finding the root cause variable values",
        "sometimes require Dynamic analysis",
        "um yeah this is a a vulnerability I discovered last week on Apple silicon M2 Mac OS Ventura uh build number is uh 22",
        "A5 311 F it's a Memory corruption uh",
        "issue um I have a more detailed picture but the the armor instruction but never mind uh the the arm instruction and the core",
        "stack here are actually have no valuable",
        "information without",
        "the help of lldb debugger there's",
        "probably no answer",
        "on Apple silicon platform we lack official support the KDK document says Apple silicon does not support active kernel debugging we cannot set breakpoints continue code execution stabbing step over code this means that we need the help of third-party debugging Solutions like Asahi Linux",
        "so here's the summary of part two",
        "um yeah we need the help of of third-party solutions for Apple second platform",
        "and the the previous Panic picture is a there's a typical case of corruption so we need we also need kernel aggression titles help uh we even need to implement uh carson-like solution to dynamically",
        "monitor uh special features of",
        "third-party closed-source kernel extensions",
        "um another thing I would like to discuss is that uh we have to make some fixes because sometimes the building tours are or kernel kdks don't work very well",
        "this is a uh one of the problem I have encountered things xnu",
        "71.95 a function called console IO alert",
        "has been introduced into the kernel",
        "this is uh this hardcore function will",
        "check whether the system issue console i o in case of uh interrupt disabled context on Windows platform such blue screen of death can be classified as IO ioqir errors because we cannot access the pageable data at dispatch level",
        "however the building cars and kernel will always issue such i o requests so that we cannot use the kernel debugger and uh yeah and and no one complines",
        "about such problems on the internet uh me either so so it seems that we all fixed this kind of boxes silently",
        "and uh four years ago I open sourced a Mac OS Project named the chemo I used the kerneling light hook engine to implement a single uh Carson and code",
        "coverage analysis solution this time I",
        "have already came on and the kernel and Colonial engine to Apple cell phone platforms with schema's help I I believe we can do more",
        "so here's the summary of the part number three",
        "um yeah sometimes we have to do fix this because the building uh kernels or tours don't work very well the last part I want to mention is uh",
        "uh in this section is about the Apple SDK building and the third party tours Apple SDK contain many useful information such",
        "as Wi-Fi related head files and and data",
        "structures which will save a lot of time for reverse engineering in addition",
        "uh many interesting command line Force are are built in the Mac OS operating system such as airport and the Skywalk",
        "control you know there are potential",
        "targets",
        "by the way uh the the Wi-Fi developer Community has been maintaining the interface and the feature list and I think we should contribute to the latest kind of change to the community when we have time last time I I reversed the",
        "interface like uh this one sky Skywalker",
        "link State and this time for example the",
        "the Au 1a4 remote camera set is the latest",
        "change",
        "yeah so far we have discussed four accepts about network interface and",
        "attack surfaces about static analysis uh",
        "static and dynamic analysis methods creaking tours and and the rest if we put everything together uh we will get a",
        "roadmap for building a new generation of Wi-Fi password",
        "so this is a overall architecture of the",
        "system from user mode to Kernel mode from high level interface to to low",
        "level interface and attack surfaces from Target to host the machine",
        "it's a it's a it's a big picture",
        "yeah and I have a short video I will",
        "show you how it works",
        "[Music] um yeah this is what we do um on the left is the is a target machine and the on the right side is the host machine they are connected by uh some part 3 to ethernet adapter the",
        "under uh",
        "the the operating systems version is a Mac OS Ventura build number is uh 22A 5",
        "3 11 F the latest one when I made in this video",
        "um and then let me run the from my father here",
        "and",
        "the kernel crash and the immediately and",
        "the interrupts to the debugger",
        "yeah and the CPU was created um yeah this is a one of my their day vulnerability but the information here is useless don't be worried",
        "okay let's back to the slides",
        "um in the next reception now let's say",
        "um what's the price we have this time we apologize for the interruption uh",
        "please bear with us",
        "uh can you see my screen",
        "uh",
        "okay uh so let me continue",
        "okay um this is some of the kernel vulnerable here I have reported and the some of which have been uh assigned CV IDs like",
        "uh this one uh 32 837 we will say it later uh",
        "vulnerabilities uh cve 2020 98 99 and",
        "the 2020 113.",
        "haven't we fixed before blackhead USA 2020s so so I cannot share their details two years ago since these two kernel vulnerabilities are very interesting so uh the the case study part will start with them and similarly there are uh also some vulnerabilities that haven't been fixed in time this year so I hope we can continue the topic uh maybe next year or next time",
        "the first category we are going to discuss is the kernel stack based debuff or floor one rability um 2020 98 99 set Rome profile the patch",
        "information is here [Music] um and the reverse engineering shows that uh the vulnerability is related to broadcom's OS independent layer OSL here",
        "we can see a function named the OSL arrow and the input parameter is the broadcom arrow",
        "and as we can see here",
        "this Legacy code",
        "uses by to byte assignment assignment",
        "instead of string save string copy functions I I think because it's a Legacy code I think a compilation of this Legacy code with iocates must be a challenge and and the",
        "root cause may be related to the the the the compiler or something",
        "um and then the the most important thing is uh the wonderful function mistakenly trusted the input parameter and treat it as the active condition of the",
        "assignment Loop here",
        "so here's the information where the",
        "kernel crash uh the current instruction",
        "is returned and the RBP uh at this point",
        "is uh is pointed to",
        "8p8 yeah here 8p8 and this one should be",
        "written address and this one should be uh RS the RBP so we can that means we",
        "can control our AP and and the uh our RBP so yeah you can see here uh I already overwrite the RBP register",
        "um and here there's no uh kernel uh",
        "connect uh Canary protection in the stack so I think it's a related to the",
        "Legacy code",
        "um a frequency ask the question is does stack based debuffle for vulnerabilities do make sense today a good example comes from the penguin team uh CV turning 20",
        "19 8648 in that case air LVN insert Canary",
        "in a wrong position another case worth measuring is uh this one",
        "uh exportation of Kernel step-based",
        "buffer floor in the real world is not as straightforward as in the books especially when you don't have a kind of debugger so um set-based debuffle for wonderability can still be seen today especially in the physical and for 1999 the warnable",
        "function has no step cookie production we can control local variable RBP and",
        "even iip register",
        "two years have passed uh you might ask are there still such high quality kernel",
        "stack based overall right vulnerabilities",
        "definitely this time we have the CV 2032",
        "uh",
        "32847 the vulnerability affects iOS 15.6",
        "Mac OS modeling and other platforms",
        "uh 32847 is related to a Bluetooth",
        "profile and configure features in short",
        "a stack based variable are parsed",
        "between functions but the warnable function mistakenly treats them as normal and The Trusted inputs",
        "Computing based on this trust can lead to serious problem",
        "um yeah I have a panic information here's",
        "the information about the chronographs you can say RBX here is",
        "um actually a stack based variable and",
        "the processing of parsing can be controlled for example the rcx we can control that value so",
        "it's a it's a stack based",
        "calculation and",
        "finally to",
        "uh kernel stack over rate and overwrite",
        "so for for this case I would say um kernel stack or kernel stack override vulnerability represented by uh 32 847",
        "can often be found the root cause is related to stack-based variables being passed and used for for calculation or",
        "policy but the data in the uh",
        "in the local variable as controlled by",
        "user mode or malicious input so",
        "um yeah this this is a root cause and the uh the stack",
        "canneries solution Canary solution",
        "cannot solve all the problems",
        "the next category is arbitrary memory",
        "rights vulnerability and the first case is uh cve 2020 113.",
        "um yeah here's the patch information uh",
        "for example iOS 14 and the Mac oscarina",
        "ink shots um the the wheels kernel space boundary condition caused this vulnerability",
        "reverse engineering shows that there are",
        "two branches uh one is one is uh here if",
        "the input parameter is from user mode uh",
        "it needs to enter enter here the copy",
        "out branch and if the input parameter is from kernel mode is I need to enter the memory move Branch so",
        "here search boundary condition is critical in my opinion this is not time",
        "not the time to do a freestyle",
        "um as you can see here the RDI register the",
        "value in the RDI register can bypass",
        "that weld check a check so",
        "um so so don't let the defensive ends",
        "Showtime uh turning to a show stopper",
        "and and the cost deck is like this um we yeah that makes very very uh go to the memory move range and uh but this parameter can be",
        "controlled from user mode",
        "next um combined with kernel information disclosure vulnerability a complete",
        "local EOP chain can be formed a good information disclosure example I I can share is the 2020",
        "98-33 uh here is a link if you are interested",
        "so for uh CBE 2020 uh 130 I would say",
        "um this is a arbitrary memory right wonder if it is caused by a boundary checking error and the the value to be writing is",
        "controllable or predictable uh combined",
        "with kernel information disclosure vulnerability a complete local EOP chain export chain can be firmed and the right primitive is stable and does not require heat potential manipulation the the and the the last one is the",
        "interesting part this vulnerability of facts hand resolve Apple",
        "bcmwmw wln Core debugger handlers",
        "actually it's about 200 handlers",
        "and uh yeah two years have passed are",
        "they still such high quality arbitrary kernel memory rights vulnerabilities definitely this time we have the cve",
        "2022 to",
        "6762 get RX rate",
        "also uh effective affecting iOS",
        "15.5 and the Mac OS monetary",
        "um yeah for this case uh one sentence is enough to explain the root cause the vulnerable function for goes to sanitize user mode pointer or address",
        "and I also listed several uh",
        "function should be should be called on when on Mac osrs and FreeBSD platform",
        "which we use copying and copy out Linux kernel if you use a copy from user and copy to user and on Windows kernel um may we should uh",
        "use the proper read and proper right yeah here is the the cost act",
        "um in other words the kernel will write data to Banning address you provide",
        "the the RBX is a target address and the Rex is a it's a fixed value",
        "[Music]",
        "but it just happened",
        "so summary of case number two um compared with 113 the root cause of",
        "26762 is simpler but the wonderful functions progress to sanitize usable",
        "pointer",
        "um the but this simple simple and the stable kernel vulnerability are powerful they are perfect for part one um and for this case the the value to be writing is fixed um so because I am also a kind of developer so uh kernel vulnerability caused by copying copy out to copy from user to user corporate copyright are very common um kernel developers should carefully check all the input parameters",
        "yeah all all the input are potentially",
        "harmful",
        "the next category is the most common",
        "um kernel Heap Auto bonds read and write vulnerability and I can share with you two cases",
        "um 2022 30 to 837 and and it's 60. uh",
        "yeah iOS and Mac OS Monterey",
        "foreign",
        "I can set the lens to any data for example if you CDF um and this is a the test on the Intel based platform and the cost app is uh is related to memory copy and yeah this",
        "this is a stack on Apple silicon",
        "um yeah setting the lens to for example that beef uh means the paranoid is definitely going to die",
        "um yeah but this kind of uh",
        "vulnerability is very easy to be to be captured by a kernel debugger but for this one for the for the second one um 2020 32 860.",
        "um for this case the total number of autobahns is not enough to to cause a kernel panic uh it's just a read uh several bytes over the uh",
        "keep objects uh or write to that HIPAA object so in this case we need the help of Kernel address standard python but before that we need to fix the the Panic problems in kernel cars and kernel as",
        "mentioned in the second section",
        "okay Samurai um I would say this type of vulnerability can be easily captured by uh kernel address sanitizer and the the",
        "the exploitation of the vulnerabilities usually requires skills uh such as hip friendship and I have a good kernel hip friendship example uh ID is cve 2015",
        "0057 here is the link and the root cause of this vulnerability are related to a lot of reasons for example the lack of effective input verification logical",
        "errors uh integral workflow yeah and so on",
        "the last case is a type confusion",
        "vulnerability yeah [Music]",
        "monetary and pixel",
        "packet and the function is related to",
        "update broadcaster MI",
        "so um yeah eshops the first parameter of",
        "the function update broadcaster Mi is defined defined",
        "as the um a Skywalker interface and this object",
        "the size of this object is very big is greater than uh",
        "6800 bytes in HEX",
        "um and I I dumped that object",
        "uh however things get completed uh when a function tries to support different subsystems or interface",
        "please note that the following object is",
        "much smaller than 6 30. so we can say",
        "um yeah here there are two different objects and the the value here is",
        "different indicated it's a different type",
        "so five minutes Mr Wang five minutes",
        "okay um and therefore High confusion means this kind of computer means Autobarn access so um yeah because this one is a smaller object and uh it doesn't have uh six thousand bytes so it's a uh Auto bomb access and a Autobahn read and write issue",
        "um after reviewing the patch of this one two six seven six one I found there is still a non-point reference bug in the one book function um by the way I found a lot of non-plying the reference box uh sometimes I have to report them because they significantly slow down my fighting effort",
        "um yeah here's a it's a summary for this case uh callback functions especially those that's four different architectures interface or working modes",
        "and state machine and the exception",
        "handling need to be carefully designed",
        "um and the corner case matter Spirit",
        "Patrick is worth auditing",
        "one more things um uh follow-up ID uh 0706 is related to",
        "Kernel Heap autobahn's right and the follow-up ID 30 17 is related to arbitrary memory access I reported them recently",
        "um and four uh 3017 as far as I know",
        "this is the second time in two years or maybe three years that's the same function has been found to be vulnerable",
        "um and here are other good examples [Music] this one 98-34 uh yeah it's also Wi-Fi",
        "subsystem uh as far as I know second time to be found vulnerable and this one's 39 12",
        "um it's about uh a Bluetooth HCI interface it's a third time in history the same function has been found to be vulnerable so yeah so I think",
        "um",
        "some handlers with complex logical will",
        "be introduced with new vulnerability every once in a while uh even if the old ones have just been fixed so yeah",
        "yeah last part takeaways and the end",
        "um from the perspective of Kernel development um I would say apple has made a lot of efforts um and the security of Mac OS and iOS has been significantly improved and all",
        "includes are potentially harmful",
        "as kernel developers we should carefully",
        "check all the input parameters and the newer features always means new attack service um yeah callback exception handle instant machine need to be carefully designed and form a perspective of vulnerability",
        "research I have listed six points",
        "um and they have basically been mentioned earlier uh the last one is uh",
        "yeah From perspective of security engineering and vulnerability accounting uh yeah I would say if you have done a",
        "point from point one to point four for example uh integrate interface and attack surfaces include kernel address",
        "Enticer called coverage analysis for and",
        "the part useful tools to to Apple silicon platform",
        "um yeah combined all all available means such as reverse engineering kernel debugging access new resources SDK KDK third party",
        "tours um if you have done this or just studied you will find um Apple did a lot of work but the results seem to be similar to 2030.",
        "um but you know we have seen we all have seen apples and apple silicon's progress so yeah let's keep going",
        "yeah thank you that's my presentation thank you for your time [Music]",
        "[Music]"
    ],
    "gopo2FI9epw": [
        "[Music]",
        "foreign",
        "I swear I am not a cat",
        "all right so uh I got into infosec uh password as a password cracker then uh you know I'm a cryptography Enthusiast and uh about a decade ago I was watching uh Tech YouTube channel and they kept on being uh sponsored by a password manager and I you know I was like ah maybe I should look at it and uh",
        "sorry I the it's all um I I can hear myself sorry uh",
        "so uh I started finding all these bugs uh it was the first time I actually Co audited anything and you know uh there",
        "was like a",
        "anyway uh so there's like downgrade attacks and stuff like that and then I looked at other ones and they had similar bugs and whatnot and I basically I decided uh how would I make one and then this is basically that Journey uh I was on the password competition panel and uh I broke uh I don't actually know how to say that I assume it's like uh Latin so it's like the Visa you and then",
        "um I broke delegation for the original version of uh Makwa uh but that was",
        "fixed so uh so here's the agenda for today uh key stretching you know and then pass through authentic exchanges",
        "uh so key stretching this is usually for you know passwords",
        "um so hashing that would be for authentication so when you log into a website you know if they hatch your password look it up in a database and then um see if it's right and then uh password kdf",
        "that's to generate a key usually for like encryption or algorithms like picks",
        "uh there's also another thing that you can do with key stretching which is uh fingerprints one example is signals safety numbers they generate it's a",
        "30-bit 30 decimal digit number which is basically 100 bits and they wanted to stretch it to 112.",
        "so why would you key stretch for passwords that's basically what I'm going to be talking about but uh so uh Ashley Madison there's a breach uh decrypt cost 12. those are really really",
        "good key stretch they're really slow it's you know 100 a little over 100 hashes per second that you can do on a GPU so if you were to guess one password such as password against all the password hashes in the database it would take 90 GPU hours to guess one but",
        "um they also stored salted case insensitive md5 hashes next to them uh there were 15 million of those and then when it was discovered by uh Sino Prime",
        "cynosure Prime sorry uh",
        "11 million of those were cracked in 10 days because uh",
        "you know md5 is very fast so then all they would have to do is uh run it you know uh figure out what case those passes were so in those 10 days uh 73 of those were broken so uh there's different types of uh key stretching algorithms",
        "um computationally hard uh basically just how much work is done so number of blocks of hashing that you do there's parallel versus sequential as a attacker you only care about how much work was done and as a Defender you only care about how long it takes so if you have",
        "um a computer with multiple cores and specific",
        "CPU instructions called simd single instruction multiple data you can then run you know a hundred hashes in parallel first one",
        "that you would be able to so it'd be harder in a shorter amount of time memory hard the way that those are",
        "strong is the amount of memory that's being used limits how many threads on a GPU that you can be using so as you use more memory the GPU can't use as many threads",
        "uh and also like uh how much bandwidth is consumed because uh gpus have a lot of bandwidth for uh CPUs",
        "um Cash Card uh the way that these are strong is uh instead of bandwidth it's the number of transactions so on a GPU uh the bandwidth uh the bus size is rather large and with a cash art algorithm you're only using a fraction of that uh so you're reading like a 64-bit Ram randomly 64-bit integers and then combining all those with a very fast operation like add and xor",
        "so uh here's some algorithms",
        "parallel PB kdf I'll be talking about that later pbk beef two uh b-crypt uh",
        "bscrypt that's uh algorithm that I did a talk at besides uh yesterday",
        "um memory hard you know argon2 that was the algorithm that was picked from the passive hashing competition",
        "uh",
        "key stretching so uh basically if you're making a key stretching algorithm uh if you follow these three steps and there's the optional step for memory Hardware you're doing walk-ups that are",
        "independent of the password um so you hash all the inputs you know password salt whatnot um then you do work with that seed you generate work a value called work and then um you use a kdf to then stretch it to whatever size you want",
        "um so if you don't follow so these algorithms don't follow those three",
        "steps and there were CVS on them these were so when I came up with those three steps uh it that is very new in comparison to these algorithms these are older uh technically uh pbkdf2",
        "um that was uh that CV is because of a implementation bug",
        "so uh key stretching bugs uh",
        "decrypt silently truncates to 72 bytes",
        "and so this is code from the UK's government's police cyber alarm I don't actually know what that is but uh Paul Moore on Twitter uh tweeted about this so",
        "basically uh",
        "P hash that is",
        "um 64 bytes so it leaves only eight bytes for your password there's a simple fix if you uh actually hash all that along with the password then you know this is actually close to what you should be doing with decrypt you want to Hash the password with uh",
        "hmac so you can have a pepper as the key and then the message being the password and then put that in and then you want to have ASCII uh",
        "uh encoding of it so uh even if you do follow all the steps uh there still can be bugs that happen this was with bouncy hassle um it only checks the first occurrences of those characters and you know a few of them uh are at the beginning and there's a probability that you get an unlucky hash where the any password would match so I calculated those",
        "probabilities uh when the the bug came out I haven't actually double checked but I'm pretty sure they're right so um how to do key stretching so these are the the three steps I've removed the uh optional stuff and you might be looking at do work and thinking that's there's there's a lot missing there so uh how to draw an owl meme you know",
        "uh so this is pbkdf2",
        "um there's actually uh two issues with it um you know according to this the three steps so uh if you don't do hmac and net and hmac finish if you were to just do hmac where all the hmax finishes are you'd have you'd as a Defender you'd be doing twice as much work but also if someone enters a really really long password you have to Hash that every time and you can uh it'll be a Dos one of those uh CVS was basically that",
        "um also the red boxes those are independently generated so you're doing if you ask for more output from pbkdf2 you're doing more and more work but you can use that as you can use that foot gun for an algorithm uh this is something I came up with uh parallel ppkdf2 um basically you just ask for a large output and then you xor all those blocks together then you put that into PVP area of two to stretch it to whatever length you want nist should um like Fast Track some uh and you know pbk df3 uh that is something like that because",
        "um currently they suggest pvkdf2 or",
        "balloon hashing but balloon hashing doesn't actually have a a spec like",
        "uh it's just an idea sort of thing",
        "um so minimum password hashing settings so",
        "you want to make sure that an attacker gets less than 10 000 guesses per second per GPU Jeremy Gosney uh is the one that was quoted saying this that it was after uh you know a breach and the password",
        "hashes were such that they were less than ten thousand per the fastest GPU at the time and he said that that was proper slow I then used that and then changed the definition of GPU to mean the best for password tracking and so maximums uh these are very dependent on what your Hardware is so if you",
        "basically don't want to take too much time or too much memory and if you're doing server authentication you know hashing um you want to make sure that your throughput is uh what you want and since those are all like you know dependent on uh your Hardware uh I'm just going to talk about minimums because if well it's easier to you know give minimums so uh bscrypt as I said this was uh I did a talk at b-sides LV yesterday um so those are the minimums uh these",
        "are actually extremely fast you can go way higher uh these are like uh run times of milliseconds",
        "um so the 1.9 million in the uh",
        "uh I should highlighted",
        "um so basically in general you want to use the highest uh cash level per core",
        "and then for number of iterations T",
        "that's based on how many memory transactions uh a current GPU gets",
        "so uh bcrypt minimum settings are very simple uh cost nine uh technically well",
        "because uh the way bcrypt works with their costs it's exponential so um it's technically like 8.1 but uh you know you have to put in an integer um oh uh the link at the bottom of the screen uh that is my web page I will be updating that with uh you know current recommendations",
        "um so argon2 uh they had an RFC uh",
        "the people that made are going to put out on RFC um",
        "and so those are the settings that they gave you know",
        "uh basically you know two gigs one iteration 64 Meg three iteration you know very similar just kidding uh those are wildly different um the password manager that I use keepass um uh they don't even allow you to do uh two gigs but so these are my minimums",
        "um these are based on the memory bandwidth of current gpus",
        "uh basically there aren't any good benchmarks for it for password tracking uh the so if you look at the general formulas the alpha variable that is uh",
        "the percentage of memory bandwidth that you can actually consume and that depends on how much memory uh you know the memory setting uh it's you know assumed that uh",
        "around uh",
        "64 Megs ish then that will start",
        "dropping as you double uh",
        "memory the speed of a GPU will be cut in quarter because it's doing twice as much work with half as many threads",
        "so s grip minimums um same thing it was based off of uh memory bandwidth so uh you don't have to answer it just think so pbkdf2 pulse settings uh what do you",
        "think is like a high number you know like a good number and what you you think industry standards would be well here's my minimums they're so it depends",
        "on what algorithm you're actually hashing algorithm you're using so uh you",
        "know shell one is very fast on a GPU so that's higher um technically uh Blake 512 would be the",
        "best algorithm to use because uh there's internal parallelism so as a Defender you can use some D instructions single instruction multiple data um so it will be faster but faster as a Defender for the same strength as others so parallel pbkdf2 uh",
        "uh it's a simple thing you know cost three cost one each cost is equivalent to uh you know over a hundred thousand iterations uh so",
        "uh password authenticated key exchanges",
        "um",
        "yeah so uh you can use these for uh password authentication so when you're logging into a website um you know instead of giving your password over you do this key exchange then there were a bunch of uh a few years ago a bunch of companies found out that they were accidentally logging passwords so if they switch to a password kdf up",
        "uh Pig",
        "um then even if they did log all those messages uh you know there wouldn't be anything uh important in them uh so you can also use pakes to establish a encrypted",
        "tunnel uh you can use a magic Wormhole for sending files or fighting uh",
        "phone spoofing uh",
        "so you might be if you've heard of scram maybe not uh",
        "the problem with scram is you have to be on an encrypted Channel because anyone that sees those messages if they see a successful you know login those messages are equivalent to a password hash so in the case of logging you'd be logging password hashes uh so types of picks uh balance those are peer-to-peer so uh you know a person types in the password on one side someone else to pass it on the other then there's augmented uh apic",
        "uh those are client server uh do not call these uh symmetric asymmetric uh one reason is there's asymmetric and symmetric cryptography but also it implies that there's only two so uh two different types of picks uh doubly augmented This was um there's a long email from Mike Hamburg where at the end he uh",
        "uh you know off you know just like in a really short like sentence mentions that it could be dog uh doubly augmented and um you know a few years uh he said he didn't know like a good way uh you know what that could be used for a few years uh later um I figured out uh the perfect you know match for it which is Wi-Fi uh so",
        "basically um your doorbell and your access point your doorbell would be a device that has basically uh you don't want someone to break into your doorbell and then be able to uh use the information stored on it to spin up an AP and then attack your network with a doubly augmented pick uh",
        "the doorbell wouldn't have any information necessary to make a access point um",
        "then uh identity pick this is you know basically uh there's everyone has an identity roles and permissions and stuff and a good fit for that is iot so um the hierarchy of pigs basically if you need a balance pick you could technically use any of these",
        "um but you know uh they're more work but if you needed something that was a doubly augmented pick then you could either use that or an identity pick but nothing else so uh balancing an identity picks those are you know more uh you know peer-to-peer",
        "or could be like um in the case of like iot where like uh you know two devices",
        "are talking to each other then uh augment and doubly augmented those are more uh client server the uh",
        "top two are",
        "basically human isn't as involved and",
        "then the bottom two those are where uh two computers can be talking to each other or devices so how do takes work",
        "so this is standard diffie-hellman you have Alice and Bob talking to each other and so they both generate a random private key then do scalar Point multiplication to create a public key then they exchange them and then they apply their private key to the other's public key and then they get sasb those should be the same unless there was someone Milling this connection",
        "and so uh what you can do with picks um",
        "is you can hide the ephemeral keys that you're exchanging so one way to do that is you take the password you hash it then you put it through this function called hashed Curve what that does is it's different than scalar Point multiplication where when you give it the hash of the",
        "password um you don't know the private key basically so it generates this point uh",
        "the password point I'll call it and so when you generate your ephemeral key you just add it add that point to your ephemeral key and then exchange that then you remove it by",
        "subtraction and then apply your private key and then essay and SB should be the same assuming you know the password is correct another method is hiding the generator",
        "so you do the same thing with the hashed Curve thing but instead of using the standard generator if you use the password Point as the generator",
        "um so the patent expired in 2017 so we",
        "can now actually use this which is good because this is the easiest method because it's just diffie-hellman and you don't need to rely on password addition and subtraction",
        "uh so this is recent uh more recent uh",
        "so hiding salt with an oprf oblivious super round function",
        "uh so basically you do the same thing where you do hash curve with your password and stuff then you blind it with a random value then you send that over to the server they apply the salt like private key then they send that back to you and then you unblind it by a scalar point there",
        "scalar invert and then scalar Point multiplication and basically the blind salt is what I call it uh equals the salt times the password point and",
        "the server doesn't learn what that point is and you don't learn what the salt is so",
        "um so how do these picks work uh basically um noise",
        "it's basically like a different types of key exchanges N means no static key K is",
        "the other party knows what what the static key is uh what your static key is the first letter is um the initiator and the second is the receiver so balanced yeah so",
        "balanced uh so all the arrows that will be on these slides are uh Diffie Allman so ephemeral key to the thermal key for balanced uh static key ephemeral to",
        "ephemeral to ephemeral",
        "uh noise can uh doubly augmented uh",
        "oh anyway so 3dh you know",
        "so uh these are uh",
        "pick algorithms uh so uh the way that",
        "they're colored is um by what they're hiding uh so the ones with red stars next to them those also hide the salt like uh opic does",
        "um yeah so uh the identity takes those",
        "uh they're not colored because uh those actually just use a balance pick so their color would come from or you know like what they hide comes from what uh",
        "balance pick that you use uh so there was a paper that made uh chip and crisp",
        "um where they said that crisp uh protected the salt basically",
        "um",
        "so uh",
        "um yeah so basically uh instead of uh protecting it before you run the password kdf uh it was that uh",
        "after that where you had to run the it was a more expensive key exchange that you had to run each time um so I I came up with fry because Chris chip crisp fry basically it's just uh",
        "chip but you know has an oprf and it does mess with the way that their setup works it's kind of a joke",
        "but uh so pick properties",
        "um uh forward secrecy that's basically every single fake has that uh prevent pre- pre-computation that's the",
        "protecting the salt um can you turn the music down uh",
        "thank you uh",
        "uh so pre-computation",
        "um basically what uh that does is uh it protects the salt so that um when your uh",
        "so it prevents this attack where you run through the passer kdf a bunch of times with different passwords before you break into the server then when you actually uh break into the server you can then check all those passwords near instantly or instantly so crisp",
        "slightly protects it the key exchange is",
        "fairly expensive at being you know about like four milliseconds which isn't",
        "actually a good property because your you know iot devices would have to run that out of the room every time but uh",
        "secure registration basically when you register um",
        "uh if you're being man-middled since there's no like pre-shared key between you and the server um you know someone can just come in and then you know man in the middle grab that uh all the information and then um later when you try and go to the actual server uh you would notice that it doesn't work",
        "um uh Quantum annoying this is a term that I came up with um there was a paper that uh tried to formally Define it and they did a talk at uh PQ crypto so Quantum annoying what",
        "this is is uh you have to break a you have to solve a DLP for every password guess so you you uh",
        "so when you see a successful exchange",
        "you then capture all the packets if you had a quantum computer you'd have to solve one DLP for every passer guess basically fragile uh what that is is uh",
        "the all the security of the algorithm depends on static diphelman a static",
        "diffie-hellman Oracle",
        "and number of trips three verse four obviously three is better but so",
        "um when I coined the term I didn't actually know that anyone knew about this property uh so speak when I was reading the speak paper I noticed this quote you know I'm not gonna read it but uh then they referenced uh the eke paper that basically said the same thing",
        "sorry so pick properties uh by algorithm",
        "so",
        "uh Quantum annoying uh that is a very good property to have you know for future of uh you know fakes assuming you",
        "know if a quantum computer ever does come out these would uh a Quantum annoying take would be basically a stop Gap uh between when quantum computers come out and when you have to uh change algorithms to a post Quantum pick and",
        "uh for the case of opaque if uh because it's fragile um as soon as uh quantum computers come out um every single password",
        "can be",
        "cracked on classical computers with gpus and stuff",
        "uh C Pace being a balance pick uh you don't have pre-computation or secure registration because there isn't any",
        "uh so the costs of",
        "um BS speak versus opaque 3dh uh",
        "basically oh hey you can see green all right so uh so green those are just the extra operations so they're fairly similar in",
        "speeds",
        "um basically every time you do a uh scalar Point multiplication um you then have to do a field invert which is uh a little expensive",
        "but not as much as you know a scalar Point multiplication but the nice thing is you can actually combine multiple of these field inverts into one that's uh",
        "so if you're wondering why there were less eyes than scalar from",
        "multiplication oh and I separated them from uh oprf",
        "and and the uh key exchange uh",
        "anyway so um if you are going to implement any take uh you should use an API like this where you initialize all the information get the secret and whatnot and then",
        "um return a message or maybe uh you're supposed to be the one receiving the first message so there wouldn't be a message and then when you receive a message you send it into a function that then Returns the next message if there is a next message and a status the reason for this is I've seen a lot of implementations of SRP 6A where they",
        "just say calculate a and calculate M1 and they just they're like oh the developer will know what that means so this way it's very hard to um misuse the",
        "API and then you would want to be able to get you know this secret stored uh the server stored Secret",
        "for uh you know augmented picks and then also if you're going to do um authentication and encryption with a password you would want a API function that returns a key based on the password this is so that you only run the password uh the password kdf wants and generate a key for the pink and a key for uh encryption",
        "so cheat sheet these are all the correct answers according to me",
        "um so",
        "uh so BS speak Double Bs speak those are actually algorithms that I came up with um",
        "basically you know it's just hide the generator with uh hiding the salt and",
        "you know noise KN and then noise uh KK",
        "well 3dh",
        "and then uh use chip if you need the identity pick",
        "so balance picks uh don't need key stretching um and then yes Crypt minimums uh are there um I just remembered that I forgot to mention uh balanced picks and Wi-Fi so",
        "the Wi-Fi Alliance they picked a pick",
        "that was actually known to be broken at the time uh they that Peg is a balance",
        "take and then they actually store the password on the access point and device",
        "instead of using a doubly augmented pick",
        "um so uh agenda",
        "I'm good okay so questions",
        "I do have bonus slides oh and references uh but uh if there's if anyone has",
        "questions",
        "so you want bonus slides okay",
        "all right so um",
        "so the secure registration for BS speak uh the algorithm I created so uh basically uh the server checks uh verifies that the so the entire top half of the algorithm is yeah uh I have a gist for this on GitHub",
        "but uh basically you know run through the the Pake and then this is uh at the point where the server checks the client verifier it generates you know another verifier a session key that session key encrypts reg and reg Max so reg is the",
        "ephemeral private key that was used during registration and then reg Max is",
        "um a Mac did I say Max Mac uh",
        "a Mac of the public key reg so the",
        "server encrypts that with the session sends that over then the client checks to see the service verifier is correct you know then it creates the session key then it decrypts uh the private key during the farmworld private key during registration and the Mac",
        "the Mac key oh all right so the Mac Keys generated from the password so when you run the password kdf you output a bunch of stuff and one of those things is the Mac key so the Mac key is then used to assign the public key or not sign hash the public key uh you know that so if that fails then that means",
        "that um your man in the middle during registration and no longer",
        "man being man in the middle so you can detect when that happened so uh bscrypt uh so",
        "these are all the fun slides for my talk uh but first one info slide so um",
        "uh so the way that it worked was uh so cash hard algorithms they use uh they get their cash hardness from uh small random uh lookups and memory or Cache uh",
        "so and then you do every other operation is ADD X or add xor so uh and I went with two s boxes like that um so the interesting thing that I did with that is these s boxes are overlapping so uh other algorithms that",
        "are cash hard uh the S boxes need to be a nice binary number so do these but since they're overlapping you can get whatever sizes you know you can get exotic sizes from",
        "these s boxes so um this is uh this was a benchmark that I did on on my laptop uh these settings are uh",
        "such that uh they're all the same uh for uh a GPU attacker since b-crypt is the one where you don't have much leeway because it's uh you know this was for cost nine you know and the next one is like twice as hard or so um so as a an attacker uh all these",
        "algorithms with the settings uh those are all considered the same to them they wouldn't care but as a Defender you know you can spend four milliseconds on bscrypt or almost",
        "800 milliseconds on pbkdf2 shot 250 sucks",
        "um so this is the speeds at uh this is a",
        "desktop computer",
        "that I wrote In The Benchmark on with different number of threads",
        "um so this is for minimum settings",
        "and it basically took one to two milliseconds which is really really fast oh uh so",
        "um these are uh equivalent speeds for cost 15.",
        "um and you can get these in under 100 milliseconds if you're familiar with bcrypt cost 15 is ridiculously high and",
        "takes a very long time uh clamp scalar invert uh so you know you do some stuff and then but uh yep",
        "oh okay it said 30 seconds",
        "all right thanks [Applause]",
        "[Music]",
        "[Music]"
    ],
    "FAYo20XcMk8": [
        "[Music]",
        "all right Aloha and welcome to a talk on uncovering Stolen algorithms in commercial products I'm Patrick Wardle the founder of The Objective C foundation and today I'm stoked to be co-presenting with my good colleague and friend Tom McGuire who's also an instructor at Johns Hopkins",
        "so today we want to talk to you about an issue we believe is a systemic issue affecting our community which is the widespread use of stolen algorithms in commercial products figured if it happened to us it's happening to others might be happening to you as well so here we'll first introduce the victim application we'll then talk about how we were able to find and prove that commercial products were using its closed Source algorithms and then show how we were ultimately able to resolve this in a fairly win-win manner so first let's talk about oversight the victim whose closed Source algorithms were stolen by at least three separate unrelated commercial entities in this",
        "part of the talk we will discuss oversight and describe to the specifics of its algorithms its internals this is relevant to prove that its code was stolen and implemented in commercial products so oversight is a pretty simple pretty straightforward utility written by Yours Truly it's released in 2016 as a free but closed sourced application it goes pretty simple pretty straightforward to alert you anytime anything accesses either the mic or the webcam and identify exactly what process is responsible for such access this ability to be able to identify the active process that's accessing or the mic the mic or the webcam was oversight's most unique feature no other tool had this capability at the time now oversight was predominantly designed to detect stealthy malware that might slip onto your system with zero day vulnerability if such malware though attempted to access the mic or the webcam either to spy on you or perhaps you know turn on the mic to turn your system into a room audio capture device oversight would alert on this Behavior this action even if it had no a prior a priori knowledge of the malware turns out oversight is pretty good at detecting zero day vulnerabilities as well especially those targeting mic and webcam access for example remote bugs in Zoom or even zero days exploited by an hour on the slides we can see some examples of oversight and action detecting such exploits",
        "finally oversight rather unintentionally played a pivotal role in covering good apps behaving badly for example it uncovered the fact that Shazam on Mac OS used to always listen even when turned off not ideal",
        "now back to oversight's killer feature this is the ability to identify as I mentioned what process is accessing the mic or the webcam obviously this is an essential feature right if it's Zoom Skype FaceTime this should be allowed right we might not even want to alert the user in this scenario but if it's some nation-state malware that has surreptitiously got onto your device and is trying to spy on you via the micro webcam obviously this is something that oversight should alert on as I mentioned at the time no other tool had this capability question is why not well as we can see on the slide though it's really easy in about 10 lines of code to get a notification from the operating system from Mac OS that the mic or the webcam has been activated this notification contains no information about who done it",
        "so now let's look exactly at how oversight was able to identify the responsible process the process that again was trying to access either the mic or the webcam now it's a bit involved and leverages various undocumented features of Mac OS now understanding this approach though is necessary for finding it both in commercial products and then also you know with an understanding of exactly how it works allows us to prove its uh stolen use so there's three steps that oversight uses and I'll go through each of those now first it enumerates mock messages so",
        "when a process wants to access either the mic or the webcam under the hood the system apis or Frameworks that are talking to either the mic or the webcam will send what is known as a mock message to either the mic or the camera Daemon the system process responsible for responsible for directly interacting with the micro the webcam so oversight says cool let me enumerate these mock messages so I can get an idea of the processes who have recently or are currently accessing the mic in the webcam again with the goal of identifying which one is the the main one the active one now unfortunately Apple doesn't allow you to enumerate mock messages from other processes so oversight can't do that directly turns out though that Mac OS ships with a utility called lsmp list mock ports and this has the necessary entitlements to do this enumeration",
        "so what oversight does pretty basic in code is it just executes lsmp we can see this on the slide executing lsnp is super straightforward it's command line utility built into mock OS now it's a little harder a little more work though to parse its output as lsmp wasn't designed to be consumed programmatically the output from it so we have some snippets on the slide we can see basically how about how I go about parsing that output to pull out the processes that have sent the mic or the web camera demon unlock messages",
        "now as I mentioned the output from lsnp might include several processes and we're really interested in the one that's actively accessing the mic or the webcam oversight needed another mechanism as well so I did some more reverse engineering and I found out that in the i o kit registry which is kind of similar to the registry on Windows there are various undocumented key value pairs that have a list again of processes that have recently accessed the mic or the webcam or are currently doing so again those these don't have time stamps so we don't know exactly which one it is yet so again here's the code from oversight it's internal algorithms and we can see we're directly accessing the i o registry to get a list of these candidate processes luckily in this case we can directly access the i o registry we don't have to execute any other external command line utilities and as we can see on the slide what we're doing is we're looking for processes under the i o user Creator key under the iopm root domain",
        "again though once we get this information we kind of have to parse it out because again it's not designed to be ingested programmatically",
        "finally the last thing oversight does is generate a sample of candidate processes to get a stack or back Trace from them we need this final step because the list of processes from both lsmp and the i o kit registry might not just have a single process and we're looking again for the exact one that's accessing the mic webcam and also we want to avoid false positives similar to enumerating mock messages apple does not allow you to sample or read the remote memory of other processes so yet again we have to leverage a built-in command line utility in Mac OS that has the correct entitlements specifically the sample utility so on the slide we can see we just execute the sample utility grab its output and then parse it specifically we're looking for the string CM underscore i o graph do work this is a method name an API that will be called by a process that is actively accessing the micro the webcam and again since we've just sampled the process we can see if the stack or thread Trace has this key if you have these three steps oversight was able to accurately and consistently identify the process responsible for accessing the micro webcam and coupled with the fact that it was free made it fairly popular wildly popular",
        "unfortunately though this popularity came at a cost so now we're going to talk about how oversight was torn apart and its Secrets shamelessly stolen for commercial gain",
        "first though how is this even possible Right did someone hack into my computer steal the source code no it's actually far simpler like that than that really anybody armed with disassembler and basic reverse engineering knowledge could simply reverse engineer the oversight application technically I'm sure you'll do ethically legally not so much especially considering this was stealing a free tool from a non-profit for commercial game to me this is a clear line that was crossed also it's worth noting that oversight's algorithm is first and foremost very unique right it's based on a lot of reverse engineering a lot of undocumented features of the operating system and in fact if you Google the core components of the algorithm there's no hits on Google because again it's undocumented also and I'm a little embarrassed to admit this the algorithm is a little janky I mean first and foremost I'm a security researcher not a software engineer and you know to give Credence to this claim that oversights you know maybe a little brittle we'll see that when Apple pushed out recent security updates to Mac OS oversight broke horribly Silver Lining to this though is if corporations copied oversight's code verbatim this means that their code might also have these undocumented strings and maybe even the same bugs the analogy I like to give is we think about plagiarism right if someone copied what you wrote including made up words undocumented features or your spelling and grammar mistakes bugs if you caught them doing this it would be pretty trivial to prove so how did this all begin well you know I never thought that oversight would be stolen so I wasn't actually even looking for this but a few years back I was analyzing a binary that had been flagged as malicious for a client as soon as I began looking at it I realized it wasn't really malware it was more a potentially unwanted program or potentially unwanted application what are those Security Programs that a lot of times will tell users their systems are infected even though they're not and then try to get credit card information and I was about to ignore it and move on but then I noticed something very strange it was executing the lsnp utility now this again is kind of a undocumented feature component of Mac OS and I was kind of like that's interesting also I consulted the the marketing materials for this utility and I shot I saw that they claimed to provide protection of the mic in the webcam for privacy reasons so I dug into this more and more and the more I did I was like I've seen this code before this looks like oversight now around this time Apple also pushed an update which broke oversight mentioned that before yes kind of brittle so the top of the slide we have some bug reports that were submitted by users of oversight we can see it had massive memory leaks incorrect reporting although that was really something that Apple broke on M1 systems but regardless oversight head bugs so I did what every software developer does and you know hop on Google to like find out what the fixes are and I found users complaining about similar issues my memory is being used the the camera is always on when it's not supposed to and I first thought wow sorry y'all like I know Mike this this is a popular utility but I feel really bad for you know crushing all your computers well it turns out there are complaints about these same exact bugs that were in oversight were actually attributed to other processes other programs other software and I was like wait did other companies copy my code again so verbatim that they cover copied bugs and all and as we'll see that was the case so at this point I decided to do a little more proactive hunting and maybe looking for other perpetrators so I put together a simple Yara rule that was based on oversight's algorithm now many of you are probably familiar with using Yara detections for malware signatures but of course you can use it to detect any binaries so for example the one on the slide just looking for the lsmp string wrote a Yar roll ran this a bunch you know across the internet on large corpuses of binaries and again found several binaries several commercial products that based on initial triage looked suspiciously similar to oversight",
        "so at this point I had a handful of commercial products that at first glance appeared to be very similar to my utility of course though we had to dig deeper to prove without a doubt that the code in these commercial products came directly from oversight so now Tom is going to talk about how we were able to prove equivalency between oversight and these commercial products all right thanks Patrick so as Patrick noted uh we have three different samples effectively from the search of what we can look through and so what we tried to do was really find out where the similarities were with respect to the code from oversight and the code from these products that had shown up either from the malware analysis from bug reports or from the r rules and for this section if you look at the left hand side this is all oversights code and on the right hand side is the product and we'll go through three different products here at this point the oversight's still closed source and as Patrick mentioned the algorithm itself is sort of the uniqueness about the way we can figure out and tie these back together to oversight's initial algorithm and as Patrick noted the algorithm is pretty brittle and especially when we start looking here on this slide we see the usage of lsnp executing it and then parsing it sort of in an inefficient way I'll say on Patrick's behalf right there could be a lot of different ways that you could do this right your regex would be a better way to do it but if you look on the right hand side you don't really see that you don't see any optimizations that are done on this so This sort of gives us a little bit of assurances that this particular application is starting to look for the camera and microphone in a similar way that oversight was doing it right executing lsnp splitting on the parentheses looking for the pit inside right all the way down to those details if you even look we have mentioned of the the method names those are very similar but when you're reversing things right this isn't necessarily conclusive this could be another method for looking at other components as well",
        "but when we start digging a little bit further and we think about what Patrick talked about about sort of the three unique components of the oversights algorithm we now see the second part of this following the first part and in this case it's also again the IR registry queries for the very same values key value pairs that oversight was using and again these are undocumented apis and undocumented components so it is a little unique in the way that it's going about executing this right going through looking for those splitting again we could do something a little bit more efficient but in this particular case we see the same methodology going through",
        "the third component to this sort of more is in my view is the unique one with respect to everything Apple provides the sample utility that allows you with you know appropriate privileges uh to sample processes to get stack trace and back traces so you can look for uh what it's executing in our particular case here uh one thing about this is it's pretty invasive right it stops the process has to go through and Sample it so you know it's not a passive component that is being utilized here so as as Pat noted the oversight algorithm takes the first two components intersects them and tries to see if there's a unique PID and if there isn't it goes on to this third step to try to find that unique PID that currently has access to the camera or microphone and if you look at this for the two products we have the oversight again on the left and on the right the unique nature here is the sample is executed but also what's being looked for is very unique right the cmio graph do work is the worker thread that when an application has access to the camera or the microphone this is the thread that will get kicked off and actually do prior to the processing so if it does currently have access to it it'll show up in the back Trace right so when we do the sampling we'll see that in there so that's why you're seeing seeing this be done in that way and again prior to the talk there wasn't very many cmio graph do work you'll see them related to some process crashes some resource usages but there aren't any related to this specific case so it is very unique so putting all three of these together kind of gives a really good picture of the algorithm that was in oversight is now in another product and so we kind of took this and to the next product as well and for this one that was just one product but now we look at this one and this is written in a different language right so this one's written in Swift so you can see that there was some level of effort to switch over to another programming language probably to fit into the framework and whatever the product is but if you look at it from the disassembly standpoint right it still matches up with the logic that oversight utilizes for the lsnp right executes split online split on the",
        "parentheses all right again there could have been a regex and everything going on here but this is showing that we still have in this product the first part of the algorithm as well uh and digging a little bit further we get the second part of the algorithm in this product looking at the i o registry the key value pair looking exactly for the same unique value that it is so that it can go identify the particular PID that has that camera microphone for the mock port in this particular case um it's pretty identical from those first two so this is a good indicator that this particular algorithm went over to this product as well when we look at the third product in this case we'll see that the three different components are very similar but there were some slight changes uh mainly trying to I guess enhance the parsing utilities so in this case the regex so there's a little bit of improvements upon those but nonetheless the the core logic exists and is still the same across those so here you're seeing at exec lsmp a split on the lines and it's going to be through regex looking for the pit again uh and nearly identical uh in the i o registry querying again you can see the particular value key value pairs that we see this is identical to the way that oversight does it and finally in this case we also see the execing of the sample utility and bringing in the cmio graph do work which is part of the camera microphone framework to do the analysis to",
        "determine if this particular process has the camera or microphone processing currently active inside of it right so again here we have three different products that now have these components the core components of the oversight algorithm embedded into them right and it's pretty conclusive that they've taken the algorithm from oversight and brought them over to their products okay so I'm going to get over to Pat let him finish up on some of the good news about this thanks Tom so at this point you know we clearly have indisputable proof that these products copied directly from oversight by reverse engineering and essentially stealing its its algorithm so you know I want to briefly End by talking about how we can resolve this and turn this into a happy-ish ending",
        "hopefully I was going to reach out to the perpetrators but I learned quickly there was somewhat of a winning approach which is first you really need to understand what your goals are do you want money do you want to you know talk about them publicly and burn them to the ground do you want them to remove the code really know what you want because when you approach them they're going to usually come back and say all right what do you want to figure that out first then also create proof right I think as Tom showed we had pretty irrefutable proof but you have to consider the fact that you're likely going to be talking to the legal team or the intellectual property team at these commercial or corporate entities and they might might not understand register values etc etc so yes provide that proof but then also try to explain it in a manner that's maybe a little more high level digestible with someone who might not have quite as low level of technical skills speaking of lawyers uh it's actually a really good idea to get your own lawyer as well this is optional but highly recommended I have nothing else to tell the companies that you have one I noticed in a few scenarios the companies didn't really take me that seriously when I mentioned I had a lawyer they really started chatting with me more uh I want to thank eff I worked directly with them if you're not familiar with eff they provide free legal services to Independent security researchers developers and non-profits so they were incredibly helpful so I really want to take a minute to acknowledge and thank them and then finally once you have you know your goals defined your in your proof and your legal team behind you you know Reach Out professionally don't just start flaming on Twitter unless their ultimate goal is just to cause chaos",
        "now what do these corporations want well it's good to know that the majority of them want an amicable resolution this is something I learned that when I started this I wasn't really aware of and that was the majority of the cases of infringement were really the result of a single arguably very naive developer versus the malice of entire Corporation so when I began I found these perpetrators I was kind of like man these evil corporations trying to like steal from you know small guys and blah blah blah oh it really turned out was a little more nuanced on that so what do corporations want well generally two things they want to make sure that legally that everything's okay once you approach them and and you know they realize what has happened so first and foremost they generally want a licensed agreement often applied retroactively that basically says",
        "legally they're off the hook generally they often don't want to be disparaged as well which is again understandable especially in the case when it was a single developer who again naively was to blame and yes these corporations are willing to pay so let's look at some win-win resolutions that came out of it again these are Direct Communications from some of the companies who were responsible for stealing code from oversight noting that also all three companies did acknowledge fault a yes oversight had been reverse engineered and used in an unauthorized manner for commercial gain so here we can see the company has done three things first and foremost acknowledged the issue putting an email yeah our bad secondly they said okay we're going to take proactive steps to remove the unauthored code from our product which is great and then third and most importantly they said you know hey can we get a retroactive license and we would like to financially compensate you reparations for the licensing everything so again this is kind of a win-win another win-win response again somewhat similarly the company clearly acknowledged the inappropriate use remove the code and then made a very large generous donation to the objective-c foundation so again kind of win-win so let's wrap this up with some takeaways first and foremost if you are a developer don't be naive like me and assume your code won't be stolen even if it's closed source so unfortunately this means you have to be proactive and yes this is extra work but perhaps use the methods we talked about in this presentation uh to see if companies are stealing your work uh and if so you can also take the steps we describe to reach out and hopefully resolve the manner that's mutually beneficial or at least beneficial to you now if you're a corporation it's incredibly important to educate your employers on your employees on this topic even just to reiterate that stealing code is not okay like I thought that would be obvious but apparently this is not the case from the corporation's point of view this is a no-brainer because this will avoid legal and optic issues right it's really the smart thing to do so some good ideas might be implementing internal procedures to detect this maybe scan your source code or really just ask your developers when they're implementing new features where did you get this from I've worked at a variety of large companies in my career and never once when I implemented a new feature did anyone ask me Patrick did you steal this where did you get this from I mean for me ethically that was a line I was not willing to to cross but again still no one ever checked in with me and asked that and finally it's really important if you're a corporation if someone approaches you especially with you know proof and tries to be very professional be like emotionally mature and amicable you know there's a few scenarios where the companies originally",
        "denied everything and it just it was shocking but you know we all we all got to a few places so I think there's a lot of opportunities to kind of squash this before it becomes even an issue I think you know most corporations realize that once it gets to this point it's problematic for everyone so again if they just take these steps to educate their developers um perhaps you know in the scenario if you know Patrick's tool has a great feature that another company wants and there's maybe one way to do it we'll reach out and talk about a licensing agreement right this is pretty standard procedure versus you know stealing and then ending up in slides of plaque so that's a wrap uh before we hop into q a I just want to briefly thank the amazing companies who support The Objective C foundation and all the community focused work we're doing I also want to thank the black hat conference for allowing us to speak on this somewhat controversial topic and then finally all of you for attending so thank you again [Music]",
        "[Music]"
    ],
    "C-ZSvTVvK1o": [
        "[Music]",
        "now it's my pleasure to Welcome to the stage uh piano Trooper Royal and Martin shortlaw",
        "thank you for this nice introduction so hi and welcome to this talk about custom Processing Unit tracing and patching intellectual microcode I'm Martin and I'm Pedro so today you will we will present you the first study can Dynamic analysis framework for CPU microcode all done via software yeah so we give the people a short outline now so we first start off with a deep dive on CPU microcode especially the atom microcode then we'll present you a the first static and analysis software framework for microcode then based on that we show you how you can use the framework to reverse engineer the microcode update algorithm and and then we will end up with some bonus content so first of all a disclaimer this is based on like our understanding of CPU micro code So in theory it would be all wrong but in practice we will see that a lot seems right so but before we get into the deep dive we will go to like an high level view on how CPUs works so at the University most people learn you have like this fetch decode execute right back steps and yeah basically we can see it in this high level view there is this front-end doing a fetching decode stage and then there are the out of order engine and somewhere there is the memory subsystem in between where it tries to speed up things using caches and all this stuff yes but it is not that simple obviously and x86 instructions like to",
        "be executed effectively they get translated into micro operations and okay most of them are like really simple instructions so like they have one or two micro operations like think about if you access memory or like you are to like to register for example but like some instructions need some more complex logic like think about CPU ID where you have like multiple leaves and you have like conditional execution based on the input that you do so there is a component called the macro code sequencer that takes care of like emitting a stream of micro operations that implement the logic of complex instructions yeah but before we go deeper into that we'll have to talk about the preliminary thing and that's the red unlock finding from positive Technologies from Mark amoloff and his team so they basically found on an exploit in the smm engine and they basically managed to Red unlock the CPU into a special State such that they can debug it and read out special um buffers like caches or staging buffers similar things and based on that they managed to extract and reverse engineer the gold mode u-code format they presented a disassembler for that and based on the reverse engineering they discovered new undocumented instructions which basically allow it to con control the access to internal buffers yes but like to understand what can we do based on this work we have to understand first like how does the like magical stuff work and we're talking about this magical sequencer you like let's assume that you have an instruction like CPU ID that needs a stream of micro operations you have like a translation table where like the instruction gets matched and you will jump to the microcode ROM where the CPU will takes micro instructions and execute them to implement the complex Logic the micro instructions are like organizing Triads and every single Triads as a sequence word Associated to it like a sequence rule effect of maybe affects some synchronization during the micro operations like think about like elephants like stuff or even the Contour flow while executing this so obviously if it was like that you have a ROM and the CPU code will be fixed so what if you have like to patch some bug like epic click for example and you have to fix that so CPU like also supports a ram",
        "like kind of internal memory where you can like edit and Patch the microphone there but how can you pass between those two internal buffers there is a component called the match and patch that every time you execute an instruction if the destruction is like programmed to jump so to their arm the matching patch will redirect to the control flow to the RAM and execute the new instruction that are passed there so um now I I managed to look into the disassembly and I found this Triads here we're managing so we have these three operations the fourth one was always a knob operation and then we have this sequence words you mentioned which are basically properties about the current microcode instructions but if you look at that it's like you cannot really read that so we use the disassembler obviously and then we see like the microcode has a similar structure to x86 yeah it's really similar so you have branching instructions you have internal temporary registers and the things in blue if you see them there are these sequence word instructions so they're for instance the last line shows the next microcode instruction being X yes and every sequence word is associated to all the three micro instructions that you have there but if we look at the microcode we can see that it's highly optimized so in the CPU we have like a small buffer we have to like pack all the instructions that you want to like to use to implement the functionalities that you want to microcode there so the market is highly Tangled you have like blocks of code that are shared between multiple functions so it's really hard to like analyze it and I mean it would be cool to have like a high level view of the microcode but unfortunately like at the compiler for example for this doesn't exist since it's like it was undocumented so we brought one so you see here this is a guitar decompiler it actually looks cool and",
        "you can for instance see the rc4 decrypt function which is later on as we will show used in the update algorithm and you see clearly that's like beautiful C code and you can work on that and start your reverse engineering with that so when I was going through this whole thing I saw like there was a special interaction always with with a certain component and this one was called the CR paths yes so to understand better like what when you do this we have to understand what is the control register bus and this is like the bus that the CPU uses to interact with its internal components so for example like msrs are mapped into sierbassadors some of them actually and also also like control status registers are effectively like addresses in this year bus where the CPU access them to implement the functionality that you want like system management mode configuration is mapped to this earbuds system management mode is like this ring -2 mode in the CPU that is like really like lockdown that you should never access that and the configuration for that is in the CR bus and also like interesting look also the L that is mapped into the CR bus so what what is that ldot so I guess yeah so the ldot is this like really interesting component in like Intel CPUs that is used for like post silicon validation and it's a component that has access to like all the internal buffers of the CPU like let's think about for example the tlb or like load and store buffers so through the ldot you can check that this component actually work",
        "that's awesome so yes and also for example you have access to the microcode sequencers here to the ldot so the microcode sequence as you already mentioned that so what does it exactly do so yeah like as we say the multiple sequencer is the component that has access to the microcode in the CPU both to the ROM and to the ROM and interestingly you had access it has bright access to the ram so leveraging the macro sequencer you have access to the microcode and to like modify it so here we can I would say let's have an idea we know that the ldot can access the microcode sequencer and that the ldap is can be accessed through the CR bus all right so if we now access the CR",
        "bus we can basically control the microcode yes basically if you can access this your bus then you have Microsoft control okay but we need one more building block oh yeah so you were talking about or I was talking actually about this undocumented instructions so let's take a look on how those work and what we can access with them yeah so like one of the discoveries of positive technology guys was this existence of this and documented destruction that has access with like a few internal components of the CPU among those that's the sheer bus awesome so we have our primitive too so yeah we can leverage this primitive as an easy way to access this year bus for red unlocked CPUs like the government but the problem is that okay but what can we do with this how can we access the ldot like how does it work and here like our the compiler came handy since we can analyze what the CPU does with the CR bus to access the ldot to modify the microbot sequencer and just copy that yes we know that the CPU knows how to do that so we can just do the same thing and we can Define like easy wrappers around this where you can like access the microcode sequencer and for example with these wrappers that's like just copy what the CPU are doing and access the like ldot ports you can like access the microcode access the sequence word and even the matching patch yeah so we have arbitrary written right and you already mentioned that match and fetch mechanism so we were thinking about it like maybe to a similar extent as like software hooking where you say like I want to overwrite this function and point redirect it to the other one so is it is it really that simple in the microcode yeah so we can still leverage our the compiler to understand how the CPU uses the machine patch and device like the simple formula that the CPU uses to like program this machine parts so every time we want to hook something or pass something we can program the address to the matching patch to just jump to the instruction that we want awesome so if we sum that up this is like I can hook a microcode update and override it with my own code so it's super custom now yes and this brings to our framework we can leverage this undocumented instruction to patch the microcode Via software this allows us to observe completely the CPU Behavior but also to completely control their behavior and all of this via software like either with a custom bios like a ufi application or a kernel module so summing up the framework I think we can now patch code we can hook code run our own custom code and I think we can even do more right we can yes we can trace the code and we will see how but let's start first from patching code so with you got Patches we can change the CPU behavior and notice that usually only Intel is allowed to do that since microgot patches are signed and you're not supposed to load your patches but with our framework we can inject microcode patches to change completely CPU Behavior like we can change microcoded instructions with this or even add functionalities to the CPU so maybe we go up a step back I think it's too complicated here at the moment let's do a simple program maybe something like Hello World in microcode yes so let me present you the first microcode part shallow world so I was thinking what can we do with an L word and like let's pick the art Duran Destruction for example so rdrand is supposed to provide you a cryptographically strong random number so let's piss off some cryptographers and let's make it return hello world with our framework you can select what do we want to eat to hook and then where do you want to jump for the instruction and you can see there we have two micro operations that load hello world to the registers so that you will not have random numbers but hello order and then you just end the instruction stream and tell the CPU okay you're done but I think you left out one point we kind of need to assemble this stuff yes so we brought an assembler for the microcode so that our framework translates from a textual representation of the macro code to the interactions that you need to do to the macrobot sequencer to actually patch the micro code so we assemble the microcode write it to the address that we set in this case 730 that is just the like starting address of the UVO drum and then we set up the matching patch so that every time you execute our Durand you actually return L word so I think the example is kind of nice and handy but I think the people here want to see something more yeah it easier so let's do something more interest we can okay we know that Rd running returns like randomly though so like let's change this I don't like random data I want to look something interesting so let's make cardi run return system management mode memory so system management mode is this caged environment in the CPO is like this ring -2 mode where you are not obviously supposed to access it but we can change the microcode for the algebra instruction to just load the SM ROM address for example but what happens if you now read from this so yeah this is like a cage memory so if you do this you will read a bunch of F's like if you access for example Enclave memory from outside on Enclave the CPU protects sorry the mmu protects that region so you will not able to access it but we are in the microcode so we can change this and leveraging our framework we can understand where the configuration for the SM ROM is like located in the CR bus and actually zero it out so that this SM room will not be protected anymore yes but then you break the CPU right yeah so the CPU will not be happy about this since you're like just disabling smm so you can save and restore the smm configuration but just after you're dumping that oh that's really nice so but I think the people might not believe us so let's show them a demo yeah like let's show something cool so here for example we have a simple program in our ufi application where you just dump like the ardu and others like they are their results with random data here but we can program the CPU with our patches to change it and actually return L word to that so that with this with our CPU framework with our custom Processing Unit framework we hook the patch and the next time that you execute rd-ron you have L word wow that's super cool and about the system management yes so let's go there more cool stuff yeah and we still have like a simple program that dumps a bunch of buffer filled with on our Duran content and it's obviously random since random data but let's apply our fetch the patch that you've seen before just modify to like dump different addresses and not only one and we can apply our patch and the next time we execute the program that dumps memory they already around you actually dump system management mode memory you can see the header of system management mode there oh yeah awesome so going further so now we can do something more you already mentioned it what happens if we now set up this match and Patch mechanism and execute custom microcode at certain events right yeah and resume the execution we basically don't need to fetch stuff but we actually find something out about it yeah so we we don't have to like stop an instruction after the rooking that you can simple continue the execution and this brings to like microcode hooks where you can execute more code and extend the functionalities of something or for example observe stuff so after executing an instruction if you resolve the execution on the CPU will like not even notice that you like hijack that and for example here we can like make our own performance counters",
        "so let's assume that you want to observe something in sapu but like the CPU is not nice enough to already have that performance counter that you want to observe set up for you and let's assume that you want to observe I don't know every time the vert W extraction is executed you know it Intel uses a lot this instruction to like a patch like vulnerability is there to flush internal buffers for example for MDS mitigation so maybe you want to understand okay but okay given a full system let me know how many times you you did that actually exactly and we can leverage our hooks to hook the entry point of the instruction that we want to trace so so that we want to hook and then continue with after and in our hook we can just Implement a simple counter that will be incremented every time the instruction is executed so you will effectively have defined your own performance counter that's awesome but I guess you can even do more with that yes we can be smarter with the hooks if we Define a hook that every time it gets triggered like it just dumps the timestamp when it got triggered you can then like program this hook for every single micro operation in the CPU and every time an a micro operation will be executed you will dump the timestamp where that micro operation is executed in the end you will have all the timestamp that got triggered by this hook and then you can reorder them so that effectively you can obtain a trace of the micro operations that are executed in the CPU and this basically leads to a microcode control flow red you exactly know what's going on inside you you are effectively doing a dynamic trace of the microcode that is executed in the CPU so now we have all the building blocks to look at the microcode update routine yeah so what can we do with these phrases for example we can apply these traces so you can observe like literally everything the CPU is doing with the macro code and we did that for microgrid updates so so if you look at the mcgregate updates statically you will find a huge amount of code that will be like really hard to reverse engineering even with our decompiler but with traces it gets much better since you can observe exactly which control flow inside the microwave updates is taken so now we can trigger microcode update for instance then Trace if a micro instruction is executed and then repeat for all the possible micro call instructions and then we just restore the order again check out the timestamps and we see exactly which microcode instructions were accessed are so you effectively reverse engineer the microbial update algorithm that is always being kept secrets by Intel so here we like analyze what is happening during a microcode update and a microcode update is usually triggered by a bright MSR and the first thing that the CPU does is okay you have to apply this update and encrypt it so it first moves the update to a secret location there is no more secret but it's like fpv zero one thousand for example in Goldman CPUs and these are special physical address where the CPU puts the microcode of date and we can look at the format of the magical date that we reverse engineered at the beginning we have like some metadata that is like the date where the microbial date was published the security version number of the CPU ID that the microgridize is for and then you have like a nouns we will like focus on that later but it's used to like generate the decryption key for the motherboard update and then you have the RSA signature stuff so that you can like this CPU can verify that the macro got a date was actually from Intel and it was signed so the first thing that happens at the micrograph date is okay you have to check that the signature is what you expect for so the CPU has a white list of the modulus and the exponents that you can accept so that he knows that he don't didn't go tempered then you then you have to generate the key to decrypt the update and the CPU does this with two different Secrets One secret is the notes and it's embedded in every single macro called update and is always different per update then we have another secret that is Percival and every CPU has this like in like uh secret and random number that he uses in combination with the nodes to generate and to like do a case function algorithm based on shock to generate the decryption key the rc4 key then is generated so that we can like use rc4 to decrypt and as a best practice and they do that they eliminate the first Ox 200 bytes since they were like too tight with the like key bytes so now I guess that after generating the key we can go to the Crypt the update obviously after having to decrypt the update you have to check that the grid adapted the decrypted update was actually signed correctly so the shot 256 of the update is calculated which is computed combining with the metadata and the nuns so that you cannot tamper with that and if the verification succeeds",
        "then you finally can pass the microgrid of days awesome so I was wondering you are mentioning this weird address here at the beginning so what is that yeah so it's so interesting to try to deepen okay what is this address this address is like this special physical location that the CPU uses to save the microphone update to move the macro code update there so if we query the operating system the poor operating system will have no idea what this this other is for and we can also try to dump this address and we will only read apps like if you access an enclave or SSM memory without unprotecting it so it must be something special yes so we should further investigate that maybe like using our framework to see what's going on right yes so we can see what this the CPU is doing with this address and we can see that this address is dynamically enabled by the CPU every time the microcode update is performed the CPU of rights to the CR bus like a bit that enables this address and we can poke around this address so we can like measure the access time when this address is enabled and this is surprising it's only 20 Cycles so mmio usually is really slow and this address is surprisingly fast but we can also observe that the content of this address is not shared between the CPUs it's like the CPUs has local view on this address and we can only fit a small amount of relatively small amount of data even if the mapped area is much bigger and then with Observer replacement policy on the address while we write them we lose the data sometimes okay that that reminds me of something you have 20 Cycles it's super fast then it's not shared between cores it fits to a certain size and then you have replacement policies so this kind of indicates that it's kind of a cache right yeah so our worry about this is is that the CPU through this physical address has a special view on the L2 cache that is like Frozen and used for the Micro World updates so that they have so the CPU as like a private buffer that is not accessible or tamperable from for example other course so let's look at the decrypted microcode up there yeah so finally we got the magical decrypted and you can look at the structure oh yeah so you see some kind of structure here again but yeah it looks like a byte code maybe so what yeah so you can still use our decompiler to try to understand okay what is the CPU doing with this update and it turns out that I'm aggregate is actually by its code it's interpreted by the CPU it's like if you download an installer that tells you how to update the CPU and you have different comments that the CPU that like the CPU follows while updating for example resetting internal buffers writing the microcode for the update setting the match and Patch hooks or even control flow directives so during the update you can have like conditional parts of the update based on different conditions so this basically allows you to deprecate things enable things this is yeah like dynamically wow that's nice so we should put all this together to build a decrypto yeah so we created a parser for microcode update collected all the Microsoft now in the CPU secrets so Goldman CPUs and we decrypted all of them and we released them publicly so that you can look at that all right that's super nice uh one thing to mention also the decompiler is like referred to in the in the repository we don't it's a separate GitHub yeah but and the compiler supports macro updates so that you can observe an eye level view of what the macrocodile place actually purchased but you already also mentioned at the beginning that there's some more some bonus content yeah okay let's look at something cooler and okay all this talk was about Goldman CPUs but does this generalize so it's really hard to say how much this generalizes but we can hear for example use a cool technique by Brandon Fork to trace their performance counters during the macro code update so the whole world stops during the macro code updates but not the performance counters so if we trace the load sorry the execution ports usage during the update we can try to infer what is happening during the update and we can see okay like sometimes load and store ports are used a lot so like this is like memory bounce stuff maybe like meme copying around maybe arithmetic stuff is used more so you have a face where the macro is decrypted so you can kind of try to guess what is happening there and maybe a machine learning guy will be handy here to understand what it's doing yes maybe is there some machine learning guy here but then let's go to some more bonuses oh yes yeah you you were mentioning like yesterday the Epic league and I think you we can",
        "kind of use the Epic yeah so we still have a special address and the CPU wants to access that address yesterday we were talking about epic mmio and we can take inspiration from a really cool exploit by Chris Tomas where this called memory sinkhole where you can move the Epic to Shadow different things so original the exploit was doing was like leveraged to like break system management mode but here we can move the Epic mmao region over the L2 cache view of the processor so that the processor actually access the Epic and not the macro update content so this is actually a failed exploit unfortunately but we tried both",
        "to move the Epic mmio over for example the shot tables that the micro code update is like using to compute the shot so that we can like for example generate a wrong shot that is not cryptographically secure to like bypass the signatures and even we try to like play",
        "buffer when is decrypted to lick that but the complexities of the microgrid update algorithm prevented us to exploit it further but I think that's a cool like future direction to look into definitely so um concluding our talk so you saw or learned a bit about microcode today and we deepen our understanding but using the framework you can even like go further and learn more about the micro code using our decompiler assembler aperture and tracer and so our framework is open",
        "source you can start hacking around your CPU also thank you very much thank you very much [Applause]",
        "[Music]",
        "[Music]"
    ],
    "P44opLFcgpA": [
        "[Music]",
        "foreign",
        "thank you very much so uh welcome to my my black cap briefing controlling the source of using source code Management Systems I'm Brett Hawkins I'm with the adversary simulation team at IBM X-Force red so agenda for today I'm going to go over an introduction just as some kind of key motivators around this research then I'm going to get into a background on source code Management Systems where I'll then I'll go into diving deep into attacking three popular source code Management Systems including GitHub enterprise gitlab Enterprise and bitbucket then I'm going to go over a tool that I wrote called sem kit to help facilitate these attacks I have three demos put together we are going to see a software supply chain attack you're also going to see lateral movement from source code Management Systems to other devops systems and I'll wrap things up with a defensive considerations and a conclusion",
        "so just a little bit about me so I'm Brett I'm on the adversary simulation team next Force Red where we do two to three month engagements uh kind of going after an organization's crown jewels testing their detection response capabilities uh prior to my time at X-Force red I wore a number of different hats both on the offensive and defensive side at mandian JP Morgan Chase and the James smucker company I've spoken at a number of conferences including Derby con Wild West hackens Fest b-sides and hackers teaching hackers I'm also an open source tool author so I'm the author of sharp assist and visibility cloak and now SCM kit and I was a contributor to the due diligence project so first off how did this research come about uh firstly just real world experience attacking these systems more and more our clients are asking us to go after these systems just because of the role that they play if you think about in today's world software's running on everything it's running on our cars it's running our Traffic Control Systems our medical devices and much more okay and that software running is source code that source code is developed and maintained Within These source code Management Systems which makes them a very juicy Target from an attacker perspective and we're starting to see that too so if you look at the lapsis group in the last year has claimed doing source code theft to some large organizations there with Microsoft with their Azure devops instance T-Mobile via their bitbucket instance and then Samsung and globin with their GitHub Enterprise instance and obviously in the last two years software supply chain attacks have there have really become more popular if you look at the solarwinds breach for example that really enabled the compromise of multiple organizations in both the private and the public sector",
        "I have two main goals with this research so the first one was to bring more attention to securing these systems and black hat is the perfect platform to do that secondly there's not much research out there right now on attacking and defending these source code Management Systems so it's my goal that this is going to inspire future research on defending these critical systems whether you're on offense or defense you're going to get something out of this talk you're going to learn some different attacks and errors against source code Management Systems you're going to learn how to defend these systems and lastly from an offensive perspective you're going to learn how to abuse these systems from both a privileged and a non-privileged context and just before I get started you know my perspective on this you know I'm currently a red team operator I've been doing it for a long time prior to that I was a blue teamer so that's the perspective that I bring with this research you know I'm not a devops engineer I'm not a software developer and I'm not a system administrator so now we're gonna get into background some source code Management Systems so first off what is the source code management system to put it very simply it manages source code repositories it allows multiple developers to work on code at the same time track issues you know and it integrates with other systems within the devops pipeline right so other CI CD systems um and if you look at kind of three popular systems that I included for This research now these are three most popular that we see on our engagements so that's kind of why I chose these for research so GitHub Enterprise GitHub Enterprise and then bitbucket server we see bitbucket Server more than bitbucket Cloud on engagements so that's where I focus on the bit bucket side all of these though they support different hosting options whether you host them on premise or in the cloud and they also support Integrations into the devops pipeline and when you talk about the devops pipeline these systems lie within the build phase so you kind of have your your Source codes developed and then you know it's built tested deployed and then ran in production and as you can see here all other phases in the devops pipeline rely on the Integrity of the source code that is developed and maintained Within These systems and when you talk about source code Integrity let's talk about software supply chain attacks so for a software supply chain attack an attacker is simply injecting themselves into the development process at some point to deploy malicious code there's two angles to this you can either go after the build Integrity like the solarwinds attackers did or you can go after the source Integrity so my research specifically focuses on scenarios B and C in that diagram around going after these source code Management systems and you're going to see a demo of doing a software supply chain attack in this presentation",
        "you're also another useful scenario from a source code Management System point is these can be initial access points to other systems in the devops pipeline so because they have integration set up if you're able to compromise one of these systems you could for example pivot to a CI CD platform pivot to a distribution platform and you're also going to see this in the demos as well",
        "okay all right so now we're going to cover attacking and defending GitHub Enterprise",
        "so the term Enterprise with GitHub Enterprise is going to refer to the entire GitHub Enterprise instance an",
        "organization within GitHub Enterprise so an Enterprise can have one-to-many organizations underneath it and you have different Enterprise roles and also organization roles within GitHub Enterprise you also have different roles for repositories so whether you can oh you can you just read a repository do you have right access admin access Etc and then you have access token scope so in order to access the rest API you can authenticate with an access token or an API token and you have different Scopes applied to this and that basically tells you what you're authorized to do with that access token to the rest API",
        "and you're going to see kind of the abuse of the rest API in this presentation so um you know going to be abusing that and all these you know all these systems today so each of them have a rest API that is basically a programmatic interface that you can interact with them to do different functionality",
        "so now we're going to go through the different attacks and areas against GitHub Enterprise now this isn't an exhaustive list these are just ones that I've researched and also that our team has used during engagements for full details on all these scenarios make sure you check out my white paper which I'll have a link at the end of the presentation it'll also be shared on the black hat site",
        "so let's talk about reconnaissance so in terms of reconnaissance on GitHub Enterprise really focusing on three primary aspects so focusing on repositories files and code because",
        "those are going to be the most value to an attacker from a reconnaissance standpoint now you can do this reconnaissance either via the web interface the rest API or you can also do that with my sem kit tool that I'll be showing later in terms of logging for this reconnaissance this activity is going to log in the ha proxy log and I've got a search criteria there with a screenshot of me filtering for some of my reconnaissance activity so you can see me there kind of searching for things like password or Jenkins file",
        "another attack you can do in GitHub Enterprise is a repository takeover so the site admin role in GitHub Enterprise is like the admin role within GitHub Enterprise if you are a site admin you can unlock any repository for modify access and that includes private repositories so you can see in the screenshot on the left there's a private repository and then on the screenshot on the right I'm using my site admin access to unlock that repository where I have full access to all of its uh all of its settings and you know any code in that repo in terms of logging for this attack this is going to be logged in the audit log on the GitHub Enterprise server and the search criteria there for finding this activity is action repo.staff underscore unlock now all the search criteria and logs you're going to see through here I have them all included in the blog post and the white paper so you can take a look at those afterwards another attack you can do in GitHub Enterprise as a site admin is you can do user impersonation so you have two options for this you can either do an impersonate user login and you can do that via the web interface as you can see in that screenshot or a stealthier option is you can use an impersonation token now you can create an impersonation token either via the web interface or the rest API and when you create an impersonation token for a user that user cannot see that impersonation token only other site admins can see that that user is being impersonated",
        "this activity is going to also be logged and the audit log and get the GitHub Enterprise server and I've got a few different search criterias there listed as far as how you can detect this activity again all these the search Criterion the logs will be included they're included in the blog post in the white paper another attack you can do is you can promote a user to site admin so if you're a site admin you can promote any other user site admin or demote end user from site admin where could this be useful let's say you've compromised the site admin account and you're worried uh you know you're worried about them you know basically you're worried about the blue team being your tail right and so you kind of want to switch to another user but keep that site admin access so you can promote another user to site admin switch to that other user and this activity is also be logged in the audit log I've got a couple different search criteria listed there and what's nice about the the uh the audit log is that it'll tell you whether something was done via the API or not so it'll tell you whether something was abused via the API so you can see in that screenshot there it says this was promoted via the API by the a Dumbledore user",
        "three options for persistence in GitHub Enterprise so it's you know obviously from Attack perspective you want to maintain persistent access to you know those systems so you can do that with personal access tokens and you can create those as a normal user via the web interface Yelp Enterprise doesn't give you the ability to use the rest API to create personal access tokens you can also use impersonation tokens like I mentioned previously and then the last option is you can also use SSH keys for persistence and you can do this as a normal user either via the web interface rest API or you could use sem kit for that the persistence activity is also going to be logged within the GitHub Enterprise audit log as you can see kind of the screenshot there me filtering for some of my activity the last thing I want to mention for GitHub Enterprise is the Management console so the management there's a couple main consoles in GitHub Enterprise so you have the Management console and then you have the site admin console the Management console is where you can configure the entire Enterprise instance and you access this via a single shared password the site admin console is specifically for managing different facets of an organization so think like you know role-based access for users and such but some different things you can do in the Management console is you can for example add your public SSH key to the GitHub Enterprise instance so that you can SSH to the server itself once on the server um there's a few different interesting things that you can do the default SSH Port is 122 and you'll SSH with the admin user account one thing you can do is list the GitHub Enterprise configuration via the ghe config command this could contain active directory credentials depending on what the server is integrated with another file of interest on the server is the secrets configuration file the secrets configuration file could contain API keys or SSH Keys depending on what GitHub Enterprise is integrated with in that environment in terms of logging so for example adding stuff you know like adding public SSH keys in the Management console that's going to be logged in the management log so you can see I have a screenshot there where I'm filtering for some of my activity adding the SSH keys in that Management console now we're going to get into attacking gitlab Enterprise",
        "so gilab Enterprise is going to hear the term project and you can use project or repository interchangeably they mean the same thing you know project and host code track issues and contain CI CD Pipelines and there's five you know five permissions for a project or repository you can see there from an attacker perspective you're going to want to compromise a user that has developer or higher permissions and just like with GitHub Enterprise if you want to use an access token or an API key there's different Scopes that are applied to that that authorize you for what you're allowed to do within the rest API and just like you know GitHub Enterprise there's a bunch of different things you can do with the rest API and you're going to see that in the demos these are the tax scenarios that I'll be covering again not an exhaustive list you know just ones that I've researched and full details on these attacks um will be are in the white paper uh additionally a number of these you can perform with the sem kit tool so just like GitHub Enterprise you know reconnaissance is important in Gate lab Enterprise focusing on repositories files and code you can do this with the web interface rest API or sem kit now in terms of logging something that I thought was interesting so this activity is logged on the production log and API log but if you see the screenshot on the top right the the activity as far as what I was performing with constants for was actually being filtered so an alternative approach I ended up using the access log and the screenshot below you can see when I use the access log filtering for reconnaissance activity I could actually see that activity",
        "just like with GitHub Enterprise you can also impersonate other users so if you are an admin role within gitlab Enterprise you can either do an impersonate user login via the web interface as you can see in that screenshot or the stealthier option again is creating impersonation token and you can do that via the web interface or the rest API and again only other admin users can see that an impersonation token was created for that user that user has no clue that they are being impersonated",
        "and this is going to be logged in both the production log and the API log on the gitlab Enterprise server I've got some search criteria there again all the search criteria and all the important logs are all included in the blog post and also the white paper so I've just got a screenshot there for me filtering for some impersonation token activity",
        "another thing you can do just like the other system you can promote a user to admin so if you're an admin and gitlab Enterprise you can promote a use any user to admin or demote any user from admin you can do this via the web interface rest API or SCM kit",
        "and this activity is also going to be logged in the production log and API log so you can see a screenshot there for example I'll be filtering for that user promotion activity",
        "same three persistence options with gitlab Enterprise with a couple caveats so you can create personal access tokens as a normal user in the web interface or gitlab Enterprise gives you the ability to do this via the rest API as well but you have to be an administrative user you also have impersonation tokens but that requires administrative permissions and then the last option is SSH Keys which you can create those as a normal user either via the web interface rest API or sem kit",
        "again the production log and API log is where this activity is going to be logged so the screenshot in the top shows me filtering for some personal access token activity and the screenshot on the bottom shows me filtering from for some SSH key activity so another attack here is around you can modify a continuous integration or continuous delivery Pipeline with thinkit lab Enterprise so in gitlab Enterprise there's a concept of these gitlab Runners gitlab Runners will execute instructions from a gitlab CI configuration file from that configuration file it's going to be named.gitlab.ci.yml and it's going to be in the root of the repository so you're going to need developer maintainer or owner role for that project to modify that file once you do though that's going to trigger the pipeline to run for that project in terms of reconnaissance to find you know repositories that have gitlab Runners available to your compromised user there are some reconnaissance modules with an sem kit that you can do that so in terms of updating this configuration file via the web interface it's going to be logged in the production log but obviously you can just update this file via the git command line tool so really any updates to the gitlab CI configuration file should be heavily scrutinized and require an approver before being pushed",
        "so the last mention here for gitlab Enterprise is around SSH access so a few different interesting things from an attacker perspective a gitlab configuration file on the server so that can contain credentials like active directory credentials depending on what the system's integrated with there's also a gitlab Secrets file and that could contain API Keys as well again depending on what Integrations are in place and lastly there's a postgres SQL database on gitlab Enterprise there's some interesting things in there so you can see in that screenshot I'm filtering like a user's table for usernames encrypted passwords and one-time password backup code so those are three interesting things from an attacker perspective if you have access SSH access to the gitlab Enterprise server",
        "so the last system I'm going to cover attacking is bitbucket and then we're going to get into some demos and SCM kit so in bitbucket there's also the concept of project and this is specifically bitbucket servers what I focused on and a project can contain one-to-many repositories it's kind of like a container for one of my repositories there's four main permission levels in bitbucket server you have Global permissions that's going to tell you what type of user you are and then you also have permissions in projects and repos so whether you are an admin to them write access read access Etc and then lastly just like the other two systems there's different Scopes that can apply to access tokens they're called HTTP access tokens in bitbucket server and something that's different though with bitbucket server is those access tokens are only scoped to be able to interact with repositories or projects having said that though there's a number of other different things you can do with the rest API in bitbucket server you would just have to authenticate with like a stolen cookie or a username password",
        "and these are attacks I'll go through for bitbucket Server again not an exhaustive list uh full details on these attacks are in the white paper and you can perform a number of these with sem kit so just like the others you can do reconnaissance via the web interface rest API or sem kit however one thing",
        "that I found was interesting when I was uh you know testing doing this research is that this activity is logged in the bitbucket log however I had to increase the logging level in order for my reconnaissance activity to show up so once I did increase the logging level you can see there that my queries for searching for like API Keys whatever I was performing reconnaissance for was actually showing up just like the other two systems if you're an admin you can promote any user to admin or demote end user from admin and you can do this via the web interface rest API or sem kit",
        "this activity is going to be logged in both the access log and in the audit log so you can see there I have a screenshot kind of showing my user promotion activity within the access log",
        "so two options for persistence with bitbucket server you'll notice that impersonation tokens are missing and that's because there's not a concept of impersonation tokens within bitbucket server you can either create personal access tokens or SSH Keys as a normal user and you can do this via the web interface rest API or SCM kit",
        "and that activity will also be logged in the access log and audit log I've got a screenshot there for some of my SSH key Edition activity just another reminder all the logs uh for for this activity and search criteria is all included in the blog post and the white paper which I'll have links to at the end of the presentation",
        "so the last attack for bitbucket server is around modifying cic pipelines so similar to gitlab Enterprise but a little bit different so bitbucket is an atlassian product uh they all at lasting also has a product called bamboo and bamboo can be used as a CI CD pipeline so if a bit bucket repo is using bamboo as a CI CD pipeline it's going to have a bamboo Dash specs directory within the root of the repository and it's going to have a configuration file within that folder so it's either going to have a yaml file which is bamboo.yaml as you can see in that screenshot or it's going to be a Java spec file and it'll be pom.xml and you're going to need write or admin access to the repo to modify that configuration file but once you do that's going to trigger that pipeline to run automatically so you can see in the screenshot there I'm adding some lines to the bamboo configuration file to trigger the pipeline this activity is going to be logged in the bamboo log on the bamboo server so you can see a screenshot there of some of my activity uh updating this file so again just like gitlab Enterprise any commits to these CI CD configuration files should be heavily scrutinized so as you saw with these three systems there's a bunch of different things you can do with the rest API and so I wanted to create a tool that would help automate that because I didn't want to have to keep looking up the API documentation and doing curl requests during engagement so that's where sem kit came about so sem kit is a source code management attack toolkit I wrote it in c-sharp so it can be ran in memory with command control Frameworks like Cobalt strike I have the URL there to the tool I just pushed it this week I also did a full presentation on the tool at black hat Arsenal this week as well it supports attacking GitHub enterprise gitlab Enterprise and bitbucket server and has multiple modules for doing things like reconnaissance privilege escalation and persistence",
        "so here's an example screenshot of running sem kit memory you're going to see these in the demos but this just shows me using a utility called inline execute assembly which is developed by a member of X-Force red as well Sean Jones to be able to run SCM kit in memory so here I'm doing a the code search module searching for API secrets",
        "here's an example of using sem kit to do privilege escalation on GitHub Enterprise by at promoting a user to site admin",
        "and here's an example of doing persistence in gitlab Enterprise via a personal access token so now we're going to do the demos so first demo I have put together I'm going to do a software supply chain attack on GitHub Enterprise second demo I'm going to do lateral movement from gitlab Enterprise to artifactory which is a package repository system and then the third demo I'm going to show doing lateral movement from bitbucket server to Jenkins",
        "okay so just to set the stage here we have access to GitHub Enterprise right now as a compromised user hpotter and we are interested in gaining uh at modify access to the wandos repository Wando s",
        "is a fictitious piece of software that runs on all wands within the Wizarding World so we want to be able to gain modify access to this repository so that we can perform a software supply chain attack so the first thing we're going to do with sem kit as our compromised hpotter user who's just a normal user is we're going to do the search repo module with an sem kit searching for wandos so we're going to go ahead and run this command within Cobalt strike",
        "I'm going to go ahead and paste this in here",
        "all right so we're going to run this command and what you're going to see is that RH Potter user cannot see the wandos repository all right so it must be some sort of like private repository that we can't see however as part of this operation we found an API key on a file share now during our engagements we commonly find API keys on user workstations file shares internal wikis and stuff like that so we found this API key and we want to validate this API key and see what privileges it has so to do that we're going to use sem kit with the prism module authenticating with that API key so we're going to go ahead and run this command here and see if this API key is valid that we found on a file share and what privileges it has and what you're going to see here this API key that we found and this is a scenario that you know we do during engagements our adversary simulation engagements we have actually conducted this scenario so this has site admin access so we had the site admin API key and we have a regular compromise user hpotter so what we're going to do is we're going to use sem kit with the add admin module and that API key and we're going to promote our compromised hpotter user to site admin so we're going to run this command here",
        "and we're going to see is H Potter will be added to the site admin role so now if we go back to the GitHub Enterprise web interface and refresh",
        "what you're going to see is there going to be there's going to be a rocket ship show up on the top right and that is the site admin console within GitHub Enterprise so now we have site admin access within GitHub Enterprise we're going to take a look at the users and see if there's any interesting users this devops user looks pretty interesting you know we're interested to see if maybe this user has some private repositories so we're going to drill into here this user has two private repositories so we're going to check those out and what you're going to see is that user devops user actually owns the wandos repository which is private and that's why we couldn't see that as our normal hpotter user so there's two options here you can either do a user impersonation attack to impersonate that user devops user or what we're going to do is we're going to do a repository takeover by unlocking this Repository so we're going to go ahead unlock this by default and GitHub Enterprise this repository is going to be unlocked for two hours so you have to provide a reason here and this is all logged on the GitHub Enterprise server so now this this repository the One OS repository is locked for hpotter so now we should have full access to the repo and its code and all of its settings so now we're going to go back and you're going to see here that now we will have access to the Repository",
        "and just to kind of further prove this we're going to show kind of just with the get command line tool we can also clone the repository down as well with the hpod or user now so kind of this attack path we were you know a normal user we found a site admin API key on a file share we use that API key to promote our compromised user to site admin where we performed a repository takeover on the wand OS repository and now we can you know modify that software as part of a software supply chain attack",
        "the second demo I'm going to show doing a lateral movement from gitlab Enterprise to artifactory which is a package repository system so as I mentioned in gitlab Enterprise there's these concepts of gitlab Runners and they will execute uh instructions in a gitlab CI configuration file so we're going to perform reconnaissance with our compromised user and see if our user has access to any gitlab runners so we're first going to do this list Runner module with SCM kit so we're going to go ahead and authenticate here and see if our user has access to any gitlab runners and what repositories those Runners are assigned to and you're going to see we're going to get a few a few hits here um the secret spells directory is the one we're gonna end up focusing on so we we have access to some Runners now like let's go ahead and do some reconnaissance for that gitlab CI configuration file and we're going to cross reference Runners that we have access to with gitlab CI configuration files basically repos that have both and so we're going to do the search File module search for gitlab.ci with sem kit",
        "and there's going to be a couple hits to come up but again we're going to focus on this secret spells directory here",
        "so you can see here the secret spells directory has the CI configuration file and it also has a gitlab runner that we have access to so we're going to go ahead and go to this repo and try to modify this configuration file now I'm doing this via the web interface just for demo purposes but obviously you can do this via the git command line tool and in this environment specifically what you're going to see is there's some integration between gitlab and artifactory so it's basically pushing a file to artifactory which is a package repository system and you can see what it's doing is it's authenticating with a username and password for artifactory to push this file so what we want is we want to get these credentials so we're going to modify this configuration file to print out the artifactory username and password that it is being used so we're going to go ahead and update this file and again once you update this CI configuration file that's going to trigger the pipeline to run automatically so we're going to go ahead and commit our changes",
        "all right so you're going to see that it's going to validate that it's that it's a good configuration file and then what we're going to do is we're going to go look at the pipeline and take a look at our job and make sure that it ran and what we should see in our the job output for our newly modified job with that configuration file is the artifactory credentials now why could this be useful from an attacker perspective if you have access to artifactory you know you could upload malicious packages right that are used in other projects or that are deployed so we're going to go ahead you can see our pipeline ran take a look at our job and we're going to view the job output and what you're going to see in the bottom there is it did print out the credentials that was being that were being used so the artifactor username and the password so we're going to go ahead and validate these credentials by logging into artifactory let's go log in here with the admin username also if you haven't noticed uh my lab I'm a big Harry Potter nerd so that's why I've got uh all this you know Hogwarts Hogwarts stuff set up so I'm a huge Harry Potter nerd so you can see here we have access to artifactory where again now we have access we can upload malicious packages uh you know we kind of completed that lateral movement from gitlab Enterprise to artifactory",
        "last demo I'm going to show is doing lateral movement from bitbucket server to Jenkins so Jenkins is a build system cicd system",
        "and Jenkins can be used obviously to build applications so if there's an integration set up between a source code management system and Jenkins it will run what's called a Jenkins configuration file right in a source code management repository and that name of that configuration file is going to be Jenkins file so what we're doing with our compromised user is we're using SCM kit and we're searching for any Jenkins CI configurations file with the search File module searching for Jenkins file so we're gonna go ahead and run this search here",
        "and you're going to see a couple instances pop up we're going to focus on this Marauders map app directory so we're going to go to this Marauders map app repo and try to modify this Jenkins CI configuration file now our goal here with this file so when Jenkins runs the cic CI CD configuration file it runs on the Jenkins server itself so what we're interested in is we want to perform lateral movement to Jenkins so what we're going to do in this configuration file and again I'm doing this in the web interface you could do it via the git command line tool as well what we're going to do is we're going to have it execute some commands to add our public SSH key to the authorized Keys file for the Jenkins user account that way we can SSH to the Jenkins server as a Jenkins user account now this can be prevented on the Jenkins side if you have like sandboxing in place for groovy scripting so I'm going to go ahead and update this Jenkins file and you know typically like in a real world environment like during engagements you just you know kind of let you know Jenkins run on whatever schedule it's running on to pull the updated configuration file especially if you haven't compromised the Jenkins server um for this case in this demo I'm just going to run this Jenkins job manually um so that we can see the results so we're going to go ahead and run this Jenkins job and again it's going to pull that updated Jenkins CI configuration file from that repository and run it and it's going to run the actions that we just put in there so it's going to run who am I the host name and then add our public SSH key from our our private public SSH key pair to the authorized Keys file so you can see there that that ran so now we should be able to SSH to the Jenkins server as the Jenkins user account so we're gonna go ahead and SSH here with our our Associated private SSH key with the public SSH key we added and you can see there we've successfully pivoted from uh from over to Jenkins from bitbucket so this kind of shows an example of being able to take take advantage of those Integrations with source code Management Systems to Pivot to build systems",
        "so defensive considerations for the sem kit tool itself I have a yarrow file within the repository with status static signatures that you can apply for attackers if they were to use this Tool uh in its default State I also have a static user agent string within the tool so that you have I have listed there now the reason for this is again to detect activity with this tool so I have a snort rule that's including the sem kit repo for this additionally in your web proxies you can add rules for this user agent string lastly any access tokens or SSH keys that are created with sem kit the names are going to be prepended with SCM kit Dash so you can put rules in your source code Management Systems to detect any access tokens or SSH keys that are created with this in the beginning of the name",
        "I'm not going to get into these logs and the log filters and details just because again they're included within the blog post and in the white paper but for GitHub Enterprise make sure you get these three logs forwarded to your sim",
        "and then I've got some rules that you can apply to detect the activity that I showed today within GitHub Enterprise",
        "for gitlab Enterprise make sure you get your application log production log API log and web log forward to your sim",
        "and then make sure you get these rules applied for the activity I showed all the way you know reconnaissance user impersonation all those different attacks that I showed lastly with bitbucket server make sure you get the access log audit log and bitbucket log forward to your sim and then on the bamboo server make sure you have your bamboo log for it to your sim as well again all these rules for all of these and all the logs you need to forward to your to your sim they're all included in the blog post and the white paper in terms of configuration guidance across the board for source code Management Systems in terms of personal access tokens and SSH Keys make sure that you set an automatic expiration date and don't allow users to create these with no expiration date think of these like passwords like we have expiration dates for passwords so we should do the same thing for Access tokens and SSH keys in terms of access and authorization limit the number of administrator accounts Within These systems you know at maximum or at minimum there needs to be two you need to have a primary admin and a backup but there shouldn't be more unless absolutely necessary you know the more admin users the more attack surface for an attacker make sure you enable multi-factor authentication and lastly disable user impersonation as you saw I took advantage of that that feature within GitHub Enterprise and gitlab Enterprise",
        "in terms of repository access and code commits operate on a policy of least privilege so don't just give everybody access to all repositories additionally make sure that you delete code branches in a sufficient time so I've seen time and time again where a developer will create some sort of like testing code Branch they'll commit credentials to it and kind of leave it left over for our red team to find like additionally whenever users are making code commits require at least one approver for that commit so they can actually review to make sure there was nothing malicious in that commit and require sign commits either via gpg keys or certificates in terms of logging so you saw I showed a bunch of different logs that you can use and some different detection rules so make sure that you get those logs that I have forwarded to your sim and additionally as you saw with you know systems like bitbucket server I had to increase the logging level to detect that reconnaissance activity so increase the logging level when needed as well",
        "so in conclusion you know these systems they contain some of the most you know sensitive information organizations and they're really a critical critical piece to organizations and a key component in the devops like life cycle where attackers are really focusing on these more and more because again software runs on practically everything today between our cars Traffic Control Systems Right medical devices right so these systems are very important depending on the organization right compromise of a source code management system in one organization could lead to compromise within another organization",
        "and then lastly you know these systems they really do need more visibility and they need more research from the community so kind of a call to action to you all is to you know I really hope to see future research and somebody take this research to the next level to further defend these systems",
        "before I wrap up here I just have some acknowledgments uh without these people they supported me through this entire research project and gave me tons of really great feedback uh without them I would not be standing here today so I want to thank Chris Thompson Daniel Crowley Dimitri Patrick Fussell and Reuben boonen",
        "so as I mentioned the blog post and the white paper URL I'll leave this up here that's got the white paper's gonna have full details on what I talked about today if you have any questions feel free to hit me up on Twitter or Discord or come talk to me after on the hallway I'm happy to answer anybody's questions uh with that that's it and I thank you very much [Applause]",
        "[Music]",
        "[Music]"
    ],
    "7nSFcdZ2TBo": [
        "[Music]",
        "it's Thursday afternoon I thought there'd be like 30 of you but they mic'd me up because if I had to stand there for half an hour straight I would explode I uh",
        "I've given a lot of different conference talks and I've never started off with the whole hey here's my motivation for doing it why I made this talk I'm always like who cares right here's the talk here's what I want to talk about so indulge me for one second while I actually do that this time and the reason is is because this time it actually matters and what happened is a buddy of mine reached out last year late last year and he said he needed to get together and talk with me about a Wi-Fi question he works with a government agency that I won't name I had a good idea of what he wanted to ask and he turns out I was horribly wrong as usual",
        "and what he wanted to talk about was this he had a confidential informant and This Confidential informant had ties to a like nation-state terrorist group right I won't name the group but a very very serious group and my friend he wasn't worried for his own physical safety or anything figures he can take care of himself he was worried about the safety of his informant and what he was worried about was if I'm meeting with this individual and someone follows me as I'm driving away and they keep following me and they figure out where I work they're going to go back and harm this individual right it won't be good for them so they weren't concerned with their own physical safety they were concerned with the physical safety of this person who was providing the information",
        "and so I'm like wow and what it was was a couple years earlier they had heard me talk about the possibility of maybe using Wireless to tell if you were being followed in a methodology that I'll talk about in just a second and so they said that they went to their tech people they didn't have anything so he came to me and I kind of uh didn't want to reinvent the wheel I told him yeah you know what let me take a look and if not maybe I can make you something and I started doing research trying to find out if there was anything like this and I just really couldn't find anything and that really kind of was depressing to me because there's so much technology out there to stock on people and invade their privacy and there's so little to try to help people that are in that situation right it's really kind of depressing and someone very close to me has dealt with the stocking issue and it's just devastating right you just never get that mental piece it's a very very difficult situation so I kind of thought about it for a little bit and thought well I don't really see a way this can be abused right it's really only designed to try to tell if you're being followed not to help follow someone else so let's give it a go right and that's kind of the background for this this is a room full of technical people if I say SDR most of us kind of think right software-defined radio hack RF something like that but the original SDR right surveillance detection route things that a lot of them are fairly Common Sense changing lanes right seeing who changes Lanes behind you getting off the freeway getting right back on seeing who exited off who's getting right back on behind you certain things like that anyone who's ever played in that space and lived in Washington DC the reason I chose this map it's really obvious that the Beltway is designed to be one giant surveillance detection around right that's kind of why one of the reasons I think it's laid out the way that it is and he was using this tradecraft he just wanted a little technical assistance with it and the methodology he'd heard me speak about years earlier was listen",
        "I understand that tradecraft as well but",
        "if you really want to tell if you're being followed maybe also think of something like this go to Starbucks to grab a drink then go somewhere else and then go somewhere else and now sits there and see did I see any devices at all three locations right because think about it even a nation-state quality surveillance team with a very very good trade craft very very good equipment who knows what they're doing",
        "isn't there still a really good chance that they have a phone in their pocket right or one in the car you know maybe the airpods a Bluetooth headset right something synced up to the car right and if you're connected to a network great I can see the MAC address and if you're not connected to the network even better because the odds are right most people don't shut off their Wi-Fi unless you're coming to a hacking conference in which case it should absolutely be shut off right you know you're coming to black hat Defcon yet shut off it stays off pretty much the entire week but when most people are just kind of living their daily lives that's on right and what are our phones doing they're sitting there looking for wireless networks where we've connected to historically and that in and of itself can become a signature right am I seeing something right now",
        "but I also saw five to ten minutes ago 10 to 15 minutes ago all the way down the line and that's the methodology that we were going for here and so to do this we wanted to keep it completely passive right we're just passively trying to detect Wi-Fi and Bluetooth devices that we observe around us and it really doesn't matter if they're part of an active connection or not it'll work either way there's a little bit of a difference in the methodology we'll talk about that for Hardware I didn't want to go buy anything I ended up buying like a little bit this is very very cheap it's things like seriously how many of us have multiple raspberry pies sitting in the closet doing absolutely nothing right absolutely nothing yeah I used a Raspberry Pi B for this not a 3B like not that there was any reason to I just have like three of them in my closet for some weird reason and so a lot of these are things that a lot of us probably have laying around or can get very very cheap first off Raspberry Pi there are multiple versions of these I could have used normally these are about 35 dollars but right now there's a really really lame shortage they're going for like 120 quite a bit more but like I said I think a lot of us have this or something very very similar laying around",
        "for a wireless card I had a bunch of alpha cards but I went to the akismet Discord and asked the community there what the general consensus was the current uh kind of the best wireless card that a lot of people were using and this was the alpha card that a lot of people recommended the slides will be available online they might be today already so they'll be out there on the black hat site so if you want to see any of these specific items",
        "for a battery pack once again I had several of them just kind of laying around in my closet that had been giveaways from other places or anchors that I had gotten very very cheap on Amazon over the years",
        "needed a display because in a few slides you're going to see literally the worst user interface you have ever seen right I mean it's you're like ah it's not that bad oh yeah wait for it but wait for it it's probably the highlight of the talk if I'm being honest but if you think about it right you have this little device you're going to be like driving down the road in this situation right you need some type of feedback and so a little screen on a Raspberry Pi that was I think like 25 on Amazon I didn't have one of those laying around so that was the one thing that I actually had to buy",
        "and for a software for the base for actually handling the wireless signals the Bluetooth signals and whatever else we want to expand it on into the future we actually use Kismet right and if you've never played with Kismet Kismet is amazing it is a free tool it basically just sniffs all the wireless that you can find right the reason why you want to use an external wireless card is so you can put it into a monitor mode you can basically just tell it like listen don't try to connect to anything you've been working really really hard lately just take a few minutes relax sit back and just kind of see what's floating through the air right you basically turn your wireless card into a pothead and so",
        "Kismet very very good at putting the Wi-Fi card into that mode it supports Wi-Fi Bluetooth a lot of different types of signals like I said there's a lot of capability to expand this in the Future No Doubt and one really really nice thing is it writes all that data to a sqlite database that's what we're going to actually use and try to pull the live real-time data from it's got separate options like uh generating a pcap other formats but there's really no need to because you can generate those from the database so you don't want to generate those live because all you're doing is wasting computational effort for no reason",
        "everything else is shoddy python code right it's a couple of tiny batch scripts and just very very ugly python code if you ever want to feel better about your coding capability just go to my GitHub I promise like two of my projects somehow made it into the Arctic code Vault so it's nice to know that like thousands of years after I'm dead my shoddy code will live on somewhere",
        "but seriously right when you're going to start to release a project like this and you start to think about putting it up a black hat imposter syndrome is real it it absolutely is it is very very real",
        "and so you just kind of tell yourself and remind yourself right that you know don't let perfect be the enemy of good right just because something isn't perfect just because something has doesn't have faults doesn't mean that it's not worth doing and I think that's really one of the uh kind of the core things to remember with pretty much anything in security or pretty much anything in life if I'm being perfectly honest that gentleman the Robert Watson Watt he was the uh he was one of the people who made a lot of advancements in radar he was just kind of a tasked with defending uh London during World War II from the German Air Raids and you know give him the third best to go with the second best comes too late and the best never comes and so yeah if anything right if you take anything from this talk you know don't be self-conscious like I push my shoddy python code out there on a regular basis and I would never insult a real programmer by calling myself a programmer but I can write ugly functional code that helps me and helps my teammates and I'm cool with that",
        "by default right I have Kismet set up to start when the Raspberry Pi Powers up I just give it like a little 30 second delay to let everything else get into place but then by default once you start Kismet up it automatically starts sniffing and seeing everything that you've set it up to keep an eye out for and putting it into a sqlite database it names the database the name of a file with a DOT Kismet extension but it's sqlite and so what you can do is you can just have the date the current date and time be the file name of that file and you just have it constantly go to the same directory and then the python code once the python code runs all it does is go look in that directory and grab the newest file and so that way you're always getting the live data and you just pull the power out doesn't matter goes away you plug it in power it up it's automatically within a minute up and sniffing and monitoring and doing its thing",
        "I did need to slightly change my methodology the original way when he had heard me speak about it years ago but not actually implement it was thinking about well we go to location one then we go to location two then we go to location three that doesn't really work very well",
        "when you're driving for long periods of time right you're going to be driving down the highway for half an hour or an hour or more that methodology really doesn't type of fit and so what we ended up doing was just going with a temporal based right just going off time do I see any devices right now that I also saw five ten minutes ago 10 to 15 minutes ago or 15 to 20 minutes ago if so",
        "let me know the device type it was was it Bluetooth is it a Wi-Fi client Wi-Fi access point right let me know the MAC address and let me know what time frame that I previously saw it in and if you're thinking well this is easy right that's just a SQL query what did I see in the past minute that I also saw during these previous times it's actually right the first snag and there was a solution but the snag is this in that Kismet database all the data you could want is contained but most of it is in these like Json blobs and you can't parse them but that starts to get very very heavy on a very low powered device right and you're already pulling data from a sqlite database that's actively having data being written to it and it works I've never had any issues but I realized that is also a recipe for hijinks and you want to kind of be as uh as gentle on that database as possible and in the database itself in the fields that are parsed and normalized it has the first time that it has seen a device and it has the last time that it's seen a device but it doesn't have any times in between those right and so trying to figure out well what do we see five to ten minutes ago 10 to 15 Etc doesn't really fit with what we have in the database and so the solution and I'm not saying there's not other ways to do this but what I did is I create lists right when this starts up automatically it it makes a list of devices that it saw five to ten minutes ago 10 to 15 15 to 20. and then it starts constantly looking at devices that it's seeing",
        "every minute it'll take a list of devices that it's seen in the past minute check to see if they're getting onto the list fire an alert if there are and every five minutes it'll start to rotate the lists what was the five to ten becomes the 10 to 15 all the way down the line and everything that it's seeing for the past five minutes it's storing in a list which then becomes the new five to ten and it just kind of rotates down the line so I'm not saying it's the only way to solve the problem it was just the solution that I thought of and implemented and it works",
        "so kind of talked about that methodology",
        "another thing right a tiny bit of tradecraft here we don't want to alert on ourselves right I don't want to fire this up go for a drive and then be like ah there's an iPhone following me yeah it's the one in my pocket all right and so how you actually do this when you're doing singles intelligence style of work is you know I've done some of this work in a previous life you get together in a room you sit down you see a list of all the devices that we're seeing right so I would fire something up right now I would let it run for a few minutes at seeing all of our phones everyone that you know doesn't have their Wireless or Bluetooth turned off and then you basically create an ignore list right and now we can see if someone else new enters the room because that device is not on our ignore list and so now we get the alert and that's the functionality that we need and so anytime we can create an ignore list of every Mac address that it's seen in the latest Kismet database so what I would do is turn it on let it run for a few minutes soak in everything that it sees and then boom just tap the button which you'll see how ugly the buttons are in a second tap the button to create an ignore list and now I have a list of everything it's seen that I don't want it to alert on and it'll ignore those for the rest of the session I can delete or recreate the ignore list",
        "yeah don't laugh no seriously no seriously laugh",
        "this is a reminiscent of like some old Microsoft Access databases I made back in the day yeah",
        "seriously though if you're thinking about this it's not that I just like put five minutes on this and just gave up look at me I'm not a small dude I'm six foot four right I do not have delicate little fingers and so if you're driving down the road and these gorilla hands need to mash a button you don't want like this nice interface designed by Apple you want an interface designed by Fisher Price Right This is a GUI by Fisher Price that is what I needed I needed the speak and say so yeah that's why we have these big horribly ugly buttons that yes I probably could have made look slightly prettier but why I was busy doing other stuff",
        "so now that I had it was time to do a little bit of field testing right kind of a drive off into the middle of nowhere which is one really really big perk of living in the desert right when you live in Arizona you can go in the middle of nowhere it's really really easy to go where there's no other signals around you because I started doing some testing and things were working good it was like okay it's working let me go do a field test let me drive out in the middle of nowhere turn on two phones that I previously had off and I saw absolutely nothing",
        "interesting so took it back dumped the data that I did see into a pcap fired up Wireshark and now here's where you realize the fun right because there's something that I knew was taking place I just didn't realize how often it was taking place and that's Mac address randomization right in the name of privacy and security we have devices now that they're constantly looking for networks they've connected to in the past but they're spoofing a MAC address right to try to keep your privacy and security and I knew that that was a thing I knew Mac address spoofing existed I just didn't realize that it was basically constant this was a very very narrow field of time and if you look at the very far right I know it's a very small but this is all this is two devices looking for one network these are all just looking for one Wi-Fi network if you look at the first part of the uh redacted most of the Wi-Fi name but you can see the first part of it starts with a DF there",
        "and you only see the same Mac address twice and so basically every time these devices are probing they're spoofing a new Mac address right so like I said a new Mac address randomization was a thing I just personally honestly didn't realize that it was basically every request it was just constantly going on so it's like all right the MAC address methodology that we had before still needs to be in place because it still needs to detect things that are part of an active connection it still needs to detect things that don't randomize but for things that randomize right is this a deal breaker it's not because now what we're looking for is we're going to look for what it's looking for right the probe request the actual name of the Wi-Fi network and so my my buddy singe in the front row right here down in South Africa his Wi-Fi network is named sinja's Wi-Fi and his Wi-Fi is on right now his device should be looking for hey send his Wi-Fi are you there send just Wi-Fi are you there",
        "he can spoof his Mac all he wants that can be spoofing every request I still see Mac address is looking for a name that's fairly unique right and fairly unique this is where people get tripped up we'll end the slides here in a little bit talking about this right people want to name their Wi-Fi something funny something unique something clever to impress their friends and impress their neighbors but what's the key part of that sentence right unique right unique and this is what can start to give us away and maybe help us a little bit of attribution on who we're detecting as well and so what we do is now we actually to get the probe requests we have to dive down into those Json blobs right so there's just little snippet of the Python code for kind of parsing down and so now all of the methodology that we talked about previously for Mac addresses we have Pro I have the same methodology to probe requests so we're actually looking for wireless networks that things have looked for and we don't really care what the MAC address is we're going off the name of the network at this point and we have the same they're uh they're included in ignore lists and everything else",
        "the user display much prettier than the agui no no it's the same fire it up there and you start to see what it does is it instantly starts to identify things it has uh we added 308 Mac addresses and 27 wireless network names that were being probed for into the ignore list and now it just fires up",
        "as it continues on you see what happened is this was uh was home when I actually did this that's why some of the the Mac addresses are kind of uh censored out but I left this running for a little bit and then all of a sudden maybe one of my neighbors turned on a device that was previously off maybe they had like someone come visit them but all of a sudden now there was a phone somewhere near my house or a device right a device that was looking for a network name Samsung smart and I started seeing these probe requests that I had also seen five to ten minutes ago and 10 to 15 minutes ago and 10 to 15 minutes ago all the way down the line and so once again I was trying to design this because the original person who needed it was going to be driving down the road right it's really really tough to kind of drive and pay attention to something else or really be too terribly interactive with it so like I said I made basically kind of Fisher Price user interfaces on purpose I personally think for a very very good reason",
        "the MVP version of my testing right I mean MVP here not as the most valuable player for any other sports fans out there the minimum viable product right before I bother drilling a holes in my Pelican case because those things ain't cheap let me make sure that this thing actually works and from going around testing and yeah the thing actually worked and so okay",
        "so then we have these slightly better-ish version right it's still nothing that I would actually want to sell or anything like that but at least looking a little bit easier some foam cut in the case the battery pack there it gets pretty good life even a very very cheap like anchor that was less than twenty dollars on Amazon will power this thing for over eight hours and I got a little bit more robust battery pack that one right there and it'll power for over 24 hours so it actually gets pretty good life right now you can always go to a cigarette lighter or something too I just wanted to keep this one as portable as possible but it uses very very little power",
        "foreign",
        "we said earlier that Kismet keeps great logs right and so this was uh I was speaking it was kind of cool the um I haven't even tweeted it out yet but this morning wired actually published a an article on me in this talk and that was kind of neat and as I was talking to the reporter about two weeks ago he he asked me he's like well could you maybe tell information about the people that were following you and I'm like yeah yeah we can right we kind of started to go down that Gap it and explain it right and potentially we could because of what I said just a couple of minutes ago right people have a very very bad habit of naming their Wi-Fi something unique and clever and funny to impress people and it's not just individuals organizations do it too",
        "right public private we we all kind of do it right I'm getting ready to show an example here in just a second and it's not trying to like shame anyone or shame any agency because everybody does it and",
        "so people don't think about that hey now your device potentially",
        "depending on what kind of device it is settings are and some other factors everywhere you go it's looking for this right so we fired up the old wiggle.net",
        "and I did the government agency the courtesy of blocking out the first part of that Wi-Fi name it was saying the name of a government agency and the strike force and this was outside of a building that is not publicly known to be government but absolutely has government in there and once again right I'm not doing this to kind of like name and shame or haha how can they be so stupid everyone does it said public sector private sector people but people have a horrible name a specialty right especially you work in a big organization but not you right you and 80 your friends you work in this really really cool little group right this little sub component heck yeah you're gonna name the little Wi-Fi at the office the name of that sub component and something else and this is given away right I've been in rooms where I was basically the only one there who wasn't like kind of an SF operator and you just start looking down like okay which one of you is stationed at 10th Mountain okay which one of you is stationed here you know once again I'm not naming and shaming everyone does it right it's just something to think about and potentially even if it's not like a government organization or anything following you if it's just an individual still things tend to be unique right even like Verizon Wi-Fi's and certain things like that and if you start to see these probe requests and their unique probe requests that start to following you you may now be able to provide a little bit of attribution on the devices that you're seeing",
        "the path forward more Wi-Fi adapters potentially I think the biggest one is more Wireless protocols right I think the most logical step for expansion is probably a TPMS like the low pressure sensors and tires because those get a little more range than a lot of people realize adding in a GPS to start to go back after the fact and kind of generate a map of if you saw something following you where did you first see it and all the way down the line right you have the logs there the logs are there just a matter of writing strips to kind of generate some of this data special thanks to a few people uh Mike Kershaw the Disney Kismet Discord I had a few questions about doing some of the things that I was doing and I was asking him this man right there Dominic white sin she's one of the best Wi-Fi researchers that I know and I think two times when I was working on this I would kind of reach out and it's like Hey listen this is what I'm seeing this is what I think it is am I correct and he'd be like yeah I know or here it is and down the line so thank you very much my friend appreciate it so just for helping me and Josh Wright for kind of some of the things things same things bouncing some of these ideas off them so that said I've about used up all my time the um the code is all out there it's all on my GitHub AZ mat if you shoot me an email or hit me up on Twitter or whatever I'll throw the link to it right there but the code is all out there the parts list is all out there I'm probably going to do up a blog post on digital forensics tips in the next couple days as well but if you have any questions I think they're going to take me to a little speaker room after the fact and other than that you had a lot of choices for your Thursday afternoon thank you very much for spending with me I appreciate it thank you",
        "[Music]",
        "thank you [Music]"
    ],
    "sRYs4yeA6wU": [
        "[Music]",
        "foreign",
        "thank you all for being here so let's uh let's talk about trying to be everything to everyone to talk about burnout",
        "so for this talk in particular uh what we're going to do is focus on some of the theoretical and kind of big picture issues around burnout and then after this so directly following uh in 2 30 South Pacific J",
        "there'll be a community discussion and so what that would be is an opportunity to get into some specific items all right so looking at so q a that'll be a great chance for Q a and looking at the real world application of what we talk about during this session so we'll begin with the opportunity to be here right now to talk about some of the big picture items and then any q a situations that you may want to share or talk about in the community discussion",
        "so very quickly just a little bit about me I'm very familiar with the security industry going from just in high school just calling local bbs's attending 2600 meetings I started source security conferences and I've worked at security companies like Vera code I'm currently at natography I have a PhD in clinical and organizational psychology and an MBA",
        "which I'm basically a targeted that to be able to understand not only the social issues of what happens in a workplace but the bottom line of a business too and so I've looked at depression anxiety Employee Engagement of course burnout and Technology sectors and specifically in the security industry and I'm currently adjunct professor at Norfolk State University where I teach cyber psychology and everybody always gives me that what is cyber psychology which is basically the intersection of psychology and technology so studying the impact that technology has on on humans",
        "okay so let's get to why you're here today and let's talk about burnout so what is burnout we've felt it we understand it let's just get that clear definition the clinic is clinically defined as a psychological syndrome",
        "that occurs due to Chronic emotional interpersonal stressors on the job",
        "interpersonal stressors",
        "I highlight that okay",
        "what's called what may be causing your burnout it's not necessarily what you applied for when you read your job description when you applied for your job it's not necessarily the computer",
        "it's not necessarily something that you may be doing for your work it's defined as the relationships the interpersonal relationships the people your managers what may be going on in the relationships in your life so we know what burnout is okay and I want to highlight the interpersonal relationships so when we're feeling burnt out we tend to express it in three different ways according to the research and if you're here and you're familiar with burnout you know about mozlak and you're familiar with the crowning goal of the way that Reese burnout is defined of the emotional exhaustion you're tired you have given so much",
        "it's you're just generally overextended and depleted of your resources and cynicism",
        "just done with it done I'm angry I'm detached I'm indifferent",
        "professional efficacy",
        "you don't feel good about your work anymore maybe you chose this career because you were like hey I'm good at this I like this this makes me feel good and now you're like maybe I feel like I'm gonna get fired tomorrow I I stink at this that I am terrible so I did a research study of any of you are familiar with with Jack Daniel his research on Barnett I was also part of that research project and we found that in the security industry",
        "most likely to express uh burnout responses through cynicism so",
        "something that's unique to it to the security industry is the most common response to burnout was the cynicism this disconnect this feeling of",
        "I just done the whole place could burn",
        "and I'm just not going to care this anger this resentment so we'll talk about that in a little bit so I wanted to just these are the definitions when we look at burnout and the way that we tend to express them and I always find it's important to look at burnout holistically we're one person",
        "when you're frustrated or you're upset say at your job chances are you're coming home and you're mad and you may be taking that out of your partner you may be taking that out of your kids you would be taking that out in your friends or let's say you're feeling like you're not doing a good job at work and then you come home and your partner says oh did you do the dishes did you do this and you're like no now you're like great now now I'm a lousy partner and then your kids come home and say I want to play no no I can't great now I'm a bad parent I mean you're just kind of kicking your butt left and right about how you feel and it starts to have the Snowball Effect where now",
        "you're just completely depleted so it's not like you're feeling terrible about just the way that you're feeling at work you're trying to be so many things to so many people and it begins to hurt you in all aspects of your life so you're a lot of times your anger or your frustration is often targeted at work and being taken out in so many different areas in your life so I always want to set things up of when we look at burnout we're looking at it in that big picture and that holistic view of how is this impacting your life and impacting you as a person",
        "so let's look at burnout in the security industry in particular",
        "and what's interesting is when a lot of the research that's out there that looks at burnout they're looking at caregivers a lot of times you want to look at research and burnout that's on nurses doctors caregivers there's a lot of research out there",
        "less so in other professions",
        "and what's interesting when we look at the security industry there is some research out there but there needs to be more right now those research that shows that in some studies that 77 to 80 percent of people in the security industry are experiencing burnout that means if there's 10 000 people walking around as a 10 000 Security Professionals walking around black hat right now I mean can you eat 000 of those 7 500 to 8 000 of them are burnt out to me that is an alarming number",
        "out of 10 000 people so why what what's going on I mean you all know it you probably are living it every day you could probably tell me more than I can tell you but what I think is important is to recognize it and to acknowledge it because of what we talk about in the next you know 30 some odd minutes that we have left is the more aware that you are of the situations in your life that are causing the burnout the better you're going to be able at anticipating how to manage them and how to solve them so when we look at okay what's in the security industry that is causing these triggers that is causing the situations in my life the mental workload being able to have to respond to things being able to anticipate things right anticipate these cyber attacks a shortage in Staffing and this increase in workload trying to find your place in an organization what if you're working in an organization who doesn't even understand the difference between what's going on in security versus I.T or maybe you're working for somebody who just became a CSA who was brought over and maybe you know more about the nuances of security than the person you're working for and that's stressing you out because you're trying to convince them of the tools that you need I mean all of these different things that a lot of times the people in the organization don't understand security",
        "practices in general let alone how to support you let alone how to manage and balance all of the different asks that are coming through and it's not often appreciated in the organization I mean I've even wrote written these things down yet I've been in the position where we're trying to get a new contract through and we had one one poor wonderful but sole security person who had audit and review everything and when we were in line and we had to wait it was holding up our contract and we're trying to to they wanted to gently go like Could you hurry this up Could you hurry this up and I'm going don't don't this individual is helping our company by making sure that we don't introduce a new program that's going to be vulnerable and hurt the company and everybody's getting all frustrated because they want to speed it up because it's causing delays and I even know better and I'm still you know getting tempted to go after our poor security person I mean all of these things that we don't understand and if we don't even understand security to begin with how can people begin to understand how to help people who are working in the security industry",
        "so if you go online and you look at oh okay what do we do for Burnout and this is what drives me crazy this is usually what you'll start to find out the tape a hobby",
        "great yes",
        "so when I get into my burnout",
        "when I'm in like the dark place like the really dark place I look at this and I'm like oh okay yeah all right so work less so I'm so stressed out right now that I'm feeling like if I don't give it my all I'm gonna get fired I'm doing a terrible job so if I work less my anxiety is going to go through the roof so I don't feel like I can take a break okay take a vacation I'm gonna spend that vacation checking my emails freaking out my boss is going to be calling me all the time now my family is going to be really mad at me because I'm spending the whole time checking my emails and doing work and now I spent money and I probably shouldn't have to take a vacation that everybody's mad at me for maybe not all right",
        "I mean all of these do things do things do things meditate breathing new hobbies we spend money on new hobbies that are going to sit in the corner staring at me okay yeah I have a Peloton script subscription and every month it stares at me with that little thing that goes off and I'm not going to cancel it it's not going to um I'm not going to cancel it I'm not gonna let it win but I'm not ready to go and start exercising again because I'm",
        "do it all right eat right",
        "when I'm burnt out and I'm in like my dark place I'm not ready to go make a salad and happy I'm sitting there under a pile of Taco Bell wrappers barely able to function okay like this is I'm not here I'd love",
        "to be here but I'm not here so I I look for these burnout strategies and I get these perky happy do all of these things and it just makes me mad okay I know I want to get there but I read these and I go okay fine you're right this is good advice I'm not saying this is not good advice this is good advice I don't know how to get there though I don't I'm depressed I'm anxious I'm sad I",
        "don't feel good enough about myself to even go get there so what do I do what do I do how do I get there help me help me get there it's first",
        "because this",
        "this is where I'm at",
        "okay this is where I'm at",
        "so what do I do you tell me to do this for my burnout I'm with you but the fact of the matter is this in the long term feels good",
        "but it doesn't make me I know I'm not solving my problems I know I'm not really doing the things that get me to where I need to be there's a short-term Solutions I know this because then when I'm 30 pounds heavier and recovering from a hangover or you know whatever it is I know I'm just making myself feeling worse feel worse so I got to get to the good place but how do I get there",
        "so we'll talk about this so this will come back out but as a shell we've got one called the burnout taxonomy because it's a process you don't get from I'm eating my feelings and barely functioning to great I'm just gonna go eat healthy and be fine and take a break and go meditate and become all Zen and great overnight",
        "I mean maybe you can I can't say no one is and if you do please by all means tell me what to do I'll trade come up here and I'll trade with you because I'd love to hear it",
        "but um but I call it survival because a lot of times that's what you're doing sometimes you're still burned out and you're just in such a dark place that you're surviving and you're surviving as a coping mechanism that that's where you're at so how do we get to that the relief and what we're calling self-efficacy which I'll go over",
        "okay so let's talk about the first step now I know many of you here today and you want me to tell you this is what you do and it's a magic Panacea pill it's a statement it's a thing it's something you can do love to have that I really would so don't get mad at me but I don't have that okay but this is what I do have for you so what the research shows in terms of what's the most effective for solving burnout so social learning theory and self-efficacy and so what does this mean and so what this means is that the more that you learn about yourself the more that you enhance your awareness the more that you learn about your responses your triggers your beliefs this your narrative the more that you can be better at managing it right",
        "because when you get into some of the situational factors so some of those the Band-Aids some of the like oh well okay if I just get a new boss or that co-worker who doesn't do work enough work and drives me crazy some of those factors can change",
        "but it's not sometimes it's just a short fix and then maybe you change jobs but there's new things that burn you out and you may find that the same patterns are happening in different places not always in the same way like for me I know like I know my anxiety triggers and I know like for me it's usually the emotional exhaustion piece",
        "for me that's just gonna happen Wherever I Go now sometimes in situational factors you have a toxic work environment a boss if we're going to talk about that too when we talk about awareness you know it becomes is it something that I can control is it something that's out of my control and how do we get that awareness to be able to take those next steps but one of the things that is important even though the social learning theory and self-efficacy it may be asking you to do the work of recognizing the situation in yourself and recognizing what you can control or change",
        "I am at no point saying that burnout is your fault and I think that that is really important to acknowledge there's a lot of lousy situations and toxic workplaces and poorly managed situations and so many negative situations that are out there that can cause burnout that are frustrating that you feel helpless about that not just helpless but angry rage",
        "frustration just keeps you up at night stewing because you're so angry because you were putting so much into your work and you want to be heard you want to be appreciated I mean so many things and then here I am coming along and saying well if you only just changed your narrative about how to do you know like yeah okay I get it I do",
        "but that's kind of also the rub of it and so let's talk about that but I do want to be clear made that asking you to do the work but asking you to think about what you can and can't change it's not saying that it's your fault that somebody's poor management or somebody's toxic work environment they're asking the way that you respond to it means that you're the cause of it",
        "but is looking at what you can and can't control because that's the thing is that at the end of the day",
        "you are impacted by what you can and can't control",
        "if somebody is a poor leader and you can make those recommendations there's many times where I've gone into a work environment that I've been brought in and they say go fix my team and I have to turn around and say okay but are you willing to also change because unless you as a manager are willing to change there's only so much that I can do and if the answer is no from that manager that I'm limited and then I usually will say okay fine and I've worked with the team and I said the last team that I worked with what happened was I worked with the team they built up their confidence they managed their burnout and then in that particular situation some of them found new roles some of them made their own piece with their work and found a happier place and they were able to manage it but it never actually came to a good fruition and became the potential that the team could have but the staff was able to at least find a place where they weren't angry and resentful and in when again that dark place",
        "because we need to look at what we can control because when you're angry when you're up at night fuming and raging you're suffering you're hurting the sad part is if you're burnt down and it's your perform manager or there's a situation they may be sleeping no problem you're the one hurting sorry you're the one hurting you're the one being angry it's your relationships that are in pain and that's the sad part of it is that it's your situations in your life that are in pain and so we have to look at all these things of how do we respond to them what are the triggers so if you've got say a manager that you're not getting along with or a co-worker what is it about that and start pulling on these threads asking these questions what is",
        "it about it okay why does this frustrate me so much and these are hard questions to ask because they're hard to answer I don't I don't know it just it's the principle of things I come to work every day from nine to five this person shows up at 10 o'clock they show up late every day meaning I have to do more work and that's not right",
        "you're right you are right",
        "you're the one who's being angry about it for good reasons and you're the one suffering and this is what I mean there's the answer the right answer what I wish you could say is you know what you're absolutely right that person should show up at nine o'clock if not early take on their job but we can't control that person and you're in the cycle and you're this story when I talk about like your mental script and narrative how many times do you go to bed or you're sitting there thinking just telling yourself the story oh they should show up in time oh then you ruminate over and over and over and over and tell it in your head because you're mad and you're doing it and",
        "what can you control and what can't you control",
        "so let's take a look at just some of the real world examples here",
        "so okay so let's say this you've got a whole bunch of work to do you're feeling frustrated work is behind right there's the emotional exhaustion piece so your different responses okay I'm going to stay late I noticed late before but I want to push myself as hard as I can and do everything my boss asks for me because it's that feeling of validation I'm going to push myself so hard cynicism and anger this is poor management if I had a good manager this things wouldn't be so backed up heck with it I'm just going to leave I don't care not my problem they're a poor manager and I don't need to give any and the heck with them the professional efficacy I used to be good at this I used to be able to do this task and enjoy it I can't do this anymore I don't think I'm good at my job all of these emotions that you're feeling however you choose to express it however you may identify with it",
        "right these may be familiar situations these May resonate they may not so it becomes about asking yourself okay so this is how I'm responding for valid reasons again everything that you're feeling about burnout is valid",
        "but asking why am I doing this",
        "why am I pushing myself so hard what do I need here why is it that when I get a or a message at 9 00 pm at night I feel the need to reply",
        "what's pushing me to do that",
        "the cynicism",
        "so when was the trust broken why are you angry where is this I don't care if the whole place is on fire and so this this one is hard and I want to be clear about the difference between boundaries and cynicism because this is an emotional piece is when you say a boundary of I'm going to work my nine to five because I need to do that for me because that's the agreement we work nine to five it's okay okay boundary",
        "I'm gonna work nine to five and I don't care if you need anything else because you suck and that's it",
        "and it's this emotional piece of where it's coming from and if you've ever been around also cynical co-workers",
        "the ones that vent the ones that are angry the ones that have ever been next to a toxic employee I worked with a group one",
        "time and",
        "there was just one employee he was so cynical and so burnt out and so angry that anyone who would basically stand still for about five minutes he was telling them how terrible it was to work there and so it became a very toxic work environment because even the people that were trying to be more positive about their work environment and trying to work it out he would be right there just Angry Angry Angry Angry and so it's trying to set boundaries and can what would it take to not be angry and to free yourself from that because again it's not you're the one that's suffering from that anger you're the one that's bringing that home not again not your fault there are things that work that are making you angry there are things in situations that are making you angry but what can you do to help remove yourself from that anger and find that peace from that and then again the professional efficacy of when will you feel good enough is imposter syndrome when did you feel valued what would help you feel valued so whatever it is in the way that you're expressing burnout what can help pill relief in this so our taxonomy okay",
        "so whatever it is when you're looking at this is how I express my burnout so identifying that first so let's say we're down here in our survival okay we're eating our feelings we're drinking whiskey we're listening to Slayer whatever it is we are miserable",
        "so the first thing that I recommend to do is take a second",
        "thing",
        "I'm aware of it I'm burnt out",
        "this isn't okay what's going on in my life right now is not okay",
        "that's it just stop there for a second right forget the dues forget the shoulds forget the whatever right the awareness of it and I can do something about it",
        "stop there I really stay away from the do's and the shoulds right away um one of the things that I always remind myself is as soon as you start getting in your head I should do this I should do that you should all over yourself okay do not all over yourself because you're you're down in your survival and we beat ourselves up I should be doing this I should be doing so much more or they should be doing this they should be doing that they should be doing this wherever your anger is wherever it's internal external your sadness it's",
        "there these these emotions are valid and they're real",
        "and the thing with emotions is we don't want to who wants to feel bad I don't want to feel bad and when we deny ourselves the ability to just sit there and be aware of it and say I feel bad right now",
        "that's hard sometimes to just sit there and sit with that we don't like to sit with things",
        "okay so I'm burnt out this is not okay my life is not okay right now I am not okay right now I am not happy I am lying here on the floor with 22 liter bottles of Mountain Dew five bags of Taco Bell and three bags of Arby's don't judge okay like",
        "and",
        "this isn't where I want to be now don't get me wrong there's been times where I'm like yes I've got all my bags of Taco Bells and I love Arby's and I am happy as a clam there's no judgment but I'm in a good place about it because it's a happy choice",
        "but where do you want to be okay this isn't really where I want to be right now where do I want to be what do I want to do what's going on so that awareness right",
        "I can be the Catalyst for change this this has to change okay I'm gonna make change happen don't go crazy don't start committing to things you can't commit to don't rush it there's anything I think when you rush it when you start like I'm gonna go to the gym and I'm gonna run five miles a day like I don't know but uh you know if you've ever guilty here started a diet plan and then failed it like 20 times um you just feel worse sometimes right like set yourself up for Success whatever that may be and it can be baby steps but set yourself up for success in that and begin to understand it and so this is why I was pushing the you know asking questions like okay why am I doing this what do I feel do I like this begin to understand it so as you go to understanding it then you begin to find the relief because you understand it okay this is when this person does this it's really going to make me mad I'm gonna go for a walk I'm gonna go do something differently I'm gonna I know that's gonna trigger me when they do this maybe I'm gonna go sit somewhere else maybe I'm just going to take a step away and I'm going to schedule time at that meeting every that we have every day really makes me frustrated so I'm going to schedule 15 minutes afterwards to take a break and not do back to backs I'm going to start coming up with the awareness of what happens I'm going to look for patterns and try to manage what frustrates me",
        "and then eventually I'm bringing it up to what we call that self-efficacy as I mentioned so that is the knowing of your worth knowing being able to anticipate being able to have that awareness because that's what the research shows is the best way to managing burnout learn yourself learn yourself learn new situations to be able to basically go Jujitsu on that stuff right like oh I see you coming Dodge it Dodge it got it move it back I mean it's just learning the situations now this doesn't mean that if you're in a bad situation that you can't just polish off your resume and say this is not working and we need to end this okay I mean you know your your life you know yourself you know your world but like any relationship you have a relationship with your job you have a relationship with your family you had a relationship with the people in your life and in your life you do have experience assessing the relationships",
        "is this relationship worth it to me am I getting what I need from it should I be in this relationship your relationship with your job is the same thing it takes work it takes communication it takes understanding it takes change",
        "so some of the quick advice and tips the quick and dirty ones knowing your limits and your goals what are your goals what do you want to be what does happiness look like for you what do you want from your job you may have big overall career paths that have nothing to do with the job itself or your company but if you don't know what it looks like how will you know if you're there so just something to think about what do you want what is it what does it look like so I know when I am overextending myself and I'm trying to get approval and I'm like well what does it look like you know if I if I'm thinking like oh I'm gonna get fired if I don't answer this text message that comes in at nine o'clock it's like wait a minute is that really true what does it look like to be good at my job am I just letting the anxiety get the best of me possibly",
        "ask for help now this is a this is a big one because a lot of what I've told you that I'm up here and I'm like oh just go ask yourself these questions yeah a lot of this does benefit from professional help okay either through coaches and talk about that stuff through professional help coaches ask for help okay you can benefit from that from",
        "working that through from helping with that awareness know your triggers again know your triggers externally and internally sometimes we are our own worst critics that we criticize ourselves know your inner critic don't just shut up if you have to right like be able to know like I'm doing that thing right now please stop doing that thing right like being able to be able to Traverse the paths and the situations setting the expectations about what's being asked of you and I love this this idea of this 42 role right that 42 of your day should be sent resting and doing something stress relieving",
        "I don't know who came up with that exact number I mean I do and not personally but in terms of like that's what research shows but I don't know anybody that actually bends 42 percent of their day just taking care of themselves in self-care but I love that idea right like you know and sometimes but look at that and I'm like wait a minute okay 42 let me do the numbers where am I at right I am not even close to 42 like I wake up in the morning and I get my kids to school I go to work I go pick up my kids I get home and then I have two hours a day and I play some video games yeah which is fun it's not myself I wouldn't call that self-care that's more like",
        "I'm just vegging out I'm decompressing kind of self-care but uh to bring it to does it energize me that's a tricky one I love my video games fun",
        "but that's more of like I just need to like chill out for a minute there's a couple of things and I'm still on the the Quest for this but like what's something that I that gives me satisfaction that makes me feel like yes this makes me feel awesome when I do this thing I win at life right like should we have that I'm struggling to find that still there's a couple of things but um because sometimes we don't find our self-worth from work",
        "and when I started my career path long time ago it was well if we're going to spend so much time at work I want to learn about Employee Engagement and all these things because we're going to spend that much time at work we should love what we're doing we should feel validated by it we're putting all this time and all this effort we spend more time at work than we do anywhere else then we should love it been a long time ago and I was very naive but I still can't believe that I do I do",
        "but if you can't find that from work if you're not in an opportunity for that if by the nature of the security industry by the nature of the work environment that you're in whatever it may be but is there something that energizes you where you can say you know what this is my job this is the situation I need to put a little fence around that and say I'm going to do my work I'm going to leave at the end of the day and then I'm going to go do my hobby and that makes me feel awesome or I'm gonna go hang out with my friends or I'm gonna go be with my family what you know whatever it is what energizes you and bringing that back to what do you want and celebrate it take pleasure in the small things",
        "your job is important it is you are important",
        "but find yourself in your life",
        "your work doesn't have to Define you it doesn't have to Define your happiness and as cliche as it sounds and cliche and the you know find your happiness and defend it and you know I I like I said when I started I would love to have some magic solution for you that says this is what you do if you go do these fine things this will reduce your burnout and everybody leaves and comes back and I see you next year and you're like hi Stacy I'm really happy now and I'm not at all burnt out that would be awesome I would love that um sorry I'm not here to tell you that part but it is there that I can tell you that I can tell you that I believe that every single one of you can walk out of this room do the work and find the happiness and protect it in the way that you choose that I do believe and I'm very happy to go and discuss that with you if you would like in the session following after this because I know we only have a couple of minutes which doesn't leave much time for Q a or anything but I'm more than happy to discuss that as well after the conference itself bringing us just to the last time of resources and tools",
        "um these are all tools that can help you actually even just applying some of what I've talked about today in terms of professional therapist",
        "that will always in my opinion be your best bet I mean this is what they do they are trained to help you go through and pull on those threads and ask you those questions and say what makes you happy and if nothing else it's like a whole hour just to talk about the problems that are in your life and help you figure it out and now with teletherapy",
        "um that help make things easier because um you don't have to leave your house I like that I don't want to leave my house um life coach physical personal trainer self-care code I mean all of these all of these things there are opportunities there are resources that can help you but um so again tying it back",
        "it can happen there are ways to reduce burnout there are situations again I do have compatible compassion and empathy of you're putting a lot into your work I think if you're here in this room chances are you're in pain you're feeling the frustrations you're not getting what you are putting into your work environment",
        "you're tired you're angry you are a wealth of emotions right now",
        "from your burnout and you don't have to be you shouldn't be you shouldn't be you don't deserve to be",
        "and so I hope if anything as you walk away from this talk that that's something that you can sit with that you don't deserve to be burnt out but that each and every single one of you and whatever it is can find a way to to not be whatever the choices are but but first just to even sit with that and say I don't need to be okay let's start with that and then decide what you want to do and where you can go from there",
        "but thank you [Applause]",
        "[Music]",
        "[Music]"
    ],
    "zGorOeQS5C8": [
        "[Music]",
        "now it's my pleasure to walk into Stage Tom Hegel and Jax",
        "all right",
        "all right hello hello um thanks for showing up everybody thank you for coming to hang out my name is Juanito Jags is fine uh this is my boy Tom Hagel we're over at Sentinel labs in Sentinel one of",
        "McCarran Airport Fame today we're going",
        "to talk about a threat actor we call a modified elephant it's actually",
        "a pretty somber story in a lot of ways we're just trying to kind of highlight some of the human costs that goes into some of these operations that you don't usually hear about right it's all malware and fishing and you know we talk about infosec but there is very much a human cost Associated to some of these things and I you know we're gonna try to delve into some of that so this all kicks off for us with some",
        "stories and work unrelated to modified elephant there was a story on Vice by",
        "Andrea fiscutan who's a fantastic journalist out of Romania where",
        "she reports on this Turkish journalist Maris balivan who was essentially framed",
        "terrorism and the guys over at Arsenal",
        "Consulting",
        "amazing IR company",
        "they had done this pro bono work for the journalists and figured out that malware had been used to implant evidence um on his machine and then you know he was thrown in prison",
        "so we followed up with the Arsenal report at the time and of course the IR work itself is solid like we don't need to do the digital forensic stuff like those guys have it done they they did it right but coming from the threat intelligence side it's actually much more curious to know",
        "are there more operations by these people if they're willing to do this kind of like really messed up stuff are they um what else have they done you know chances are it's not just somebody who decided to get into hacking for just that one egregious act",
        "um so from the threat Intel side it becomes really important for us to sort of try to track some of the actors and try to understand what else they're up to um interestingly you know after all this uh you know all these folks got acquitted but uh it took years for them to actually get out of jail and frankly I'm pretty sure Varys is back in prison for some totally unrelated thing now but as we kept tracking it we came on you know we came across this actor we called egomaniac it's a reference to uh the",
        "letters egm which appear in a lot of the new malware that we found sort of like a previously unrelated",
        "um malware toolkit that we were able to connect based on like code similarity and a few other things it gets really interesting because as we were digging into this actor like if you saw Kim Sutter this morning I mean she's a giant um in our space particularly because like she's not just regurgitating you know whatever some company sends her or some random report like she's as close as we get to an investigative journalist in in cyber",
        "um and when she started to dig into it we were talking about the report what she finds is actually a ton of from the attributory threads that we pulled based on egomaniac what she finds is actually connections to um sort of reinforcing the connections that we found to the Turkish police uh particularly things in the hacking Team league and so on so we have this sort of trend of like we're seeing law enforcement abusing malware to do obviously egregious things when we finish this investigation we get a ping from the guys at Arsenal uh Mark Spencer you know the IR folks uh basically saying hey if you care about that case like you should check out what's happening in India we're working something else yeah so at that point",
        "we begin to look into the secondary case and completely different a different",
        "type of story but it strikes the same chord to us where we have a large group of activists that are potentially being",
        "targeted uh with evidence that was planted and they're being used to they're using that to throw them in jail for terrorism charges and so forth and and this is one of the first articles from The Washington Post that began to highlight this activity and as that",
        "quickly evolved uh more activity began",
        "to be found from our friends at Arsenal and we start to get an idea of there's actually it's not just a handful of active activists but there's potentially the possibility that there's a larger campaign at play here that you know as threat researchers really sticks out to us and we really want to begin diving in so thankfully we are uh you know blessed by",
        "the Arsenal team that is able to release the forensic details publicly and",
        "there's a lot of stuff that people have written on it and there's deep dives into particular pieces but you're actually able to go right to the website and download the actual forensic reports that are being used to help the defense team for these these activists have been arrested and the the cases centered around What's called the bk-16 we'll talk more about the individuals here in a second but ultimately we have four reports that came from Arsenal that detailed the forensic evidence of malware that was associated with potential documents that were planted and those documents then being used as evidence in cases against these individuals so in these documents we're able to take a look at malware samples those malware samples can then lead to new sets of infrastructure and as we begin to Deep dive into this through a set of infrastructure analysis taking a look at all the samples and building our case we're actually able to lead to what we call the modified elephant apt this is a combination of",
        "the entire profile of this actor that we see hitting these bk16 activists and",
        "then leading to a larger campaign that spans about 10 years pretty shocking considering the the case against these individuals where this malware that is associated with what we call modified elephants is being used in cases that is uh you know leading to forensic evidence of documents that are fabricated so there's a a very",
        "particular uh",
        "I guess threats in our case where the the actor is really just uh I don't know what would you say like entirely unscrupulous exactly like um keep in mind like we're obviously we work a lot of Apt cases it's not that we are staunchly against intelligence collection or Espionage or whatever like we understand that that's sort of a part of things and people have been talking about lawful intercept malware forever but it turns out that if you give capabilities like this with no controls to law enforcement they don't just use it for collection yeah yeah it was an interesting set of uh infrastructure as well you know we have about 10 years of activity that we're able to look at and thanks to the the Insight that Arsenal gave us and then widening the intelligence into this actor based on our own Telemetry or in our own analysis we're able to get a really interesting historical understanding of how this actor has evolved over time so to take a look at what they do as an adversary we're going to kind of highlight some particular pieces to the how they attack these individuals and what they've done historically guys hold on to your this is not about to blow you away with malware which is probably the worst part like yeah the the worst part about this is the Simplicity and the uh the Simplicity and the unsophistic unsophistication of it all leading to some of the most horrific results in my opinion but what you're seeing here is one of the phishing emails from 2013 that uh is associated with modified elephants and this is just one of many many examples of how they have attempted initial access into these uh these activist machines and this is a brutal example of the Simplicity here where they are literally emailing an executable file trying to get them to open it they've evolved over time and this is a timeline of what we've seen them do over the last decade evolving their their particularly their fishing techniques so we'll talk about other techniques but looking at fishing alone you know early days they were doing just what I just showed you emailing straight up executables emailing executables with Dot doc.exe",
        "and then eventually getting to",
        "exploit documents malicious documents that are a bit more fabricated and are",
        "going to compromise a vulnerability on the machine to ultimately lead to infecting it they go through a couple different iterations of what they do overall but nothing shocking I would say",
        "that's the worst part so um just to kind of really highlight sort of what we mean by this kind of digital entrapment um what the Arsenal reports show is not",
        "that a machine has malware and has incriminating documents it's literally being able to track these netwire rat sessions attacker sessions where they're",
        "connected to the malware in these machines dropping documents into volumes folders",
        "that the",
        "owners of the machines have never accessed the documents are created with a version of Microsoft Word that they've never had like the different version of it um they know as far as the incident reports",
        "um could tell they'd never been opened by anybody there so like it's literally like attacker session just drop docs over time and Bolt",
        "so you can see here a list of like a lot of the letters and look I I would I would love to come here and tell you like this is the most sophisticated apt we've ever seen and they do really bad stuff the banality of this is terrible like netwire rad costs like a hundred bucks and you could probably just get it for free at this point um but intent is a very different situation yeah and one interesting piece here that's uh Arsenal actually discovered during the forensic reports was in many of these cases we're seeing this this actor operating on multiple",
        "victim machines planting similar evidence within 15 minute time span and these targets are unrelated individuals so it's a very uh interesting campaign but uh we'll talk about different malware here in a second but yeah netwire is one of them so actually when we talk about the evidence I mean you can see this is sort of the main um the main document there's about 10 that they really the prosecution focuses on but the main document is this uh plain stated uh plot to assassinate",
        "Prime Minister Modi uh about as plainly as you can think of right like we're gonna need some m4s and like 400 000 rounds and we you know we're going to Target his Road shows for an effective stress like it's as plain spoken like you know let's let's get to killing the PM um the other documents or similarly this idea that like they're sort of fomentic domestic chaos like keep in mind look whatever the politics are going on there whatever the different groups live that it's a local context and I'm sure that you can have different opinions about it but at the end of the day like yeah these guys are activists but",
        "taking you're trying to sort of frame the idea of this sort of uh 15-16 individuals as this destabilizing Force",
        "for the entire country um in a series of what like 10 15 letters that's what the prosecution focuses on but in the most plain spoken sort of way so what makes it more interesting for us is this which is one again one of the top 10 documents is the last one planted it's literally 11 days before the search and seizure so when you start talking about some semblance of attribution there's no point to putting incriminating documents in a machine unless somebody shows up to check it so start to kind of form a very simple picture as we go forward so of course after that these 16 individuals get thrown in jail as if that's not bad enough now with covet and everything uh Stan Swami uh who was a Jesuit human rights activist actually passed away in jail so",
        "yes it's all malware and fishing and whatnot but for us there's a very real human cost and a very clear implication to what's going on here so some of the uh the planted evidence that we showed you in some of the phishing emails will or the uh the malware and timelines we get a lot is coming from one one Target in particular is Rona Wilson and the Arsenal reports tend to focus on him a lot as well but this this individual sticks out to us because of the amount of activity and",
        "the persistent nature of these attacks against this individual over almost a decade it was shocking even from somebody that we researched top tier apts all day it was shocking to see the persistent level of activity coming from these actors and looking at all the data for this individual we get a very unique picture of the motivations and the different",
        "Nexus of actors coming out of India that are targeting this individual so we have modified elephant obviously that activity with Rona Wilson this individual you know it goes back 2012 plus there's activity that is kind of fuzzy before 2012 but if you're familiar with the Indian threat landscape that's kind of the a big shift in that in that Arena so it kind of started there and then you know later on we begin to see his email accounts being compromised 2018 which we'll talk more about that in a bit and that all ties back to what we call modified elephant however there's a complete other subset of activity that we see targeting this individual during our analysis that links to another one another apt I'm very familiar with is Sidewinder and uh and then we have other activity that links to what Arsenal found is a iPhone that was infected from Ron Wilson by Pegasus you know everyone knows the mobile spyware group on the private sector side",
        "so one other really interesting thing here talking about the links between modified elephants and all these other this other uh relation of Indian apt",
        "activity is the early early side of what we call modified elephant it actually links through infrastructure overlap with the almighty operation hangover report and if you're not familiar with this operation hangover is kind of the turning point for public knowledge on Indian apt activity uh that",
        "this this report wasn't just it was written in 2013 but it reports on activity that's that span years prior and it was a big shift because this actually highlighted the relations between Indian apt activity and what we know as potential contractors one in particular that a lot of this activity stems from going into the future is the app and Security Group out of India and that group in particular you can kind of think of them as the tree trunk to all all of today's threat activity coming out of India everything one way or another tends to lead back to them in the case of modified elephant that turned out true through the use of infrastructure that was previously reported in operation hangover",
        "so Sidewinder I mentioned I'm intimately familiar with them they uh they're an Espionage group that tends to focus throughout Asia and I reported on them last year and my report here is prior to any insight into modify elephants at that point and that report highlights activity that was them targeting or government organizations and private businesses for Espionage purposes uh throughout Asia so they're well reported the industry is well well aware of them but they are kind of more sophisticated in many ways than what you would think modified elephant is um so there's an interesting relationship between modified elephant activity and Sidewinder are they potentially coming from the same reporting organization",
        "assigned to Target this particular individual that's where the mystery kind of begins it's sort of interesting for us like I know sort of all the names don't necessarily mean a whole lot to folks are not in the threat until game but like what makes this interesting to us is you have this activity that seems to be very related to law enforcement a modified elephant but this Nexus is revolving around Rona Wilson also brings in another apt that has been known for a long time as doing the kind of like National Security work that you would expect sort of like Espionage on you know foreign countries things that are sort of important to the state so to have it all kind of revolve around this person entails a different level of tasking from a larger organization than just having one sort of Rogue set of actors that have decided to Target him",
        "so that relationship can actually be highlighted in many interesting ways where there's probably a deeper",
        "you know bond between what we see as modified elephant and Sidewinder overall being that we're lucky enough to have insight into almost a decade of activity from modified elephants with sprinkles of these other apts we can get pretty interesting timeline here of an overlap of infrastructure being used to Target modified elephants typical targets these activists and so forth so what you're seeing here are the the green domains there that's infrastructure that's been attributed to Sidewinder activity and then the blue side we see the infrastructure that we associate with modified elephant and when you compare them against what's being used to Target these individuals at the same time we begin to see a really interesting overlap of kind of tasking in many ways where there's passing back and forth as you can see modified elephant is much more persistent using them much longer while Sidewinder was more of a one and one and burn kind of case let's also be clear that modified elephant is not a subtle attacker yes like would someone like Sidewinder who's doing sort of proper Espionage you might get some sort of of careful curtail and we'll send you a fishing email we'll wait we'll see what happens modified element we'll just keep hitting the same Target over and over like why don't you open this freaking attachment over it's just it's not subtle it's not amazing yeah it's just persistent yeah many times within an hour shocking using the same samples over and over and over reforwarding the fishing emails that failed months ago interesting",
        "so talking about the Pegasus overlap which I mentioned briefly I want to kind of explain a little bit around how that kind of ties in here because it's kind of confusing in many ways so we want to make sure you have a good understanding of this but from our perspective we're not seeing a direct link between modified elephant and NSO but that link is done through",
        "what we see coming from the forensic reports so it's kind of timeline it here or kind of show you the workflow we have a hard drive that's recovered uh in the forensic analysis is done on that and then there's an iTunes backup of one of Rona Wilson's iPhones 2017-2018 and that iPhone 6s has",
        "indicators that it's infected with Pegasus and that was all identified by by Arsenal so major kudos to them but again this really shows the the overarching tasking being done from The Entity leading these actors so is it the same organization that's assigning Sidewinder modified elephant and then also making use of Pegasus to Target these individuals kind of a spray and prayer approach getting as many options as they can to infect these people and track them it's also important to note that since we don't know who the operator is for Pegasus in this particular case there is the question of whether it is modified elephant also having access to",
        "Pegasus because we see them attempting to do um to use mobile malware at some point sort of again crappy Android malware",
        "um and you know that didn't seem to go too well at the time but after how many years of successful operations do you start to get a greater level of support or is there just a completely separate entity that gets to Pegasus and also cares about this target",
        "on that note this is kind of a timeline of the techniques that we see associated with modified elephants and then you know a little bit of a highlight of where that Pegasus side kind of starts to play here so on the far left hand side early years 2012 and Beyond we see primarily the initial infection Vector is leaning towards phishing emails and that the technique in phishing emails ultimately has varied throughout the years but in the beginning they were making use of dark Comet rat to deploy onto these victim machines for their collection and you know typical remote access Trojan activities and then they ultimately ended up relying on net wire almost completely from a couple years afterwards but there were a few cases in there where we saw interesting attempts at trying to deliver probably the most what would you say the most poorly done keylogger and all it's like a Visual Basic garbage key logger yeah um and like when I say garbage it's not just the VB aspect of it but it also like it's it's using email addresses to like exfiltrate the data like they're sort of like emailing it to these accounts uh which ends up being kind of the Crux of some interesting attribution details that we're sort of going to go into in a little bit yeah those those emails that were being used in the key loggers were actually an interesting pivot point for us on collecting and clustering the entire modified elephant uh threat actor because those emails were used across many samples and uh again attribution side as well the interesting part is later on in their lifespan going into today we obviously see the mobile side with the the Pegasus and that's where we think they tend they are tending to lean nowadays but understanding of that is a little bit more fuzzy as we go into modern days of who they're potentially targeting but then we have the email takeover side which gets in a little bit more confusing area so we have during these campaigns activity that is associated",
        "with these individuals having their email accounts compromised through the public uh free email Services Gmail Yahoo and so forth and and those accounts ultimately being used to do",
        "more malicious activity which we'll talk about here in a second so this is where things get even more interesting right so um Andy Greenberg over at wired hits us up when we hit accepted for this talk um and he's like hey man the story sounds fascinated would love to follow up um we started talking we sort of started going through uh some of we what we had found and some of what we had found that we couldn't necessarily talk about in the report um because you know there's a fair amount of data sharing that happens in the industry as we try to go after bad guys and um you know you have to respect TLP you have to respect you know where data is coming from and so on um and we were under certain restrictions of what we could and couldn't publish but there was a sort of interesting uh set of data there uh it wasn't ours but it came from",
        "a source that will remain nameless because of their own request but someone incredibly Brave incredibly brilliant who was willing to go the extra mile uh just to do what they consider to be the right thing um this person actually spoke directly um with Andy it turns out this is not like a whistleblower situation it turns out that if you do appeal uh to lawyers that have a conscience at a service provider they're not all soulless and you do get some folks who are concerned about human rights are concerned about sort of doing the right thing and they were actually you know the way that our friend uh put it is that they're tired of you know watching burn and that's a situation that we tend to be in a lot um in threat intelligence where you know terrible things are happening and you know you just kind of watch it go down because you don't have access to doing more so in this particular case uh the company was willing to provide the data and it makes for a much more interesting story yeah so to understand a little bit the wired article goes into great detail here and this is to try and summarize kind of how this link is done and and what you'll find that wired article is linking modified elephants ultimately to a",
        "particular police individ or Pune of",
        "India Police individual and the process of how we got that data obviously is we want to keep it or who we got that from is a little bit more sensitive however that data can then be used and verified to link make this link and so this is kind of a summary of how wired and Andy was able to use it other individuals in particular uh you know we have John Scott Railton from AMC International and uh",
        "citizen lab sorry jsr from citizen lab and stations from niso's just to kind of like look attribution is complicated attribution is hard I've written on it before I'm not sort of sidestepping that but in the process of Andy doing his homework uh they handed the indicators",
        "alone with no context to two different researchers at totally different companies without telling them what this is about and said hey who can you link this with how has this been used can you sort of verify and this is what they came up with it's not sort of what we alone uh were pushing so focusing on the victims first to kind of summarize this what we have is during these email account compromises we have a couple interesting things happening first is when modified elephants compromises",
        "these email accounts we see a recovery email address being added to those accounts and then we also begin to see",
        "a particular phone number being added to these accounts as well ultimately this kind of signal I would say signals the our expectation of modify elephant historically and the lack of operational security the lack of um savviness exactly",
        "it was a pretty egregious sort of mistake in a variety of ways yeah but presumably they wanted to make sure that they could just get access again if they ever you know lost access so in this case you know we have three accounts that are compromised and then that ultimately leads to those accounts being accessed through the same infrastructure that we're seeing modify elephants associated with through their attacks and their long-term C2 setup and and so forth and then those accounts that are already compromised are then later being used to fish other individuals that are of targets to modified elephants as well and a fascinating approach to an attack technique is pretending to be this these other individuals that may have more trust or may have some relevance to additional targets and that ultimately leads to additional targeting throughout this set of the bk16 activists in India",
        "that were we referenced at the beginning so we have the victims that are all compromised at this point but what about the attacker how does modified elephant link to the Pune police of India so we have the email address and thanks to those two individuals from from the wired article we had the email address that was associated with through leaked databases in particular we have the Truecaller database the the app that's used to identify individuals that you can install on your phone the India version of that was leaked a while back that particular email address is associated with the the same individual that his name's actually using the email address so we have some more confidence there that it is actually his and then we have that phone number also linking to archived websites actual police websites that reference this is the individual and this is his personal email or his email address uh on an official government website so the case was pretty solid at that point and that alone was shocking however jsr from citizen lab took it a step further John Scott Railton in his life his simple genius decided to just put the phone number in WhatsApp and it turns out that this up to the time of our investigation this same person is still using the same phone number with its you know this picture his name everything sort of put in there yeah pretty shocking see at least",
        "so the the part where this kind of gets more concerning is fine we can you know we can say this is like this idiotic not very good but you know very malicious",
        "threat actors out there but like hey you know if you don't go clicking on phishing emails maybe you're not so bad but in reality what we're seeing is an evolution of their tactics um in a way that's very concerning because you have you already have sort of this NSO Pegasus tie-in which we all know the visibility into what's happening with Pegasus is horrible like you take it up with apple but it's absolutely ridiculous that like all we get is just um whack-a-mole with exploits and there's no visibility into what's happening with the actual malware nobody knows if you know any of our phones are infected I don't know what to tell you like we can all sit and stare at this thing and I don't know what we're going to do about it reboot it um yeah just reboot it uh and then at the same time what we also get as we talk to some of these service providers is an understanding that it's not that they've stopped fishing it's that they're now hijacking sessions and doing things directly on cloud accounts for the for these folks and a much wider set of folks and that's part of the biggest concern for us like look Arsenal did a fantastic job pro bono those you know those guys are amazing um and we hope that it continues to help the defense team but these actors have been around for 10 years what else have they done what other people have ended up in prison over like digital evidence that nobody knew had just been placed on their machines so the idea that it's just this one case it only begins to scratch the surface there are more victims there are more people being targeted there are more people being surveilled um and there's a lot of suspicious stuff happening around several cases not just vk16 so our biggest concern now is yes it was easier to track them earlier on what do you do when they're just operating in the cloud like a lot of these things start to put the onus on the service providers and the truth is that while there are some that are amazing and willing to do the right thing there's a lot that don't seem to really give a damn so",
        "as a part of that there's actually a lot of missing forensic artifacts if you go pay attention to the Arsenal reporting they're working on the official forensic images that are being used in court that law enforcement provided they've only provided them for a small subset of the the folks that are in jail and there's still a lot missing we God knows what else you would find in some of these things but at this time it's not they haven't been provided so far we hope that the legal defense team gets you know gets their hands on these things and we can continue to you know sort of bolster our understanding but if we start to zoom out a little bit I think what we want to discuss is it's not just this very particular case in India with these very particular folks in this very particular threat actor but rather the issues that come when it comes to digital evidence this is something that nobody really wants to talk about right like it's hard enough to get the right evidence and make a case and take someone to court and then hope that you can prosecute them assuming that they've done something wrong",
        "but keep in mind that in the last two cases the only thing that helps these folks",
        "is a company out of Boston with a very good heart willing to do pro bono work for them there is no aspect of that of these different court systems wherein introducing digital evidence entails some kind of independent verification and actually having to go through and",
        "supervise the Integrity of devices that's the other part that like I really want to emphasize when we have conversations about lawful intercept malware what is what does it mean to find evidence to present evidence to have forensic chain of custody when a device has been compromised and you know it's been compromised because you compromised it so there are some questions there where like look maybe we're in Western countries and we have a you know we're a little more comfortable with our court systems and our government depending on how you want to take that but this is an issue worldwide and as",
        "you can see even when it's forensically proven that doesn't mean that you get to go home",
        "talking about the digital evidence part and again sort of in a broader perspective looking at the situation like what happened in Turkey more recently there's been these all these ergonacon trials it's a really complicated story about sort of internal Turkish politics but one part of it centers around a messaging app called bylock and",
        "what makes the case sort of interesting is they they crack down on this Smartphone messaging app saying that like it's being used to plan a coup and that it's like for people who are against the government whatever so they cracked out on the app and then use the fact that like if you have this app then you're plotting against the government you're going to jail and they throw I think several thousand people in prison where it all goes wrong is it turns out that they base that on like has your phone ever contacted these IPS and the IPS are not necessarily that specific",
        "and more importantly there's like certain ads that would have meant that your phone totally unsuspecting had touched those IPS at some point So eventually you get a bunch of people acquitted but like",
        "it's absolutely ridiculous that this is an evidentiary standard anywhere that your phone ever touched an IP period like it's ridiculous but some of these are really patently bad cases what is flying sort of below the threshold of what calls these things into question the real Point here is like this isn't sort of this free willing freewheeling like hipified idea of like no one should use malware no government should hack anyone but actually we want to draw a distinction between what does it mean for you to use malware for intelligence collection in the context of intelligence organizations versus doing",
        "it for law enforcement and I think that's a very important question for us to figure out because the the two are not the same they don't have the same evidentiary standards they don't have the same metrics for Success it's why talking to I don't know FBI and NSA are very different experiences right so one of them is trying to understand things the other one has to bolster doj and making cases you very different motivations so what we want to start to do is at least push this notion of like what is the standard for lawful intercept malware when it's being done for law enforcement and why should that have I don't know upload capabilities who oversees the use of these things by police as opposed to intelligence agencies and why isn't there more oversight I mean technically if it's for law enforcement it isn't necessarily",
        "quite under the same standards of secrecy as the intelligence Community I know that that's an oversimplification in some cases but",
        "at the end of the day the thing to highlight and it's a it's something that touches close to home is that the real issue here is not malware it's actually the importance of social institutions you're talking about activists being targeted but more importantly the media is largely terrified to touch this topic because journalists have been getting thrown in prison as well the judges keep passing up the case because they don't want to be the ones ruling on it so if you can't if the courts are not going to be able to uphold any kind of standard and the journalists are not going to be able to uphold any kind of standard it does not matter that it has been forensically proven and put in plain sight and verified by multiple companies that",
        "these people did nothing more than just cross the wrong folks",
        "so with that I think we might have actually kept a minute if people want to ask questions but absolutely I can't thank our source",
        "enough I can't thank Arsenal Consulting enough these people are doing God's work I know before the question even comes up a lot of people keep asking us who this cop is we're not just trying to be spicy and withholding that we think it's really important that the legal defense team gets to get that data directly from the service providers and use it in court to try to help these individuals rather than us have a particularly spicier talk yeah so with that thank you",
        "so much thank you for coming and",
        "foreign",
        "[Music]"
    ],
    "PBeIW2PDFVk": [
        "[Music]",
        "hello so very welcome to my talk I'm Chung or we are also three team members who will not be presenting here who is Antonio Kim and Dave",
        "so a little bit about myself or material handle is on the screen or I'm currently a undergraduate computer science student at Purdue University in the U.S or um I'm from Vietnam currently I'm focusing on Mac OS and iOS research or I",
        "used to blog about CTF write-ups or challenge or what I have seized doing from doing some of them since then along uh since quite a long so today agenda first uh we'll discuss the current state of iOS research then we can look at our design goal in building an emulator then we'll talk about how how we implemented it and also the ways that we can use to remove for research then we'll talk about its future and Route Maps so let's Dive Right In",
        "so we need to talk about the current way we are doing iOS research uh the most common way is to using to use real device and you also have a few options for that or first you can use a something called security research device by Apple or",
        "there is a real device however the main problem with this is that you are you have to cite ndis and or your obligated",
        "to report all your findings to Apple",
        "uh other options is to use internal device so this device are mostly stolen or and because it's only limited",
        "internal use only so you have some legal issues there so it might be not be preferable for most of researchers and also these devices are really rare because they have to be leaked on the left is some of this device that on the rise is the cables that will you'll be using when to debug this device",
        "next you can use of the show to your broken device so these are device you can get from the store but you have to hack it first to in order to or to research it so it's pretty high it's already a high barrier to or to deal with",
        "however there are some reason Recent research with the Checkmate exploit which allows you to do debugging provided that you can build yourself a cables on like on the right on the light the pictures on the right this is this and set up by another researcher",
        "oh another option is for non-joboken device this device are a highly sandbox and",
        "pre-secure so it is really hard to and",
        "it's really hard to to work with it because you're only limited to the panic lock which is not interactive at all if you want to do kernel debugging and hacking or something like that you cannot you have can also use all maps and with all of these problems posed by real device or we try to solve some of them using emulation so some options for",
        "animations well you have the third party commercial LS emulator these are pretty popular or pretty state-of-the-art or",
        "really cool but however they are pretty expensive so I never I never try it personally or",
        "and if you want to dive into a smaller loadable stuff such as iboot or sap or is also limited to on premises only so unless you are a big company or a government agency you",
        "probably cannot get access to it",
        "or you can use also use VM Apple which is a Mac VM provided by Apple or this is also Limited in customization but somehow some people have managed to do some really cool work with it",
        "and you can also use other security or  report so this is presented a Blackheart Europe like in 2019 but",
        "however the problem is that they are they only support like two iOS version only so if that's pretty limited or they also have very limited Hardware support and it also have uh it's also really hard to maintain because of the code quality uh and it's also abundant by now",
        "so so we try to build an emulator that can solve as much of the problems that posed by these methods are possible",
        "so let's now let's talk about is design goal so we want to we want the free to use our research or emulator so is US",
        "research fairly as possible and by that we mean we want to have a wide range of iOS version support and we want also want to debug the kernel easily and we also want to use it for fuzzing so",
        "with these disciples we have come up",
        "with some very notable features first uh the amateur model actual Hardware so it's it it tries to we have as close as to the real Hardware as possible or it supports a right range of iOS version ranging from IOS 14 to iOS 16 which is currently still in beta or we also support circularm and I would stop but that is pretty experimental brand new or you can also debug the kernel with it or very easily or it also helps USB support so you can install real iOS or it also supports some custom",
        "CPU features by Apple and the best part is that we are open source so you can uh you can check out our repo which is in the QR on the side",
        "so how did we do that well there are a lot of challenges and we will walk into what walks you to the general ideas",
        "so how does the new device get model well first we will look at for the information in the device tree then we'll build a stop model so the model that does nothing but basically locks every access by the like every injection from the CPU and we and with these tools we can do Dynamic and static reverse engineering to see how does the hardware behave how does it works and then we can once we know the protocol we can write emulation code to emulate the need response and then we'll have a device that is emulated",
        "so let's walk through some steps first the device tree the revised three can be found in our stream firmware which you can download from Apple or the best thing about it is that it contains a rich amount of peripherals information or and is used heavily by the iOS kernel to merge drivers so let's have a look at the example entry so on the screen is on the device re-entry of the gpio controller so on",
        "the left is the property name and on the right is values let's have a look at some interesting ones so the arrows is currently pointing to the comparable or property so this the compiler probably is used to match drivers so it will look at the strings in the comparable property and then find the appropriate drivers to for the correct device and it will uh another interesting one is interrupt so this is basically an",
        "a list of interrupts that the device will use so in this case the G5 will use a hex or 83 to hex 89 interrupts",
        "or you also have the rack entry which is basically where the device is in the memory so basically it's mmio address",
        "and you also have the number the hash GPI opens which is shorted for a number of UPL pins this device have",
        "so with this information we can build a stop model so we map and dummy memory region into the memo address in the device tree then on each rise or each",
        "assessed by the CPU will lock them and then print the back choice or and with the battery is we can travel or travel through related code to see what what is the logic of the software what it is trying to do or something like that and we can also even try to drive the interrupt lines to see how those interrupts are processed so here is an example log from or for the display controller so I don't know you can you can see it but oh but we have a we have to offset the seafood is trying to the value and also the vector is PC so we can easily navigate to the iOS kernel code",
        "next is a really interesting CPU features or custom a very custom one by",
        "Apple so it's called SPO gxf or this is using",
        "both iOS kernel and also in user userline browser it's basically a custom privilege level created by Apple or so how how does this privilege level",
        "fits into the normal one you may ask well let's have a look at the normal previous level model so we have el3 to er0 the the higher or the higher number the more privilege it is so el0 is you the user display and er3 is the supervisor",
        "thank you",
        "so for gxm it basically creates a GL2",
        "and gl3 is largely from the normal one so or GL2 is",
        "guarded mode for el2 so it is more privileged compared to normal el3 el2 or",
        "so gxl is shorted for garden execution feature so you have a garden execution level to enter it you use the G enter instruction which is a non-style one or and you can use exit to exit from the god mode to normal mode",
        "so the difference between Goddard and normal mode is that God mode can have different permission so you can create pages that can only be written by God mode but cannot be modified by normal mode",
        "so here we how it's worked so on this on on screen is the normal page descriptor so this uh so this describes how a page this describes the permission of the page so is it is readable writable or executable so yeah so so the color bits are the ones that used to determine the permission however I could change the definition of this bit or and they change they convert into index so they match it into an index instead of passing it a permission itself and the index is used to look up on the permission resistor which is 64-bit and and you can have 16 permission index",
        "and each permission will have four bits which will describe the permission each",
        "page half so two bits for guarded mode and two bits for normal mode",
        "so permission bids on page level now becomes indexed for a system resistor",
        "so how it is used in iOS kernel well or apple has a thing called prosection layer or which is normally shorted for PPL or this contains seriously sensitive code or so you can have when you compare the size of God code and normal code you can see a large difference so for my",
        "comparison so show that there are more than 300 times smaller for garden code so which means that a series sensitive",
        "code has less attack surface or if you attack if you hacker when you hack it the normal mode you also need to hike PPL to in order to do more fancy exploration Primitives",
        "so you can jump from garden mode to normal mode but not the other way around",
        "the other way is being used is for jit so browsers tends to use jit to or speed up the execution process of JavaScript so what it does is compile JavaScript to native code so to do that it has it create pages that are both writable and executable",
        "however these are some problems or 4G",
        "page you constantly need to switch between this mode or for when you're compiling you need to switch to right mode and when you're executing you need to have it in execute mode so changing the permission generate takes a lot of or it's pretty slow or it takes a lot of work from the CPU so perform performance is integrated",
        "or so output design",
        "Expo to fix this problem to improve the",
        "speed of the jit compiler so let's have a look of the process of changing so this is an excerpt from the method that changed the right protection mode so this is a method that changed between read execute to write or read write and vice versa so on the left is the part for isoq mode and on the right is for the right mode so the difference between too fast is shown by the top arrows which are the values it are rendered from the different location so the first location will contain the values that will that will configure the page to execute mode and all right mode",
        "so the MSO here is the trick or if you when the CPU file the MSR instruction it will change the permission of the page that is splr configured",
        "so you can see there is no Cisco involved no shopping involved so it runs really fast",
        "so with this completed logic or we have",
        "to implement it in kumu to you know to ask support for it so how do we do that so first first thing first or you need to have to you need to decode more instructions which is the G enter and gxit or there's a custom instruction or you also have to rework the page table logic because the",
        "save will no longer understand the page permission the same way however we still have uh we still haven't figured everything out yet so and the Q moves tlb have some limitations so we still require a flushes until we flushes or which may serve without the fourth performance or when the permission are being changed",
        "or next let's talk about usb so why do you want why do you really want USB emulation you might ask well we can use it for restoring so restoring is a fancy way of like installing an operating system or for iOS device so when we",
        "restore an iOS device it's recording installing an iOS on the device or just say it's also really useful you can use it for networking for example like SSH and you can and you can also connect the device to xcode using USB",
        "however to implement USB there are some challenge where we Face the first problem is that our salary has USB drivers for synopsis controllers or if",
        "you never heard of them or they build Hardware IP or basically",
        "the controller however the data sheets are tends to be payable so you need to have a deal with the synopsis to you know in order to get uh a documentation on how the device works however there is the other way to around that or",
        "here on the screen is an excerpt from qmo code or so in the comments they are really interesting lives so they link a documentation or for the device which interestingly enough is of is freely available to the public or so when synopsis don't give it to you let the other Hardware manufacturer give it to you because or hardware for example or even Intel when they make some boards which is a Highway IP they release documentation for it which the US the USB section for it or is basically a copy from the synopsis one",
        "okay so the second problem is the actual iPhone use newer stenosis controller so",
        "or documentation for this for the new controller tend to be Sparrow sponsor so you have less of them or a few of them so it's not as much as available compared to all controller we used to walk around this by forcing iOS to load drivers for the old controller however luckily we are able to implement the new controller by now",
        "so that's for the controller or the USB also have the the USB bus that we need to implement it so if you don't know you still have two sides or one is the whole side which is essentially your PC and the other side is the draw the the thing you connect to your PC which can be your flash drive or your iPhone or kumu does not support device mode or because it's used it is built to Emirate emulate a PC so we have to enter the support for that oh so how do we do that",
        "well we connect the iOS VM to a USB host to Unix pipe or on the screen is uh the",
        "simple diagram of how it works so on the top level you have the software running the software will talk to the controller which can be the synopsis Drive synthesis USB or the esci which is the",
        "USD 2.0 controller and this controller",
        "can talk or this controller are emulated in kumu so and this controller will talk",
        "to a physical layer which will implemented it through some proxy device and this device will talk to each other through sockets or units of pets",
        "so how can we use it for research so well let me show you",
        "so okay",
        "so in the first demo or we will try to restore iOS so let me so here we are starting on on iOS VM on the left is",
        "the iOS and on the right is the Linux VM which acts as a host which runs I device restore on there and the restore has started you can see the protocol is creeping up uh with speeding up the process here because restore tends to take a few more few more minutes",
        "there we go or",
        "the restore complete successfully or you",
        "can see the it says or restore finish and all the device will restart or we override the restart Behavior to make a stop so it makes it easier for recording so the process took 11 minutes",
        "okay next I will I will run it or I will do a lively mode just",
        "so here we will start an iOS VM or we are I am running in snapshot mode so it does not persist any change",
        "where's my mouse",
        "give a moment for to put up",
        "oh wait what's wrong with this it didn't show anything",
        "give a moment for the USB to initialize",
        "there we go so",
        "um I'm also on the so the lock screen is the Linux VM so you can use OS USB it shows the iOS device it's on USB bus or now we will use ifoxy or so this the tool where so to so this tool will forward basically forward the traffic from our local port or 222 and full",
        "forward is 2.44 on the iOS device over USB so let's do an SSH here",
        "and the first and the first word is Alpine everyone knows that",
        "will we are a root shell inside the iOS VM I can show it to you using your name you can see it is running I send you and the model is currently emitting is the iPhone 12 or iPhone 11. oh",
        "you can also run software verse to see the version is currently running and we can also run other commands to explore the iOS device let's start with simple or I will try OS on the root you can see there are some uh files there you can use hashtalk to list all the process planning so there are these are real service that runs on real device so you have running board you have installed you have chronotas you have launch D basically like your actual device",
        "foreign",
        "so in the previous demo we explore the we look at the restore process of iOS or we even got the best shell on an installer iOS or device and we also even",
        "Associated to the VM using over USB",
        "next thing uh",
        "we do have iBook support or so if you don't know or I would install iPhone Bluetooth is used for Recovery or and or",
        "to load the kernel so why do you want to emulate iboot because I would is in the circle route chain so if you can hike I would or somehow or it will get uh it will give you a lot of power over the kernel the software the device is running so because it is a part of the circle boot chain and one more reason is uh we use iBook to verify our model because I would tend to Hardware in a really peculiar way so we will wait so",
        "if you can run I would then we have more chance that our model is emulate the hardware correctly and our support is pretty experimental so it's not really ready for production and it doesn't or hasn't been published yet but I will give you a demo right now",
        "so here we go or we start off iboot or you can see the boot Banner on the top left on the right is the recovery screen that you will generally see",
        "or open up the Linux VM we can use all the eye recovery to query information about the device and you can also get a shower or by using S and that's it or unfortunately it does",
        "or you can also attach a debugger to all these demos or however for iBook or this or",
        "we are still pretty new to it so that's that's all we got for today",
        "so in the to recap or output was loaded in the demo and we use a recovery in the Linux VM to interact with the recovery mode which can get some query some device information and get a recovery show however the recovery show for release builds tends to be registered so in or there's not much to do with it",
        "next uh",
        "we also both removed for rainbow focusing first thing so to support rate of fasting we we implemented a snapshot feature so the problem we are trying to solve is that because iOS boot time is not fast enough for fuzzing so for first thing you want it to run something repeatedly as fast as possible or so we started using snapshot so because snapshot is faster than normal booting so it reduced the cycle or the cycle Time by 10 times",
        "we also out could coverage support to Kimu or because I value code coverage for today today is Magic because we're",
        "running TCG so it's very easy for us to report coverage",
        "so we try to fast the USB stack here is the simple diagram so you have FL running in persistent mode it will fall then for a kumu process and the Kumo will start by restoring a snapshot oh the snapshot will be a fuzzable state so you can start sending commands or inputs to it immediately then we have uh dummy USB host which will read or input",
        "from AFL and send it to the iOS VM for processing so if I was standing red or it will be reported to FL and if not or no it will be also reported to AFL for or for startups",
        "and here's the FL running or USB fasting",
        "we also look into Cisco fuzzing so",
        "the diagram is pretty similar or we also have persistent mode FFL or A4 kumu and then kumu does the snapshot restore then inside the iOS VM we will have a program the USB program that receive input from AFL using custom instructions oh and we'll",
        "do a Cisco based on the input you get if I was panicked then it will be reported to AFL otherwise or",
        "it will end the current cycle and do a snapshot restore again",
        "here's a screenshot of AFL running Cisco first thing or we tend to uh leave a better speed or with Cisco fuzzing compared to USB",
        "however uh there's still a lot of challenges for fuzzing oh the first is summer interrupts so this interrupts can",
        "Will interfere with the coverage result making it pretty random so it is not consistent at all or our current solution for that is to mask every instructor possible however without interrupts our thread is currently the only one running so the so iOS will never know if the if the some stock for this thread has ended or not so it will never switch to other threat which prevents or which reduce our",
        "opposing harness and the second problem is that apple does not provide sanitizer bills for iOS so maybe we're thinking",
        "about hooking allocator functions so hooking my locks freeze and try to watch watch what I was doing but oh this is",
        "still very far from perfect",
        "so let's talk about the future well there are there are a lot of features we're still implementing and we want to have it done in the future we want a proper working frame buffer or for the Jui and also we want the touchscreen to work so you can interact with it like a real device or we also want to emulate step because",
        "step is an essential part to ours and it's hard and as the name suggests which is circle and processor it contains a lot of security related function so it might be so it is an interesting Target to Emirates or apparently we also need to emit the GPU because our iOS GUI use",
        "a lot of GPU and a friendly it refused to work without the GPU implemented and we also want to improve our fuzzles to get some bucks so through that we need your help",
        "our code is currently open source or on the link on the screen or you can add add our reverse engineering process to a lot of ways or you can either contribute directly to a repo or support the Linux on all marks efforts because uh these are marks shares a lot of peripherals with iOS so is transferable knowledge",
        "or during this there was there were a lot of projects that were very helpful to us especially as asylums or team or",
        "also we or and also others useful",
        "projects are mentioned on the screen",
        "two ways so you can see our emotion is totally possible even so it's not not a trivial task or you also we can also explore a lot about iOS device our",
        "Hardware so Hawaii Hardware or through emulation",
        "or we can also we also see that how to remove enables multiple secret applications such as fasting or and we",
        "hope that our effort will lower the entry barrier to iOS research so or when",
        "a lot of when more people look at iOS it will become more secure for all of us thank you",
        "[Music]",
        "[Music]"
    ],
    "KEStazCf8vc": [
        "[Music]",
        "thank you",
        "thanks thanks for introduction",
        "so welcome to my talk",
        "um I'm going to start with an introduction about us my name is Jim Haley I am a PhD student at Northwestern University my research focuses on system security I found box exploit box and feedback the guy in the middle is who is also a puree student at Northwestern University he is a CTF guy which are very similar research interests both of us are advised by Siri Xing who is a professor at Northwestern University",
        "so 30 pipe this is mentioned in the title 30 pack is named for the kernel vulnerability CV 2022-0847",
        "it's an initializer bug a Linux kernels type subsystem the bug affects kernel V 5.8 and higher",
        "one of the most interesting thing about the knee pipe is its exploitation unlike unconventional kernel exploitation it doesn't hijack control flow it's a data holding exploitation so no rock is needed and it doesn't have to bypass kslr",
        "the effect of the exploitation is also different it doesn't execute code with kernel privilege instead it can override any files as long as we have read permission to it with such capability 35 even",
        "demonstrated local privilege escalation or Android system",
        "3D pipe is so powerful and has attracted so many attentions but what we learned from dirt you have from my understanding I think the one of the most interesting thing I learned is",
        "data only attack is powerful it brings many benefits",
        "first a data only attack method could allow you to write a universal exploit what does universal mean it means that the exploit code Quran calls different kernels different architectures without any modification",
        "second it doesn't have to deal with CFI which is an effective mitigation for roughs CFI is enabling Android kernel which makes Android kernel exploitation much harder third most mitigation focuses on protecting control flow Integrity very few mitigation in Linux kernel protects data only integrity that's why there's no effect exploiting mitigation for dirty pipe so we need those mitigations",
        "this all sounds interesting but 35 is",
        "not perfect first 35 candle is gapped from container actively escaping from container can only be done under certain conditions where the whole The holster is interacting with the container in this case 35 can overwrite the file on the host to execute the command but this can be achieved when the host is doing nothing in other words 35 cannot actively escape from container",
        "second 35 is just a bug it's not a",
        "generic exploitation method that could benefit other bugs",
        "in this talk I would like to introduce a new exploitation method named 30 Christ the high level idea of the required is to swap then its kernel credentials the method has several advantages first",
        "it's a generic exploitation method",
        "it's very simple which just needs a few steps but it's very effective second similar to dirty path you could write a data only exploit and without dealing with CFI and Rob staff third with 30 credits you are capable of escaping from container actively which cannot be done by Dirty pipe",
        "so some summary here first the required is a generic exploitation method well 30 pipe is a bug second both of them could generate data only Universal exploit third since they are data only so they could bypass CFI fourth Duty credit",
        "can actively escape from container",
        "which 30 type is not capable of last but not least 3D pipe is a bug that has been fixed so the thread has been removed as the exploitation method 30 30 quad is not available",
        "foreign",
        "attacks kernel credentials what are",
        "kernel credentials",
        "in short kernel credentials are property that carry privileged information in kernel according to Colonel's documentation there are they are the representation of users privilege and capability",
        "it Linux Kernel's implementation there are two main types of credentials credentials and open file credentials",
        "task credential is for each kernel task while open file credential includes the",
        "privileged information to an open file with those credentials Security checks X",
        "on them to examine the privilege I will give examples of how kernel implements learn and how to use them",
        "first task credentials it's implemented",
        "as strong Credit in Linux kernel each kernel task references to a scrap thread allocated on Heap the credit is used to examine user privilege for unpreviewed user the crowd is unprivileged",
        "when there is a new unprivileged user spawning a new kernel task kernel will allocate a unprivileged crap on a free memory slot if a user is privileged kernel will allocate a privilege required on the Heap",
        "users with privileged credentials are viewed as root users and this is how kernel uses task credentials",
        "next open file credentials it's",
        "implemented as scrap file a Linux kernel similar to straw crime it's stored on kernel Heap a new straw file will be created on kernel Heap on the file or file is opened the straw file contains several fields that we need to care about first it contains how the file is opened",
        "for example on the slice the file is opened in read and write mode then the F mode field will have the corresponding Flags",
        "this the file track has a reference to the struck thread of users who open it",
        "the straw file encodes Lafell which is under operation on the slice the straw file enclosed the dummy file which is what we just opened",
        "when the file is open the access information to the file will be transferred to the struct file so kernel checks on the straw file to see if the access is allowed so let's take a look at this example when we try to write content to the file we just opened kernel will checks whether the F mode in this rough L contains a red flag since we open the file in the in the with the red permission so the permission check will be satisfied",
        "and eventually the content will be written to the disk",
        "however if a file is opened with read",
        "only mode which doesn't specify relative",
        "information the kernel will create a file object with read alien flag in a f read fmodel field we will try to write to this file the rest is called will will be denied because the permission check on the file will fail",
        "and they eventually write into disk will fail and this is how kernel uses open file credential",
        "so with the background in mind then I'm going to talk about how dirty crap attacks in these kernel credentials the high level idea of the required is to swap kernel credentials specifically",
        "it swaps unprivileged credentials with",
        "privileged credentials to escalate privilege in the following I'm going to talk about two parts of attacks which are attack attacking task credentials and open vowel credentials",
        "first attacking task credentials",
        "in Linux kernel each kernel task references to a structure on a heap",
        "the first step of the attack is to utilize kernel box to free an unprivileged required that belongs to the attacker's task",
        "once the credit is freed the memory slot will be marked as freed by the HIPAA allocator",
        "in the second step we spawn new new privileged kernel tasks",
        "which indeed will allocate a privileged credential on the Kernel Heap the Hebrew allocator will reuse the freedom memory slot and place the new credit on it after this step the credit of the attacker's task will change from the unpreviewed credit to create privilege request then they can operate as privileged users and this is how dirty",
        "crack attacks task credential",
        "next I'm going to talk about how Duty credit attacks open file credentials which is straw file in kernels implementation",
        "struct file is used to exam permission when accessing the file we opened when the permission check is done the right operation of the file system will be invoked to do the real content right",
        "so the first step of attacking open file credential is to free the file struct in kernel memory this step should be happening after the permission check is satisfied but before",
        "the right into the file system is is beginning",
        "after freeing the Rafael in the kernel Heap memory the memory slot becomes free the full reuse",
        "in the second step we open a file that we that we want to overwrite for example we open the ETC password file since it is a password file is not readable for unpreviewed users we open that in read-only mode this operation will allocate a new file struct with read-only flag on the Kernel",
        "Heap",
        "and the Hebrew allocator will reuse the freed memory and eventually",
        "this allocation will recline the memory slot we just read after this step the struct file in kernel Heap will be swapped from the dummy file to the ETC password file because the permission check on the file has been done before the right Cisco will not be denied even though the F mode of a straw file is real it's real early",
        "in step 3 when kernel continues to execute it will do the actual file right on a disk this time since we have swapped the file struct it actually writes the content to the ETC password file and this is how the required attacks open file credentials [Music] so in summary the required follows three",
        "steps to launch your attack first three",
        "the attackers unprivileged credential with the vulnerability second we claim the freed memory slots by allocating a privileged credential third after the credential is swapped the attacker can operate as previous users",
        "these three steps sound pretty straightforward but doing so is challenging first three required requires the capability on the credential object which is challenging when the vulnerability doesn't have such capability",
        "this is because both cred and the file objects are allocated on dedicated memory cache well most of vulnerability",
        "do not happen on those two memory caches indeed they may happen on generic memory",
        "caches which I use mostly about a kernel",
        "besides most of vulnerability may not have three capability",
        "our solution to it is to Pivot vulnerability capability in the following I'm going to talk about how to Pivot invalid right which is Auto",
        "Bond rate and use of the free ride and pivoting invalid free which is double free for example",
        "so first pved invalids right",
        "thank you to Pivot invalid's right capability to",
        "freeing a credential object",
        "our idea is to leverage victim objects that contains a reference to a credential object let's look at the code on the right side the request key of struct contains a reference to a struct to a quest object when it's allocated on kernel Heap its memory layout could be similar to the picture on the left side we have a victim object it contains a pointer pointing to a credential object in its own memory cache",
        "from a hip for hip overflow we put such a victim object right after the Overflow object so the credit field will be in the Overflow memory region for use of the free we overlap the use of the free object with the victim object in the meantime the credit field is also in other memory region of the use of free ride",
        "next we trigger the vulnerability and",
        "partially overwrite the credit pointer making a reference to another credential object the credential object is managed by reference count the pointer change will cause a reference counter unbalance",
        "at the end when we trigger the free of the vulnerability we will free the credential object with the tempered reference and this is how we pivot invalid to write",
        "next PVD in value free",
        "for invalid free vulnerability we have two references referencing to the same object so a possible memory layout could be like this",
        "in the first step we free the vulnerable object from a reference",
        "second we free all the object in the same memory cache which eventually will free the memory page for the cache",
        "in the third step we allocate a bunch of credential objects to reclaim the freed memory page this process is called cross-cash attack after this the memory slot of the vulnerable object will be okay will be occupied by credential object so the",
        "remainder reference will be pointing to a credential object",
        "finally we utilize the reference which",
        "is a dangling pointer to free the credential object",
        "and this is a process of activity in value free",
        "the Second Challenge is how to allocate allocate preview the credential as unpreviewed users",
        "in Linux kernel unprivileged users come with unprivileged task credentials so you cannot directly allocate the privilege credentials a simple solution to it is to just waiting for privileged users to do so but it's unpredictable which could influence the successful rate so we should take a look for something that is more determined deterministic",
        "we figured out there are two types of solutions one is from user space we could trigger the privileged user space process Elaine is Kernel executables with roots",
        "seoid could run as root users so they come with privileged credentials those X cable includes Su and mount",
        "by simply executing them we could force kernel to allocate the privileged required",
        "other than suyd executables some demons",
        "running as rude users who also allocate privilege credentials in linear credentials in kernel for example SS key we could interact",
        "with it by establishing excess connections to the system and it will allocate the previous price for us",
        "another solution is from the kernel space privilege required could be allocated through new privileged kernels threat",
        "for some place calls if the user space sends too many requests to Kernel kernel will spawn new kernel workers to handle the requests which will allocate a new privilege credentials for those workers as a result another way from kernel space is to invoke the user mode helper which is to load kernel modules from user space when a user mode helpers requested kernel will spawn new kernel threads to execute a user space boundary as a result this allocates new privilege credentials those are the solutions to our Second Challenge",
        "the third challenge is to stabilize file exploitation when attacking open file credentials",
        "when swapping open file credentials we",
        "could confuse a kernel to validate to write data to another file the timing of doing a swap is really important if a swap starts before the permission check the F mode of the file object will be read only which results in deny of the right Cisco",
        "if the swap happens after writing to the disk kernel will just write dummy file instead of Etc passwords",
        "so the swap must happen between the permission check and that the actual file right this time window is crucial to the successful of the attack",
        "but this time we know is very small because writing content to the file happens very quickly during the swap during this time this small time Windows might be unstable or even invisible",
        "so our solution to this is to extend the time window to make the attack deterministic",
        "the first solution is that we could utilize user fold ft or fuse to pause kernel execution during this time window when the kernel access user space memory that is managed by the user folder FD or fuse kernel execution will be paused",
        "before kernel V 4.13 we could pause",
        "kernel execution it's import our Vector function let's look at the red V function on the slice it's the implementation of writing Vector data to a file in the function currently offers a check permission",
        "it checks whether the file struck is created with write permission after the check is satisfied kernel Imports virtual data from user space this is the point where we could pause kernel execution which useful FD of use",
        "this technique was used in gen Horn's exploitation for cve 2016 4557 by instead of the kernel V",
        "4.13",
        "this is the less the implementation of the red wave function the import of our Vector has been moved before the permission check so even though we could pause the execution at the import of our Vector we are no longer able to extend the time window so we should look for something else",
        "it turns out that we could pause kernel execution as generic performance write function the function is in the extra layer of the red Cisco so different file system uses before invoking their own right function in other words it will be caused by the red system in most of our systems after the permission check and the pitfall of the actual file right at the beginning of the function it will try to make a page fault on the user space buffer to avoid a possible data log and this page falls indeed will access the user space memory as a result we could utilize this access to pause current execution thus we could extend the time windows",
        "the first solution requires user for the FD or fuse to pause execution but sometimes those two techniques are unavailable for example in the docker so we should develop something else some other Solutions that don't utilize those two techniques",
        "and finally we found that there is a file lock in the rest that's fair system",
        "right which could be utilized",
        "but first what is file lock",
        "a Linux kernel each file has its own unique unknown object the file lock is maintained by the inode object the log mechanism is used in the valve systems grader operation",
        "this is the function the functional slice is a red operation of ext4 file system at the beginning of the function kernel will try to lock the eye note of the object after the writer is done the lock will be released this lock mechanism ensures",
        "the rate of multiple thread will be done in order",
        "The Muse this diagram to illustrate how this work so assuming that we have two threads says write a and squared B thread a and try B ground LSM time and the red to the same file both of them will pass the access permission check before doing the right thread a will lock the file from the eye note but rather B will have to wait for the lock until the right of the thread a is done and the lock is released with this lock the right operation will be done one by one",
        "the question is what if thread a write a large amount of data say four gigabytes which might take a dozen of seconds",
        "thing thread B will have two ways at least the same time to get a lock which leaves a larger time window between the permission check and doing the right in this way we could expand on time windows and the exploitation could be done deterministically",
        "all right demo demo time so we use this",
        "cve for the demonstration",
        "so we start with a low privileged user on the left side is centaurs with kernel 4.18 on the right side it's Ubuntu 20 with kernel 5.4",
        "before running the attack the ETC passport is intact the exploit code in two systems has the same empty check mt5 checksum which means they are the same X Y code then we build a build and run exploit and finally",
        "let's see",
        "and finally we tempered the ETS last board this Behavior could be done to escalate privilege to root",
        "we also have a demo on Android with kernel CFI enabled",
        "we removed some checks",
        "to make sure this vulnerability could be triggered or enjoyed so originally the file couldn't be read written by improved users and it's intact",
        "then we run exploit and eventually we",
        "tempered the content",
        "all right so here I want to summarize",
        "some advantages of 3D craft",
        "first it's a generic exploitation method that could Empower kernel exploitation for different bugs the method applies to container and Android kernel",
        "second the method is simple it just swaps",
        "kernel credentials but it's very effective and Powerful as a data method to request doesn't have to deal with kslr and the CFI and there's no public mitigation is available now so 30 quad is exploitation friendly you",
        "could write a dirty pipe like the universal exploit they could work they could work on different kernels without any code change",
        "so we have such a powerful exploitation method what can we possibly do to mitigate it and protect users do we have any mitigation suggestions yes we do the fundamental problem of the required is that the kernel credentials are",
        "isolated based on object type not on privilege level so I'm previewed credentials and privileged credentials will share the same memory cache and it will be overlapped with each other therefore they could be swapped",
        "with this in mind our solution is straightforward we isolate the privileged credentials into different different memory region specifically we",
        "I sold them into virtual memory so there",
        "is no Swap and no cross-cash attack anymore we have a prototype implementation and you could find the code it might get a variable",
        "finally some take",
        "a presentation first we introduce a new exploitation",
        "method named the required the code concept of 3D crime is to swap kernel credentials to escalate privilege",
        "second to realize the idea we developed",
        "principled approach to tackle different challenges third dirty crowd impulse kernel",
        "exploitation it makes exploit to be Universal they exploit the bypass all",
        "defenses available in Linux kernel and work across different kernels versions and architectures last but not least we introduce effect effective defense",
        "against the 30 credit card the defense isolated privilege credentials which solve the problem fundamentally",
        "that's all of my talk I would like to thank my collaborators again for the help in the think and think so dark heck for providing this cute logo for the decreased it's my not only to represent my work here",
        "foreign",
        "[Music]"
    ],
    "n8LU2RM_j6I": [
        "[Music]",
        "foreign",
        "good afternoon everyone we are security research from Baidu security X team is a great honor that our talk was selected by blackhead USA Today supong enemy we are present in this talk because the coordinating we cannot share it face-to-face with you in Vegas here is the agenda first we are introduce the background of advice of the advertising industry and then we all select three typical cases to deep analysis and underground Industries we will summarize the key technology and make a cloud analysis of them then we'll introduce the project Fitness to take about to talk about how to solve those problems uh first of all let me introduce the advertising industry in general according to the financial report of global internet companies in the past years the scale of the global advertising industry has reached hundreds of Finance dollars actually the advertising is the main business model for most of the internet companies typical internet models including social",
        "networks search engine app stores short videos so when our internet platform company grows up like",
        "a large number of users and advertisers the advertisers continuously to spend money on the internet platform company to promote the products then the",
        "internet company usually try to break Public's limitation that display advertise just only on",
        "their own media such as the websites the",
        "apps they start to open the advertiser library to the party",
        "that is the form of so-called advertising Alliance platform a large number of advertisers displaying advertisement on multiple third-party Medias through the advertising allies platform for example The Advertiser investor a hundred dollars the advertising Alliance platform a company",
        "will get 30 and the third party apps apps apps",
        "applications get 70 from a three-wing a",
        "three-way win-win situation",
        "and there are also many building models such as CPC is built by click CPM is built by advice and uh show current advertising show can't CPA and the CPI is billion by install or activation uh not fast but not just by a simple click then I will explain explain where the ID flat advertising fraud across",
        "the most common uh advertising fraud occurs between the media and the advertising platform the media wants to receive the platforms of term improper profit shares we have select two typical",
        "advertising road cases I marked one and zero marked one and two in this page another typical uh another type of",
        "advertising flow is between advertisers generally speaking and advertisers budget is limited if his budget is consumed by malicious click his competitors can use a low cost to obtain more customers we also selected some typical cases in this similar I'm accessed as three in in this page due to the time limit the problems between the advertiser platform and and other forms of root cannot be talked in detail one by one today next my colleague suhong will talk about some typical cases about the advertising fruit",
        "yeah hello everyone",
        "let's look at the first case generally",
        "apps often integrate many sdks for",
        "statistics around advertisement",
        "generation message push and so on in the",
        "process of security illnesses we found some malicious behavior in one big data on message SDK and this IDK was merged",
        "into many well-known apps as shown in the figure this evening harmless SDK",
        "correctly and the name police DX",
        "malicious fail so it is that simple",
        "uh so we have announced a lot of mobile phone malicious click cases but this one",
        "is the most complex one we have met first malicious DX May request the",
        "latest patch if so if the environment is safe the Cloud Server will written text.gr and after a series of complex",
        "requests looking for information file and automatic click fail are finally",
        "obtained yes as shown in the finger the",
        "SDK assesses several different source",
        "and downloads a deex file uh faulty are",
        "fails and adjust fail",
        "so how does a malicious IDK relax automatic click when the Jr requests the class server just now the target URL keywords click",
        "create and other task for information have been downloaded to the app the malicious Jr starts invisible but",
        "will load the target URL and after a few seconds injects autoclick script to",
        "operate the web page in order to accuse more Java functions in just code here GS Bridge technology is used for example first we register a GS",
        "Bridge named the base in the SDK then when we call based the get device information in JavaScript code the same",
        "method will be executed in Java code",
        "and how to start a invisible activity in the background activity continuous",
        "technology is used here we need to implement our own window manager and the real root MPL we also need to hook some classes to let the activity run in our own content environment the Android system cannot find such a window and defending let's heading overview activity is released",
        "so after unleading the technology let's",
        "take a look at the organizational structure of this case the battle development company followed by some",
        "Channel numbers from advert headers for example ID channel equal ABCD in the URL",
        "when users take when you girls click on this advertisements the channels will",
        "get a shell uh then they integrate Factor code and the channel name into malicious.j are failed and sell them to the big date another negative company and the NASA campaign Works them into",
        "the SDK finally many well-known apps",
        "integrated this monitorial SDK but the",
        "developer didn't know it",
        "uh so what about the pieces that we need to download some software such as office another IR we may go to some software download websites on the download page there are often local download and has to be download buttons and has to be downloaded is recommended",
        "one has to be downloaded in strategy it doesn't actually increase the speed instead other software is bounded and",
        "installed or even broader broader",
        "plugins are installed silently",
        "about downloading and the Italian that",
        "attack is somewhere the downloader will charge whether there is the anti-virus software and then report to the cloud to obtain the task of silently installing softwares at the same time the downloader will also charge which browser is used by the system and copy the corporate corresponding browser plug in CRX fail",
        "to the corresponding path yes it only",
        "need to be copied and the user has no fee",
        "that we have found so let's focus on it",
        "let's browser plugin include the function of intercepting request modifying pages and acute MGS scripts it",
        "can fully control the request and the response page the background script will check whether the request URL is a target URL the content script is used to inject code for different tasks",
        "foreign so let's take a look at the example when a user visit the video asset the script of the malicious browser plugin will first detect whether it's a high quality user then it will send a jsonp request to follow the target account like this or GitHub but the target account and the account number of follow are obtained from the Cloud Server so there is no need to update Supply in and only need to return different tasks",
        "uh let's look at another way if the plugin detects that the user is editing information websites such as some rest comparison access the plugin will",
        "replace the channel number of the other over tablets so whether you to do this if the user funny buy the products the replace the channel will get a ship that is it can make a profit through malicious plugins they said well the software's website prefer you to download with the downloader rather than directly",
        "foreign",
        "language or we call the E language is the programming language that's used in Chinese and you Chinese as a developmental code because all the low learning threshold e-language has become the preferred programming language for many underground industry groups as shown in the finger the programming code is in Chinese",
        "the developmental Community or E language is particularly but active in addition to communicating technical issue it also supports the customization",
        "of special functions through payment such as automatic click web crawler",
        "so let me introduce some common tools of underground industry",
        "Timmy Bible browser library is a web operation library included by default in each language in addition to normal functions it also supports further parameter simulation functions such as setting supplement start points and so",
        "on",
        "this is a automatic dialogue tools we",
        "obtained it's developed in each language too you can see the corresponding Target URL and the other parameters to automatically talk with customer service after clicking advertisements",
        "why is there such Row 2 yes it's used to attack a competitors",
        "that was speaking some high value advertisements need to be displayed click and converted",
        "for example the payment the download and",
        "entire app on all the dialogue with the customer service can be charged as a effective what happens and the tester",
        "will pay for the money let's say two is designed to simulate this process and quickly it does the",
        "and quickly is also the advertising package of the company teachers",
        "in addition to the build in library Captain Mojo is the most popular attention Library it uses the Chrome",
        "kernel so let's solve this module developers can easily operate the browser to your left automatically modified simulator",
        "device fingerprint injection software and other operations for example similarly Five Point touch which looks like a mobile phone device",
        "[Music] in addition to Eddy clock tools on the PC side there are many similar tools on the mobile set for instance the flow but we thought of in the figure is mainly used to record input sliding clicking and other behaviors and then please impact when necessary both can alsoever is mostly used to improve our work and the level if efficiency similar to the shortcut function in iPhone but it's used by the underground industry for example they use recorded such attentions to click on those advert headlines",
        "as we can see from the animation this software completely replaced the call",
        "recorded human sliding Behavior compared",
        "with using JavaScript code to simulate the sliding from from A to point B this sliding is more like a real person's behavior and it's not easy to be detected by the risk control management system",
        "okay now let's take a look look at the call and okay turn on the analysis",
        "uh let's summarize the high level underground industrial characteristics",
        "some of them have already a large number of companies and they claim to be advertising monetization platforms sap",
        "platforms but in fact there are companies engaged in the underground industry uh usually they have her profit scale",
        "but the low level underground Industry Group have the different characteristics most of them are in the individual or",
        "small team small scale growth we have low technical ability but very diligent in order to make a profit although they don't know the although they often don't make much profit they can also lead to massive damage and the best social impact",
        "uh now let's take a look at the technical details the high level underground Industry Group can generally control the user equipment remotely on a large scale similar to the backdoor program installed on thousand two devices for",
        "example embed automatically code in the",
        "app SDK was installed browser plugins with",
        "malicious functions and at the same time",
        "a lot of simulation technology hiding",
        "technology and anti-decution challenges are used [Music] compared with the high level underground Industry Group low level uses various",
        "tools to relax the local simulation clinical function because they may not have high technology and channels to integrate Malaysian code into approach",
        "and PC softwares we can use the broader Library data can be secondary developed as usual agent",
        "assimilation and Hardware information simulation I'll use the handles browser",
        "and some IP process it was typical and the touch we call a new platforms are used to simulate clicking on this target",
        "okay",
        "thanks supong let me talk about the new detection method we have problems follows typical advertising Broad",
        "first let me introduce project in recent years the technical",
        "capability of the underground industry has a significa has significant significant improved warehousing a lot",
        "of tech tax leader of the underground industry company they are used to work for a giant giant of internet companies and even some of them have security engineer backgrounds we need to accurately separate the advertising throughout clicks to reduce the loss and",
        "we need to continuously to chase them because they are a tough to",
        "because they are very tough to make a great profit and because the technical of the technical background of my team are binary vulnerability research and",
        "webcam testing this research work is useful for us because it's a operating system browsers malware analysis",
        "knowledge we are good at we are good at it the refrigerator's project is consists by RGS SDK and a male warehous form with a certain scale",
        "today we all talk about four detection solutions that include headless browsers",
        "invisible web real in mobile apps and the mobile key plus tools and mail web browser extensions uh the first Target Catalyst or automatic browser most of them are based on Chrome devtools Cloud course plot codes typically headless browser Library",
        "including public",
        "and just like the logo of the party there are students their students connected to the public so we can control the browser behavior from that stream and those hardly Sprouts the library official support language and node.js and python as Superman said earlier most of the low level underground underground Industries application Level high school so they",
        "cannot write say plus plus problem a program and this scripted based such as",
        "Python and JavaScript hacking tools is the favorite",
        "uh there are some open source projects to detect headless browsers as as it as this table list is the features they choose I use agent web driver and is the console window opened or alert make our left to test after test we find that many detection methods are actually the",
        "difference between the Chrome and chromium projects such as mimo types and",
        "language and some of them can be hidden through startup parameters such as web driver user agent it can easily overeat and the left detection points since world not work for me and to solve this problem from the wheel of the security research first we need",
        "to deeply understand the implementation of heavily sprouts by debugging the source code of the chromium we find that happier start Chrome",
        "the properties start from chrome through the command parameter remote remote debugging Port eq0 then he gets a port",
        "of websocket service and then he can transmit control commands through this port to control the browser behavior and receive callback information generated by the browser this is a chrome devtools protocol and the address browser is based on is built based on Chrome Delta's protocol so we think this this transmit channel is the key detection point",
        "English English scenarios we are just JavaScript and HTML that's running in",
        "the browser so the permissions are limited that means we can add too much things but inspired by the conception of the site channel uh we can link something by doing something uh to to watch the time and energy and consumes different let's look at uh let's look at",
        "the second picture first so that's a simple memory copy operation written in C plus plus it Loops 10 times and copy a long data into a variable it took 33",
        "mile seconds in my desktop computer CPU if we can force a memory copy operator operation through JavaScript but this code is only executed when the browser has down to the instance Delta instance we can detect whether we are entirely sprouted by the time there yes we have found a lot of detection entries such as cancel profile and which will travel the devtools instance convert the parameter",
        "we passed in and for the execution [Music] based on those ideas we write a few lines of JavaScript code in the picture on the left after test this code can stable detector all headless browser including mobile web wheel in apps and its harness for user experience because nothing is displayed on the Chrome UI and if you learn this principle is easy to adopt on this code to the latest browsers",
        "is based on Chrome devtools protocol yes",
        "yes we can also detect it by this method",
        "the next uh headless browser is jingy web browser which is based on Mini blink actually the author of mini blinker is one of my friends one day one day I asked him why this library is widely used by low level underground industry do you have do you have any detection ideas yes he said yes she said yes you",
        "can start from the advantage of many blink because this wiring is small and is developed by uh is developed based on a certain from your source code so he cut off a lot of functions such as webrtc yes mini blink does not support",
        "webrtc so you can do detection from this",
        "point",
        "uh let's talk about the next detection Target invisible mobile Library advertisement uh click we learned this",
        "through methods through the report that disclosed by the mobile anti-virus companies such as Chief who Kaspersky a few years ago from the reports and communicate with an anti-virus engineer we learned that the analysis method is using static analysis static analysis",
        "and dynamical behaviors in the Box this",
        "mobile uh those mobile antivirus companies generally generally only disclose those instances but they do not disclose how to passive it and detect it so we just wonder can we active perception such risk risks without the assistance of antivirus companies",
        "this kind of malware it is those malicious code dynamically from cloud and is use a highly customized where we and use JavaScript JS Bridge inject the",
        "JavaScript script to webview because the container of the webview is invisible the netizens do not know what is happening but the mobile phone traffic is consumed fast and the battery of the phone is drying fast",
        "here is a video we can have a look how it's working the left the left is a is a pixel phone and the right is the webview instance open in the phone the middle is HTML traffic let's have a look we we open a malicious apps as you can",
        "see the left the left the web wheel is",
        "as you can see after opening the apps we are doing nothing yes nothing is happened on the UI but there are many hidden webview in the background doing bad things such as shoe and click advertise",
        "this kind of malware is skilled in antivirus and debugging and anti-am use",
        "and use strong encryption channel for CNC so far the",
        "dynamic analysis static analysis and network behavior analysis is not so easy for us because it has has any anti-technologies",
        "and this type of malware display the advertisement through uh customized",
        "webview and use JavaScript JS bridge on the JavaScript operation to cooperate with the code on the JS side because this JS code he knows the position of the 80 slot where is the ad slot and then the Java code will use this position to simulate the user behaviors such as perform a click on the edit slot uh we have several detection method method one we have a mobile actually we have mobile app store product that means we have a large number of app samples through a deeply customer",
        "developer room and customer developer volt plugins we have bypassed all anti-analysis point and based on this we developed based on this we developed a set of course Farm use a lot of phone to Loop to run all apps we have",
        "to absorb the dynamic loading of code analysis the behavior of the web we we find yes we find some underground industry by this Farm is very effective the second detection method is through JavaScript by summarizing the key",
        "technology of the malware the RDS Bridge the funding the location of the advertisement in the page and Simulator",
        "the user behaviors we can use JavaScript hook to watch a lot from my mod and",
        "other JS Bridge communication variables and to",
        "check the is the landing page that muted by someone once the abnormal information is fine we can find a way to trace back to fund the sample to complete the analysis",
        "the next detection Target a mobile key plus tools and cloudforms we have write a click script Live Twice yes there is a",
        "milliseconds time difference between those two clicks so we can detect the automatically click tools by coordinates",
        "of the click and loading checks and on Android we can also pay attention to test event the motion event such as touch pressure mobile phone touchscreen and it's the value and is the value is different with humans as for the cloud form there are the software the software and the system usually run by a fixed hardware and room if you find that a lot of sim device accessing your devices from the same time that scheme to detect",
        "the cloud from we should collect many as many as web real features as possible no matter how is your user agent changed but the way we your future arguments that remains stable because his operation operating system is not changed",
        "the last detection Target is malicious extension on PC side let's take a look let's take a look at some public disclosed method for detection the",
        "extension in browsers they are detected the resource used by the extensions and the detector whether the room has been modified for example the picture on the right is a malicious extension after it's run it will create a mutex element",
        "we can travel the Dome through JavaScript to detect if it exists",
        "another detection measure is by sending a message to extension to test if it exists but I have never seen a malicious browser extensions that support message communication so those methods does not",
        "work for me uh the public disclosed methods are all",
        "have limitations so let's get let's go back to the signature of the malicious blouse extensions the key features are leaking interception requests they can redirect URL access and inject",
        "JavaScript to web pages as for URL",
        "redirection we can guide the browser to access the URL or the URL the URL we generated we add a signature in the URL on the source side we can watch the request if the if the URL parameters have changed that means the browser has malware extension or driver for the As for the JavaScript injection inject code the way we percepta is to use the CSP features first we made our web page that's with wide restrict CSP strategy strategy such as we refuse to load all closed domain scripted we when the malware extension try to insert JavaScript in the page our location will occurs and Report data to the server on some special about the browsers the log report of this validation will even include the name of browser extension this is the key to chase the underground industry because my company has a large number of employees as long as I know the name of the browser extension I can find employees computer infected with the malicious browser extensions and",
        "then we can find the example and complete the analysis yes it works great",
        "okay I get it and the last chapter is summary and the recommendations and now let me summarize this talk first I introduced the background of advertising industry a house advertising Alliance is",
        "formed and where does the fluid occurs then I select three typical cases and Analysis the underground industration structures summarize lucky technology",
        "and cloud cloud characters then we",
        "introduce how the project figures solve those problems we provide we provide four Solutions and because of project helpless hundreds of hundreds of",
        "underground industry",
        "practice",
        "has been arrested by the employees police they are sentenced for Valentine the climate our law is law",
        "and the applicable law contains fluid",
        "illegal control of computer information system and Destroy production and",
        "operation",
        "and here are some advice for advertising",
        "and Industry the for the for the",
        "advertising Alliance platform we should share information with each other as the",
        "underground industry often include on multiple platforms at the same time for app apps developers we should carefully review the cooperation with the cell party sdks which is a big we should choose a big advertising Alliance platform to monetize",
        "for the browser developer we should enhance the second check of the browser extension load by template tempered configuration files",
        "and because of the time limit in our full English we do not have accurate section today if you have any question please send it to this email and I will repeat reply you within one day so this",
        "is all the content of our talk thank you for listening",
        "[Music]",
        "[Music]"
    ],
    "WJ6o2F9st9g": [
        "[Music]",
        "all right well welcome everyone to our session uh we are the Android red team we work for Google my name is farzan curry me the engineering manager of the team I'm joined by our two senior security researchers Juan Chang our technical lead as well as Eugene rodianov a special thanks to Christopher Cole as well one of our former leaders in Android security for all your help Contra for your contributions to this deck but also for helping us build a phenomenal red team so our presentation is uh we'll cover how Google reimagined a phone with the pixel 6 and how it was our job to red team and secure it uh so this transformation from prior generation phones meant that our red team had the unique task to test a phone that serves millions of customers with an entirely new SOC it's a new hardware firmware of uh software components as well and we had to get all this work done in about a year before launch so we're going to cover how we did that the first a little bit about who we are uh our scope and how our red team fits into the Android security wheel to help secure Google products running on Android OS so we'll talk about some interesting attack surface under pixel 6 and then we'll dive into some impactful pocs or proof of Concepts we developed over the course of a few red team engagements so we'll be demoing the first code execution on the Titan M2 today so you definitely want to stick around for that and we also have some impressive work on the Android Bootloader which we call ADL so a lot of quality content to cover in this presentation also want to emphasize that everything in this presentation is fixed we are not dropping zero days today",
        "a little bit about who we are we are the red team we are the eyes of Android security so our mission is to secure pixel and Android uh by from by attacking key uh surfaces or rather features to find impactful security issues before real attackers find them so we do that a number of ways primarily through red team engagements so uh this helps us validate security assumptions are real or we wind up breaking them uh we scale through tool develop development primarily through fuzzing so we built fuzzers and we hand them off to our Central Android fuzzing team to enhance and manage so that they can continue to work for us behind the scenes 24 7 365 days a year and this is an approach we call continuous fuzzing that has provided a lot of benefit for us we invest time in exploit development so this helps inform difficult security decisions we found so it helps articulate impact the leadership it also helps us as a red team during the exploit writing exercise find even new vulnerabilities we wouldn't have found before and finally we're deeply integrated in the remediation process red team shouldn't just be finding bugs but should be active participants in remediation it's ultimately how we provide the most value to the business so the business being Android and Google products that run on Android such as the pixel so how do we secure these areas well our Android security organization makes many Investments to ensure we ship products like pixel to you into most secure form possible this the intent of this slide is just to really hone in on red team is just one integral piece of this big process another big part of that process is you so thank you for all your contributions to our vrp program our vulnerability Rewards program it's also a great opportunity to acknowledge some of the other sessions at black hat on Android security last I counted I think there's 12 and there's actually another session tomorrow on the Titan M it's really world-class research like fees that helps improve the security posture of Google products like the pixel so a few words on where we focus today as a red team so we invest heavily in fuzzing and static analysis so both Schwann and Eugene will dive into intensive detail on what we do here but as we're growing we're also looking at server-side attacks as a red team so quick overview of the pixel Journey so the point to highlight here is that there have been many iterations of pixel with unique security components uh prior to the pixel 6. pixel 3 took a big step forward with the creation of the Titan M chip and uh and finally with the pixel 6 we build a custom SOC that adds an additional security Enclave private compute core and most importantly the Titan from our perspective the Titan M2 is introduced as the most secure element in the pixel 6. so how does that Journey translate to where attackers are focused today so in general vulnerability Trends are moving lower down to stack uh don't worry there's still plenty of cross-site scripting out there if that's your bread and butter but as applications were moved to sandboxes attacks also started moving lower through the OS down to the kernel firmware level even ROM code that makes exploits in these lower portions of the stack incredibly attractive for attackers",
        "so just some supporting evidence we can look at exploit pricing at one data point to support these vulnerability Trends so we've come to the consensus that if third-party markets or pricing exploits against Android higher than other mobile platforms then we know we're doing a pretty good job so the harder it is to explain the higher the price of those exploits generally are so this is the zero DM Elemental chart of mobile payouts uh this tells us how third parties are pricing exploits on mobile platforms and browsers you can see what's worth two and a half million up top that's an Android full chain with persistent zero click bug again this gives it some level of confidence that we're doing good things and shipping you a secure phone so let's hone in on a bit on the pixel 6 attack surface",
        "so this diagram represents a high level attack surface of the Google tensor SOC in the pixel 6. what you see in light blue are updated features from previous pixels dark blue is new primarily our tensor security core as well as the Titan M2 Chip uh what you see covered in red now is attack surface that our red team has tested and helped mitigate uh in Prior red team reviews so we covered thing areas like normal and secure world everything including our trust EOS our trusted execution environment all the way to secure monitor running in the L3 now what you see in dark red is attack surface that we'll cover in this presentation today again the Titan M2 and the ADL or Android Bootloader so last point I want to emphasize before I hand it off to Eugene is that we're going to be talking about some pretty impactful code execution bugs today but despite this we're confident in sharing with you that we're shipping the most secure pixel yet with the pixel 6 and you might ask well isn't that counter-intuitive if you're telling me about code execution bugs and we would say that that's exactly why the pixel 6 is so secure we've red teamed it we've improved line coverage through fuzzing and static analysis we've worked with uh remediation or rather feature teams to prioritize remediation efforts and Implement hardening recommendations so that we can ship you a secure phone so with that said I'm going to hand it off to Eugene rhodianov who will cover the Titan M2",
        "thank you for sending so",
        "from the attacker standpoint Titan M2 is one of the high profile targets it is created to handle heavily secrets on Android platform and pixel devices and it provides such protections against physical attacks such as fault injection as an example Android Erp program offers bounties up to one million dollars per code execution on Titan M2 which signifies the security claims and for Pixel and Android type number 2 provides foundational security services such as a hardware-backed key storage strong box key area station it plays an essential role in Android verified boot process so Titan M2 is the second version of Titan chip the first version of Titan was released first in pixel 3 devices and unlike Titan M which is based on arm architecture Titan M2 is based on custom risk fiber architecture build with a non-standard tool chain and runs a completely redesigned operating system and firmware stack",
        "and given that there is not too much publicly available information on technical details of that name I would like to reference a great paper a titanium Odyssey presented at black hat 2021 which provides a lot of interesting details on reverse engineering type name chip and a lot of technical details that's really great to see what the researchers could achieve with the black box approach on this that Target so here is a attack surface of Titan M2 so Titan M2 is a discrete secure element connected to the main tensor SOC over spy bus the application processor is not able to directly send data to Titan M2 over spy bus or there is an Enterprise in a dedicated tensor security core which actually sends data to Titan 2 over spy bus and on the left hand side of the slide we can see a high level architecture of Titan empty chips or at the bottom we have mask from a hardware responsible for secure boot to boost the bootloader bootloader on its own implements recovery functionality it authenticates the next stage main firmware image which consists of the kernel and applications",
        "and Titan M2 implements risk fiber architecture using team modes user remote and machine mode um so all the applications are running in the same address space um as there is no mmu so I will be also calling them in the slides as tasks but they are isolated between each other and those applications they implement the main logic of the chief exposed to their SOC and the Android platform and basically those applications they process uh untrusted data received from their AP and this is our main attack Vector in this uh so this is our threat model so we're assuming that an attacker is able to run arbitrary code on the application processor in the privileged context and is able to send arbitrary data to your titman 2.",
        "uh before we dive into details are of fuzzing and vulnerabilities which we discovered in this engagement I would like to say a few words about your defense and depth mitigations implemented in titanum 2 which they which make this chip more secure so well there is another next policy which is enforced by physical memory protection registers and custom uh Titan extensions uh which should make code section not writable and stack not executable um but there isolation so or essentially physical memory protection registers are used to make sure that a certain task is not able to read or write globals and stack of other tasks so that if an attacker is able to compromise sites and get code execution inside one task they are not able to or compromise Secrets handled by other tasks in addition to address isolation there is also a file system isolation so every task is provided with this album file system to persist its secrets and finally there is a number of ciscals exposed by the kernel to the applications and there is an ACL policy which allows to restrict certain Seas calls to the applications which we actually don't need them so we're in this red team engagement our team was tasked with uh proactively identifying and helping and helping the feature team to mitigate issues in Titan M2 firmware before pixel 6 release and as far as I mentioned earlier fuzzing is one of our Central methodologies and Titan Mt was no exception so we approached it using two directions a host based buzzing and emulator based buzzing thanks to the implementation details of Titan M2 firmware we were able to build a subset of modules for x86 32-bit architecture and as a result we came up with a very high performance buzzer and we also took advantage of a large arsenal of tools available for fast and onyx86 platforms such as address sanitizers uh with Father Aboriginal guided fasting engine and so on as a downside of this approach there are some components which we obviously were not able to build for host nodes for instance crypto task because crypto task communicates directly with the crypto Hardware which we which is not easy to mock on host uh platform and also there are some architecture specific drivers which we also needed to deal with so in order to cover those critical components we implemented in other fuzzer using the full system emulator provided by the feature team in order to be able to cover the firmware stack completely",
        "and in total we developed three fuzzers so two host based fuzzers uh one Elite prot above meter coverage guided fuzzer um and one dedicated father to you fast as",
        "and one decoding functionality because well as we know asm1 decoding is not really difficult to get right so we want to make sure that this attack surface is mitigated and additionally we have a third fuzzer emulator based fuzzer and interestingly we have fuzzers number one and number three we can replace test cases from each other so basically they're using the same interface um as we expected the the emulator the father was quite slow uh five test cases per second this is attributed to the accuracy of the emulation of the peripheral devices because this is like an accurate Hardware emulator provided by the feature team but on the other hand side but on the other hand host based faster compensated for it because it's about 2.200 times faster a thousand test cases per second and by running this fuzzers for some time we accumulated the initial set of issues I would say that not all the issues identified in this engagements were came from the fuzzers but fuzzers were instrumental in bringing our attention to our problematic code and by doing variant analysis we were able uncover issues in other components and uh",
        "essentially here as we were triaging the issues we were particularly interested in exploitable ones and there uh we got a few interesting examples so one of this is actually out of bonds right in the identity task so as we can see here there is a vulnerable mem CPI operation in a presentation push reader cert so this is a pretty straightforward vulnerability to exploit quite powerful primitive where the attacker is able to control public key and public key length arguments and essentially your",
        "uh attacker is able to write arbitrary data of arbitral links to non-controlled address so this is not yet sufficient to give code execution and we started to explore how can we improve this primitive if you look at the where with the Republic key points at it actually points in global variables of the identity task and we can see that there are two interesting objects located in identity tasks at offset A4 and 164 and hex so our C board dot buffer size and cboard.buffer and those variables are used in another operation C board and string so if we change those two commands together we're able to come up with write what we're primitive very precise we can basically overwrite data on the stack and uh trigger our code execution",
        "well in reality it takes a little bit more interaction with the cheap to get kill execution because identity is a stateful task and they're in order to exploit the first vulnerability we needed to put identity into the right state so that's why basically we are replaying those commands step number one and step number two just to advance identity State into the right state step number three this is actually we were we exploited the first mem CPI out of bonds right and we override Global C board with the attacker control values we have step number four and step number five again to your Advanced identity task into the right State and at step number six we're actually delivering our Shell Code we are overwriting the return address on the stack and we're executing our code so at this point we're able to run arbitrary codes in the context of the identity task and uh so what we can do else our ultimate goal in this engagement was to compromise high value Secrets protected by technology chip and then I started to look around and see like what actually is protected by identity we we didn't find any interesting secrets you were compromised from the identity tasks or we started looking like a different exploitation scenarios and one of them was actually to compromise Weber Secrets by dumping a secure file system so on the previous slide I mentioned that every task is isolated file system so you may wonder how it is possible well I will explain on the next slide how it is possible but right now just a quick overview of what river is and how it works so we will provides a password protected storage for Secrets where a user when it would like to store a secret using Weber it submits password and secret and Weaver will store those objects in Secure flash in the plain text and when a user would like to retrieve the secret it submissive password waiver verifies password if it matches the record it Returns the secret by reading the plain text Data from The Flash if the password isn't correct obviously we refuses to return secret and then also throttles the consequent authentication attempts to prevent Brute Force attacks even with passwords uh with low entropy and at this point when we're able to run code arbitrary code on Titan M2 we basically your bypass waiver protection will read secret directly from The Flash and return it to the attacker and now let's take a look how it is possible because they're um identity is not able to read the secret directly from the reverse file system but there is a gap in the ACL policy so there are some ciscolls which enable to map The Flash page directly into the SRAM and as a result bypass this isolation ciscals exposed by the kernel and the identity task was actually able to call the Cisco so and here is how our Shell Code script looks like we first invoke flash map page to map the page with Weaver secrets into the SRAM of the identity task we use Cisco number two to allocate a short memory buffer which will be used to transfer data to the attacker Cisco number three is a signal",
        "to the technical that this operation is done and the title current will send data over spy bus to the attacker and step number four is put tighten them 2 into the Sleep state to prevent them from crashing because when the Titan will wake up from the Sleep state next time it will re-initialize the state of the tasks and step and we can replay our attack as many times as possible without crushing the Weaver and tightening and",
        "here is the final piece before we go to the attack is the actual the Rope gadgets that we use to run the Shell Code we had some small difficulty to find useful rub gadgets because we really wanted to Control Function argument registers and function in Risk 5 architecture and this is something which is difficult to achieve",
        "um so we had four graduates in total Gadget number one will load save registers with the attacker control values then Gadget number two will load those saved registers into the function argument registers Gadget number three will be invoked in the Cisco and Gadget number four will start operation over because we want to invoke four Cisco's in in a row and we have all our ingredients ready to put our Tech together and show you the demo so we're in this case we're exploitation happens on Raven device which is pixel 6 Pro and we are using Citadel updater command your readout the firmware",
        "version of the running on Titan 2 which we are given to your exploit in this case um so this is a retail firmware uh signed but your pre-production version before device is released",
        "and right now is the next step we will try to write a secret into the Weaver so our custom secret to simplify this work we developed a tool read dauntless flash which essentially communicates directly with Citadel Daemon and there well we need to have root preview just to run this so we use rightly recommend we provide three arguments the first argument is the slot number because we will have multiple slots the second argument is actually the password and the last argument is the secret which we would like to protect so 13 is a slot number uh this is our password and this is our secret and we return success so it means that our secrets are right now in Weaver right now we will use another command redweaver to retrieve the same secret and show that everything works correctly so we use read we recommend we provide the same slot number and we provide the same password and uh",
        "um waiver should be returning as our secret so we got our secret back from the Weaver right now we will do a little bit different we will we will essentially alter the password and right now Weber refuses to return to Secret would have been really weird if it provided Secret at this point um so or do it a few more times in a row uh to see how it throttles so right now after fifth unsuccessful attempt it tells us to wait 30 seconds but given that we're able to run code directly on Titan we will not be waiting soar we will be um sending our Shell Code exploit and vulnerability right away so we're using done flash command and Flash command takes two arguments the first argument is address of The Flash page which we would like to dump with Weaver secrets and then the number of bytes and hex to dump and as we run it uh here we go we have our secret red from the flash memory without providing passwords so we achieved our goal here and if we scroll up here here is actually the commands that we will burst we have mirror sending to Weaver uh to technology to exploit this vulnerability exactly the same six requests",
        "to your which we showed on previous slide",
        "and I think this is probably mostly it what I would like to say about Titan M2 before I hand it off to Shawn I would like to say a few words that even though we were able to wear final vulnerabilities exploit them code to get code execution those issues are have been mitigated proactively before release of pixel 6 which made their Titanium 2 and pixel 6 more secure and more importantly we developed fuzzers which are up and running on the internal Android fuzzing infrastructure to provide continuous fuzzing and continuous security for taking them to Firmware and with that I'm transferring to Schwan",
        "hey thanks Eugene",
        "let's take a look at another component that we covered so this is AVL we're going through the very interesting issue that we discovered and show a code execution that based on this issue",
        "so here's a very high overly simplified boot sequence how pixel 6 works so the boot ROM starts at the beginning and it loads PBA or pr1 and from there it initialized trust the environment and it also loads APR in non-secure DIY environment ABR will eventually jump to Android kernel but before doing that it also talks to trusty apps to secure some configurations",
        "and ABR is a very important piece in the Android boot chain for example it does lock down some security settings before kernel is loaded it implements the Android verify boot it of course loads a kernel and it also hosts our recovery environment which is fastboot and because of all that APR shows a bigger attack surface compared to other pool of the components for example in general recovery interface is a historical source of security issues especially for secure boot and also ADR is dealing with arbitrary user input via fastboot implementations and of course it also needs to load and update some Android configurations which are usually stored in the flash which is considered as an unsecured source and lastly APR is also responsible for loading and verifying kernel signatures which is another attack surface",
        "so because of all the other we include AVR into our engagement for this component there are some low level dependencies to Hardware so it's not easy to fast so we decide to go with manual code reviews for this engagement our main focus is actually on the fastboot handlers but while doing that we noticed a very interesting issue from our Eurotech surface which leads to our poc in this case so the issue we look into is the hip OB ride in the GPT practice handlers",
        "to demonstrate that we need to modify the GPT headers in Flash and we could install the chip modify the Flash and restarter it but that's destructive and technically it's hard to do that so we think okay let's step back and assuming we already have a good privilege what can we do we can probably modify the block devices directly and and then reboot to activate our attacks so that means we have a prerequisite is a root privilege",
        "code here's how the code looks like on the right side we have two structures defined according to the GPT format and on the left side we have a function parsing the GPD headers it does this by first allocating a maximum buffer that is able to holding the maximum allowed DVD entries and the calculation is Down based on the side of the structure and the maximum number of activity entries and after that it loads The Flash into this buffer however when doing the load instead of using the side of the structure and using the size declared in the header itself and the header is not very uh is not validated",
        "so in this case if we put a large value in the header or entry size we can trick the AVL to read more data than it should be into the buffer that creates a heat buff override",
        "so how do we explore this issue not two cents first ABR uses a linked list based Heap implementation so that means classic hip-hop overflow works here another thing I want to call it is that we have multiple flash disks on the on the device and every disk has a dpd header that means we can explore this issue multiple times not just once",
        "assuming that this is first time when the code runs and this is hip layout so we have a TPT entries pointed to the Adobe buffer and following that buffer is a free Block buffer and in the free Block there's a header showing the side of the free block and also the next free Block so we prepare our first GPD header so that after read it overrides this header and modifies the size to be a very small value and also modifies the P next to a stack area",
        "so next time when the code tries to load the next GPD header or try to allocate the same buffer from the Heap but because it modified the size to be a very small value it's not able to hold that so try to follow this chain to the next memory buffer which is the buffer we specified on step after reading GPD headers we overwrite the call frame that contains ARR and other registers from there we control our PC registers so starting from here we could just wrap our way to get our code executions and I guess first thing you would do is modify the MMA configurations to add to add more executable areas but we found",
        "well there's an easy way there's a incorrectly configured memory region which is marked and read write executable and its address is predefined",
        "so all we need is run our payload to this region and then jump to it so that gives our full control of abl",
        "in the real case there's always troubles we'll Implement that for example we have to be very careful we modify the GPD headers because if we modify it containing the PBR or other earlier stage bootloaders our device will be bricked it won't be getting through here now recovery from there without fastboot interface is not a good experience and the other thing is in APR there's a multi-threading happening so there's some synchronization environment we need to fix after we get into control",
        "so now we get code executions but what's impact remember we require root privilege and that is very close to a kernel and it's running a year when not secure so we get code execution eery input loader is that something better than codex extreme kernel yes first is we get full persistence by default because our attack is from flash it's by default survives the reboots and also even OT updates the next thing is that our bootloader can now run malicious kernel without violating a testation service integrity that's because this exploitation happens earlier than the key master initialization so that the exploit cash boost AVB measurement by providing expected hash OS patch lab or unlock status",
        "and from there the malicious kernel is allowed to use key Masters protective secrets",
        "so with that let's take a look at a demo",
        "so we have our pixel 6 device connected to the laptop and in theory we should we're supposed to use a root vulnerability first to get there but we didn't have one so we just use the debug build it gives us root access automatically but even with user debug build the device is still running a locked production sign for loader so we are still attacking the right target and our only operation here is to prepare our exploit and write to GPD headers we use ufs2 and ufs3 these two",
        "are proved working and all the other competitions will break the device",
        "and this is a done deal once we write that we reboot the device to activate the attack if it works it works if it doesn't we break our device",
        "so now we reboot into bootloader we do that because our payload is implemented as a fastboot Handler but in real scenario you don't have to do that you can just reboot into regular mode and our payload will still run so now that the device is rebooting and let's check first a secure boot element so it shows production that means the device security is still enabled",
        "and here's our bootloader version",
        "yeah for this one you're gonna have to trust me this is the retail version but loaders",
        "and now let's check our magic command we call it OEM rootkit",
        "yep so this icon shows okay our code is running ABR actually for demo purposes our rootkit Implement only two commands the first one is read arbitrary memory from the address",
        "and the other one is patch the memory with arbitrary values",
        "so this proves that we gain full control of abl and okay we can do whatever we want from there and if you reboot the device our attack is still there",
        "so let's conclude the demo the series we used for this demo the first one is OB right that's assessed as a high severity the other one is read write executable memory configurations which is also high and both issues are already patched and released on the device",
        "from here I'll head over to farzan for the conclusions",
        "all right thank you Sean all right so I'm just a brief concluding thoughts to leave some room from q a uh so our red team identified impactful issues during our pixel 6 reviews for those who have not yet invested in red teaming we highly encourage you to do it it provides that adversarial input into your security program on fuzzing the team continues to manually develop fuzzers that run in perpetuity uh so that helps us scale but despite that ability to scale a fuzzing ain't easy and so specifically a fuzzing bare metal code so having a good Hardware abstraction layer and good compartmentalization really helps uh that make that process easier for us uh mitigations while doing Security reviews we noticed a common theme when we were reviewing low-level components that there was some basic mitigations that were not implemented such as aslr so we're actually working with various feature teams to assess the feasibility of these moving forward",
        "and uh finally the the last Point we'd like to land is that we want to emphasize your pixel 6 is the most secure pixel to date uh sure we talked about impactful code execution bugs but again this is a good thing there's no bugless software and proactively identifying security issues like these that Sean and Eugene talked about through red teaming is a very positive benefit of having an offensive security program we're also being transparent about our process so the community grows from knowledge sharing we also encourage the folks out there to continue submitting to our vrp program we've had actually a pretty active uh researcher that's been submitting bugs I think the last two bugs they submitted were worth more than 40K each so we decided to just hire that person instead of paying them out continuously probably better for the company big kudos to the Google pixel and Android feature teams they value security and support remediation work as if it was the next big priority feature and finally our work is never done right so we're already working closely with pixel in the Next Generation phone we have a presentation in the works on the pixel modem as well it's a lot of great work there it's a great point to land here at the end uh red teams in the industry often look at Products Post deployment uh you can get profound exponential impact if you integrate your red team into your software development life cycle so you can catch these issues of how to launch with that uh we'll move over to uh thank you everyone rather for your time we'll move over to q a",
        "[Music]",
        "thank you"
    ],
    "AL1mjsgcdoM": [
        "[Music]",
        "all right everyone uh thanks for joining uh by the attendance I can see there are a lot of circuit designers in the room uh but",
        "um anyway so let's get caught let's get uh moving forward and talk about fault injection detection so we're going to talk about some fault injection detection Basics we're going to dive into the tunable replica circuit itself we're going to talk about how Intel integrated the TRC a little bit about calibration and validation and some conclusions a little bit a little bit about myself I've been with Intel for a long long time working on such products as a manageability engine and the convert security manageability engine since their inceptions Carlos tokunaga",
        "is on the phone he's been a circuit designer and architect in Intel labs for also a very long time so let's get started I 10 and ask questions to the audience so pay attention and I'm hoping you guys are going to learn something here the focus is to explain to you all what Intel is doing for fall injection detection and a little bit about the technology itself okay so some of the basics so focusing on non-invasive fault injection attacks where modification of",
        "the package is out of scope is really the um the gist of the presentation so",
        "um some of the attacks when we refer to non-invasive fall injection what we're saying is you can attack anything around the package the motherboard the bumps the pins Etc but once you start cracking the package open that's out of scope for these types of these types of attacks and so when we talk about non-invasive fall injection we're talking about voltage attacks we're talking about clock attacks uh",
        "we're talking about electromagnetic radiation attacks otherwise known as emfi and then finally we're talking about thermal attacks and so all these attacks are unique in that you can you can mount them on Silicon without touching anything inside the package itself so once you crack the package open it's a different type of attack and but once again really again for non-invasive fault injection we're talking about pin modification for the most part and the primary pins that we're talking about here are both digital and analog voltage rails as well as on our parts we have two inputs from crystals our 32.7 kilohertz Crystal and",
        "our 38.4 megahertz Crystal so these are really the primary attack surfaces for non-invasive fault injection and the primary focus of this talk when we get to semi-invasive really the primary attack Vector is laser others because for the most part they require a package de-lib right now there has been some research done where you could avoid a package delayed and shoot a laser from the side but that research is is pretty new so for the majority of falling of laser-based attacks you know you do require a d-lib so now to complete the circle so again laser attacks are also out of scope because the tunable replica circuit isn't we're not we're not making any promises that it will detect a laser attack uh so completing the circle is we have um we have highly invasive fault injection attacks and these attacks are completely out of scope now I'll give you guys three guesses at what slide I had to spend the most time with the lawyers on right yeah exactly this one okay um so what is uh an attacker trying to accomplish with fault injection and really what they're trying to do is to get circuit timing to fail without causing the whole platform to crash because if they do a fall injection attack using voltage or clock emfi or or heat and the platform just crashes then there's no point right so they really want to get to the point where they can cause circuit timing to fail but the platform maintains or the the target of evaluation uh The Entity under attack doesn't completely crash right and so",
        "why is circuit timing interesting well circuit timing is interesting because when circuit timing fails you can get data to be latched either too early or too late now in this presentation we're going to focus on latching data too early because that is a that is in the scope of under voltage attacks we could talk about latching data too it would just take too much time but the same principles apply so now when you if you latch data too early in many platforms or microcontrollers what's happening is you're latching zeros okay and so first question for the audience is what instruction is mostly associated with the value of zero anybody know yeah no op exactly right and so the kind of Holy Grail of a fault injection attack is if you can convert a jump to a no op when authenticating trusted firmware in a secure engine right so um so at just the right time after an attacker slaps their malicious firmware inside a flash device or some other device or loads it into the memory of a controller it's going to fail authentication but the jump to error if they can cause that jump to error to be a no-off it'll fall through and execute the main image of their malicious firmware so that's kind of the Holy Grail here so converting a jump to a no op is really what at a simple level an attacker is trying to do with a fault injection attack okay and so how does this apply to timing well in a standard timing diagram you might have something again this is very simplified but I I'm trying to hone in on some key points here so as you can see uh on the second Rising edge of this clock when you have data running at nominal voltage the jump is latched right and so but as as as some of you may know once you drop the voltage of the data lines the data moves faster or slower",
        "slower good okay so if you can get the data to move slower you push those data lines out to the right and the clock isn't changing presumably on this simple attack and so you're latching a jump and Sr you'll actually know up instead of a jump and you've succeeded in executing malicious code okay this is kind of important so this is really what the attacker is trying to do now if we take clock glitching it's very similar so you have the same good clock and data executing",
        "um and data actually data uh being",
        "driven at nominal voltage so what would the clock look like if they glitched it to a faster clock anybody know",
        "it'd be a little louder",
        "uh well so okay so the clock would shift over and the clock cycle itself would be much smaller right right there and so in effect the clock is latch the clock's Rising Edge is the second Rising edge of the caucus much earlier again latching and Noah because you sped up that clock now how fast do you want to speed up the clock and how and how fast you want to drive the voltage so you you don't want to drive that voltage low for a second because if you drop it low for a second at that low of a voltage it's going to crash the whole platform and so what attacker is trying to do ideally is Drive the voltage to a very low value for roughly a clock cycle so in 100 megahertz processor they're trying to drive that voltage to a very low voltage for roughly 10 nanoseconds and they're trying to convert a 10 Nan ore and a clock attack they're trying to in one clock cycle change the clock cycle from a 10 to let's say a five nanosecond clock cycle if they can do that precisely they've got a very good system for mounting an attack okay so what do we do to solve this problem well as you may have gathered we're focused a little bit more on circuit timing than we are on actual voltage or clock frequencies and so that's kind of what's unique and special here okay so the tunable replica circuit",
        "which Carlos on the phone and his team actually invented way back when to mitigate they invented it to mitigate aging and silicon because when silicon ages its timing starts to fail as they all get older we start slowing down right and circuits are no different and so by detecting when circuit timing started to slow down Carlos and the team could actually uh reduce guard banding and and and add more and essentially yield more dye for Intel and so that technology was named the tunable replica circuit now since as we've just discussed fault injection behaves the same way through through bad timing if the TRC can detect when timing fails in a circuit it can detect voltage and clock in emfi and thermal attacks and so what the TRC is is it's a very simple circuit again this is the most complicated circuit diagram and it might be an eye chart but I'm going to get a little bit simpler and we're going to dive into it with a simpler more concise diagram but what it consists of is a launch flop a tunable delay chain and a capture flop now this capture flop here is really determining if a data line that's being driven along the delay line is coming in",
        "too slow versus what we call a reference signal and you'll see this in a in the next diagram so don't worry this isn't the only diagram we're going to see we're going to dive in and the key element is the delay line and it's the delay line that's tuned to match worst case nominal timings in our",
        "product right so it's supposed so that delay line should match what the worst case delays are and still work right and",
        "once you fall below that our our product won't functionally work in me timing and that point uh it can only be an attack we've determined so we're going to jump ahead and dive a little bit deeper and make things a little bit simpler so a slightly more a simplified diagram",
        "here so you've got some key signals one is the clock one is a reference line and one is in data actual line that is calibrated uh to match the timing of the circuit at a worst case level and then you've got the launch in the capture flop so the input clock that's coming in will actually on the rising edge launch the signal along the data reference line and the data actual line and the second Rising Edge it will capture whether those two lines are the same or different and there's an as you can see you have the xor gate that is that is inputting those two data lines and as we know with an xor if if two signals are the same you get a zero if the signals are different you get a one and so on the second Rising edge of the clock if the if the data reference line in the data actual line are not the same you will generate you'll latch a y line and output an error in other words you've determined that timing has failed okay so how does this work looking at these two lines now the data reference line you can see it's slightly coming Rising uh after the input clock because the launch flop has a slightly smaller proper it has a slight propagation delay over nothing right now what is really pushed out to the right is the data actual line due to that delay so all those uh all those inverters in uh and nor Gates are causing that data line to move slower okay now at that point in time going through now again this this data actual line is not under attack it's a nominal line that we've calibrated to come up uh at this very time so this is these are a couple easy questions so in nominal cases what is going to be the value of the xor and Slash the error on this line zero good I know this is just to make sure you guys are paying attention right so let's say we have an attack and that date and that data line that data actual line is moved over even to the right a little bit this is right at which point now that's because again Lower voltage equals a slower data line okay so which point what again now is the actual result one excellent good so",
        "it now is detecting that data has moved too far to the right and as an error it's failing timing and it's been calibrated at this point that the only way it's moved as far is an attack sorry that's kind of an important concept okay",
        "all right so I'm moving right along okay",
        "um so I'm not sure we'll take questions at the end if that was a question I was I wasn't sure so okay so why and how uh did Intel integrate the TRC so",
        "um so we integrated the TRC into csme which is an embedded an embedded subsystem in the PCH or the platform component Hub of our client platform it stands for converge security manageability engine it's a standalone",
        "subsystem running inside what most",
        "people refer to as the South Bridge and it has quite a few secure high security applications in it and you may have heard of uh this morning there was a talk on boot guard on biosguard it's the route of trust for boot guard it's the root of trust for many applications like our integrated TPM it's the root of trust for our manageability solution so if an attacker was able to run and it normally executes it executes Intel signed firmware so if an attacker",
        "was able to uh if an attacker was able to load their own firmware they could essentially root the platform and bad things can happen and there have been presentations at black hat where we have been attacked successfully through uh software means physical means uh non-fit physical means such as reflashing the part uh Etc and and so that's a very so having malware execute on csme is pretty",
        "much a worst case scenario for Intel and so we we are doing everything possible to mitigate that and now we're mitigating it through uh fault injection detection as well okay so where and how did we integrate",
        "this tunable replica circuit into csme",
        "so csme is made up of three partitions as you can see here there's a x86 uh sometimes called the minute IE microcontroller there's a system agent and there's our i o devices a gasket and so we integrated the TRC into the system agent and into the TRC we fed the same power line and the same clock line that are coming into csme now as you can see from this diagram there's no direct way for using a non-invasive means to glitch",
        "the csme clock because it's coming out of a PLL so for a attacker to glitch the csme clock they they can essentially they have to use some pretty sophisticated mechanisms by glitching the crystal itself however the voltage rail directly coming into the package and powering the majority of the circuitry inside the PCH is also powering csme and so by placing a TRC on",
        "vnn inside csme it essentially can",
        "attack it will detect an attack on any of the csme partitions and even more than that theoretically although we're not making any promises about this it would detect it would the same attack would apply to any of the other devices or IPS inside the PCH now we don't make claims about that because csme is often power gated and if csme is powergated so is the TRC so we don't really make any claims about for example the CSM the the TRC protecting the USB controller or some other controller however it is we do make a claim that the TRC will protect csme against all voltage and clock attacks as well as as thermal and emfi",
        "um okay so there's no specific reason we placed it in the system agent it was well the reason replacing the system agent is because it was easiest to invoke our countermeasures so once the TRC detects an error it outputs a signal and from that point we isolate csme and take it through reset right so the result of a um of a glitch attack your CSM goes into reset uh the platform does not reset we got specific marching orders from our client team we didn't want to just reset the end user's platform at least initially and so if you're attacking csme and CSM goes to",
        "reset essentially all the csme services will fail safe right that's um that's really what what the trc's goal is initially now initially in addition to that we have calibration logic we have fuses that we have to pull and we'll get into that details in just a second okay so why do we choose to integrate the TRC um physical attacks are getting cheaper to mount these voltage and clock glitches you can just buy right directly from various companies",
        "um or you can rent them uh Intel view security as an evolutionary concept and every year we're seeking to add more one or two significant features to improve the security of csme and the TRC is just a good example of those roadmap of this roadmap um like I mentioned before csme has integrated a TCG compliant TPM 2.0 device I kind of that's near and dear to my heart because I was actually responsible for that for some years and as some of you may know TPMS especially discrete TPMS have requirements to protect against physical attacks so it's one of our goals to make the integrated TPM for csme as close to discrete TPM and robustness as possible and and we believe that with the TRC we have without question a best-in-class TPM inside the PCH",
        "um so I I just mentioned that okay so getting to uh validation and",
        "calibration okay so what are some of the key principles of calibrating this and we're going to go back to the stuff we talked about so if you incorrectly calibrate the TRC",
        "you can have false positives and or you",
        "can misdetect and attacks typically both won't happen it's it's a very very bad thing if we had a false positive um under knowing that that by by far is is critical so if if a false positive occurred really really bad things such as product Replacements Etc might happen so without question we we do not we we are very very concerned with false pauses and obviously we want to avoid any chance of missing an attack as well and if you calibrate this thing incorrectly one of the two will happen um so how does calibration work well it starts from the concept that given a circuit at a fixed frequency we know when the circuit timing will fail right we just know that inherently as circuit designer so I'm not a circuit designer but Carlos is and so we have called that point where circuit where the circuit timing will fail be glitch and that's at a point that only could be a result of an attack there are normal voltage droops that you see uh when you're running High workloads let's say you're you know let's say you're copying uh you're ripping a DVD and and sending it out on the network or something from a Serial ATA drive on your network so you're going to see voltage droops due to those high workloads and so there are normal League what we'll call legal or kosher droops that occur in the wilds and we don't want a false positive to occur as a result of those groups we want a an attack to be detected only as a result of a glitch that we know could only be caused as a result of an attacker okay now this value so hypothetically let's say and I'm not going to give you real numbers because I'll tell you everything I can but but very process specific stuff I'm not going to tell you so let's say hypothetically nominal voltage is one volt you might see a V glitch of let's say 750 millivolts right and so the only way to get from one to one volt to 750 millivolts is through an attack and we and when and when we're measuring the 750 millivolts we're measuring it at csme we're not measuring it at the pin right because between what you see at the pin and what you see at csme is totally different or any other integrated and any other highly integrated device because of various levels of circuits and buffers and isolation Etc so so you have to drive a very very low voltage value typically in the negative voltage on the PIN to see a droop to let's say from a 250 millivolt droop at the device itself and this v-glitch again is global so all the hundreds of millions of parts that we ship in a for a given product be glitch will be the same for all those parts so there's and I'm mentioning this because there are various part specific pieces to calibration and then there's Global pieces of calibration",
        "so calibrating each TRC is done",
        "independently so each one is uniquely calibrated on our manufacturing line now I don't they're not uniquely because everyone doesn't have a unique value but they're independently calibrated and they're done and what calibration really is is taking that big witch value which is a droop let's say I just mentioned of hypothetically 250 millivolts and",
        "converting it to delays right so what's the what is the data path speed at one volt versus the data pass speed at 750 millivolts for that's each specific part and it's different for every part okay so that and then we fuse that delay value into silicon and that fusing blows in that the right number of of inverters and nor gates in the TRC itself okay so we're going to jump back to the TRC uh schematic in waveforms and talk a",
        "little bit more about this so here we go to our favorite diagram in this picture again we have a TRC calibrated running a nominal voltage not generating an error okay so on this",
        "timing diagram",
        "what is the delay corresponding to V glitch and I'll give you a hint it's the distance between two Rising edges so and anybody whether",
        "anybody want to guess which two Rising edges is corresponding to the delay of v-glitch",
        "let's see exactly good if I had if I had I forgot my candy and if I had it I would give any candy yeah so that point there is a value in picoseconds right that we need",
        "to fuse into each into every part okay so here's something very important what happens if we increase that delay right what happens is uh well so let's say let's let's change that if that if the delay value was Zero if we didn't fuse any Gates that TRC did actually would be the exact same as TRC data ref and it would be and and it would be impossible to detect an attack at that point because no matter how much they glitched that no matter how much they slowed down the TR the data actual it would never get far enough to detect an attack conversely if we blew in too many of those Gates at nominal volt that that uh that rising and lowering edge of action would move over so far to the right at nominal voltage when you flipped on the machine it would detect an attack as and that's obviously a false positive so the danger in in calibrating it with too long of a delay is that you get a false positive due to either nominal voltage that's not so bad we detect that right away right but worse is a rare droop that occurs because somebody is running some workload that we didn't think of okay so that delay making it just the right length is done on each part and is the",
        "Mainstay of calibration okay so how do we find the per part glitch so we use high school math right to essentially generate a slope that mimics",
        "that is that is actually that that will allow us to that that shows us the voltage delay curve again this is important that's common to all parts okay so all parts have uh we we calculate a slope where on the y-axis you have delay on the x-axis you have voltage so for any given part you would just go and find a voltage and get that right delay for that part okay and what the TRS so in menu so we calculate this using a whole bunch of data what this slope is right y equals MX plus b right pretty big if you guys remember high school math so now what the TRC does in manufacturing is it's running at in manufacturing at nominal voltage and a nominal voltage of TRC will spit out what delay is causing is what the delay",
        "is at nominal voltage it is report that to us okay and just through uh we have an internal finite State machine that just calculates what the delay is a nominal voltage um and so with that information right what we can using the slope again y equals MX plus b we can go and find the point in time we can reduce it down to V glitch so if you know the slope you know Venom right and you know V and therefore you get no Vietnam delay it's and then you know V glitch because it's Global using two points on a on a line that you on a line equation that you already know it's very easy to calculate what the delay at V glitches and we do this for every single part so again what's uh what is global is the",
        "slope the slope equation",
        "um v-glitch is global what is unique per Venom is known right we know that isn't it's a vault um and the part what is unique to the part it's spitting out the delay of V non which it spits out to us and the delay at V glitch now you may ask why",
        "can't the part just spit out why do you need this slope thing why can't you just run the part at V glitch and have it spit out the delay well you you can't you can't run at vigorous for more than a few nanoseconds so the whole machine dies right so and our testers can't generate values that low so you actually it would be great it would be really easy to calibrate these parts if they would run a v-glitch but the whole purpose of of it is they don't run a V glitch right so that's why we have to use this uh slope-based calculation uh to um to calculate B",
        "glitch per part a vegan's delay per part okay",
        "um okay so then we do some testing right so how do we make sure this is the right what we call recipe well we run initially false positive testing we put the part under high workloads to make sure it's not generating any false positives but then we start glitching it right and so we essentially drive mult we drive different voltages uh a matrix of voltages and and pulse widths something like this so we generate you know at at a given glitch length of you know of of 10 20 30 40 mil seconds we drive a hundred different voltages and we do that for all various glitch lengths and various voltages now what's really and what we see is we all we see areas in green where nothing fails just fine then we get areas in kind of that beige or yellow where the pla the whole platform crashed right so it was either running at a voltage for too long um or too low of a voltage and the platform just completely crashed and died what is really critical is this red band of lines and that is where the TRC detects an error right but the platform right before the platform crashes or if the platform might not crash and so it's Uber critical for us at every horizontal line right for us to",
        "detect um a for the TRC to detect an attack because if it doesn't as you can see in one the third horizontal Row from the bottom then we essentially have a hole in the TRC where somebody could um could successfully glitch us and we wouldn't detect it okay that's what this means I'll see you I think I already said all this stuff so in our first pass of testing on this product which is the Intel 12th generation CPU core CPU otherwise known as Alder Lake we saw this that we had missed the TRC calibration okay",
        "um and so um yeah I'm running a little faster than I thought but that's okay more time for questions so what happened so with the",
        "initial batch of TRC so what we do is we fuse roughly 100 parts we run them through what we call false positive testing and glitch detection and if any of them fail like they did we just we determine why and what we determined was that we actually had set V glitch too low so instead of 750 millivolts it",
        "really should have been let's say 780 775 millivolts right and we and with",
        "that information we modify the value of V glitch to what we determined should be the right value and we then we fuse another 100 Parts take them through false positive testing take them through fall injection testing and make sure they all pass and once they do and they did and at this point we didn't record any failures and we also didn't record any false positives and based on this data we locked in the recipe for this 12th generation Alder Lake CPU and it's shipping in desktop and mobile configuration right now",
        "um so um so some some more so some more points about the TRC I want to make is that because I've got some time is that um why did we choose the TRC right so TPMS smart cars have been shipping with analog clock and voltage level detectors for almost 20 years now so why didn't we just follow that model uh so there's a couple things we like about the trc-1 is that with one circuit we can detect all four attacks that's one number two is that the TRC is a purely digital circuit using standard cells which means it's very easy to Port right so we have so it's not a soft IP it's a hard IP but it can but it takes a very very short amount of effort to Port it to a new process and we typically change processes well less often than we'd like but we change them as often as we can and we want to make that that effort we want to make it very easy for us to switch processes because the csme IP is on a various number of products all on different processes and we and we want to make sure it's as cheap as possible for us to go to different processes another reason is that the CSS is that the TRC hip as a as a digital device is very small far smaller than Analog Devices and so while",
        "TPMS don't often change their design and don't often change their processes and are on very much older processes we tend to be changing our process often as possible and obviously Intel is trying to be on the state of the art for our CPUs and our chipsets and our Graphics devices so these are some of the reasons why we've chosen the TRC over more of a",
        "legacy analog device",
        "now the challenge though is that um we build a lot of parts right hundreds of millions a year and for a massively deployed products on scale we need to make sure that we've calibrated this thing correctly and we we believe we have now to prove that we asked riskier uh who is if you're not familiar with the skier they're a third party they're third-party security firm that does that does fall injection detection testing for products and we ask them to take the TRC through uh through fault injection and for many many months they went and did that uh and and they evaluated the TRC for using clock voltage and emfi and",
        "as a result and the result of that was that to happen we were happy to say that they were not able to uh to successfully glitch csme and they said that in all cases the in all cases the glitches were detected by the implemented countermeasures inside of the TRC so so",
        "we got a little bit of um so once we did that we said oh maybe we should take this to Black Cat because not until we were 100 sure we didn't want to go and you know inform everybody exactly what we had done uh so anyway I'm right at the five minute Mark um and so I just want to thank there a lot of people who worked on this uh Carlos and I started working on this in 2014 I think",
        "um and it finally got implemented last year uh and again like I said there's a lot of people it's not just us there's a whole team of people in circuit design uh in uh in high volume manufacturing testing Etc and so um now's a good time for questions can you uh please bring Carlos Carlos you're going to get brought up now so if you guys have any questions it's a it's a great time to ask",
        "foreign",
        "[Music]"
    ],
    "a2hU6LEpws8": [
        "[Music]",
        "foreign",
        "to the stage and online",
        "Heather Atkins Robert Silvers and Jeff",
        "Moss yay",
        "thank you so let's make sure let's make sure Heather pops up supposed to be here somewhere remotely I hi can you hear me",
        "we can hear and see you",
        "perfect okay so hey this is our this is gonna be our panel we're gonna have a conversation um for those of you who tuned in and I believe it was February we did a sort of a preview of what the Cyber safety review board was up to what they were working on we did this kind of q a uh at black hat um with Robin Heather but now they have completed the first review the verdict is in we're going to be talking about their findings some of the Lessons Learned in where they go from there so first just do let's do a quick quick brief intro Rob Silvers Rob Silvers I'm the undersecretary for policy at the Homeland Security Department I also serve as chair of this cyber safety review board so this is your fault it is it's our fault that we're it's my fault that we're here okay perfect uh and Heather Atkins hi I'm Heather Adkins I'm a vice president of security engineering at Google and I'm very delighted to uh to",
        "co-chair the csrb here with Rob it's a real honor and a pleasure",
        "all right so let's uh let's get started um first though um if I remember correctly the enabling legislation that created the csrb mentioned solar winds but you did log 4J first are you gonna have to go back and do solar winds maybe talk through how you got to log 4J in the first place yeah absolutely just for the audience's benefit in brief the the Cyber safety review board was created from President Biden's executive order last year on cyber security and it is really an unprecedented public-private organization to uh make an authoritative",
        "fact-finding and then Lessons Learned and recommendations coming out of the very biggest cyber scene it's all public right and we every report will be public and half the members are from the federal government National cyber director Chris English the the leads for cyber from the FBI NSA and otherwise and then half the members are from the private sector with uh Heather the the lead private sector member and then and then luminaries from uh from the cyber security world uh uh we took on as our first review when the board launched in February of this year the log 4J vulnerability",
        "and the feeling was really that this was a fresh event that had a lot uh to",
        "unpack in terms of for virtually every kind of organization out there uh every organization was impacted because log 4J is sprinkled across the ecosystem it still is uh and it also had serious ramifications for the open source Community uh and how open source software is secured how the community can effectively respond in an incident where basically you have to patch everything immediately because of the severity and our feeling was that re-patch and then repatch again and sometimes multiple patching cycles and so the thought the thought was that this would really be an amazing opportunity for the board to jump in on its inaugural effort there's a really high impact event that literally affected everyone right right",
        "Heather",
        "does he speak the truth I I don't know that Rob knows how to not speak the truth which is always a good thing to have um I think Rob said a great I think log for Jay um was probably one of the most impactful events probably that I can ever remember in terms of cyber security I think we're going to probably dive into that a little bit but I think another thing to keep in mind is that when we talk about software ecosystems a lot of these events start to look the same so while we didn't look at solar winds as an incident specifically we did end up touching on a lot of the things that would have come up in a review on solarwinds about how secure software is built the kinds of tools and the kinds of capabilities we need in the ecosystem and throughout the report we do make footnote references to areas of recommendations and findings that actually do relate to solarwinds so I think we still got the benefit of looking at software through the lens of solarwinds having been through that experience but like Rob said I think log4j was a big moment for all of us and it was really the right thing to do at the time",
        "okay so so why don't you step us through we'll set the stage so create the team you get the members you pick log 4J and then what I mean it's a sea of things you could explore right you could go to Showdown and try to count the numbers and see how quickly things are being patched you could interview people to see what strategies are working like how do you start to wrap your hands around a problem of such uh such magnitude yeah absolutely so we split the board up into different subcommittees to to look at different parts of the event and the response and I think what really surprised a lot of people is How Deep The fact-finding could go I mean this was a v this was not a bunch of experts coming together and batting around you know policy ideas I mean this was like an operational uh fact-finding uh",
        "engagement and we ultimately the board spoke with over 80 organizations and",
        "security researchers to get date and got data as well what'd you see how did you respond what did you see in terms of exploitation how did this impact your organization what do you think are the lessons learned and what that mean is we we actually created a factual roll up of how the log 4J vulnerability disclosure process the response all went down and",
        "answered a lot of unanswered questions just about the factual record and I think that's one of the really Innovative parts of this board that fills a gap in the ecosystem that wasn't there is so the reporting you think the private sector reporting just they didn't have this Focus or this depth or dwell time or like why wasn't it coming out through normal kind of infosec reporting I think I think it's a it was a missing part of the ecosystem there's nobody until the csrb was created there's really nobody whose job it is to convene 80 different kinds of companies and security researchers and without any particular agenda hear what they have to say and then say here's authoritatively what happened you know companies might investigate what happened to themselves right but that's narrow and it's also not for the public it's not for the good of the community right our charge was let's figure out what happened just so the community can know and then let's draw out Lessons Learned and recommendations that are really actionable from that again for the good of the community not with any particular you know organization's agendas is it all sort of like off the Record so they'll tell you the real deal and you abstract it so you have this sort of Chatham House ability to get at the real",
        "facts or our company is like well our lawyers what you know or we can't admit that we screwed up or some we have confidentiality protections available so the companies can tell us things and we could use it but in an anonymized way to Ben to to animate the the thinking and the findings some companies were thrilled to share their data and have us come out and share that uh with the world Heather might have more to share on that too yeah I was really pleasantly surprised how many organizations came and spoke with us some in person some spent many hours with us on video calls wrote extensive documentation for us to look through and it was from a variety of Partners in the ecosystem we spoke directly with folks from the Apache software Foundation who managed log4j all the way to cyber security vendors who had watched the ecosystem respond in real time uh we we spoke to organizations who had witnessed exploitation",
        "um and we even heard uh from the People's Republic of China uh the the government and I think uh it's a testament to the appetite that people have to to get the facts out there I think um one of our biggest findings was that information spread quickly on Twitter which was great you had a lot of real-time information but it was difficult to get canonical information about what was really happening so I think there's an appetite to pull this kind of information together in a way where everybody can trust the facts or at least trust that they have been deeply looked at in some way",
        "so there's a lot of immediate anecdotal evidence on Twitter but uh like you were saying the canonical that takes time and effort did you notice any difference between the participation or the way you interacted with say a commercial entity versus say an open source project or did everybody kind of participate in the same way or could you see sort of distinct lines across different say sectors or countries or",
        "you know um I'd be interested Heather's observations but I will say that the board approached every stakeholder big",
        "or small powerful or not um the same way and gave the same opportunity so you know we we talked with friendly governments we talked with the UK we talked with Israel with their National cyber authorities to see what they saw so we can get the benefit in addition to obviously talking with sisa um we also sent an information request as we did to so many other stakeholders to the government as Heather said of the People's Republic of China because they had a substantial role uh in um in some of the background uh behind this uh event and we actually spoke with a representative of the Chinese government uh to in a full board meeting in the same way that the board spoke with uh U.S entities and organizations so we were really equal opportunity and you",
        "know in terms of how different kinds of organizations responded back to us like I'm not sure I can identify an exact pattern I can just say that overall it was really good to see 80 different stakeholders being willing to come to the table with us and and you know speak with us give data that was remarkable",
        "yeah I would say um the thing that stood out for me as a pattern was that we were able to speak with a number of the foundations who support open source and they have a",
        "particular role in this ecosystem that is very unique they're volunteer-based",
        "um a lot of the projects uh are governed according to how they want to run the project so there's a lot of variety there and they also have a lot of very strong opinions about what should and shouldn't be happening within their communities and I think that diversity was certainly very different than some of the commercial entities we spoke to where companies are run in very specific ways and I think we learned a lot about um the benefits of the open source Community having the freedom to run software the way they run software but we also learned that there are millions if not billions of people relying on them getting it right and so that was actually a pretty interesting tension that came out not sure it's necessarily a pattern but the different foundations across the globe that build open source software manage open source software have really particular ways of doing that and it's a very diverse set of ways",
        "because I'm curious everybody can take open source code and they can immediately patch it with their own Homebrew fix or they can wait for the actual developer to fix it so sort of everybody's waiting on the authoritative log 4J fix but others",
        "can't wait they're going to patch it themselves so you probably have a whole almost like a train wreck of different kinds of patching and different kinds of solutions all trying to fix it at the same time um did you find that well I guess we'll get that into the conclusions like does it make sense to have to wait for the one patch or is it a free-for-all um what gets you the best results um kind of in a remediation phase but I'm curious on this yeah on the strengths of Open Source strengths of closed Source um especially from say a private sector Google angle where you a lot of the work does come from the the strength of the the open Community um maybe you can talk us through a little bit of that that disclosure or the discovery process um as you are sort of unpacking long for you where they're sort of unforeseen discoveries where they're um you know the vulnerability keeps surprising the researchers you know the multiple patches maybe you can talk a little bit through you know the early stages of maybe when you'd only interviewed five or ten and you thought it was one thing and now you're at 80 and it's a completely different you know can of worms yeah so so a couple of things on the the disclosure process and and the response so on the disclosure process um uh Alibaba uh an Alibaba",
        "security researcher uh discovered uh the vulnerability and the board looked into this very carefully and we concluded that the um that Alibaba did the right thing uh they followed coordinated disclosure processes they took the vulnerability to the Apache software Foundation um and uh and provided all the information they had so that Apache could begin its work of um looking into it and developing uh a patch in terms of the uh the patching Cycles yes there were there were there were a few iterations of the patch and we we definitely found that this induced some patching fatigue and confusion in the ciso network Defender like everybody surged to do this and then by the second or third surge they're done yeah there's no more surging yeah yeah I mean it really and it was the holidays time you know it was a leading up to Christmas I mean this was um the the board found really may have been very very well been the largest mass scale cyber response in history uh",
        "just given the intent the the severity of the Von the fact that it was literally everywhere and the fact that companies even really sophisticated well-defended companies didn't even didn't know where they had log4j in their environment because it had been rolled up into so many different software packages which is one of the unique you know aspects of Open Source uh uh software uh and so and so Network Defender fatigue and patching fatigue was a definitely a real aspect uh of this response Heather I wanted to come back to uh the disclosure uh the disclosure to uh from",
        "Alibaba to the Apache software Foundation you know happened through the usual means of coordinated disclosure and ASF to their credit began working",
        "immediately on the fix and one of the things we learned about the open source Community is that many times these fixes are done in the open and that means in GitHub in issue tracking systems you can actually see the fix being developed and that was the case here with Apache as well now they didn't mark it as a security vulnerability with a big sign on it that said hey this is a vulnerability but anybody keeping an eye on their get pulls or looking at their",
        "release candidates would have seen that they were working on fixing some code in the jndi functionality and we think that is actually what happened before Apache could release an official fix for everybody and begin the mass patching phase somebody noticed this is our hypothesis but somebody noticed this being done and",
        "um we begin to see posts on WeChat in China talking about this release candidate that has the security fix we start to see the Minecraft exploitation that everybody knows about happened shortly after but this is a very common practice within the open source community and we see it actually across many very large projects and it was a kind of a moment for us to sit back and think well you know as we think about the software ecosystem and getting patches out quickly and that surge that had to happen um you know I don't want to sort of sneak preview the recommendations too quickly but you know this is an opportunity for us to think about how do we build a software ecosystem where we can all move very quickly because we know that things happen in the open that bugs get dual discovered that they get exploited before they're disclosed and so that was a really important finding for us in terms of how we want to reshape the ecosystem on software",
        "so maybe you have those sort of updates only visible to those contributing until a certain time and then you would unmask it so to speak listed for public consumption or I think that's one approach um you know we we spoke to a lot of people about this kind of issue and I think that would be considered controversial depending on your point of view I think another approach might be for us to take a look at um you know how do we make the the knowledge of the bugs somewhat irrelevant um I actually it's our 19th recommendation in the report but can we turn the patching problem upside down and make the sophomore self you know more self-aware and be able to respond much more quickly um because there is a whole host of things other than just developing in the open um but I think it should Inspire us to be you know really ambitious about you know rethinking how software ecosystems are done because this surge that happened in December of 2021 is not something that we can do every day I mean there's hundreds of vulnerabilities found all the time we can't always be constantly be surging um and so Jeff I think some people might find the hide your bugs approach controversial",
        "um I actually think you know we're gonna encourage the ecosystem to be much more foundational on you know how do we just do things differently all together",
        "so I want to go back to something Rob uh said which was the a lot of people had it and they didn't even know it right they have all these issues and another thing that happened uh this year uh was the s-bomb right really it's been talked about for a long time but now it's starting to take on life of its own so",
        "did that play a role in any of this could it have played a role in any of this had asked bomb been more widely accepted say years ago how do you see the two intersecting because I believe one of the findings of the report is that s-bomb wasn't used by any of the people so it's a little too early to tell if that's a useful technique maybe you walk us through uh through that yeah I think what the board that's correct the board did not find any stakeholders that were able to use s-bomb to successfully get at um it's a little early right but how many are actually but the board felt that esban has tremendous potential as a concept of that organizations need to accelerate their efforts using Automation and tooling to get s-bomb to a state where it can be practically used out in the wild and also recommended that uh all all software developers should be ship developing and shipping s-bombs uh together with their software products be so the board is a total believer in the s-bomb concept but it has to be evolved and Heather led a lot of work uh the board's work studying as Bob's and how they were used here I would turn it over to her absolutely I mean a number of uh industry participants on the board who who have studied this a lot uh Katie Missouri is another um I think we all recognize the intent behind s-bombs in this space",
        "but the standard features aren't there to really let us see version information for example so the ability to say well I have log4j but is it a vulnerable version and then secondly these kind of deep dependency chains that we especially see in the open source space where software is included",
        "um you know many chains down down the layer during the compile and It's Tricky um so there's a lot of work that still needs to be done with s-bombs we did speak with at least one uh organization that had s-bombs in place for some part of its infrastructure and they are very proud of that and it's a great achievement but that because that feature set is not there in the in the standards it is difficult and then the automation to actually make use of it if you had a database full of s-bombs uh what would you do with it when log4j comes up right so we need Automation and the tooling around it to actually make it useful but I think we all recognize its potential um and I think you know sisa's got a a lot of great work happening on s-bombs there's a lot of energy around around this right now and I think given that if you were to ask me again in five years I think we'd be in a really different place and you know and just just to add on you know another thing that I think cisos for example can really um take away from this review and take it to their boards their their their leadership um is it it really reinforced the importance of asset management and asset inventory you have to know what you have and where and that has been a staple of infosec talks for a long time um but you look at how it can come back to bite you uh in the throes of such a severe incident like this and how it can cause an extended period of continued exposure right to the most severe vulnerability ever discovered and it really actually makes it quite tangible the importance of those bread and butter issues like having good asset management and asset inventory the only other thing I'll just say on this on this piece is that one of the recommendations of the board was that the federal government ought to look at using its procurement power because we buy a lot of software right a lot of software uh to drive software transparency so make software",
        "developers that want to sell to us work on s-bomb work on other ways to have software transparency and use the power of our purse to benefit obviously the software that comes to us but that will drive the market right because they'll use that to the benefit of the entire Community there's a and there's history of that right I think DOD was an early adopter of IPv6 yeah right and uh and even DNS SEC even if they don't really use it there's there they'll pick a standard and they'll say this will be important in the future please Community build to that so yeah so you think then the report is actually amplifies the importance of an s-bomb it's not a a story of where s-bomb let us down it's really shows the like here's a case study of the the promise of s-bomb very much so",
        "right on okay good because I kind of you know I like s-bomb I always feel like that's the opening act of something greater and we have to first get through the the s-bomb before we get to the second act I don't know exactly what the second act is but we need success on s-bomb so we're taken seriously when we come up with a second um the second story of how we're going to secure software at scale or identify problems and so I'm always concerned that if we screw up s-bomb you know we'll be poisoning the well but so I'm very glad that we had some positivity there okay so let's talk about some of the other other findings uh Heather any of your favorite findings or anything that you found that was surprising um or enduring well they're all my favorites that's why they're in there we picked them um but I would say that I think maybe it's the wrong turn but yeah I think following on on your idea of you know where do we go with software ecosystems",
        "um s-bombs we need them uh one of the things we wanted to amplify in the report is some existing work happening amongst the open source foundations in particular the",
        "um the Linux Foundation the open uh security software Foundation openssf had just come together at the White House and released a mobilization plan for open source and within that plan is",
        "some ambitious goals around finding resourcing for this all you know mostly volunteer community who need developer training you know",
        "what would it look like if we could get um you know hobby hackers who write code that go into you know billions of systems some great security training how do we get code audits done one of the big questions we had in this review is you know could someone have caught this uh functionality before it",
        "made it into production and our finding",
        "was only with expertise in the right kind of expertise during a code audit would you have been able to flag that this was a problem and the communities just don't have those kind of resources available to them all the time when they write code and so we know that these organizations have to have the resources for things like that but also how do you get all of your code fuzzed at scale how do you find bugs at scale um and and so these plans are already in place you'll find and then referenced pretty heavily throughout the report but I think you know we're we're somewhat skiing on top of uh you know a pretty good Avalanche of support around the community that is looking at how do we help uplift within uh open source communities and I'll say the final thing I'm excited about in that space is uh an incentive structure that they're calling scorecards and the idea here is that open source projects will get a scorecard and that as they uplift their security their scorecard gets better you can see that fitting in some very interesting ways from an incentives perspective to help not only fund the community but also make security better and we're interested in in you know studying that a bit more as an ecosystem to see you know how will it fit with you know maybe government procurement or s-bombs or you know even companies looking at software when they're trying to figure out is this the right solution for me you know what is the score card say right um so I I think these incentive structures are really important but I think you know there's not anyone that's going to work it needs to be a basket of incentives that we look at and see how they fit together",
        "yeah a couple a couple of the other findings that I thought were really important um one is that log4j is not over this was not like a historic look back but we're in the clear I mean this is what the board yeah so my next my next question was endemic vulnerability so how common are endemic vulnerabilities and is it were you just living with it now right yeah we're gonna be they've happened before but this is one that is so easy to exploit and so what you know ubiquitous that it's just particularly uh critical and",
        "uh the board found that it is likely that organizations are going to be dealing with continued log 4J exposure for years to come maybe a decade or longer so so because it's easy to exploit and it's everywhere wouldn't that be like a fast-moving forest fire like just everything's gonna burn that is going to burn or are you just saying that people will find it it's easy to exploit but they'll just keep doing it for a decade yeah I think I think it's it's a tough one right because it's on one hand if it's so bad it's so easy and so trivial you would think it would just kind of burn itself out everything that could be compromised will be compromised because you don't have to try too hard to get to the code path but well I don't think it's always easy for adversaries to find uh so it's not it's not it's not a simple thing to scan for and so either for the for the environment's host or for an adversary to get in is that where you're gonna yeah yeah I was going to say I think our model for this is probably heartbeat so back in 2014 very serious open SSL vulnerability spread like a forest fire again you had Community surge",
        "um there was a report released very recently that showed there are still many hundreds of thousands of open SSL vulnerable open SSL instances on the internet and I think the analogy here you want to look for is not the forest fire but you know the hot spots that are underneath the forest floor that can flare up at any time um what I will say about the exploitation Trend that we found is that the the very early hours of exploitation on log4j was mostly reconnaissance activity people hearing about the bug trying it out for the first time and then we see the seriousness of it grow over time you get cryptocurrency mining it gets put into ransomware kits um into botnets and then we start hearing from the threat intelligence vendors that you know you know the nation's day doctors are getting involved so I think you'll see the seriousness of some of these increase over time I do think that surge that rally that happened in December of 2021",
        "um really actually did put out a large majority of the early fires very quickly in such a way that uh the easy stuff to exploit got cleaned up but I think you will continue to see you know malicious threat actors innovate the way that they find and exploit this as they learn more about having the capability to do so but it'll be around for a long long time",
        "the other thing that was uh interesting was this was an amazing case study for how information spreads I was going to say like uh who are the early adopters of the exploiters right like who was first to pull position to take advantage oh to take advantage of this well we found we we found that um once the vulnerability became publicly disclosed",
        "you kind of had everybody all the bad guys kind of piling in you had everything from the crypto Miners and the ransomware artists and the commodity so there wasn't one group nation states there wasn't one that was clearly paying the closest attention first to Market to try to lock everybody else out well very importantly when log 4J first broke out publicly there was a lot of speculation out there whether the Chinese government in particular because of uh some of the origin story of the disclosure came out of China may have been exploiting this before it was known to the broader world and actually what the the board found and we we worked closely uh with cloudflare on this to look at their data and others we did not find evidence of exploitation before the existence of the vulnerability uh broke out into the public and so this is an example of fact-finding be like a really key piece of what this board does put down the room put that to bed I will say okay on the on the question of China there's an interesting element",
        "to this story uh so we talked about how Alibaba disclosed the vulnerability to Apache there were Republic sort of news",
        "reports that came out around the time about how the Chinese government sanctioned Alibaba like punished Alibaba",
        "for its role and we were really interested in that as a board because from our view after really looking into it we think that this was a good vulnerability disclosure process and it was uh troubling to us that there would be some kind of punishment and ultimately the board expressed that it was very a troubling uh the regulatory regime that the Chinese government has in place uh surrounding public surrounding vulnerability uh disclosure and",
        "particularly rules that appear to require early reporting of any discovered zero day vulnerabilities to the Chinese gov and the board expressed concern that this could uh give the Chinese government uh Early Access to very serious vulnerabilities before patches could be issued and network Defenders uh could protect themselves uh and so that was a very interesting aspect a very interesting finding did you but we're the board as well were those verified that that actually they actually were sanctioned or you could never get to that well well what what the board uh found through its fact-finding was that um uh the the Chinese government was first informed uh of the vulnerability uh uh on uh by Alibaba on December 13th of last year but the just the public disclosure was December 9th uh December 10th range and so and so we don't believe in this case that that early access was given to the Chinese government right and just worrying but the Chinese government then punished Alibaba so that part was verified they did get punished it wasn't just some online room uh well um uh the um the",
        "Chinese government did not respond to our request to confirm can you responded to other of our requests right and would not uh confirm or deny or otherwise address whether they had um given that punishment out and there's no public accounting or official explanation and so we found that uh troubling right so um",
        "so the next time this happens right you would have to continue to always do these post-mortems to try to see if anything's been taken advantage of to see then if the Early Access had been granted right and then how would that inform our policies and so everybody keep logs",
        "it'll be very useful very useful in the future",
        "um so you mentioned something uh briefly about how information flowed online I just want to briefly talk about that and then I want to kind of close it up with like hearing about what you want the takeaways to be from the public from this audience like what lessons are enduring across findings that will serve",
        "everybody in this audience whether it's log4j or the next thing or are the findings always going to be hyper specific do you think maybe to the specific incident yeah I'll I'll start with the um the information flow and then maybe Heather can talk about some of the recommendations I um so what was very interesting this is really a case study in a sort of a Defcon one scenario of how Network",
        "Defenders get and circulate information and what we found was first of all cyber Twitter Twitter is the center of the universe right okay when it comes to uh information flowing like an emerging infosec uh threat stream not Facebook",
        "you know Twitter Twitter was Twitter Twitter Myspace Twitter was really um Twitter was really uh where it was at okay and what um what we found and people found that really valuable because it's real time um but what we found was that it was also like information over well and it's so ephemeral too right the decision that answer might have been six hours ago and you missed it yeah so that's ephemeral and so here and so what we found is that sisa um the cyber security and infrastructure security agency within DHS played a",
        "really valuable role in sort of being the the sort of collector and authoritative voice on okay here's the best of the vet the best remediation and mitigation",
        "function yeah and it was really valuable and then it also um was really uh sisa did something that I don't believe the U.S that the board could not find another example of the the US government or any other government doing anything similar because it was so hard to know what software products had log4j in it for a ciso um what sisa did was it worked with security researchers to build a GitHub repo with an inventory of all the",
        "software products that were known to have log4j wow so if you're a ciso and you can't figure it out you can just go to sisa in this GitHub repo and you can say okay I know I have these software packages okay the you know a b and c I need to address right that was totally Innovative it was spun up on the Fly very nimbly and with the security research community and so I think what this incident showed was that sisa has this role of being kind of like the lighthouse right you know where there's there's a lot of like there's a lot of great input but it's all over the place you don't know as a network Defender what's the best advice or what's the most current and sister could kind of pull it all out together right on it's a big victory there big victory there",
        "Heather yeah I I think the GitHub uh Innovation was really great and they just sort of give a call out to Kevin Beaumont who who worked on that um I think recommendations wise just to get to the the second part of your question there Jeff um you know our recommendations in the report are broken up into four areas we've actually run through a lot of them here but I I think you know early reads of the report people have focused a lot on uh what I've heard a colleague of ours call Mom and apple pie uh kind of recommendations you know please do your security hygiene please make sure you have it assets but we also do have a section on this kind of the you know the future of software and I think that any review we do that involves software is going to have some some of these components of the software ecosystem must support safety by default and so expect to see that theme come up again and again but I do want to call out kind of the fourth and final section which is really more futuristic so it's sort of mom and apple pie but it's like apples from Mars right a little bit Space Age a little bit futuristic really looking into how we create these good incentives for people to adopt",
        "um the the next generation of safety practices but also taking a little bit of a look at what research do we need to do to build better software that's more self-defending that is more self-aware and upturning this sort of very manual patch",
        "um you know learn about it on Twitter and then patch your whole universe kind of process we can't do that every day of the year at scale and there's enough software now on this planet let alone coming on the moon and on Mars that you know we're going to have to have much more automated much more safety by default software and I think that that really is the kind of pushing the boundaries and why I'm so excited about the board because we really have an opportunity to help levitate some of that to a highly visible view where we can get people working on it",
        "okay final thought where to next what's next for the csrb",
        "um and do you figure this will be you know three of these things a year one a year you wait for the apocalypse you fill in your time in between apocalypses what's what's the vision yeah the the vision is um we are using what we call the off season a term made up our board's executive director Abby dieft uh to uh build up permanent Staffing and infrastructure uh for this board and we are refining procedures and streamlining there was you know an element of the first review of it was the initial Test Flight of the board we had to address certain things and procedural things as they came up and make make calls and now we're into like sort of a maturation phase but I will tell you this um I I believe that the first review proved this concept up I mean there is nobody out there that thinks this is the wrong idea um this is um it's pretty clear to me going to be an enduring institution in the cyber security ecosystem right this is just something that wasn't getting done the way that we have brought together the leading expertise from the public sector and the private sector is just an incredible I mean with the 14 incredible sense of experience and brain power that we have from our members you are looking at a problem from like every perspective and with with over A Century of cyber security experience uh so this",
        "is now about tuning this up uh for future reviews which will surely come fantastic right on well if you haven't read the report it's available online right what are they available online it's a public report right on as as they should all be in one form or another we're committed to that this needs to be transparent for the benefit of the community right on okay well thank you everybody for coming and hopefully you've learned something and we'll see you next time",
        "[Music]",
        "[Music]"
    ],
    "EKkp8chyMZQ": [
        "[Music]",
        "foreign",
        "thank you everybody for being here this is uh evpf elfs jumping through the windows and I am Richard Johnson a senior researcher at trellix products lab and",
        "uh before I get started I just quickly want to give a shout out to our teammates Casimir and Andrea uh",
        "Brilliance interns that I've had the pleasure to work with and contributed to this talk and implementing some of the fuzzing harnesses So today we're going to talk about uh what is ebpf in general what are the origins and applications of this technology stack and this talk in particular is going to be focusing on a new implementation of vbpf that's now coming to the windows platform and so we'll be doing a deep dive into the apis and attack surfaces that are available to Security review and then we'll talk about how we went through each layers of this technology stack to do fuzzing and a little bit of code auditing and talk about some bugs that we found and then I'll just leave with some concluding thoughts on where I think this technology is going and what it means for everybody in the room",
        "so what is ebpf it's the virtual CPU architecture so this is a non-existent CPU it's software CPU much like JavaScript engine or some other emulated",
        "CPU and it was originally designed to do",
        "Network packet filtering as part of the Berkeley packet filters in Linux and it's designed basically as a more general purpose extension execution environment for kernel modules so this is a way to run code in a kernel on a virtual CPU that's sandboxed the way that you uh create a program to do this is you write it in standard C language and you include some special headers and then you can use llvm to compile that to this custom architecture from there you can use traditionally system calls on the Linux side to load these programs into the kernel context and Implement hooks into the network",
        "layers or into code",
        "instrumentation callbacks",
        "in general the system is designed for high-speed inspection and modification of network packets and also the ability to hook both userland and kernel functions",
        "so this all started back in 1992 when BPF was added to the Linux kernel and this is a precursor technology in these days and it was specifically designed to filter Network packets so if you've ever used a TCP dump or Wireshark and you've",
        "used a string to specify a network filter on a certain IP in a port you are in fact interfacing with the BPF implementation inside your kernel those strings those filter strings behind the scenes get compiled into a BPF program on the Fly and that code is then jitted into the kernel and these hooks are implemented in a high performance manner in that way",
        "so we call this old BPF implementation that was specifically for Doing Network filtering the classic BPF",
        "now as of about eight years ago Linux kernel 318 released a new version of this that has extended the concept of the BPF packet filter to a general purpose execution environment they went from having 32-bit instructions to 64-bit instructions they added the ability to use persistent data structures so your BPF programs could store arrays or linked lists or hash tables of information as your hooks are",
        "monitoring Network traffic or functions",
        "getting executed then",
        "your this extension allows you to store that data across different invocations of your ebpf programs on the right hand side some of these screenshots in here I know are not the largest it's okay we have a ton of slides so this is going to be a pretty quick talk uh or paste talk and there's a lot of extra info in there for you to study on your own but in the Linux side it is all implemented through a single system call interface",
        "and inside that system call there are a bunch of sub operations and sub features it's kind of designed in a way that a device ioctal might work where you have a number of commands hidden behind a single kernel interface",
        "one thing about ebpf that's unique is that it implements a static verifier for these programs so because you're able to load code into the kernel they wanted to add some security guarantees so there is not only the virtual CPU execution environment but also a on the Linux side a fairly simple static analysis pass that tries to ensure that memory safety and the programs will terminate within a short amount of time in general applications at ebpf are for Network instrumentation load balancing",
        "monitoring",
        "Telemetry things along those lines and",
        "at this point the system The environment's Fairly mature on the Linux side there are go and rust and Python",
        "and C back ends at all interface with this and at the end of the day they still all call into that system call and um the layout is basically everything",
        "happens in the kernel as far as Linux goes if you use any of these products on Linux then you're already using the ebpf infrastructure things like uh you know Microsoft Defender for endpoints or psyllium for kubernetes things like that",
        "so the last few years at blackcat we've also seen a few talks about the Linux ebpf implementation focusing on red team applications and I myself just gave a talk a couple weeks ago at tour camp and last fall at tourcon that talked about basically writing root attack and defense but kind of a tripwire style",
        "whitelisting for binary execution as well as the ability to inject code into executables as they launch",
        "so switching Focus to the windows timeline basically um you know we saw it was sorry 2014 is when it was added to the Linux kernel as of last year in May Microsoft announced their intent to bring this platform to the windows side of the house now of course we all know that linux's GPL kernel and windows of course cannot adopt that code directly into their",
        "kernel so they had to come up with a way to re-implement the entire technology stack and so that's kind of why this is interesting it's a net new set of code that implements something that we've seen be seen grow and become adopted heavily on the Linux side and is really all indications point to this being the general platform for the future for doing telemetry so in 2021 Microsoft announced that they",
        "had implemented two Network hooks that",
        "uh can be interfaced with through ebpf programs you use the exact same compiler stack you use llvm you output the exact same byte code for this virtual CPU internally it's all similar the",
        "differences of course are how Microsoft re-implemented these interfaces and plugged them into the kernel so in August they announced that they",
        "had matured some of that code and added I guess it was closer to November but they had added about 68 apis that are part of the standard Linux API set for doing ebpf instrumentation and as of",
        "this February they released kind of their first functioning implementation of a program that runs on top of the windows ebps stack and that was the psyllium layer 4 load balancer so as of this February from last May until this February they've more or less implemented a bare minimum you know minimum viable products for doing ebpf and that was about the time of course that the black cats cfp was around and I'd already done some research into this so I figured we would continue down that path and see what kind of security like architecture is there and what exposure is there for attackers",
        "um so on Linux as I said it's all in the kernel on Windows we see this diagram on the right it comes from the windows ebpf project and it shows that basically we have several different components both in user land and kernel uh orchestrating together to create this overall system",
        "and in particular Microsoft adopted two open source projects the rbsd licensed the i o visor ubpf implementation which",
        "that's the virtual CPU and the Prevail static verifier which was an academic work that tried to enhance the security guarantees around the static analysis engine and I'm going to dive into each of these components you'll see them blown up and so um here we go the",
        "current implementation so on Linux you can hook as I mentioned functions in user land and kernel as well as do Network instrumentation on windows so far they've only focused on the network stack so right now they're interested in using ebpf in places like the cloud space to do virtual networking to do load balancing to rewrite packets on the Fly and distribute them to other systems things like that um it is shipped as a standalone component and in conversation with Microsoft they've indicated that this shipping model is designed so that when you write these programs which effectively are kernel modules um you don't need to go through the standard driver signing and Driver verification",
        "process that you do with Windows and so you have a much faster serviceability model which is one advantage to this and because everything here is MIT licensed it can also be consumed by third-party products and shipped as a component of an overall system such as an xdr or EDR platform",
        "on Windows it works as I said just the same way you use clang llbm back ends you write a simple Hello World style",
        "program there's some special apis that allow you to do things like print to the screen or the logs and you'll see there's this annotation here that shows SEC bind what's really happening is that's indicating that we're going to add a special section to the elf file that is going to contain this particular function now ppf programs themselves are",
        "one function long but they do have the ability to call into each other so if you compile that hello world you'll see that an elf file is generated and in the text segments there's actually no bytes size zero but there is a new segment called bind and that is hex 68 bytes and so that was where our compiled program was put and you can also use llbm Ops dump to inspect that section and you'll see this virtual",
        "CPU representation of instructions down there on the bottom right for a later reference if you look at these slides here's a couple screenshots of a full program and it shows that there's multiple sections in here some of them holding these data structure maps and other ones doing things like Network packet inspection",
        "so the different types of programs ebpf programs that you can Implement correspond to the types of hooks that you want to leverage and so at the lowest layer of network stack there's something called XDP and this is a layer that actually is coming directly out of your network driver and before it really reaches the rest of the windows kernel and so if you implement an ebpf program at the XDP layer you're actually able to rewrite packets and resend them out of the box before their ever technically received by the OS itself very fascinating stuff binds uh is a type of program that allows you to respond to Port binding",
        "and accept and general listen and those",
        "types of apis and then there's a handful of C group related and sock operations related hooks that you can Implement as well again this is just for a visual to show you that there's a set of apis we don't need to talk about them specifically but these apis allow you to do things like interact with the maps create the maps pull data store data call other programs",
        "things like that figure out what CPU you're running on or what thread you're on and you will use this to also interact with other kernel",
        "apis perhaps",
        "so ultimately what's the security model around ebpf for Windows well it's allowing us to run unsigned code on the Kernel right so any break in the security model or implementation here is going to be a driver signing enforcement bypass because we're already getting our code into the kernel and if the security guarantees are not valid and we're able to break them then of course that means that we're getting native code execution in the kernel now the implementation of Windows ebpf we're very early on the curve here as I mentioned there's no function pointer Hooks and there's no there's just basic networking but and because of that the",
        "tackles that are on access to the kernel object or to the apis themselves through RPC are restricted to administrator",
        "so ultimately we'll talk about kind of what the attack objectives would be but we have to keep in mind that you have to be administrator to interface with this subsystem currently and and therefore",
        "the attack model is going to be something that more or less is you know Colonel as an administrator we can already read memory from the kernel so really what we're looking for is ability to write out of bounds or to get full code execution",
        "um and so of course the byte code is that is generated by llbm is then loaded by the static verifier and uh we'll make sure that it's not violating those security guarantees",
        "I should mention on the Linux side there is a part of this attack surface that is available to unprivileged users and so you don't always need to be route to call the BPF system call and in the source code of the windows implementation they do have comments in there that indicates that in the future some of these apis will be opened up to standard users",
        "um so Prevail is the name of that static verifier as I said and it's using abstract interpretation so that it can do things like pointer analysis and check that you have",
        "um if you have a pointer return from an API you have to check it for null before you can actually dereference it it has all these built-in analyzes which are",
        "much more sound than what is in the Linux kernel in theory also in ebpf as opposed to the classic implementation we can do things like actually Implement loops and tail calls into other evpr programs",
        "and as I mentioned uh this is all net new code using i o visors ubpf stack interesting",
        "thing about ubpf is that it can run both in userland and kernel contexts the U stands for user mode or user space and what this also means is that we can leverage this virtual CPU in other contexts than just the ebpf stack so in",
        "this case we're plugging into the kernel to do Network introspection in other cases it may become a replacement for Lua or V8s or JavaScript engines in general in other places so it's in general a really interesting platform to consider all right so what are these security guarantees that's uh the solid ties together well number one because these are meant to be high performance filter hooks uh they have a limit of 4096 instructions that can be in a single function and so the static analysis is able to in fact unroll loops and ensure that you will terminate the old halting problem but since they have restrictions on the execution they're able to prove that it will in fact terminate and as I mentioned it tries to ensure that your pointers when you reference them are pointing within bounds of buffers that you control and have permissions to access and that you're doing basic checks on return values also that your stack pointer is within bounds there's a dedicated chunk of memory for your VM to be executing in all these sorts of things and in fact as we'll see in a moments the service itself can be run in a hypervisor code Integrity mode in the future it's kind of in progress so the attacks that we're looking for since we are administrator is that we would like to get code execution as admin and the first way that you could do that is if you load a security module or ebpf module that comes from a third-party project because you want to collect Telemetry on your system and so you go off to GitHub and you download and compile evpf program and that's one attack where you would get user mode administrator privileges then there is the trusted service which exposes an RPC endpoint and this is uh a",
        "PPL process so it's highly privileged it's considered part of your trusted Computing base so any vulnerability there is the equivalent of having direct right access to the kernel then of course there is the static verifier or the jit engine itself if either of those as they process the code read out of bounds or write out of bounds that would be a vulnerability as well as there's an interpreter mode so same idea there and then there's a whole ioctal layer which of course comes with its own implementations of handling the each eye octal request before it interfaces with the ebpf subsystem itself and then finally these hooks that",
        "exist that hook into the network packet layer themselves these are you know grabbing packets and preparing them into data structures that the ebpf platform can access and so there's some memory management happening there where those hooks themselves could be exposed to potential remote over the wire Network packet attacks",
        "so uh and I am going to try to go as quick as possible here but the first component that we're interested in is the userland API set and that is contained in the ebpf api.dll and basically this is where uh the loading where the the user land user administrator will be able to load BPF programs unload uh get a list of what's loaded add Maps kind of interrogate the system in general it's the equivalent of executing the system calls directly and uh it does come with two tools that you would",
        "interface with one is a standalone tool called BPF tool and another is a plug-in to the net shell um Windows kind of wmi backend",
        "so what we want to do is fuzz each of these layers directly and in order to fuzz the API layer we know that this the entry point to interacting with that is basically to give it an elf file that clang emitted or to give it a raw stream of byte codes and then that will pass it to the verifier so",
        "um we ended up fuzzing this two different ways I actually fuzzed this the um Prevail and ubpf independently uh",
        "quite a while ago and found some crashes so we did some cross-fuzzing there where we just took the output of fuzzing these components independently on Linux and then ran them through these loader tools on Windows and",
        "um so we'll talk a little bit more about the bugs that we found in the individual components but the first big bone that I found was as a result of this approach and it hits that very first attack goal",
        "which is we found a vulnerability that gives you remote code execution or arbitrary code execution through the loading of an L file that contains this ebpf bytecode so this particular vulnerability results in heat corruption which calls free on a user-controlled pointer and if a",
        "administrator were to load your filter then you get remote code execution on that box as admin the outputs shown below here is showing the um Windows debug verifier showing that",
        "there was a corrupted suffix pattern on a heat block and if we look at the location that it says the corruption address is at we see that there's four A's that I've conveniently placed there to show you that you know it's hacked so this attack would ultimately allow you to control a free pointer which isn't typically a exploitable scenario if you have enough control of memory and",
        "here's a little call stack that shows how we got there the way that this was doing the free it was in the destructor for an ebpf program and it was dealing",
        "with an array of ebpf instructions so it's just trying to free all the objects that represent the instructions and the way that that allocation occurred that was missized was due to the processing of relocation entries in the L file itself so you generate ebpf program l-file there's a relocation section and",
        "as that gets parsed it's being done in a loop and because this is an L file you have the ability to require segments and sections to be loaded at kind of arbitrary places of memory you have a high degree of control of memory and you also have a looping constructs as it's parsing through these different sections you can of course have multiple sections as many sections as you need and so the combination of having a good degree of memory control and a looping based",
        "parser means that I didn't have time to fully exploit this myself in the time that we had allowed but it's definitely would be an exploitable class bug",
        "so moving past the user mode API the next layer is that service the PPL process and this is as you see in the blown up diagram here primarily all this actually is is it implements one RPC endpoint one API that you can call and uh it that API simply says look verify and load program and you pass it the data structure that has been generated by that first dll that has pulled the byte codes out of the L file and now has prepared a array a data structure that holds the instructions and passes that over and um",
        "and the attack surface that should be available here is the Prevail verifier and then ultimately the jit compilation that happens after verification succeeds",
        "and if you get in there the the API is you know quite",
        "um layered and so you know there's several",
        "API calls that kind of get you to the same point whether you're using the dll or the RPC API they all kind of get to the the same API call and so when we were fuzzing the dll we were also actually already fuzzing through the RPC endpoint we did try to",
        "oh sorry before I get there um so we did fuzz these components individually of course so Prevail verifier and ubpf so",
        "the Prevail verifier you can go look up the paper it's a polynomial runtime ebpf verifier using abstract interpretation layer all that really means is they're using a lot of math to try to um you know do this pointer analysis and",
        "it can be used anywhere that ubpf can conveniently it comes with a standalone verifier tool and so this of course was the tool that we harnessed and this is very simple and straightforward it takes a file input so we can use our trusty AFL plus plus to do that fuzzing so I did this buzzing actually last fall prior to my tourcon talk independently when I was looking at the Linux side of ebpf and so here on the screenshot you can see that it found some crashes when we run those crashes through a cool a tool called AFL collect again I realize it's kind of small you can look later but this first screenshot shows that we have found 303 crash samples and and what I noticed",
        "in here is that some of these are handled aborts you know they're doing asserts that lead to a board so I filtered those out and then we're down to 56 unique crash samples and we do see the the red lines that we see here are basically bang exploitable saying that this is likely an exploitable crash and here's a couple pages of crashes so right so so I knew going into this project that the verifier itself had some vulnerabilities in there um a blown up screenshots of what one of those bugs was it was indicated as probably exploitable in fact in this particular case it was not really exploitable it thought that it was a right a memory right but it's actually on the test instruction so it's dereferencing a value turns out to be read AV not too crazy well so we had this pilot crashes though and we knew that we wanted to run them through the windows side is kind of the idea same thing on the ubpf side ubpf can run in an interpreted mode or in a jit mode so ultimately this",
        "ubpf does not Implement any of the maps or any of the helper functions it's just a pure virtual CPU so really we're just trying to execute out of bounds or read or write out of bounds of the virtual CPU environment and so if we fuzz the interpreted mode found some crashes again AFL collects",
        "shows us these red lines that say there's exploitable bugs there and in the jet mode it got even crazier",
        "um all kinds of exploitable crashes but as it turns out the heuristics around this weren't that great and so at the time that we found all these bugs um you know I didn't submit them all to these open source projects because a I didn't know that these were going to eventually make their way into Windows yet but B because a lot of these were low-grade um you know issues that ultimately I was waiting for a more significant project to use the CPU in a meaningful context and so we had all these bugs um and just kind of knew that we would want to follow up now here this this is one that we did find uh and replicate in the kernel side",
        "um this one is showing a vulnerability in the ubpf destroy where it is freeing the virtual machine as it's trying to terminate the program and",
        "um in this case the pointer was corrupted",
        "so these components are sitting inside this ebpf service dll and we",
        "fuzz dots both with WTF but actually when we once we got to this component Microsoft started doing their own fuzzing sometime in June late May June and um ultimately the bugs weren't",
        "reachable or they were already patched and so the ebpf service itself the PPL service turned out fairly clean uh as far as exploitable bugs go so then the last area that we wanted to switch to is of course discovering what this kernel driver exposes because that's really where the where everything's going to end up eventually and of course it exposes a nice eye-octal interface and as I mentioned before the dackle on this device object does require administrative privileges so we are looking for unsigned code execution ideally",
        "the interfaces that are exposed through ioctal allow you to you know resolve functions and maps and load programs get",
        "the next program ID interact with ring buffers and data structures and all these sorts of things plenty of interesting memory uh modification going",
        "on there and so this is kind of where the majority of the attack surface that became interesting uh existed",
        "and because it's in the kernel context we can't use Simple AFL style approach or cross-fuzzing really we needed to come up with another approach and so in this case we leveraged the tool called WTF fuzzer from Axel touche that was released last year also known as overclock and the way that this fuzzer works is we take a snapshot of the complete operating system memory from the kernel debugger and we write that to disk and then there's a component using the Box CPU emulator x86 emulator 64-bit and we",
        "it's an emulation based snapshots uh",
        "fuzzer and ultimately this allows us to set a breakpoints at the entry point to any function we want whether it's userland or kernel and replace the contents of buffers being passed to those apis to do our fuzzing other advantage of this is that it is distributed so you run one server and it uses TCP sockets and communicates over the wire from clients to implement a harness you more or less just need to write three functions and one that inserts the test case and moves the newly fuzzed data into the buffer that is in the memory snapshot and then some initialization for catching calls to swap contexts or other functions that you would either want to modify or you just want to force terminate your fuzzing session",
        "um due to time constraints this is just kind of an introduction to WTF as being a powerful tool for doing kernel fuzzing uh you'll have to go look a little bit further on your own but uh ultimately it comes with a demonstration fuzzer that is able to do type length value network fuzzing using multiple packets so we Fork that modified it so that instead of hooking the network sockets we hooked below the device i o control file API and you'll",
        "see in the call stack here that ultimately from the user lands where you would normally call device i o control it passes through several layers until you get to the kernel side Handler for all that and we replace the contents of those buffers each iteration and then we had to use a json-based serialization format that could hold multiple ioctal requests so our whole goal here is to be able to send you know a dozen eye octals at once that kind of manipulate the same Maps or programs looking for various vulnerability classes and so ultimately we serialized the contents of what the ioctal data buffer would be and add a little bit of metadata around that in order to re-execute those or to inject that data properly from our WTF hooks",
        "so when you run WTF clients it looks something like this and if we have time I will do a live demo but um basically this is showing a client booting up and outputting occasional",
        "updates on the left hand side is the iteration number and how many blocks it's covered and how many executions is getting a second now the execution is a second here per client is quite low it's only in you know 15 to 20 kind of executions a second but that's because we're sending up to 10 ioctal requests at once so we're activating a lot of behavior inside the kernel if you only do one it can be up to 10 times faster basically and of course we can scale this across many CPUs so we were ultimately using like 40 cores and getting 300 executions a second or something on the server side when you initialize it it boots up and shows you that it's starting to receive information from the clients and ultimately we're looking for outputs that are being saved as crashes that we can then go replay and test so the results of our kernel driver fuzzing did come up with a handful of crashes unfortunately most of these are robustness kind of layer crashes because you're already administrator so we did get out of bounds read access violation which of course tears down the system and causes kernel to panic but at the end of the day you know you're already administrator so technically you could probably shut down the system if you want to um but you know here's the call stack for that as I mentioned the uh uh ebpf core invoke protocol Handler",
        "I believe that's where we were squirting in our data um there was another one this is the ubpf destroy API it's the same bug that I mentioned I found in the user land side but here it exists in the kernel because the kernel has the jit engine inside of it um and or has The Interpreter inside of it rather and so that same code is both present and user land and kernel and so depending on how you interface with apis you can trigger those bugs either in userland or in the kernel and then yet another uh crash and trampoline table uh and so on and so forth so overall you know our goal here was a if we could find exploitable bugs then great and we did and you know that first vulnerability to give you administrator access and then we wanted to just continue to do robustness testing in an overall Deep dive into the security design here to get a sniff test of you know how how well has this code been fuzzed or checked done Security",
        "reviews and it is a moving code base it is a young code base we did expect that there would be various problems like this it's not unexpected and as I said Microsoft has begun fuzzing sometime in late May and in June and they're very rapidly fixing a lot of these bugs um so some of these we didn't bother submitting you know just because they're read AVS and all the references if you're wondering what the outputs of the fuzzer looks like where it has multiple packets here's a little screenshot that shows what that Json format looks like when it actually contains a number of requests and then also to continue our fuzzing uh we wanted to experiment with AFL Knicks which is American fuzzy Lop plug-in that",
        "interfaces with a hypervisor based snapshot fuzzer called NYX or kafl that was used previously called and because",
        "we spent about a month or at least three weeks fuzzing before we really started switching to Nyx we didn't find any new bugs but of course we did still find similar bugs to the ones that we had found before and we weren't reusing the you know harnesses or crashes or anything it was going from the same template so one thing to notice about this is that a single core was getting 65 executions a second instead of just 15 or 20 and so we do see that nyx's uh substantially faster it's just a little bit more difficult to set up and scale so that leaves the last bit of attack surface which are these kernel extension modules and the network hooks are",
        "implemented in a kernel extension module and in the future there should be something that implements detours or code hooks in a different extension module the network one is called net ebpf extension and this one was small but a bit complicated to fuzz because as I mentioned this is going to be what reads the packets off of the wire and implements the hooks that will pass the data to your evpf program and so we're interested in just that little chunk of code that does that translation and so in this case we actually did a code audit both myself and Andrea just read the code there wasn't a lot of memory management happening it does a lot of zero copy just pointing at things and so we didn't come up with any new bugs there lastly as I said the code hooks will be implemented in their own extension modules so that will be a thing for the future and uh really quick because I we do have two minutes and that should be just enough time to do the live demo uh if I switch",
        "here okay so",
        "this is going to just be a demo showing us running um the WTF buzzer and finding bugs in real time",
        "um in this directory this is the WTF directory I",
        "have a bunch of metadata there so we're going to delete all the crashes and the inputs and the outputs from the previous run I'm going to dump the list of Json packet harnesses that we've created and then we're just going to copy one over just the create program Json",
        "so what we're seeing here though is that these were all um ioctals that we created a plane",
        "structure to feed into the fuzzer so that it would do these individual requests and then those get mutated over time and expanded and modified to find the crashes and so lastly I'll just kind",
        "of tell it to quickly launch a screen session which will have eight clients connecting to back to the server fuzzing RI octals we will not copy the previous inputs this is showing at booting up an h-top so I'll exit out of that we will",
        "[Music]",
        "okay and so what we're seeing here is that in fact I actually I started this run in the speaker room so this is the wrong screen but what we see here is that it has been running for a little while and we've got eight nodes connected we're getting 100 executions I'm sorry 16 nodes now 100 executions a second and it has found uh 20 000 crashes since a couple hours ago so concluding thoughts um",
        "I'm sorry we're uh on the last minute here but uh in general ebpf is an exciting technology it's going it's going to be the underpinning of telemetry now and in the future it's coming to Windows uh windows will be able to run the exact same abpf programs they're portable and um Microsoft has uh joins the ebpf",
        "foundation which is part of the Linux foundation and so there's a lot of weight behind it so did Netflix and a few other Cloud players and we found one serious vulnerability found a handful of robustness vulnerabilities applied",
        "fuzzing at various different layers and ultimately we're here as trellix to do proactive research on security for the public and for the future so thank you very much for attending my talk and yeah",
        "[Music]",
        "[Music]"
    ]
}