<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: VB2019 paper: Pulling the PKPLUG: the adversary playbook for the long-standing espionage activity of a Chinese nation-state adversary</title>
<meta name="description" content="The discovery of two malware families with significant, mostly infrastructure-based overlaps with previously seen malware, such as 9002, PlugX, Poison Ivy and FHAPPI, has led us towards what appears to be an undocumented nation-state group, or groups, in China that we refer to as PKPLUG. This paper details some of the PKPLUG campaigns, describing the tooling used and, with MITRE’s ATT&amp;CK framework and other models that underpin Unit 42’s adversary playbooks, highlight PKPLUG’s behaviour with some overlapping TTPs." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 6724;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-vb2019-paper-pulling-pkplug-adversary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary"></a>VB2019 paper: Pulling the PKPLUG: the adversary playbook for the long-standing espionage activity of a Chinese nation-state adversary</h1>
<h3><a class="chapter" name="h3-alex-hinchliffe"></a>Alex Hinchliffe</h3>
<p><em>Unit 42, Palo Alto Networks, UK</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-15352" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-15352" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-abstract">Abstract</a><br /> <a class="toc-level2" href="#h2-introduction">Introduction</a><br /> <a class="toc-level3" href="#h3-pkplug">PKPLUG</a><br /> <a class="toc-level4" href="#h4-targeting">Targeting</a><br /> <a class="toc-level3" href="#h3-xiaomi">Xiaomi</a><br /> <a class="toc-level3" href="#h3-adversary-playbooks">Adversary playbooks</a><br /> <a class="toc-level2" href="#h2-malware-used-pkplug-adversary">Malware used by the PKPLUG adversary</a><br /> <a class="toc-level3" href="#h3-henbox-android">HenBox for Android</a><br /> <a class="toc-level4" href="#h4-delivery-third-party-app-store">Delivery via third-party app store</a><br /> <a class="toc-level4" href="#h4-right-app-right-time">The right app at the right time</a><br /> <a class="toc-level4" href="#h4-henbox-capabilities">HenBox capabilities</a><br /> <a class="toc-level5" href="#h5-execution-flow">Execution flow</a><br /> <a class="toc-level5" href="#h5-behaviour">Behaviour</a><br /> <a class="toc-level4" href="#h4-infrastructure-and-related-overlaps">Infrastructure and related overlaps</a><br /> <a class="toc-level5" href="#h5-ties-previous-activity">Ties to previous activity</a><br /> <a class="toc-level3" href="#h3-farseer-windows">Farseer for Windows</a><br /> <a class="toc-level4" href="#h4-ties-henbox">Ties to HenBox</a><br /> <a class="toc-level4" href="#h4-c2-server-structure">C2 server structure</a><br /> <a class="toc-level4" href="#h4-malware-execution-flow">Malware execution flow</a><br /> <a class="toc-level4" href="#h4-targeting">Targeting</a><br /> <a class="toc-level2" href="#h2-constructing-adversary-playbook">Constructing an adversary playbook</a><br /> <a class="toc-level3" href="#h3-attampck">ATT&amp;CK</a><br /> <a class="toc-level3" href="#h3-stix">STIX</a><br /> <a class="toc-level3" href="#h3-attack-lifecycle">Attack lifecycle</a><br /> <a class="toc-level3" href="#h3-playbook-viewer">Playbook Viewer</a><br /> <a class="toc-level3" href="#h3-defence-analysis">Defence analysis</a><br /> <a class="toc-level2" href="#h2-pkplug-adversary-playbook">PKPLUG adversary playbook</a><br /> <a class="toc-level3" href="#h3-henbox">HenBox</a><br /> <a class="toc-level3" href="#h3-farseer">Farseer</a><br /> <a class="toc-level2" href="#h2-conclusions">Conclusions</a><br /> <a class="toc-level2" href="#h2-references">References</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-abstract"></a>Abstract</h2>
<p>The discovery of two malware families – HenBox for <em>Android</em> and, recently, Farseer for <em>Windows</em> – with significant, mostly infrastructure-based overlaps with previously seen malware, such as 9002, PlugX, Poison Ivy and FHAPPI, has led us towards what appears to be an undocumented nation-state group, or groups, in China that we refer to as PKPLUG. The malware families, infrastructure, and campaign delivery used by PKPLUG highlights broad targeting of multiple sectors and victims in and around the Southeast Asia region and beyond. This research will detail some of the PKPLUG campaigns, describing the tooling used and, with MITRE’s ATT&amp;CK framework and other models that underpin <em>Unit 42</em>’s adversary playbooks, highlight PKPLUG’s behaviour with some overlapping TTPs.</p>
<p> </p>
<h2><a class="chapter" name="h2-introduction"></a>Introduction</h2>
<h3><a class="chapter" name="h3-pkplug"></a>PKPLUG</h3>
<p><em>Unit 42</em> uses the moniker ‘PKPLUG’ in reference to a threat actor group, or groups, that we have been tracking for a few years. The name comes from the adversary’s use of PlugX malware, which we noted in their early campaigns, and from the use of ZIP archive files to deliver the malware; the ZIP file format contains the ASCII magic bytes ‘PK’.</p>
<p>Over the years, <em>Unit 42</em> has investigated PKPLUG and has discovered further malware families being used, including other custom malware for <em>Android</em> and <em>Windows</em> that will be described later in this report. Other malware families that have been seen relating to PKPLUG include ‘usual suspects’ Poison Ivy, Zupdax and 9002.</p>
<p>Based on targeting, the content in some of the malware, and ties to infrastructure documented publicly as being linked to Chinese nation-state adversaries, <em>Unit 42</em> believes with high confidence that PKPLUG has similar origins.</p>
<p> </p>
<h4><a class="chapter" name="h4-targeting"></a>Targeting</h4>
<p>Based on our observations of PKPLUG’s campaigns and what we’ve learned from sharing with industry, we believe that its victims lie mainly in and around the Southeast Asia region. This report will provide further details, but to be more specific, considering the methods used for malware delivery, the social engineering topics of decoy applications and documents used, and the command‑and-control (C2) infrastructure themes, target countries include (with higher confidence): Xinjiang, Mongolia, Myanmar and Taiwan; and (with lower confidence): Tibet, Vietnam and Indonesia.</p>
<p>Three of these countries are ASEAN members [<a href="#ref1">1</a>], contributing towards intergovernmental cooperation, and another three are autonomous regions (AR) [<a href="#ref2">2</a>] of China that tend to be classified by China’s ethnic minorities, granted the ability to govern themselves but ultimately answering to the People’s Republic of China (PRC). Of the five autonomous regions, Tibet and Xinjiang are the only ones in which the ethnic group maintains a majority over other populations.</p>
<p>Most, if not all seven target countries are involved in some way with Beijing’s Belt and Road Initiative (BRI) [<a href="#ref3">3</a>], designed to connect 71 countries across Southeast Asia to Eastern Europe and Africa. The path through Xinjiang is especially important [<a href="#ref4">4</a>] to the BRI’s success but is more often heard about due to conflicts [<a href="#ref5">5</a>] between the Government and the ethnic Uyghur population [<a href="#ref6">6</a>]. News of the BRI is peppered with stories of success and failure; of countries opposed to it, or buying into or pulling out of BRI projects.</p>
<p>Further tensions in the region are attributed to disputes over ownership of the South China Sea, including disputes over fishing quotas and the yet unproven oil and gas reserves [<a href="#ref7">7</a>]. At least three of the target countries mentioned above have laid claim to parts of these waters, and some use the area for the vast majority of their trade; foreign militaries are also involved, attempting to keep the area open.</p>
<p>Taiwan (a.k.a. Republic of China), which isn’t an AR, and which doesn’t appear to be actively involved with the BRI, has its own long-standing history with the PRC; a recent $2BN+ arms sale with the US [<a href="#ref8">8</a>] may exacerbate matters.</p>
<p>The ultimate objective of PKPLUG is not entirely clear, but the backdoors and espionage malware used indicate that tracking victims and gathering information is key.</p>
<p> </p>
<h3><a class="chapter" name="h3-xiaomi"></a>Xiaomi</h3>
<p>HenBox malware, described later in this report, references <em>Xiaomi</em>, hence this section.</p>
<p><em>Xiaomi</em> is a firm that designs, develops and sells smartphones, mobile apps, laptops and related consumer electronics. The firm released its first smartphone in August 2011 and rapidly gained market share in China where it became the largest smartphone company in 2014. In 2017, <em>Xiaomi</em> became the world’s fifth largest smartphone company and overtook <em>Samsung</em> to become the number one smartphone brand in India. Now in fourth place in worldwide smartphone manufacturers behind <em>Apple</em>, <em>Huawei</em> and <em>Samsung</em>, the firm has yet to enter the US smartphone market space.</p>
<p>Figure 1 shows <em>Xiaomi</em>’s performance against other manufacturers. According to the International Data Comparison (IDC), Asia Pacific (excluding Japan) remains <em>Xiaomi</em>’s most important region, with China, India and Indonesia accounting for the majority volume [<a href="#ref9">9</a>].</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/84fd164e886b4ac75012bfae861a9090_f4458.png" alt="HenBox_IDC_stats.png" width="800" height="486" /><span class="centered-caption">Figure 1: Xiaomi's performance against other manufacturers.</span></p>
<p>Over the years <em>Xiaomi</em> has also expanded into the smart home and IoT device ecosystem, producing many devices for the smart home, managed by the <em>MiHome</em> app for smartphones.</p>
<p> </p>
<h3><a class="chapter" name="h3-adversary-playbooks"></a>Adversary playbooks</h3>
<p><em>Unit 42</em> [<a href="#ref10">10</a>] is the threat intelligence team at <em>Palo Alto Networks</em> that analyses available data to identify adversaries, their motivations, resources and tactics in order to better understand the threats our customers face. Adversary playbooks provide a threat intelligence package in STIX 2.0 for ingestion by machines for research or protection purposes. These packages also include structured details about attack campaigns and adversary behaviours – their tools, techniques, and procedures (TTPs) – as well as the expected indicators of compromise (IOCs). <em>Unit 42</em> aims to release adversary playbooks alongside research published.</p>
<p>The concept of adversary playbooks is straightforward: just as sports teams create offensive and defensive playbooks to win matches, adversaries also have offensive playbooks they employ during cyber attacks in an attempt to compromise organizations.</p>
<p>Network defenders, threat researchers and others can create adversary playbooks through observation of live or past attacks; by sharing data; and through intelligence analysis. Those playbooks can then be used to better defend networks and describe threat actor groups. Combining multiple playbooks, and thus others’ visibility and data sets for the same attack or adversary, will ultimately provide a much better picture of the opposition we face.</p>
<p>In order to be successful and useful for many different use-cases, adversary playbooks must use a structured format that can be shared. We decided not to develop a proprietary format that would potentially make it exclusive to <em>Palo Alto Networks</em>, and instead we make use of Mitre ATT&amp;CK [<a href="#ref11">11</a>], Attack Lifecycle or Cyber Kill Chain(™) [<a href="#ref12">12</a>] and STIX [<a href="#ref13">13</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-malware-used-pkplug-adversary"></a>Malware used by the PKPLUG adversary</h2>
<p>We know that the attacks carried out by the PKPLUG actor used multiple malware families, all of which provide backdoor, remote access and spying capabilities. The following sections describe only the newly discovered malware – HenBox and Farseer – in more detail.</p>
<p> </p>
<h3><a class="chapter" name="h3-henbox-android"></a>HenBox for Android</h3>
<p>In early 2018, <em>Unit 42</em> discovered [<a href="#ref14">14</a>, <a href="#ref15">15</a>] a new <em>Android</em> malware family that we named ‘HenBox’ based on metadata, such as app package names and developer signer information, found in most of the malicious apps analysed. At the time of writing, <em>Unit 42</em> is tracking over 400 HenBox samples dating back as far as late 2015, and continuing to the present day.</p>
<p>HenBox often masquerades as legitimate <em>Android</em> apps, such as virtual private network (VPN) apps, <em>Android</em> system apps and so on. Occasionally, HenBox will install legitimate versions of these apps as well as itself, tricking users into thinking they have installed the desired app. Whilst some of the legitimate apps HenBox uses for such decoys can be found on the official <em>Google Play</em> app store, HenBox apps themselves have only been found on third-party (non-<em>Google Play</em>) app stores.</p>
<p>HenBox appears primarily to target the Uyghurs – a minority Turkic ethnic group that is primarily Muslim and lives mainly in the Xinjiang Uyghur autonomous region in Northwest China. It also targets devices made by Chinese manufacturer <em>Xiaomi</em> and those running <em>MIUI</em>, an operating system based on <em>Google Android</em> made by <em>Xiaomi</em>. Smartphones are the dominant form of Internet access in the region [<a href="#ref16">16</a>], and Xinjiang was recently found to have a higher number of Internet users than the national average in China [<a href="#ref17">17</a>]. The result is a large online population that has been the subject of numerous cyber-attacks in the past [<a href="#ref18">18</a>, <a href="#ref19">19</a>, <a href="#ref20">20</a>, <a href="#ref21">21</a>].</p>
<p>Once installed, HenBox steals information from the device from a myriad of sources, including many mainstream chat, communication and social media apps. The stolen information includes personal and device information. Of note, in addition to tracking the location of the compromised device, HenBox also harvests all outgoing phone numbers with a ‘+86’ prefix, which is the country code for the People’s Republic of China (PRC). It can also access the phone’s microphone and cameras.</p>
<p> </p>
<h4><a class="chapter" name="h4-delivery-third-party-app-store"></a>Delivery via third-party app store</h4>
<p>Of the 400+ samples <em>Unit 42</em> has seen, the vast majority, if used in attacks, have no associated delivery method. It is believed that such apps, as with many other malicious <em>Android</em> apps, would be delivered to victims via websites or file-sharing forums, possibly from links shared in phishing emails or SMS messages. Social media platforms and messaging – which support the larger file sizes often needed for <em>Android</em> package (APK) files – could also be used. The large file size is the reason phishing emails with HenBox attachments are unlikely to be the delivery mechanism.</p>
<p>In May 2016, a HenBox app – an APK file – was downloaded from the uyghurapps[.]net website. The domain name, language of the site and app content hosted on the site suggest that this is a third-party app store for which the intended users are the Uyghurs. Third-party app stores are so called because they are not officially supported by <em>Android</em>, and they are not provided by <em>Google</em>, unlike the <em>Play Store</em>. Third-party app stores are ubiquitous in China for a number of reasons, including increasingly powerful Chinese original equipment manufacturers (OEMs), a lack of an official Chinese <em>Google Play</em> app store, and a growing smartphone market.</p>
<p>At the time of analysis, the uyghurapps[.]net website hosted a number of secure communication, VPN and social media apps. Given what we know from the media about the region, it’s clear that such apps are critical for the population to protect themselves and communicate with others.</p>
<p>The HenBox app downloaded from uyghurapps[.]net was masquerading as an another app, <em>DroidVPN</em>. At the time of analysis, the content served on uyghurapps[.]net at the URL from which HenBox was downloaded was a legitimate version of <em>DroidVPN</em>. The app page, where users can download the app and learn more about it, is shown in Figure 2. It’s highly likely that the page looked the same during the time HenBox was available, and that the APK file for <em>DroidVPN</em> was simply replaced with a copy of HenBox.</p>
<p><img class="framed" style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/d7fd7eb831ba4ce41b2ec102645742be_f4459.png" alt="fig2-droidvpn.png" width="580" height="668" /><span class="centered-caption"> Figure 2: The uyghurapps[.]net app store showing the current DroidVPN app.</span></p>
<p>VPNs allow connections to remote private networks, increasing the security and privacy of the user’s communications. According to the <em>DroidVPN</em> app description, it ‘helps bypass regional Internet restrictions, web filtering and firewalls, by tunnelling traffic over ICMP’. Some features may require devices to be rooted in order to function and, according to some third-party app stores, unconditional rooting is required, which has additional security implications for the target device.</p>
<p><em>Unit 42</em> has not been able to ascertain how the malicious HenBox app, referenced in Table 1, got onto the app store. However, some open-source intelligence indicates that the server was running an outdated version of <em>Apache Web Server</em> on a <em>Windows</em> 32-bit operating system. In light of this, we believe an attack against unpatched vulnerabilities, or a brute-force login attack, are reasonable conjectures as to how the server was compromised, ultimately leading to the <em>DroidVPN</em> APK file being overwritten with the malicious HenBox APK.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>APK SHA256</strong></td>
<td><strong>Size (bytes)</strong></td>
<td><strong>First seen</strong></td>
<td><strong>App package name</strong></td>
<td><strong>App name</strong></td>
</tr>
<tr>
<td>0589bed1e3b3d623<br />4c30061be3be1cc66<br />85d786ab3a892a8d4<br />dae8e2d7ed92f7</td>
<td>2,740,860</td>
<td>May 2016</td>
<td>com.android.henbox</td>
<td>DroidVPN</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 1: Details of the HenBox DroidVPN app on the uyghurapps[.]net app store.</p>
<p>As can be seen in Table 1 and Figure 3, despite the unique ‘com.android.henbox’ package name, the HenBox malware copied the legitimate app’s name, ‘DroidVPN’, as well as its icon to further trick victims into believing they had installed <em>DroidVPN</em> and not something totally different.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/2515/7856/4418/fig3-henboxapp.png" alt="fig3-henboxapp.png" width="420" height="703" /></p>
<p class="centered-caption">Figure 3: HenBox app installed, purporting to be DroidVPN.</p>
<p>In addition to the look and feel of <em>DroidVPN</em>, the HenBox variant also contained a copy of the original, legitimate <em>DroidVPN</em> app as an asset within its APK package. Assets can be compared to resource items within a <em>Windows</em> Portable Executable (PE) file. Once the HenBox app is installed and run, it executes code that causes the <em>Android</em> operating system (OS) to launch the install process for the embedded app. HenBox probably does this for two reasons. First, to act as a decoy to detract from other malicious behaviours occurring in the background, and secondly, to satisfy the victim that they are installing the app they wanted. Whether or not the user is suspicious of the first app installation is unknown to us, but based on the names used in other HenBox variants, such as ‘Backup’ and ‘Settings’, it’s highly likely that the app could be passed off in some instances as a benign activity to backup data pre-install, or to change settings prior to install.</p>
<p>At the time of our research, the version of <em>DroidVPN</em> available for download from uyghurapps[.]net matched that of the embedded <em>DroidVPN</em> app inside HenBox. It’s worth noting that newer versions of the <em>DroidVPN</em> app were available on <em>Google Play</em> at the time, as well as in some other third-party app stores, which could indicate that uyghurapps[.]net is not very well maintained or up to date with the latest app versions available.</p>
<p> </p>
<h4><a class="chapter" name="h4-right-app-right-time"></a>The right app at the right time</h4>
<p>The HenBox-with-embedded-DroidVPN app combination is one example of the attackers choosing to mimic a legitimate app in order to compromise their victims. Further combinations included apps that, in their standalone form, were available on <em>Google Play</em>, as well as many third-party app stores. Table 2 lists just three further example apps together with their and HenBox’s respective metadata.</p>
<table class="table table-framed" border="0">
<tbody>
<tr>
<td><strong>#</strong></td>
<td><strong>Parent APK SHA256</strong></td>
<td><strong>First seen</strong></td>
<td><strong>Package names<br /></strong>(HenBox parent APK)<br />[embedded APK]</td>
<td><strong>APK app names</strong><br />(HenBox parent APK)<br />[embedded APK]</td>
</tr>
<tr>
<td>1</td>
<td>fa5a76e86abb26e48a<br />f0b312f056d24000bc<br />969835c40b3f98e5ca<br />7e301b5bee</td>
<td>April 2016</td>
<td>(com.android.henbox)<br />[com.ziipin.software]</td>
<td>(Uyghurche Kirguzguch)<br />[Emojicon]</td>
</tr>
<tr>
<td>2</td>
<td>1749df47cf37c09a92<br />b6a56b64b136f15ec<br />59c4f55ec835b1e569<br />c88e1c6e684</td>
<td>May 2017</td>
<td>(cn.android.setting)<br />[com.apps.amaq]</td>
<td>(设置 (Backup))<br />[Amaq Agency]</td>
</tr>
<tr>
<td>3</td>
<td>4d437d1ac29b1762c<br />c47f8094a05ab73141<br />d03f9ce0256d200fc6<br />91c41d1b6e7</td>
<td>June 2017</td>
<td>(cn.android.setting)<br />[com.example.ourplayer]</td>
<td>(islamawazi)<br />[islamawazi]</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 2: Three example apps with their and HenBox’s respective metadata.</p>
<p>The app icons that would be seen and used to launch the app on an <em>Android</em> device are shown in Table 3.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>#</strong></td>
<td><strong>Icon</strong></td>
<td><strong>App description</strong></td>
</tr>
<tr>
<td>1</td>
<td><img src="/files/4715/7856/4753/Emojicon_app_icon.png" alt="Emojicon_app_icon.png" width="106" height="100" /></td>
<td>First HenBox sample seen with a legitimate app embedded within. The app was a Uyghur language keyboard app targeted at native speakers.</td>
</tr>
<tr>
<td>2</td>
<td><img src="/files/2715/7856/4730/amaq_app_icon.png" alt="amaq_app_icon.png" width="108" height="100" /></td>
<td>Masquerades as Android’s Settings app, and has a similar package name. App used the green Bugdroid image for its logo; app name 设置 (‘Backup’). Interestingly, the embedded app was ‘Amaq Agency’, which reports on ISIS-related news.</td>
</tr>
<tr>
<td>3</td>
<td><img src="/files/4415/7856/4770/islamawazi_app_icon.png" alt="islamawazi_app_icon.png" width="106" height="100" /></td>
<td>The names for both the parent HenBox and the embedded (media player for news) app were identical - Islamawazi. Islamawazi (a.k.a. Turkestan Islamic Party or ‘TIP’ [<a href="#ref22">22</a>]) is an organization formerly known as the East Turkestan Islamic Party, purported to be an Islamic extremist separatist organization founded by Uyghur jihadists.</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 3: The app icons that would be seen and used to launch the app on an Android device.</p>
<p>These examples, together with the HenBox app placed on a very specific third-party app store, point clearly to at least some of the intended targets of these malicious apps being Uyghurs, specifically those with a potential interest in, or association with, terrorist groups. The threat actors behind HenBox appear to be choosing the right apps (those that could be popular with locals in the region) at the right time (while tensions grow in this region of China) to ensure a high probability of installing their malware.</p>
<p> </p>
<h4><a class="chapter" name="h4-henbox-capabilities"></a>HenBox capabilities</h4>
<p>HenBox has certainly evolved over the past four years but the structure of the over 400 samples has largely stayed the same. This structure includes multiple component files and native libraries used to achieve the goal of data collection and spying on the victim. Most components are obfuscated in some way, whether it be by simple XOR with a single-byte key, compressing using ZIP or Zlib compression, or encryption using RC4. These components are responsible for a myriad of functions and features including handling decryption, network communications, gaining super-user privileges, monitoring system logs, loading additional Dalvik code files, tracking the device location and more.</p>
<p>The remainder of this section describes at a high level what HenBox is capable of, and how it operates. The description is based on analysis of the sample described in the table below, which was of interest given that its C2 domain, mefound[.]com, overlapped with the PlugX, Zupdax and Poison Ivy malware families discussed in more detail later.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>SHA256</strong></td>
<td><strong>Package name</strong></td>
<td><strong>App name</strong></td>
</tr>
<tr>
<td>a6c7351b09a733a1b3ff8a0901c5bde<br />fdc3b566bfcedcdf5a338c3a97c9f249b</td>
<td>com.android.henbox</td>
<td>备份 (Backup)</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 4: HenBox variant used in analysis.</p>
<p> </p>
<h5><a class="chapter" name="h5-execution-flow"></a>Execution flow</h5>
<p>Once this variant of HenBox is installed on the victim’s device, the app can be executed in two different ways.</p>
<p>The first method, as depicted in Figure 4, is automatic based on the operating system generating one of a handful of event broadcasts that HenBox registered its intent to process during the app installation process. Examples include events like device reboots, when an app is newly installed, or when a network connection is changed.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/9b749b4a6a6e570161a80ba057a26f7a_f4464.png" alt="henbox_auto_execution.png" width="830" height="271" /> <span class="centered-caption">Figure 4: Automatic HenBox execution.</span></p>
<p>All the intents registered statically via this HenBox variant’s AndroidManifest.xml file are listed and described in Table 5; HenBox also registers further intents at runtime.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Receiver</strong></td>
<td><strong>Intent name</strong></td>
<td><strong>Description</strong></td>
</tr>
<tr>
<td rowspan="6"><strong>BootReceiver</strong></td>
<td>android.intent.action.BOOT_COMPLETED</td>
<td>System notification that the device has finished booting.</td>
</tr>
<tr>
<td>android.intent.action.restart</td>
<td>A legacy intent used to indicate a system restart</td>
</tr>
<tr>
<td>android.intent.action.SIM_STATE_CHANGED</td>
<td>System notification that the SIM card has changed or been removed.</td>
</tr>
<tr>
<td>android.intent.action.PACKAGE_INSTALL</td>
<td>System notification that the download and eventual installation of an app package is happening (this is deprecated).</td>
</tr>
<tr>
<td>android.intent.action.PACKAGE_ADDED</td>
<td>System notification that a new app package has been installed on the device, including the name of said package.</td>
</tr>
<tr>
<td>com.xiaomi.smarthome.receive_alarm</td>
<td>Received notifications from <em>Xiaomi</em>’s smart home IoT devices.</td>
</tr>
<tr>
<td rowspan="2"><strong>TimeReceiver</strong></td>
<td>android.intent.action.ACTION_TIME_CHANGED</td>
<td>System notification that the time was set.</td>
</tr>
<tr>
<td>android.intent.action.CONNECTIVITY_CHANGE</td>
<td>System notification that a change in network connectivity has occurred (has either been lost or established). Since <em>Android</em> version 7 (Nougat) this information has been gathered using other means – perhaps suggesting that the devices used by potential victims run older versions of <em>Android</em>.</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 5: HenBox variant’s intents and receivers defined statically.</p>
<p>Most of the intents listed in Table 5 and shown in Figure 4 are commonly found in malicious <em>Android</em> apps and are the equivalent of setting registry run keys in <em>Windows</em> to autostart applications at reboot. One intent stands out and is much less common: <span class="monospace">com.xiaomi.smarthome.receive_alarm</span>.</p>
<p>Given the nature of connected devices in smart homes, it’s highly likely they will communicate via alerts and notifications with controller apps, such as <em>Xiaomi</em>’s <em>MiHome</em>. Because HenBox registers the same intent, it too can process alerts destined for <em>MiHome</em> and use them as a trigger to execute code. Essentially, this allows for external IoT devices to act as a trigger to execute the malicious HenBox app’s code.</p>
<p>Triggered intents result in execution of code that is present in either the BootReceiver class or the TimeReceiver class, both of which ultimately lead to a new instance of the DaemonServer service being created and started (this service is discussed in more detail later). In addition, BootReceiver changes the device ringer mode to a value of 2, which results in ringtones being audible and the vibrate mode being switched on. This may have been done in an attempt to get nearby people to interact with the (now noisy) device such that the information stolen may be richer in content.</p>
<p>The alternative method for executing HenBox is for the user to launch the malicious app (named ‘Backup’ in this instance) from the launcher view on their device, as shown in Figure 5.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/7315/7856/6857/fig5-henbox-installed.png" alt="fig5-henbox-installed.png" width="421" height="702" /></p>
<p class="centered-caption">Figure 5: HenBox app installed and visible on Android’s launcher view.</p>
<p> </p>
<h5><a class="chapter" name="h5-behaviour"></a>Behaviour</h5>
<p>Upon manual launch, the HenBox code executes and performs the steps highlighted in Figure 6.</p>
<p><a class="zoom-img" title="Figure 6: Manual HenBox execution." href="/files/5515/7856/6914/henbox_manual_execution.png"><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/1233d605a0e7f10ceff31dd04d7b647a_f4466.png" alt="henbox_manual_execution.png" width="830" height="290" /></a><span class="centered-caption">Figure 6: Manual HenBox execution.</span></p>
<p>First, checks are made to determine whether the device manufacturer is <em>Xiaomi</em>, or whether the firmware is <em>MIUI</em> (<em>Xiaomi</em>’s fork of <em>Android</em>). The intention here seems to be one of targeting <em>Xiaomi</em> and exiting prematurely if the checks fail. However, poorly written code results in the code being executed in perhaps more environments than the adversary intended. Anti-emulation and anti-debug checks try to ascertain whether HenBox is being analysed. Interestingly, the adversaries concealed their code for these additional checks inside a class called AlarmService, which appears to be a direct copy from online developer tutorials for creating alarm apps. If these checks pass, HenBox continues to execute by next loading the ELF library libloc4d.so.</p>
<p>Using <em>Android</em>’s shared preferences feature to persist XML key value pair data, HenBox checks whether this execution is its first. If it is, and if the app’s path does not contain ‘/system/app’ (i.e. HenBox is not running as a system app, which provides elevated privileges), one of two embedded ‘su?’ ELF libraries is XOR-decoded. A Java Native Interface (JNI) call is then issued to libloc4d.so to execute the ‘su?’ (henceforth sux) binary.</p>
<p>The two files, ‘suy’ and ‘sux’, are essentially the same: ‘sux’ is used if the <em>Android</em> version on the victim’s device is 4.1 (a.k.a. ‘Jelly Bean’) or newer; ‘suy’ will be used for older versions.</p>
<p>Finally, an instance of the DaemonServer service starts and, if a decoy app is embedded inside HenBox, as per the <em>DroidVPN</em> example, the installation process for the decoy also starts.</p>
<p>Figure 7 illustrates the typical behaviour of the DaemonServer service, starting with hiding the HenBox app from the launcher view and from the app drawer/tray. This behaviour is common amongst <em>Android</em> malware and, while the app remains installed with its services running, it is harder for the victim to discover it.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/d81d36bf5cdbac7e1ed975aac17161c5_f4467.png" alt="daemonserver_service_flow.png" width="830" height="249" /> <span class="centered-caption">Figure 7: DaemonServer service behaviour.</span></p>
<p>The non-obfuscated ELF file ‘daemon’ is loaded next, to gather environmental information about the device by accessing system and radio log files, and by querying running processes.</p>
<p>A <em>Baidu</em> library is loaded next, and used to gather device geo-location information.</p>
<p>The DaemonServer class then registers a runtime intent to intercept outgoing phone calls, allowing the checking of numbers dialled. In particular, HenBox filters numbers based on prefixes matching ‘+86’ – the country code for the People’s Republic of China.</p>
<p>Further assets are then deployed and decoded, including a.zip and setting.txt – the config file for HenBox. Code is also present in this variant to deploy additional assets named ‘plugin’ and ‘AppVoice’ – they are not present in this particular sample, but are a likely indication of evolving development and the use of yet further components.</p>
<p>HenBox’s config file, setting.txt, is decoded using XOR with a single-byte key, 0x88; filenames and XOR keys differ occasionally between variants. The config file is shown in the Farseer section later.</p>
<p>Finally, DaemonServer launches a worker thread to perform further execution tasks. One of the key components used is the ELF file named b.dat, which in turn interacts with a.zip. The archive a.zip contains two further files: libkernel.so (another ELF file) and lib.dat, which is actually a Dalvik DEX file containing further Java code and malicious functionality beyond the app’s default (and mandatory) classes.dex file. Some of the key data-harvesting behaviour of HenBox stems from these files – b.dat and the contents of a.zip, all four of which are RC4-encrypted, forming the most heavily obfuscated components within HenBox.</p>
<p>Once unpacked and available for use, the new DEX file is executed from within the DaemonServer class to enumerate all running applications and kill those that have the permission to receive SMS messages, before registering its own runtime intent to process them instead, thus intercepting the victim’s messages.</p>
<p>The method continues by loading the libkernel.so library file, also unpacked from the a.zip archive. This ELF file has numerous capabilities, many of which come from BusyBox – a package containing various stripped-down Unix tools that are useful for system administration. This executable interacts with the aforementioned sux executable and, amongst other things, temporarily disables the noise made by the device when photos are taken. This behaviour is achieved by moving the audio file ‘<span class="monospace">/system/media/audio/ui/camera_click.ogg</span>’ elsewhere, then moving it back again once picture-taking is complete.</p>
<p>The variant of HenBox analysed and described in the previous section specifically checked the compromised device for two apps listed in Table 6 below. If the apps are present, HenBox harvests information from them about contacts, numbers and conversations.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Package name</strong></td>
<td><strong>App name</strong></td>
</tr>
<tr>
<td>com.rebelvox.voxer</td>
<td>Voxer Walkie Talkie Messenger</td>
</tr>
<tr>
<td>com.tencent.mm</td>
<td>Tencent’s WeChat</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 6: Targeted messaging apps in August 2017.</p>
<p>These types of apps tend to use databases to store their data, which for <em>Voxer</em> is located in ‘/data/data/com.rebelvox.voxer/databases/rv.db’ on the device. HenBox runs SQL queries against the database to gather their stored information.</p>
<p>A little over four months after this variant of HenBox was seen, newer versions were available with significant changes to the number of targeted apps, as shown in Table 7.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Package name</strong></td>
<td><strong>App name</strong></td>
</tr>
<tr>
<td>com.whatsapp</td>
<td>WhatsApp Messenger</td>
</tr>
<tr>
<td>com.pugna.magiccall</td>
<td>n/a</td>
</tr>
<tr>
<td>org.telegram.messenger</td>
<td>Telegram</td>
</tr>
<tr>
<td>com.facebook.katana</td>
<td>Facebook</td>
</tr>
<tr>
<td>com.twitter.android</td>
<td>Twitter</td>
</tr>
<tr>
<td>jp.naver.line.android</td>
<td>LINE: Free Calls &amp; Messages</td>
</tr>
<tr>
<td>com.instanza.cocovoice</td>
<td>Coco</td>
</tr>
<tr>
<td>com.beetalk</td>
<td>BeeTalk</td>
</tr>
<tr>
<td>com.gtomato.talkbox</td>
<td>TalkBox Voice Messenger – PTT</td>
</tr>
<tr>
<td>com.viber.voip</td>
<td>Viber Messenger</td>
</tr>
<tr>
<td>com.immomo.momo</td>
<td>MOMO陌陌</td>
</tr>
<tr>
<td>com.facebook.orca</td>
<td>Messenger – Text and Video Chat for Free</td>
</tr>
<tr>
<td>com.skype.rover</td>
<td>Skype; 3rd party stores only</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 7: Targeted messaging apps in January 2018.</p>
<p>Most of these apps are well established and available on <em>Google Play</em>, however, com.skype.rover and com.pugna.magiccall appear to be available only on third-party app stores.</p>
<p>It’s clear to see that the capabilities of HenBox are very comprehensive, not only in terms of a complex and pretty sophisticated <em>Android</em> app, but also as a very effective spying tool.</p>
<p> </p>
<h4><a class="chapter" name="h4-infrastructure-and-related-overlaps"></a>Infrastructure and related overlaps</h4>
<p>While investigating HenBox, <em>Unit 42</em> discovered infrastructure ties to other malware families associated with targeted attacks against <em>Windows</em> users, with notable overlaps including PlugX, Zupdax, 9002 and Poison Ivy. Figure 8 paints a picture of an adversary with at least five malware families in its toolbox, dating back to at least 2015.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/606d06e9bd8d09c4f230e1a62c361e3b_f4468.png" alt="henbox_related_malware.png" width="840" height="412" /><span class="centered-caption"> Figure 8: HenBox and related malware.</span></p>
<p>The overlap between the HenBox and 9002 malware families involves three shared C2s between several samples:</p>
<ul>
<li>47.90.81[.]23</li>
<li>222.139.212[.]16</li>
<li>lala513.gicp[.]net</li>
</ul>
<p>The overlaps between the HenBox, PlugX, Zupdax and Poison Ivy malware families involves a web of shared C2s and IP resolutions centred around the following:</p>
<ul>
<li>59.188.196[.]172</li>
<li>cdncool[.]com (and third levels of this domain)</li>
<li>www3.mefound[.]com</li>
<li>www5.zyns[.]com</li>
<li>W3.changeip[.]org</li>
</ul>
<p> </p>
<h5><a class="chapter" name="h5-ties-previous-activity"></a>Ties to previous activity</h5>
<p>The registrant of cdncool[.]com also registered six other domains. To date, we have seen four of the seven (the first three in the list below, along with cdncool[.]com) used in malicious activity, and it is reasonable to assume that the remaining three are, or were, intended to serve the same purpose.</p>
<ul>
<li>tcpdo[.]net</li>
<li>adminsysteminfo[.]com</li>
<li>md5c[.]net</li>
<li>linkdatax[.]com</li>
<li>csip6[.]biz</li>
<li>adminloader[.]com</li>
</ul>
<p><em>Unit 42</em> published a blog [<a href="#ref23">23</a>] in July 2016 about 9002 malware being delivered using a combination of shortened links and a file hosted on <em>Google Drive</em>. The spear-phishing emails had Myanmar political-themed lures and, if the 9002 C2 server responded, the trojan sent system-specific information along with the string ‘jackhex’. ‘Jackhex’ has also been part of a C2 for what is probably related Poison Ivy activity (detailed below), along with additional infrastructure ties.</p>
<p>The C2 for the aforementioned 9002 sample was logitechwkgame[.]com, which resolved to the IP address 222.239.91[.]30. At the same time, the domain admin.nslookupdns[.]com also resolved to the same IP address, suggesting that these two domains are associated with the same threat actor. In addition, admin.nslookupdns[.]com was a C2 for Poison Ivy samples associated with attacks on Myanmar and other Asian countries and discussed in a blog post [<a href="#ref24">24</a>] published by<em> Arbor Networks</em> in April 2016. Another tie between the activities is the C2 jackhex.md5c[.]net, which was also used as a Poison Ivy C2 by the samples discussed in the <em>Arbor Networks</em> blog. Finally, since publishing the 9002 blog, <em>Unit 42</em> has also seen the aforementioned 9002 C2 being used as a Poison Ivy C2 with a Myanmar political-themed lure.</p>
<p>In our 9002 blog we noted some additional infrastructure used either as C2s for related Poison Ivy samples, or as domain registrant overlap with those C2 domains. When we published that blog we hadn’t seen any of the three registrants overlap domains used in malicious activity. Since then, we have seen Poison Ivy samples using third levels of querlyurl[.]com, lending further credence to the idea that the remaining two domains, gooledriveservice[.]com and appupdatemoremagic[.]com, are, or were, intended for malicious use. While we do not have complete targeting information associated with these Poison Ivy samples, several of the decoy files were in Chinese and appear to be part of a 2016 campaign targeting organizations in Taiwan with political-themed lures.</p>
<p> </p>
<h3><a class="chapter" name="h3-farseer-windows"></a>Farseer for Windows</h3>
<p>Through further investigations into infrastructure used by the HenBox malware, <em>Unit 42</em> discovered [<a href="#ref25">25</a>] another, previously unknown, malware family designed to run on <em>Windows</em>.</p>
<p>Farseer – named due to a string found in the PDB path embedded within the executable files (see example below) – is a backdoor trojan that we can trace back in our data to 2016 and that we continue to see in 2019, albeit in small numbers.</p>
<pre>e:\WorkSpace\A1\coding\<strong>Farseer</strong>\RemoteShellsRemote\Release\RemoteShellsRemote.pdb.</pre>
<p> </p>
<h4><a class="chapter" name="h4-ties-henbox"></a>Ties to HenBox</h4>
<p>The infrastructure used by the combination of malware families discussed so far is vast, with numerous overlaps, however the remainder of this report will focus only on some core ties between the Farseer and HenBox, PlugX, Zupdax, 9002 and Poison Ivy malware families.</p>
<p>Figure 9 shows a high-level representation of file hashes, IP addresses and domain names used by some of the malware families mentioned, together with their overlaps highlighted by the green rectangle.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/294bee5bb8777a55292bd11321688d04_f4469.jpg" alt="fig9-farseeser-henbox-overlap.jpg" width="680" height="704" /> <span class="centered-caption">Figure 9: Maltego chart showing overlaps between Farseer and related threats.</span></p>
<p>Despite the image indicating that Farseer has the largest number of malware samples (red dots), this is not the case when considering the entire set of malware samples and merely appears this way due to the focus of this section of the report.</p>
<p>One of the most recent Farseer samples (SHA256: 271e29fe8e23901184377ab5d0d12b40d485f8c404aef0bdcc4a4148ccbb1a1a) introduced a new C2 domain – tcpdo[.]net – into the Farseer set, as shown in Figure 10.</p>
<p><a class="zoom-img" title="Figure 10: Tcpdo[.]net ties between Farseer and Poison Ivy samples." href="/files/9115/7856/7723/farseer_tcpdo_net.png"><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/4966c0eb7887fb169e720879b419589a_f4470.png" alt="farseer_tcpdo_net.png" width="700" height="479" /></a></p>
<p class="centered-caption">Figure 10: Tcpdo[.]net ties between Farseer and Poison Ivy samples.</p>
<p>This sample communicates directly with tcpdo[.]net for its C2 whereas other Farseer samples communicate indirectly, through third-level domains and IP addresses. A handful of Poison Ivy samples have also used this domain as their C2, most of them prior to this Farseer sample (as early as mid-2015) but also more recently, on 17 December 2018, indicating a fairly active domain.</p>
<p>The overlaps between Farseer and Poison Ivy don’t end with tcpdo[.]net. Much as with HenBox, other infrastructure ties exist: directly through sony36[.]com and md.son36[.]com; indirectly through third-level domains of tcpdo[.]net and IP addresses 45.32.251[.]7 and 45.32.53[.]250.</p>
<p>Farseer also overlaps with HenBox and PlugX samples through multiple C2 domains and IP address resolutions:</p>
<ul>
<li>outhmail[.]com (and third levels of this domain)</li>
<li>cdncool[.]com (and third levels of this domain)</li>
<li>www3.mefound[.]com</li>
<li>w3.changeip[.]org</li>
<li>www5.zyns[.]com</li>
<li>45.32.53[.]250</li>
<li>45.32.44[.]52</li>
<li>45.32.45[.]77</li>
<li>59.188.196[.]162</li>
<li>59.188.196[.]172</li>
</ul>
<p> </p>
<h4><a class="chapter" name="h4-c2-server-structure"></a>C2 server structure</h4>
<p>As previously mentioned, a common registrant registered seven known domains related to the malware discussed. Interestingly, all of the domains have at least one third-level domain in common, perhaps indicating a template being used for the infrastructure setup. Table 8 lists the commonalities, aside from other more common sub-domains such as www, mail and dns.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Domain / third-level domain</strong></td>
<td><strong>info.</strong></td>
<td><strong>re.</strong></td>
<td><strong>update.</strong></td>
<td><strong>up.</strong></td>
</tr>
<tr>
<td>tcpdo[.]net</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;"> </td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
</tr>
<tr>
<td>adminsysteminfo[.]com</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;"> </td>
</tr>
<tr>
<td>md5c[.]net</td>
<td style="text-align: center;"> </td>
<td style="text-align: center;"> </td>
<td style="text-align: center;"> </td>
<td style="text-align: center;"> </td>
</tr>
<tr>
<td>linkdatax[.]com</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;"> </td>
</tr>
<tr>
<td>csip6[.]biz</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;"> </td>
</tr>
<tr>
<td>adminloader[.]com</td>
<td style="text-align: center;"> </td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;"> </td>
</tr>
<tr>
<td>cdncool[.]com</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
<td style="text-align: center;">•</td>
</tr>
<tr>
<td>newfacebk[.]com</td>
<td style="text-align: center;"> </td>
<td style="text-align: center;"> </td>
<td style="text-align: center;">•</td>
<td style="text-align: center;"> </td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 8: Common third-level domain names set up on C2 servers.</p>
<p> </p>
<h4><a class="chapter" name="h4-malware-execution-flow"></a>Malware execution flow</h4>
<p>This section aims to provide a description of the general behaviour of the Farseer malware. Figure 11 describes at a high level the post-installation execution flow of a typical sample.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/b1f86fb0f6a88692d11595dd28c78284_f4471.png" alt="farseer_flow.png" width="840" height="289" /> <span class="centered-caption">Figure 11: Execution flow of Farseer malware.</span></p>
<p>For persistence on the host, Farseer creates a registry entry named sys under:</p>
<pre>HKCU\Software\Microsoft\Windows\CurrentVersion\Run</pre>
<p>This runs the VBS script <span class="monospace">slmgr.vbs</span> that contains:</p>
<pre>createobject("wscript.shell").run "C:\Users\[username]\AppData\Roaming\windows\bscmake.exe"</pre>
<p>This is step 1 (in Figure 11), which starts the Farseer execution when a user logs onto their PC.</p>
<p>Steps 2 and 3 involve a DLL-sideloading technique using a signed <em>Microsoft</em> file, bscmake.exe, which is part of <em>VisualStudio</em>. This executable in turn imports several DLL files, including mspdb80.dll, which in turn imports sys.dll – the malicious payload.</p>
<p>The payload, stub.bin, is encrypted and compressed on disk but is decrypted as it’s loaded into memory by sys.dll. Farseer’s config file, sys.dat, is also loaded during this fourth step in the flow. Much like the HenBox config file, sys.dat is obfuscated simply using ASCII encoding. Once decoded, the config is structured as per the example in the left column of Table 9.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Farseer config</strong></td>
<td><strong>HenBox config</strong></td>
</tr>
<tr>
<td class="monospace" valign="top">p1=up.outhmail[.]com<br />p2=80<br />p4=test-04-11 <br />p5=C:\Users\[username]\AppData\Local\Temp\main.exe</td>
<td class="monospace" valign="top">a1=wd.w3.ezua[.]com<br />a2=80<br /><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="2a4b191749584b594275584f5a45585e6a181b4944">[email&#160;protected]</a>[.]com<br />a4=smtp.21cn[.]com<br />a5=crash_report<br /><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b8d98e85d4c0c196dbd6f8898e8b">[email&#160;protected]</a>[.]com<br />a7=<br />a8=0914D1D428914B09A5372866B39524B9<br />a9=<br />b1=0<br />b2=0<br />b3=1<br />b4=http://www3.mefound[.]com/aa.txt</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 9: Similarities between the Farseer and HenBox config files.</p>
<p>In the Farseer config file:</p>
<ul>
<li>p1 is the C2 FQDN</li>
<li>p2 is the TCP port used (many variants use non-standard ports)</li>
<li>p3 is missing</li>
<li>p4 is a version string sent in the C2, perhaps a campaign identifier of some sort</li>
<li>p5 is the full file path from which the malware was launched.</li>
</ul>
<p>At present, we do not know what all the HenBox options refer to.</p>
<p>The two malware config files have some similarities, which strengthens the idea of them being related to a common adversary. Both are text files, read and parsed at runtime; more often than not, the data is encoded simply. Perhaps the most notable similarities in notation are as follows:</p>
<ul>
<li>Key value pairs are ‘=’ delimited</li>
<li>Each line uses a single character followed by a single digit starting at 1</li>
<li>Both have the C2 host on line 1</li>
<li>Both have the TCP port on line 2.</li>
</ul>
<p> </p>
<h4><a class="chapter" name="h4-targeting"></a>Targeting</h4>
<p>One of the earliest Farseer samples we analysed also contained a decoy PDF document that was opened during execution. The PDF content included a copy of an article from a Myanmar news website that reports on the Southeast Asia region. The PDF file properties indicate that it was created on a Chinese-language system, and the creation date was eight days prior to the Farseer sample using said PDF.</p>
<p>After publishing information on Farseer, an industry partner told us that their product telemetry showed a Farseer sample running on a <em>Windows</em> system located in, or communicating through an ISP in Ulaanbaatar, Mongolia. This additional context, along with the decoy document used, helps to confirm our suspected target countries.</p>
<p> </p>
<h2><a class="chapter" name="h2-constructing-adversary-playbook"></a>Constructing an adversary playbook</h2>
<p>This section introduces the public frameworks and tools underpinning adversary playbooks, and describes the PKPLUG edition.</p>
<p> </p>
<h3><a class="chapter" name="h3-attampck"></a>ATT&amp;CK</h3>
<p>MITRE’s Adversarial Tactics, Techniques and Common Knowledge (ATT&amp;CK™) is a curated knowledgebase and model for cyber adversary behaviour, reflecting the various phases of an adversary’s lifecycle and the platforms they are known to target.</p>
<p> </p>
<h3><a class="chapter" name="h3-stix"></a>STIX</h3>
<p>Structured Threat Information Expression (STIX™) is a language and serialization format used to exchange cyber threat intelligence (CTI).</p>
<p>Specifically, the latest iteration of the STIX format, version 2.0, simplifies the creation of documents and uses JSON, rather than XML. This version also provides a list of objects to represent types of information typically generated for CTI. For instance, STIX includes objects for intrusion sets, malware and indicators, amongst others. The information and attributes stored within STIX objects, and the relationship between the various object types, adhere to standards, which allows this intelligence to be shared and consumed without the need for complex parsing tools.</p>
<p> </p>
<h3><a class="chapter" name="h3-attack-lifecycle"></a>Attack lifecycle</h3>
<p>An adversary must complete a linear, phase-based process to successfully execute an attack. Humans can better comprehend an attack by breaking it down into smaller, phased-based pieces, and work to break the lifecycle at various points in order to prevent successful attacks.</p>
<p>The attack lifecycle is a customized Cyber Kill Chain(™) from <em>Lockheed Martin</em>, and is described in Figure 12.</p>
<p>To meld these three frameworks together, we looked at how ATT&amp;CK data mapped to STIX 2.0 and then chose appropriate objects for additional adversary playbook components, as Table 10 describes.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/0f24f77dc51aacbe9fb14d34b36d8bc7_f4472.png" alt="attack_lifecycle.png" width="840" height="242" /> <span class="centered-caption">Figure 12: Attack lifecycle.</span></p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>STIX 2.0 object</strong></td>
<td><strong>Adversary playbook component</strong></td>
</tr>
<tr>
<td>Intrusion Set</td>
<td>Adversary</td>
</tr>
<tr>
<td>Report</td>
<td>Playbook</td>
</tr>
<tr>
<td>Report</td>
<td>Play</td>
</tr>
<tr>
<td>Campaign</td>
<td>Campaign</td>
</tr>
<tr>
<td>Kill-Chain-Phase</td>
<td>ATT&amp;CK Tactic</td>
</tr>
<tr>
<td>Attack-Pattern</td>
<td>ATT&amp;CK Techniqu</td>
</tr>
<tr>
<td>Indicator</td>
<td>Indicator</td>
</tr>
<tr>
<td>Malware</td>
<td>Adversary Malware</td>
</tr>
<tr>
<td>Tool</td>
<td>Adversary Tool</td>
</tr>
</tbody>
</table>
<p class="centered-caption"> Table 10: STIX 2.0 to adversary playbook object mapping.</p>
<p>With these definitions complete, we began mapping the activities of particular adversaries to the ATT&amp;CK framework, and stored the respective data and related IOCs as STIX in JSON format.</p>
<p> </p>
<h3><a class="chapter" name="h3-playbook-viewer"></a>Playbook Viewer</h3>
<p>As previously mentioned, adversary playbooks are JSON-formatted STIX CTI packages describing threat actors, their campaigns (each one an instance of the attack lifecycle), their behaviours (using ATT&amp;CK) and, finally, the IOCs for each campaign. Consumers can ingest the STIX as they always have done, however, many systems (at the time of launch) did not handle STIX 2.0 content, and certainly none existed that would display an entire adversary playbook for humans to better understand and visualize the information.</p>
<p><em>Unit 42</em> released a simple tool to enable the playbook to be viewed through a web interface. A screenshot of the Playbook Viewer [<a href="#ref26">26</a>] is shown in Figure 13; a live version can be accessed at <em>GitHub</em>.</p>
<p><a class="zoom-img" title="Figure 13: Example Rancor adversary playbook viewed through Playbook Viewer." href="/files/7115/7856/8720/playbook_viewer_image.png"><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/d6d965a6e06b22ce5cc637b41cbb44dc_f4473.png" alt="playbook_viewer_image.png" width="830" height="493" /></a><span class="centered-caption">Figure 13: Example Rancor adversary playbook viewed through Playbook Viewer.</span></p>
<p>Playbook Viewer allows a user to choose an adversary from the list shown. This provides a description and another list of their campaigns (at least the ones we know about, and those we’ve converted to STIX). Selecting a campaign shows lists of the adversary’s TTPs (using ATT&amp;CK notation) laid out in columns as per the attack lifecycle phases. Of course, the level of detail described in each playbook is limited to the visibility one has of a given campaign, thus the sharing, merging and enriching of these is critical to build a more holistic view of a given adversary.</p>
<p> </p>
<h3><a class="chapter" name="h3-defence-analysis"></a>Defence analysis</h3>
<p>Beyond ingesting IOCs and visualizing adversary playbooks, another use-case exists around improving defences. Understanding the common TTPs used by malware and adversaries that persistently attack your organization should help to prioritize defence efforts. These don’t just have to be deploying security solutions but also designing policies and processes to reduce the risk for the organization and enforcing them, wherever possible, using technology.</p>
<p> </p>
<h2><a class="chapter" name="h2-pkplug-adversary-playbook"></a>PKPLUG adversary playbook</h2>
<p>Some of the malware families used by the PKPLUG adversary have been described in detail in this report. It is those (HenBox and Farseer) that are described here, in playbook form.</p>
<p> </p>
<h3><a class="chapter" name="h3-henbox"></a>HenBox</h3>
<p>Table 11 describes the single ‘play’ (a.k.a. campaign) related to the variant of HenBox discovered on the Uyghur app store. Other plays, each an instance of an attack lifecycle, exist for many more samples and may have some TTPs that differ. A full list of plays, together with all the IOCs, is available on the Playbook Viewer.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Phase</strong></td>
<td><strong>TTP</strong></td>
<td><strong>Description / STIX &amp; IOCs</strong></td>
</tr>
<tr>
<td rowspan="4">Reconnaissance</td>
<td>T1249: Conduct social engineering</td>
<td>Creation of decoy documents; spoofing legitimate mobile apps; setting up domains with copycat names using relevant and interesting themes.</td>
</tr>
<tr>
<td>T1264: Identify technology usage patterns</td>
<td>Targeting of <em>Xiaomi</em> devices, <em>Android</em> users and Uyghur app store infers understanding of the victims’ MO.</td>
</tr>
<tr>
<td>T1265: Identify supply chains</td>
<td>Using the Uyghur app store to deliver HenBox would first require identification of the delivery mechanism.</td>
</tr>
<tr>
<td>T1295: Analyse social and business relationships, interests, and affiliations</td>
<td>Knowledge of the Uyghur ethnicity and religious beliefs to use in social engineering lures (e.g. Islam-related apps); knowledge, or suspected use, of various social network, secure messaging and communications apps by the victims.</td>
</tr>
<tr>
<td rowspan="3">Weaponization</td>
<td>T1307: Acquire and/or use third-party infrastructure services</td>
<td>Use of Uyghur app store to deliver HenBox.</td>
</tr>
<tr>
<td>T1312: Compromise third-party infrastructure to support delivery</td>
<td>How the app store is compromised but an app was overwritten with HenBox.</td>
</tr>
<tr>
<td>T1345: Create custom payloads</td>
<td>HenBox and Farseer are custom malware; others used, such as PlugX, were custom when discovered but are now believed to be used by many groups.</td>
</tr>
<tr>
<td rowspan="2">Delivery</td>
<td>T1474: Supply chain compromise (mobile)</td>
<td>Third-party app store APK URL:<br />[url:value = ’uyghurapps[.]net/mobile/downAction.action?appId=40’]<br />Hash of HenBox APK purporting to be <em>DroidVPN </em>app on third-party app store:<br />[file.hashes.’SHA-256’ = ‘0589bed1e3b3d6234c30061be3be1cc6685d786ab3a892a8d4dae8e2d7ed92f7’]</td>
</tr>
<tr>
<td>T1476: Deliver malicious app via other means (mobile)</td>
<td>Delivery of HenBox through compromised third-party app store; other methods assumed including phishing/smishing, file-sharing websites, forums, etc. These are common with <em>Android</em> malware delivery.</td>
</tr>
<tr>
<td>Exploitation</td>
<td>-</td>
<td>No exploits against vulnerabilities used, to our knowledge; requires user interaction.</td>
</tr>
<tr>
<td rowspan="5">Installation</td>
<td>T1027: Obfuscated files or information</td>
<td rowspan="2">Mixture of compression, obfuscation and encryption used for components of HenBox malware, including config files and further payloads.</td>
</tr>
<tr>
<td>T1406: Obfuscated files or information (mobile)</td>
</tr>
<tr>
<td>T1204: User execution</td>
<td>HenBox requires installation by victim, through social engineering.</td>
</tr>
<tr>
<td>T1402: App auto-start at device boot (Mobile)</td>
<td>HenBox monitors for system event broadcasts and executes accordingly. This includes device reboots, SIM card and network changes, new apps installed, and so on.</td>
</tr>
<tr>
<td>T1418: Application discovery (mobile)</td>
<td>HenBox monitors installed apps to steal information from target apps.</td>
</tr>
<tr>
<td rowspan="2">Command &amp; control</td>
<td>T1065: Uncommonly used port</td>
<td>This variant of HenBox used TCP port 888.</td>
</tr>
<tr>
<td>T1071: Standard application layer protocol</td>
<td>HenBox used HTTP to communicate with the C2.</td>
</tr>
<tr>
<td rowspan="11">Actions on objectives</td>
<td>T1412: Capture SMS messages (mobile)</td>
<td>Intercepts SMS messages.</td>
</tr>
<tr>
<td>T1413: Access sensitive data in device logs (mobile)</td>
<td>Gathers system and device logs.</td>
</tr>
<tr>
<td>T1416: Android intent hijacking (mobile)</td>
<td>HenBox registered for <em>Xiaomi</em> events likely to originate from IoT devices.</td>
</tr>
<tr>
<td>T1418: Application discovery (mobile)</td>
<td>Enumeration of existing and monitoring of newly installed apps.</td>
</tr>
<tr>
<td>T1421: System network connections discovery (mobile)</td>
<td>Enumerates cellular and Wi-Fi networks; monitors for network changes (e.g. switching from one to another).</td>
</tr>
<tr>
<td>T1422: System network configuration discovery (mobile)</td>
<td>HenBox gathers IMEI and similar device and system identifiers.</td>
</tr>
<tr>
<td>T1426: System information discovery (mobile)</td>
<td>Gathers system version information.</td>
</tr>
<tr>
<td>T1429: Microphone or camera recordings (mobile)</td>
<td>Records information using device sensors.</td>
</tr>
<tr>
<td>T1430: Location tracking (mobile)</td>
<td>Tracks device location.</td>
</tr>
<tr>
<td>T1432: Access contact list (mobile)</td>
<td>Gathers information from device contacts database, as well as contacts stored on certain target messaging apps.</td>
</tr>
<tr>
<td>T1433: Access call log (mobile)</td>
<td>Gathers call log information and sets a filter for calls to +86 country code (China) to steal the phone numbers involved.</td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 11: The single ‘play’ (a.k.a. campaign) related to the variant of HenBox discovered on the Uyghur app store.</p>
<p> </p>
<h3><a class="chapter" name="h3-farseer"></a>Farseer</h3>
<p>Table 12 describes the single ‘play’ (a.k.a. campaign) related to some of the latest variants of Farseer.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Phase</strong></td>
<td><strong>TTP</strong></td>
<td><strong>Description / STIX &amp; IOCs</strong></td>
</tr>
<tr>
<td style="text-align: center;" colspan="3">Pre-ATT&amp;CK:</td>
</tr>
<tr>
<td>Adversary opsec</td>
<td>T1319 Obfuscate or encrypt code</td>
<td>Mixture of compression, obfuscation and encryption used for components of Farseer malware, including config files and further payloads.</td>
</tr>
<tr>
<td>Establish &amp; maintain infrastructure</td>
<td>T1328 Buy domain name</td>
<td>Buying and registering domains for command &amp; control use.</td>
</tr>
<tr>
<td style="text-align: center;" colspan="3">ATT&amp;CK:   </td>
</tr>
<tr>
<td>Persistence </td>
<td>T1060 Registry run keys / startup folder</td>
<td>Sets a registry run key to launch. </td>
</tr>
<tr>
<td rowspan="3">Defence evasion   </td>
<td>T1140 Deobfuscate / decode files or information  </td>
<td rowspan="3">Mixture of compression, obfuscation and encryption used for components of Farseer malware, including config files and further payloads.   </td>
</tr>
<tr>
<td>T1045 Software packing  </td>
</tr>
<tr>
<td>T1073 DLL side-loading  </td>
</tr>
<tr>
<td rowspan="3">Command &amp; control  </td>
<td>T1071 Standard application layer protocol </td>
<td>Farseer used HTTP to communicate with the C2</td>
</tr>
<tr>
<td>T1065 Uncommonly used port  </td>
<td>Farseer has used TCP ports 158, 993 and others </td>
</tr>
<tr>
<td>T1043 Commonly used port </td>
<td>Farseer has also used TCP port 80 </td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 12: The single ‘play’ (a.k.a. campaign) related to some of the latest variants of Farseer.</p>
<p> </p>
<h2><a class="chapter" name="h2-conclusions"></a>Conclusions</h2>
<p>PKPLUG is a fairly long-standing, active and formidable adversary operating against targets in the Southeast Asia region for what could be various reasons, but clearly interested in information‑gathering, tracking and espionage.</p>
<p>Sharing threat intelligence data is very important if others are to learn about targeted cyber attacks and data breaches. Furthermore, sharing not only the IOCs of a given attack but also the TTPs of how the adversary breached and moved throughout the network to fulfil its goals is critical. Sharing TTPs is more difficult, but the use of adversary playbooks – building on solid foundational frameworks – is a great start in providing the necessary structure to do so.</p>
<p><em>Unit 42</em> continues to track PKPLUG and the tools used by this adversary; updates to research, IOCs and the PKPLUG adversary playbook will be released periodically.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] ASEAN Member States. <a href="https://asean.org/asean/asean-member-states/" target="_blank">https://asean.org/asean/asean-member-states/</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] What Are the Autonomous Regions of China? <a href="https://www.sporcle.com/blog/2019/04/what-are-the-autonomous-regions-of-china/" target="_blank">https://www.sporcle.com/blog/2019/04/what-are-the-autonomous-regions-of-china/</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] What is China’s Belt and Road Initiative? <a href="https://www.theguardian.com/cities/ng-interactive/2018/jul/30/what-china-belt-road-initiative-silk-road-explainer" target="_blank">https://www.theguardian.com/cities/ng-interactive/2018/jul/30/what-china-belt-road-initiative-silk-road-explainer</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] China and Xinjiang: The Fate of BRI. <a href="https://thegeopolitics.com/china-and-xinjiang-the-fate-of-bri/" target="_blank">https://thegeopolitics.com/china-and-xinjiang-the-fate-of-bri/</a>.</p>
<p><a class=" anchor" name="ref5"></a>[5] China’s Crackdown on Uighurs in Xinjiang. <a href="https://www.cfr.org/backgrounder/chinas-crackdown-uighurs-xinjiang" target="_blank">https://www.cfr.org/backgrounder/chinas-crackdown-uighurs-xinjiang</a>.</p>
<p><a class=" anchor" name="ref6"></a>[6] This map shows a trillion-dollar reason why China is oppressing more than a million Muslims. <a href="https://www.businessinsider.com/map-explains-china-crackdown-on-uighur-muslims-in-xinjiang-2019-2" target="_blank">https://www.businessinsider.com/map-explains-china-crackdown-on-uighur-muslims-in-xinjiang-2019-2</a>.</p>
<p><a class=" anchor" name="ref7"></a>[7] The Battle for the South China Sea. <a href="https://edition.cnn.com/interactive/2018/08/asia/south-china-sea/" target="_blank">https://edition.cnn.com/interactive/2018/08/asia/south-china-sea/</a>.</p>
<p><a class=" anchor" name="ref8"></a>[8] China Demands US Cancel Arms Sale to Taiwan. <a href="https://www.military.com/daily-news/2019/07/10/china-demands-us-cancel-arms-sale-taiwan.html" target="_blank">https://www.military.com/daily-news/2019/07/10/china-demands-us-cancel-arms-sale-taiwan.html</a>.</p>
<p><a class=" anchor" name="ref9"></a>[9] Smartphone Shipments Experience Deeper Decline in Q1 2019 with a Clear Shakeup Among the Market Leaders, According to IDC. <a href="https://www.idc.com/getdoc.jsp?containerId=prUS45042319" target="_blank">https://www.idc.com/getdoc.jsp?containerId=prUS45042319</a>.</p>
<p><a class=" anchor" name="ref10"></a>[10] Unit 42. <a href="https://unit42.paloaltonetworks.com/" target="_blank">https://unit42.paloaltonetworks.com/</a>.</p>
<p><a class=" anchor" name="ref11"></a>[11] Mitre ATT&amp;CK. <a href="https://attack.mitre.org/" target="_blank">https://attack.mitre.org/</a>.</p>
<p><a class=" anchor" name="ref12"></a>[12] The Cyber Kill Chain(™). <a href="https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html" target="_blank">https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html</a>.</p>
<p><a class=" anchor" name="ref13"></a>[13] Structured Threat Information Expression (STIX™). <a href="https://oasis-open.github.io/cti-documentation/stix/intro" target="_blank">https://oasis-open.github.io/cti-documentation/stix/intro</a>.</p>
<p><a class=" anchor" name="ref14"></a>[14] HenBox: The Chickens Come Home to Roost. <a href="https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/" target="_blank">https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/</a>.</p>
<p><a class=" anchor" name="ref15"></a>[15] HenBox: Inside the Coop. <a href="https://unit42.paloaltonetworks.com/unit42-henbox-inside-coop/" target="_blank">https://unit42.paloaltonetworks.com/unit42-henbox-inside-coop/</a>.</p>
<p><a class=" anchor" name="ref16"></a>[16] Welcome to the Uighur Web. <a href="https://foreignpolicy.com/2014/04/21/welcome-to-the-uighur-web/" target="_blank">https://foreignpolicy.com/2014/04/21/welcome-to-the-uighur-web/</a>.</p>
<p><a class=" anchor" name="ref17"></a>[17] Internet popularity in Xinjiang higher than China’s national average. <a href="http://www.chinadaily.com.cn/business/tech/2017-07/08/content_30041010.htm" target="_blank">http://www.chinadaily.com.cn/business/tech/2017-07/08/content_30041010.htm</a>.</p>
<p><a class=" anchor" name="ref18"></a>[18] Hackers Target Uyghur Groups. <a href="https://www.rfa.org/english/news/uyghur/hackers-09062012153043.html" target="_blank">https://www.rfa.org/english/news/uyghur/hackers-09062012153043.html</a>.</p>
<p><a class=" anchor" name="ref19"></a>[19] Study Finds Unrelenting Cyber Attacks Against China’s Uyghurs. <a href="https://securityledger.com/2014/08/study-finds-unrelenting-cyber-attacks-against-chinas-uyghurs/" target="_blank">https://securityledger.com/2014/08/study-finds-unrelenting-cyber-attacks-against-chinas-uyghurs/</a>.</p>
<p><a class=" anchor" name="ref20"></a>[20] Cyber Attacks Against Uyghur Mac OS X Users Intensify. <a href="https://securelist.com/cyber-attacks-against-uyghur-mac-os-x-users-intensify/64259/" target="_blank">https://securelist.com/cyber-attacks-against-uyghur-mac-os-x-users-intensify/64259/</a>.</p>
<p><a class=" anchor" name="ref21"></a>[21] Scarlet Mimic: Years-Long Espionage Campaign Targets Minority Activists. <a href="https://unit42.paloaltonetworks.com/scarlet-mimic-years-long-espionage-targets-minority-activists/" target="_blank">https://unit42.paloaltonetworks.com/scarlet-mimic-years-long-espionage-targets-minority-activists/</a>.</p>
<p><a class=" anchor" name="ref22"></a>[22] Turkistan Islamic Party. <a href="https://en.wikipedia.org/wiki/Turkistan_Islamic_Party" target="_blank">https://en.wikipedia.org/wiki/Turkistan_Islamic_Party</a>.</p>
<p><a class=" anchor" name="ref23"></a>[23] Attack Delivers ‘9002’ Trojan Through Google Drive. <a href="https://unit42.paloaltonetworks.com/unit-42-attack-delivers-9002-trojan-through-google-drive/" target="_blank">https://unit42.paloaltonetworks.com/unit-42-attack-delivers-9002-trojan-through-google-drive/</a>.</p>
<p><a class=" anchor" name="ref24"></a>[24] New Poison Ivy Activity Targeting Myanmar, Asian Countries. <a href="https://web.archive.org/web/20160618095613/https://www.arbornetworks.com/blog/asert/recent-poison-iv/" target="_blank">https://web.archive.org/web/20160618095613/https://www.arbornetworks.com/blog/asert/recent-poison-iv/</a>.</p>
<p><a class=" anchor" name="ref25"></a>[25] Farseer: Previously Unknown Malware Family bolsters the Chinese armoury. <a href="https://unit42.paloaltonetworks.com/farseer-previously-unknown-malware-family-bolsters-the-chinese-armoury/" target="_blank">https://unit42.paloaltonetworks.com/farseer-previously-unknown-malware-family-bolsters-the-chinese-armoury/</a>.</p>
<p><a class=" anchor" name="ref26"></a>[26] Unit 42 Adversary Playbook Viewer. <a href="https://pan-unit42.github.io/playbook_viewer/" target="_blank">https://pan-unit42.github.io/playbook_viewer/</a>.</p>
<p> </p>
<p> </p> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2019/VB2019-Hinchliffe.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=VB2019 paper: Pulling the PKPLUG: the adversary playbook for the long-standing espionage activity of a Chinese nation-state adversary&url=https://www.virusbulletin.com/virusbulletin/2020/03/vb2019-paper-pulling-pkplug-adversary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2020/03/vb2019-paper-pulling-pkplug-adversary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2020/03/vb2019-paper-pulling-pkplug-adversary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary&title=VB2019 paper: Pulling the PKPLUG: the adversary playbook for the long-standing espionage activity of a Chinese nation-state adversary"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2020/03/vb2019-paper-pulling-pkplug-adversary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary&t=VB2019 paper: Pulling the PKPLUG: the adversary playbook for the long-standing espionage activity of a Chinese nation-state adversary"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2020/03/vb2019-paper-pulling-pkplug-adversary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>