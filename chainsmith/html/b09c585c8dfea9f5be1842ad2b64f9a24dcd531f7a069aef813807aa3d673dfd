<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="google-site-verification" content="_b2avZwzr79oru6lM2Ddae1fNpSIbPaP0H0WNkc2x3k"/>
    <meta name="msvalidate.01" content="CE77828A466C2513F660017CFCB6BA13"/>
    <link rel="icon" href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/favicon.ico">

    

            
    
    <link href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/css/main.css?id=b3e7fe8a6c3736dca145" rel="stylesheet">
    <script type="text/javascript"> var appInsights=window.appInsights||function(a){ function b(a){c[a]=function(){var b=arguments;c.queue.push(function(){c[a].apply(c,b)})}}var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie=d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f="onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c }({ instrumentationKey:"dcb460fe-684e-4d39-bfcd-d3a6f2710a32" }); window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView(); </script>
    <script>
        window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        'Author': 'ESET Research',
        'ArticleCategory': 'Malware',
        'ArticleSection': '(not set)',
        'cookie-bar-hq': true
    });
</script>
<script>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-PMDGSM');
</script>

<!-- This site is optimized with the Yoast SEO plugin v9.2 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Miniduke still duking it out | WeLiveSecurity</title>
<meta name="description" content="At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features."/>
<link rel="canonical" href="https://www.welivesecurity.com/2014/05/20/miniduke-still-duking/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Miniduke still duking it out | WeLiveSecurity" />
<meta property="og:description" content="At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features." />
<meta property="og:url" content="https://www.welivesecurity.com/2014/05/20/miniduke-still-duking/" />
<meta property="og:site_name" content="WeLiveSecurity" />
<meta property="article:tag" content="Malware" />
<meta property="article:section" content="Malware" />
<meta property="article:published_time" content="2014-05-20T05:40:13+00:00" />
<meta property="article:modified_time" content="2014-07-09T22:26:59+00:00" />
<meta property="og:updated_time" content="2014-07-09T22:26:59+00:00" />
<meta property="og:image" content="https://www.welivesecurity.com/wp-content/uploads/2014/05/duke-1024x679.jpg" />
<meta property="og:image:secure_url" content="https://www.welivesecurity.com/wp-content/uploads/2014/05/duke-1024x679.jpg" />
<meta property="og:image:width" content="1024" />
<meta property="og:image:height" content="679" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content="At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features." />
<meta name="twitter:title" content="Miniduke still duking it out | WeLiveSecurity" />
<meta name="twitter:site" content="@welivesecurity" />
<meta name="twitter:image" content="https://www.welivesecurity.com/wp-content/uploads/2014/05/duke.jpg" />
<meta name="twitter:creator" content="@welivesecurity" />
<!-- / Yoast SEO plugin. -->

<link rel="alternate" type="application/rss+xml" title="WeLiveSecurity RSS 2.0 Feed" href="/rss-configurator/" /><style type="text/css" id="syntaxhighlighteranchor"></style>
        <link id="cookie-style" rel="stylesheet" type="text/css" href="https://assets.esetstatic.com/3PS/cookiebar.min.css">

<script>(window.BOOMR_mq=window.BOOMR_mq||[]).push(["addVar",{"rua.upush":"false","rua.cpush":"false","rua.upre":"false","rua.cpre":"false","rua.uprl":"false","rua.cprl":"false","rua.cprf":"false","rua.trans":"","rua.cook":"false","rua.ims":"false","rua.ufprl":"false","rua.cfprl":"false","rua.isuxp":"false","rua.texp":"norulematch"}]);</script>
                              <script>!function(e){var n="https://s.go-mpulse.net/boomerang/";if("False"=="True")e.BOOMR_config=e.BOOMR_config||{},e.BOOMR_config.PageParams=e.BOOMR_config.PageParams||{},e.BOOMR_config.PageParams.pci=!0,n="https://s2.go-mpulse.net/boomerang/";if(window.BOOMR_API_key="7R9SM-QGSYF-QDLJK-UETXR-SPM6B",function(){function e(){if(!o){var e=document.createElement("script");e.id="boomr-scr-as",e.src=window.BOOMR.url,e.async=!0,i.parentNode.appendChild(e),o=!0}}function t(e){o=!0;var n,t,a,r,d=document,O=window;if(window.BOOMR.snippetMethod=e?"if":"i",t=function(e,n){var t=d.createElement("script");t.id=n||"boomr-if-as",t.src=window.BOOMR.url,BOOMR_lstart=(new Date).getTime(),e=e||d.body,e.appendChild(t)},!window.addEventListener&&window.attachEvent&&navigator.userAgent.match(/MSIE [67]\./))return window.BOOMR.snippetMethod="s",void t(i.parentNode,"boomr-async");a=document.createElement("IFRAME"),a.src="about:blank",a.title="",a.role="presentation",a.loading="eager",r=(a.frameElement||a).style,r.width=0,r.height=0,r.border=0,r.display="none",i.parentNode.appendChild(a);try{O=a.contentWindow,d=O.document.open()}catch(_){n=document.domain,a.src="javascript:var d=document.open();d.domain='"+n+"';void(0);",O=a.contentWindow,d=O.document.open()}if(n)d._boomrl=function(){this.domain=n,t()},d.write("<bo"+"dy onload='document._boomrl();'>");else if(O._boomrl=function(){t()},O.addEventListener)O.addEventListener("load",O._boomrl,!1);else if(O.attachEvent)O.attachEvent("onload",O._boomrl);d.close()}function a(e){window.BOOMR_onload=e&&e.timeStamp||(new Date).getTime()}if(!window.BOOMR||!window.BOOMR.version&&!window.BOOMR.snippetExecuted){window.BOOMR=window.BOOMR||{},window.BOOMR.snippetStart=(new Date).getTime(),window.BOOMR.snippetExecuted=!0,window.BOOMR.snippetVersion=12,window.BOOMR.url=n+"7R9SM-QGSYF-QDLJK-UETXR-SPM6B";var i=document.currentScript||document.getElementsByTagName("script")[0],o=!1,r=document.createElement("link");if(r.relList&&"function"==typeof r.relList.supports&&r.relList.supports("preload")&&"as"in r)window.BOOMR.snippetMethod="p",r.href=window.BOOMR.url,r.rel="preload",r.as="script",r.addEventListener("load",e),r.addEventListener("error",function(){t(!0)}),setTimeout(function(){if(!o)t(!0)},3e3),BOOMR_lstart=(new Date).getTime(),i.parentNode.appendChild(r);else t(!1);if(window.addEventListener)window.addEventListener("load",a,!1);else if(window.attachEvent)window.attachEvent("onload",a)}}(),"".length>0)if(e&&"performance"in e&&e.performance&&"function"==typeof e.performance.setResourceTimingBufferSize)e.performance.setResourceTimingBufferSize();!function(){if(BOOMR=e.BOOMR||{},BOOMR.plugins=BOOMR.plugins||{},!BOOMR.plugins.AK){var n=""=="true"?1:0,t="",a="eaaqm7bfmqcrqkqce3yp4aaaabroumbo-f-9f9d60f82-clienttons-s.akamaihd.net",i="false"=="true"?2:1,o={"ak.v":"32","ak.cp":"1251022","ak.ai":parseInt("757730",10),"ak.ol":"0","ak.cr":18,"ak.ipv":6,"ak.proto":"http/1.1","ak.rid":"7c1a3f8","ak.r":44866,"ak.a2":n,"ak.m":"","ak.n":"ff","ak.bpcip":"2001:67c:2564:518::","ak.cport":57266,"ak.gh":"92.122.101.52","ak.quicv":"","ak.tlsv":"tls1.3","ak.0rtt":"","ak.csrc":"-","ak.acc":"reno","ak.t":"1659514926","ak.ak":"hOBiQwZUYzCg5VSAfCLimQ==IIHQ5CLfAzLyW/Zg3xS+exRTjgXVgZ9NHPh4SFfEEOeAOKvv6jfp1uy8YZoLyPV3rLLWC7AlFAmsftav+1CWUTo+DJ3YKitFuIHIx+V8YQOBGouh4sfSJIox4W6VRiOqlWKek2wReFt7HZBdhUUL63G6jqDPgZs84s1uZuiBDpQ9semNS0TVVWK8c+bHIFWJl0Mma/AHlcai6Ct0lnQ2ibMWHiuMaM2u3n2Pi05XozWoFB2zVFnJ0e51i9lzBXI+ldKzTFLhA59HOI9bWsqSvXo3+eRwyJB0J9pqE3LpV8dZX3Wu4iamPoLM/0M+lB3W6owlkpVCyPEfZDp4iJFGXwD/KVPeYVhW6mR/LNs3xhCHfuuPQGxP9PUMckxYMnT73x/JfH1O12/GwYYwt63nBYJCUFl0bAXd8VVwUhcI7pY=","ak.pv":"11","ak.dpoabenc":"","ak.tf":i};if(""!==t)o["ak.ruds"]=t;var r={i:!1,av:function(n){var t="http.initiator";if(n&&(!n[t]||"spa_hard"===n[t]))o["ak.feo"]=void 0!==e.aFeoApplied?1:0,BOOMR.addVar(o)},rv:function(){var e=["ak.bpcip","ak.cport","ak.cr","ak.csrc","ak.gh","ak.ipv","ak.m","ak.n","ak.ol","ak.proto","ak.quicv","ak.tlsv","ak.0rtt","ak.r","ak.acc","ak.t","ak.tf"];BOOMR.removeVar(e)}};BOOMR.plugins.AK={akVars:o,akDNSPreFetchDomain:a,init:function(){if(!r.i){var e=BOOMR.subscribe;e("before_beacon",r.av,null,null),e("onbeacon",r.rv,null,null),r.i=!0}return this},is_complete:function(){return!0}}}}()}(window);</script></head>
<body class="no-js single noimage">
<noscript>
	<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PMDGSM" height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>

<div class="main">
    <header id="site-header" class="container">
        <div class="row">
            <div class="col-md-4 col-sm-12 col-xs-12 pull-right" id="header-nav">
                <div class="row">
                    <div class="hidden-lg hidden-md col-sm-7 col-xs-8 hidden-xxs">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
                    <div class="col-md-8 hidden-sm hidden-xs languages">
                        <div class="dropdown">
	<button class="btn btn-default dropdown-toggle" type="button" id="main-language-picker" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    	<span class="text">In English</span>
    	<span class="icomoon icon-icon_arrow"></span>
  	</button>
  	<ul class="dropdown-menu" aria-labelledby="main-language-picker">
            <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
      	</ul>
</div>                    </div>
                    <div class="col-md-4 col-sm-2 col-xs-3 menu-trigger">
                        <div class="menu-btn">
	<span class="text">Menu</span>
	<button type="button" id="menu-trigger" class="tcon tcon-menu--xcross" aria-label="toggle menu">
        <span class="wrapper">
            <span class="tcon-menu__lines" aria-hidden="true"></span>
            <span class="tcon-visuallyhidden">toggle menu</span>
        </span>
    </button>
</div>                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 imc" id="main-menu">
                        <nav class="menu clearfix imc">
                            <ul class="col-md-12 col-sm-6 col-xs-6 imc">
                                                                    <li class="">
                                        <a href="/">
                                            All Posts                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="http://welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/">
                                            Ukraine Crisis – Digital Security Resource Center                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/we-live-progress/">
                                            We Live Progress                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/research">
                                            Research                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/how-to/">
                                            How To                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/media/videos/">
                                            Videos                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/conference-papers/">
                                            Conference Materials                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/white-papers/">
                                            White Papers                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/threat-reports/">
                                            Threat Reports                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/magazine/">
                                            Magazine                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/our-experts/">
                                            Our Experts                                        </a>
                                    </li>
                                                            </ul>

                            <div class="col-md-12 col-sm-6 col-xs-6 imc">
                                <ul class="languages hidden-lg hidden-md hidden-xxs col-xs-12 imc">
                                        <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
                                    </ul>
                            </div>
                        </nav>
                    </div>
                    <div class="menu-overlay col-md-12 col-sm-12 col-xs-12 imc">
                        <div class="inner imc"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-5 hidden-sm hidden-xs pull-left" id="header-logo">
                <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                <span class="slogan hidden-sm hidden-xs">
						Award-winning news, views, and insight from the ESET <strong>security community</strong>					</span>
            </div>
        </div>
    </header>
        <section id="article-detail">
            <div class="hero-noimage">
	<div class="container promo-text">
		<div class="inner clearfix">
			<div class="col-md-11 col-sm-11 col-xs-12 no-padding">
				<h1>Miniduke still duking it out</h1>
<div class="excerpt">At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features. Here, we take a closer look. </div>
<div class="post-meta">
    <div class="wls-authors">
            </div>
    <span class="meta">
		<span class="strong">
			<time datetime="2014-05-20 05:40:13">20 May 2014 - 05:40AM</time>
		</span>
			</span>
</div>
			</div>
		</div>
	</div>
</div>	

            <div class="content">
                <div class="social-wrapper" id="social-sharer">
                    <span class="text">Share</span>
	<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F05%2F20%2Fminiduke-still-duking%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
		<span class="icomoon icon-icon_fb"></span>
	</a>
	<a class="share-twitter" href="https://twitter.com/intent/tweet?&url=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F05%2F20%2Fminiduke-still-duking%2F&text=Miniduke still duking it out%0A&via=welivesecurity" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
		<span class="icomoon icon-icon_tw"></span>
	</a>
	<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F05%2F20%2Fminiduke-still-duking%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
		<span class="icomoon icon-icon_in"></span>
	</a>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-1 col-sm-1 hidden-xs">

                        </div>
                        <div class="col-md-10 col-sm-10 col-xs-12 formatted">

                            <div class="excerpt noimage">
                                <p>At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. New variants of MiniDuke display interesting and novel features. Here, we take a closer look. </p>
                            </div>

                            <p>At the end of April Microsoft announced that a vulnerability in Word was actively being exploited. This vulnerability occurred in parsing RTF files and was assigned <a href="http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-1761">CVE-2014-1761</a>, a thorough analysis of which can be found on the <a href="http://h30499.www3.hp.com/t5/HP-Security-Research-Blog/Technical-Analysis-of-CVE-2014-1761-RTF-Vulnerability/ba-p/6440048#.U3Dtn_ldWX0">HP Security Research blog</a>. We have since seen multiple cases where this exploit is used to deliver malware and one was particularly interesting as it contained a new variant of MiniDuke (also known as <a href="http://virusradar.com/en/Win32_SandyEva/detail">Win32/SandyEva</a>).</p>
<p>MiniDuke was first discussed by Kaspersky in March 2013 in their paper <a href="https://www.securelist.com/en/downloads/vlpdfs/themysteryofthepdf0-dayassemblermicrobackdoor.pdf"><i>The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor</i></a>and shortly after in a <a href="http://labs.bitdefender.com/wp-content/uploads/downloads/2013/04/MiniDuke_Paper_Final.pdf">paper</a> by Bitdefender. Some of the characteristics of MiniDuke &#8212; such as its small size (20 KB), its crafty use of assembly programming, and the use of zero-day exploits for distribution &#8212; made it an intriguing threat. Although the backdoor is still quite similar to its previous versions, some important changes were made since last year, the most notable being the introduction of a secondary component written in <a href="https://en.wikipedia.org/wiki/JScript">JScript</a> to contact a <a href="http://www.virusradar.com/en/glossary/command-and-control-server">C&amp;C server</a> via Twitter.</p>
<div id="attachment_44371" style="width: 645px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2014/05/1-exploitdoc.png"><img class="wp-image-44371" src="/wp-content/uploads/2014/05/1-exploitdoc.png" alt="The RTF exploit document" width="635" height="813" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/1-exploitdoc.png 749w, https://www.welivesecurity.com/wp-content/uploads/2014/05/1-exploitdoc-234x300.png 234w" sizes="(max-width: 635px) 100vw, 635px" /></a><p class="wp-caption-text">The RTF exploit document</p></div>
<p>The exploit document was named <span style="font-family: 'courier new', courier;"><i>Proposal-Cover-Sheet-English.rtf</i> </span>and is quite bland when compared to the documents that were used in 2013, which were of a political nature. We received the document on April 8th, only three days after the compilation of the MiniDuke payload, dated April 5th in the PE header. The payload remains quite small at only 24 KB.</p>
<p>The functionality of the shellcode which is executed by triggering the vulnerability is rather simple and straightforward. After decrypting itself and obtaining the addresses of some functions exported by <span style="font-family: 'courier new', courier;">kernel32.dll</span>, it decrypts and drops the payload in the<span style="font-family: 'courier new', courier;"> %TEMP%</span> directory in a file named &#8220;<span style="font-family: 'courier new', courier;">a.l</span>&#8221; which is subsequently loaded by calling <span style="font-family: 'courier new', courier;">kernel32!LoadLibraryA</span>.</p>
<p>An interesting thing about the shellcode is that before transferring control to any API function it checks the first bytes of the function in order to detect hooks and debugger breakpoints which may be set by security software and monitoring tools. If any of these are found the shellcode skips the first 5 bytes of the function being called by manually executing prologue instructions (<span style="font-family: 'courier new', courier;">mov edi, edi; push ebp; mov ebp, esp</span>) and then jumping to the function code as illustrated below. <a href="/wp-content/uploads/2014/05/2-shellcode.png"><img class="aligncenter size-full wp-image-44372" src="/wp-content/uploads/2014/05/2-shellcode.png" alt="2-shellcode" width="627" height="388" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/2-shellcode.png 627w, https://www.welivesecurity.com/wp-content/uploads/2014/05/2-shellcode-300x185.png 300w" sizes="(max-width: 627px) 100vw, 627px" /></a> The next graph presents the execution flow of this malware when the exploitation is successful. As mentioned previously this version of the MiniDuke payload comes with two modules which we refer to as the main module and the TwitterJS module.</p>
<div id="attachment_44373" style="width: 645px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2014/05/3-schema.png"><img class="wp-image-44373" src="/wp-content/uploads/2014/05/3-schema-1024x335.png" alt="Execution flow of MiniDuke" width="635" height="208" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/3-schema-1024x335.png 1024w, https://www.welivesecurity.com/wp-content/uploads/2014/05/3-schema-300x98.png 300w" sizes="(max-width: 635px) 100vw, 635px" /></a><p class="wp-caption-text">Execution flow of MiniDuke</p></div>
<p>&nbsp;</p>
<h1><b>Main Component</b></h1>
<h2><b>Installation</b></h2>
<p>Once MiniDuke receives control it checks that the host process is not <span style="font-family: 'courier new', courier;">rundll32.exe</span> and whether the current directory is <span style="font-family: courier new,courier;">%TEMP%</span>. If either of those conditions is met the malware assumes it is run for the first time and it proceeds with its installation onto the system. MiniDuke gathers information about the system and encrypts its configuration based on that information, a method also used by <a href="http://go.eset.com/us/resources/white-papers/osx_flashback.pdf">OSX/Flashback</a> (this process is called watermarking by Bitdefender). The end result is that it is impossible to retrieve the configuration of an encrypted payload if analyzing it on a different computer. The information collected on infection has not changed since the previous version and consists of the following values:</p>
<ul>
<li>volume serial number (obtained from <span style="font-family: courier new,courier;">kernel32!GetVolumeInformationA</span>)</li>
<li>CPU information (obtained with the <span style="font-family: courier new,courier;">cpuidinstruction</span>)</li>
<li>computer name (obtained from <span style="font-family: courier new,courier;">kernel32!GetComputerNameA</span>)</li>
</ul>
<p>Once the encrypted version of the malware is created, it is written into a file in the <span style="font-family: courier new,courier;">%ALLUSERSPROFILE%\Application Data </span>directory. The name of the file is randomly picked from the following values (you can find this listing and those of the next screenshots on the <a href="http://www.virusradar.com/en/Win32_SandyEva.G/description">VirusRadar description</a>: <a href="/wp-content/uploads/2014/05/4-filename.png"><img class="aligncenter size-full wp-image-44374" src="/wp-content/uploads/2014/05/4-filename.png" alt="4-filename" width="505" height="55" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/4-filename.png 505w, https://www.welivesecurity.com/wp-content/uploads/2014/05/4-filename-300x32.png 300w, https://www.welivesecurity.com/wp-content/uploads/2014/05/4-filename-500x55.png 500w" sizes="(max-width: 505px) 100vw, 505px" /></a> The filename extension is also picked randomly from the following list: <a href="/wp-content/uploads/2014/05/5-fileext.png"><img class="aligncenter size-full wp-image-44375" src="/wp-content/uploads/2014/05/5-fileext.png" alt="5-fileext" width="202" height="34" /></a> To persist on the infected system after reboots, the malware creates a hidden .<span style="font-family: courier new,courier;">LNK </span>file in the &#8220;<span style="font-family: courier new,courier;">Startup</span>&#8221; directory pointing to the modified main module. The name of the <span style="font-family: courier new,courier;">.LNK </span>file is randomly drawn from the following values: <a href="/wp-content/uploads/2014/05/6-lnkname.png"><img class="aligncenter size-full wp-image-44376" src="/wp-content/uploads/2014/05/6-lnkname.png" alt="6-lnkname" width="593" height="47" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/6-lnkname.png 593w, https://www.welivesecurity.com/wp-content/uploads/2014/05/6-lnkname-300x23.png 300w" sizes="(max-width: 593px) 100vw, 593px" /></a> The <span style="font-family: 'courier new', courier;">.LNKfile</span> is created using a COM object with the <i>IShellLinkA </i>interface and contains the following command: &#8220;<span style="font-family: courier new,courier;">C:\Windows\system32\rundll32.exe <i>%path_to_main_module%</i>, <i>export_function</i></span>&#8221; Which gives something like: <i>&#8220;<span style="font-family: courier new,courier;">C:\Windows\system32\rundll32.exe C:\DOCUME~1\ALLUSE~1\APPLIC~1\data.cat, IlqUenn</span></i><i>&#8220;</i>.</p>
<h2><b>Operation</b></h2>
<p>When the malware is loaded by <span style="font-family: courier new,courier;">rundll32.exe</span> and the current directory isn&#8217;t <span style="font-family: courier new,courier;">%TEMP%</span>, the malware starts with gathering the same system information as described in the <a href="#installation">&#8220;Installation&#8221; section</a> to decrypt configuration information. As with the previous version of MiniDuke, it checks for the presence of the following processes in the system: <a href="/wp-content/uploads/2014/05/7-processes.png"><img class="aligncenter size-full wp-image-44377" src="/wp-content/uploads/2014/05/7-processes.png" alt="7-processes" width="718" height="81" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/7-processes.png 718w, https://www.welivesecurity.com/wp-content/uploads/2014/05/7-processes-300x33.png 300w" sizes="(max-width: 718px) 100vw, 718px" /></a> If any of these are found in the system the configuration information will be decrypted incorrectly, <i>i.e</i>. the malware will run on the system without any communication to C&amp;C servers. If the configuration data is decrypted correctly, MiniDuke retrieves the Twitter page of <b>@FloydLSchwartz</b> in search of URLs by which to reach C&amp;C server. It looks for the tag &#8220;<span style="font-family: 'courier new', courier;">X)))</span>&#8221; on the page (MiniDuke was searching for &#8220;<span style="font-family: courier new,courier;">uri!</span>&#8221; in previous samples) and if the tag is found it decrypts a URL from the data that follows it. The Twitter account @FloydLSchwartz does exist but has only retweets and no strings with the special tag. <a href="/wp-content/uploads/2014/05/8-twitter1.png"><img class="aligncenter size-full wp-image-44378" src="/wp-content/uploads/2014/05/8-twitter1.png" alt="8-twitter1" width="602" height="515" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/8-twitter1.png 602w, https://www.welivesecurity.com/wp-content/uploads/2014/05/8-twitter1-300x256.png 300w" sizes="(max-width: 602px) 100vw, 602px" /> </a> As the next step, MiniDuke gathers the following information from the infected systems:</p>
<ul>
<li>computer name and user domain name</li>
<li>country code of the infected host IP address obtained from <a href="http://www.geoiptool.com/">http://www.geoiptool.com</a></li>
<li>OS version information</li>
<li>domain controller name, user name, groups a user account belongs to</li>
<li>a list of AV products installed onto the system</li>
<li>Internet proxy configuration</li>
<li>version of MiniDuke</li>
</ul>
<p>This information is then sent to the C&amp;C server along with the request to download a payload. The final URL used to communicate with the C&amp;C server looks like this: <em><span style="font-family: courier new,courier;">&lt;url_start&gt;/create.php?&lt;rnd_param&gt;=&lt;system_info&gt;</span></em> Those tokens are derived as follows:</p>
<ul>
<li><span style="font-family: courier new,courier;"><i>url_start </i></span>– the URL retrieved from the twitter account</li>
<li><i><span style="font-family: courier new,courier;">rnd_param</span> </i>– randomly generated of lower case alphabet characters parameter name in the query string of the URL</li>
<li><i><span style="font-family: courier new,courier;">system_info</span> </i>– base64 encoded and encrypted system information</li>
</ul>
<p>An example of such a URL is given below: <a href="/wp-content/uploads/2014/05/9-ur.png"><img class="aligncenter wp-image-44379" src="/wp-content/uploads/2014/05/9-ur-1024x18.png" alt="9-ur" width="800" height="14" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/9-ur-1024x18.png 1024w, https://www.welivesecurity.com/wp-content/uploads/2014/05/9-ur-300x5.png 300w, https://www.welivesecurity.com/wp-content/uploads/2014/05/9-ur.png 1222w" sizes="(max-width: 800px) 100vw, 800px" /></a> The payload is downloaded in the file named &#8220;<span style="font-family: courier new,courier;">fdbywu</span>&#8221; using the <span style="font-family: courier new,courier;">urlmon!URLDownloadToFileA</span> API: <img class="aligncenter wp-image-44380 size-full" src="/wp-content/uploads/2014/05/10-download.png" alt="10-download" width="682" height="436" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/10-download.png 682w, https://www.welivesecurity.com/wp-content/uploads/2014/05/10-download-300x191.png 300w, https://www.welivesecurity.com/wp-content/uploads/2014/05/10-download-65x42.png 65w" sizes="(max-width: 682px) 100vw, 682px" /> The downloaded payload is a fake GIF8 file containing encrypted executable. The malware processes the downloaded file in the same way as previous samples of MiniDuke: it verifies the integrity of the file using RSA-2048, then decrypts it, stores in a file and finally executes it. The RSA-2048 public key to verify integrity of the executable inside the GIF file is the same as in the previous version of MiniDuke.</p>
<h2><b>Twitter Generation Algorithm</b></h2>
<p>In the event that MiniDuke is unable to retrieve a C&amp;C URL from this account, it generates a username to search for based on the current date. The search query changes roughly every seven days and is similar to the backup mechanism in previous versions that was using Google searches. A Python implementation of the algorithm can be found in <a href="#appendixb">Appendix B</a>.</p>
<h2><b>TwitterJS component</b></h2>
<p>The TwitterJS module is extracted by creating a copy of the Windows DLL <span style="font-family: courier new,courier;">cryptdll.dll</span>, injecting a block of code into it and redirecting the exported functions to this code. Here is how the export address table of the patched binary looks after modifications. <a href="/wp-content/uploads/2014/05/11-exports.png"><img class="aligncenter wp-image-44381 size-full" src="/wp-content/uploads/2014/05/11-exports.png" alt="11-exports" width="564" height="366" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/11-exports.png 564w, https://www.welivesecurity.com/wp-content/uploads/2014/05/11-exports-300x194.png 300w, https://www.welivesecurity.com/wp-content/uploads/2014/05/11-exports-65x42.png 65w" sizes="(max-width: 564px) 100vw, 564px" /></a> This file is then stored in an <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa364404(v=vs.85).aspx">Alternate Data Stream</a> (ADS) in <span style="font-family: courier new,courier;">NTUSER.DAT</span> in the <span style="font-family: courier new,courier;">%USERPROFILE%</span> folder. Finally this DLL is registered as the Open command when a drive is open, which has the effect of starting the bot every time the user opens a disk drive. Below you can find the content of the <span style="font-family: 'courier new', courier;">i</span><span style="font-family: courier new,courier;">nit.cmd </span>script used by MiniDuke to install TwitterJS module onto the system. <a href="/wp-content/uploads/2014/05/12-install.png"><img class="aligncenter wp-image-44382 size-full" src="/wp-content/uploads/2014/05/12-install.png" alt="12-install" width="945" height="148" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/12-install.png 945w, https://www.welivesecurity.com/wp-content/uploads/2014/05/12-install-300x46.png 300w" sizes="(max-width: 945px) 100vw, 945px" /></a> When loaded, TwitterJS instantiates the JScript COM object and decrypts a JScript file containing the core logic of the module. <a href="/wp-content/uploads/2014/05/13-jscript1.png"><img class="aligncenter wp-image-44467 size-full" src="/wp-content/uploads/2014/05/13-jscript1.png" alt="13-jscript" width="789" height="142" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/13-jscript1.png 789w, https://www.welivesecurity.com/wp-content/uploads/2014/05/13-jscript1-300x53.png 300w" sizes="(max-width: 789px) 100vw, 789px" /></a> Prior to executing it, MiniDuke applies a light encoding to the script: The next images show the result of two separate obfuscations, we can see that the variables have different values. This is probably done to thwart security systems that scan at the entry points of the JScript engine.</p>
<div id="attachment_44384" style="width: 761px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2014/05/14-obfuscation1.png"><img class="size-full wp-image-44384" src="/wp-content/uploads/2014/05/14-obfuscation1.png" alt="Result of first obfuscation" width="751" height="37" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/14-obfuscation1.png 751w, https://www.welivesecurity.com/wp-content/uploads/2014/05/14-obfuscation1-300x14.png 300w" sizes="(max-width: 751px) 100vw, 751px" /></a><p class="wp-caption-text">Result of first obfuscation</p></div>
<div id="attachment_44385" style="width: 763px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2014/05/15-obfuscation2.png"><img class="size-full wp-image-44385" src="/wp-content/uploads/2014/05/15-obfuscation2.png" alt="Result of second obfuscation" width="753" height="36" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/15-obfuscation2.png 753w, https://www.welivesecurity.com/wp-content/uploads/2014/05/15-obfuscation2-300x14.png 300w" sizes="(max-width: 753px) 100vw, 753px" /></a><p class="wp-caption-text">Result of second obfuscation</p></div>
<p>The purpose of this script is to use Twitter to find a C&amp;C and retrieve JScript code to execute. It first generates a Twitter user to search for; this search term changes every 7 days and is actually a match to the real account name, not the Twitter account name. The bot then visits the Twitter profiles returned by the search and looks for links that end with &#8220;<span style="font-family: 'courier new', courier;">.xhtml</span>&#8220;. When one is found, it replaces &#8220;<span style="font-family: courier new,courier;">.xhtml</span>&#8221; with &#8220;<span style="font-family: courier new,courier;">.php</span>&#8221; and fetches that link.  Information about the computer is embedded in the <span style="font-family: courier new,courier;">Accept</span> HTTP header. <a href="/wp-content/uploads/2014/05/16-twitterjs1.png"><img class="aligncenter wp-image-44386 size-large" src="/wp-content/uploads/2014/05/16-twitterjs1-1024x127.png" alt="16-twitterjs1" width="1024" height="127" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/16-twitterjs1-1024x127.png 1024w, https://www.welivesecurity.com/wp-content/uploads/2014/05/16-twitterjs1-300x37.png 300w, https://www.welivesecurity.com/wp-content/uploads/2014/05/16-twitterjs1.png 1132w" sizes="(max-width: 1024px) 100vw, 1024px" /></a> The first link on the retrieved page should contain base64 data; the name attribute of the link is used as a rolling XOR key to decrypt the JScript code. Finally, MiniDuke calculates a hash of the fetched script and compares it with a hardcoded hash in the TwitterJS script. If they match, the fetched script is executed by calling <i>eval().</i> <a href="/wp-content/uploads/2014/05/17-twitterjs2.png"><img class="aligncenter size-full wp-image-44387" src="/wp-content/uploads/2014/05/17-twitterjs2.png" alt="17-twitterjs2" width="970" height="285" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/17-twitterjs2.png 970w, https://www.welivesecurity.com/wp-content/uploads/2014/05/17-twitterjs2-300x88.png 300w" sizes="(max-width: 970px) 100vw, 970px" /></a></p>
<h2><b>The tale of the broken SHA-1</b></h2>
<p>The code hashing algorithm used by the component looks very much like SHA-1 but outputs different hashes (you can find the complete implementation in <a href="#appendixb">Appendix B</a>. We decided to search for what was changed in the algorithm; one of our working hypotheses was that the algorithm might have been altered to make collisions feasible. We couldn&#8217;t find an obvious difference; all the constants and the steps of the algorithm were as expected. Then we noticed that for short messages only the second 32-bit word was different when compared to the original SHA-1.</p>
<p><span style="font-family: 'courier new', courier;">SHA1(&#8216;test&#8217;) : a94a8fe5<b>ccb19ba6</b>1c4c0873d391e987982fbbd3 </span><br />
<span style="font-family: 'courier new', courier;">TwitterJS_SHA1(&#8216;test&#8217;) : a94a8fe5<b>dce4f01c</b>1c4c0873d391e987982fbbd3</span></p>
<p>By examining how this 2nd word was generated we finally discovered that this was caused by a scope issue.  As shown below the SHA-1 function used a variable named <strong>f: </strong>the function Z() is then called which also uses a variable named <b>f </b>without the <span style="font-family: 'courier new', courier;">var</span> keyword, causing it to be treated as a global variable rather than local to the function. The end result is that the value of <strong>f</strong> is also changed in the SHA-1 function which affects the value of the 2nd word for that round and ultimately the whole hash for long messages.</p>
<p><a href="/wp-content/uploads/2014/05/image2.jpg"><img class="alignleft wp-image-44501 " src="/wp-content/uploads/2014/05/image2-300x166.jpg" alt="image2" width="300" height="166" srcset="https://www.welivesecurity.com/wp-content/uploads/2014/05/image2-300x166.jpg 300w, https://www.welivesecurity.com/wp-content/uploads/2014/05/image2-143x79.jpg 143w, https://www.welivesecurity.com/wp-content/uploads/2014/05/image2-298x165.jpg 298w, https://www.welivesecurity.com/wp-content/uploads/2014/05/image2.jpg 317w" sizes="(max-width: 300px) 100vw, 300px" /></a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>A likely explanation of how this problem came to be is that the variable names were changed to single letters using an automated tool prior to embedding it in the payload. The 2 <i>f</i> variables probably had different names in the original script which avoided the issue. So this leaves us with two takeaways: 1) The difference in the hashing algorithm was unintentional and 2) Always declare your local variables with the <span style="font-family: 'courier new', courier;">var</span> keyword. ;-)</p>
<h2><b>Twitter DGA accounts</b></h2>
<p>We generated the list of Twitter search terms for 2013-2014 and checked if any of those were registered. At the moment only one exists, <b>@AA2ADcAOAA</b>, which is the TwitterJS account that was generated between August 21st and 27th 2013. This account has no tweets. In an effort to discover potential victims, we registered the Twitter accounts corresponding to the current week both for the main and TwitterJS components and set up tweets with encrypted URLs so that an infected computer would reach out to our server. So far we have received connections via the TwitterJS accounts from four computers located in Belgium, France and the UK. We have contacted national CERTs to notify the affected parties. We detect the RTF exploit document as <a href="http://virusradar.com/en/Win32_Exploit.CVE-2014-1761/detail">Win32/Exploit.CVE-2014-1761.D</a> and the MiniDuke components as <a href="http://www.virusradar.com/en/Win32_SandyEva.G/description">Win32/SandyEva.G</a>.</p>
<h3></h3>
<h3><b>Appendix A: SHA-1 hashes</b></h3>
<table>
<tbody>
<tr>
<td><b>SHA-1</b></td>
<td><b>Description</b></td>
</tr>
<tr>
<td><span style="font-family: courier new,courier;">58be4918df7fbf1e12de1a31d4f622e570a81b93</span></td>
<td><span style="font-family: arial,helvetica,sans-serif;">RTF with Word exploit CVE-2014-1761</span></td>
</tr>
<tr>
<td><span style="font-family: courier new,courier;">b27f6174173e71dc154413a525baddf3d6dea1fd</span></td>
<td><span style="font-family: arial,helvetica,sans-serif;">MiniDuke main component (before config encryption)</span></td>
</tr>
<tr>
<td><span style="font-family: courier new,courier;">c059303cd420dc892421ba4465f09b892de93c77</span></td>
<td><span style="font-family: arial,helvetica,sans-serif;">TwitterJS javascript code</span></td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><a id="appendixb"></a> <b>Appendix B &amp;C: DGA algorithms, Twitter DGA accounts</b></p>
<p class="p1">The DGA scripts and account lists have been moved to our Github account : <span class="s1"><a href="https://github.com/eset/malware-research/tree/master/miniduke">https://github.com/eset/malware-research/tree/master/miniduke</a></span></p>

                            
                                                            <div class="dot">
                                    <span class="icomoon icon-icon_article_dot"></span>
                                </div>

                                <div class="meta">
                                    <div class="wls-authors wls-authors-footer">
                                                                            </div>
                                    <span class="strong">
								        <time datetime="2014-05-20 05:40:13">20 May 2014 - 05:40AM</time>
                                    </span>
                                </div>
                            
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text"><em>Sign up to receive an email update whenever a new article is published in our <a href="https://www.welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/" target="_blank" rel="noopener">Ukraine Crisis – Digital Security Resource Center</a></em></span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="TOPIC" value="We Live Security Ukraine Newsletter">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="button-flag">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text">Newsletter</span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="NEWSLETTER" value="We Live Security">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>

                                                            <div class="similar-articles row">
                                    <div class="heading-line col-md-12 col-sm-12 col-xs-12">
                                        <h3><span class="text">Similar Articles</span></h3>
                                    </div>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/malware/" class="category-tag-btn">Malware</a>                                                <a href="https://www.welivesecurity.com/2022/06/16/how-emotet-is-changing-tactics-microsoft-tightening-office-macro-security/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/06/emotet-malware-botnet-macros-mark-web-623x415.jpg"
                                                         alt="Miniduke still duking it out">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/06/16/how-emotet-is-changing-tactics-microsoft-tightening-office-macro-security/">
                                                    How Emotet is changing tactics in response to Microsoft’s tightening of Office macro security                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/eset-research/" class="category-tag-btn">ESET Research</a>                                                <a href="https://www.welivesecurity.com/2022/01/25/watering-hole-deploys-new-macos-malware-dazzlespy-asia/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2022/01/dazzlespy-malware-macos-623x415.jpg"
                                                         alt="Miniduke still duking it out">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2022/01/25/watering-hole-deploys-new-macos-malware-dazzlespy-asia/">
                                                    Watering hole deploys new macOS malware, DazzleSpy, in Asia                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/malware/" class="category-tag-btn">Malware</a>                                                <a href="https://www.welivesecurity.com/2021/10/15/virus-bulletin-old-malware-never-dies-gets-more-targeted/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2021/10/virus-bulletin-old-malware-targeted-attacks-623x415.jpg"
                                                         alt="Miniduke still duking it out">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2021/10/15/virus-bulletin-old-malware-never-dies-gets-more-targeted/">
                                                    Virus Bulletin: Old malware never dies – it just gets more targeted                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/malware/" class="category-tag-btn">Malware</a>                                                <a href="https://www.welivesecurity.com/2021/08/06/anatomy-native-iis-malware/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2021/07/wls_anatomy-iis-malware-2021_1770540524_1000x667-623x432.jpg"
                                                         alt="Miniduke still duking it out">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2021/08/06/anatomy-native-iis-malware/">
                                                    Anatomy of native IIS malware                                                </a>
                                            </h4>
                                        </article>
                                                                    </div>
                            
                            <div class="comments row">
                                <div class="heading-line col-xs-12">
                                    <h3><span class="text">Discussion</span></h3>
                                                                            
<div id="disqus_thread"></div>
                                                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    	</div> 	<footer id="site-footer">
		<div class="container">
			<div class="row">
				<div class="col-md-2">
                    <div class="hidden-sm hidden-xs">
                        <div class="logo-wrapper footer clearfix">
                            <div class="dark clearfix">
                                <a href="https://www.welivesecurity.com/" class="wls">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-1.svg" alt="Welivesecurity.com">
                                </a>
                                <a href="https://www.eset.com" class="eset">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-2.svg" alt="by ESET">
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="hidden-lg hidden-md">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
				</div>
				<nav id="footer" class="clearfix">
											<div class="mobile-block">
																<div class="col-md-2 col-md-offset-2">
										<ul>
																							<li>
													<a href="/">Home</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/about-us/">About Us</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/contact-us/">Contact Us</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/sitemap/">Sitemap</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/our-experts/">Our Experts</a>
												</li>
																							<li>
													<a href="https://eset.com">ESET</a>
												</li>
																					</ul>
									</div>
													</div>
											<div class="mobile-block">
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/research/">Research</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/category/how-to/">How To</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/categories/">Categories</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/rss-configurator/">RSS Configurator</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/news-widget-generator/">News Widget</a>
												</li>
																					</ul>
									</div>
													</div>
									</nav>
			</div>
			<div class="row">
				<div class="col-md-12 legal clearfix">
					<div class="wrap clearfix">
													<span>
								<a href="https://www.welivesecurity.com/privacy/">
									Privacy Policy								</a>
							</span>
													<span>
								<a href="https://www.welivesecurity.com/legal-information/">
									Legal Information								</a>
							</span>
											</div>
					<span class="copyright pull-right">Copyright &copy; ESET, All Rights Reserved</span>
				</div>
							</div>
		</div>
	</footer>
	
	<button id="back-to-top" class="animated-scroll" data-target="absoluteTop">
		<span class="icomoon icon-icon_arrow"></span>
		<span class="text">Back to top</span>
	</button>

			<div class="social-wrapper-mobile hidden-lg hidden-md hidden-sm" id="mobile-article-sharer">
			<div class="col-xs-12">
				<div class="icons" style="text-align: center;">
											<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F05%2F20%2Fminiduke-still-duking%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
							<span class="icomoon icon-icon_fb"></span>
						</a>
											<a class="share-twitter" href="https://twitter.com/intent/tweet?https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F05%2F20%2Fminiduke-still-duking%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
							<span class="icomoon icon-icon_tw"></span>
						</a>
											<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2014%2F05%2F20%2Fminiduke-still-duking%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
							<span class="icomoon icon-icon_in"></span>
						</a>
									</div>
			</div>
		</div>
	
	<script>
		var baseUrl = "https://www.welivesecurity.com/";
	</script>
	
			<script>
            !function(){if(-1==window.document.cookie.indexOf("user_rec=1")){function e(e,o){var t=document.createElement("img");t.setAttribute("style","display:none"),t.src=e+o,window.document.body.appendChild(t)}function o(){d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Default%20status&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=defaultStatus&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c)}function t(){console.log("GA and GTM are loaded."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=11",e(u,a),e(s,c)}function n(){var e=new Date;e.setTime(e.getTime()+63072e6);var o="expires="+e.toUTCString();window.document.cookie="user_rec=1; "+o+"; path=/"}var d,a,c,i,r,l="UA-76266002-27",g=window.location.href,s="https://cdn1.esetstatic.com/ESET/INT/assets/img/check.png",u="https://www.google-analytics.com/collect",w="wls",m=0,h=function e(){i=window.ga&&ga.create?1:0,r=window.google_tag_manager?1:0,m++,console.log("Timer: ",m),h=setTimeout(e,500)};window.document.addEventListener&&(d=1e6*Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Script%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=scriptLoaded&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c),window.addEventListener("beforeunload",o),window.ga&&ga.create&&window.google_tag_manager?(t(),window.removeEventListener("beforeunload",o),n()):(setTimeout(h,500),setTimeout(function(){clearTimeout(h),i&&r?t():i&&!r?(console.log("GA is loaded and GTM is blocked."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=10",e(u,a),e(s,c)):!i&&r?(console.log("GA is blocked and GTM is loaded."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=01",e(u,a),e(s,c)):i||r||(console.log("GA is blocked and GTM is blocked."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=00",e(u,a),e(s,c)),window.removeEventListener("beforeunload",o),n()},1e4)))}}();
		</script>
	
	<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/js/main.js?id=fef3139dcedd23afc232"></script>
    <!-- Version: v1.10.0.0df103.pro.azeu -->
    		<script type="text/javascript">
			var disqus_config = function () { 
				this.language = "en";
			};
			var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":"", "numsVisible": false};
			var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
		</script>
		<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/static/js/crayon.min.js"></script>

			
		
    <script>
    	Main.init();
    </script>

    <script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"welivesecurity"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.16'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.16"},"disqusIdentifier":"44351 \/?p=44351","disqusShortname":"welivesecurity","disqusTitle":"Miniduke still duking it out","disqusUrl":"https:\/\/www.welivesecurity.com\/2014\/05\/20\/miniduke-still-duking\/","postId":"44351"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.16'></script>
    <script src="https://assets.esetstatic.com/3PR/app.min.js"></script>
  </body>
</html>
