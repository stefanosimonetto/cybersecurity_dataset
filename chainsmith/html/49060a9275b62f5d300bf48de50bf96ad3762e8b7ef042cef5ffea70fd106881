<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: What’s the deal with sender authentication? Part 1</title>
<meta name="description" content="Sender authentication is a hot topic in the world of email. It has a number of uses and a number of suggested uses. Which ones work in real life? Which ones don’t quite measure up? Can we use authentication to mitigate spoofing? Can we use it to guarantee authenticity? And how do we authenticate email, anyway? Terry Zink provides the answers to these questions and more." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 2183;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201006-sender-authentication"></a>What&rsquo;s the deal with sender authentication? Part 1</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2010-06-01</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Terry</span> <span class="surname">Zink</span></h3><span class="orgname">Microsoft</span>, <span class="orgdiv">USA</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Sender authentication is a hot topic in the world of email. It has a number of uses and a number of suggested uses. Which ones work in real life? Which ones don&rsquo;t quite measure up? Can we use authentication to mitigate spoofing? Can we use it to guarantee authenticity? And how do we authenticate email, anyway? Terry Zink provides the answers to these questions and more.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2010 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-3789" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-3789" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id4708571"></a></span></dt><dt><span class="sect1"><a href="#id3219618">Email</a></span></dt><dt><span class="sect1"><a href="#id3599328">An audit trail</a></span></dt><dt><span class="sect1"><a href="#id3332643">Spammer techniques</a></span></dt><dt><span class="sect1"><a href="#id2525806">The plot thickens</a></span></dt><dt><span class="sect1"><a href="#id3332484">Weak authentication</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4708571"></a></h2></div></div></div><p>Sender authentication is a hot topic in the world of email. It has a number of uses and a number of suggested uses. Which ones work in real life? Which ones don&rsquo;t quite measure up? Can we use authentication to mitigate spoofing? Can we use it to guarantee authenticity? And how do we authenticate email, anyway?</p><p>The email system is modelled on the real-life postal mail system &ndash; which has both strengths and weaknesses. Let&rsquo;s suppose for the sake of argument that I have a best friend whose name is Tony. Let&rsquo;s also suppose that I live in the Seattle area in Washington in the US, and that Tony has recently moved to Sacramento, California. The only way we can communicate is via postal mail (neither of us knows how to use the Internet, we both refuse to pay for telephone services and we don&rsquo;t know how to use smoke signals). One day, I receive what appears to be a handwritten letter. I don&rsquo;t recognize the handwriting as Tony&rsquo;s because I never paid attention to his writing, but the envelope is addressed to me and the return address in the top left corner shows Tony&rsquo;s name and an address in Sacramento, California. If I had no other information to go on, I would assume that this letter really was from Tony.</p><p>On opening the envelope, however, I find that it is not a personal letter at all but an advertisement for a diploma from an online university. They&rsquo;re offering a good deal &ndash; only $99 for a degree &ndash; but I am annoyed because someone has falsely sent me a letter in my friend&rsquo;s name.</p><p>What would be useful would be if some authority traced the letter from Tony&rsquo;s home in California to my place in Washington. What if the Post Office placed a &lsquo;verified&rsquo; stamp against the return address in the top-left side of the envelope?</p><div class="mediaobject"><img src="/uploads/images/figures/2010/06/zink1.jpg" /></div><p>In other words, what if the Post Office guaranteed that the message came from where it claimed to come from by going to Tony&rsquo;s place directly, verifying that the return address was correct, and then indicating with a stamp of authenticity that this was the originating address of the letter? If that were the case, then all I would have to do would be to look for that US Post Office stamp to be sure of who my mail was from.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3219618"></a>Email</h2></div></div></div><p>Email, in its simplest form, is like postal mail. Anyone can send mail to anyone else, and can send mail as anyone else. My somewhat good friend Frank can send me an email, pretending to be Tony, and the email will reach me. I will initially think that the email is from Tony, but in reality it is not.</p><p>I remember back in my university days when we learned how to send &lsquo;fake&rsquo; email. The basic idea behind this was that we could send email to whomever we wanted and specify any return address we wanted, even from a domain that didn&rsquo;t exist. So, I sent a few fake messages to family and friends of mine. Oh, what great fun I had! It didn&rsquo;t occur to me that ethically challenged people would exploit this for nefarious purposes.</p><p>Unfortunately, the type of postal authority I described above, which guarantees the authenticity of the originating point of a letter, doesn&rsquo;t exist in real life. Fortunately, in email we can do better.</p><p>To begin with, we need to understand how email gets from point A to point B. Email travels through connections called ports. To keep track of all the different connections, the ports are numbered. Port 25 is the one that is used to transmit and receive email. When a computer attempts to transmit email, it opens a connection to port 25 and attempts to transmit using the Simple Mail Transfer Protocol, or SMTP.</p><p>This whole transaction depends on five commands which constitute the core of SMTP: HELO, MAIL FROM, RCPT TO, DATA and QUIT.</p><div class="orderedlist"><ol type="1"><li><p>HELO identifies the sending machine. &lsquo;HELO mail.tzink.com&rsquo; should be read as &lsquo;Hello, I&rsquo;m mail.tzink.com&rsquo;. However, the sender does not necessarily have to tell the truth; in fact, nothing prevents the sender from saying &lsquo;Hello, I&rsquo;m bonjour.hola.guten-tag&rsquo; or &lsquo;Hello, I&rsquo;m woozle.wozzle.gov&rsquo;, or even &lsquo;Hello, i.am.not.configured.properly&rsquo;.</p></li><li><p>MAIL FROM is the command that initiates the mail processing. It means &lsquo;I have mail to deliver from so-and-so&rsquo;. The address that is specified becomes the Envelope From or Envelope Sender (or the P1 From) and it does not need to be the same as the sender&rsquo;s own address.</p></li><li><p>RCPT TO is the flip-side of MAIL FROM; it specifies the intended recipient of the message. One piece of mail can be sent to multiple recipients by including multiple RCPT TO commands. The specified address becomes the Envelope To, which is also referred to as the Envelope Recipient (or P1 To). It is this that determines who the mail will be delivered to, regardless of what is in the To: line.</p></li><li><p>DATA starts the actual mail entry. Everything entered after a DATA command is considered to be part of the message and there are no restrictions on its form. Lines at the beginning of the message (before the first blank line) that start with a single word and a colon are considered to be headers by most mail programs. A line consisting only of a period terminates the message.</p></li><li><p>QUIT terminates the connection.</p></li></ol></div><p>Below is an example mail conversation between the sending domain tony.net (Tony runs his own mail server) and the recipient domain tzink-is-awesome.com (I run one, too). The commands in bold are the transmitting machine while the ones in plain text are the recipient machine. (My examples are simplified and the actual SMTP transaction would be more complicated in real life. The email addresses are fictional, although the domains might be real.)</p><pre class="programlisting"><span class="bold"><strong>HELO mail.tony.net</strong></span>
250 mailhost.tzink-is-awesome.com Hello 
mail.tony.net, pleased to meet you
<span class="bold"><strong>MAIL FROM: <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="34405b5a4d74505d55595b5a501a5a5140">[email&#160;protected]</a></strong></span>
250 <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="abdfc4c5d2ebcfc2cac6c4c5cf85c5cedf858585">[email&#160;protected]</a> Sender ok
<span class="bold"><strong>RCPT TO: <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="ee9a94878085ae9a94878085c3879dc38f998b9d81838bc08d8183">[email&#160;protected]</a></strong></span>
250 <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="71050b181f1a31050b181f1a5c18025c100614021e1c145f121e1c5f5f5f">[email&#160;protected]</a> Recipient ok
<span class="bold"><strong>DATA</strong></span>
354 Enter mail, end with &ldquo;.&rdquo; on a line by itself
<span class="bold"><strong>From: Tony Diamond &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="93e7fcfdead3f7faf2fefcfdf7bdfdf6e7">[email&#160;protected]</a>&gt;
To: Terry Zink &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="6f1b150601042f1b1506010442061c420e180a1c00020a410c0002">[email&#160;protected]</a>&gt;
Date: Tue, Apr 7 2010 14:36:14 PST
Subject: How&rsquo;s it going?
So this is pretty cool, I&rsquo;m sending an email message.
-- Tony
.</strong></span>
250 FAA214578 Message accepted for delivery
<span class="bold"><strong>QUIT</strong></span>
221 mailhost.tzink-is-awesome.com closing connection</pre><p>Note the five important commands: HELO, MAIL FROM, RCPT TO, DATA and QUIT. These are the basics of what it takes to send an email. Sending email is very simple and that is its strength; Tony can log on and, using his mail server, send me an email.</p><p>Tony can send the email shown above. But so can Frank. In SMTP, there&rsquo;s nothing to say that the MAIL FROM has to be Tony or Frank. Both Tony and Frank can put whatever they want into the MAIL FROM and send it to me, and I&rsquo;ll get the message. And as it turns out, email&rsquo;s simplicity is also its weakness.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3599328"></a>An audit trail</h2></div></div></div><p>While the postal mail service doesn&rsquo;t indicate exactly where a letter was picked up from, email does (in a way) have that feature. When the receiving mail transfer agent (MTA) receives the message, it inserts additional headers which allow us to trace the message to its source. For the example above, these would be the headers from the message when the receiver got them:</p><pre class="programlisting">From <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="ea9e858493aa8e838b8785848ec4848f9e">[email&#160;protected]</a>
Received: from mail.tony.net (mail.diamond-mail.net [292.13.130.22]) by mail.tzink.net (MyMailer 1.0) for <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b8ccc2d1d6d3f8ccc2d1d6d395d1cb95d9cfddcbd7d5dd96dbd7d5">[email&#160;protected]</a> with EMSTP id 123456789
From: Tony Diamond &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="25514a4b5c65414c44484a4b410b4b4051">[email&#160;protected]</a>&gt;
To: Terry Zink &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b5c1cfdcdbdef5c1cfdcdbde98dcc698d4c2d0c6dad8d09bd6dad8">[email&#160;protected]</a>&gt; 
Date: Tue, Apr 7, 2010 14:36:14 PST
Subject: How&rsquo;s it going?</pre><p>Let&rsquo;s step through these one by one. The first line is the From address, which is the Envelope Sender. The Envelope Sender is generated by the receiving machine from the MAIL FROM command which comes from the transmitting machine. Note the lack of a colon in the From header &ndash; this distinguishes it from the other From: header later on. The convention is not universal, but it is common. The envelope headers are generated by the receiving machine, while the message headers are created by the transmitting machine.</p><p>The next line is a Received header. This is also an envelope header because it is generated (stamped) by the receiving machine. This Received header is important because it is the email equivalent of the US Post Office putting its stamp of authority against the originating address. If you want to see where an email came from, look for a Received header:</p><pre class="programlisting">Received: from mail.tony.net</pre><p>This piece of mail was received from a machine that calls itself (HELOs as) mail.tony.net. Next comes:</p><pre class="programlisting">(mail.diamond-mail.net [292.13.130.22])</pre><p>The IP address of the sending machine is 292.13.130.22 &ndash; Received headers will always log the sending IP address. The name of the sending machine is mail.diamond-mail.net. This name is found by performing a reverse DNS lookup of the IP address. In other words, here&rsquo;s what happened:</p><div class="orderedlist"><ol type="1"><li><p>The message was received from a machine that said its name was mail.tony.net.</p></li><li><p>The IP address of the transmitting machine was 292.13.130.22.</p></li><li><p>A reverse DNS lookup of that IP address shows its name to be mail.diamond-mail.net.</p></li></ol></div><p>Not all IP addresses have reverse DNS lookups, but when they exist it is easier to implement a weak form of sender authentication. If it didn&rsquo;t exist, the name part would be blank.</p><p>The next part of the header is the following:</p><pre class="programlisting">by mail.tzink.net (MyMailer 1.0)</pre><p>This indicates that the machine that received the message is mail.tzink.net using the (fictional) mail-receiving software <em class="productname">MyMailer</em> (version 1.0). This is followed by:</p><pre class="programlisting">for &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="76020c1f181d36020c1f181d5b1f055b17011305191b1358181302">[email&#160;protected]</a>&gt;</pre><p>This indicates that the message was addressed to <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b6c2ccdfd8ddf6c2ccdfd8dd9bdfc59bd7c1d3c5d9dbd398d8d3c298">[email&#160;protected]</a> This is the Envelope To, the address that is specified in RCPT TO by the sending machine. It is this address that the message is routed to. Note that this address does not have to be the same as the one in the To: header later on. The Envelope Sender is not always in a Received header, sometimes it is in a header elsewhere in the message. Finally, the Received header ends with:</p><pre class="programlisting">with EMSTP id 123456789</pre><p>The receiving machine assigned the ID number 123456789 to the message. This is used by mail administrators for checking logs.</p><p>The next few headers are message headers:</p><pre class="programlisting">From: Tony Diamond &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="51253e3f28113538303c3e3f357f3f3425">[email&#160;protected]</a>&gt;
To: Terry Zink &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c0b4baa9aeab80b4baa9aeabeda9b3eda1b7a5b3afada5eea3afad">[email&#160;protected]</a>&gt; 
Date: Tue, Apr 7, 2010 14:36:14 PST
Subject: How&rsquo;s it going </pre><p>These are created by the transmitting machine (Tony&rsquo;s). Note that there are four important routing headers: the Envelope To, the Envelope From, the message To: and the message From:. The envelope headers are generated by the receiving machine based on the SMTP commands used by the transmitting machine, while the To: and From: headers are extra headers inserted into the body of the message (which often show up in email clients such as <em class="productname">Thunderbird</em>, <em class="productname">Apple Mail</em> or <em class="productname">Outlook</em>). The message is routed based on the envelope headers, not the message headers. Also note the absence of a colon in the envelope headers.</p><p>Envelope headers appear differently in different mail servers. Sometimes the envelope sender is specified in the Return-Path header.</p><p>It is important to note that my example above is simple. Often, a message will go through more routing and will have a few more Received headers. However, the Received headers outlined here are key to determining where a message came from &ndash; from Tony legitimately, or from Frank.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3332643"></a>Spammer techniques</h2></div></div></div><p>The system described above works well if everyone plays by the rules. But not everyone does; in fact, spammers quite often &lsquo;cheat&rsquo; and do all sorts of malicious things to try to get their messages into users&rsquo; inboxes. From the example earlier:</p><pre class="programlisting">Received: from mail.tony.net (mail.diamond-mail.net [292.13.130.22]) 
by mail.tzink.net (MyMailer 1.0) for <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="1c68667572775c686675727731756f317d6b796f737179327f7371">[email&#160;protected]</a> with 
EMSTP id 123456789</pre><p>In this example, the IP (292.13.130.22) that sent the message has a reverse DNS of mail.diamond-mail.net. However, what would happen if a spammer decided to forge the HELO? What if they said &lsquo;Hello, my name is mail.fake.net&rsquo;?</p><pre class="programlisting">Received: from mail.fake.net (mail.diamond-mail.net [292.13.130.22])
by mail.tzink.net (MyMailer 1.0) for <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="1c68667572775c686675727731756f317d6b796f737179327f7371">[email&#160;protected]</a> with 
EMSTP id 123456789</pre><p>In this example, the machine claimed to be mail.fake.net, but was sending from mail.diamond-mail.net. Straight away, we can see that there is a mismatch. When we look up the IP address mail.fake.net, it turns out that it resolves to 264.33.78.90. In other words, it is completely different from mail.diamond-mail.net. Thus, we have uncovered an example of a transmitting machine claiming to be sending from one mail host, but in fact sending from another.</p><p>A smarter spammer will use a trick to bypass this. Rather than sending from an IP address that has a reverse DNS lookup (i.e. converting an IP to a domain name), they will send mail from an IP that has no reverse DNS. In that case, the received line would look like the this:</p><pre class="programlisting">Received: from mail.fake.net (unknown [282.31.32.33])
by mail.tzink.net (MyMailer 1.0) for <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="76020c1f181d36020c1f181d5b1f055b17011305191b135815191b">[email&#160;protected]</a> with
EMSTP id 123456789</pre><p>I&rsquo;ve inserted the &lsquo;unknown&rsquo; because the above IP address does not resolve in DNS. Since the transmitting IP has no reverse DNS there&rsquo;s no way to verify whether 282.31.32.33 resolves to it. Performing a DNS lookup on mail.fake.net reveals an address that doesn&rsquo;t match the IP address; this is suspicious but not definitive.</p><p>A smarter spammer still would obfuscate even more:</p><pre class="programlisting">Received: from hofgado (unknown [272.31.32.33]) 
by mail.tzink.net (MyMailer 1.0) for <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="d5a1afbcbbbe95a1afbcbbbef8bca6f8b4a2b0a6bab8b0fbb6bab8">[email&#160;protected]</a> with 
EMSTP id 123456789</pre><p>The transmitting machine called itself &lsquo;hofgado&rsquo; and sent from an IP with no reverse DNS. There&rsquo;s definitely no way to resolve this because the HELO won&rsquo;t resolve via a DNS lookup (&lsquo;hofgado&rsquo; is not in the proper format) and there is no reverse DNS for the IP 272.31.32.33. Nothing can be verified and we can make no assertions as to the authenticity of the message. While this certainly looks suspicious, one of the great problems of filtering spam is that misconfiguration of legitimate mail servers is incredibly common, and so looking for mail with misconfiguration as one of its features is not enough to flag a message as spam.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2525806"></a>The plot thickens</h2></div></div></div><p>Each time mail goes through a relay, the receiving MTA stamps a Received header telling you where it came from and where it&rsquo;s going. The analogy in the postal world would be the post office writing down on the envelope that Tony&rsquo;s letter to me was picked up in Sacramento, processed in San Francisco, relayed through Boise, Idaho and then delivered to me in Seattle.</p><p>Suppose that Tony&rsquo;s mail to me went through multiple hops. We can see whenever that occurs:</p><pre class="programlisting">From <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b4c0dbdacdf4d0ddd5d9dbdad09adad1c0">[email&#160;protected]</a>
Received: from mail.jason.net (jd.net [284.33.167.99]); Tue, Apr 7, 2010 14:35:35 PST
Received: from bergie.net (mail.rypod.com [267.99.33.167]); Tue, Apr 7, 2010 14:34:01 PST 
Received: from mail.tony.net (mail.diamond-mail.net [292.13.130.22]) by mail.tzink.net 
(MyMailer 1.0); Tue, Apr 7, 2010 14:33:15 PST
From: Tony Diamond &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="64100b0a1d24000d05090b0a004a0a0110">[email&#160;protected]</a>&gt;
To: Terry Zink &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="2f5b554641446f5b5546414402465c024e584a5c40424a014c4042">[email&#160;protected]</a>&gt; 
Date: Tue, Apr 7, 2010 14:36:14 PST
Subject: How&rsquo;s it going?
</pre><p>In general, Received headers are read from bottom to top (that is, mail originated from the bottom Received header and took the path outlined in each Received header above it), with the most recent one being stamped at the top and being the most reliable. In the above example, the message started from the IP 292.13.130.22 at Tony&rsquo;s mail host. It was routed through my other friend bergie.net (IP = 267.99.33.167), then went through jd.net before finally arriving at its end destination in my inbox. It&rsquo;s a complicated process but from the above, we can see that the message originated at 292.13.130.22, the first IP address. It&rsquo;s a nice, handy way to trace the path an email followed.</p><p>Unfortunately, spammers will often insert fake routing information into the headers. Suppose that the email headers said the following:</p><pre class="programlisting">From <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="96e2f9f8efd6f2fff7fbf9f8f2b8f8f3e2">[email&#160;protected]</a>
Received: from mail.tony.net (mail.diamond-mail.net [292.13.130.22]) by mail.tzink.net 
(MyMailer 1.0); Tue, Apr 7, 2010 14:36:15 PST 
Received: from frank (franksmail.net [284.33.167.99]); Tue, Apr 7, 2010 14:35:35 PST
Received: from mail.tony.net (mail.diamond-mail.net [262.13.130.22]) by mail.tzink.net 
(MyMailer 1.0); Tue, Apr 7, 2010 14:31:15 PST
From: Tony Diamond &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="11657e7f68517578707c7e7f753f7f7465">[email&#160;protected]</a>&gt;
To: Terry Zink &lt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="5c28263532371c282635323771352f713d2b392f333139723f3331">[email&#160;protected]</a>&gt; 
Date: Tue, Apr 7, 2010 14:36:14 PST
Subject: How&rsquo;s it going?
</pre><p>From here, we can see that the mail started out from Tony&rsquo;s mail server, was relayed through Frank&rsquo;s mail server and then routed through Tony&rsquo;s (again?) before it came to me. While it&rsquo;s odd that this double routing occurred, it is possible (though not probable).</p><p>The fact is that this message could have taken that path, or it could have originated at Frank&rsquo;s machine. Frank could have inserted a fake Received header to make it look as if it started at Tony&rsquo;s machine in order to trick the receiver into thinking it came from a trusted source. Without doing some manual inspection, it&rsquo;s difficult to know programmatically where the message actually originated. Usually in the message headers there are some clues, but the fact is that the only Received header you can trust is the topmost one. (There are scenarios where you can trust lower Received headers, but those are outside the scope of this discussion.) That&rsquo;s the one your receiving MTA stamps, and you can trust it to tell you where the message has come from.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3332484"></a>Weak authentication</h2></div></div></div><p>Looking at parts of headers that are fake is one thing. However, it&rsquo;s not enough simply to be able to distinguish between fake headers and real ones; we still need to be able to authenticate who the mail came from. In other words, while we certainly want to be able to tell when something is fake, we also want to know when something is real. If Tony sends me a letter, I might be able to tell from the handwriting that it doesn&rsquo;t belong to him and therefore that the message is fake. But how would I be able to know if the message is real? Is there anything that we have in email that allows us to make that validation?</p><p>One of the simplest forms of authentication is Forward-Confirmed Reverse DNS &ndash; something that I call a weak form of authentication.</p><p>Now that we have seen how email headers are inserted by the receiving machine upon receipt of an email, we need to go into a little bit of detail about how mail servers convert IP addresses to host names and vice versa.</p><p>DNS stands for Domain Name System. It converts a host name to its IP address. Reverse DNS is the opposite: it converts an IP address to its host name. It does this by examining the IP&rsquo;s PTR record:</p><p>A PTR record, or pointer record, maps an IPv4 address to the canonical name for that host. Setting up a PTR record for a hostname in the in-addr.arpa domain that corresponds to an IP address implements a reverse DNS lookup for that address. For example, at the time of writing, www.icann.net has the IP address 192.0.34.164, but a PTR record maps 164.34.0.192.in-addr.arpa to its canonical name, referrals.icann.org.</p><p>The converse of a PTR record is the A record, which maps a hostname to its 32-bit IP address. So, A-records are used for DNS lookups (example.com to xx.yy.zz.ww) and PTR records are used for reverse DNS lookups (xx.yy.zz.ww to example.com).</p><p>This brings us to Forward Confirmed Reverse DNS, or FCrDNS, which is when an IP has a forward DNS (name -&gt; IP) and reverse DNS (IP -&gt; name) that match (see http://www.answers.com/topic/forward-confirmed-reverse-dns). The process works as follows:</p><div class="orderedlist"><ol type="1"><li><p>A reverse DNS lookup is performed on an IP. This returns a list of hostnames associated with that IP (the list could have 0, 1 or more entries).</p></li><li><p>For each entry in that list, a regular DNS lookup is performed to see if the IP matchup matches the original IP address. So, for example:</p><div class="mediaobject"><img src="/uploads/images/figures/2010/06/zink2.jpg" /></div></li></ol></div><p>Since we matched the IP address in one of the domain&rsquo;s A-records that was found in the PTR, we are said to have FCrDNS for the IP.</p><p>This is important in spam filtering because if an IP has FCrDNS then we can be sure that the mail originated at the domain. Spammers cannot normally forge this if they are sending from zombie computers.</p><p>So, for the following email that Tony has sent me:</p><div class="mediaobject"><img src="/uploads/images/figures/2010/06/zink3.jpg" /></div><p>The sending IP and the domain name match when we check them out in DNS. We have now confirmed that the IP and domain agree with each other in DNS. Because the owner of the IP and the domain are the only ones that can maintain the public records in DNS, we can be sure that the mail is coming from the owner of that IP and domain. Since Tony owns them I can be sure that the message came from Tony.</p><p>I call this a weak form of authentication for two reasons:</p><div class="orderedlist"><ol type="1"><li><p>Authentication by FCrDNS is implicit, not explicit.</p><p>Yes, it&rsquo;s nice if the A-record of the sending domain matches the PTR record of the sending IP. If the two of them match, then the chances are very high that the owner of the IP and domain are one and the same. We assume that is the way it is supposed to be, by design, but there&rsquo;s no public documentation from the domain and IP owner saying that they set it up that way.</p><p>This works for small users that don&rsquo;t control a lot of IP addresses, but not for big ones.</p></li><li><p>It doesn&rsquo;t scale.</p><p>Often in legitimate circumstances, we just can&rsquo;t get FCrDNS.</p><p>Let&rsquo;s say I am a very large (fictitious) webmail provider, woohoo.com. If I send mail from <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="1a6e607374715a6d757572757534797577">[email&#160;protected]</a>, the sending IP of the MTA may not be in woohoo.com&rsquo;s A-record. In fact, this is quite common. In order to scale to support millions of users, Woohoo has deliberately separated the hosting of its main page http://www.woohoo.com/ from its email servers. This is needed for redundancy; if the main page goes down it shouldn&rsquo;t affect the mail servers, and vice versa.</p><div class="table"><a class="chapter" id="id4014708"></a><table border="1" summary=""><colgroup><col align="center" /><col /></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Woohoo.com -&gt; A-record</strong></span></td><td align="center"><span class="bold"><strong>Woohoo.com -&gt; IPs that send mail</strong></span></td></tr><tr><td align="center">257.16.0.0/16</td><td align="center">257.17.0.0/16</td></tr></tbody></table><p class="title"><b>Table&nbsp;1.&nbsp;</b></p></div><p>If you receive an email from <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="cebab4a7a0a58eb9a1a1a6a1a1e0ada1a3">[email&#160;protected]</a>, it will always come from an IP in the range 257.17.0.0 &ndash; 257.17.255.255. If you get the A-record for woohoo.com, it will always fall in the range 257.16.0.0 &ndash; 257.16.255.255. They will never match.</p><p>What constitutes a match, anyhow? If <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="8bfff1e2e5e0cbfce4e4e3e4e4a5e8e4e6">[email&#160;protected]</a> sends from IP 257.17.11.162:</p><div class="itemizedlist"><ul type="disc"><li><p>A-record for woohoo.com &ndash; 257.16.18.48</p></li><li><p>PTR-record 257.17.11.162 &ndash; mail22.woohoo.com</p></li></ul></div><p>Is this a match? It looks like it. But maybe not. Maybe woohoo.com doesn&rsquo;t want anyone doing partial matches, it has to be a complete match. But part of woohoo.com is there - maybe we should use it? Should we authenticate implicitly? What sorts of risks do we open ourselves up to if we do? (A lot.)</p><p>Unfortunately, the idea of implicit authentication is a risk.</p></li></ol></div><p>Forward-Reverse Confirmed DNS is simply too narrow a case to be used for authentication. For small senders who have narrow lists of IPs to maintain, it works. As an organization gets larger, it needs to find a solution that scales much better and authentication must be more explicit. We still want to authenticate an email, but we have to move onto something other than FCrDNS. To do that, we need to look at stronger authentication technologies &ndash; SPF, SenderID and DKIM. The discussion of those, however, will have to wait until next month.</p></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=What’s the deal with sender authentication? Part 1&url=https://www.virusbulletin.com/virusbulletin/2010/06/what-s-deal-sender-authentication-part-1"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2010/06/what-s-deal-sender-authentication-part-1'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2010/06/what-s-deal-sender-authentication-part-1&title=What’s the deal with sender authentication? Part 1"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2010/06/what-s-deal-sender-authentication-part-1&t=What’s the deal with sender authentication? Part 1"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2010/06/what-s-deal-sender-authentication-part-1"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>