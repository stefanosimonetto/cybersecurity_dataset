<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Case study: the TDSS rootkit</title>
<meta name="description" content="The TDSS modular downloader is known for its ability to bypass active protection, for its outstanding persistence and its rootkit functions. Alisa Shevchenko presents a detailed case study." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 2284;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb200905-TDSS"></a>Case study: the TDSS rootkit</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2009-05-01</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Alisa</span> <span class="surname">Shevchenko</span></h3><span class="orgname">eSage Lab</span>, <span class="orgdiv">Russia</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>The TDSS modular downloader is known for its ability to bypass active protection, for its outstanding persistence and its rootkit functions. Alisa Shevchenko presents a detailed case study.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2009 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-4032" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-4032" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id4710939"></a></span></dt><dt><span class="sect1"><a href="#id3912801">Family overview</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id4124674">Family traits</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3128288">Family divergence &amp; recent updates</a></span></dt><dt><span class="sect1"><a href="#id3161289">Sample analysis</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id4464342">Trojan installation and protection bypassing</a></span></dt><dt><span class="sect2"><a href="#id3995907">The driver</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3811063">Rootkit functionality</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id4644879">Ring0 communication gateway</a></span></dt><dt><span class="sect2"><a href="#id2711875">Persistent functionality</a></span></dt><dt><span class="sect2"><a href="#id3787590">Blocking security solutions</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3563640">Manual disinfection</a></span></dt><dt><span class="sect1"><a href="#id2617090">Conclusions</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4710939"></a></h2></div></div></div><p>This article is a case study of the TDSS malware, also known as Tidserv, TDSServ and Alureon. Some of its components are detected as Trojan.Win32.DNSChanger and Trojan.FakeAlert.</p><p>There are several reasons for conducting a detailed study of this malware:</p><div class="orderedlist"><ol type="1"><li><p>Disinfection of TDSS seems to be problematic for modern anti-malware solutions. At the time of writing this article, a <em class="productname">Google</em> search for the malware [<span class="citation"><a href="#citation.1">1</a></span>] results in a considerable number of forum posts from desperate users whose anti-virus solutions have detected the malware, but failed to remove it.</p></li><li><p>Detailed descriptions of this malware are not available publicly.</p></li><li><p>TDSS is not rocket science! Despite being quite advanced and posing problems for anti-malware solutions, it does not engage any outstanding new techniques.</p></li><li><p>TDSS is actively spreading in the wild and developing into a wide and mighty botnet. According to <em class="phrase">Kaspersky Lab</em> [<span class="citation"><a href="#citation.2">2</a></span>], between 100 and 300 signature detections are being added per day for new/modified TDSS components.</p></li></ol></div><p>Thus, TDSS is a borderline type of threat: sufficiently advanced to cause problems for AV, or even to defeat it completely, but not sufficiently critical to trigger a detailed study; widespread enough to cause numerous user issues, but not serious enough to trigger a full epidemic alert.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3912801"></a>Family overview</h2></div></div></div><p>TDSS is known for its ability to bypass active protection/HIPS, for its outstanding persistence and its rootkit functions. Users with all kinds of anti-malware solutions have reported problems disinfecting their systems. Observable activity typically includes website redirects, ad popups and the blocking of AV updating/loading activities. Its functionality can vary widely though, since TDSS is designed as a modular unit and additional components can be downloaded and installed to provide extra features.</p><p>The first TDSS infection reports date back to the middle of 2008. Even at that time the malware showed extraordinary persistence, causing problems for users and demonstrating the ability to bypass anti-malware protection. Given that the malware&rsquo;s creators have managed to keep this advanced functionality up to date for almost a year now, and given the malware&rsquo;s code architecture and skilful implementation, we can assume that TDSS is being developed with a clear vision by a team of proficient engineers.</p><p>TDSS itself is a very advanced modular downloader. Its main goal is to persist in a system and to provide a means for remote control (via a downloaded configuration file) and a framework for downloading/installing modules for additional functionality.</p><p>TDSS is delivered to a PC through a wide and elaborate distribution network. Known attack vectors include website iframe attacks [<span class="citation"><a href="#citation.3">3</a></span>], [<span class="citation"><a href="#citation.4">4</a></span>] and bundling the malware with pseudo-legitimate video codecs [<span class="citation"><a href="#citation.5">5</a></span>], as well as legitimate software [<span class="citation"><a href="#citation.6">6</a></span>] and cracks [<span class="citation"><a href="#citation.7">7</a></span>] distributed via p2p networks.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4124674"></a>Family traits</h3></div></div></div><div class="itemizedlist"><ul type="disc"><li><p>The original name of TDSS (assigned by its creators) is &lsquo;TDL&rsquo;. The most recent samples call themselves &lsquo;TDL2&rsquo;.</p></li><li><p>The trojan files are protected from binary analysis using code obfuscation and encryption.</p></li><li><p>Some files contain a fake <em class="phrase">Microsoft</em> version stamp.</p></li><li><p>TDSS is installed when the msiexec.exe (<em class="productname">Microsoft Installer</em>) service loads a legitimate, but maliciously patched DLL [<span class="citation"><a href="#citation.8">8</a></span>].</p></li><li><p>After installation, the trojan effectively prevents anti-virus software from launching or updating.</p></li><li><p>The trojan is persistent through a variety of techniques. For example, some of the family members survive Safe Boot. This is achieved by registering the trojan&rsquo;s driver in the HKLM\SYSTEM\ControlSet001\Control\SafeBoot\Minimal and HKLM\SYSTEM\ControlSet001\Control\SafeBoot\Network registry keys.</p></li><li><p>The trojan creates a (hidden) registry key to store its configuration information, such as the AV modules that are to be denied Internet access, and the malicious modules that are to be injected into browsers.</p></li><li><p>The trojan hides its files and registry values by means of several system hooks.</p></li><li><p>The trojan uses the hooked function ZwFlushInstructionCache as a communication gateway to its own kernel driver.</p></li></ul></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3128288"></a>Family divergence &amp; recent updates</h2></div></div></div><p>Back in 2008, the presence of TDSS was marked by a driver named TDSSserv.sys (after which the malware was named). Since then, malware-related file names have changed several times, and have included clbdriver.sys, seneka*.sys, UACd*.sys, gaopdx*.sys, tdlserv.sys and others.</p><p>Another change is that recent samples patch msi.dll for their installation, while the early samples used to patch advapi32.dll. This is probably a reaction to the behavioural heuristics that have recently been added to security solutions.</p><p>In the most recent samples the code protection is designed to make the trojan look like a regular system file or a device-supporting utility. The unpacker stub is a big piece of regular code, which means there is no extra entropy throughout the file&rsquo;s byte array (which is an easy-to-spot sign of a packed file). Furthermore, the code is enriched by random pseudo-legitimate ASCII strings and random API calls designed to fool a hasty analyst into thinking it is a legitimate piece of code.</p><p>The code protection itself is trivial: an easily removed envelope with normal code inside.</p><p>Most recent samples of TDSS contain worm functionality. The malware tries to distribute itself to removable drives by copying its own body into all available drives as a hidden *.com file in the hidden RECYCLER directory, and by creating the file autorun.inf, with the file reference on the same drive.</p><p>Most recent TDSS samples change systems&rsquo; DNS addresses, thus causing all the hostname requests to filter through a malicious service. This is a brilliant solution, probably inspired by the much-talked-about DNS root server vulnerability and the Evilgrade proof of concept [<span class="citation"><a href="#citation.9">9</a></span>]. Distributing a spoofed DNS provider throughout the network by means of a DHCP service gives an attacker control of the entire network&rsquo;s web traffic, even as far as delivering malware to clean machines under the guise of a legitimate software update.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3161289"></a>Sample analysis</h2></div></div></div><p>For analysis, I took a fairly recent sample, dated March/April 2009 (MD5: 1DE66FC07C7B5893F5F83B397AC38 F3D). It is a specimen of the TDSS variety quoted by <em class="phrase">Symantec</em> Russia as being one of the most notable at the end of March [<span class="citation"><a href="#citation.10">10</a></span>], [<span class="citation"><a href="#citation.11">11</a></span>].</p><p>The general execution flow of an average TDSS specimen has already been described [<span class="citation"><a href="#citation.9">9</a></span>], [<span class="citation"><a href="#citation.12">12</a></span>] as have its basic mechanisms in userland [<span class="citation"><a href="#citation.4">4</a></span>]. A summary of the high-level functions of this particular sample is available from any public sandbox [<span class="citation"><a href="#citation.13">13</a></span>]. I will be focusing on the trojan&rsquo;s most important features and driver functionality.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4464342"></a>Trojan installation and protection bypassing</h3></div></div></div><p>The trojan&rsquo;s initial installation routine is notable, since it allows behavioural protection/firewalls to be bypassed. The idea is to force a legitimate service to load a legitimate, but maliciously patched DLL. This is achieved via the modification of the msi.dll file in the \knowndlls directory, followed by a regular launch of the <em class="productname">Microsoft Installer</em> service:</p><pre class="programlisting">NtCreateSection(..&rdquo;\knowndlls\dll.dll&rdquo;..) // new section for a malicious dll
CopyFile(..&rdquo;msi.dll&rdquo;, &lt;temporary_file&gt;..) // preparing the dll to patch
WriteFile(..&lt;temporary_file&gt;, &lt;malicious_code_injection&gt;..) // patching</pre><p>The injected code will call LoadLibrary, which will invoke the malicious dll mapped into the \knowndlls\dll.dll section. The shellcode is quite elegant:</p><pre class="programlisting">push 7c906cbc ; pointer to &lsquo;dll.dll&rsquo; &ndash; really this is a calculated pointer to the last part of the 
&lsquo;ntdll.dll&rsquo; name in the regularly mapped ntdll.dll

call $+5 ; call next instruction so that its address is on the stack

sub dword ptr [esp], 0a ; now the first dword on the stack points to the first shellcode instruction, meaning that LoadLibrary will return there. Shellcode will be replaced by original code by then.

mov eax, LoadLibrary

jmp eax ; call LoadLibrary (&lsquo;dll.dll&rsquo;)

Once the infected dll has been prepared, the \knowndlls\msi.dll section is recreated to point to an infected dll, and the msiexec.exe service is started to force the now infected library to be loaded:

NtOpenSection(..&rdquo;\knowndlls\msi.dll&rdquo;..)

NtMakeTemporaryObject(..) // clear the OBJ_PERMANENT flag from section

CloseHandle(..)

NtCreateSection(..&rdquo;\knowndlls\msi.dll&rdquo;, .. &lt;temporary_file&gt;..) //recreate the msi.dll section, now pointing to the infected msi.dll library in 
&lt;temp filename&gt;

..

StartService (..&rdquo;Windows Installer&rdquo;..)</pre><p>The main idea of this technique is that, since it is executed in the context of the <em class="productname">Windows Installer</em>, the malicious code will have all the necessary privileges to download and install anything. It downloads and installs a fresh build of the TDSS kernel component.</p><p>Another advantage of the technique is that no obviously malicious behaviour is exhibited, so a HIPS will fail here until it &lsquo;learns&rsquo; this particular trick.</p><p>The dll.dll functionality itself is quite simple, as can be seen in the flowchart shown in <a href="#figure.1">Figure 1</a>.</p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="IDA-generated flowchart of the dll.dll." src="/uploads/images/figures/2009/05/DLL.gif" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;IDA-generated flowchart of the dll.dll.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3995907"></a>The driver</h3></div></div></div><p>TDSS does not have its own userland executable file. All core functions are provided by a driver, which is loaded automatically at startup. High-level functions are provided by additional DLL module(s) injected into processes.</p><p>Core functions provided by the driver include:</p><div class="itemizedlist"><ul type="disc"><li><p>Hiding the trojan</p></li><li><p>Providing a gateway into the kernel</p></li><li><p>Distributing spoofed DNS servers to network services</p></li><li><p>Blocking anti-virus solutions (listed in a configuration key) from loading</p></li><li><p>Injecting a DLL into browser executables</p></li><li><p>Installing new DLL modules.</p></li></ul></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3811063"></a>Rootkit functionality</h2></div></div></div><p>The trojan hooks the following functions in the kernel:</p><div class="itemizedlist"><ul type="disc"><li><p>IofCallDriver</p></li><li><p>IofCompleteReq</p></li><li><p>NtFlushInstructionCache</p></li><li><p>NtQueryValueKey</p></li><li><p>NtEnumerateKey</p></li></ul></div><p>The latter three hooks are implemented via SDT modification. The NtEnumerateKey hook is used to hide all the TDSS registry keys listed in the trojan&rsquo;s configuration key (&lsquo;gaopdx*&rsquo; in this case), except for trusted processes. The NtQueryValueKey hook is used to spoof DNS addresses without modifying the registry (and therefore without triggering a HIPS registry alert), via a substitution of &lsquo;DhcpNameServer&rsquo; and &lsquo;NameServer&rsquo; [<span class="citation"><a href="#citation.14">14</a></span>] registry values.</p><p>Hooks to IofCallDriver and IofCompleteRequest are implemented by splicing the kernel code in ntkrnlpa.exe in memory. They are used to hide the trojan&rsquo;s files and probably its network TCP activity.</p><p>A hook to IofCallDriver is used to infiltrate all the IRPs system wide, which allows the trojan to hide its own files (beginning with the string &lsquo;gaopdx*&rsquo; in this case) when it catches an IRP to a file system driver:</p><pre class="programlisting">If ( FsRtlIsNameInExpression (..&rdquo;*\\gaopdx*&rdquo; or &ldquo;*\\TEMP\\gaopdx*&rdquo;..) )

Then return (STATUS_TOO_MANY_SECRETS) </pre><p>IofCompleteRequest has a similar functionality.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4644879"></a>Ring0 communication gateway</h3></div></div></div><p>The NtFlushInstructionCache hook is slightly more interesting, providing a non-typical communication gateway to the driver. To make use of the gateway, one should call the NtFlushInstructionCache API as follows:</p><pre class="programlisting">push 0    ; argument to the command

push &lsquo;VERG&rsquo;  ; 4-byte command, allowing to prove the hook is in place

push &lsquo;TDL2&rsquo; ; a magic value which leads execution to the command processor and not to the 
original API

call ds:ZwFlushInstructionCache ; this is a piece of code from the dll.dll component, checking 
for the presence of the core driver.</pre><p>The scope of available commands is very limited and, in contrast to some security drivers, will not allow control to be taken of the driver. Available commands include passing trojan-related variables from the kernel to userland, inserting a termination job (via a kernel APC) into a given process or thread, and maintaining installation of new DLL modules.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2711875"></a>Persistent functionality</h3></div></div></div><p>The driver engages ExQueueWorkItem to launch a number of kernel threads. The execution flow of the work items is looped to provide periodic execution. The three work items provide periodic renaming and re-registering of the trojan&rsquo;s driver (&lsquo;\registry\machine\system\currentcontrolset\services\gaopdxserv.sys&rsquo;), disabling of a system firewall (&lsquo;\registry\machine\system\currentcontrolset\services\sharedaccess\parameters\firewallpolicy\&rsquo;) and other functions.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3787590"></a>Blocking security solutions</h3></div></div></div><p>The driver installs, via PsSetLoadImageNotifyRoutine, a system-wide callback for newly loaded modules. In the hook, a check is performed as to whether the module being loaded is included in the &lsquo;disallowed&rsquo; list in the trojan&rsquo;s configuration registry key. The driver will prevent a disallowed module from loading.</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3563640"></a>Manual disinfection</h2></div></div></div><p>Manual disinfection of TDSS is trivial. The following instructions are for a generic method that will completely remove any specimen of the TDSS family. This removal method is suitable for any end-user, since it is very simple and requires neither special skills nor specific tools:</p><div class="orderedlist"><ol type="1"><li><p>Go to Device Manager and turn off and delete any inappropriate &lsquo;Non PnP driver&rsquo; there.</p><p>You can search for a specific name (quadraserv.sys in this case, or gaopdx*/TDSS*/clbdriver/seneka/etc .sys in the case of a typical TDSS family member), but the name is subject to change, so it is best not to rely on it.</p><p>After this manipulation, the worm&rsquo;s files and registry values that were hidden become visible, and thus possible to be removed by hand.</p><p>Note: An anti-rootkit can be used reliably to locate the trojan&rsquo;s core files. <em class="productname">GMER</em> or <em class="productname">RkU</em> are the best choices; <em class="productname">Avira Antirootkit</em> also copes with the task.</p></li><li><p>Remove the file corresponding to the device just deleted. If there is no such file, try sorting system32/drivers and system32/ files by creation date and remove whatever looks suspicious according to its name and content. TDSS core files consist of a .sys and one or more .dlls.</p></li><li><p>Search throughout the registry using the malicious device and file name strings found in steps 1 and 2. Delete all the relevant keys.</p></li><li><p>Remove all the &lt;drive letter&gt;://autorun.inf and &lt;drive letter&gt;://RECYCLER/*.com files, if any.</p></li><li><p>Reboot.</p></li><li><p>Launch your AV, and let it clean the rest (TMP files etc.)</p></li></ol></div><p>Note that steps 1&ndash;4 must be carried out manually, without any anti-malware, because if an anti-malware product lacks a single signature for a trojan&rsquo;s core file, the file will not be removed and the malware will return after reboot.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2617090"></a>Conclusions</h2></div></div></div><div class="itemizedlist"><ul type="disc"><li><p>The success of TDSS proves that the bypassing of protection mechanisms is a straightforward task, for which no kind of advanced invention is necessary.</p></li><li><p>Malware writers continue to explore unobtrusive ways of bypassing protection [<span class="citation"><a href="#citation.15">15</a></span>]. In the case of TDSS, the skilful utilization of a whitelisted application to download and install malware is observed.</p></li><li><p>Bundling malware together with legitimate software is an effective technique (though not new). The idea is that if a user is intentionally launching an application, s/he will probably skip any security alerts, including driver installation alerts (which are quite normal, for example, in the case of a video codec installation [<span class="citation"><a href="#citation.5">5</a></span>]) and UAC. Furthermore, some behavioural protection solutions might be fooled by the visible application window.</p></li><li><p>Redirecting a whole network&rsquo;s DNS traffic to an attacker&rsquo;s service is an extremely important innovation, since it allows for the transparent delivery of malware to clean machines, as well as serving malicious redirects. It&rsquo;s almost like a new kind of worm functionality.</p></li></ul></div><p>Behavioural protection/HIPS developers should consider keeping an eye on the behaviours/actions that allow TDSS to succeed:</p><div class="itemizedlist"><ul type="disc"><li><p>NtOpenSection, NtMakeTemporaryObject and other functions allowing tampering with system sections.</p></li><li><p>Accessing a system DLL file.</p></li><li><p>LoadLibraryEx with a parameter of DONT_RESOLVE_DLL_REFERENCES, which is used by dll.dll to load the original msi.dll.</p></li><li><p>Tampering with system DNS and DHCP configuration.</p></li><li><p>PsSetLoadImageNotifyRoutine. Though a protection may be turned off by the time this API call is made, it may not be.</p></li></ul></div><p>Although most of these actions are not malicious by themselves, they clearly pose a minor threat and thus should be considered in combination, supplied with reasonable threat weights, and within a particular process execution context.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4581677"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] <span class="bibliosource"><a href="https://www.google.com/search?q=tdss+%7C+tidserv+%7C+tdsserv+daterange:01012009-26042009+inurl:forum" target="_blank">http://www.google.com/search?q=tdss+%7C+tidserv+%7C+tdsserv+daterange:01012009-26042009+inurl:forum</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] <span class="bibliosource"><a href="http://www.kaspersky.com/viruswatchlite?search_virus=TDSS" target="_blank">http://www.kaspersky.com/viruswatchlite?search_virus=TDSS</a></span>.</p></div><div class="bibliomixed"><a id="citation.3"></a><p class="bibliomixed">[3] <span class="bibliosource"><a href="https://ddanchev.blogspot.com/2009/01/embassy-of-india-in-spain-serving.html" target="_blank">http://ddanchev.blogspot.com/2009/01/embassy-of-india-in-spain-serving.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.4"></a><p class="bibliomixed">[4] <span class="bibliosource"><a href="http://mad.internetpol.fr/archives/3-Etude-de-cas-Infection-rootkit-TDSS.html" target="_blank">http://mad.internetpol.fr/archives/3-Etude-de-cas-Infection-rootkit-TDSS.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.5"></a><p class="bibliomixed">[5] <span class="bibliosource"><a href="http://www.threatexpert.com/report.aspx?md5=2c5c874235a73fc50a69780c7ad1488a" target="_blank">http://www.threatexpert.com/report.aspx?md5=2c5c874235a73fc50a69780c7ad1488a</a></span>.</p></div><div class="bibliomixed"><a id="citation.6"></a><p class="bibliomixed">[6] <span class="bibliosource"><a href="http://www.threatexpert.com/report.aspx?md5=d2ada2dba8e036d37726ebddbcc9e9d6" target="_blank">http://www.threatexpert.com/report.aspx?md5=d2ada2dba8e036d37726ebddbcc9e9d6</a></span>.</p></div><div class="bibliomixed"><a id="citation.7"></a><p class="bibliomixed">[7] <span class="bibliosource"><a href="http://www.threatexpert.com/report.aspx?md5=b17d76537ef5d94547fc4ca8851b35da" target="_blank">http://www.threatexpert.com/report.aspx?md5=b17d76537ef5d94547fc4ca8851b35da</a></span>.</p></div><div class="bibliomixed"><a id="citation.12"></a><p class="bibliomixed">[12] <span class="bibliosource"><a href="http://www.f-secure.com/v-descs/backdoor_w32_tdss.shtml" target="_blank">http://www.f-secure.com/v-descs/backdoor_w32_tdss.shtml</a></span>.</p></div><div class="bibliomixed"><a id="citation.8"></a><p class="bibliomixed">[8] <span class="bibliosource"><a href="https://www.symantec.com/security_response/writeup.jsp?docid=2008-091809-0911-99" target="_blank">http://www.symantec.com/security_response/writeup.jsp?docid=2008-091809-0911-99</a></span>.</p></div><div class="bibliomixed"><a id="citation.10"></a><p class="bibliomixed">[10] <span class="bibliosource"><a href="https://www.symantec.com/security_response/writeup.jsp?docid=2009-032211-2952-99" target="_blank">http://www.symantec.com/security_response/writeup.jsp?docid=2009-032211-2952-99</a></span>.</p></div><div class="bibliomixed"><a id="citation.11"></a><p class="bibliomixed">[11] <span class="bibliosource"><a href="http://www.anti-malware.ru/node/1250" target="_blank">http://www.anti-malware.ru/node/1250</a></span>.</p></div><div class="bibliomixed"><a id="citation.13"></a><p class="bibliomixed">[13] <span class="bibliosource"><a href="https://www.virustotal.com/analisis/122e4ade1c0fa88cbab02880a3b2ed98" target="_blank">http://www.virustotal.com/analisis/122e4ade1c0fa88cbab02880a3b2ed98</a></span>.</p></div><div class="bibliomixed"><a id="citation.9"></a><p class="bibliomixed">[9] <span class="bibliosource"><a href="http://www.infobyte.com.ar/down/isr-evilgrade-Readme.txt" target="_blank">http://www.infobyte.com.ar/down/isr-evilgrade-Readme.txt</a></span>.</p></div><div class="bibliomixed"><a id="citation.14"></a><p class="bibliomixed">[14] <span class="bibliosource"><a href="https://technet.microsoft.com/en-us/library/cc962470.aspx" target="_blank">http://technet.microsoft.com/en-us/library/cc962470.aspx</a></span>.</p></div><div class="bibliomixed"><a id="citation.15"></a><p class="bibliomixed">[15] Shevchenko, A. Advancing malware techniques 2008. VirusBulletin Magazine, January 2009. <span class="bibliosource"><a href="/uploads/pdf/magazine/2009/200901.pdf" target="_blank">http://www.virusbtn.com/pdf/magazine/2009/200901.pdf</a></span>.</p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Case study: the TDSS rootkit&url=https://www.virusbulletin.com/virusbulletin/2009/05/case-study-tdss-rootkit"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2009/05/case-study-tdss-rootkit'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2009/05/case-study-tdss-rootkit&title=Case study: the TDSS rootkit"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2009/05/case-study-tdss-rootkit&t=Case study: the TDSS rootkit"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2009/05/case-study-tdss-rootkit"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>