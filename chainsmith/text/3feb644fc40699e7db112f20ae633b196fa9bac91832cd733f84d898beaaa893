Notes on Installing Sguil Using FreeBSD 7.1 Packages

Get link

Facebook

Twitter

Pinterest

Email

Other Apps

February 03, 2009

It's been a while since I've looked at the Sguil ports for FreeBSD, so I decided to see how they work.  In this post I will talk about installing a Sguil sensor and server on a single FreeBSD 7.1 test VM using packages shipped with FreeBSD 7.1.  To start with the system had no packages installed.After running pkg_add -vr sguil-sensor, I watched what was added to the system.  I'm only going to document that which I found interesting.The sguil-sensor-0.7.0_2 package installed the following into /usr/local.x bin/sguil-sensor/log_packets.shx bin/sguil-sensor/example_agent.tclx bin/sguil-sensor/pcap_agent.tclx bin/sguil-sensor/snort_agent.tclx etc/sguil-sensor/example_agent.conf-samplex etc/sguil-sensor/pcap_agent.conf-samplex etc/sguil-sensor/snort_agent.conf-samplex etc/sguil-sensor/log_packets.conf-samplex share/doc/sguil-sensor <- multiple files, omitted herex etc/rc.d/example_agentx etc/rc.d/pcap_agentx etc/rc.d/snort_agentNote that you have to copypcap_agent.conf-samplelog_packets.conf-samplesnort_agent.conf-sampletopcap_agent.conflog_packets.confsnort_agent.confand edit each, prior to starting pcap_agent.tcllog_packets.shsnort_agent.tclviarc.d/pcap_agentcronrc.d/snort_agentAlso, as noted in the configuration options, PADS and SANCP are not installed by default, so the package doesn't include them:===> The following configuration options are available for sguil-sensor-0.7.0_2:     SANCP=off (default) "Include sancp sensor"     PADS=off (default) "Include pads sensor"===> Use 'make config' to modify these settingsThe snort-2.8.2.1_1 package installed the following.x man/man8/snort.8.gzx bin/snortx etc/snort/classification.config-samplex etc/snort/gen-msg.map-samplex etc/snort/reference.config-samplex etc/snort/sid-msg.map-samplex etc/snort/snort.conf-samplex etc/snort/threshold.conf-samplex etc/snort/unicode.map-samplex src/snort_dynamicsrc/bitop.hx src/snort_dynamicsrc/debug.hx src/snort_dynamicsrc/pcap_pkthdr32.hx src/snort_dynamicsrc/preprocids.hx src/snort_dynamicsrc/profiler.hx src/snort_dynamicsrc/sf_dynamic_common.hx src/snort_dynamicsrc/sf_dynamic_meta.hx src/snort_dynamicsrc/sf_dynamic_preproc_lib.cx src/snort_dynamicsrc/sf_dynamic_preproc_lib.hx src/snort_dynamicsrc/sf_dynamic_preprocessor.hx src/snort_dynamicsrc/sf_snort_packet.hx src/snort_dynamicsrc/sf_snort_plugin_api.hx src/snort_dynamicsrc/sfghash.hx src/snort_dynamicsrc/sfhashfcn.hx src/snort_dynamicsrc/sfsnort_dynamic_detection_lib.cx src/snort_dynamicsrc/sfsnort_dynamic_detection_lib.hx src/snort_dynamicsrc/str_search.hx src/snort_dynamicsrc/stream_api.hx lib/snort/dynamicengine/libsf_engine.sox lib/snort/dynamicengine/libsf_engine.so.0x lib/snort/dynamicengine/libsf_engine.lax lib/snort/dynamicengine/libsf_engine.ax lib/snort/dynamicrules/lib_sfdynamic_example_rule.sox lib/snort/dynamicrules/lib_sfdynamic_example_rule.so.0x lib/snort/dynamicrules/lib_sfdynamic_example_rule.lax lib/snort/dynamicrules/lib_sfdynamic_example_rule.ax lib/snort/dynamicpreprocessor/lib_sfdynamic_preprocessor_example.ax lib/snort/dynamicpreprocessor/lib_sfdynamic_preprocessor_example.lax lib/snort/dynamicpreprocessor/lib_sfdynamic_preprocessor_example.sox lib/snort/dynamicpreprocessor/lib_sfdynamic_preprocessor_example.so.0x lib/snort/dynamicpreprocessor/libsf_dcerpc_preproc.ax lib/snort/dynamicpreprocessor/libsf_dcerpc_preproc.lax lib/snort/dynamicpreprocessor/libsf_dcerpc_preproc.sox lib/snort/dynamicpreprocessor/libsf_dcerpc_preproc.so.0x lib/snort/dynamicpreprocessor/libsf_dns_preproc.ax lib/snort/dynamicpreprocessor/libsf_dns_preproc.lax lib/snort/dynamicpreprocessor/libsf_dns_preproc.sox lib/snort/dynamicpreprocessor/libsf_dns_preproc.so.0x lib/snort/dynamicpreprocessor/libsf_ftptelnet_preproc.ax lib/snort/dynamicpreprocessor/libsf_ftptelnet_preproc.lax lib/snort/dynamicpreprocessor/libsf_ftptelnet_preproc.sox lib/snort/dynamicpreprocessor/libsf_ftptelnet_preproc.so.0x lib/snort/dynamicpreprocessor/libsf_smtp_preproc.ax lib/snort/dynamicpreprocessor/libsf_smtp_preproc.lax lib/snort/dynamicpreprocessor/libsf_smtp_preproc.sox lib/snort/dynamicpreprocessor/libsf_smtp_preproc.so.0x lib/snort/dynamicpreprocessor/libsf_ssh_preproc.ax lib/snort/dynamicpreprocessor/libsf_ssh_preproc.lax lib/snort/dynamicpreprocessor/libsf_ssh_preproc.sox lib/snort/dynamicpreprocessor/libsf_ssh_preproc.so.0x lib/snort/dynamicpreprocessor/libsf_ssl_preproc.ax lib/snort/dynamicpreprocessor/libsf_ssl_preproc.lax lib/snort/dynamicpreprocessor/libsf_ssl_preproc.sox lib/snort/dynamicpreprocessor/libsf_ssl_preproc.so.0x share/examples/snort/classification.config-sample <- copied to classification.configx share/examples/snort/create_db2x share/examples/snort/create_mssqlx share/examples/snort/create_mysqlx share/examples/snort/create_oracle.sqlx share/examples/snort/create_postgresqlx share/examples/snort/gen-msg.map-sample <- copied to gen-msg.mapx share/examples/snort/reference.config-sample <- copied to reference.configx share/examples/snort/sid-msg.map-sample <- copied to sid-msg.mapx share/examples/snort/snort.conf-sample <- copied to snort.confx share/examples/snort/threshold.conf-sample <- copied to threshold.confx share/examples/snort/unicode.map-sample <- copied to unicode.mapx share/doc/snort <- multiple files, omitted herex etc/rc.d/snortThese are the configuration options for Snort.===> The following configuration options are available for snort-2.8.2.2_2:     DYNAMIC=on (default) "Enable dynamic plugin support"     FLEXRESP=off (default) "Flexible response to events"     FLEXRESP2=off (default) "Flexible response to events (version 2)"     MYSQL=off (default) "Enable MySQL support"     ODBC=off (default) "Enable ODBC support"     POSTGRESQL=off (default) "Enable PostgreSQL support"     PRELUDE=off (default) "Enable Prelude NIDS integration"     PERPROFILE=off (default) "Enable Performance Profiling"     SNORTSAM=off (default) "Enable output plugin to SnortSam"===> Use 'make config' to modify these settingsI'm glad dynamic plugin support is enabled, but disappointed to see performance profiling disabled.  The --enable-timestats option isn't available via the port at all, apparently.The FreeBSD port/package can't ship with rules, so you need to download your own rules from Sourcefire, along with any Emerging Threats rules you might want to enable.  You then need to edit the snort.conf file to account for your HOME_NET and rule preferences.The barnyard-sguil-0.2.0_5 package installed the following.x bin/barnyardx etc/barnyard.conf-sample <- copied to etc/barnyard.conf by the portx share/doc/barnyard <- multiple files, omitted herex etc/rc.d/barnyardI noticed the barnyard.conf only containedoutput sguilUsually we need something like this:output sguil: sensor_name sensornamegoeshereWhen done the following packages are installed:tao# pkg_infobarnyard-sguil-0.2.0_5 An output system for Snort (patched for sguil)mysql-client-5.0.67_1 Multithreaded SQL database (client)pcre-7.7_1          Perl Compatible Regular Expressions librarysguil-sensor-0.7.0_2 Sguil is a network security monitoring programsnort-2.8.2.1_1     Lightweight network intrusion detection systemtcl-8.4.19,1        Tool Command LanguagetclX-8.4_1          Extended TCLtcltls-1.6          SSL extensions for TCL; dynamicly loadableBecause I want this test system to host the Sguil server too, I decided to move to that phase of the testing.Before add the sguil-server package, I need to install MySQL server 5.0.  This is due to the configuration options:===> The following configuration options are available for sguil-server-0.7.0_2:     MYSQL50=off (default) "Install mysql50 server"===> Use 'make config' to modify these settingsI assume this is the case because the port maintainer prefers running MySQL on one system and the Sguil server on another.Therefore, I install MySQL server 5.0 using pkg_add -vr mysql50-server.Next I stopped MySQL via /usr/local/etc/rc.d/mysql stop.  This is critical for the next step in the process.I installed sguil-server next via pkg_add -vr sguil-server.  The sguil-server-0.7.0_2 package installed the following.x bin/archive_sguildb.tclx bin/incident_report.tclx bin/sguildx etc/sguil-server/autocat.conf-samplex etc/sguil-server/sguild.access-samplex etc/sguil-server/sguild.conf-samplex etc/sguil-server/sguild.email-samplex etc/sguil-server/sguild.queries-samplex etc/sguil-server/sguild.reports-samplex etc/sguil-server/sguild.users-samplex lib/sguil-server/SguildAccess.tclx lib/sguil-server/SguildAutoCat.tclx lib/sguil-server/SguildClientCmdRcvd.tclx lib/sguil-server/SguildConnect.tclx lib/sguil-server/SguildCreateDB.tclx lib/sguil-server/SguildEmailEvent.tclx lib/sguil-server/SguildEvent.tclx lib/sguil-server/SguildGenericDB.tclx lib/sguil-server/SguildGenericEvent.tclx lib/sguil-server/SguildHealthChecks.tclx lib/sguil-server/SguildLoaderd.tclx lib/sguil-server/SguildMysqlMerge.tclx lib/sguil-server/SguildPadsLib.tclx lib/sguil-server/SguildQueryd.tclx lib/sguil-server/SguildReportBuilder.tclx lib/sguil-server/SguildSendComms.tclx lib/sguil-server/SguildSensorAgentComms.tclx lib/sguil-server/SguildSensorCmdRcvd.tclx lib/sguil-server/SguildTranscript.tclx lib/sguil-server/SguildUtils.tclx share/sguil-server/create_ruledb.sqlx share/sguil-server/create_sguildb.sqlx share/sguil-server/migrate_event.tclx share/sguil-server/migrate_sancp.tclx share/sguil-server/sancp_cleanup.tclx share/sguil-server/update_0.7.tclx share/sguil-server/update_sguildb_v5-v6.sqlx share/sguil-server/update_sguildb_v6-v7.sqlx share/sguil-server/update_sguildb_v7-v8.sqlx share/sguil-server/update_sguildb_v8-v9.sqlx share/sguil-server/update_sguildb_v9-v10.sqlx share/sguil-server/update_sguildb_v10-v11.sqlx share/sguil-server/update_sguildb_v11-v12.sqlx share/doc/sguil-server/CHANGESx share/doc/sguil-server/FAQx share/doc/sguil-server/INSTALLx share/doc/sguil-server/INSTALL.openbsdx share/doc/sguil-server/LICENSE.QPLx share/doc/sguil-server/OPENSSL.READMEx share/doc/sguil-server/TODOx share/doc/sguil-server/UPGRADEx share/doc/sguil-server/USAGEx share/doc/sguil-server/sguildb.diax etc/rc.d/sguildWhat came next was very interesting.  The port maintainer created a script to help set up the server.  I'll show relevant excerpts.Running pre-install for sguil-server-0.7.0_2..This sguild install script creates a "turnkey" installof sguild, including configuing the database and conf filesand user accounts so that sguild can be started immediately.You may have already done all this (especially if this is an upgrade)and may not be interested in iterating through cert creation andeverything else that the script does.This portion of the script creates user and group accounts named "sguil".Would you like to opt out of this portion of the install scriptn==> Pre-installation configuration of sguil-server-0.7.0_2User 'sguil' create successfully.sguil:*:1002:1002::0:0:User &:/home/sguil:/usr/sbin/nologin...edited...Running post-install for sguil-server-0.7.0_2..This sguild install script creates a "turnkey" installof sguild, including configuing the database and conf filesand user accounts so that sguild can be started immediately.You may have already done all this (especially if this is an upgrade)and may not be interested in iterating through cert creation andeverything else that the script does.Would you like to opt out of the entire install scriptand configure sguild manually yourself?nThere are a few things that need to be done to complete the install.First, you need to create certs so that the ssl connections between server andsensors will work, you need to create the database, the account to access it andthe tables for the database and you need to create the directories where all thedata will be stored. (You will also need to edit the conf files for your setup.)If you haven't already done this, I can do it for you now.Would you like to create certs now? (y for yes, n for no)yCreating /usr/local/etc/sguil-server/certs ....First we need to create a password-protected CA cert.(The Common Name should be the FQHN of your squil server.)Generating a 1024 bit RSA private key.....++++++.......................................++++++writing new private key to 'privkey.pem'Enter PEM pass phrase:Verifying - Enter PEM pass phrase:-----You are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter '.', the field will be left blank.-----Country Name (2 letter code) [AU]:USState or Province Name (full name) [Some-State]:VALocality Name (eg, city) []:MOrganization Name (eg, company) [Internet Widgits Pty Ltd]:TOrganizational Unit Name (eg, section) []:OCommon Name (eg, YOUR name) []:REmail Address []:oPlease enter the following 'extra' attributesto be sent with your certificate requestA challenge password []:sguilAn optional company name []:Now we need to create the actual certificate for your server.Signature oksubject=/C=US/ST=VA/L=M/O=T/OU=O/CN=R/emailAddress=oGetting CA Private KeyEnter pass phrase for privkey.pem:Finally, we need to move the certs to the '/usr/local/etc/sguil-server/certs}' directoryand clean up the port directory as well.mv: rename /a/ports/security/sguil-server/sguild.key to /usr/local/etc/sguil-server/certs/sguild.key: No such file or directorymv: rename /a/ports/security/sguil-server/sguild.pem to /usr/local/etc/sguil-server/certs/sguild.pem: No such file or directoryrm: /a/ports/security/sguil-server/CA.pem: No such file or directoryrm: /a/ports/security/sguil-server/privkey.pem: No such file or directoryrm: /a/ports/security/sguil-server/sguild.req: No such file or directoryrm: /a/ports/security/sguil-server/file.sr1: No such file or directoryThose errors happen because the script was written with the assumption that it would be run from a ports installation, not a package installation.  I emailed the ports maintainer to see if the problem can be fixed.Is the installation of mysql brand new and unaltered?By default, when mysql is installed, it creates five accounts.None of those accounts are protected by passwords.  That needs to be corrected.The five accounts are:        root@localhost        root@127.0.0.1        root@tao.taosecurity.com            @localhost            @tao.taosecurity.comI can remove all of the accounts except root@localhost (highly recommended)and I can set the password for the root@localhost account. (If you get an errordon't worry about it.  The account may not have been created to begin with.Would you like me to do that now?yEnabling mysql in /etc/rc.conf and starting the server.....It appears that mysql is already enabled!The mysql pid is ....Starting mysql.Deleting users from mysql......All done deleting.......What would you like root@localhost's password to be?rootWould you like to bind mysql to localhost so it only listens on that address?yThe mysql pid is 1694.....Stopping mysql.Waiting for PIDS: 1694.Starting mysql.Would you like to create the database to store all nsm data?yNOTE: If you're upgrading, you do NOT want to do this!  You want to upgrade../+INSTALL: cannot open /work/a/ports/security/sguil-server/work/sguil-0.7.0/server/sql_scripts/create_sguildb.sql: No such file or directoryThis error is similar to the previous error.  I also emailed the port maintainer.Would you like to create a user "sguild@localhost" for database access?yPlease enter the password that you want to use for the sguild account.sguilCreating account for sguild with access to sguildb.....Would you like to create the data directory and all its subdirectories?yWhat do you want the name of the main directory to be?(Be sure to include the full path to the directory - e.g. /var/nsm)/var/nsmThe main directory will be named '/var/nsm'.Creating /var/nsm ....Creating /var/nsm/archives ....Creating /var/nsm/rules ....Creating /var/nsm/load ....Would you like to enable sguild in /etc/rc.conf?yiWriting to /etc/rc.conf....If the sguild.conf file does not exist, I will create and edit it now.Preparing to edit the sguild.conf file......You still need to review all the conf files and configure sguilper your desired setup before starting sguild.  Refer to the port docs in/usr/local/share/doc/sguil-server before proceeding.Right now, all the conf files except sguild.conf are set to the defaults....edited...That ends the need for user input.  The final step advises the user on other required changes.         ***********************************         * !!!!!!!!!!! WARNING !!!!!!!!!!! *         ***********************************PLEASE NOTE: If you are upgrading from a previous version,read the UPGRADE doc (in /usr/local/share/doc/sguil-server) before proceeding!!!Some noteworthy changes in version 0.7.0:SSL is now required for server, sensor and client.The sguild.conf and sguild.email files have changed.You MUST run the upgrade_0.7.tcl script to clean up andprepare the database before running the new version.  BE SURETO BACK UP YOUR DATABASE BEFORE PROCEEDING!!!If you had existing config files in /usr/local/etc/sguil-serverthey were not overwritten.  If this is a first time install, youmust copy the sample files to the corresponding conf file andedit the various config files for your site.  See the INSTALLdoc in /usr/local/share/doc/sguil-server for details.  If this is an upgrade, replaceyour existing conf file with the new one and edit accordingly.The sql scripts for creating database tables were placed inthe /usr/local/share/sguil-server/ directory.  PLEASENOTE: LOG_DIR is not set by this install.  You MUST create thecorrect LOG_DIRS and put a copy of the snort rules you use inLOG_DIR/rules.The sguild, archive_sguildb.tcl and incident_report.tcl scriptswere placed in /usr/local/bin/.  The incident_report.tclscript is from the contrib section.  There is no documentationand the script's variables must be edited before it is used.A startup script, named sguild.sh was installed in/usr/local/etc/rc.d/.  To enable it, edit /etc/rc.confper the instructions in the script.NOTE:  Sguild now runs under the sguil user account not root!At the end of the process the system had these packages installed.tao# pkg_infobarnyard-sguil-0.2.0_5 An output system for Snort (patched for sguil)mysql-client-5.0.67_1 Multithreaded SQL database (client)mysql-server-5.0.67_1 Multithreaded SQL database (server)mysqltcl-3.05       TCL module for accessing MySQL databases based on msqltclp0f-2.0.8           Passive OS fingerprinting toolpcre-7.7_1          Perl Compatible Regular Expressions librarysguil-sensor-0.7.0_2 Sguil is a network security monitoring programsguil-server-0.7.0_2 Sguil is a network security monitoring programsnort-2.8.2.1_1     Lightweight network intrusion detection systemtcl-8.4.19,1        Tool Command LanguagetclX-8.4_1          Extended TCLtcllib-1.10_1       A collection of utility modules for Tcltcltls-1.6          SSL extensions for TCL; dynamicly loadabletcpflow-0.21_1      A tool for capturing data transmitted as part of TCP connecIf I wanted to go from here to actually run the Sguil server, I would have to manually create the database and certificates.  Once the script is fixed I shouldn't have to do that.The major configuration issue that remains is ensuring that data is being written to logical locations.  This primarily means pcap data is stored in a partition that can accommodate it, and the database is located in a partition that can handle growing tables.I think it should be clear at this point that the easiest way to try Sguil is to use NSMNow.  I recommend that only for demo installations, although you can tweak the installation to put what you want in locations you like.  Richard Bejtlich is teaching new classes in DC and Europe in 2009.  Register by 1 Jan and 1 Feb, respectively, for the best rates.
