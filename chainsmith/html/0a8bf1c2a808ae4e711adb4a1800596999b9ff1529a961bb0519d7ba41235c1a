<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Does malware based on Spectre exist?</title>
<meta name="description" content="It is likely that, by now, everyone in computer science has at least heard of the Spectre attack. Since many excellent explanations of the attack already exist, this article focuses on the probability of finding Spectre being exploited on Android smartphones." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 6095;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-does-malware-based-spectre-exist"></a>Does malware based on Spectre exist?</h1>
<h3><a class="chapter" name="h3-axelle-apvrille"></a>Axelle Apvrille</h3>
<p>Fortinet, France</p>
<p><em>Copyright © 2018 Virus Bulletin</em></p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-12849" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-12849" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-introduction">Introduction</a><br /> <a class="toc-level2" href="#h2-part-1-your-android-smartphone-vulnerable">Part 1: Is your Android smartphone vulnerable?</a><br /> <a class="toc-level3" href="#h3-arm-cortex-a53-vulnerable">Is ARM Cortex A53 vulnerable?</a><br /> <a class="toc-level3" href="#h3-testing-proof-concept">Testing a proof of concept</a><br /> <a class="toc-level3" href="#h3-aarch64-poc-does-not-work">AArch64 PoC does not work</a><br /> <a class="toc-level3" href="#h3-challenges-armv7-poc">Challenges for an ARMv7 PoC</a><br /> <a class="toc-level3" href="#h3-timing-results">Timing results</a><br /> <a class="toc-level2" href="#h2-part-2-there-any-spectre-related-malware-wild">Part 2: Is there any Spectre-related malware in the wild?</a><br /> <a class="toc-level3" href="#h3-spectre-malware-samples">Spectre malware samples?</a><br /> <a class="toc-level3" href="#h3-detecting-spectre-malware">Detecting Spectre malware</a><br /> <a class="toc-level2" href="#h2-conclusion">Conclusion</a><br /> <a class="toc-level2" href="#h2-acknowledgements">Acknowledgements</a><br /> <a class="toc-level2" href="#h2-references">References</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-introduction"></a>Introduction</h2>
<p>The Spectre attack [<a href="#ref1">1</a>] has received massive coverage since the beginning of 2018, and by now, it is likely that everyone in computer science has at least heard about it. Spectre exploits the fact that speculative execution resulting from a branch misprediction may reveal private data to an attacker. Excellent explanations of the attack already exist, ranging from simple and short [<a href="#ref2">2</a>] to technical and detailed [<a href="#ref1">1</a>, <a href="#ref3">3</a>].</p>
<p>Rather than being 'yet another paper' that explains Spectre, this one will focus on the probability of finding Spectre being exploited on <em>Android</em> smartphones. More precisely, we will answer two questions:</p>
<ol>
<li>Is your <em>Android</em> smartphone vulnerable to Spectre? (ARM has published a security advisory with a list of vulnerable processors, but we will see that the answer is not just a simple matter of checking the list.)</li>
<li>How can we detect malware that uses Spectre, and does any exist?</li>
</ol>
<p> </p>
<h2><a class="chapter" name="h2-part-1-your-android-smartphone-vulnerable"></a>Part 1: Is your Android smartphone vulnerable?</h2>
<p>As ARM processors are currently predominant on <em>Android</em> smartphones, and as Spectre on<em> Intel x86</em> has largely been covered already, this article focuses on <em>Android</em> smartphones with ARM processors.</p>
<p>The ARM Cortex A53 [<a href="#ref4">4</a>] is a particularly nice pick for this study, because it is used in popular systems on chip (SoCs) (e.g. Qualcomm Snapdragon 410, 610, 615) and is therefore found on many smartphones, especially low-to-middle range ones. A quick survey among work colleagues confirms this distribution, as shown in Figure 1.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/371e5adc6ae079541b1bddf22db286fb_f2895.png" alt="spectre-arm-processors.png" width="400" height="224" /><span class="centered-caption">Figure 1: Distribution of ARM processors on Android smartphones in a department of Fortinet in January 2018.</span></p>
<p>We will therefore use the ARM Cortex A53 as an example and try to determine whether <em>Android</em> smartphones using this processor are vulnerable to Spectre.</p>
<p> </p>
<h3><a class="chapter" name="h3-arm-cortex-a53-vulnerable"></a>Is ARM Cortex A53 vulnerable?</h3>
<p>ARM has published a security advisory [<a href="#ref5">5</a>] in which it conveniently lists which processors are vulnerable to Meltdown and Spectre. The report explicitly states that processors that are not listed are <em>not</em> affected.</p>
<p>Good news! ARM Cortex A53 is not listed in the security advisory, which, according to the report, means it is <em>not</em> vulnerable. The document doesn't explain why, though, and it is quite perplexing because the specifications [<a href="#ref6">6</a>] of the processor rather indicate that it<em> would be</em> vulnerable. Indeed, we find in the specifications references to flags showing that there is speculative execution, including speculative execution of indirect branches, which is pertinent to Spectre versions 1 and 2. So is it vulnerable, or not? Without further explanation, the best solution is to test it.</p>
<p> </p>
<h3><a class="chapter" name="h3-testing-proof-concept"></a>Testing a proof of concept</h3>
<p>In order to test in practice on an <em>Android</em> smartphone with an ARM Cortex A53, we need a proof of concept. At this stage, it is important to highlight that proofs of concept (PoCs) are <em>not malware</em>. Rather, they should be seen as demos that are used to show the feasibility of a given concept.</p>
<p>There are basically three types of PoC for Spectre:</p>
<ul>
<li>PoCs for x86 – copied or derived from the official paper</li>
<li>Ports to other platforms</li>
<li>PoCs for more recent versions of Spectre, also known as Spectre-NG.</li>
</ul>
<p>None of these PoCs carry any malicious payload, and in fact, turning them into malware would involve a significant amount of work (e.g. communication between processes, shared memory, etc.).</p>
<p> </p>
<h3><a class="chapter" name="h3-aarch64-poc-does-not-work"></a>AArch64 PoC does not work</h3>
<p>One PoC in particular is interesting for this study: there is a port for Android AArch64 [<a href="#ref7">7</a>]. The ARM Cortex A53 is an ARMv8-A processor which supports 64-bit executables, with backward compatibility to ARMv7-A for 32-bit executables. So, the PoC should be suitable.</p>
<p>We cross-compile the PoC for our smartphone, push it on the device, and run:</p>
<pre>git clone https://github.com/V-E-O/PoC/tree/master/CVE-2017-5753<br />NDK_DIR/build/tools/make_standalone_toolchain.py --arch arm64 --api SDK_NUMBER --installdir TOOLCHAIN_DIR<br />TOOLCHAIN_DIR/bin/aarch64-linux-android-gcc source.c -o spectre<br />adb push spectre /data/local/tmp<br />adb shell chmod u+x /data/local/tmp/spectre<br />adb shell /data/local/tmp/spectre<br />/system/bin/sh: ./spectre: not executable: 64-bit ELF file</pre>
<p>The smartphone refuses to execute the PoC, complaining it cannot handle 64-bit executables. Indeed, when we check the CPU information on the smartphone, we do not see the expected ARMv8 model, but ARMv7.</p>
<pre class="prettyprint"><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="304358555c5c704345425e5951">[email&#160;protected]</a> :/ $ cat /proc/cpuinfo<br />processor : 0<br />model name : ARMv7 Processor rev 0 (v7l)<br />BogoMIPS : 38.00<br />Features : swp half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 evtstrm<br />CPU implementer : 0x41<br />CPU architecture : 7<br />CPU variant : 0x0<br />CPU part : 0xd03<br />CPU revision : 0</pre>
<p>This is quite common: it means we have a 64-bit capable processor, but we have a 32-bit stock kernel. So, there is no way this PoC will run on our smartphone – we need a 32-bit PoC for ARMv7.</p>
<p> </p>
<h3><a class="chapter" name="h3-challenges-armv7-poc"></a>Challenges for an ARMv7 PoC</h3>
<p>Unfortunately, there is no PoC for ARMv7, so we decided to port it. The port is not an easy one, because some x86 instructions are missing in ARMv7. The official Spectre PoC implements a Flush+Reload cache attack, so we need (1) an instruction to flush the cache, and (2) an instruction to time access to memory accurately.</p>
<p>The x86 instructions <span class="monospace">_mm_clflush</span> (cache flush) and <span class="monospace">rdtscp</span> or <span class="monospace">rdtsc</span> (time measure) do not exist on ARMv7. While we found a replacement for cache flush named <span class="monospace">__ARM_NR_cacheflush</span>, there is no direct replacement for time measurement. However, the conclusions of prior research work [<a href="#ref8">8</a>, <a href="#ref9">9</a>] present us with four alternative solutions:</p>
<ol>
<li>Monitoring hardware events. This relies on the <span class="monospace">perf_event_open</span> system call. Unfortunately, hardware events are not available on the smartphones we have.</li>
<li>The CPU's performance monitor unit (PMU). This solution should provide accurate timing, but unfortunately, the PMU is only available from kernel space, not from user space. As the idea is to test the vulnerability of common <em>Android</em> smartphones to Spectre, we ruled out this solution. Indeed, this would involve modifying the <em>Android</em> kernel or adding a kernel module, which does not correspond to the typical standard end-user system.</li>
<li>A dedicated thread timer. This solution is very simple and consists of having a counter increment in a dedicated thread. This works quite reliably on <em>Linux</em> hosts, however we found it was not precise enough on a smartphone.</li>
<li>Get time POSIX functions. The only remaining solution consists of using <span class="monospace">clock_gettime()</span>, using the following clocks for better results: <span class="monospace">CLOCK_REALTIME</span> or <span class="monospace">CLOCK_MONOTONIC</span>.</li>
</ol>
<p> </p>
<h3><a class="chapter" name="h3-timing-results"></a>Timing results</h3>
<p>After successfully porting the PoC (source code available at [<a href="#ref10">10</a>]), we ran it on our test smartphones. Some tuning was required, for instance to find the appropriate duration to differentiate a cache hit from a cache miss. That value is different for each system.</p>
<p>Yet, although the PoC ran, it failed to recover the secret phrase. In the output below, the recovered characters are 'o' followed by non-alphanumeric characters; this does not match the expected secret phrase which is 'The Magic Words are Squeamish Ossifrage'.</p>
<pre>MAX_TRIES=5500 CACHE_HIT_THRESHOLD=364 len=40<br />Reading 40 bytes:<br />Reading at malicious_x = 0xffffe7e4 Unclear: 0x6F='o' score=809 (second best: 0xF0='?' score=806)<br />Reading at malicious_x = 0xffffe7e5 Unclear: 0xF3='?' score=809 (second best: 0xF6='?' score=808)<br />Reading at malicious_x = 0xffffe7e6 Unclear: 0xF0='?' score=877 (second best: 0xF6='?' score=847)<br />Reading at malicious_x = 0xffffe7e7 Unclear: 0xF0='?' score=839 (second best: 0xF6='?' score=829)</pre>
<p>Note that the smartphones on which we tested the PoC were unpatched, as the mitigation for Spectre on AArch32 was only released in June 2018 [<a href="#ref11">11</a>] and not pushed to the test smartphones at this time.</p>
<p>Also, we conducted the same test on an old smartphone featuring an ARM Cortex A8 [<a href="#ref12">12</a>]. This ARMv7 CPU is interesting because ARM lists it as <em>vulnerable</em> to Spectre. Nonetheless, we obtained the same results as with the ARM Cortex A53, i.e. the secret phrase was <em>not</em> recovered when this CPU was used.</p>
<p>The most obvious conclusion to such a fail is that the test phones are not vulnerable to Spectre, or at least not to Flush+Reload implementations of Spectre, without substantial modification of the system. A lesson to be learned is that a vulnerable CPU is different from a vulnerable platform. As we have seen previously, ARM Cortex A8 is vulnerable as a CPU, but the vulnerability cannot be exploited over an <em>Android</em> OS stack.</p>
<p>Some additional research could be done to confirm this result:</p>
<ol>
<li>Use the CPU's PMU to obtain precise timing instead of using <span class="monospace">clock_gettime()</span>. However, as we said earlier, this involves kernel modification and is not representative of common end-user smartphones. Additionally, note that, for the same reasons, a piece of malware achieving this without user's knowledge is highly unlikely.</li>
<li>Implement Prime+Probe or Evict+Reload cache attacks for Spectre. This is an interesting option, because it is likely that the <span class="monospace">__ARM_NR_cacheflush</span> syscall does not properly flush the cache. But this solution goes beyond the standard port of the official PoC (which uses Flush+Reload).</li>
</ol>
<p>Table 1 summarizes the findings.</p>
<table class="table table-bordered" border="0">
<tbody>
<tr>
<td><strong>Spectre cache attack</strong></td>
<td><strong>Hacks</strong></td>
<td><strong>Smartphone</strong></td>
<td><strong>Results</strong></td>
</tr>
<tr>
<td>Flush+Reload</td>
<td>None</td>
<td>Android with ARM Cortex A53</td>
<td><strong>Not vulnerable</strong></td>
</tr>
<tr>
<td>Prime+Probe</td>
<td>None</td>
<td>Android with ARM Cortex A53</td>
<td><em>To do</em> (no known PoCs for this)</td>
</tr>
<tr>
<td>Evict+Reload</td>
<td>None</td>
<td>Android with ARM Cortex A53</td>
<td><em>To do</em> (no known PoCs for this)</td>
</tr>
<tr>
<td>Flush+Reload</td>
<td>Kernel module to access PMU</td>
<td>Android with ARM Cortex A53</td>
<td><em>To do</em></td>
</tr>
<tr>
<td>Flush+Reload</td>
<td>None</td>
<td>Android with ARM Cortex A8</td>
<td><strong>Not vulnerable</strong></td>
</tr>
</tbody>
</table>
<p class="centered-caption">Table 1: Summary of findings.</p>
<p>In practice, the results mean that if you own an old <em>Android</em> smartphone or a low-to-middle range <em>Android</em> smartphone with an ARM Cortex A53, it is probably secure against Spectre attacks. There are only risks with a few recent high‑end smartphones, especially with ARM Cortex A57 and A72. In those cases, to be absolutely certain, it is better to test the PoC for AArch64 [<a href="#ref7">7</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-part-2-there-any-spectre-related-malware-wild"></a>Part 2: Is there any Spectre-related malware in the wild?</h2>
<p>In February 2018, there were several headlines in the news stating 'Meltdown-Spectre malware is already being tested by attackers' and 'Meltdown and Spectre malware discovered in the wild'. The information was based on an <em>AV-TEST</em> graph [<a href="#ref13">13</a>], which, unfortunately, was misinterpreted, as we will see.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/dcb2ab4ece9af241bd9dc98c0661fe35_f2896.png" alt="avtest.png" width="760" height="509" /><span class="centered-caption">Figure 2: AV-TEST graph as Tweeted on 1 February 2018, reporting 139 unique samples for Spectre and Meltdown [<a href="#ref13">13</a>].</span></p>
<p> </p>
<h3><a class="chapter" name="h3-spectre-malware-samples"></a>Spectre malware samples?</h3>
<p>We checked each of the 139 samples reported by <em>AV‑TEST</em>, one by one. At that time, their names were the following:</p>
<ul>
<li>W32/Spectre.D!tr</li>
<li>ELF/MeltdownPOC.B!tr</li>
<li>Riskware/SpectrePOC</li>
<li>Riskware/POC_Spectre</li>
<li>Linux/Spectre!tr</li>
<li>Linux/Spectre.C!tr</li>
<li>Linux/Spectre.A!exploit 3043151C.vsc</li>
<li>W32/Meltdown.D!tr</li>
<li>ELF/MeltdownPOC.A or .B</li>
</ul>
<p>All of these samples were proof of concepts. For the sake of clarity, in the case of Spectre, we renamed them all 'Riskware/SpectrePOC'. <em>AV-TEST</em> explicitly Tweeted an additional comment: 'The majority of samples are based on the known PoC codes [...] we also found the first working JavaScript PoC for Spectre' [<a href="#ref13">13</a>]. Note that <em>AV-TEST</em> speaks of <em>samples</em> and <em>not</em> malware. Unfortunately, the subtle difference between a sample, or a PoC, and a piece of malware went unnoticed (except by AV experts [<a href="#ref14">14</a>]) and led to major confusion with claims that 'Meltdown-Spectre malware' was in the wild. We re-iterate that there is a <em>significant difference</em> between a PoC of Spectre and a piece of malware using Spectre. Turning a PoC into a malicious executable is far from a trivial process.</p>
<p>If we study detection hits for those Riskware/SpectrePOC samples, we get the following graph.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/6215/3173/2200/fghits.png" alt="fghits.png" width="360" height="216" /><span class="centered-caption">Figure 3: Detection hits on FortiGates for Riskware/SpectrePOC (Spectre proofs of concept).</span></p>
<p>The graph shows an initial spike in early January, when we released the signatures for the Spectre PoCs. The second spike, in March, is presumed to correspond to the release of several <em>Microsoft</em> patches. Both spikes probably correspond to people testing Spectre PoCs on their infrastructures to assess vulnerability. We can also see a slight disinterest in Spectre starting in April 2018: before that date, besides spikes, we were registering approximately 40 hits per day (which isn't a lot); after April, it was more like 20 hits per day. This is slightly surprising as new versions of Spectre were released in May, but that did not seem to increase interest.</p>
<p> </p>
<h3><a class="chapter" name="h3-detecting-spectre-malware"></a>Detecting Spectre malware</h3>
<p>Even if there isn't any Spectre malware yet, that isn't to say that it won't happen one day. Researchers quickly tried to think of ways to detect Spectre. Some came up with the idea of detecting cache attacks with <em>Linux</em> perf [<a href="#ref15">15</a>], others by monitoring patterns of cache misses/cache hits [<a href="#ref16">16</a>], or by extending the <em>Coverity</em> static analysis tool [<a href="#ref17">17</a>], etc.</p>
<p>As an anti-virus researcher, I decided to craft a more or less generic AV signature to detect Flush+Reload cache attacks in ELF x86-64 executables (Figure 4). My goal wasn't to design a perfect signature (difficult, if not impossible), but something that would roughly work. I simply parsed the executable, looking for a cache flush instruction. If one was found, I would then look for two close <span class="monospace">rdtscp</span> instructions.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/cache/75f6901b9e96d01c6db3e2d16e238cfc_f2898.png" alt="flush-reload-sig.png" width="600" height="375" /><span class="centered-caption">Figure 4: Detecting Flush+Reload cache attacks in ELF x86‑64 executables.</span></p>
<p>Such a signature would not be acceptable in production because of poor performance (the entire binary needs to be scanned) and the high risk of false positives. But, for research, it is acceptable.</p>
<p>We ran the signature against all 62 ELF x86-64 PoCs of Spectre.</p>
<pre>"./2FC4432E.vsc" is infected with the "Linux/FlushReload.A!tr" virus. VID: 888 S<br />IGID: 8888 SIGTYPE: C<br />"./2FC0C6A4.vsc" is infected with the "Linux/FlushReload.A!tr" virus. VID: 888 S<br />IGID: 8888 SIGTYPE: C<br />"./2FC4A10C.vsc" is infected with the "Linux/FlushReload.A!tr" virus. VID: 888 S<br />IGID: 8888 SIGTYPE: C<br />[Summary] Scanned: 62 Infected: 36 Total bytes: 1.614MiB Time: 0m0.001s</pre>
<p>36 samples out of 62 were detected immediately. We investigated the remaining ones, and it appears they were all damaged: the cache flush instruction was missing. Without that instruction, Spectre won't run, so missing those samples is not very important.</p>
<p>As a second test, we ran the signature against 661,977 recent malicious ELF samples from the last six months. The result was quite surprising because the signature detected no samples other than the Spectre PoCs.</p>
<p><img style="display: block; margin-left: auto; margin-right: auto;" src="/files/4615/3173/2427/aste.png" alt="aste.png" width="297" height="222" /><span class="centered-caption">Figure 5: Testing a research Flush+Reload cache signature on ELF samples.</span></p>
<p>This gives us some important information: Flush+Reload cache attacks are not common in ELF malware. Also, we had expected several false positives with this signature, but that was not the case: this imperfect signature turns out to be quite good in practice.</p>
<p> </p>
<h2><a class="chapter" name="h2-conclusion"></a>Conclusion</h2>
<p>The take-aways of this work are the following:</p>
<ul>
<li>A vulnerable CPU is different from a vulnerable system.</li>
<li><em>Android</em> smartphones with an ARM Cortex A53 are not vulnerable to Flush+Reload Spectre attacks.</li>
<li>Implementing cache attacks on ARM-based smartphones is difficult. Code does not easily port from Intel x86-64 to ARMv7.</li>
<li>We are currently not aware of any malware based on Spectre.</li>
<li>Cache attacks are not common in malware.</li>
</ul>
<p>The future is difficult to foresee. On the one hand, each time an attack goes public, malware authors use it sooner or later (usually quite soon). So, we might expect to see Spectre malware soon. On the other hand, this research work proves that cache attacks are difficult to implement, and perhaps not extremely well suited to mass infection because the malicious implementation will have to handle many CPUs, architectures and operating systems, and tune the attack for each of them. As long as there are easier ways for malware authors to make money, why would they embarrass themselves with such a technical choice? Nonetheless, the attack could certainly interest authors of targeted attacks (governments, political targets etc.).</p>
<p> </p>
<h2><a class="chapter" name="h2-acknowledgements"></a>Acknowledgements</h2>
<p>This research was presented at the Pass The SALT conference. I particularly wish to thank Adam Shewchuk of <em>Fortinet</em> for helping me collect data, Ludovic Apvrille and Renaud Pacalet from <em>Telecom Paristech</em> for their explanations of ARM CPUs and speculative execution, and Daniel Gruss for his open discussion with me on implementation issues I met.</p>
<p> </p>
<h2><a class="chapter" name="h2-references"></a>References</h2>
<p><a class=" anchor" name="ref1"></a>[1] Kocher. P. et al. Spectre Attacks: Exploiting Speculative Execution. <a href="https://spectreattack.com/spectre.pdf" target="_blank">https://spectreattack.com/spectre.pdf</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] Joubran, J. Spectre attack explained like you're five. <a href="https://www.youtube.com/watch?v=q3-xCvzBjGs" target="_blank">https://www.youtube.com/watch?v=q3-xCvzBjGs</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] Gruss, D. Software-based Microarchitecture attacks. <a href="https://gruss.cc/files/cryptacus2018.pdf" target="_blank">https://gruss.cc/files/cryptacus2018.pdf</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] ARM Cortex A53. <a href="https://developer.arm.com/products/processors/cortex-a/cortex-a53" target="_blank">https://developer.arm.com/products/processors/cortex-a/cortex-a53</a>.</p>
<p><a class=" anchor" name="ref5"></a>[5] ARM, Vulnerability of Speculative Processors to Cache Timing Side-Channel Mechanics. Updated 31 May 2018. <a href="https://developer.arm.com/support/arm-security-updates/speculative-processor-vulnerability" target="_blank">https://developer.arm.com/support/arm-security-updates/speculative-processor-vulnerability</a>.</p>
<p><a class=" anchor" name="ref6"></a>[6] ARM Cortex A53 specifications. <a href="https://static.docs.arm.com/dui0946/a/cycle_models_cortex_A53_Model_User_Guide_v8_0_0_DUI0946A_en.pdf" target="_blank">https://static.docs.arm.com/dui0946/a/cycle_models_cortex_A53_Model_User_Guide_v8_0_0_DUI0946A_en.pdf</a>.</p>
<p><a class=" anchor" name="ref7"></a>[7] Spectre PoC for AArch64. <a href="https://github.com/V-E-O/PoC/tree/master/CVE-2017-5753" target="_blank">https://github.com/V-E-O/PoC/tree/master/CVE-2017-5753</a>.</p>
<p><a class=" anchor" name="ref8"></a>[8] Lipp, M.; Gruss, D.; Spreitzer, R.; Maurice, C.; Mangard, S. ARMageddon: Cache Attacks on Mobile Devices, USENIX Security 2016.</p>
<p><a class=" anchor" name="ref9"></a>[9] Xiao, Y.; Zhang, Y. Return-Oriented Flush-Reload Side Channels on ARM and Their Implications for Android Devices, CCS 2016.</p>
<p><a class=" anchor" name="ref10"></a>[10] Spectre PoC for ARMv7-A. <a href="https://github.com/cryptax/spectre-armv7" target="_blank">https://github.com/cryptax/spectre-armv7</a>.</p>
<p><a class=" anchor" name="ref11"></a>[11] Phoronix. 32-bit ARM Finally Gets Mitigiated For Spectre V1/V2 With Linux 4.18. <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=Spectre-32-bit-ARM-Linux-4.18" target="_blank">https://www.phoronix.com/scan.php?page=news_item&amp;px=Spectre-32-bit-ARM-Linux-4.18</a>.</p>
<p><a class=" anchor" name="ref12"></a>[12] ARM Cortex A8. <a href="https://developer.arm.com/products/processors/cortex-a/cortex-a8" target="_blank">https://developer.arm.com/products/processors/cortex-a/cortex-a8</a>.</p>
<p><a class=" anchor" name="ref13"></a>[13] AV-TEST Tweet. 1 February 2018. <a href="https://plus.google.com/photos/photo/100383867141221115206/6517535568830348546" target="_blank">https://plus.google.com/photos/photo/100383867141221115206/6517535568830348546</a>.</p>
<p><a class=" anchor" name="ref14"></a>[14] Grooten, M. There is no evidence in-the-wild malware is using Meltdown or Spectre. 2 February 2018. <a href="https://www.virusbulletin.com/blog/2018/02/there-no-evidence-wild-malware-using-meltdown-or-spectre/" target="_blank">https://www.virusbulletin.com/blog/2018/02/there-no-evidence-wild-malware-using-meltdown-or-spectre/</a>.</p>
<p><a class=" anchor" name="ref15"></a>[15] Capsule 8. Part Two: Detecting Meltdown and Spectre by Detecting Cache Side Channels. 9 January 2018. <a href="https://capsule8.com/blog/detecting-meltdown-spectre-detecting-cache-side-channels/" target="_blank">https://capsule8.com/blog/detecting-meltdown-spectre-detecting-cache-side-channels/</a>.</p>
<p><a class=" anchor" name="ref16"></a>[16] Israel, E.; Marx, D.; Alon, Y.; Gafni, A.; Omelchenko, B. Detection of the Meltdown and Spectre Vulnerabillities. 8 January 2018. <a href="https://research.checkpoint.com/detection-meltdown-spectre-vulnerabilities-using-checkpoint-cpu-level-technology/" target="_blank">https://research.checkpoint.com/detection-meltdown-spectre-vulnerabilities-using-checkpoint-cpu-level-technology/</a>.</p>
<p><a class=" anchor" name="ref17"></a>[17] Synopsys, Detecting Spectre vulnerability exploits with static analysis. 22 March 2018. <a href="https://www.synopsys.com/blogs/software-security/detecting-spectre-vulnerability-exploits-with-static-analysis/" target="_blank">https://www.synopsys.com/blogs/software-security/detecting-spectre-vulnerability-exploits-with-static-analysis/</a>.</p> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2018/201807-Spectre-malware.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Does malware based on Spectre exist?&url=https://www.virusbulletin.com/virusbulletin/2018/07/does-malware-based-spectre-exist"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2018/07/does-malware-based-spectre-exist'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2018/07/does-malware-based-spectre-exist&title=Does malware based on Spectre exist?"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2018/07/does-malware-based-spectre-exist&t=Does malware based on Spectre exist?"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2018/07/does-malware-based-spectre-exist"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>