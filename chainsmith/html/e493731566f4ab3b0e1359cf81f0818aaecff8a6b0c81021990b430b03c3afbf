<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Malicious Yahooligans</title>
<meta name="description" content="Making its appearance in June 2006, JS.Yamanner@m was the first webmail worm. Eric Chien has all the details." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 2670;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb200608-yamanner"></a>Malicious Yahooligans</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2006-08-01</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Eric</span> <span class="surname">Chien</span></h3><span class="orgname">Symantec</span>, <span class="orgdiv">Ireland</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Helen</span> <span class="surname">Martin</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>Making its appearance in June 2006, <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="4e041d60172f232f20202b3c0e23">[email&#160;protected]</a> was the first webmail worm. Eric Chien has all the details.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2006 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-4943" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-4943" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id2209100">Introduction</a></span></dt><dt><span class="sect1"><a href="#id2476100">Target eliminated</a></span></dt><dt><span class="sect1"><a href="#id2475335">(Dis)infecting with AJAX</a></span></dt><dt><span class="sect1"><a href="#id4478133">Reaping the harvest</a></span></dt><dt><span class="sect1"><a href="#id3291111">Rise and downfall</a></span></dt><dt><span class="sect1"><a href="#id2777284">Ground zero</a></span></dt><dt><span class="sect1"><a href="#id3717519">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2209100"></a>Introduction</h2></div></div></div><p>On 11 June 2006 we received reports of a worm propagating via email. That in itself was nothing special, but what was more interesting was the fact that this worm appeared to propagate only through <em class="productname">Yahoo! Mail</em> email accounts.</p><p>Once we obtained a sample, it became clear that this threat wasn&#39;t any ordinary email worm, but was the first webmail worm, later named <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="3a706914635b575b54545f487a5714">[email&#160;protected]</a></p><p>In the past, we have seen email worms that sent themselves via <em class="productname">Outlook</em> and those that communicated with SMTP servers directly, but we hadn&#39;t seen an email worm that actually harnessed a webmail interface. <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="450f166b1c2428242b2b20370528">[email&#160;protected]</a> utilized <em class="productname">Yahoo! Mail</em>&#39;s webmail interface both to collect email addresses and to send itself to other users.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2476100"></a>Target eliminated</h2></div></div></div><p>Furthermore, <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="6d273e43340c000c0303081f2d00">[email&#160;protected]</a> did not require a user to execute a file. Instead, the worm took advantage of a vulnerability in <em class="productname">Yahoo! Mail</em> so that merely by opening an infected mail message for reading, the user would cause the worm to execute and begin sending itself to addresses with which the infected user had corresponded in the past. This functionality would result in both the rise and the downfall of <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="7a302954231b171b14141f083a1754">[email&#160;protected]</a></p><p>The vulnerability utilized by <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="470d14691e262a2629292235072a">[email&#160;protected]</a> was an undisclosed zero-day vulnerability in <em class="productname">Yahoo!</em>&#39;s JavaScript- and HTML-filtering algorithms.</p><p><em class="productname">Yahoo!</em>, like other web applications, must parse emails for HTML and JavaScript and sanitize tag attributes that allow JavaScript execution. If Yahoo! didn&#39;t sanitize HTML and JavaScript contained in emails, then emails could contain malicious JavaScript that would be executed under the context of the <em class="productname">Yahoo!</em> domain. This could allow one to read other people&#39;s emails, impersonate other users, and create a self-replicating worm.</p><p>An example of a tag attribute that <em class="productname">Yahoo! </em>sanitizes is onload. The onload attribute instructs the browser to execute JavaScript code (or another scripting language) as soon as the page is rendered in the browser.</p><p>Another example is the target attribute. The target attribute instructs the browser to load the content in a particular page or frame. This page or frame could reside on another domain. If the tag is not filtered, then private content on a yahoo.com page, such as your email address, could be sent to a page outside of the yahoo.com domain. </p><p>In this case, the worm utilized the following malformed HTML:</p><pre class="programlisting">&lt;img src=&#39;http://us.i1.yimg.com/us.yimg.com/i/us/nt/ma/ma_mail_1.gif&#39;
 target=&quot;&quot;onload=&quot;// malicious javascript here //&quot;&gt;</pre><p>This HTML is nonsensical as the information within the quotes after the target attribute should contain the name of a frame or page, but instead includes nothing and is followed immediately by an onload attribute. </p><p>The purpose of this malformed HTML becomes clearer when one understands <em class="productname">Yahoo!</em>&#39;s filtering algorithms. In particular, <em class="productname">Yahoo!</em> filters out the target attribute to prevent information disclosure. However, this results in the following HTML being rendered by the browser:</p><pre class="programlisting"> &lt;img src=&#39;http://us.i1.yimg.com/us.yimg.com/i/us/nt/ma/ma_mail_1.gif&#39;
 onload=&quot;// malicious javascript here //&quot;&gt;</pre><p>Note that the target=&quot; &quot; text has been removed and this results in proper HTML. However, due to the fact that <em class="productname">Yahoo!</em> has removed the target attribute, the onload attribute now resides in a valid position and <em class="productname">Yahoo!</em>&#39;s algorithms don&#39;t take a second pass at filtering. As a result, the dangerous onload attribute is not filtered out.</p><p>This vulnerability allows the JavaScript within the onload attribute to be executed by the browser under the context of the yahoo.com domain, all without any interaction from the user. The user must merely view the page. </p><p>The vulnerability has since been fixed by <em class="productname">Yahoo! </em>and now results in the following HTML:</p><pre class="programlisting">&lt;img src=&#39;http://us.i1.yimg.com/us.yimg.com/i/us/nt/ma/ma_mail_1.gif&#39;
 onfiltered=&quot;// malicious javascript here //&quot;&gt;</pre><p>Note that, while the target=&quot; &quot; text has still been removed, the onload attribute has been neutered properly by replacing it with onfiltered, which is an invalid tag. The JavaScript is no longer loaded and executed after the page load.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2475335"></a>(Dis)infecting with AJAX</h2></div></div></div><p>Once the user reads the email, the JavaScript code of the worm begins executing via the unfiltered onload handler. The worm utilizes AJAX (Asynchronous JavaScript and XML), which is another first. Now running under the context of yahoo.com and the currently logged-on user session, the worm has the ability to parse the web page and make the same HTTP queries as if the user had clicked on items in the webmail interface.</p><p>Smartly, the worm uses AJAX for the HTTP queries. If the worm had not used AJAX, any HTTP queries would have resulted in another page loading, which would be more likely to be noticeable to the user, as well as putting the calling JavaScript code out of scope.</p><p>By using AJAX, the worm can issue multiple HTTP queries in order to find email addresses and send itself all under the covers without changing the page.</p><p>JavaScript is global in scope across an HTML page, so script in one block has full access to variables and functions in other blocks or included JavaScript files. <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="347e671a6d5559555a5a51467459">[email&#160;protected]</a> takes advantage of this in order to perform some of its actions.</p><p>For example, the first thing <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="dc968ff285bdb1bdb2b2b9ae9cb1">[email&#160;protected]</a> does is to determine which server is being utilized. <em class="productname">Yahoo! </em>serves the web application from many different servers. The URL is stored in a variable called url0, and from this variable <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="f9b3aad7a098949897979c8bb994">[email&#160;protected]</a> can parse out the domain.</p><p>To collect email addresses, <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="d09a83fe89b1bdb1bebeb5a290bd">[email&#160;protected]</a> sends an HTTP query as if someone had selected the QuickBuilder functionality in <em class="productname">Yahoo! Mail</em> using AJAX so the page does not refresh. QuickBuilder is a <em class="productname">Yahoo! Mail</em> feature that searches all your mail in selected folders for any email addresses that are not already part of your address book. The purpose of this feature is to allow you to build your address book quickly.</p><p><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="1b514835427a767a75757e695b76">[email&#160;protected]</a> takes advantage of this feature to get <em class="productname">Yahoo!</em> to find viable email addresses. <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="99d3cab7c0f8f4f8f7f7fcebd9f4">[email&#160;protected]</a> requests the first 100 (alphabetically by folders) email addresses in all folders and parses these for any that match @yahoo.com or @yahoogroups.com. In addition, the worm attempts to filter out the user and sender&#39;s email addresses, thus preventing the threat from resending itself back to the user. The worm obtains the user&#39;s and sender&#39;s email addresses from form fields already populated by the <em class="productname">Yahoo! Mail </em>application.</p><p>With a list of viable email addresses, <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="4e041d60172f232f20202b3c0e23">[email&#160;protected]</a> sends an AJAX HTTP request to compose a new message, but doesn&#39;t actually use this request to send the message. Instead, this request is used merely to generate a new &#39;crumb&#39;, which is similar to a session-tracking cookie, but a form value within the page.</p><p><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="7a302954231b171b14141f083a17">[email&#160;protected]</a> then sends a second AJAX HTTP request with a variety of POST variables set in order to forward the open message (which contains itself) to the list of email addresses discovered via QuickBuilder. One email address is set as the &#39;To:&#39; email address and the entire list is set as the BCC: field. Since this is a forwarded message, the From: address will be set to whoever opened the infected message. The subject line is set to &#39;New Graphic Site&#39; and the message body is set to &#39;Note: forwarded message attached&#39;.</p><p><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="3f756c11665e525e51515a4d7f52">[email&#160;protected]</a> also needs to set a variety of administrative values, including a tracking number for the message being forwarded by parsing the HTML page, the crumb value, and it needs to set a parameter so the message isn&#39;t saved in the Sent folder.</p><p>When the message is received, at the bottom of the chain of forwarded messages, the infected HTML attachment will automatically be rendered and contain the text &#39;Please wait while loading the site&#39;.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4478133"></a>Reaping the harvest</h2></div></div></div><p>Few users will actually see the content of the message since as soon as the page is loaded, the worm executes and after the worm forwards itself to further targets, <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="266c75087f474b4748484354664b">[email&#160;protected]</a> then calls window.navigate to redirect the page to another website (www.av3.net), along with a variety of GET parameters.</p><p>The purpose of the redirection wasn&#39;t completely clear at first. The redirection included GET parameters which appear to have been used for debugging purposes to show the Sent folder view in <em class="productname">Yahoo! Mail</em> after the worm finished sending itself, but before being released, the yahoo.com domain was replaced with www.av3.net. Also, appended to the parameters was the list of email addresses, which would not be needed when displaying the Sent folder view.</p><p>While many assumed that the purpose of this last step was to harvest email addresses and send them to av3.net, av3.net has existed for a long time and is referenced and utilized on a variety of websites. Av3.net hosts multimedia content commonly used on <em class="productname">MySpace</em>.</p><p>In addition, the form of the GET parameters with unnecessary <em class="productname">Yahoo! Mail </em>parameters didn&#39;t quite add up. Furthermore, the author could easily have used AJAX instead of redirection. Perhaps the website was simply a red herring or an attempt at implicating someone else.</p><p>After some investigation, we were able to determine that av3.net was owned by the author of the worm and thus, email addresses were harvested. The unnecessary GET parameters were likely added so that the harvested email addresses weren&#39;t visible in the URL box. The actual harvesting of the email addresses does not appear to be done by any back-end scripting on the site, but perhaps just parsing of the standard web access logs. Another reason AJAX or a dummy site wasn&#39;t used is perhaps because the author desired page views for generating income via hosted advertisements.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3291111"></a>Rise and downfall</h2></div></div></div><p>Because the worm redirected automatically to another site that hosted a hit counter, we were able to track infection rates and also get a glimpse of who was infected.</p><p><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="9ad0c9b4c3fbf7fbf4f4ffe8daf7">[email&#160;protected]</a> infected close to 200,000 users between 11&ndash;12 June 2006, before dying out due to the vulnerability being fixed. The number of hits is likely to be higher than the number of infected users since a common reaction of a user, when they saw their browser redirected to the av3.net website, would be to hit the back button. But doing so would just cause the infection to execute again and then redisplay the av3.net site. According to the web stats, infected users included a variety of governments and large corporations including financial institutions.</p><p>While the worm spread quickly due to the use of a vulnerability in <em class="productname">Yahoo! Mail</em>, the worm was eradicated immediately as soon as <em class="productname">Yahoo!</em> patched the vulnerability. At that moment the worm could no longer spread and the hits on av3.net stopped (see <a href="#figure.1">Figure 1</a>). </p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Number of infections per day." src="/uploads/images/figures/2006/08/Echien1.gif" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Number of infections per day.</b></p></div><p>Web applications such as <em class="productname">Yahoo! Mail</em> have a distinct advantage over client applications since as soon as a vulnerability is patched, all users are protected immediately. In contrast, email applications such as <em class="productname">Outlook</em> suffer from the fact that not all users upgrade or patch their installations straight away and therefore remain vulnerable to similar attacks.</p><p>The country most affected by <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="a6ecf588ffc7cbc7c8c8c3d4e6cb">[email&#160;protected]</a> was the United States, which is no surprise considering the popularity of <em class="productname">Yahoo! Mail</em> within the US market. The second most affected country was Iran. The reason for this became clear when we tracked the infection back to &#39;ground zero&#39; and managed to obtain some information about the author himself.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2777284"></a>Ground zero</h2></div></div></div><p>The worm simply forwards an existing message. However, forwarding the message means that the original headers can be found on previous messages.</p><p>After obtaining a few samples, we were able not only to determine the original infection, but also to create interesting relationship trees demonstrating how the worm spread from one user to the next and how users were interconnected.</p><p>The diagram shown in <a href="#figure.2">Figure 2</a> is a partial branch. The blue ellipses represent <em class="productname">Yahoo! Mail</em> groups and the squares represent individual <em class="productname">Yahoo!</em> email addresses. The red circle on the right is the first infection.</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="A partial branch of how infected users are connected." src="/uploads/images/figures/2006/08/Echien2.gif" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;A partial branch of how infected users are connected.</b></p></div><p> After some investigation of the originating addresses, it seems that the author may have been Iranian, or at least shared interests with and had connections with Persian speakers. Thus, it was no surprise to see that the second most affected country was Iran as the first person to be infected likely had contacts with people living in Iran. </p><p>Further confirmation of the worm&#39;s country of origin appeared when the author sent an email to anti-virus companies in search of employment.</p><p>&quot;<span class="emphasis"><em>&hellip; Finally I should mention that I don&rsquo;t like to disturb no one. Since I live in iran and taking a Job in good computer companies is very hard (becaue getting Visa is very hard from US) I just want to prove that I have some abilities in web programming. And I like to work with professional team like you if there is any way to do that&hellip;</em></span>&quot;</p><p>The final piece of data came when attempting to get the site shut down and at the same time determine if it was an innocent party. At first, no contact information was available on the site, so as part of normal procedure we sent a message to the upstream provider.</p><p>Later, however, we found that the page had been modified and that it included contact information. A message sent to the address given on the web page was met with a reply that confirmed that the author of the worm owned the site and it even came with a full name. Interestingly, the data indicates that the author has spent time living in Canada. Of course, this could just be someone attempting to implicate someone else. We won&rsquo;t know unless the authorities actually arrest the author.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3717519"></a>Conclusion</h2></div></div></div><p><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="81cbd2afd8e0ece0efefe4f3c1ec">[email&#160;protected]</a> was not only the first webmail worm, but it demonstrated how web applications are equally susceptible to vulnerabilities. More so, <a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="014b522f58606c606f6f6473416c">[email&#160;protected]</a> demonstrates the impact of AJAX and how AJAX can be harnessed to develop more efficient web application worms. </p><p>While similar worms will also generally require a vulnerability in the web application, web application vulnerabilities are not rare. Fortunately, as soon as the vulnerability is patched, the worm stops spreading. </p></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Malicious Yahooligans&url=https://www.virusbulletin.com/virusbulletin/2006/08/malicious-yahooligans"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2006/08/malicious-yahooligans'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2006/08/malicious-yahooligans&title=Malicious Yahooligans"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2006/08/malicious-yahooligans&t=Malicious Yahooligans"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2006/08/malicious-yahooligans"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>