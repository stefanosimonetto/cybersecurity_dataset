Heaven’s gate and a chameleon code (x86/64)
October 26, 2015 in Anti-*, Hackme/crackme, Malware Analysis, Reversing

A so-called heaven’s gate is not only a built-in feature of a 64-bit Windows, but also a neat reversing trick. It can be used (and is) by malware authors to temporarily switch the code execution between 32- (WOW64) and 64-bit long mode. While operating in a 64-bit long mode it executes the 64-bit instructions and this can be used to execute some funny stuff before returning to 32-bit code (f.ex. can be used to detect a debugger).
The trick is very old, many blogs describe how to mix 32- and 64-bit using it and that’s why it is just part of the topic I am going to talk about today.
A few years back I was looking at a sample that used the heaven’s gate trick, but apart from this, it also contained another trick – a chameleon code – a stream of bytes that could be executed as both 32- and 64-bit code, depending on the context. I found it to be quite cool and took a mental note of that malware family.
I recently came across a different sample from the same family and since this reminded me about that supercool trick, I thought it would be nice to write a post about it.
The sample hash is E4AB5596CB8FBE932670A6A5420E7AB9 (note it is old, from 2013).
Note: Mind you that before it reaches the heaven’s gate/chameleon code it will try to stop you by using a couple of known and lesser-known anti-reversing tricks (there is a number of them, and they are quite creative; I won’t describe it in detail not to spoil the fun in case you want to take a stab at the sample yourself).
The 32-bit code right before jumping far to 64-bit code:
Immediately after the far jump we land in 64-bit code.
Note the offsets of instructions on both screenshots.
Btw. while I am not the biggest fan of windbg for day to day work, its ability to reverse such chameleon code comes really handy.
After some more jumps and calls the code eventually ends in these places (left 32-bit, right 64-bit – 2 different VMs):
We can compare the opcodes and their meanings side by side:
They both execute in their respective modes (32- and 64).
The inability to distinguish between code and data is a well known fact. Ability to code a program that looks identically and executes on two different architectures is a completely different animal.
For what it’s worth – it was written in fasm.

Comments Off on Heaven’s gate and a chameleon code (x86/64)

Comments are closed.
