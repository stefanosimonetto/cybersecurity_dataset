<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Sinowal banking trojan</title>
<meta name="description" content="With a modular architecture and sophisticated functionality, Sinowal is a multi-component banking trojan targeted at various web browsers which threatens users of online banking systems around the globe. Chao Chen delves into the inner workings of each of the components of this powerful malware." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1710;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201406-Sinowal"></a>Sinowal banking trojan</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2014-06-02</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Chao</span> <span class="surname">Chen</span></h3><span class="orgname">Fortinet</span>, <span class="orgdiv">China</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Martijn</span> <span class="surname">Grooten</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>With a modular architecture and sophisticated functionality, Sinowal is a multi-component banking trojan targeted at various web browsers which threatens users of online banking systems around the globe. Chao Chen delves into the inner workings of each of the components of this powerful malware.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2014 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2581" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2581" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id3198227"></a></span></dt><dt><span class="sect1"><a href="#id3885481">Installation</a></span></dt><dt><span class="sect1"><a href="#id3590599">Loader module</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id2759417">Back-up loader on disk</a></span></dt><dt><span class="sect2"><a href="#id4514470">Download manager module</a></span></dt><dt><span class="sect2"><a href="#id3106642">Start manager module</a></span></dt><dt><span class="sect2"><a href="#id4791916">Record browser information</a></span></dt><dt><span class="sect2"><a href="#id2194783">Beef file</a></span></dt><dt><span class="sect2"><a href="#id2829642">Module life cycle</a></span></dt><dt><span class="sect2"><a href="#id2312210">Anti-Trusteer Rapport</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id4627310">Manager module</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id3258521">Time-based DGA for C&amp;C server</a></span></dt><dt><span class="sect2"><a href="#id2315740">Register bot with C&amp;C server</a></span></dt><dt><span class="sect2"><a href="#id3699488">Download plug-in modules and configuration</a></span></dt><dt><span class="sect2"><a href="#id3845540">Pipe communication</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id4819452">Banking fraud for Internet Explorer</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id3726976">Preparation</a></span></dt><dt><span class="sect2"><a href="#id2252761">Hijack Internet Explorer</a></span></dt><dt><span class="sect2"><a href="#id4828291">Monitor and respond to web browser events</a></span></dt><dt><span class="sect2"><a href="#id2167952">Stealing sensitive form information</a></span></dt><dt><span class="sect2"><a href="#id3450028">Custom script engine</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id2119778">Banking fraud for Google Chrome</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id2146416">Install Chrome extension</a></span></dt><dt><span class="sect2"><a href="#id2525420">Monitoring web activities</a></span></dt><dt><span class="sect2"><a href="#id3435290">Grab form content</a></span></dt><dt><span class="sect2"><a href="#id2501552">Script command list of extensions</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3710083">Banking fraud for Mozilla Firefox</a></span></dt><dt><span class="sect1"><a href="#id3069656">Sniffer module</a></span></dt><dd><dl><dt><span class="sect2"><a href="#id4392093">Hook APIs</a></span></dt><dt><span class="sect2"><a href="#id2885292">Harvest email addresses and FTP accounts</a></span></dt></dl></dd><dt><span class="sect1"><a href="#id3980241">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3198227"></a></h2></div></div></div><p>Once considered to be one of the most malicious and advanced pieces of malware, Sinowal (a.k.a. Mebroot [<span class="citation"><a href="#citation.1">1</a></span>] or Theola [<span class="citation"><a href="#citation.2">2</a></span>]) has drawn the attention of both security researchers and members of the public alike since 2006. With a modular architecture and sophisticated functionality, Sinowal is a multi-component banking trojan targeted at various web browsers which threatens users of online banking systems around the globe. In this article, we will delve into the inner workings of each of the components of this powerful malware.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3885481"></a>Installation</h2></div></div></div><p>The Sinowal installer (MD5: 7efc5e7452d98843b9ae4a2678d057ea) may arrive on a victim&rsquo;s computer via any of a number of different means, including drive-by download, spam attachment and file-sharing networks. The infamous Blackhole [<span class="citation"><a href="#citation.3">3</a></span>] exploit kit also served as a major vector of infection until last autumn (since when Blackhole has been inactive).</p><p>The installer drops a dynamic-link library (DLL) onto the local hard disk. The DLL acts as a loader module and will load other components, if any exist, and download a manager module which plays a central role in conducting banking fraud. The manager module downloads several plug-in modules from the C&amp;C server, aimed at different target applications. These modules are used to steal sensitive information including bank account details, email addresses and FTP accounts. All plug-in modules contact the manager module through a named pipe, while the manager module communicates directly with the C&amp;C server, uploading stolen information, reporting the local status of the trojan and downloading configuration and plug-in modules, as well as script commands for the plug-in modules to run.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3590599"></a>Loader module</h2></div></div></div><p>The loader module is named &lsquo;mini&rsquo; on 32-bit systems and &lsquo;mi64&rsquo; on 64-bit systems. Each of Sinowal&rsquo;s modules has a different 32-bit and 64-bit version. In this article, we will focus on the versions for the 32-bit platform.</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2759417"></a>Back-up loader on disk</h3></div></div></div><p>After being dropped and decoded by the installer, the loader module is loaded with the fdwReason parameter of the EntryPoint function set to 0xFEFEFEEE, indicating that this is the first time it has run. The DllRegisterServer function will be called later to perform the following tasks:</p><div class="orderedlist"><ol type="1"><li><p>Write the image of the loader module to the file &lsquo;%SystemDrive%\Documents and Settings\All Users\Application Data\{Random Number}\{Filename}.dll&rsquo; on the hard disk. Here, {Random Number} is determined by calling the GetTickCount API, and {Filename} is chosen from a given group on the basis of the creation time of SystemRoot, as shown in <a href="#figure.1">Figure 1</a>.</p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Choosing a random filename." src="/uploads/images/figures/2014/06/Sinowal-fig1.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Choosing a random filename.</b></p></div></li><li><p>Keep uploading local information to the C&amp;C server. The URL of the C&amp;C server is hard-coded in the loader module&rsquo;s binary. The information uploaded is an encrypted list of numbers, each one representing a special event that has taken place on the compromised machine, as shown in <a href="#figure.2">Figure 2</a>.</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="Upload events information." src="/uploads/images/figures/2014/06/Sinowal-fig2.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;Upload events information.</b></p></div><p>The encryption routine performs a simple XOR operation on each double-word. The initial value of the crypt key is generated on the basis of the CPU time stamp counter. The size of data is extended to a multiple of four. In the encrypted data, the first double-word is the crypt key, the second is the encoded value of the original data size, and the rest is encoded data.</p><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Encryption routine with XOR." src="/uploads/images/figures/2014/06/Sinowal-fig3.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Encryption routine with XOR.</b></p></div></li><li><p>Execute the command &lsquo;regsvr32.exe /s {Path of Loader Module}&rsquo;, which will cause the loader module to run in the regsvr32.exe process.</p></li></ol></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4514470"></a>Download manager module</h3></div></div></div><p>Running in the regsvr32.exe process, the loader module will check the fdwReason parameter of the EntryPoint function. This time, the value of fdwReason is DLL_PROCESS_ATTACH. In this case, the hash of the name of the current process will be calculated and compared against a set of hashes that represent some particular processes. The result of the comparison will determine what happens in the next step.</p><p>A Python version of the hash generation algorithm is shown in <a href="#figure.4">Figure 4</a>.</p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="Hash generation algorithm." src="/uploads/images/figures/2014/06/Sinowal-fig4.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;Hash generation algorithm.</b></p></div><p>Some useful hash values and their corresponding filenames are listed below:</p><div class="informaltable"><table border="1"><colgroup><col /><col /></colgroup><tbody><tr><td>0x56C00521</td><td>&lsquo;explorer.exe&rsquo;</td></tr><tr><td>0x58AF052E</td><td>&lsquo;regsvr32.exe&rsquo;</td></tr><tr><td>0xAAFF04C6</td><td>&lsquo;sysprep.exe&rsquo;</td></tr><tr><td>0x54E50518</td><td>&lsquo;iexplore.exe&rsquo;</td></tr><tr><td>0xAC0104A3</td><td>&lsquo;firefox.exe&rsquo;</td></tr><tr><td>0xD4C0042E</td><td>&#39;chrome.exe&#39;</td></tr></tbody></table></div><p>The main work in the regsvr32.exe process can be divided into three parts:</p><div class="orderedlist"><ol type="1"><li><p>Download the manager module via the routine used for uploading the event list. The HTTP session for downloading is shown in <a href="#figure.5">Figure 5</a>.</p><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="Download the manager module." src="/uploads/images/figures/2014/06/Sinowal-fig5.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;Download the manager module.</b></p></div><p>An encrypted list of running processes and installed software is sent to the C&amp;C server, which will reply with the XTEA-encrypted manager module. The downloaded manager module will be decrypted with the key &lsquo;HONNJCUPKFVBBYCC&rsquo;. After being verified as a PE file, the manager module (which is also a DLL) will be XTEA-encrypted locally and stored in the folder that contains the loader module. This time, the crypt key (128 bits) consists of two parts: the first 32 bits are generated on the basis of the SystemRoot creation time, and the other 96 bits are hard-coded in the binary. The name of the encrypted manager module is chosen from another group of given names and uses &lsquo;.dat&rsquo; as its extended filename.</p></li><li><p>Make the registry value &lsquo;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\ShellServiceObjectDelayLoad&rsquo; point to the path of the loader module and add the path of the loader module to the registry value &lsquo;HKLM\SOFTWARE\Microsoft\Windows NT\ CurrentVersion\Windows\LoadAppInit_DLLs&rsquo;. The first registry value will enable the loader module to be loaded when <span class="emphasis"><em>Explorer</em></span> starts up, and the second will enable it to be loaded into all user-mode processes in the system.</p></li><li><p>Inject a piece of code into the explorer.exe process to load the loader module.</p></li></ol></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3106642"></a>Start manager module</h3></div></div></div><p>Once the loader module is loaded in the explorer.exe process, it will realise that <span class="emphasis"><em>Explorer</em></span> has become its host process by using the hash comparison described earlier. Then it will retrieve the encrypted manager module from the hard disk and decrypt it with a key generated on the basis of the SystemRoot creation time. Next, the EntryPoint and Initialize functions of the manager module will be invoked in sequence so that the manager module can work in the <span class="emphasis"><em>Explorer</em></span> process. We will discuss the manager module in detail later.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4791916"></a>Record browser information</h3></div></div></div><p>If the loader module is loaded in a process of iexplore.exe, firefox.exe or chrome.exe, it will record some information in the registry key &lsquo;HKCU\Software\Microsoft\Notepad&rsquo; or, if that fails, &lsquo;HKCU\Software\AppDataLow&rsquo;. The value &lsquo;LastMsg&rsquo; is set to the number of browser processes that have been injected by the loader module. The value &lsquo;msg{Number}&rsquo; records the identity of the browser program being injected. Some examples are as follows:</p><div class="itemizedlist"><ul type="disc"><li><p>ValueName = &lsquo;msg0&rsquo;, data = &lsquo;MD I&rsquo; for<span class="emphasis"><em> Internet Explorer</em></span></p></li><li><p>ValueName = &lsquo;msg1&rsquo;, data = &lsquo;MD F&rsquo; for <span class="emphasis"><em>Mozilla Firefox</em></span></p></li><li><p>ValueName = &lsquo;msg2&rsquo;, data = &lsquo;MD C&rsquo; for <span class="emphasis"><em>Google Chrome</em></span>.</p></li></ul></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2194783"></a>Beef file</h3></div></div></div><p>If the loader module is loaded in the <span class="emphasis"><em>Explorer</em></span> process or any other user-mode process, such as a web browser process, it will search for a special file from the folder containing the loader module. The file in question is XTEA-encrypted and its first double-word after decryption should be 0xBEEFBEEF. We call it the &lsquo;beef file&rsquo;. The double-word 0xBEEFBEEF is written into the beef file by the loader module. Other data in the beef file will be written by the manager module, which will be discussed later. The structure of the beef file is as follows:</p><pre class="programlisting">Beef File:
+0      0xBEEFBEEF
+4      NumOfEntries (should &lt;= 0x20)
+8      BeefEntry[NumOfEntries]

Struct BeefEntry:
+0      EntryName
+14h    SizeHashes
+18h    SizeModule
+1Ch    Hashes[SizeHashes]
+1Ch+ SizeHashes  Module[SizeModule]
</pre><p><span class="bold"><strong>EntryName</strong></span>: entry name consisting of four characters, including &lsquo;mini&rsquo;, &lsquo;mi64&rsquo;, &lsquo;gbcl&rsquo;, &lsquo;gc64&rsquo;, &lsquo;iecl&rsquo;, &lsquo;ffcl&rsquo;, &lsquo;crcl&rsquo; and &lsquo;snif&rsquo;.</p><p><span class="bold"><strong>Hashes</strong></span>: an array of hashes. The loader module will compare the hash of the name of its host process with each hash in this array. If a match is found, the corresponding module stored in this BeefEntry will be loaded into the host process. Module: a module exporting two functions &ndash; Initialize and Deinitialize.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2829642"></a>Module life cycle</h3></div></div></div><p>When the manager module or a plug-in module from the beef file is loaded into a process by a copy of the loader module injected into the same process (the manager module will only be loaded in the <span class="emphasis"><em>Explorer</em></span> process), the EntryPoint function and its initialization will be invoked by the loader module (see <a href="#figure.6">Figure 6</a>).</p><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="Invoke Initialize function." src="/uploads/images/figures/2014/06/Sinowal-fig6.jpg" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;Invoke Initialize function.</b></p></div><p>When the manager module or plug-in module finishes its work, its Deinitialize function will be invoked by the loader module. After that, the loader module will unload itself by calling the FreeLibrary API and then reload itself by calling the LoadLibraryA API with the path of the loader binary on disk as the parameter. Using this method, the loader module, manager module and plug-in modules are periodically reloaded into a host process, which ensures that any newly downloaded or updated modules will be given a chance to run.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2312210"></a>Anti-Trusteer Rapport</h3></div></div></div><p>As an advanced banking trojan, Sinowal is equipped with a weapon to defeat <span class="emphasis"><em>Trusteer Rapport</em></span> [<span class="citation"><a href="#citation.4">4</a></span>], a security tool used to prevent phishing and man-in-the-browser attacks. <span class="emphasis"><em>Trusteer Rapport</em></span> runs in all browser processes, monitoring suspicious activities by hooking <span class="emphasis"><em>Windows</em></span> APIs.</p><p>If <span class="emphasis"><em>Trusteer Rapport</em></span> is found to be installed on the compromised machine, the following actions will be taken by the loader module running in a browser process:</p><div class="orderedlist"><ol type="1"><li><p>Suspend all threads belonging to the <span class="emphasis"><em>Trusteer Rapport</em></span> module in the browser process.</p></li><li><p>Recover APIs in the following DLLs from binary files on disk:</p><p>ntdll.dll</p><p>kernel32.dll</p><p>user32.dll</p><p>gdi32.dll</p><p>wininet.dll</p><p>ws2_32.dll</p><p>ole32.dll</p><p>urlmon.dll</p><p>oleaut32.dll</p><p>comctl32.dll</p><p>comdlg32.dll</p><p>wintrust.dll</p></li><li><p>Hook the NtCreateThread and NtCreateThreadEx APIs to abort threads created by <span class="emphasis"><em>Trusteer Rapport</em></span>.</p></li><li><p>If the top-level exception filter is in the<span class="emphasis"><em> Trusteer Rapport</em></span> module, replace it with UnhandledExceptionFilter.</p></li></ol></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4627310"></a>Manager module</h2></div></div></div><p>The manager module downloaded by the loader module plays a central role in the malware&rsquo;s activity. It will download plug-in modules and configuration data from the C&amp;C server for stealing information such as bank accounts. Downloaded plug-in modules will be stored in the beef file, while the configuration data is written into a local encrypted file. The manager module communicates with the plug-in modules through a named pipe. This module is dubbed &lsquo;gbcl&rsquo; (32-bit version) or &lsquo;gc64&rsquo; (64-bit version).</p><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3258521"></a>Time-based DGA for C&amp;C server</h3></div></div></div><p>Unlike the hard-coded C&amp;C server URL used for downloading the manager module, the C&amp;C server domains for downloading configuration data and plug-in modules are obtained through a DGA (Domain Generation Algorithm) which is based on the current date and time taken from <span class="emphasis"><em>Google</em></span>. Some generated domains are shown in <a href="#figure.7">Figure 7</a>.</p><div class="figure"><a id="figure.7"></a><div class="mediaobject"><img alt="C&amp;C server domains." src="/uploads/images/figures/2014/06/Sinowal-fig7.jpg" /></div><p class="title"><b>Figure&nbsp;7.&nbsp;C&amp;C server domains.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2315740"></a>Register bot with C&amp;C server</h3></div></div></div><p>To register the compromised machine with the C&amp;C server, encrypted local information, including the IP address table, is uploaded. A custom encryption algorithm is employed in the communication between the manager module and the C&amp;C server. The first double-word of the transferred data is the crypt key, and a signature double-word ,&lsquo;BIP&rsquo; 0x02, is at offset 0x10 to the beginning of the decrypted data, as shown in <a href="#figure.8">Figure 8</a>.</p><div class="figure"><a id="figure.8"></a><div class="mediaobject"><img alt="Crypt key and signature double-word." src="/uploads/images/figures/2014/06/Sinowal-fig8.jpg" /></div><p class="title"><b>Figure&nbsp;8.&nbsp;Crypt key and signature double-word.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3699488"></a>Download plug-in modules and configuration</h3></div></div></div><p>Plug-in modules and configuration data are downloaded using the same encryption scheme as described above. The configuration contains thousands of URLs belonging to online banks and e-commerce services around the world. A small piece of decrypted configuration is shown in <a href="#figure.9">Figure 9</a>.</p><div class="figure"><a id="figure.9"></a><div class="mediaobject"><img alt="URLs in configuration." src="/uploads/images/figures/2014/06/Sinowal-fig9.jpg" /></div><p class="title"><b>Figure&nbsp;9.&nbsp;URLs in configuration.</b></p></div><p>The URLs in the configuration data reveal that the financial institutions targeted by Sinowal are distributed in the following countries:</p><div class="variablelist"><dl><dt><span class="term">Europe</span></dt><dd><p>Andorra, Austria, Belgium, Bulgaria, Switzerland, Cyprus, Czech Republic, Germany, Denmark, Spain, Finland, France, Guernsey, Greece, Hungary, Ireland, Isle of Man, Iceland, Italy, Jersey, Cayman Islands, Liechtenstein, Luxembourg, Latvia, Malta, New Caledonia, Netherlands, Norway, Poland, Portugal, Romania, Russian Federation, Sweden, Slovenia, Slovak Republic, Turkey, United Kingdom.</p></dd><dt><span class="term">Asia</span></dt><dd><p>United Arab Emirates, China, Israel, India, Japan, Nepal, Qatar, Singapore.</p></dd><dt><span class="term">Africa</span></dt><dd><p>Kenya, Uganda, South Africa.</p></dd><dt><span class="term">North America</span></dt><dd><p>Canada, United States.</p></dd><dt><span class="term">Latin America</span></dt><dd><p>Argentina, Brazil, Belize, Mexico.</p></dd><dt><span class="term">Oceania</span></dt><dd><p>Australia, New Zealand, Samoa.</p></dd></dl></div><p>The plug-in modules are downloaded and stored in the beef file.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3845540"></a>Pipe communication</h3></div></div></div><p>The manager module creates a named pipe through which it exchanges data and scripts with the plug-in modules. The pipe&rsquo;s name is generated by the routine shown in <a href="#figure.10">Figure 10</a>.</p><div class="figure"><a id="figure.10"></a><div class="mediaobject"><img alt="Generation of pipe name." src="/uploads/images/figures/2014/06/Sinowal-fig10.jpg" /></div><p class="title"><b>Figure&nbsp;10.&nbsp;Generation of pipe name.</b></p></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4819452"></a>Banking fraud for Internet Explorer</h2></div></div></div><p>A plug-in module named &lsquo;Iecl.dll&rsquo; (<a href="#figure.11">Figure 11</a>) is injected into the iexplore.exe process to perform banking fraud. The main functionality of this module is to steal sensitive information such as the login and password details of compromised users for online banks and e-commerce sites, and to run customized scripts from the C&amp;C server at specific times.</p><div class="figure"><a id="figure.11"></a><div class="mediaobject"><img alt="Iecl module information." src="/uploads/images/figures/2014/06/Sinowal-fig11.jpg" /></div><p class="title"><b>Figure&nbsp;11.&nbsp;Iecl module information.</b></p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3726976"></a>Preparation</h3></div></div></div><p>Because Sinowal targets victims who speak various different languages around the world, it is important to ensure that mlang.dll, which provides multi-language support, exists on the victim&rsquo;s computer. If mlang.dll does not exist on the machine, the Iecl module will not work.</p><p>To enable browser active scripting, which is required by the Iecl module, the registry value &lsquo;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Zones\3\1400&rsquo; is set to zero. This means that <span class="emphasis"><em>Internet Explorer</em></span> will no longer prompt the user before running dynamic scripts.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2252761"></a>Hijack Internet Explorer</h3></div></div></div><p><a href="#figure.12">Figure 12</a> shows an overview of the complete procedure of stealing bank accounts and running the malicious script. In the following sections, we will discuss how it works, step by step.</p><div class="figure"><a id="figure.12"></a><div class="mediaobject"><img alt="Procedure of hijacking IE." src="/uploads/images/figures/2014/06/Sinowal-fig12.jpg" /></div><p class="title"><b>Figure&nbsp;12.&nbsp;Procedure of hijacking IE.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4828291"></a>Monitor and respond to web browser events</h3></div></div></div><p>The Iecl module will enumerate all running instances of <span class="emphasis"><em>Internet Explorer</em></span> (<span class="emphasis"><em>IE</em></span>). For each <span class="emphasis"><em>IE</em></span> browser object, a property named &lsquo;__BRCL__&rsquo; is created and set as a string generated as a result of calling the GetTickCount API. This property is used to identify a specific <span class="emphasis"><em>IE</em></span> browser object.</p><p>For each <span class="emphasis"><em>IE</em></span> object, an IDispatch interface object is constructed and connected to the IConnectionPoint interface of a connection point for the DIID_DWebBrowserEvents2 of the browser object. In this way, the IDispatch object can respond to browser events using the Invoke method.</p><p>If the dispIdMember parameter of the Invoke method is DISPID_BEFORENAVIGATE2 or DISPID_NEWWINDOW3, the Iecl module will check the URL the browser is going to. If the URL is on a blacklist maintained by Sinowal, the visit to this URL will be cancelled by setting DISPPARAMS.Cancel to VARIANT_TRUE.</p><p>If the dispIdMember parameter is DISPID_NAVIGATECOMPLETE2, the Iecl module will check the URL the browser has arrived at. If the URL is blacklisted, navigation will be stopped by calling IWebBrowser2::Stop.</p><p>If the dispIdMember parameter is DISPID_DOWNLOADBEGIN, the host name of the current URL will be obtained and saved in the IDispatch object constructed for this browser object.</p><p>If the dispIdMember parameter is DISPID_BEFORENAVIGATE2, DISPID_DOWNLOADBEGIN, DISPID_NAVIGATECOMPLETE2 or DISPID_DOWNLOADCOMPLETE, the IHTMLDocument2 interfaces of all the frames opened in the browser will be obtained. An IDispatch interface object will be created for each frame. This IDispatch object will be connected to the IConnectionPoint interface for the DIID_HTMLDocumentEvents2 of the frame. If the value of the &lsquo;tagName&rsquo; property of this frame is &lsquo;BODY&rsquo;, the IDispatch object will also be connected to the IConnectionPoint interface for the DIID_HTMLTextContainerEvents2 of the frame. The job of this IDispatch object is to monitor forms on web pages and to execute a given script at specific points in time, which will be discussed later.</p><p>If the dispIdMember parameter is DISPID_ONQUIT, the IDispatch object for DIID_DWebBrowserEvents2 will be disconnected from the connection point. If no other IE browser instance is running in the system, a WM_QUIT message will be sent to the Iecl module, which will then cease to work.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2167952"></a>Stealing sensitive form information</h3></div></div></div><p>The Invoke method of the IDispatch object for DIID_HTMLDocumentEvents2 and DIID_HTMLTextContainerEvents2 will find all form elements on a web page and monitor the content and submission of each form.</p><p>If the dispIdMember parameter of the Invoke method refers to keyboard and mouse events, such as DISPID_HTMLDOCUMENTEVENTS2_ONCLICK or DISPID_HTMLDOCUMENTEVENTS2_ONKEYPRESS, the Invoke method will do nothing.</p><p>If the dispIdMember parameter is DISPID_HTMLDOCUMENTEVENTS2_ONREADYSTATECHANGE or DISPID_HTMLDOCUMENTEVENTS2_ONPROPERTYCHANGE, and the readyState of the HTML document is &lsquo;complete&rsquo;, the following actions will be taken on each form in the HTML document:</p><p>First, an attribute named &lsquo;cnct&rsquo; will be created for the form. This attribute is used as a flag telling the Iecl module that the form is already under control.</p><p>Secondly, a newly created IDispatch object will be connected to the connection point for the DIID_HTMLInputTextElementEvents of each input text element of the form if the type of the element is &lsquo;password&rsquo; and the method of the form is &lsquo;post&rsquo;. In the Invoke method of the IDispatch object, an attribute named &lsquo;pwd&rsquo; is created for the password input text element, and the value of this attribute is set to the content of the element &ndash; which is very likely the password entered by the compromised user. The &lsquo;pwd&rsquo; attribute is used to highlight the password when the form content is grabbed and sent to the C&amp;C server.</p><p>Next, two IDispatch objects are created. One is attached to the onsubmit event of the form by calling IHTMLElement2::attachEvent; the other is assigned to the member &lsquo;submit&rsquo; by calling IDispatchEx::InvokeEx with the parameter wFlags set to DISPATCH_PROPERTYPUT. These two IDispatch objects are used to collect the following sensitive information:</p><div class="itemizedlist"><ul type="disc"><li><p>The current URL representing the web page containing the form</p></li><li><p>The value of the property &lsquo;action&rsquo; of the form, which is the destination URL to which the form content should be sent by an HTTP post command</p></li><li><p>The name, type and value of each item in the form.</p></li></ul></div><p>Finally, the grabbed form data will be sent through a pipe to the manager module, which in turn will send the information to the C&amp;C server.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3450028"></a>Custom script engine</h3></div></div></div><p>When the state of an HTML document changes to &lsquo;rendering&rsquo;, &lsquo;download_complete&rsquo; or &lsquo;submit&rsquo;, the Iecl module reports the current URL and HTML document state to the C&amp;C server and receives a custom script to execute. The manager module acts as a middle-man in this procedure.</p><p>In order to run the custom script provided by the C&amp;C server, the Iecl module creates a member of IHTMLDocument::Script and names the member with a randomly generated string. Then an IDispatch interface object is created and wrapped in a VARIANTARG with type VT_DISPATCH. This VARIANTARG will be assigned to the randomly named member of IHTMLDocument::Script so that this member will act as a script interpreter, recognizing and executing the custom script provided by the C&amp;C server.</p><p>The IDispatch object for the randomly named member contains names of a set of commands used in the custom script, each command having a number as its ID, which will be retrieved by the GetIDsOfNames and GetDispID methods.</p><p>In the Invoke method of this IDispatch object, commands of the custom script will be parsed and executed. The commands and their descriptions are as follows:</p><p><span class="bold"><strong>jsre (dispId 0x01):</strong></span> JavaScript regular expression parser.</p><p><span class="bold"><strong>open (dispId 0x02):</strong></span> open given URL with given referrer. The parameter is in the format {Host}/{Path}?rhcpre={Base64 Encoded Referrer}&amp;{Parameter List}. The URL to be opened is {Host}/{Path}?{Parameter List}, and the referrer set in the HTTP header is {Base64 Decoded Refererr}. This command gives the Iecl module the ability to pop up a phishing page at the appropriate time without raising suspicion.</p><p><span class="bold"><strong>close (dispId 0x03):</strong></span> close a specific Internet Explorer browser object.</p><p><span class="bold"><strong>eval (dispId 0x04): </strong></span>run the custom script given as the first parameter. The second parameter is the value of the &lsquo;__BRCL__&rsquo; property identifying the browser object.</p><p><span class="bold"><strong>screen (dispId 0x05):</strong></span> take a screenshot in JPEG format and send it to the C&amp;C server.</p><p><span class="bold"><strong>encrypt (dispId 0x06): </strong></span>custom encryption routine using XOR.</p><p><span class="bold"><strong>image (dispId 0x07): </strong></span>get and base64-encode the stored data of a given URL in the cache entry file.</p><p><span class="bold"><strong>request (dispId 0x08):</strong></span> download a string from the C&amp;C server using the IStream interface.</p><p><span class="bold"><strong>video (dispId 0x09):</strong></span> record an MPEG video of the user screen by using an open-source x264 library embedded in the Iecl module, and send the video to the C&amp;C server.</p><p><span class="bold"><strong>update (dispId 0x0A):</strong></span> update the time property of the current host.</p><p><span class="bold"><strong>freeze (dispId 0x0B): </strong></span>lock the in-place activation window in the browser.</p><p><span class="bold"><strong>unfreeze (dispId 0x0C):</strong></span> unlock the in-place activation window in the browser.</p><p><span class="bold"><strong>cookie (dispID 0x0D):</strong></span> search cookies for the current URL.</p><p><span class="bold"><strong>report (dispId 0x0E):</strong></span> report local information to the C&amp;C server.</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2119778"></a>Banking fraud for Google Chrome</h2></div></div></div><p>For the <span class="emphasis"><em>Google Chrome</em></span> browser, a plug-in module named &lsquo;CrclReg.dll&rsquo; is downloaded and injected into all running chrome.exe processes (see <a href="#figure.13">Figure 13</a>).</p><div class="figure"><a id="figure.13"></a><div class="mediaobject"><img alt="CrclReg module information." src="/uploads/images/figures/2014/06/Sinowal-fig13.jpg" /></div><p class="title"><b>Figure&nbsp;13.&nbsp;CrclReg module information.</b></p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2146416"></a>Install Chrome extension</h3></div></div></div><p>The main job of the CrclReg module is to install a <span class="emphasis"><em>Chrome</em></span> extension which will conduct banking fraud. The files for the <span class="emphasis"><em>Chrome</em></span> extension, including a DLL, are embedded in the binary of the CrclReg module, as shown in <a href="#figure.14">Figure 14</a>.</p><div class="figure"><a id="figure.14"></a><div class="mediaobject"><img alt="Files for Chrome extension." src="/uploads/images/figures/2014/06/Sinowal-fig14.jpg" /></div><p class="title"><b>Figure&nbsp;14.&nbsp;Files for Chrome extension.</b></p></div><p>In fact, the original name of the DLL for the extension is &lsquo;Crcl.dll&rsquo;, as shown in <a href="#figure.15">Figure 15</a>.</p><div class="figure"><a id="figure.15"></a><div class="mediaobject"><img alt="Crcl.dll for Chrome extension." src="/uploads/images/figures/2014/06/Sinowal-fig15.jpg" /></div><p class="title"><b>Figure&nbsp;15.&nbsp;Crcl.dll for Chrome extension.</b></p></div><p>These files are dropped into a randomly named folder in the C:\WINDOWS\TEMP directory.</p><p>To install the extension, the following shell command is executed by calling the ShellExecuteA API with the parameter operation set to &lsquo;open&rsquo;:</p><pre class="programlisting">{Path of chrome.exe} --pack-extension=&rsquo;{Path of Randomly named Folder}&rsquo; --no-message-box</pre><p>A .crx file is generated as a result of the command.</p><p>The ScriptItemize, ShowWindow and DrawTextW APIs are hooked to make the installation process silent and invisible. In addition, the extension is enabled in incognito mode. We can see the installed extension named &lsquo;Default Plug-in&rsquo; in <span class="emphasis"><em>Chrome</em></span>&rsquo;s extension panel, as shown in <a href="#figure.16">Figure 16</a>.</p><div class="figure"><a id="figure.16"></a><div class="mediaobject"><img alt="Malicious Chrome extension." src="/uploads/images/figures/2014/06/Sinowal-fig16.jpg" /></div><p class="title"><b>Figure&nbsp;16.&nbsp;Malicious Chrome extension.</b></p></div></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2525420"></a>Monitoring web activities</h3></div></div></div><p>In the exported NP_GetEntryPoints function of Crcl.dll, a set of NPAPI functions are provided for the browser to invoke at the appropriate time. The most important NPAPI functions are NPP_New and NPP_GetValue. NPP_New is called by the browser to create a new instance of the extension. In this function, several listeners are set up to monitor web activities. The script setting the listeners is hard-coded in Crcl.dll, as shown in <a href="#figure.17">Figure 17</a>.</p><div class="figure"><a id="figure.17"></a><div class="mediaobject"><img alt="Script for monitoring web activities." src="/uploads/images/figures/2014/06/Sinowal-fig17.jpg" /></div><p class="title"><b>Figure&nbsp;17.&nbsp;Script for monitoring web activities.</b></p></div><p>The script equips the extension with the capacity to redirect network traffic, forge the HTTP referrer, intercept session cookies, and monitor browser navigation.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3435290"></a>Grab form content</h3></div></div></div><p>The NPP_GetValue function creates a ScriptableNPObject to receive and execute the script from the browser. The content.js file packed in the .crx file of the extension contains a script for stealing form content. The de-obfuscated version of content.js is shown in <a href="#figure.18">Figure 18</a>.</p><div class="figure"><a id="figure.18"></a><div class="mediaobject"><img alt="De-obfuscated content.js." src="/uploads/images/figures/2014/06/Sinowal-fig18.jpg" /></div><p class="title"><b>Figure&nbsp;18.&nbsp;De-obfuscated content.js.</b></p></div><p>The submitEvent function defined in the script will grab the form content when a form is submitted. The collected information will be given as a parameter to a method also named &lsquo;submitEvent&rsquo; of the ScriptableNPObject representing the extension. This submitEvent method implemented in Crcl.dll will transfer stolen form data through a pipe to the manager module, which then communicates directly with the C&amp;C server.</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2501552"></a>Script command list of extensions</h3></div></div></div><p>From inside the Invoke method of ScriptableNPObject for the extension, we can see a list of script commands and the routines for executing them.</p><div class="figure"><a id="figure.19"></a><div class="mediaobject"><img alt="The Invoke method of ScriptableNPObject." src="/uploads/images/figures/2014/06/Sinowal-fig19.jpg" /></div><p class="title"><b>Figure&nbsp;19.&nbsp;The Invoke method of ScriptableNPObject.</b></p></div><p>The commands are as follows:</p><p><span class="bold"><strong>beforeNavigate: </strong></span>monitor the URL the browser is going to</p><p><span class="bold"><strong>executeScript: </strong></span>get script from the C&amp;C server to run when the state of the HTML document changes to &lsquo;rendering&rsquo;, &lsquo;download_complete&rsquo; or &lsquo;submit&rsquo;</p><p><span class="bold"><strong>beforeRequest: </strong></span>redirect traffic for certain URLs</p><p><span class="bold"><strong>beforeSendHeaders: </strong></span>forge referrer in the HTTP request header</p><p><span class="bold"><strong>sendHeaders: </strong></span>intercept information in the HTTP request header, including request method, destination URL, referrer URL and HTTP session cookie</p><p><span class="bold"><strong>submitEvent: </strong></span>send stolen form data to the manager module through a pipe</p><p><span class="bold"><strong>jsre, screen, video, encrypt, request, open, close, eval, image, update, cookie, report:</strong></span> implement the same functionalities as discussed in the section on<span class="emphasis"><em> Internet Explorer</em></span> banking fraud.</p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3710083"></a>Banking fraud for Mozilla Firefox</h2></div></div></div><p>The module for conducting banking fraud in <span class="emphasis"><em>Firefox</em></span>, named &lsquo;Ffcl.dll&rsquo;, is similar to Iecl.dll in its code architecture.</p><div class="figure"><a id="figure.20"></a><div class="mediaobject"><img alt="Ffcl module information." src="/uploads/images/figures/2014/06/Sinowal-fig20.jpg" /></div><p class="title"><b>Figure&nbsp;20.&nbsp;Ffcl module information.</b></p></div><p>The script embedded in the binary file for stealing form data is shown in <a href="#figure.21">Figure 21</a>.</p><div class="figure"><a id="figure.21"></a><div class="mediaobject"><img alt="Script in Ffcl.dll." src="/uploads/images/figures/2014/06/Sinowal-fig21.jpg" /></div><p class="title"><b>Figure&nbsp;21.&nbsp;Script in Ffcl.dll.</b></p></div><p>Ffcl.dll also has the same script command list as Iecl.dll.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3069656"></a>Sniffer module</h2></div></div></div><p>A module named &lsquo;gbsniffer.dll&rsquo; is employed to sniff network data and to harvest email addresses from POP3/SMTP traffic and the usernames/passwords of FTP client applications installed on the compromised machine (see <a href="#figure.22">Figure 22</a>).</p><div class="figure"><a id="figure.22"></a><div class="mediaobject"><img alt="Sniffer module information." src="/uploads/images/figures/2014/06/Sinowal-fig22.jpg" /></div><p class="title"><b>Figure&nbsp;22.&nbsp;Sniffer module information.</b></p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4392093"></a>Hook APIs</h3></div></div></div><p>To monitor data transferred on the network and intercept the original data of hash operations, the sniffer module hooks a number of APIs, listed as follows:</p><p><span class="bold"><strong>Ws2_32.dll:</strong></span> closesocket, WSASend, WSARecv, send, recv</p><p><span class="bold"><strong>Wininet.dll:</strong></span> InternetConnectA, HttpOpenRequestA, HttpSendRequestA HttpSendRequestW, InternetReadFile, InternetCloseHandle</p><p><span class="bold"><strong>Advapi32.dll: </strong></span>CryptHashData</p><p><span class="bold"><strong>Bcrypt.dll: </strong></span>BCryptHashData</p><p><span class="bold"><strong>nspr4.dll: </strong></span>PR_Read, PR_Write, PR_Close</p><p><span class="bold"><strong>Ole32.dll:</strong></span> CoGetClassObject</p></div><div class="sect2" lang="en"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id2885292"></a>Harvest email addresses and FTP accounts</h3></div></div></div><p>The sniffer module will collect sensitive information from POP3, SMTP and FTP sessions. The following information extracted from a monitored session will be sent through a pipe to the manager module:</p><div class="itemizedlist"><ul type="disc"><li><p>Name of client application for POP3, SMTP or FTP</p></li><li><p>URL and port of POP3, SMTP or FTP server</p></li><li><p>Email addresses from POP3/SMTP or user account of FTP.</p></li></ul></div><p>The code for harvesting email addresses is shown in <a href="#figure.23">Figure 23</a>.</p><div class="figure"><a id="figure.23"></a><div class="mediaobject"><img alt="Harvesting email addresses." src="/uploads/images/figures/2014/06/Sinowal-fig23.jpg" /></div><p class="title"><b>Figure&nbsp;23.&nbsp;Harvesting email addresses.</b></p></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3980241"></a>Conclusion</h2></div></div></div><p>Sinowal has become a persistent trojan by continuously upgrading its weapons, including use of multi-stage injection, time-based DGA, a complex encryption scheme and plug-in modules aimed at different kinds of browsers. Enormous economic losses affecting both individuals and institutions have been seen during the long evolution of this malware family. It is now time for the security community to launch a campaign which will put an end to the Sinowal story.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id4330062"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] Bell, H. Trojan.Mebroot Technical Details. <span class="bibliosource"><a href="https://www.symantec.com/security_response/writeup.jsp?docid=2008-010718-3448-99&amp;tabid=2" target="_blank">http://www.symantec.com/security_response/writeup.jsp?docid=2008-010718-3448-99&amp;tabid=2</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] Matrosov, A. How Theola malware uses a Chrome plugin for banking fraud. <span class="bibliosource"><a href="http://www.welivesecurity.com/2013/03/13/how-theola-malware-uses-a-chrome-plugin-for-banking-fraud/" target="_blank">http://www.welivesecurity.com/2013/03/13/how-theola-malware-uses-a-chrome-plugin-for-banking-fraud/</a></span>.</p></div><div class="bibliomixed"><a id="citation.3"></a><p class="bibliomixed">[3] Howard, F. Exploring the Blackhole exploit kit. <span class="bibliosource"><a href="https://nakedsecurity.sophos.com/exploring-the-blackhole-exploit-kit/" target="_blank">http://nakedsecurity.sophos.com/exploring-the-blackhole-exploit-kit/</a></span>.</p></div><div class="bibliomixed"><a id="citation.4"></a><p class="bibliomixed">[4] <span class="bibliosource"><a href="https://www.trusteer.com/products/trusteer-rapport" target="_blank">https://www.trusteer.com/products/trusteer-rapport</a></span>.</p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Sinowal banking trojan&url=https://www.virusbulletin.com/virusbulletin/2014/06/sinowal-banking-trojan"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2014/06/sinowal-banking-trojan'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2014/06/sinowal-banking-trojan&title=Sinowal banking trojan"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2014/06/sinowal-banking-trojan&t=Sinowal banking trojan"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2014/06/sinowal-banking-trojan"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table> 
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>