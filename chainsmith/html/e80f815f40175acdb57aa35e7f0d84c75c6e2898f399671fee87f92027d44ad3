<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Invading the core: iWorm's infection vector and persistence mechanism</title>
<meta name="description" content="iWorm is a recently discovered OS X backdoor that affords an attacker complete control of an infected host. In this paper, Patrick Wardle builds upon the latest analyses, and provides a comprehensive technical analysis of iWorm's infection vector and persistence mechanism." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 1738;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/remo_expand/blocks/remo_expand/templates/vbexpand/view.css" />
<script type="text/javascript" src="/packages/remo_expand/js/jquery.color.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/packages/remo_expand/js/remo.expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<div class="titlepage" xmlns=""><div><div><h1 class="title" xmlns="http://www.w3.org/1999/xhtml"><a id="vb201410-iWorm"></a>Invading the core: iWorm&#39;s infection vector and persistence mechanism</h1></div><div><p class="pubdate" xmlns="http://www.w3.org/1999/xhtml">2014-10-31</p></div><div><div class="authorgroup" xmlns="http://www.w3.org/1999/xhtml"><div class="author titlepage"><h3 class="author"><span class="firstname">Patrick</span> <span class="surname">Wardle</span></h3><span class="orgname">Synack</span>, <span class="orgdiv">USA</span></div><b class="editedby">Editor: </b><span class="editor"><span class="firstname">Martijn</span> <span class="surname">Grooten</span></span></div></div><div><div class="abstract" xmlns="http://www.w3.org/1999/xhtml"><p class="title"><b>Abstract</b></p><p>iWorm is a recently discovered OS X backdoor that affords an attacker complete control of an infected host. In this paper, Patrick Wardle builds upon the latest analyses, and provides a comprehensive technical analysis of iWorm&#39;s infection vector and persistence mechanism.</p></div></div><div><p class="copyright" xmlns="http://www.w3.org/1999/xhtml"><i>Copyright &copy; 2014 Virus Bulletin</i></p></div></div><hr /></div>
<div class="ccm-remo-expand">
<div id="ccm-remo-expand-title-2685" class="ccm-remo-expand-title ccm-remo-expand-closed" data-expander-speed="200">Table of contents</div><div id="ccm-remo-expand-content-2685" class="ccm-remo-expand-content"><div class="toc"><dl><dt><span class="sect1"><a href="#id3978457"></a></span></dt><dt><span class="sect1"><a href="#id3428943">iWorm appears as a riddle</a></span></dt><dt><span class="sect1"><a href="#id3751862">Initial infection vector</a></span></dt><dt><span class="sect1"><a href="#id4810610">Installation: part 1</a></span></dt><dt><span class="sect1"><a href="#id2365254">Installation: part 2</a></span></dt><dt><span class="sect1"><a href="#id3700705">iWorm proper</a></span></dt><dt><span class="sect1"><a href="#id2354082">goodbyeWorm</a></span></dt><dt><span class="sect1"><a href="#id2767973">Conclusion</a></span></dt></dl></div></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3978457"></a></h2></div></div></div><p>iWorm is a recently discovered <span class="emphasis"><em>OS X </em></span>backdoor that affords an attacker complete control of an infected host. Initial reports provided a fairly thorough overview of the malware&rsquo;s functionality, however iWorm&rsquo;s infection vector was not identified, and its persistence mechanism was not discussed sufficiently. These reporting shortcomings were (at least partially) remedied by subsequent reports that revealed how the malware both gained and retained access on a host.</p><p>This paper builds upon the latest analyses, and provides a more comprehensive technical analysis of iWorm&rsquo;s infection vector and persistence mechanism. Armed with this information, users will be able to detect existing iWorm infections and prevent future infections. This is essential, as users may not be able to count on <span class="emphasis"><em>Apple</em></span>&rsquo;s anti-malware mitigations (<span class="emphasis"><em>XProtect</em></span>, <span class="emphasis"><em>Gatekeeper</em></span>, etc.) to protect them from this threat. More importantly, this analysis reiterates several well established security mantras and provides information that will both educate and safeguard users, even against future threats.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3428943"></a>iWorm appears as a riddle</h2></div></div></div><p>iWorm was first reported on 29 September 2014 by the Russian anti-virus company<span class="emphasis"><em> Doctor Web</em></span> [<span class="citation"><a href="#citation.1">1</a></span>]. The researchers&rsquo; initial analyses provided a decent overview of this &lsquo;multi-purpose backdoor&rsquo; [<span class="citation"><a href="#citation.1">1</a></span>], briefly describing its capabilities and its unique <span class="emphasis"><em>Reddit</em></span>-based C&amp;C server location mechanism. Unfortunately, the report left out several pertinent facts, such as the malware&rsquo;s infection vector, and did not provide specifics as to its persistence mechanisms. Therefore, the remainder of this paper will provide a comprehensive analysis of both iWorm&rsquo;s initial infection vector and its persistence mechanism. Moreover, suggestions for both the detection and prevention of iWorm infection will be discussed and an open-source tool will be detailed that can enumerate and display persistent <span class="emphasis"><em>OS X</em></span> binaries generically, including iWorm. This short paper should give readers a comprehensive understanding of iWorm&rsquo;s infection and persistence mechanisms, and of how to both detect and prevent the malware. Moreover, by covering various best practices, analytic techniques, and a generic detection tool, it is hoped that users will remain secure against other <span class="emphasis"><em>OS X</em></span> malware as well.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3751862"></a>Initial infection vector</h2></div></div></div><p>A few days after <span class="emphasis"><em>Doctor Web</em></span>&rsquo;s initial reports on iWorm, the owner of Mac security website <span class="emphasis"><em>Th</em></span><span class="emphasis"><em>e Safe Mac </em></span>reported that he had received an email tipping him off as to the malware&rsquo;s infection vector [<span class="citation"><a href="#citation.2">2</a></span>]. The email described how pirated versions of desirable <span class="emphasis"><em>OS X</em></span> applications (such as <span class="emphasis"><em>Adobe Photoshop</em></span> and <span class="emphasis"><em>Microsoft Office</em></span>) were infected with the malware. In other words, iWorm is &lsquo;a classic trojan &ndash; a program which tricks you into installing malware, usually bundled with legitimate software&rsquo; [<span class="citation"><a href="#citation.3">3</a></span>]. Magnet links to these infected applications were uploaded to <span class="emphasis"><em>Pirate Bay</em></span> by the user &lsquo;acerprog&rsquo; in order to reach a global audience. Although the links have since been removed, the applications were downloaded prior to their removal.</p><div class="figure"><a id="figure.1"></a><div class="mediaobject"><img alt="Links to iWorm-&not;infected torrents on Pirate Bay." src="/uploads/images/figures/2014/10/iWorm-1.jpg" /></div><p class="title"><b>Figure&nbsp;1.&nbsp;Links to iWorm-&not;infected torrents on Pirate Bay.</b></p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id4810610"></a>Installation: part 1</h2></div></div></div><p>As described in the anonymous write-up [<span class="citation"><a href="#citation.3">3</a></span>], the installers for the pirated applications contained malicious code that installed the iWorm malware persistently. The write up continued by analysing these applications in order to provide an illustrative overview of the actual infection technique. Here, a few extra (technical) details will be added to paint a comprehensive picture of how iWorm infects a target computer. Specifically, the infected &lsquo;<span class="emphasis"><em>Adobe Photoshop CC 2014 Mac OS X</em></span>&rsquo; torrent will be dissected to reveal iWorm&rsquo;s installation (infection) and persistence mechanisms.</p><p>Whenever a user launches an application, <span class="emphasis"><em>OS X</em></span> consults the application&rsquo;s Info.plist file for the app&rsquo;s binary. As shown in <a href="#figure.2">Figure 2</a>, the Info.plist file for the infected <span class="emphasis"><em>Adobe Photoshop</em></span> application specified that the &lsquo;Install&rsquo; binary should be executed whenever the application was launched.</p><div class="figure"><a id="figure.2"></a><div class="mediaobject"><img alt="Infected application&rsquo;s Info.plist file." src="/uploads/images/figures/2014/10/iWorm-2.jpg" /></div><p class="title"><b>Figure&nbsp;2.&nbsp;Infected application&rsquo;s Info.plist file.</b></p></div><div class="figure"><a id="figure.3"></a><div class="mediaobject"><img alt="Infected installer application." src="/uploads/images/figures/2014/10/iWorm-3.jpg" /></div><p class="title"><b>Figure&nbsp;3.&nbsp;Infected installer application.</b></p></div><p>The &lsquo;Install&rsquo; binary existed in the usual Contents/MacOS folder within the infected application. Oddly, two other binaries (named &lsquo;0&rsquo; and &lsquo;1&rsquo;) were also present within this directory. Their purpose will be described shortly.</p><p>Whenever a user launches the Install.app file (within the &lsquo;Adobe Photoshop CC 2014&rsquo; folder), the &lsquo;Install&rsquo; binary will be executed. Disassembling this 32-bit Mach-O executable provided an insight into its actions. In short, the &lsquo;Install&rsquo; binary simply launched the &lsquo;0&rsquo; binary with elevated privileges, then executed the &lsquo;1&rsquo; binary before exiting. The former action is illustrated in the disassembly and pseudo-code shown in <a href="#figure.4">Figure 4</a> and <a href="#figure.5">Figure 5</a>.</p><div class="figure"><a id="figure.4"></a><div class="mediaobject"><img alt="iWorm installer&rsquo;s disassembly (IDA)." src="/uploads/images/figures/2014/10/iWorm-4.jpg" /></div><p class="title"><b>Figure&nbsp;4.&nbsp;iWorm installer&rsquo;s disassembly (IDA).</b></p></div><div class="figure"><a id="figure.5"></a><div class="mediaobject"><img alt="iWorm installer&rsquo;s pseudo-code." src="/uploads/images/figures/2014/10/iWorm-5.jpg" /></div><p class="title"><b>Figure&nbsp;5.&nbsp;iWorm installer&rsquo;s pseudo-code.</b></p></div><p>The use of the AuthorizationCreate() and AuthorizationExecuteWithPrivileges() API functions generated an authorization dialog that would be presented to the user, as shown in <a href="#figure.6">Figure 6</a>.</p><div class="figure"><a id="figure.6"></a><div class="mediaobject"><img alt="iWorm installer&rsquo;s authorization prompt." src="/uploads/images/figures/2014/10/iWorm-6.jpg" /></div><p class="title"><b>Figure&nbsp;6.&nbsp;iWorm installer&rsquo;s authorization prompt.</b></p></div><p>If the user entered their password and clicked &lsquo;OK&rsquo;, the &lsquo;0&rsquo; binary would be executed with elevated privileges. Interestingly, if the user clicked &lsquo;Cancel&rsquo;, the binary would not be executed, as there is no code within the &lsquo;Install&rsquo; binary to handle this scenario. As the &lsquo;0&rsquo; binary is malicious, clicking &lsquo;Cancel&rsquo; would actually prevent infection.</p><p>Analysis of the two binaries revealed that the &lsquo;0&rsquo; binary was a second-stage installer (dropper) for the persistent malware component, while &lsquo;1&rsquo; was the legitimate installer for the pirated application (<span class="emphasis"><em>Adobe Photoshop</em></span>). Spawning the malware dropper with elevated permissions makes sense, as in <span class="emphasis"><em>OS X</em></span>, unprivileged binaries are fairly constrained and limited in what actions they can perform. Obviously, malware authors prefer for their creations to have free reign over an infected host. If a privilege escalation vulnerability is not used, simply asking the user for their password via an authorization prompt may achieve this privileged state. While the malware dropper is executing, it makes sense to execute the legitimate installer application in parallel. This ensures that the user will not notice that anything is amiss.</p><p><a href="#figure.7">Figure 7</a> summarizes iWorm&rsquo;s initial installation phase, showing how the malware can find its way onto a user&rsquo;s system and gain privileged execution.</p><div class="figure"><a id="figure.7"></a><div class="mediaobject"><img alt="Overview of iWorm infection." src="/uploads/images/figures/2014/10/iWorm-7.jpg" /></div><p class="title"><b>Figure&nbsp;7.&nbsp;Overview of iWorm infection.</b></p></div><p>First, the malware author uploads an infected application to the popular torrent site <span class="emphasis"><em>Pirate Bay</em></span>. Any user who downloads and runs the infected application will become infected. Of course, the (fully functional) pirated application will also be installed &ndash; although that is quite a small consolation for turning over complete control to an unknown adversary!</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2365254"></a>Installation: part 2</h2></div></div></div><p>The last section described how the pirated <span class="emphasis"><em>Adobe Photoshop</em></span> installer application invoked the &lsquo;Install&rsquo; binary, which in turn would execute the &lsquo;0&rsquo; binary with elevated privileges. The &lsquo;0&rsquo; binary turned out to be a basic malware dropper. First, this dropper created the /Library/Application Support/JavaW/ directory, then it saved 0x29000 bytes from offset 0x00002050 (the start of its _data segment) to a file named JavaW, as shown in <a href="#figure.8">Figure 8</a>.</p><div class="figure"><a id="figure.8"></a><div class="mediaobject"><img alt="iWorm dropper writing to JavaW." src="/uploads/images/figures/2014/10/iWorm-8.jpg" /></div><p class="title"><b>Figure&nbsp;8.&nbsp;iWorm dropper writing to JavaW.</b></p></div><p>Single-stepping the malware through a debugger provided an easy way to examine the bytes as the dropper was writing them to disk, as shown in <a href="#figure.9">Figure 9</a>.</p><div class="figure"><a id="figure.9"></a><div class="mediaobject"><img alt="iWorm dropper (within a debugger), writing bytes to JavaW." src="/uploads/images/figures/2014/10/iWorm-9.jpg" /></div><p class="title"><b>Figure&nbsp;9.&nbsp;iWorm dropper (within a debugger), writing bytes to JavaW.</b></p></div><p>Ah, good old 0xfeedface, the &lsquo;magic&rsquo; number indicating an <span class="emphasis"><em>Intel</em></span> Mach-O binary &ndash; the dropper was saving an embedded binary to disk. Once the embedded binary (&lsquo;JavaW&rsquo;) had been saved, the dropper created a property list within the /Library/LaunchDaemons directory.</p><div class="figure"><a id="figure.10"></a><div class="mediaobject"><img alt="iWorm dropper writing out a launch daemon plist." src="/uploads/images/figures/2014/10/iWorm-10.jpg" /></div><p class="title"><b>Figure&nbsp;10.&nbsp;iWorm dropper writing out a launch daemon plist.</b></p></div><p>The contents of this plist file are shown in <a href="#figure.11">Figure 11</a>.</p><div class="figure"><a id="figure.11"></a><div class="mediaobject"><img alt="iWorm&rsquo;s launch daemon plist." src="/uploads/images/figures/2014/10/iWorm-11.jpg" /></div><p class="title"><b>Figure&nbsp;11.&nbsp;iWorm&rsquo;s launch daemon plist.</b></p></div><p>On <span class="emphasis"><em>OS X</em></span>, there are many ways to ensure that a binary is executed automatically by the OS every time the computer is restarted [<span class="citation"><a href="#citation.4">4</a></span>]. For &lsquo;n00bie&rsquo; <span class="emphasis"><em>OS X </em></span>malware writers, launch items (daemons and agents) are the preferred method of persistence. To persist a binary as a launch daemon, one simply has to create a property list (&lsquo;plist) within one of the launch daemon directories (e.g. /Library/LaunchDaemons). This plist should contain a dictionary of various key value pairs including the path to the persistent binary and flag (such as RunAtLoad), indicating how and when the binary should be started by the OS. Since the dropper created a launch daemon plist with the RunAtLoad key set to true, the persistent component of the malware (/Library/Application Support/JavaW/JavaW) would automatically be started by the OS on each reboot &ndash; persistence achieved!</p><p>Once the dropper had installed the malware persistently as a launch daemon, it executed the malware directly via two calls to the launchctl utility (<a href="#figure.12">Figure 12</a>). This native OS utility interfaces with launchd, the &lsquo;system wide and per-user daemon/agent manager&rsquo; [<span class="citation"><a href="#citation.5">5</a></span>]. The calls to launchctl and arguments passed were observed passively via a simple dtrace script [<span class="citation"><a href="#citation.6">6</a></span>].</p><div class="figure"><a id="figure.12"></a><div class="mediaobject"><img alt="iWorm dropper launching iWorm via launchctl." src="/uploads/images/figures/2014/10/iWorm-12.jpg" /></div><p class="title"><b>Figure&nbsp;12.&nbsp;iWorm dropper launching iWorm via launchctl.</b></p></div><p>The output of the dtrace script showed the dropper first loading, then starting the malicious launch daemon. It should be noted that, because the RunAtLoad key was set to true, the start command was surplus to requirements; the malware was both loaded and started via the first load command [<span class="citation"><a href="#citation.7">7</a></span>] (see <a href="#figure.13">Figure 13</a>).</p><div class="figure"><a id="figure.13"></a><div class="mediaobject"><img alt="Simplifying the launch of iWorm." src="/uploads/images/figures/2014/10/iWorm-13.jpg" /></div><p class="title"><b>Figure&nbsp;13.&nbsp;Simplifying the launch of iWorm.</b></p></div><p>With iWorm installed persistently (as a launch daemon) and started manually for the first time, the dropper exited.</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id3700705"></a>iWorm proper</h2></div></div></div><p>Various online analyses of iWorm, such as [<span class="citation"><a href="#citation.1">1</a></span>] and [<span class="citation"><a href="#citation.8">8</a></span>], provide a fairly thorough overview of the malware&rsquo;s capabilities and features. While the goal of this paper is to focus on the infection and persistence of iWorm, several of the more interesting components of the malware will briefly be discussed as well.</p><p>The iWorm binary (&lsquo;JavaW&rsquo;) was packed with UPX. While packers are commonly used by <span class="emphasis"><em>Windows</em></span>-based malware, amongst OS X malware specimens, this is a somewhat uncommon feature. Unpacking the binary (upx -d JavaW) decompressed it and allowed for analysis to commence.</p><p>As mentioned in the initial report from <span class="emphasis"><em>Doctor Web </em></span>[<span class="citation"><a href="#citation.1">1</a></span>], the malware appeared to have been written in C++. While binaries on <span class="emphasis"><em>OS X</em></span> are often written in Objective-C, it&rsquo;s likely that the background of the malware author(s) was <span class="emphasis"><em>Linux</em></span>-based, and thus C++ was a more familiar language.</p><p>iWorm provides basic backdoor functionality, and contains no worm-like (i.e. self-spreading) capabilities. However, it does have a few tricks up its sleeve. First, in order to locate its command and control (C&amp;C) servers, iWorm queried reddit.com. This query returned &lsquo;a page containing the list of botnet C&amp;C servers and ports published by criminals in comments to the post minecraftserverlists under the account vtnhiaovyd&rsquo; [<span class="citation"><a href="#citation.8">8</a></span>]. Unfortunately, although several of the subreddits that contained iWorm&rsquo;s C&amp;C servers (e.g. minecraftserverlists) were banned, others such as &lsquo;ilikedota2&rsquo; remained (and remain) online. Since these are still accessible, new iWorm infections are still able to resolve addresses for remote tasking. It should be noted that (other than using <span class="emphasis"><em>Reddit</em></span>) this is not a novel technique. Other malware, including OS X Flashback, has used online services (such as <span class="emphasis"><em>Twitter</em></span>) both for determining the location C&amp;C servers and for direct command and control [<span class="citation"><a href="#citation.9">9</a></span>].</p><p>Another interesting feature of iWorm is its support for Lua [<span class="citation"><a href="#citation.8">8</a></span>]. The malware contained an embedded Lua interpreter that enabled it to execute Lua scripts directly. Such a feature allows the malware author(s) to dynamically (though not persistently) extend the core functionality of the malware by uploading and executing any scripts they desire.</p><div class="figure"><a id="figure.14"></a><div class="mediaobject"><img alt="Snippet of iWorm&rsquo;s embedded Lua interpreter." src="/uploads/images/figures/2014/10/iWorm-14.jpg" /></div><p class="title"><b>Figure&nbsp;14.&nbsp;Snippet of iWorm&rsquo;s embedded Lua interpreter.</b></p></div><p>Interested readers are encouraged to read [<span class="citation"><a href="#citation.8">8</a></span>] to learn more about iWorm&rsquo;s capabilities (e.g. supported backdoor commands) and features (e.g. use of encryption).</p></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2354082"></a>goodbyeWorm</h2></div></div></div><p>Having gained a comprehensive understanding of iWorm&rsquo;s infection vector and persistence mechanism (coupled with a high-level overview of its features), it&rsquo;s time to discuss detection, prevention, and several security &lsquo;best practices&rsquo;. In this case, the discussion is quite pertinent as <span class="emphasis"><em>Apple</em></span>&rsquo;s anti-malware mechanisms did little to protect unwitting users from iWorm infections. Of course, <span class="emphasis"><em>Apple</em></span> zealots may point out that there is &lsquo;no patch for human stupidity&rsquo;, and that if users are downloading and running malware manually, the OS doesn&rsquo;t stand a chance. However, one would hope that the OS&rsquo;s anti-malware mechanisms would at least provide some level of protection. Unfortunately, <span class="emphasis"><em>Apple</em></span>&rsquo;s may provide none.</p><p>According to <span class="emphasis"><em>Apple</em></span>, the <span class="emphasis"><em>Gatekeeper</em></span> security feature helps protect Macs from malicious applications that are downloaded and installed from the Internet [<span class="citation"><a href="#citation.10">10</a></span>]. Aiming to be the first line of defence, it checks whether downloaded files are digitally signed, and may either warn the user or simply block a downloaded file from executing if it comes from an untrusted source. Contrary to popular belief, <span class="emphasis"><em>Gatekeeper</em></span> (like <span class="emphasis"><em>XProtect</em></span>) is fairly limited in the attacks it can prevent. This is due to the fact that <span class="emphasis"><em>Gatekeeper</em></span> will only examine binaries that contain a quarantine attribute named &lsquo;com.apple.quarantine&rsquo;. Interestingly, it is the responsibility of the downloading application (e.g. <span class="emphasis"><em>Safari</em></span>, the torrent client, etc.) to set this quarantine attribute. If the downloading application does not set this, <span class="emphasis"><em>Gatekeeper</em></span> will remain out of the loop. Unfortunately, many of the torrent clients that are likely to be used to download the infected applications may not set this attribute. For example, <span class="emphasis"><em>uTorrent</em></span> (a popular <span class="emphasis"><em>OS X</em></span> torrent client) did not set it, and thus when the infected installer was executed, no <span class="emphasis"><em>Gatekeeper</em></span> prompt appeared. The malicious file was allowed to run in an uninhibited manner.</p><div class="figure"><a id="figure.15"></a><div class="mediaobject"><img alt="No com.apple.quarantine." src="/uploads/images/figures/2014/10/iWorm-15.jpg" /></div><p class="title"><b>Figure&nbsp;15.&nbsp;No com.apple.quarantine.</b></p></div><p>Of course, had the com.apple.quarantine attribute been set, a <span class="emphasis"><em>Gatekeeper</em></span> alert would have been raised (since the iWorm installer was not signed) and the malware would have been blocked. This was confirmed by setting the attribute manually, then attempting to re-run the installer application. As expected, this (finally) resulted in <span class="emphasis"><em>Gatekeeper</em></span> blocking the malicious installer (see <a href="#figure.16">Figure 16</a>).</p><div class="figure"><a id="figure.16"></a><div class="mediaobject"><img alt="With the quarantine attribute set, Gatekeeper displays an alert." src="/uploads/images/figures/2014/10/iWorm-16.jpg" /></div><p class="title"><b>Figure&nbsp;16.&nbsp;With the quarantine attribute set, Gatekeeper displays an alert.</b></p></div><p><span class="emphasis"><em>XProtect</em></span> is <span class="emphasis"><em>Apple</em></span>&rsquo;s attempt at an anti-virus product. Implemented within the CoreServicesUIAgent, it uses signatures from /System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/XProtect.plist to detect <span class="emphasis"><em>OS X</em></span> malware. Since it is a static, signature-based AV product, it cannot detect (and thus prevent) new malware samples. Thus iWorm was initially free to ravage a user&rsquo;s system. To give <span class="emphasis"><em>Apple</em></span> some credit though, although <span class="emphasis"><em>XProtect</em></span> could not detect iWorm initially, once the malware had been reported, the company released several detection signatures.</p><p>Interestingly, the signature (shown in <a href="#figure.17">Figure 17</a>) will only match (and thus block) the malware&rsquo;s installer application (&lsquo;Install&rsquo;, sha1: c0800cd5095b28da4b6ca01468a279fb5be6921a). Although two other iWorm signatures were released, these also only detect the installer (variants &lsquo;B&rsquo; and &lsquo;C&rsquo;). This means that existing iWorm infections (e.g. the JavaW binary) will not be detected. Worse yet, like <span class="emphasis"><em>Gatekeeper</em></span>, <span class="emphasis"><em>XProtect</em></span> only scans files that have the quarantine attribute set. Thus, if the downloading application (e.g. <span class="emphasis"><em>uTorrent</em></span>) does not set this attribute, the malware (including its installer) will still be able to execute freely and infect the user&rsquo;s system.</p><div class="figure"><a id="figure.17"></a><div class="mediaobject"><img alt="XProtect&rsquo;s iWorm signature." src="/uploads/images/figures/2014/10/iWorm-17.jpg" /></div><p class="title"><b>Figure&nbsp;17.&nbsp;XProtect&rsquo;s iWorm signature.</b></p></div><p>(Click <a href="/uploads/images/figures/2014/10/iWorm-17-large.jpg" target="_top">here</a> to view a larger version of Figure 17.)</p><div class="figure"><a id="figure.18"></a><div class="mediaobject"><img alt="With the quarantine attribute set, XProtect detects the malware." src="/uploads/images/figures/2014/10/iWorm-18.jpg" /></div><p class="title"><b>Figure&nbsp;18.&nbsp;With the quarantine attribute set, XProtect detects the malware.</b></p></div><p>Since <span class="emphasis"><em>Apple</em></span> seems unable to protect its users or detect the infection, how can users remain safe? First, the obvious: downloading pirated and cracked applications from untrusted sources is a bad idea (at least from a security point of view). As iWorm clearly illustrates, malware authors may use such applications to distribute their malware. Also, applications from untrusted sources that request elevated privileges should be treated with care. If the source cannot be verified, such applications should be avoided. If the application must be run, executing it within a virtual machine under the watchful eye of various profiling tools may be a possible solution.</p><p>Detecting the iWorm infection is actually fairly trivial, as the malware does not employ any rootkit or self-defence mechanisms. Several infection indicators are detailed in <a href="#table.1">Table 1</a>.</p><div class="table"><a id="table.1"></a><table border="1" summary="iWorm infection indicators."><colgroup><col /><col /><col /></colgroup><thead><tr><th align="center">Infection indicator type</th><th align="center">Infection indicator</th><th align="center">Description</th></tr></thead><tbody><tr><td>Process</td><td>JavaW</td><td>The persistent iWorm component is named JavaW and runs as a launch daemon.</td></tr><tr><td>Directory</td><td>/Library/ApplicationSupport/JavaW/</td><td>The malware installer creates this directory to contain things such as the malware&rsquo;s binary (JavaW).</td></tr><tr><td>File</td><td>/Library/ApplicationSupport/JavaW/JavaW</td><td>The persistent iWorm component is named JavaW and is installed into the /Library/ApplicationSupport/JavaW/ directory.</td></tr><tr><td>File</td><td>/Library/LaunchDaemons/com.JavaW.plist</td><td>In order to persist, the malware installer creates this plist file.</td></tr></tbody></table><p class="title"><b>Table&nbsp;1.&nbsp;iWorm infection indicators.</b></p></div><p>Removing the malware from an infected host is trivial as well. The steps shown in <a href="#figure.19">Figure 19</a> (run with elevated privileges) should remove all traces of the infection. Of course, if the malware has installed additional components, other steps may be necessary as well.</p><div class="figure"><a id="figure.19"></a><div class="mediaobject"><img alt="Steps to remove iWorm." src="/uploads/images/figures/2014/10/iWorm-19.jpg" /></div><p class="title"><b>Figure&nbsp;19.&nbsp;Steps to remove iWorm.</b></p></div><p>As <span class="emphasis"><em>Mac OS X </em></span>continues to increase in popularity, persistent <span class="emphasis"><em>OS X</em></span> malware such as iWorm is becoming more common than ever. There are many locations on <span class="emphasis"><em>OS X</em></span> that may be abused for persistence (such as launch daemons), and <span class="emphasis"><em>Apple</em></span>&rsquo;s anti-malware mitigations may not protect end-users.</p><p>In order to detect persistent <span class="emphasis"><em>OS X</em></span> malware generically, a new tool has recently been developed that can enumerate and display persistent <span class="emphasis"><em>OS X </em></span>binaries. Named <span class="emphasis"><em>KnockKnock</em></span>, the goal of the tool is simple: to tell you who&rsquo;s there! Open source [<span class="citation"><a href="#citation.11">11</a></span>], and based on an extensible plug-in architecture, it can easily evolve as new methods of persistence are uncovered. <span class="emphasis"><em>KnockKnock</em></span> can readily detect the presence of iWorm via the malware&rsquo;s persistence technique.</p><div class="figure"><a id="figure.20"></a><div class="mediaobject"><img alt="Using KnockKnock to detect iWorm generically." src="/uploads/images/figures/2014/10/iWorm-20.jpg" /></div><p class="title"><b>Figure&nbsp;20.&nbsp;Using KnockKnock to detect iWorm generically.</b></p></div></div><div class="sect1" lang="en"><div class="titlepage"><div><div><h2 class="title"><a class="chapter" id="id2767973"></a>Conclusion</h2></div></div></div><p>iWorm is a recent <span class="emphasis"><em>OS X</em></span> backdoor that allows an attacker complete remote control over infected hosts. As detailed in this paper, iWorm was distributed via infected pirated applications that were hosted on <span class="emphasis"><em>Pirate Bay</em></span>. When run, it was persistently installed as a launch daemon, which ensured that it would automatically be executed each time the infected computer was rebooted.</p><p>Although users cannot rely on <span class="emphasis"><em>Apple</em></span>&rsquo;s anti-malware mechanisms for protection from iWorm, refraining from using pirated applications should keep them safe in this case. More generically, armed with a tool such as <span class="emphasis"><em>KnockKnock</em></span>, users can detect both current and future persistent <span class="emphasis"><em>OS X</em></span> threats.</p><div class="bibliography"><div class="titlepage"><div><div><h3 class="title"><a class="chapter" id="id3748926"></a>Bibliography</h3></div></div></div><div class="bibliomixed"><a id="citation.1"></a><p class="bibliomixed">[1] New Mac OS X botnet discovered. <span class="bibliosource"><a href="http://news.drweb.com/show/?i=5976" target="_blank">http://news.drweb.com/show/?i=5976</a></span>.</p></div><div class="bibliomixed"><a id="citation.2"></a><p class="bibliomixed">[2] iWorm method of infection found! <span class="bibliosource"><a href="http://www.thesafemac.com/iworm-method-of-infection-found/" target="_blank">http://www.thesafemac.com/iworm-method-of-infection-found/</a></span>.</p></div><div class="bibliomixed"><a id="citation.3"></a><p class="bibliomixed">[3] Mac.BackDoor.iWorm. <span class="bibliosource"><a href="https://docs.google.com/document/d/1YOfXRUQJgMjJSLBSoLiUaSZfiaS_vU3aG4Bvjmz6Dxs/edit" target="_blank">https://docs.google.com/document/d/1YOfXRUQJgMjJSLBSoLiUaSZfiaS_vU3aG4Bvjmz6Dxs/edit</a></span>.</p></div><div class="bibliomixed"><a id="citation.4"></a><p class="bibliomixed">[4] Methods of malware persistence on Mac OS X. <span class="bibliosource"><a href="/virusbulletin/2014/10/paper-methods-malware-persistence-mac-os-x
" target="_top">https://www.virusbtn.com/virusbulletin/archive/2014/10/vb201410-malware-persistence-MacOSX</a></span>.</p></div><div class="bibliomixed"><a id="citation.5"></a><p class="bibliomixed">[5] Man page for launchd. <span class="bibliosource"><a href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/Manpages/man8/launchd.8.html" target="_blank">https://developer.apple.com/library/mac/documentation/Darwin/Reference/Manpages/man8/launchd.8.html</a></span>.</p></div><div class="bibliomixed"><a id="citation.6"></a><p class="bibliomixed">[6] D-trace script. <span class="bibliosource"><a href="https://gist.github.com/viroos/1242279" target="_blank">https://gist.github.com/viroos/1242279</a></span>.</p></div><div class="bibliomixed"><a id="citation.7"></a><p class="bibliomixed">[7] What is launchd? <span class="bibliosource"><a href="http://launchd.info/" target="_blank">http://launchd.info/</a></span>.</p></div><div class="bibliomixed"><a id="citation.8"></a><p class="bibliomixed">[8] The Mac.BackDoor.iWorm threat in detail. <span class="bibliosource"><a href="http://news.drweb.com/show/?i=5977&amp;lng=en" target="_blank">http://news.drweb.com/show/?i=5977&amp;lng=en</a></span>.</p></div><div class="bibliomixed"><a id="citation.9"></a><p class="bibliomixed">[9] Flashback Mac Malware Uses Twitter as Command and Control Center. <span class="bibliosource"><a href="https://www.intego.com/mac-security-blog/flashback-mac-malware-uses-twitter-as-command-and-control-center/" target="_blank">http://www.intego.com/mac-security-blog/flashback-mac-malware-uses-twitter-as-command-and-control-center/</a></span>.</p></div><div class="bibliomixed"><a id="citation.10"></a><p class="bibliomixed">[10] OS X: About Gatekeeper. <span class="bibliosource"><a href="https://support.apple.com/kb/ht5290" target="_blank">http://support.apple.com/kb/ht5290</a></span>.</p></div><div class="bibliomixed"><a id="citation.11"></a><p class="bibliomixed">[11] KnockKnock. <span class="bibliosource"><a href="https://github.com/synack/knockknock" target="_blank">https://github.com/synack/knockknock</a></span>.</p></div></div></div> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2014/vb201410-iWorm.pdf" target="_blank"><img class="ccm-image-block responsive" alt="" src="/uploads/images/buttons/pdf-download-button.jpg" onmouseover="this.src = '/uploads/images/buttons/pdf-download-button-hover.jpg'" onmouseout="this.src = '/uploads/images/buttons/pdf-download-button.jpg'" border="0" height="45" width="262"></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Invading the core: iWorm's infection vector and persistence mechanism&url=https://www.virusbulletin.com/virusbulletin/2014/10/invading-core-iworm-s-infection-vector-and-persistence-mechanism"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2014/10/invading-core-iworm-s-infection-vector-and-persistence-mechanism'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2014/10/invading-core-iworm-s-infection-vector-and-persistence-mechanism&title=Invading the core: iWorm's infection vector and persistence mechanism"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2014/10/invading-core-iworm-s-infection-vector-and-persistence-mechanism&t=Invading the core: iWorm's infection vector and persistence mechanism"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2014/10/invading-core-iworm-s-infection-vector-and-persistence-mechanism"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>