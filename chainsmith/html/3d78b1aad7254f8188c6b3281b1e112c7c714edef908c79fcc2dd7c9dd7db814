<!doctype html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <meta name="google-site-verification" content="_b2avZwzr79oru6lM2Ddae1fNpSIbPaP0H0WNkc2x3k"/>
    <meta name="msvalidate.01" content="CE77828A466C2513F660017CFCB6BA13"/>
    <link rel="icon" href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/favicon.ico">

    

            
    
    <link href="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/css/main.css?id=b3e7fe8a6c3736dca145" rel="stylesheet">
    <script type="text/javascript"> var appInsights=window.appInsights||function(a){ function b(a){c[a]=function(){var b=arguments;c.queue.push(function(){c[a].apply(c,b)})}}var c={config:a},d=document,e=window;setTimeout(function(){var b=d.createElement("script");b.src=a.url||"https://az416426.vo.msecnd.net/scripts/a/ai.0.js",d.getElementsByTagName("script")[0].parentNode.appendChild(b)});try{c.cookie=d.cookie}catch(a){}c.queue=[];for(var f=["Event","Exception","Metric","PageView","Trace","Dependency"];f.length;)b("track"+f.pop());if(b("setAuthenticatedUserContext"),b("clearAuthenticatedUserContext"),b("startTrackEvent"),b("stopTrackEvent"),b("startTrackPage"),b("stopTrackPage"),b("flush"),!a.disableExceptionTracking){f="onerror",b("_"+f);var g=e[f];e[f]=function(a,b,d,e,h){var i=g&&g(a,b,d,e,h);return!0!==i&&c["_"+f](a,b,d,e,h),i}}return c }({ instrumentationKey:"dcb460fe-684e-4d39-bfcd-d3a6f2710a32" }); window.appInsights=appInsights,appInsights.queue&&0===appInsights.queue.length&&appInsights.trackPageView(); </script>
    <script>
        window.dataLayer = window.dataLayer || [];
    window.dataLayer.push({
        'Author': 'Marc-Etienne M.Léveillé',
        'ArticleCategory': 'Threats',
        'ArticleSection': 'Research',
        'cookie-bar-hq': true
    });
</script>
<script>
    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-PMDGSM');
</script>

<!-- This site is optimized with the Yoast SEO plugin v9.2 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Multi&#8209;stage exploit installing trojan | WeLiveSecurity</title>
<meta name="description" content="Earlier this year, a new type of trojan caught the attention of ESET researchers. This article will take a deep dive into how the exploit works."/>
<link rel="canonical" href="https://www.welivesecurity.com/2015/10/20/multi-stage-exploit-installing-trojan/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Multi&#8209;stage exploit installing trojan | WeLiveSecurity" />
<meta property="og:description" content="Earlier this year, a new type of trojan caught the attention of ESET researchers. This article will take a deep dive into how the exploit works." />
<meta property="og:url" content="https://www.welivesecurity.com/2015/10/20/multi-stage-exploit-installing-trojan/" />
<meta property="og:site_name" content="WeLiveSecurity" />
<meta property="article:tag" content="exploit" />
<meta property="article:tag" content="Trojan" />
<meta property="article:section" content="Threats" />
<meta property="article:published_time" content="2015-10-20T12:49:21+00:00" />
<meta property="article:modified_time" content="2021-10-22T16:53:57+00:00" />
<meta property="og:updated_time" content="2021-10-22T16:53:57+00:00" />
<meta property="og:image" content="https://www.welivesecurity.com/wp-content/uploads/2015/10/safriibrahim.jpg" />
<meta property="og:image:secure_url" content="https://www.welivesecurity.com/wp-content/uploads/2015/10/safriibrahim.jpg" />
<meta property="og:image:width" content="640" />
<meta property="og:image:height" content="410" />
<meta name="twitter:card" content="summary" />
<meta name="twitter:description" content="Earlier this year, a new type of trojan caught the attention of ESET researchers. This article will take a deep dive into how the exploit works." />
<meta name="twitter:title" content="Multi&#8209;stage exploit installing trojan | WeLiveSecurity" />
<meta name="twitter:site" content="@welivesecurity" />
<meta name="twitter:image" content="https://www.welivesecurity.com/wp-content/uploads/2015/10/safriibrahim.jpg" />
<meta name="twitter:creator" content="@marc_etienne_" />
<!-- / Yoast SEO plugin. -->

<link rel="alternate" href="https://www.welivesecurity.com/2015/10/20/multi-stage-exploit-installing-trojan/" hreflang="en" />
<link rel="alternate" href="https://www.welivesecurity.com/la-es/2015/10/20/exploit-que-instala-un-troyano/" hreflang="es" />
<link rel="alternate" type="application/rss+xml" title="WeLiveSecurity RSS 2.0 Feed" href="/rss-configurator/" /><style type="text/css" id="syntaxhighlighteranchor"></style>
        <link id="cookie-style" rel="stylesheet" type="text/css" href="https://assets.esetstatic.com/3PS/cookiebar.min.css">
</head>
<body class="no-js single noimage">
<noscript>
	<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-PMDGSM" height="0" width="0" style="display:none;visibility:hidden"></iframe>
</noscript>

<div class="main">
    <header id="site-header" class="container">
        <div class="row">
            <div class="col-md-4 col-sm-12 col-xs-12 pull-right" id="header-nav">
                <div class="row">
                    <div class="hidden-lg hidden-md col-sm-7 col-xs-8 hidden-xxs">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
                    <div class="col-md-8 hidden-sm hidden-xs languages">
                        <div class="dropdown">
	<button class="btn btn-default dropdown-toggle" type="button" id="main-language-picker" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
    	<span class="text">In English</span>
    	<span class="icomoon icon-icon_arrow"></span>
  	</button>
  	<ul class="dropdown-menu" aria-labelledby="main-language-picker">
            <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/2015/10/20/exploit-que-instala-un-troyano/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
      	</ul>
</div>                    </div>
                    <div class="col-md-4 col-sm-2 col-xs-3 menu-trigger">
                        <div class="menu-btn">
	<span class="text">Menu</span>
	<button type="button" id="menu-trigger" class="tcon tcon-menu--xcross" aria-label="toggle menu">
        <span class="wrapper">
            <span class="tcon-menu__lines" aria-hidden="true"></span>
            <span class="tcon-visuallyhidden">toggle menu</span>
        </span>
    </button>
</div>                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12 imc" id="main-menu">
                        <nav class="menu clearfix imc">
                            <ul class="col-md-12 col-sm-6 col-xs-6 imc">
                                                                    <li class="">
                                        <a href="/">
                                            All Posts                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="http://welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/">
                                            Ukraine Crisis – Digital Security Resource Center                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/we-live-progress/">
                                            We Live Progress                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/research">
                                            Research                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="/category/how-to/">
                                            How To                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/media/videos/">
                                            Videos                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/conference-papers/">
                                            Conference Materials                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/white-papers/">
                                            White Papers                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/threat-reports/">
                                            Threat Reports                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/papers/magazine/">
                                            Magazine                                        </a>
                                    </li>
                                                                    <li class="">
                                        <a href="https://www.welivesecurity.com/our-experts/">
                                            Our Experts                                        </a>
                                    </li>
                                                            </ul>

                            <div class="col-md-12 col-sm-6 col-xs-6 imc">
                                <ul class="languages hidden-lg hidden-md hidden-xxs col-xs-12 imc">
                                        <li>
        <a href="/br/" title="Em Português">
            Em Português        </a>
    </li>
        <li>
        <a href="/fr/" title="En français">
            En français        </a>
    </li>
        <li>
        <a href="/la-es/2015/10/20/exploit-que-instala-un-troyano/" title="En Español">
            En Español        </a>
    </li>
        <li>
        <a href="/deutsch/" title="In Deutsch">
            In Deutsch        </a>
    </li>
                                    </ul>
                            </div>
                        </nav>
                    </div>
                    <div class="menu-overlay col-md-12 col-sm-12 col-xs-12 imc">
                        <div class="inner imc"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-5 hidden-sm hidden-xs pull-left" id="header-logo">
                <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                <span class="slogan hidden-sm hidden-xs">
						Award-winning news, views, and insight from the ESET <strong>security community</strong>					</span>
            </div>
        </div>
    </header>
        <section id="article-detail">
            <div class="hero-noimage">
	<div class="container promo-text">
		<div class="inner clearfix">
			<div class="col-md-11 col-sm-11 col-xs-12 no-padding">
				<h1>Multi&#8209;stage exploit installing trojan</h1>
<div class="excerpt">Earlier this year, a new type of trojan caught the attention of ESET researchers. This article will take a deep dive into how the exploit works and briefly describe the final payload.
</div>
<div class="post-meta">
    <div class="wls-authors">
                <div class="wls-author with-avatar">
                            <div class="wls-author-avatar">
                    <a href="https://www.welivesecurity.com/author/marc-etienne/" title="Marc-Etienne M.Léveillé">
                        <img src="https://www.welivesecurity.com/wp-content/uploads/2013/06/Marc-Etienne-M.Leveille.png" alt="Marc-Etienne M.Léveillé">
                    </a>
                </div>
                        <div class="wls-author-name">
                <a href="https://www.welivesecurity.com/author/marc-etienne/" title="Marc-Etienne M.Léveillé">
                    Marc-Etienne M.Léveillé                </a>
            </div>
        </div>
            </div>
    <span class="meta">
		<span class="strong">
			<time datetime="2015-10-20 12:49:21">20 Oct 2015 - 12:49PM</time>
		</span>
			</span>
</div>
			</div>
		</div>
	</div>
</div>	

            <div class="content">
                <div class="social-wrapper" id="social-sharer">
                    <span class="text">Share</span>
	<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2015%2F10%2F20%2Fmulti-stage-exploit-installing-trojan%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
		<span class="icomoon icon-icon_fb"></span>
	</a>
	<a class="share-twitter" href="https://twitter.com/intent/tweet?&url=https%3A%2F%2Fwww.welivesecurity.com%2F2015%2F10%2F20%2Fmulti-stage-exploit-installing-trojan%2F&text=Multi&#8209;stage exploit installing trojan%0A&via=welivesecurity" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
		<span class="icomoon icon-icon_tw"></span>
	</a>
	<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2015%2F10%2F20%2Fmulti-stage-exploit-installing-trojan%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
		<span class="icomoon icon-icon_in"></span>
	</a>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-1 col-sm-1 hidden-xs">

                        </div>
                        <div class="col-md-10 col-sm-10 col-xs-12 formatted">

                            <div class="excerpt noimage">
                                <p>Earlier this year, a new type of trojan caught the attention of ESET researchers. This article will take a deep dive into how the exploit works and briefly describe the final payload.</p>
                            </div>

                            <p>ESET researchers receive and analyze thousands of new malware samples every day. Earlier this year, one of them caught our attention because it was not an ordinary executable file, but a preference file used by a specific program. Further analysis quickly revealed the file actually is malicious and exploited a vulnerability in the software in order to execute code while it is parsed.</p>
<p>This article will take a deep dive into how the exploit works and briefly describe the final payload.</p>
<h2>Exploit overview</h2>
<p>The exploit takes advantage of a buffer overflow vulnerability in the demo version of a program called <em>Uploader!</em>. Developed by <a href="http://www.dummysoftware.com/" target="_blank" rel="noopener"><em>ksoft</em></a>, <em>Uploader! </em>allows its user to upload files to the internet via FTP. Preferences such as the FTP hostname and username are stored in a file named uploadpref.dat. ESET researchers analyzed a preference file that was used to compromise the system when <em>Uploader!</em> is launched.</p>
<p>A proof of concept exploit has been <a href="https://www.exploit-db.com/exploits/32050/" target="_blank" rel="noopener">available online since March 2014</a>.</p>
<h3>The vulnerability</h3>
<p><em>Uploader!</em>’s preference file consists of a set of line-separated strings such as the username and the hostname of the server to which to upload files. The application uses the standard C++ input stream (std::ifstream) to parse the uploadpref.dat file from the disk. While reading strings from the file, all fields are correctly checked for their size by using in_stream.get(buffer, sizeof(buffer), &#8216;\n&#8217;). However, the last field containing the encrypted password uses the following line of code: in_stream &gt;&gt; buffer, where buffer is on the stack. If in_stream.width(…​) isn’t called, in_stream &gt;&gt; buffer will result in copying the content of the file to the stack until a white space or the End Of File is reached.</p>
<div id="attachment_70738" style="width: 714px" class="wp-caption aligncenter"><img class="wp-image-70738 size-full" src="/wp-content/uploads/2015/10/opgtgt_call.png" alt="opgtgt_call" width="704" height="244" srcset="https://www.welivesecurity.com/wp-content/uploads/2015/10/opgtgt_call.png 704w, https://www.welivesecurity.com/wp-content/uploads/2015/10/opgtgt_call-300x104.png 300w" sizes="(max-width: 704px) 100vw, 704px" /><p class="wp-caption-text">Figure 1 &#8211; Problematic call to in_stream &gt;&gt; encrypted_password</p></div>
<p>ESET has contacted <em>Ksoft</em> about the issue and a new version of <em>Uploader!</em> (3.6) was released within 24 hours of notification.</p>
<h3>How code execution is triggered</h3>
<p>In the case of the exploit we have analyzed, the content of the file is copied onto the stack, beyond the buffer variable, which has a fixed size of 80 bytes. The <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms680657(v=vs.85).aspx" target="_blank" rel="noopener">Structured Exception Handler</a> (SEH) is overwritten and the first shell code is copied. The copy is stopped by an exception when the destination has reach the end of the stack, raising a page violation while trying to write at an invalid address. The exception handler controlled by the attacker will be called. It is set to a pop ecx; pop ecx; ret gadget inside <em>Uploader!</em>’s address space. Finally, the gadget will enable the execution of the first shell code on the stack.</p>
<div id="attachment_70740" style="width: 613px" class="wp-caption aligncenter"><img class="wp-image-70740 size-full" src="/wp-content/uploads/2015/10/SE_Handler_olly.png" alt="SE_Handler_olly" width="603" height="112" srcset="https://www.welivesecurity.com/wp-content/uploads/2015/10/SE_Handler_olly.png 603w, https://www.welivesecurity.com/wp-content/uploads/2015/10/SE_Handler_olly-300x56.png 300w, https://www.welivesecurity.com/wp-content/uploads/2015/10/SE_Handler_olly-601x112.png 601w" sizes="(max-width: 603px) 100vw, 603px" /><p class="wp-caption-text">Figure 2 &#8211; View in the debugger once the exception is raised</p></div>
<p>SEH-based exploits are not new. If you are interested in the details, Corelan Team has a <a href="https://www.corelan.be/index.php/2009/07/25/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-3-seh" target="_blank" rel="noopener">very good article on this subject on their website</a>. <a href="https://support.microsoft.com/en-us/kb/956607" target="_blank" rel="noopener">Structured Exception Handling Overwrite Protection (SEHOP)</a> prevents the execution of such an exploit, but it is not enabled in the <em>Uploader!</em> application and is enabled system-wide only on Windows Server. It is possible to change this setting in EMET’s user interface.</p>
<p>The exploit was likely based on the proof-of-concept exploit mentioned above: although there are 178 pop; pop; ret gadgets in the code, this exploit uses the exact same one found at 0x0040bf38. The other parts such as the shellcode and the next stages were added by the malware author.</p>
<div id="attachment_70739" style="width: 625px" class="wp-caption aligncenter"><img class="size-full wp-image-70739" src="/wp-content/uploads/2015/10/pocBeginningHexDump.png" alt="Figure 3 - uploadpref.dat heading taken from the PoC" width="615" height="123" srcset="https://www.welivesecurity.com/wp-content/uploads/2015/10/pocBeginningHexDump.png 615w, https://www.welivesecurity.com/wp-content/uploads/2015/10/pocBeginningHexDump-300x60.png 300w" sizes="(max-width: 615px) 100vw, 615px" /><p class="wp-caption-text">Figure 3 &#8211; uploadpref.dat heading taken from the PoC</p></div>
<div id="attachment_70737" style="width: 625px" class="wp-caption aligncenter"><img class="size-full wp-image-70737" src="/wp-content/uploads/2015/10/bogusBeginningHexDump.png" alt="Figure 4 - uploadpref.dat header taken from the malicious preference file" width="615" height="121" srcset="https://www.welivesecurity.com/wp-content/uploads/2015/10/bogusBeginningHexDump.png 615w, https://www.welivesecurity.com/wp-content/uploads/2015/10/bogusBeginningHexDump-300x59.png 300w" sizes="(max-width: 615px) 100vw, 615px" /><p class="wp-caption-text">Figure 4 &#8211; uploadpref.dat header taken from the malicious preference file</p></div>
<h3>Stages</h3>
<p>The exploit has multiple stages before the final payload is executed. This section briefly describe each of these steps.</p>
<h4>Stage 0</h4>
<p>As we said before, the SEH handler points to a pop ecx; pop ecx; ret gadget that will pass the control flow to our first shell code.</p>
<p>These first few instructions unpack the next stage, which we call shell_code_1. It computes a one-byte value out of a two-byte word and writes it at the same memory location. This method allows Stage 1 to be encoded with only uppercase letters in the file.</p>
<div id="attachment_70789" style="width: 659px" class="wp-caption aligncenter"><img class="size-full wp-image-70789" src="/wp-content/uploads/2015/10/stage01.png" alt="Figure 5 - Unpacking function for the first shellcode" width="649" height="717" srcset="https://www.welivesecurity.com/wp-content/uploads/2015/10/stage01.png 649w, https://www.welivesecurity.com/wp-content/uploads/2015/10/stage01-272x300.png 272w" sizes="(max-width: 649px) 100vw, 649px" /><p class="wp-caption-text">Figure 5 &#8211; Unpacking function for the first shellcode</p></div>
<h4>Stage 1</h4>
<p>At the end of this stage the whole content of the uploadpref.dat file is read to memory. It is not obvious at first, because the code searches for Windows API functions in the PEB by using hashes of the DLL names and functions. It calculates the sum of each individual hexadecimal representation of the lowercased characters forming the name of the function and multiplies it by two.</p>
<p>Here is a Python version of the hashing algorithm:</p>
<p><span style="font-family: 'courier new', courier, monospace;">def hash_name(name):<br />
</span><span style="font-family: 'courier new', courier, monospace;">    result = 0<br />
for c in name:<br />
result = 2 * (result + (ord(c) | 0x60))<br />
return result</span></p>
<p>Interestingly, this hashing algorithm is the same that is used as an example in a book by Chris Anley and John Heasman titled &#8220;The Shellcoder’s Handbook: Discovering and Exploiting Security Holes&#8221;. The C implementation is at page 145 of the 2nd edition.</p>
<p>After the API calls are resolved, shell_code_1 allocates two buffers of the same size as the uploadpref.dat file. The whole content of the file is copied into the first, and the second is left untouched. Then it jumps into the first block at offset 0x10, where the next stage is. Here is a summary in pseudo-C:</p>
<p><span style="font-family: 'courier new', courier, monospace;">HANDLE f = CreateFileA(&#8220;uploadpref.dat&#8221;, GENERIC_READ, FILE_SHARE_READ, 0, OPEN_EXISTING, 0, 0);<br />
DWORD uploadpref_size = GetFileSize(f, 0);<br />
char * memblock1 = VirtualAlloc(NULL, uploadpref_size, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);<br />
char * memblock2 = VirtualAlloc(NULL, uploadpref_size, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);<br />
ReadFile(f, memblock1, uploadpref_size);<br />
stage_2 = &amp;memblock1[0x10];<br />
stage_2(&amp;memblock1[0x650], memblock2);<br />
// memblock2 is also pushed so that returning from stage_2 will jump at offset 0 in memblock2</span></p>
<h4>Stage 2</h4>
<p>The function decompresses a buffer at 0x650 into the previously allocated buffer memblock2 with a somewhat inefficient algorithm. Inflated, this buffer is 3,632 bytes long. After this is done, control flow is redirected to the beginning of memblock2, which now contains stage 3.</p>
<h4>Stage 3</h4>
<p>This stage reopens uploadpref.dat and decompresses a PE file from it, starting at offset 0x1600, into a newly allocated buffer. The decompression algorithm is the same as that used in stage 2.</p>
<p>Then, it creates a new process in suspended mode, and injects and runs the new executable.</p>
<p>The PE file extracted from uploadpref.dat is 56,832 bytes long, and downloads and executes a malicious remote access tool.</p>
<h3>Malicious <strong>uploadpref.dat</strong> file overview</h3>
<p>To summarize, here is the whole content of the malicious uploadpref.dat file relative to the different stages of execution.</p>
<p><span style="font-weight: 400;">
<table id="tablepress-128" class="tablepress tablepress-id-128">
<thead>
<tr class="row-1 odd">
	<th class="column-1">Table 1. uploadpref.dat exploit file layout</th><th class="column-2">&nbsp;</th><th class="column-3">&nbsp;</th>
</tr>
</thead>
<tbody class="row-hover">
<tr class="row-2 even">
	<td class="column-1">Offset</td><td class="column-2">Size (in bytes)</td><td class="column-3">Description</td>
</tr>
<tr class="row-3 odd">
	<td class="column-1">0x0</td><td class="column-2">11</td><td class="column-3">First field</td>
</tr>
<tr class="row-4 even">
	<td class="column-1">0x0B</td><td class="column-2">4</td><td class="column-3">"1\n", meaning the file contains a password (to trigger the vulnerability)</td>
</tr>
<tr class="row-5 odd">
	<td class="column-1">0x0F</td><td class="column-2">1</td><td class="column-3">A' (padding)</td>
</tr>
<tr class="row-6 even">
	<td class="column-1">0x10</td><td class="column-2">138</td><td class="column-3">Stage 2</td>
</tr>
<tr class="row-7 odd">
	<td class="column-1">0x9A</td><td class="column-2">326</td><td class="column-3">Null bytes (padding)</td>
</tr>
<tr class="row-8 even">
	<td class="column-1">0x1E0</td><td class="column-2">12</td><td class="column-3">A' (padding)</td>
</tr>
<tr class="row-9 odd">
	<td class="column-1">0x1EC</td><td class="column-2">4</td><td class="column-3">Jump to Stage 0</td>
</tr>
<tr class="row-10 even">
	<td class="column-1">0x1F0</td><td class="column-2">4</td><td class="column-3">Pointer to a pop pop ret gadget</td>
</tr>
<tr class="row-11 odd">
	<td class="column-1">0x1F4</td><td class="column-2">66</td><td class="column-3">Stage 0</td>
</tr>
<tr class="row-12 even">
	<td class="column-1">0x236</td><td class="column-2">832</td><td class="column-3">Packed Stage 1 with ending marker (0xFFFF)</td>
</tr>
<tr class="row-13 odd">
	<td class="column-1">0x576</td><td class="column-2">218</td><td class="column-3">Null bytes (padding)</td>
</tr>
<tr class="row-14 even">
	<td class="column-1">0x650</td><td class="column-2">3952</td><td class="column-3">Compressed stage 3</td>
</tr>
<tr class="row-15 odd">
	<td class="column-1">0x15C0</td><td class="column-2">64</td><td class="column-3">Null bytes (padding)</td>
</tr>
<tr class="row-16 even">
	<td class="column-1">0x1600</td><td class="column-2">870912</td><td class="column-3">Compressed PE file</td>
</tr>
</tbody>
</table>
</span></p>
<h2>Malicious payload</h2>
<p>Upon successful exploitation, a new process is created with the PE file embedded in the uploadpref.dat file. This new process downloads and executes the final stage: a Remote Administration Tool (RAT) based on Gh0st RAT.</p>
<h3>First stage downloader</h3>
<h4>Persistence</h4>
<p>This module maintains persistence on the system by copying the original exploit file and the Upload 3.5!.exe as msfeedssync.exe into the user’s <em>Application Data</em> directory. Then, it adds a shortcut to the executable file inside the the Start menu’s Startup folder. On reboot, the exploit will be triggered again and all the steps will be repeated.</p>
<p>The following files are installed to maintain persistence:</p>
<p><span style="font-weight: 400;">
<table id="tablepress-129" class="tablepress tablepress-id-129">
<thead>
<tr class="row-1 odd">
	<th class="column-1">Files dropped</th><th class="column-2">Path</th><th class="column-3">Hashes</th>
</tr>
</thead>
<tbody class="row-hover">
<tr class="row-2 even">
	<td class="column-1">uploadpref.dat</td><td class="column-2">C:\Documents and Settings\%USER%\Application Data\</td><td class="column-3">16d842b8746944cd29cea6237e210be2d185cbe2</td>
</tr>
<tr class="row-3 odd">
	<td class="column-1">msfeedssync.exe</td><td class="column-2">C:\Documents and Settings\%USER%\Application Data\</td><td class="column-3">e2fc91f82b7db3221502d2582ac3be7a5b663498 (itself)</td>
</tr>
<tr class="row-4 even">
	<td class="column-1">msfeedssync.lnk</td><td class="column-2">C:\Documents and Settings\All Users\Start Menu\Programs\Startup\</td><td class="column-3">0fff6640f72115021f0e5d0514921eb856948f30</td>
</tr>
</tbody>
</table>
</span></p>
<div id="attachment_70741" style="width: 258px" class="wp-caption aligncenter"><img class="wp-image-70741 size-full" src="/wp-content/uploads/2015/10/shortcutTarget.png" alt="shortcutTarget" width="248" height="81" /><p class="wp-caption-text">Figure 6 &#8211; Shortcut installed in Startup folder on the infected computer</p></div>
<h4>Downloading the payload</h4>
<p>Once the persistence of the code is ensured, the executable will fetch the malicious payload via HTTP. Two threads are started at 30-minute intervals. Based on the HTTP user-agent each thread uses, we call the first thread Alan_function and the second one BFunction.</p>
<p>Each thread tries to download the payload from different URLs using the same domain name. Once the downloaded file is decompressed, the two functions will launch the code differently:</p>
<ul>
<li>Alan_function expects an executable PE file and will simply launch it.</li>
<li>BFunction expects a DLL file which it will load and call the TestFunction exported function.</li>
</ul>
<p><span style="font-weight: 400;">
<table id="tablepress-130" class="tablepress tablepress-id-130">
<thead>
<tr class="row-1 odd">
	<th class="column-1">URL</th><th class="column-2">User-Agent</th><th class="column-3">Content SHA-1 (As of March 2015)</th><th class="column-4">Detection name</th>
</tr>
</thead>
<tbody class="row-hover">
<tr class="row-2 even">
	<td class="column-1">http://biless.com/alan/19437192.txt</td><td class="column-2">Alan_Function</td><td class="column-3">e440eea118d1701ad7886af6c93ef7102326d4c8</td><td class="column-4">Win32/Farfli.PZ</td>
</tr>
<tr class="row-3 odd">
	<td class="column-1">http://biless.com/alan/Alan.txt</td><td class="column-2">BFunction</td><td class="column-3">Unknown</td><td class="column-4"></td>
</tr>
</tbody>
</table>
</span></p>
<p>We have only observed the first method of distribution being used in March 2015. The downloaded executable file we have seen is tightly linked to this first stage downloader because its obfuscation method includes the unpacking of a DLL file with an exported function called TestFunction. This DLL could have been delivered to the BFunction thread directly to achieve the same results.</p>
<p>The final payload is a trojan based on <em>Gh0st RAT</em>.</p>
<h3>The trojan</h3>
<p>The last stage is to drop a variant of remote spying malware based on <em>Gh0st RAT</em>. <em>Gh0st RAT</em> has been thoroughly analyzed and documented by various researchers in the past. If you are interested, links to relevant research are included in the references section below.</p>
<p><em>Gh0st RAT</em>’s network protocol includes a five-character string to identify the campaign. This <em>Gh0st RAT</em> variant uses the campaign code A1CEA. It is unclear if the A1CEA campaign is specific to a group. We found a few references online related to A1CEA:</p>
<ul>
<li><a href="https://malwr.com/analysis/YWQ1YWNlNjhjZDk2NGYzNjg1YjAxYjVkYmIyMmVmNDY/" target="_blank" rel="noopener">Sample seen in December 2013 with this campaign code on Malwr</a></li>
<li><a href="https://rules.emergingthreats.net/changelogs/snort-2.9.0.etpro.2015-03-04T00:08:05.txt" target="_blank" rel="noopener">Snort rule added on March 3rd 2015</a></li>
<li><a href="http://www.wins21.co.kr/blog/blog-sub-01.html?t=31&amp;num=53" target="_blank" rel="noopener">Analysis from Wins in Korea</a></li>
</ul>
<p>The C&amp;C server in the sample is www.phw2015.com on TCP port 2015. At the time of writing, the domain resolves to 112.67.10.110.</p>
<p>Other minor modifications to the <em>Gh0st RAT</em> source include:</p>
<ul>
<li>Presence of a function that harvests the computer specifications.</li>
<li>Presence of the exported &#8220;TestFunction&#8221; that loads the malicious components.</li>
</ul>
<p>All of <em>Gh0st RAT</em>’s functionalities are present and we have confirmed that the keylogger was enabled.</p>
<h2>Conclusion</h2>
<p>This exploit is curious because <em>Uploader!</em> is not a massively-deployed application. We are missing some context to understand clearly what happened. Was this exploit used to fool a specific target? The initial attack vector is also unclear: did they use social engineering to persuade the user to replace the preference file with this &#8220;special&#8221; file? Did they only use this technique as a way to hide the malware’s persistence?</p>
<h2>Acknowledgment</h2>
<p>Thanks to Hugo Genesse for his help on this analysis.</p>
<h2>References</h2>
<p>Michael G. Spohn (McAfee), Know Your Digital Enemy: Anatomy of a Gh0st RAT, <a href="http://www.mcafee.com/ca/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf" target="_blank" rel="noopener">http://www.mcafee.com/ca/resources/white-papers/foundstone/wp-know-your-digital-enemy.pdf</a>, 2012</p>
<p>Snorre Fagerland (Norman), The many faces of Gh0st Rat, <a href="http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf" target="_blank" rel="noopener">http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf</a>, 2012</p>
<h2>IoCs</h2>
<h3>Samples</h3>
<p><span style="font-weight: 400;">
<table id="tablepress-131" class="tablepress tablepress-id-131">
<thead>
<tr class="row-1 odd">
	<th class="column-1">SHA-1</th><th class="column-2">Type</th><th class="column-3">ESET Detection name</th>
</tr>
</thead>
<tbody class="row-hover">
<tr class="row-2 even">
	<td class="column-1">16d842b8746944cd29cea6237e210be2d185cbe2</td><td class="column-2">DAT file</td><td class="column-3">Win32/Exploit.Ksoft</td>
</tr>
<tr class="row-3 odd">
	<td class="column-1">e2fc91f82b7db3221502d2582ac3be7a5b663498</td><td class="column-2">Win32 PE</td><td class="column-3">Win32/TrojanDownloader.Agent.BGF</td>
</tr>
<tr class="row-4 even">
	<td class="column-1">e440eea118d1701ad7886af6c93ef7102326d4c8</td><td class="column-2">Win32 PE</td><td class="column-3">Win32/Farfli.PZ</td>
</tr>
<tr class="row-5 odd">
	<td class="column-1">d7d65d44657af68ddeba821b4adee6285bcdb418</td><td class="column-2">Win32 PE</td><td class="column-3">Win32/Farfli.PZ</td>
</tr>
<tr class="row-6 even">
	<td class="column-1">6b5095fcd9b230a34f9e51120c36a19908ef3885</td><td class="column-2">Win32 PE</td><td class="column-3">Win32/Farfli.PZ</td>
</tr>
</tbody>
</table>
</span></p>
<h3>Other</h3>
<p><span style="font-weight: 400;">
<table id="tablepress-132" class="tablepress tablepress-id-132">
<tbody class="row-hover">
<tr class="row-1 odd">
	<td class="column-1">Mutex</td><td class="column-2">www.phw2015.comwww.phw2015.comwww.phw2015.com</td>
</tr>
</tbody>
</table>
</span></p>
<h3>Network</h3>
<p><span style="font-weight: 400;">
<table id="tablepress-133" class="tablepress tablepress-id-133">
<thead>
<tr class="row-1 odd">
	<th class="column-1">Host</th><th class="column-2">Port</th><th class="column-3">Description</th>
</tr>
</thead>
<tbody class="row-hover">
<tr class="row-2 even">
	<td class="column-1">www.phw2015.com</td><td class="column-2">2015</td><td class="column-3">Gh0stRAT C&amp;C server</td>
</tr>
<tr class="row-3 odd">
	<td class="column-1">www.biless.com</td><td class="column-2">80</td><td class="column-3">Used to dowload the Gh0st RAT payload</td>
</tr>
</tbody>
</table>
</span></p>
<p>See also:</p>
<ul>
<li>Emerging Threat’s snort rule</li>
</ul>
<p>2809928 &#8211; ETPRO TROJAN PCRat/Gh0st CnC Beacon Request (A1CEA) (trojan.rules)</p>

                            
                                                            <div class="dot">
                                    <span class="icomoon icon-icon_article_dot"></span>
                                </div>

                                <div class="meta">
                                    <div class="wls-authors wls-authors-footer">
                                                <div class="wls-author">
                        <div class="wls-author-name">
                <a href="https://www.welivesecurity.com/author/marc-etienne/" title="Marc-Etienne M.Léveillé">
                    Marc-Etienne M.Léveillé                </a>
            </div>
        </div>
                                            </div>
                                    <span class="strong">
								        <time datetime="2015-10-20 12:49:21">20 Oct 2015 - 12:49PM</time>
                                    </span>
                                </div>
                            
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text"><em>Sign up to receive an email update whenever a new article is published in our <a href="https://www.welivesecurity.com/category/ukraine-crisis-digital-security-resource-center/" target="_blank" rel="noopener">Ukraine Crisis – Digital Security Resource Center</a></em></span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="TOPIC" value="We Live Security Ukraine Newsletter">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="button-flag">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>
                                <div class="widgets row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="heading-line col-md-12 col-sm-12 col-xs-12 no-padding">
                <h3><span class="text">Newsletter</span></h3>
            </div>
        </div>
        <div class="col-md-6 col-sm-6 col-xs-12 newsletter-wrapper">
            <form action="https://enjoy.eset.com/pub/rf" class="basic-searchform col-md-12 col-sm-12 col-xs-12 no-padding newsletter" method="post" role="search">
                <div class="search-input clearfix">
                    <input type="text" name="EMAIL_ADDRESS_" value="" placeholder="Email...">
                    <input type="hidden" name="NEWSLETTER" value="We Live Security">

                    <input type="hidden" name="_ri_" value="X0Gzc2X%3DAQpglLjHJlTQGgXv4jDGEK4KW2uhw0qgUzfwuivmOJOPCgzgo9vsI3VwjpnpgHlpgneHmgJoXX0Gzc2X%3DAQpglLjHJlTQGzbD6yU2pAgzaJM16bkTA7tOwuivmOJOPCgzgo9vsI3">
                    <input type="hidden" name="_ei_" value="Ep2VKa8UKNIAPP_2GAEW0bY">
                    <input type="hidden" name="_di_" value="m0a5n0j02duo9clmm4btuu5av8rdtvqfqd03v1hallrvcob47ad0">
                    <input type="hidden" name="EMAIL_PERMISSION_STATUS_" value="O">
                    <input type="hidden" name="CONTACT_SOURCE_MOST_RECENT" value="WLS_Subscribe_Form">
                    <button class="">
                        Submit                    </button>
                </div>
            </form>
        </div>
    </div>

                                                            <div class="similar-articles row">
                                    <div class="heading-line col-md-12 col-sm-12 col-xs-12">
                                        <h3><span class="text">Similar Articles</span></h3>
                                    </div>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/threats/" class="category-tag-btn">Threats</a>                                                <a href="https://www.welivesecurity.com/2019/09/12/vulnerability-instagram-private-information/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2019/09/vulnerabilidad-instagram-expone-informacion-usuarios.jpg"
                                                         alt="Multi&#8209;stage exploit installing trojan">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2019/09/12/vulnerability-instagram-private-information/">
                                                    A vulnerability in Instagram exposes personal information of users                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/threats/" class="category-tag-btn">Threats</a>                                                <a href="https://www.welivesecurity.com/2018/03/28/scanning-qr-codes-ios-11s/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2018/03/qrcode-623x425.jpeg"
                                                         alt="Multi&#8209;stage exploit installing trojan">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2018/03/28/scanning-qr-codes-ios-11s/">
                                                    Be wary when scanning QR codes with iOS 11's camera app                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/threats/" class="category-tag-btn">Threats</a>                                                <a href="https://www.welivesecurity.com/2016/12/06/service-providers-indirect-damage/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2016/12/service-providers-mobile-world-congress-623x410.jpg"
                                                         alt="Multi&#8209;stage exploit installing trojan">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2016/12/06/service-providers-indirect-damage/">
                                                    Indirect damage: Why service providers should care about customer security                                                </a>
                                            </h4>
                                        </article>
                                                                            <article class="col-md-3 col-sm-3 col-xs-3">
                                            <div class="img-wrapper">
                                                <a href="https://www.welivesecurity.com/category/threats/" class="category-tag-btn">Threats</a>                                                <a href="https://www.welivesecurity.com/2016/06/02/crouching-tiger-hidden-dns/"
                                                   class="related-article-thumb">
                                                    <img class="col-xs-12 no-padding clickable"
                                                         src="https://www.welivesecurity.com/wp-content/uploads/2016/05/Imagentle-623x410.jpg"
                                                         alt="Multi&#8209;stage exploit installing trojan">
                                                </a>
                                            </div>
                                            <h4>
                                                <a href="https://www.welivesecurity.com/2016/06/02/crouching-tiger-hidden-dns/">
                                                    Crouching Tiger, Hidden DNS                                                </a>
                                            </h4>
                                        </article>
                                                                    </div>
                            
                            <div class="comments row">
                                <div class="heading-line col-xs-12">
                                    <h3><span class="text">Discussion</span></h3>
                                                                            
<div id="disqus_thread"></div>
                                                                    </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    	</div> 	<footer id="site-footer">
		<div class="container">
			<div class="row">
				<div class="col-md-2">
                    <div class="hidden-sm hidden-xs">
                        <div class="logo-wrapper footer clearfix">
                            <div class="dark clearfix">
                                <a href="https://www.welivesecurity.com/" class="wls">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-1.svg" alt="Welivesecurity.com">
                                </a>
                                <a href="https://www.eset.com" class="eset">
                                    <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-footer-2.svg" alt="by ESET">
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="hidden-lg hidden-md">
                        <div class="logo-wrapper clearfix">
    <div class="dark clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-dark-header-2.svg" alt="by ESET">
        </a>
    </div>
    <div class="light clearfix">
        <a href="https://www.welivesecurity.com/" class="wls">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-1.svg" alt="Welivesecurity.com">
        </a>
        <a href="https://www.eset.com" class="eset">
            <img src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/img/new-logo/eset-wls-light-header-2.svg" alt="by ESET">
        </a>
    </div>
</div>                    </div>
				</div>
				<nav id="footer" class="clearfix">
											<div class="mobile-block">
																<div class="col-md-2 col-md-offset-2">
										<ul>
																							<li>
													<a href="/">Home</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/about-us/">About Us</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/contact-us/">Contact Us</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/sitemap/">Sitemap</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/our-experts/">Our Experts</a>
												</li>
																							<li>
													<a href="https://eset.com">ESET</a>
												</li>
																					</ul>
									</div>
													</div>
											<div class="mobile-block">
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/research/">Research</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/category/how-to/">How To</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/categories/">Categories</a>
												</li>
																					</ul>
									</div>
																<div class="col-md-2 ">
										<ul>
																							<li>
													<a href="https://www.welivesecurity.com/rss-configurator/">RSS Configurator</a>
												</li>
																							<li>
													<a href="https://www.welivesecurity.com/news-widget-generator/">News Widget</a>
												</li>
																					</ul>
									</div>
													</div>
									</nav>
			</div>
			<div class="row">
				<div class="col-md-12 legal clearfix">
					<div class="wrap clearfix">
													<span>
								<a href="https://www.welivesecurity.com/privacy/">
									Privacy Policy								</a>
							</span>
													<span>
								<a href="https://www.welivesecurity.com/legal-information/">
									Legal Information								</a>
							</span>
											</div>
					<span class="copyright pull-right">Copyright &copy; ESET, All Rights Reserved</span>
				</div>
							</div>
		</div>
	</footer>
	
	<button id="back-to-top" class="animated-scroll" data-target="absoluteTop">
		<span class="icomoon icon-icon_arrow"></span>
		<span class="text">Back to top</span>
	</button>

			<div class="social-wrapper-mobile hidden-lg hidden-md hidden-sm" id="mobile-article-sharer">
			<div class="col-xs-12">
				<div class="icons" style="text-align: center;">
											<a class="share-facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.welivesecurity.com%2F2015%2F10%2F20%2Fmulti-stage-exploit-installing-trojan%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Facebook">
							<span class="icomoon icon-icon_fb"></span>
						</a>
											<a class="share-twitter" href="https://twitter.com/intent/tweet?https%3A%2F%2Fwww.welivesecurity.com%2F2015%2F10%2F20%2Fmulti-stage-exploit-installing-trojan%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Twitter">
							<span class="icomoon icon-icon_tw"></span>
						</a>
											<a class="share-linkedin" href="https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.welivesecurity.com%2F2015%2F10%2F20%2Fmulti-stage-exploit-installing-trojan%2F" target="blank" data-toggle="tooltip" data-placement="top" data-original-title="Share on Linkedin">
							<span class="icomoon icon-icon_in"></span>
						</a>
									</div>
			</div>
		</div>
	
	<script>
		var baseUrl = "https://www.welivesecurity.com/";
	</script>
	
			<script>
            !function(){if(-1==window.document.cookie.indexOf("user_rec=1")){function e(e,o){var t=document.createElement("img");t.setAttribute("style","display:none"),t.src=e+o,window.document.body.appendChild(t)}function o(){d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Default%20status&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=defaultStatus&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c)}function t(){console.log("GA and GTM are loaded."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=11",e(u,a),e(s,c)}function n(){var e=new Date;e.setTime(e.getTime()+63072e6);var o="expires="+e.toUTCString();window.document.cookie="user_rec=1; "+o+"; path=/"}var d,a,c,i,r,l="UA-76266002-27",g=window.location.href,s="https://cdn1.esetstatic.com/ESET/INT/assets/img/check.png",u="https://www.google-analytics.com/collect",w="wls",m=0,h=function e(){i=window.ga&&ga.create?1:0,r=window.google_tag_manager?1:0,m++,console.log("Timer: ",m),h=setTimeout(e,500)};window.document.addEventListener&&(d=1e6*Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=Script%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=scriptLoaded&z="+Math.floor(1e6*Math.random(0,1)),e(u,a),e(s,c),window.addEventListener("beforeunload",o),window.ga&&ga.create&&window.google_tag_manager?(t(),window.removeEventListener("beforeunload",o),n()):(setTimeout(h,500),setTimeout(function(){clearTimeout(h),i&&r?t():i&&!r?(console.log("GA is loaded and GTM is blocked."),d=ga.getAll()[0].get("clientId"),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20loaded,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=10",e(u,a),e(s,c)):!i&&r?(console.log("GA is blocked and GTM is loaded."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20loaded&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=01",e(u,a),e(s,c)):i||r||(console.log("GA is blocked and GTM is blocked."),d||Math.random(1e6,9999999),a="?v=1&cid="+d+"&tid="+l+"&dl="+g+"&t=event&ec=Tracking%20check%20-%20recurring&ea=GA%20blocked,%20GTM%20blocked&ni=1&cd1="+w+"&aip=1&z="+Math.floor(1e6*Math.random(0,1)),c="?country=wls&gcode=00",e(u,a),e(s,c)),window.removeEventListener("beforeunload",o),n()},1e4)))}}();
		</script>
	
	<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/js/main.js?id=fef3139dcedd23afc232"></script>
    <!-- Version: v1.9.0.9dc53e.pro.awus -->
    		<script type="text/javascript">
			var disqus_config = function () { 
				this.language = "en";
			};
			var CrayonSyntaxSettings = {"version":"_2.7.2_beta","is_admin":"0","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":"", "numsVisible": false};
			var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
		</script>
		<script src="https://www.welivesecurity.com/wp-content/themes/eset-wls-2018/assets/static/js/crayon.min.js"></script>

			
		
    <script>
    	Main.init();
    </script>

    <script type='text/javascript'>
/* <![CDATA[ */
var countVars = {"disqusShortname":"welivesecurity"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_count.js?ver=3.0.16'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var embedVars = {"disqusConfig":{"integration":"wordpress 3.0.16"},"disqusIdentifier":"70734 \/?p=70734","disqusShortname":"welivesecurity","disqusTitle":"Multi\u2011stage exploit installing trojan","disqusUrl":"https:\/\/www.welivesecurity.com\/2015\/10\/20\/multi-stage-exploit-installing-trojan\/","postId":"70734"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/disqus-comment-system/public/js/comment_embed.js?ver=3.0.16'></script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-includes/js/jquery/jquery.js?ver=1.12.4'></script>
<script type='text/javascript' src='https://www.welivesecurity.com/wp-content/plugins/tablepress/js/jquery.datatables.min.js?ver=1.9.1'></script>
<script type="text/javascript">
jQuery(document).ready(function($){
$('#tablepress-128').dataTable({"stripeClasses":["even","odd"],"ordering":false,"paging":false,"searching":false});
$('#tablepress-129').dataTable({"stripeClasses":["even","odd"],"ordering":false,"paging":false,"searching":false});
$('#tablepress-130').dataTable({"stripeClasses":["even","odd"],"ordering":false,"paging":false,"searching":false});
$('#tablepress-131').dataTable({"stripeClasses":["even","odd"],"ordering":false,"paging":false,"searching":false});
$('#tablepress-133').dataTable({"stripeClasses":["even","odd"],"ordering":false,"paging":false,"searching":false});
});
</script>    <script src="https://assets.esetstatic.com/3PR/app.min.js"></script>
  </body>
</html>
