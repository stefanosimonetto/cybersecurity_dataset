<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<script type="text/javascript">var BOOTSTRAP_VERSION ="lumen";
	var BOOTSTRAP_JS_HEAD =1;
	var BOOTSTRAP_CDN_ENABLE =0; var BOOTSTRAP_NAVBAR_TYPE =0; var BOOTSTRAP_LOGO_OPTION =0; var BOOTSTRAP_NAVBAR =1; var BootstrapInputFix =true;var BootstrapNavbarLineHeightFix =true;var BOOTSTRAP_EDT= 0; </script>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>Virus Bulletin :: Alternative communication channel over NTP</title>
<meta name="description" content="Nikolaos Tsapakis explores Network Time Protocol (NTP) as an alternative communication channel, providing practical examples, code, and the basic theory behind the idea." />
<meta name="generator" content="concrete5 - 5.6.3.5" />
<script type="text/javascript">
var CCM_DISPATCHER_FILENAME = '/index.php';var CCM_CID = 6495;var CCM_EDIT_MODE = false;var CCM_ARRANGE_MODE = false;var CCM_IMAGE_PATH = "/concrete/images";
var CCM_TOOLS_PATH = "/index.php/tools/required";
var CCM_BASE_URL = "https://www.virusbulletin.com";
var CCM_REL = "";

</script>
<link rel="shortcut icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="icon" href="/files/8914/5459/9485/VBIcon.png" type="image/x-icon" />
<link rel="stylesheet" type="text/css" href="/concrete/css/ccm.base.css" />
<script type="text/javascript" src="/concrete/js/jquery.js"></script>
<script type="text/javascript" src="/concrete/js/ccm.base.js"></script>
<script type="text/javascript">
var COOKIES_ALLOWED=false;
</script>
<link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure.css" />
<!--[if lte IE 8]><link rel="stylesheet" type="text/css" href="/packages/free_cookies_disclosure/css/cookies_disclosure_ie.css" /><![endif]-->
<script type="text/javascript">
var COOKIES_DISCLOSURE_HIDE_INTERVAL=10;
</script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_hide.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/lumen/bootstrap-overwrites.css" />
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/css/members.css" />
<script type="text/javascript" src="/packages/bootstrap/js/common/prettify.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/jquery.easing.1.3.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/bootstrap.min.js"></script>
<link rel="stylesheet" type="text/css" href="/libraries/css/jquery.fancybox.css" />
<script type="text/javascript" src="/libraries/js/jquery.fancybox.pack.js"></script>
<link rel="stylesheet" media="screen" type="text/css" href="/files/cache/css/bootstrap/typography.css" />
<script type="text/javascript" src="/index.php/tools/packages/free_cookies_disclosure/disclosure_i18n_js"></script>
<script type="text/javascript" src="/packages/free_cookies_disclosure/js/disclosure_ajax_form.js"></script>
<link rel="stylesheet" type="text/css" href="/concrete/blocks/page_list/view.css" />
<link rel="stylesheet" type="text/css" href="/blocks/expand_collapse_toc/templates/vbexpand/view.css" />
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.color.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/jquery.ba-hashchange.js"></script>
<script type="text/javascript" src="/blocks/expand_collapse_toc/js/expand.js"></script>
<link rel="stylesheet" type="text/css" href="/packages/bootstrap/blocks/search/templates/VB_global_search/view.css" />
<link rel="stylesheet" type="text/css" href="/packages/travisn_spacer/css/ccm.tnspacer.css" />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css" integrity="sha384-T8Gy5hrqNKT+hzMclPo118YTQO6cYprQmhrYwIiQ/3axmI1hQomh7Ud2hPOy8SP1" crossorigin="anonymous">

<script src="https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.js" integrity="sha256-1SFdTXlsw0RkQ+iO0E91LDshGiIbPiTYqJto0px4wds=" crossorigin="anonymous"></script>
<!--[if gte IE 9]>
<script src="/packages/bootstrap/js/common/modernizr.js"></script>
<![endif]-->

<!--[if lt IE 9]>	
	
	<script src="/packages/bootstrap/js/common/html5shiv.js"></script>
	<script src="/packages/bootstrap/js/common/respond.min.js"></script>
	
<![endif]-->
</head>
<body data-spy="scroll" data-target=".bs-sidebar">

<div class="navbar  navbar-fixed-top navbar-default  bs-docs-nav">
<div class="navbar-inner">
<div class="container"><div class="row"><div class="col-sm-4 col-md-4 logo-position-1 col-logo">
<div class="navbar-header">
<button type="button" class="navbar-toggle btn_navbar_custom">
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button><div class="mobile-clearfix"></div><div class="navbar-brand navbar-brand-area"><a href="/"><img border="0" class="ccm-image-block" alt="" src="/files/4614/4535/7515/logo-big.png" width="339" height="92" /></a></div> </div>
</div><div class="col-sm-8 col-md-8 logo-position-1 col-nav"> <div class="nav-collapse collapse nav_collapse_custom navbar-collapse"> <div style="clear:both"></div>
<div class="vb-global-search-div">
<form action="/index.php/global-search-results/" method="get">
<fieldset>
<input name="search_paths[]" type="hidden" value="" />
<input name="query" type="text" class="vb-global-search" placeholder="Search site..." />
<input name="submit" type="submit" value="Search!" style="display:none" />
</fieldset>
</form>
</div>
<div class="tnSpacer" style="height:48px"></div>
<ul class="nav nav-pills"><li class=" nav-first nav-item-6299"><a href="/newsletter/" target="_self" class=" nav-first nav-item-6299 ">Newsletter</a></li><li class=" nav-item-260"><a href="/conference/" target="_self" class=" nav-item-260 ">VB Conference</a></li><li class=" nav-item-166"><a href="/testing/" target="_self" class=" nav-item-166 ">VB Testing</a></li><li class=" nav-path-selected active nav-item-160"><a href="/virusbulletin/" target="_self" class=" nav-path-selected active nav-item-160 ">Bulletin</a></li><li class=" nav-last nav-item-130"><a href="/blog/" target="_self" class=" nav-last nav-item-130 ">Blog</a></li></ul> </div>
</div>
</div><div class="clearfix"></div>
</div>
</div>
</div>
<div class="navbar-top-fixed-space "><div class="clearfix"></div></div>

<div class="container m-top-20">
<div class="row">
<div class="col-md-9 col-sm-9 col-lg-9">
<h1><a class="chapter" name="h1-alternative-communication-channel-over-ntp"></a>Alternative communication channel over NTP </h1>
<h3><a class="chapter" name="h3-nikolaos-tsapakis"></a>Nikolaos Tsapakis </h3>
<p>Independent researcher</p>
<hr />
<p> </p>
<div class="ccm-expand-collapse-toc">
<div id="ccm-expand-collapse-toc-title-14255" class="ccm-expand-collapse-toc-title ccm-expand-collapse-toc-closed" data-expander-speed="500">Table of contents</div><div id="ccm-expand-collapse-toc-content-14255" class="ccm-expand-collapse-toc-content"><p><a class="toc-level2" href="#h2-1-introduction">1. Introduction</a><br /> <a class="toc-level2" href="#h2-2-covert-channels">2. Covert channels</a><br /> <a class="toc-level2" href="#h2-3-basic-ntp-communication">3. Basic NTP communication</a><br /> <a class="toc-level2" href="#h2-4-ntp-v4-message-format">4. NTP v4 Message Format</a><br /> <a class="toc-level2" href="#h2-5-constructing-ntp-v4-request">5. Constructing NTP v4 Request</a><br /> <a class="toc-level2" href="#h2-6-testing-multiple-time-servers">6. Testing multiple time servers</a><br /> <a class="toc-level2" href="#h2-7-detection">7. Detection</a><br /> <a class="toc-level2" href="#h2-8-custom-protocol-inside-ntp">8. A custom protocol inside NTP</a><br /> <a class="toc-level2" href="#h2-9-conclusion">9. Conclusion</a><br /> <a class="toc-level2" href="#h2-10-references">10. References</a><br /><a class="toc-level2" href="#h2-appendix">11. Appendix</a></p><p>&nbsp;</p></div></div>
<h2><a class="chapter" name="h2-1-introduction"></a>1. Introduction</h2>
<p>In this article I will explore Network Time Protocol (NTP) as an alternative communication channel. Although there are already some interesting publications on this topic [<a href="#ref1">1</a>, <a href="#ref2">2</a>], this article will provide practical examples, code, and the basic theory behind the idea.</p>
<p> </p>
<h2><a class="chapter" name="h2-2-covert-channels"></a>2. Covert channels</h2>
<p>In computer security, a covert channel is a type of attack that creates the ability to transfer information objects between processes that, according to the computer security policy, are not supposed to be allowed to communicate [<a href="#ref3">3</a>].</p>
<p>An example of such a communication channel is DNS, which has been abused by malware in order to hide network traffic between client (infected computer) and server (command and control). One example (among many) of malware that uses DNS as a covert channel is the Denis malware family [<a href="#ref4">4</a>].</p>
<p>Another example of such a communication channel is ICMP, which has also been abused in the past by malware [<a href="#ref5">5</a>].</p>
<p>The NTP protocol may also be used to carry data and, as such, it may be open to exploitation in a similar way to DNS and ICMP.</p>
<p>To widen the idea, any protocol that provides space for data may be used as a starting point for similar exploitation as long as both client and server follow the format specification and avoid inconsistencies.</p>
<p> </p>
<h2><a class="chapter" name="h2-3-basic-ntp-communication"></a>3. Basic NTP communication</h2>
<p>The Network Time Protocol (NTP) is a networking protocol for clock synchronization between computer systems over packet-switched, variable-latency data networks [<a href="#ref6">6</a>].</p>
<p>I will generate a basic NTP request and response on a WinOS machine and explain what such basic communication represents. Assuming that the clock of the client has a date of 3 March 2019, clicking 'Update Now' in the Internet Time Settings will result in the client sending an NTP request to the time server. Such a default server would be time.windows.com. The server will reply with an NTP message which contains time measurements. Those measurements will drive the clock synchronization.</p>
<pre>&gt; Request<br />Network Time Protocol (NTP Version 3, client)<br />    Flags: 0xdb, Leap Indicator: unknown (clock unsynchronized),<br />        Version number: NTP Version 3, Mode: client<br />     Peer Clock Stratum: unspecified or invalid (0)<br />    Peer Polling Interval: 10 (1024 sec)<br />    Peer Clock Precision: 0.015625 sec<br />    Root Delay: 0.198867797851563 seconds<br />    Root Dispersion: 8.80982971191406 seconds<br />    Reference ID: NULL<br />    Reference Timestamp: Mar 3, 2019 18:54:23.652902999 UTC<br />    Origin Timestamp: Jan 1, 1970 00:00:00.000000000 UTC<br />    Receive Timestamp: Jan 1, 1970 00:00:00.000000000 UTC<br />    Transmit Timestamp: Mar 3, 2019 18:55:13.480902999 UTC</pre>
<pre>&gt; Request (in hex)<br />db 00 0a fa 00 00 32 e9 00 08 cf 51 00 00 00 00<br />e0 26 a1 5f a7 24 a6 a8 00 00 00 00 00 00 00 00<br />00 00 00 00 00 00 00 00 e0 26 a1 91 7b 1c 75 81</pre>
<pre>&gt; Response<br />Network Time Protocol (NTP Version 3, server)<br />    Flags: 0x1c, Leap Indicator: no warning, Version number: NTP Version 3,<br />        Mode: server<br />        00.. .... = Leap Indicator: no warning (0)<br />        ..01 1... = Version number: NTP Version 3 (3)<br />        .... .100 = Mode: server (4)<br />    Peer Clock Stratum: secondary reference (2)<br />    Peer Polling Interval: 10 (1024 sec)<br />    Peer Clock Precision: 0.000000 sec<br />    Root Delay: 0.131500244140625 seconds<br />    Root Dispersion: 0.0191650390625 seconds<br />    Reference ID: 128.138.141.172<br />    Reference Timestamp: Mar 6, 2019 18:51:40.408170399 UTC<br />    Origin Timestamp: Mar 3, 2019 18:55:13.480902999 UTC<br />    Receive Timestamp: Mar 6, 2019 18:55:05.080168299 UTC<br />    Transmit Timestamp: Mar 6, 2019 18:55:05.080171299 UTC</pre>
<pre>&gt; Response (in hex)<br />1c 02 0a e9 00 00 21 aa 00 00 04 e8 80 8a 8d ac<br />e0 2a 95 3c 68 7d da f7 e0 26 a1 91 7b 1c 75 81<br />e0 2a 96 09 14 85 e8 e2 e0 2a 96 09 14 86 1b 37</pre>
<p>In the basic operation of the protocol a client sends a packet to a server and records the time the packet left the client in the Origin Timestamp field (T1).</p>
<p style="padding-left: 30px;">T1 = Mar 3, 2019 18:55:13.480902999 UTC (as seen in response).</p>
<p>The server records the time the packet was received in the Receive Timestamp (T2).</p>
<p style="padding-left: 30px;">T2 = Mar 6, 2019 18:55:05.080168299 UTC (as seen in response).</p>
<p>A response packet is then assembled with the original Origin Timestamp and the Receive Timestamp equal to the packet receive time, and then the Transmit Timestamp is set to the time at which the message is passed back toward the client (T3).</p>
<p style="padding-left: 30px;">T3 = Mar 6, 2019 18:55:05.080168299 UTC (as seen in response).</p>
<p>The client then records the time the packet arrived (T4), giving the client four time measurements. These four parameters are passed into the client’s timekeeping function to drive the clock synchronization function [<a href="#ref7">7</a>].</p>
<p>Note that the Destination Timestamp field is not included as a header field; it is determined upon arrival of the packet and made available in the packet buffer data structure [<a href="#ref8">8</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-4-ntp-v4-message-format"></a>4. NTP v4 Message Format</h2>
<p>Figure 1 shows the packet format for NTP v4 [<a href="#ref8">8</a>].</p>
<pre><br />0                   1                   2                   3<br />0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|LI | VN  |Mode |    Stratum     |     Poll      |  Precision   |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                         Root Delay                            |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                         Root Dispersion                       |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                          Reference ID                         |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />+                     Reference Timestamp (64)                  +<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />+                      Origin Timestamp (64)                    +<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />+                      Receive Timestamp (64)                   +<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />+                      Transmit Timestamp (64)                  +<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />.                                                               .<br />.                    Extension Field 1 (variable)               .<br />.                                                               .<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />.                                                               .<br />.                    Extension Field 2 (variable)               .<br />.                                                               .<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                          Key Identifier                       |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                                                               |<br />|                            dgst (128)                         |<br />|                                                               |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre>
<p class="centered-caption">Figure 1: Packet format for NTP v4.</p>
<p>Figure 2 shows the NTP timestamp format used for Timestamp fields [<a href="#ref8">8</a>].</p>
<pre>0                   1                   2                   3<br />0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                            Seconds                            |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                            Fraction                           |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre>
<p class="centered-caption">Figure 2: NTP timestamp format used for Timestamp fields.</p>
<p>The format may be compared with the generated messages shown in Section 3.</p>
<p>Notice that the Extension Field is missing from the generated messages in Section 3. This is an interesting field, which is described as follows [<a href="#ref8">8</a>]:</p>
<p style="padding-left: 30px;">'In NTPv4, one or more extension fields can be inserted after the header and before the MAC, which is always present when an extension field is present.'</p>
<p>This means that I should be able to add an Extension field and place data for tranfer to the server inside the Extension Field. I should also add a message authentication code (MAC) consisting of the Key Identifier field and Message Digest (dgst) field.</p>
<p>Figure 3 shows the Extension Field format [<a href="#ref9">9</a>].</p>
<pre>0                   1                   2                   3<br />0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|          Field Type           |            Length             |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />.                                                               .<br />.                            Value                              .<br />.                                                               .<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br />|                       Padding (as needed)                     |<br />+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre>
<p class="centered-caption">Figure 3: Extension Field format.</p>
<p>Figure 4 shows the NTP Extension Field Type format and values [<a href="#ref9">9</a>].</p>
<pre>0                   1<br />0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5<br />+---------------+---------------+<br />|R|E|      Code |       Type    |<br />+-------------------------------+<br /><br />+------------+----------------------------------------------+<br />| Field Type |  Meaning                                     |<br />+------------+----------------------------------------------+<br />|   0x0000   | crypto-NAK (with Field Length of 0)          |<br />|   0x0000   | RESERVED: Permanently Unassigned             |<br />|   0x0001   | RESERVED: Unassigned                         |<br />|   0x0002   | Autokey: No-Operation Request                |<br />|   0x8002   | Autokey: No-Operation Response               |<br />|   0x0102   | Autokey: Association Message Request         |<br />|   0x8102   | Autokey: Association Message Response        |<br />|   0x0202   | Autokey: Certificate Message Request         |<br />|   0x8202   | Autokey: Certificate Message Response        |<br />|   0x0302   | Autokey: Cookie Message Request              |<br />|   0x8302   | Autokey: Cookie Message Response             |<br />|   0x0402   | Autokey: Autokey Message Request             |<br />|   0x8402   | Autokey: Autokey Message Response            |<br />|   0x0502   | Autokey: Leapseconds Value Message Request   |<br />|   0x8502   | Autokey: Leapseconds Value Message Response  |<br />|   0x0602   | Autokey: Sign Message Request                |<br />|   0x8602   | Autokey: Sign Message Response               |<br />|   0x0702   | Autokey: IFF Identity Message Request        |<br />|   0x8702   | Autokey: IFF Identity Message Response       |<br />|   0x0802   | Autokey: GQ Identity Message Request         |<br />|   0x8802   | Autokey: GQ Identity Message Response        |<br />|   0x0902   | Autokey: MV Identity Message Request         |<br />|   0x8902   | Autokey: MV Identity Message Response        |<br />|   0x0005   | Checksum Complement                          |<br />|   0x2005   | Checksum Complement (deprecated flag 0x2000) |<br />+------------+----------------------------------------------+</pre>
<p><span class="centered-caption">Figure 4: NTP Extension Field Type format and values.</span></p>
<p>Taking into consideration the above format, I will construct an NTP v4 message and send it to a publicly available time server. The server should be able to reply. Both messages should be visible in my <em>Wireshark</em> session. Neither message should break the protocol format.</p>
<p> </p>
<h2><a class="chapter" name="h2-5-constructing-ntp-v4-request"></a>5. Constructing NTP v4 Request</h2>
<p>Taking into consideration the protocol format and the generated NTP traffic from Section 3, I wrote a Python script which constructs NTP v4 requests and sends them to a publicly available server. After sending a request, the script waits for a reply. After a reply arrives, the script sleeps for a few seconds and then sends the next request. All requests are similar. The script generates random data for the Extension Field and MAC fields. The size of data in the Extension Field is also random from a minimum to a maximum limit. The script is shown in the Appendix. Comments make it easier to understand the script.</p>
<p> </p>
<h2><a class="chapter" name="h2-6-testing-multiple-time-servers"></a>6. Testing multiple time servers</h2>
<p>I tested the script against multiple time servers [<a href="#ref10">10</a>]. Some of them did not respond at all, while others responded. An increase in the data size in the Extension Field (1K and above) may cause some servers to stop responding after sending a few requests. A decrease in sleep among requests may also cause some servers to stop responding after sending a few requests.</p>
<p>Overall, it appears that the messages were arriving at the servers without breaking the protocol and without being blocked, since the servers were responding.</p>
<p>This indicates that such generated network traffic can be used for tranferring data from source (client) to destination (custom server) without being blocked. And for the case of a custom server, responses would continue to be sent down to the client, since the custom server configuration which serves the purposes of the client would apply.</p>
<p> </p>
<h2><a class="chapter" name="h2-7-detection"></a>7. Detection</h2>
<p>The following is the Snort rule that would detect NTP messages like those generated by the script in Section 5. In case the monitoring system is a gate/proxy, the rule should be modified and applied for both incoming and outgoing traffic. Note that the rule was tested on a VM and the script was generating traffic with bad checksums. I used the following command to start Snort on test system:</p>
<pre>snort -i 1 -c c:\Snort\etc\snort.conf -A console -k none</pre>
<p>Notice the -k option, which means that Snort will process the packets with invalid checksums.</p>
<pre>alert udp any any -&gt; any 123 (dsize:&gt;68; content:"|01 00|";<br />depth:2; offset:48; msg:"Suspicious Incoming NTP packet"; sid:1000005;)</pre>
<ul>
<li>Detects incoming messages to destination port 123.</li>
<li>The size of the message should be more than 68 bytes. The reason for this is that a standard NTP message is 48 bytes long and in case an extension field is present, MAC (here 20 bytes long) is mandatory as per [8] (section 7.5). This results in a minimum size of 68 bytes.</li>
<li>Byte values 0x01 and 0x00 should exist in offsets 48, 49. Those are ext_r_e_version and ext_opcode values. That particular WORD combination is defined as ‘RESERVED: Unassigned’ [<a href="#ref9">9</a>], but it may not really mean anything in the case of a covert channel.</li>
</ul>
<p>As it may be easily understood, this rule <em>should</em> be changed in case different values are used. In such a case an investigation should be performed to make sure traffic does not originate from a network that uses the NTP extension field for legitimate purposes, for example AutoKey [<a href="#ref9">9</a>].</p>
<p> </p>
<h2><a class="chapter" name="h2-8-custom-protocol-inside-ntp"></a>8. A custom protocol inside NTP</h2>
<p>Taking into consideration that NTP is over UDP [<a href="#ref11">11</a>] and that data should be split into multiple segments (requests), additional rules would apply for proper communication on top of NTP. Some of these rules could be the following:</p>
<ul>
<li>Messages of the custom protocol may exist inside the Extension Field or even in MAC.</li>
<li>There must be an integrity check for Extension Field data.</li>
<li>There must be a sequence number due to multiple segments.</li>
<li>Start/End characters must exist for defining the start/end of stream. For example, assume that a stream is a file being uploaded in multiple segments. That is, multiple NTP requests.</li>
<li>Client would request server to ACK requests.</li>
<li>Server would request client to ACK responses.</li>
<li>There must be encryption of Extension Field data and MAC data.</li>
</ul>
<p> </p>
<h2><a class="chapter" name="h2-9-conclusion"></a>9. Conclusion</h2>
<p>NTP protocol is an interesting case to use as a communication channel because it is widely used, well documented and allowed to flow through networks without applying strict rules. Once again, any protocol that provides space for data may be used as a starting point for similar exploration as long as both client and server follow the specification and avoid inconsistencies.</p>
<p> </p>
<h2><a class="chapter" name="h2-10-references"></a>10. References</h2>
<p><a class=" anchor" name="ref1"></a>[1] <a href="https://ricklahaye.info/projects/ntp.pdf" target="_blank">https://ricklahaye.info/projects/ntp.pdf</a>.</p>
<p><a class=" anchor" name="ref2"></a>[2] <a href="https://www.researchgate.net/publication/316287783_Covert_Channel_over_Network_Time_Protocol" target="_blank">https://www.researchgate.net/publication/316287783_Covert_Channel_over_Network_Time_Protocol</a>.</p>
<p><a class=" anchor" name="ref3"></a>[3] <a href="https://en.wikipedia.org/wiki/Covert_channel" target="_blank">https://en.wikipedia.org/wiki/Covert_channel</a>.</p>
<p><a class=" anchor" name="ref4"></a>[4] <a href="https://securelist.com/use-of-dns-tunneling-for-cc-communications" target="_blank">https://securelist.com/use-of-dns-tunneling-for-cc-communications</a>.</p>
<p><a class=" anchor" name="ref5"></a>[5] <a href="https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-trojan-uses-icmp-packets-to-send-data/" target="_blank">https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-trojan-uses-icmp-packets-to-send-data/</a>.</p>
<p><a class=" anchor" name="ref6"></a>[6] <a href="https://en.wikipedia.org/wiki/Network_Time_Protocol" target="_blank">https://en.wikipedia.org/wiki/Network_Time_Protocol</a>.</p>
<p><a class=" anchor" name="ref7"></a>[7] <a href="https://www.cisco.com/c/en/us/about/press/internet-protocol-journal/back-issues/table-contents-58/154-ntp.html" target="_blank">https://www.cisco.com/c/en/us/about/press/internet-protocol-journal/back-issues/table-contents-58/154-ntp.html</a>.</p>
<p><a class=" anchor" name="ref8"></a>[8] <a href="https://tools.ietf.org/html/rfc5905" target="_blank">https://tools.ietf.org/html/rfc5905</a>.</p>
<p><a class=" anchor" name="ref9"></a>[9] <a href="https://tools.ietf.org/html/draft-stenn-ntp-extension-fields-08" target="_blank">https://tools.ietf.org/html/draft-stenn-ntp-extension-fields-08</a>.</p>
<p><a class=" anchor" name="ref10"></a>[10] <a href="https://www.ntppool.org/zone" target="_blank">https://www.ntppool.org/zone</a>.</p>
<p><a class=" anchor" name="ref11"></a>[11] <a href="https://en.wikipedia.org/wiki/User_Datagram_Protocol" target="_blank">https://en.wikipedia.org/wiki/User_Datagram_Protocol</a>.</p>
<p> </p>
<h2><a class="chapter" name="h2-appendix"></a> 11. Appendix</h2>
<pre>------#------#------#------&lt;START CODE&gt;------#------#------#------<br />import socket<br />import sys<br />import random<br />import time<br />import datetime<br /><br />def main():<br /><br />    try:<br />        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)<br />    except socket.error:<br />        print 'Failed to create socket'<br />        sys.exit()<br /><br />    host = '2.gr.pool.ntp.org'<br />    port = 123<br /><br />    while(True) :<br />        # 0xE3 = 11 100 011b <br />        # li   = 11b  = 3 =&gt; Clock is unsynchronized<br />        # vn   = 100b = 4 =&gt; Version 4<br />        # mode = 011b = 3 =&gt; Client<br />        li_vn_mode = chr(0xE3)<br />        <br />        # Unsynchronized<br />        stratum    = chr(0x10)<br />    <br />        # Suggested default limits for minimum and maximum poll intervals<br />        # are 6 and 10, respectively [4].<br />        poll = chr(0x06)<br />    <br />        # Random, selected in such a way so that it has a small<br />        # value &lt; 1 sec and appears realistic.<br />        precision = chr(random.randint(236,254))<br />    <br />        # Random, selected in such a way so that it has a small<br />        # value &lt; 1 sec and appears realistic.<br />        root_delay = chr(0x00) +\<br />                     chr(0x00) +\<br />                     chr(random.randint(1,9)) +\<br />                     chr(random.randint(1,254))<br />    <br />        # Random, selected in such a way so that it has a small <br />        # value &lt; 1 sec and appears realistic.<br />        root_dispersion = chr(0x00) +\<br />                          chr(0x00) +\<br />                          chr(random.randint(1,9)) +\<br />                          chr(random.randint(1,254))<br />    <br />        # No reference<br />        reference_id = chr(0x00) +\<br />                       chr(0x00) +\<br />                       chr(0x00) +\<br />                       chr(0x00)<br />    <br />        # This is a zero NTP timestamp, assigned later.<br />        zero_timestamp = chr(0x00) +\<br />                         chr(0x00) +\<br />                         chr(0x00) +\<br />                         chr(0x00) +\<br />                         chr(0x00) +\<br />                         chr(0x00) +\<br />                         chr(0x00) +\<br />                         chr(0x00)<br />    <br />        # Get current datetime as NTP timestamp<br />        diff = datetime.datetime.utcnow() -\<br />               datetime.datetime(1900, 1, 1, 0, 0, 0)<br />                      <br />        timestamp = diff.days*24*60*60+diff.seconds<br />        timestamp_1 = timestamp &amp; 0xff000000<br />        timestamp_1 = timestamp_1 &gt;&gt; 24<br />        timestamp_2 = timestamp &amp; 0x00ff0000<br />        timestamp_2 = timestamp_2 &gt;&gt; 16<br />        timestamp_3 = timestamp &amp; 0x0000ff00<br />        timestamp_3 = timestamp_3 &gt;&gt; 8<br />        timestamp_4 = timestamp &amp; 0x000000ff<br />            <br />        # Set to current timestamp minus a small value.<br />        # Keeping it same among packets.<br />        reference_timestamp = chr(timestamp_1) +\<br />                              chr(timestamp_2) +\<br />                              chr(timestamp_3) +\<br />                              chr(0x00) +\<br />                              chr(0x7D) + chr(0x21) +\<br />                              chr(0x73) + chr(0x83)<br />                              <br />        # Set to zero timestamp, since I notice this value been<br />        # set by default when I try to sync time from a Win OS.<br />        originate_timestamp = zero_timestamp<br />        <br />        # Set to zero timestamp, since I notice this value been<br />        # set by default when I try to sync time from a Win OS.<br />        receive_timestamp = zero_timestamp<br />        <br />        # Set to current timestamp<br />        transmit_timestamp = chr(timestamp_1) +\<br />                             chr(timestamp_2) +\<br />                             chr(timestamp_3) +\<br />                             chr(timestamp_4) +\<br />                             chr(random.randint(1,254)) +\<br />                             chr(random.randint(1,254)) +\<br />                             chr(random.randint(1,254)) +\<br />                             chr(random.randint(1,254))<br />                        <br />        # Using unassigned value for basic extension field format.<br />        # <br />        # Field Type = [ext_opcode, ext_r_e_version] =&gt;<br />        # [0x00, 0x01] = 0x0001 = RESERVED: Unassigned<br />        #<br />        # ext_r_e_version = 00000001b =&gt;<br />        # R = 0 (Request), <br />        # E = 0 (OK),<br />        # Version = 000001<br />        #<br />        # ext_opcode = 0x00<br />        ext_r_e_version = chr(0x01)  <br />        ext_opcode = chr(0x00)  <br />        <br />        # Max size of data for extension field<br />        max_size = 500<br />        <br />        # Min size of data for extension field<br />        min_size = 300<br />        <br />        size = random.randint(min_size,max_size)<br />        data = ''<br />        <br />        for x in range(size):<br />            data = data + chr(random.randint(1,254))<br />    <br />        # Padding extension data<br />        pad = size % 4<br />        pad = 4 - pad<br />        size = size + pad + 4<br />    <br />        padding = ''<br />    <br />        while(pad!=0):<br />            padding = padding + chr(0x00)<br />            pad = pad - 1<br />    <br />        a = size &amp; 0x0000ffff<br />        b = a &amp; 0x000000ff<br />        c = a &amp; 0x0000ff00<br />        c = c &gt;&gt; 8<br /><br />        ext_len  = chr(c) + chr(b)<br />        ext_data = data + padding<br />    <br />        # Random since I am not actually going to use it.<br />        # Just making sure NTP message format does not break.<br />        key_id = chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254))<br />    <br />        # Random since I am not actually going to use it.<br />        # Just making sure NTP message format does not break.<br />        digest = chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254)) +\<br />                 chr(random.randint(1,254))<br />    <br />        ext = ext_r_e_version + ext_opcode + ext_len + ext_data<br />    <br />        # Create the NTP packet<br />        msg = li_vn_mode +\<br />              stratum +\<br />              poll +\<br />              precision +\<br />              root_delay +\<br />              root_dispersion +\<br />              reference_id +\<br />              reference_timestamp +\<br />              originate_timestamp +\<br />              receive_timestamp +\<br />              transmit_timestamp +\<br />              ext +\<br />              key_id +\<br />              digest<br />    <br />        print 'Message is : ' + msg<br />    <br />        try :<br />            # Send the NTP packet<br />            s.sendto(msg, (host, port))<br />            <br />            # Wait for reply from sever<br />            d = s.recvfrom(1024)<br />            reply = d[0]<br />            addr = d[1]<br />            print 'Server reply : ' + reply<br />            time.sleep(random.randint(1,3))<br />    <br />        except socket.error, msg:<br />            print 'Error Code : ' + str(msg[0]) + ' Message ' + msg[1]<br />            sys.exit()<br /><br />if __name__ == "__main__":<br />    main()<br />------#------#------#------&lt;END   CODE&gt;------#------#------#------</pre> </div>
<div class="col-md-3 col-sm-3 col-lg-3">
<p><a href="/uploads/pdf/magazine/2019/201904-alternative-communication-channel-ntp.pdf" target="_blank"><img src="/uploads/images/buttons/pdf-download-button.jpg" alt="Download PDF" width="262" height="45" /></a></p>
<div id="NDPHPBlock13359" class="NDPHPBlock">
<div style="width: 100%;"><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Tweet this!' href="https://twitter.com/share?text=Alternative communication channel over NTP&url=https://www.virusbulletin.com/virusbulletin/2019/04/alternative-communication-channel-over-ntp"><img src='/uploads/images/buttons/twitter.png' alt='twitter.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Facebook' href='https://www.facebook.com/sharer.php?u=https://www.virusbulletin.com/virusbulletin/2019/04/alternative-communication-channel-over-ntp'><img src='/uploads/images/buttons/fb.png' alt='fb.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on LinkedIn' href="https://www.linkedin.com/shareArticle?mini=true&url=https://www.virusbulletin.com/virusbulletin/2019/04/alternative-communication-channel-over-ntp&title=Alternative communication channel over NTP"><img src='/uploads/images/buttons/linkedin.png' alt='linkedin.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='Share on Hacker News' href="https://news.ycombinator.com/submitlink?u=https://www.virusbulletin.com/virusbulletin/2019/04/alternative-communication-channel-over-ntp&t=Alternative communication channel over NTP"><img src='/uploads/images/buttons/hackernews.png' alt='hackernews.png' width='45' height='45' class='responsive' /></a></center></div><div style='float: left; width: 20%; margin-left: auto; margin-right: auto; text-align: center;'><center><a target='_blank' title='reddit this!' href="https://www.reddit.com/submit?url=https://www.virusbulletin.com/virusbulletin/2019/04/alternative-communication-channel-over-ntp"><img src='/uploads/images/buttons/reddit.png' alt='reddit.png' width='45' height='45' class='responsive' /></a></center></div></div></div><p> </p>
<h2>Latest articles:</h2>
<div class="ccm-page-list">
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2022/04/cryptojacking-fly-teamtnt-using-nvidia-drivers-mine-cryptocurrency/" target="_self">Cryptojacking on the fly: TeamTNT using NVIDIA drivers to mine cryptocurrency</a>
</h3>
<div class="ccm-page-list-description">
TeamTNT is known for attacking insecure and vulnerable Kubernetes deployments in order to infiltrate organizations&rsquo; dedicated environments and transform them into attack launchpads. In this article Aditya Sood presents a new module introduced by&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/12/collector-stealer-russian-origin-credential-and-information-extractor/" target="_self">Collector-stealer: a Russian origin credential and information extractor</a>
</h3>
<div class="ccm-page-list-description">
Collector-stealer, a piece of malware of Russian origin, is heavily used on the Internet to exfiltrate sensitive data from end-user systems and store it in its C&amp;C panels. In this article, researchers Aditya K Sood and Rohit Chaturvedi present a 360&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/06/fighting-fire-fire/" target="_self">Fighting Fire with Fire</a>
</h3>
<div class="ccm-page-list-description">
In 1989, Joe Wells encountered his first virus: Jerusalem. He disassembled the virus, and from that moment onward, was intrigued by the properties of these small pieces of self-replicating code. Joe Wells was an expert on computer viruses, was partly&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/run-your-malicious-vba-macros-anywhere/" target="_self">Run your malicious VBA macros anywhere!</a>
</h3>
<div class="ccm-page-list-description">
Kurt Natvig wanted to understand whether it&rsquo;s possible to recompile VBA macros to another language, which could then easily be &lsquo;run&rsquo; on any gateway, thus revealing a sample&rsquo;s true nature in a safe manner. In this article he explains how he recompiled&hellip; </div>
<h3 class="ccm-page-list-title">
<a href="/virusbulletin/2021/04/dissecting-design-and-vulnerabilities-azorultccpanels/" target="_self">Dissecting the design and vulnerabilities in AZORult&nbsp;C&amp;C&nbsp;panels</a>
</h3>
<div class="ccm-page-list-description">
Aditya K Sood looks at the command-and-control (C&amp;C) design of the AZORult malware, discussing his team's findings related to the C&amp;C design and some security issues they identified during the research. </div>
</div>
<p><br /><a class="btn btn-block btn-warning" href="/virusbulletin/archive">Bulletin Archive</a></p> </div>
</div>
</div>

<footer class="bs-footer" role="contentinfo">
<div class="container">
<div class="bs-social">
<div class="row ">
<div class="col-md-3">
<p><a title="About Us" href="/about-vb/about-us/">About us</a></p>
<p><a title="Contact Us" href="/about-vb/contact-us/">Contact us</a></p>
<p><a title="Advisory Board" href="/about-vb/advisory-board/">Advisory board</a></p>
<p><a title="Press" href="/about-vb/press/">Press information</a></p>
<p><a title="Security Events Calendar" href="/resources/calendar/">Security events calendar</a></p>
<p><a title="Newsletter" href="/newsletter/">Virus Bulletin newsletter</a></p> </div>
<div class="col-md-3">
<p><a title="VB Testing" href="/testing/">Testing</a></p>
<p><a title="VB100" href="/testing/vb1001/">VB100</a></p>
<p><a title="VBSpam" href="/testing/vbspam/">VBSpam</a></p>
<p><a title="VBWeb" href="/testing/vbweb/">VBWeb</a></p>
<p><a title="Consultancy Services" href="/testing/consultancy-services/">Consultancy services</a></p>
<p><a title="The Spammers' Compendium" href="/resources/spammerscompendium/">Spammers' Compendium</a></p> </div>
<div class="col-md-3">
<p><a title="VB2021 localhost" href="/conference/vb2021/">VB2021 localhost</a></p>
<p><a title="VB2020 localhost" href="/conference/vb2020/">VB2020 localhost</a></p>
<p><a title="VB2019" href="/conference/vb2019/">VB2019 (London)</a></p>
<p><a title="VB2018" href="/conference/vb2018">VB2018 (Montreal)</a></p>
<p><a title="VB2017" href="/conference/vb2017">VB2017 (Madrid)</a></p>
<p><a title="Conference Archive" href="/conference/vb-conference-archive/">Older conferences</a></p> </div>
<div class="col-md-3">
<div class="row">
<table style="float: right;" border="0">
<tbody>
<tr>
<td align="center"><a href="/rss" target="_blank"><img title="Get our blog updates" src="/uploads/images/buttons/rss-square-gray.png" alt="rss.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://twitter.com/virusbtn" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on Twitter" src="/uploads/images/buttons/twitter-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.linkedin.com/company/virus-bulletin" target="_blank"><img class="bhtmbxoyxwpzahwcvxnw" title="Visit us on LinkedIn" src="/uploads/images/buttons/linkedin-square-gray.png" alt="linkedin.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.facebook.com/virusbulletin" target="_blank"><img title="Visit us on Facebook" src="/uploads/images/buttons/fb-square-gray.png" alt="twitter.png" width="35" height="35" /></a></td>
<td> </td>
<td align="center"><a href="https://www.youtube.com/user/virusbtn" target="_blank"><img title="Visit us on Youtube" src="/uploads/images/buttons/youtube-square-gray.png" alt="youtube.png" width="35" height="35" /></a></td>
</tr>
</tbody>
</table>
</div> </div>
</div>
<div class="row ">
<div class="col-md-12">
</div>
</div>
</div>
</div>
</footer>

<footer class="bs-footer2" role="contentinfo">
<div class="container">
<div class="bs-social2">
<div class="row ">
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
<div class="col-md-3">
</div>
</div>
<div class="row ">
<div class="col-md-12">
<p style="text-align: left;">©1989-2022 Virus Bulletin.        <a title="Privacy Policy" href="/about-vb/privacy-policy/">Privacy policy</a>        <a title="Cookies" href="/about-vb/privacy-policy/cookies/">Cookies</a>        <a title="Terms and Conditions" href="/about-vb/terms-and-conditions/">Terms and Conditions</a></p> </div>
</div>
</div>
</div>
</footer>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-21876594-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-21876594-2', { 'anonymize_ip': true });
</script><script type="text/javascript" src="/libraries/js/fancybox.load.js"></script>
<script type="text/javascript" src="/packages/bootstrap/js/common/app.js"></script>
<div id="ccm-cookiesDisclosure" class="disclosure-bottom">
<div class="disclosure-container">
<div class="disclosure-content">
<p> We have placed cookies on your device in order to improve the functionality of this site, as outlined in our <a href="/about-vb/privacy-policy/cookies" target="_blank">cookies policy</a>. However, you may delete and block all cookies from this site and your use of the site will be unaffected. By continuing to browse this site, you are agreeing to Virus Bulletin's use of data as outlined in our <a href="/about-vb/privacy-policy/" target="_blank">privacy policy</a>.</p>
</div>
<div class="disclosure-form">
<form action="/index.php/cookies_disclosure/" method="POST">
<input type="hidden" name="allowCookies" value="1" />
<div class="button">
<input class="btn btn-info btn-sm" type="submit" name="submit" value="I understand. Don't show this message again!" />
</div>
</form>
</div>
<div class="ccm-spacer">&nbsp;</div>
</div>
</div>
</body>
</html>